// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKBridge
#include "LIV/SDK/Unity/SDKBridge.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: LIV.SDK.Unity.SDKTexture
#include "LIV/SDK/Unity/SDKTexture.hpp"
// Including type: LIV.SDK.Unity.SDKApplicationOutput
#include "LIV/SDK/Unity/SDKApplicationOutput.hpp"
// Including type: LIV.SDK.Unity.SDKOutputFrame
#include "LIV/SDK/Unity/SDKOutputFrame.hpp"
// Including type: LIV.SDK.Unity.SDKPlane
#include "LIV/SDK/Unity/SDKPlane.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<LIV.SDK.Unity.SDKInputFrame> _injection_SDKInputFrame
::LIV::SDK::Unity::SDKBridge::SDKInjection_1<::LIV::SDK::Unity::SDKInputFrame> LIV::SDK::Unity::SDKBridge::_get__injection_SDKInputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_SDKInputFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::SDKBridge::SDKInjection_1<::LIV::SDK::Unity::SDKInputFrame>>("LIV.SDK.Unity", "SDKBridge", "_injection_SDKInputFrame"));
}
// Autogenerated static field setter
// Set static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<LIV.SDK.Unity.SDKInputFrame> _injection_SDKInputFrame
void LIV::SDK::Unity::SDKBridge::_set__injection_SDKInputFrame(::LIV::SDK::Unity::SDKBridge::SDKInjection_1<::LIV::SDK::Unity::SDKInputFrame> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_SDKInputFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_SDKInputFrame", value));
}
// Autogenerated static field getter
// Get static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<LIV.SDK.Unity.SDKResolution> _injection_SDKResolution
::LIV::SDK::Unity::SDKBridge::SDKInjection_1<::LIV::SDK::Unity::SDKResolution> LIV::SDK::Unity::SDKBridge::_get__injection_SDKResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_SDKResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::SDKBridge::SDKInjection_1<::LIV::SDK::Unity::SDKResolution>>("LIV.SDK.Unity", "SDKBridge", "_injection_SDKResolution"));
}
// Autogenerated static field setter
// Set static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<LIV.SDK.Unity.SDKResolution> _injection_SDKResolution
void LIV::SDK::Unity::SDKBridge::_set__injection_SDKResolution(::LIV::SDK::Unity::SDKBridge::SDKInjection_1<::LIV::SDK::Unity::SDKResolution> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_SDKResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_SDKResolution", value));
}
// Autogenerated static field getter
// Get static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<System.Boolean> _injection_IsActive
::LIV::SDK::Unity::SDKBridge::SDKInjection_1<bool> LIV::SDK::Unity::SDKBridge::_get__injection_IsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_IsActive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::SDKBridge::SDKInjection_1<bool>>("LIV.SDK.Unity", "SDKBridge", "_injection_IsActive"));
}
// Autogenerated static field setter
// Set static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<System.Boolean> _injection_IsActive
void LIV::SDK::Unity::SDKBridge::_set__injection_IsActive(::LIV::SDK::Unity::SDKBridge::SDKInjection_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_IsActive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_IsActive", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _injection_DisableSubmit
bool LIV::SDK::Unity::SDKBridge::_get__injection_DisableSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_DisableSubmit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("LIV.SDK.Unity", "SDKBridge", "_injection_DisableSubmit"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _injection_DisableSubmit
void LIV::SDK::Unity::SDKBridge::_set__injection_DisableSubmit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_DisableSubmit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_DisableSubmit", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _injection_DisableSubmitApplicationOutput
bool LIV::SDK::Unity::SDKBridge::_get__injection_DisableSubmitApplicationOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_DisableSubmitApplicationOutput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("LIV.SDK.Unity", "SDKBridge", "_injection_DisableSubmitApplicationOutput"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _injection_DisableSubmitApplicationOutput
void LIV::SDK::Unity::SDKBridge::_set__injection_DisableSubmitApplicationOutput(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_DisableSubmitApplicationOutput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_DisableSubmitApplicationOutput", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _injection_DisableAddTexture
bool LIV::SDK::Unity::SDKBridge::_get__injection_DisableAddTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_DisableAddTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("LIV.SDK.Unity", "SDKBridge", "_injection_DisableAddTexture"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _injection_DisableAddTexture
void LIV::SDK::Unity::SDKBridge::_set__injection_DisableAddTexture(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_DisableAddTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_DisableAddTexture", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _injection_DisableCreateFrame
bool LIV::SDK::Unity::SDKBridge::_get__injection_DisableCreateFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_DisableCreateFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("LIV.SDK.Unity", "SDKBridge", "_injection_DisableCreateFrame"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _injection_DisableCreateFrame
void LIV::SDK::Unity::SDKBridge::_set__injection_DisableCreateFrame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_DisableCreateFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_DisableCreateFrame", value));
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.get_IsActive
bool LIV::SDK::Unity::SDKBridge::get_IsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::get_IsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "get_IsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge..cctor
void LIV::SDK::Unity::SDKBridge::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddStringToChannel
int LIV::SDK::Unity::SDKBridge::AddStringToChannel(int slot, ::System::IntPtr str, int length, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddStringToChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddStringToChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, str, length, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.addtexture
int LIV::SDK::Unity::SDKBridge::addtexture(::System::IntPtr sourcetexture, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::addtexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "addtexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcetexture), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourcetexture, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetObjectTimeStamp
uint64_t LIV::SDK::Unity::SDKBridge::GetObjectTimeStamp(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetObjectTimeStamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetObjectTimeStamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetCurrentTimeTicks
uint64_t LIV::SDK::Unity::SDKBridge::GetCurrentTimeTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetCurrentTimeTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetCurrentTimeTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetIsCaptureActive
bool LIV::SDK::Unity::SDKBridge::GetIsCaptureActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetIsCaptureActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetIsCaptureActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetRenderEventFunc
::System::IntPtr LIV::SDK::Unity::SDKBridge::GetRenderEventFunc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetRenderEventFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetRenderEventFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetCompositorChannelObject
::System::IntPtr LIV::SDK::Unity::SDKBridge::GetCompositorChannelObject(int slot, uint64_t tag, uint64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetCompositorChannelObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetCompositorChannelObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, tag, timestamp);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddObjectToCompositorChannel
int LIV::SDK::Unity::SDKBridge::AddObjectToCompositorChannel(int slot, ::System::IntPtr obj, int objectsize, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddObjectToCompositorChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddObjectToCompositorChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(objectsize), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, obj, objectsize, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddObjectToFrame
int LIV::SDK::Unity::SDKBridge::AddObjectToFrame(::System::IntPtr obj, int objectsize, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddObjectToFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddObjectToFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(objectsize), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, objectsize, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.updatinputframe
::System::IntPtr LIV::SDK::Unity::SDKBridge::updatinputframe(::System::IntPtr InputFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::updatinputframe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "updatinputframe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(InputFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, InputFrame);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetViewportTexture
::System::IntPtr LIV::SDK::Unity::SDKBridge::GetViewportTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetViewportTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetViewportTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetChannelObject
::System::IntPtr LIV::SDK::Unity::SDKBridge::GetChannelObject(int slot, uint64_t tag, uint64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetChannelObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetChannelObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, tag, timestamp);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddObjectToChannel
int LIV::SDK::Unity::SDKBridge::AddObjectToChannel(int slot, ::System::IntPtr obj, int objectsize, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddObjectToChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddObjectToChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(objectsize), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, obj, objectsize, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.Tag
uint64_t LIV::SDK::Unity::SDKBridge::Tag(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddString
void LIV::SDK::Unity::SDKBridge::AddString(::StringW tag, ::StringW value, int slot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(slot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag, value, slot);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddTexture
void LIV::SDK::Unity::SDKBridge::AddTexture(::LIV::SDK::Unity::SDKTexture texture, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(tag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetObjectTime
uint64_t LIV::SDK::Unity::SDKBridge::GetObjectTime(::System::IntPtr objectptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetObjectTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetObjectTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectptr)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectptr);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetCurrentTime
uint64_t LIV::SDK::Unity::SDKBridge::GetCurrentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetCurrentTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetCurrentTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.IssuePluginEvent
void LIV::SDK::Unity::SDKBridge::IssuePluginEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::IssuePluginEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "IssuePluginEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.SubmitApplicationOutput
void LIV::SDK::Unity::SDKBridge::SubmitApplicationOutput(::LIV::SDK::Unity::SDKApplicationOutput applicationOutput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::SubmitApplicationOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "SubmitApplicationOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(applicationOutput)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, applicationOutput);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.UpdateInputFrame
bool LIV::SDK::Unity::SDKBridge::UpdateInputFrame(ByRef<::LIV::SDK::Unity::SDKInputFrame> setframe) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::UpdateInputFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "UpdateInputFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(setframe)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(setframe));
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetViewfinderTexture
::LIV::SDK::Unity::SDKTexture LIV::SDK::Unity::SDKBridge::GetViewfinderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetViewfinderTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetViewfinderTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKTexture, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddTexture
void LIV::SDK::Unity::SDKBridge::AddTexture(::LIV::SDK::Unity::SDKTexture texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.CreateFrame
void LIV::SDK::Unity::SDKBridge::CreateFrame(::LIV::SDK::Unity::SDKOutputFrame frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::CreateFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "CreateFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frame);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.SetGroundPlane
void LIV::SDK::Unity::SDKBridge::SetGroundPlane(::LIV::SDK::Unity::SDKPlane groundPlane) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::SetGroundPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "SetGroundPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groundPlane)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groundPlane);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetResolution
bool LIV::SDK::Unity::SDKBridge::GetResolution(ByRef<::LIV::SDK::Unity::SDKResolution> sdkResolution) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sdkResolution)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sdkResolution));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKRender
#include "LIV/SDK/Unity/SDKRender.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: LIV.SDK.Unity.LIV
#include "LIV/SDK/Unity/LIV.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Rendering.ColorWriteMask
#include "UnityEngine/Rendering/ColorWriteMask.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Plane
#include "UnityEngine/Plane.hpp"
// Including type: LIV.SDK.Unity.TEXTURE_ID
#include "LIV/SDK/Unity/TEXTURE_ID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _clipPlaneCommandBuffer
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneCommandBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _combineAlphaCommandBuffer
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__combineAlphaCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__combineAlphaCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_combineAlphaCommandBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _captureTextureCommandBuffer
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__captureTextureCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__captureTextureCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_captureTextureCommandBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _applyTextureCommandBuffer
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__applyTextureCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__applyTextureCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_applyTextureCommandBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _optimizedRenderingCommandBuffer
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__optimizedRenderingCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__optimizedRenderingCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optimizedRenderingCommandBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CameraEvent _clipPlaneCameraEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CameraEvent& LIV::SDK::Unity::SDKRender::dyn__clipPlaneCameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneCameraEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneCameraEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CameraEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CameraEvent _clipPlaneCombineAlphaCameraEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CameraEvent& LIV::SDK::Unity::SDKRender::dyn__clipPlaneCombineAlphaCameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneCombineAlphaCameraEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneCombineAlphaCameraEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CameraEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CameraEvent _captureTextureEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CameraEvent& LIV::SDK::Unity::SDKRender::dyn__captureTextureEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__captureTextureEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_captureTextureEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CameraEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CameraEvent _applyTextureEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CameraEvent& LIV::SDK::Unity::SDKRender::dyn__applyTextureEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__applyTextureEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_applyTextureEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CameraEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CameraEvent _optimizedRenderingCameraEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CameraEvent& LIV::SDK::Unity::SDKRender::dyn__optimizedRenderingCameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__optimizedRenderingCameraEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optimizedRenderingCameraEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CameraEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _clipPlaneMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _clipPlaneSimpleMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneSimpleMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneSimpleMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneSimpleMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _clipPlaneSimpleDebugMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneSimpleDebugMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneSimpleDebugMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneSimpleDebugMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _clipPlaneComplexMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneComplexMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneComplexMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneComplexMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _clipPlaneComplexDebugMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneComplexDebugMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneComplexDebugMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneComplexDebugMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _writeOpaqueToAlphaMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__writeOpaqueToAlphaMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__writeOpaqueToAlphaMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeOpaqueToAlphaMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _combineAlphaMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__combineAlphaMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__combineAlphaMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_combineAlphaMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _writeMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__writeMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__writeMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _forceForwardRenderingMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__forceForwardRenderingMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__forceForwardRenderingMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forceForwardRenderingMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _backgroundRenderTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& LIV::SDK::Unity::SDKRender::dyn__backgroundRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__backgroundRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _foregroundRenderTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& LIV::SDK::Unity::SDKRender::dyn__foregroundRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__foregroundRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_foregroundRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _optimizedRenderTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& LIV::SDK::Unity::SDKRender::dyn__optimizedRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__optimizedRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optimizedRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _complexClipPlaneRenderTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& LIV::SDK::Unity::SDKRender::dyn__complexClipPlaneRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__complexClipPlaneRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_complexClipPlaneRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.LIV _liv
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::LIV*& LIV::SDK::Unity::SDKRender::dyn__liv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__liv");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_liv"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::LIV**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.SDKOutputFrame _outputFrame
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKOutputFrame& LIV::SDK::Unity::SDKRender::dyn__outputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__outputFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outputFrame"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKOutputFrame*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.SDKInputFrame _inputFrame
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKInputFrame& LIV::SDK::Unity::SDKRender::dyn__inputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__inputFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputFrame"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKInputFrame*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.SDKResolution _resolution
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKResolution& LIV::SDK::Unity::SDKRender::dyn__resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__resolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resolution"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKResolution*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _cameraInstance
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& LIV::SDK::Unity::SDKRender::dyn__cameraInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__cameraInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraInstance"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.SDKPose _requestedPose
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKPose& LIV::SDK::Unity::SDKRender::dyn__requestedPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__requestedPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestedPose"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKPose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _requestedPoseFrameIndex
[[deprecated("Use field access instead!")]] int& LIV::SDK::Unity::SDKRender::dyn__requestedPoseFrameIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__requestedPoseFrameIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestedPoseFrameIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_BackgroundRenderTexture
::UnityEngine::RenderTexture* LIV::SDK::Unity::SDKRender::get_BackgroundRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_BackgroundRenderTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BackgroundRenderTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_useDeferredRendering
bool LIV::SDK::Unity::SDKRender::get_useDeferredRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_useDeferredRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useDeferredRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_interlacedRendering
bool LIV::SDK::Unity::SDKRender::get_interlacedRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_interlacedRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interlacedRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_canRenderBackground
bool LIV::SDK::Unity::SDKRender::get_canRenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_canRenderBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canRenderBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_canRenderForeground
bool LIV::SDK::Unity::SDKRender::get_canRenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_canRenderForeground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canRenderForeground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_canRenderOptimized
bool LIV::SDK::Unity::SDKRender::get_canRenderOptimized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_canRenderOptimized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canRenderOptimized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_liv
::LIV::SDK::Unity::LIV* LIV::SDK::Unity::SDKRender::get_liv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_liv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_liv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::LIV*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_outputFrame
::LIV::SDK::Unity::SDKOutputFrame LIV::SDK::Unity::SDKRender::get_outputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_outputFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKOutputFrame, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_inputFrame
::LIV::SDK::Unity::SDKInputFrame LIV::SDK::Unity::SDKRender::get_inputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_inputFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKInputFrame, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_resolution
::LIV::SDK::Unity::SDKResolution LIV::SDK::Unity::SDKRender::get_resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_resolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKResolution, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_cameraInstance
::UnityEngine::Camera* LIV::SDK::Unity::SDKRender::get_cameraInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_cameraInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cameraInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_cameraReference
::UnityEngine::Camera* LIV::SDK::Unity::SDKRender::get_cameraReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_cameraReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cameraReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_hmdCamera
::UnityEngine::Camera* LIV::SDK::Unity::SDKRender::get_hmdCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_hmdCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hmdCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_stage
::UnityEngine::Transform* LIV::SDK::Unity::SDKRender::get_stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_stage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_stageTransform
::UnityEngine::Transform* LIV::SDK::Unity::SDKRender::get_stageTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_stageTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stageTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_stageLocalToWorldMatrix
::UnityEngine::Matrix4x4 LIV::SDK::Unity::SDKRender::get_stageLocalToWorldMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_stageLocalToWorldMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stageLocalToWorldMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_localToWorldMatrix
::UnityEngine::Matrix4x4 LIV::SDK::Unity::SDKRender::get_localToWorldMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_localToWorldMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localToWorldMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_spectatorLayerMask
int LIV::SDK::Unity::SDKRender::get_spectatorLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_spectatorLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spectatorLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_disableStandardAssets
bool LIV::SDK::Unity::SDKRender::get_disableStandardAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_disableStandardAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disableStandardAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_canSetPose
bool LIV::SDK::Unity::SDKRender::get_canSetPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_canSetPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canSetPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.GetClipPlaneMaterial
::UnityEngine::Material* LIV::SDK::Unity::SDKRender::GetClipPlaneMaterial(bool debugClipPlane, bool complexClipPlane, ::UnityEngine::Rendering::ColorWriteMask colorWriteMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::GetClipPlaneMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipPlaneMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(debugClipPlane), ::il2cpp_utils::ExtractType(complexClipPlane), ::il2cpp_utils::ExtractType(colorWriteMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, debugClipPlane, complexClipPlane, colorWriteMask);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.GetGroundClipPlaneMaterial
::UnityEngine::Material* LIV::SDK::Unity::SDKRender::GetGroundClipPlaneMaterial(bool debugClipPlane, ::UnityEngine::Rendering::ColorWriteMask colorWriteMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::GetGroundClipPlaneMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGroundClipPlaneMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(debugClipPlane), ::il2cpp_utils::ExtractType(colorWriteMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, debugClipPlane, colorWriteMask);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.Render
void LIV::SDK::Unity::SDKRender::Render() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::Render");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.RenderBackground
void LIV::SDK::Unity::SDKRender::RenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::RenderBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.RenderForeground
void LIV::SDK::Unity::SDKRender::RenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::RenderForeground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderForeground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.RenderOptimized
void LIV::SDK::Unity::SDKRender::RenderOptimized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::RenderOptimized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderOptimized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateAssets
void LIV::SDK::Unity::SDKRender::CreateAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::CreateAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.DestroyAssets
void LIV::SDK::Unity::SDKRender::DestroyAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::DestroyAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.Dispose
void LIV::SDK::Unity::SDKRender::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LIV::SDK::Unity::SDKRender*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SetPose
bool LIV::SDK::Unity::SDKRender::SetPose(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, float verticalFieldOfView, bool useLocalSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::SetPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(verticalFieldOfView), ::il2cpp_utils::ExtractType(useLocalSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, position, rotation, verticalFieldOfView, useLocalSpace);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SetGroundPlane
void LIV::SDK::Unity::SDKRender::SetGroundPlane(float distance, ::UnityEngine::Vector3 normal, bool useLocalSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::SetGroundPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGroundPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(useLocalSpace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, distance, normal, useLocalSpace);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SetGroundPlane
void LIV::SDK::Unity::SDKRender::SetGroundPlane(::UnityEngine::Plane plane, bool useLocalSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::SetGroundPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGroundPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plane), ::il2cpp_utils::ExtractType(useLocalSpace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, plane, useLocalSpace);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SetGroundPlane
void LIV::SDK::Unity::SDKRender::SetGroundPlane(::UnityEngine::Transform* transform, bool useLocalSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::SetGroundPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGroundPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(useLocalSpace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform, useLocalSpace);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.ReleaseBridgePoseControl
void LIV::SDK::Unity::SDKRender::ReleaseBridgePoseControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::ReleaseBridgePoseControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseBridgePoseControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.UpdateBridgeResolution
void LIV::SDK::Unity::SDKRender::UpdateBridgeResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::UpdateBridgeResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBridgeResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.UpdateBridgeInputFrame
void LIV::SDK::Unity::SDKRender::UpdateBridgeInputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::UpdateBridgeInputFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBridgeInputFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePreRender
void LIV::SDK::Unity::SDKRender::InvokePreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::InvokePreRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.IvokePostRender
void LIV::SDK::Unity::SDKRender::IvokePostRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::IvokePostRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IvokePostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePreRenderBackground
void LIV::SDK::Unity::SDKRender::InvokePreRenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::InvokePreRenderBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePreRenderBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePostRenderBackground
void LIV::SDK::Unity::SDKRender::InvokePostRenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::InvokePostRenderBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePostRenderBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePreRenderForeground
void LIV::SDK::Unity::SDKRender::InvokePreRenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::InvokePreRenderForeground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePreRenderForeground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePostRenderForeground
void LIV::SDK::Unity::SDKRender::InvokePostRenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::InvokePostRenderForeground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePostRenderForeground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateBackgroundTexture
void LIV::SDK::Unity::SDKRender::CreateBackgroundTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::CreateBackgroundTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBackgroundTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateForegroundTexture
void LIV::SDK::Unity::SDKRender::CreateForegroundTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::CreateForegroundTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateForegroundTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateOptimizedTexture
void LIV::SDK::Unity::SDKRender::CreateOptimizedTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::CreateOptimizedTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOptimizedTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateComplexClipPlaneTexture
void LIV::SDK::Unity::SDKRender::CreateComplexClipPlaneTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::CreateComplexClipPlaneTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateComplexClipPlaneTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.UpdateTextures
void LIV::SDK::Unity::SDKRender::UpdateTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::UpdateTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SendTextureToBridge
void LIV::SDK::Unity::SDKRender::SendTextureToBridge(::UnityEngine::RenderTexture* texture, ::LIV::SDK::Unity::TEXTURE_ID id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::SendTextureToBridge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendTextureToBridge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, texture, id);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKShaders
#include "LIV/SDK/Unity/SDKShaders.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 LIV_COLOR_MASK
int LIV::SDK::Unity::SDKShaders::_get_LIV_COLOR_MASK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_COLOR_MASK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LIV.SDK.Unity", "SDKShaders", "LIV_COLOR_MASK"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 LIV_COLOR_MASK
void LIV::SDK::Unity::SDKShaders::_set_LIV_COLOR_MASK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_COLOR_MASK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_COLOR_MASK", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 LIV_TESSELLATION_PROPERTY
int LIV::SDK::Unity::SDKShaders::_get_LIV_TESSELLATION_PROPERTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_TESSELLATION_PROPERTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LIV.SDK.Unity", "SDKShaders", "LIV_TESSELLATION_PROPERTY"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 LIV_TESSELLATION_PROPERTY
void LIV::SDK::Unity::SDKShaders::_set_LIV_TESSELLATION_PROPERTY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_TESSELLATION_PROPERTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_TESSELLATION_PROPERTY", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY
int LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_MR_FOREGROUND_KEYWORD
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_MR_FOREGROUND_KEYWORD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_MR_FOREGROUND_KEYWORD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_MR_FOREGROUND_KEYWORD"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_MR_FOREGROUND_KEYWORD
void LIV::SDK::Unity::SDKShaders::_set_LIV_MR_FOREGROUND_KEYWORD(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_MR_FOREGROUND_KEYWORD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_MR_FOREGROUND_KEYWORD", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_MR_BACKGROUND_KEYWORD
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_MR_BACKGROUND_KEYWORD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_MR_BACKGROUND_KEYWORD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_MR_BACKGROUND_KEYWORD"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_MR_BACKGROUND_KEYWORD
void LIV::SDK::Unity::SDKShaders::_set_LIV_MR_BACKGROUND_KEYWORD(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_MR_BACKGROUND_KEYWORD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_MR_BACKGROUND_KEYWORD", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_MR_KEYWORD
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_MR_KEYWORD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_MR_KEYWORD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_MR_KEYWORD"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_MR_KEYWORD
void LIV::SDK::Unity::SDKShaders::_set_LIV_MR_KEYWORD(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_MR_KEYWORD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_MR_KEYWORD", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_CLIP_PLANE_SIMPLE_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_SIMPLE_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_SIMPLE_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_SIMPLE_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_CLIP_PLANE_SIMPLE_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_SIMPLE_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_SIMPLE_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_SIMPLE_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_CLIP_PLANE_COMPLEX_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_COMPLEX_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_COMPLEX_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_COMPLEX_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_CLIP_PLANE_COMPLEX_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_COMPLEX_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_COMPLEX_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_COMPLEX_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_WRITE_OPAQUE_TO_ALPHA_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_WRITE_OPAQUE_TO_ALPHA_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_WRITE_OPAQUE_TO_ALPHA_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_WRITE_OPAQUE_TO_ALPHA_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_WRITE_OPAQUE_TO_ALPHA_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_WRITE_OPAQUE_TO_ALPHA_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_WRITE_OPAQUE_TO_ALPHA_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_WRITE_OPAQUE_TO_ALPHA_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_COMBINE_ALPHA_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_COMBINE_ALPHA_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_COMBINE_ALPHA_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_COMBINE_ALPHA_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_COMBINE_ALPHA_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_COMBINE_ALPHA_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_COMBINE_ALPHA_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_COMBINE_ALPHA_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_WRITE_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_WRITE_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_WRITE_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_WRITE_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_WRITE_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_WRITE_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_WRITE_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_WRITE_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_FORCE_FORWARD_RENDERING_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_FORCE_FORWARD_RENDERING_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_FORCE_FORWARD_RENDERING_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_FORCE_FORWARD_RENDERING_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_FORCE_FORWARD_RENDERING_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_FORCE_FORWARD_RENDERING_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_FORCE_FORWARD_RENDERING_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_FORCE_FORWARD_RENDERING_SHADER", value));
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders..cctor
void LIV::SDK::Unity::SDKShaders::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StartRendering
void LIV::SDK::Unity::SDKShaders::StartRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::StartRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StartRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StopRendering
void LIV::SDK::Unity::SDKShaders::StopRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::StopRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StopRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StartForegroundRendering
void LIV::SDK::Unity::SDKShaders::StartForegroundRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::StartForegroundRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StartForegroundRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StopForegroundRendering
void LIV::SDK::Unity::SDKShaders::StopForegroundRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::StopForegroundRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StopForegroundRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StartBackgroundRendering
void LIV::SDK::Unity::SDKShaders::StartBackgroundRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::StartBackgroundRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StartBackgroundRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StopBackgroundRendering
void LIV::SDK::Unity::SDKShaders::StopBackgroundRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::StopBackgroundRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StopBackgroundRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKConstants
#include "LIV/SDK/Unity/SDKConstants.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String SDK_ID
::StringW LIV::SDK::Unity::SDKConstants::_get_SDK_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKConstants::_get_SDK_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKConstants", "SDK_ID"));
}
// Autogenerated static field setter
// Set static field: static public System.String SDK_ID
void LIV::SDK::Unity::SDKConstants::_set_SDK_ID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKConstants::_set_SDK_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKConstants", "SDK_ID", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SDK_VERSION
::StringW LIV::SDK::Unity::SDKConstants::_get_SDK_VERSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKConstants::_get_SDK_VERSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKConstants", "SDK_VERSION"));
}
// Autogenerated static field setter
// Set static field: static public System.String SDK_VERSION
void LIV::SDK::Unity::SDKConstants::_set_SDK_VERSION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKConstants::_set_SDK_VERSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKConstants", "SDK_VERSION", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ENGINE_NAME
::StringW LIV::SDK::Unity::SDKConstants::_get_ENGINE_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKConstants::_get_ENGINE_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKConstants", "ENGINE_NAME"));
}
// Autogenerated static field setter
// Set static field: static public System.String ENGINE_NAME
void LIV::SDK::Unity::SDKConstants::_set_ENGINE_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKConstants::_set_ENGINE_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKConstants", "ENGINE_NAME", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.PRIORITY
#include "LIV/SDK/Unity/PRIORITY.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.PRIORITY NONE
::LIV::SDK::Unity::PRIORITY LIV::SDK::Unity::PRIORITY::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::PRIORITY::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::PRIORITY>("LIV.SDK.Unity", "PRIORITY", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.PRIORITY NONE
void LIV::SDK::Unity::PRIORITY::_set_NONE(::LIV::SDK::Unity::PRIORITY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::PRIORITY::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "PRIORITY", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.PRIORITY GAME
::LIV::SDK::Unity::PRIORITY LIV::SDK::Unity::PRIORITY::_get_GAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::PRIORITY::_get_GAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::PRIORITY>("LIV.SDK.Unity", "PRIORITY", "GAME"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.PRIORITY GAME
void LIV::SDK::Unity::PRIORITY::_set_GAME(::LIV::SDK::Unity::PRIORITY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::PRIORITY::_set_GAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "PRIORITY", "GAME", value));
}
// Autogenerated instance field getter
// Get instance field: public System.SByte value__
[[deprecated("Use field access instead!")]] int8_t& LIV::SDK::Unity::PRIORITY::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::PRIORITY::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.FEATURES
#include "LIV/SDK/Unity/FEATURES.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES NONE
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES NONE
void LIV::SDK::Unity::FEATURES::_set_NONE(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES BACKGROUND_RENDER
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_BACKGROUND_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_BACKGROUND_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "BACKGROUND_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES BACKGROUND_RENDER
void LIV::SDK::Unity::FEATURES::_set_BACKGROUND_RENDER(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_BACKGROUND_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "BACKGROUND_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES FOREGROUND_RENDER
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_FOREGROUND_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_FOREGROUND_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "FOREGROUND_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES FOREGROUND_RENDER
void LIV::SDK::Unity::FEATURES::_set_FOREGROUND_RENDER(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_FOREGROUND_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "FOREGROUND_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES COMPLEX_CLIP_PLANE
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_COMPLEX_CLIP_PLANE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_COMPLEX_CLIP_PLANE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "COMPLEX_CLIP_PLANE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES COMPLEX_CLIP_PLANE
void LIV::SDK::Unity::FEATURES::_set_COMPLEX_CLIP_PLANE(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_COMPLEX_CLIP_PLANE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "COMPLEX_CLIP_PLANE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES BACKGROUND_DEPTH_RENDER
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_BACKGROUND_DEPTH_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_BACKGROUND_DEPTH_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "BACKGROUND_DEPTH_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES BACKGROUND_DEPTH_RENDER
void LIV::SDK::Unity::FEATURES::_set_BACKGROUND_DEPTH_RENDER(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_BACKGROUND_DEPTH_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "BACKGROUND_DEPTH_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES OVERRIDE_POST_PROCESSING
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_OVERRIDE_POST_PROCESSING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_OVERRIDE_POST_PROCESSING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "OVERRIDE_POST_PROCESSING"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES OVERRIDE_POST_PROCESSING
void LIV::SDK::Unity::FEATURES::_set_OVERRIDE_POST_PROCESSING(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_OVERRIDE_POST_PROCESSING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "OVERRIDE_POST_PROCESSING", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES FIX_FOREGROUND_ALPHA
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_FIX_FOREGROUND_ALPHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_FIX_FOREGROUND_ALPHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "FIX_FOREGROUND_ALPHA"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES FIX_FOREGROUND_ALPHA
void LIV::SDK::Unity::FEATURES::_set_FIX_FOREGROUND_ALPHA(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_FIX_FOREGROUND_ALPHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "FIX_FOREGROUND_ALPHA", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES GROUND_CLIP_PLANE
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_GROUND_CLIP_PLANE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_GROUND_CLIP_PLANE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "GROUND_CLIP_PLANE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES GROUND_CLIP_PLANE
void LIV::SDK::Unity::FEATURES::_set_GROUND_CLIP_PLANE(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_GROUND_CLIP_PLANE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "GROUND_CLIP_PLANE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES RELEASE_CONTROL
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_RELEASE_CONTROL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_RELEASE_CONTROL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "RELEASE_CONTROL"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES RELEASE_CONTROL
void LIV::SDK::Unity::FEATURES::_set_RELEASE_CONTROL(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_RELEASE_CONTROL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "RELEASE_CONTROL", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES OPTIMIZED_RENDER
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_OPTIMIZED_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_OPTIMIZED_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "OPTIMIZED_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES OPTIMIZED_RENDER
void LIV::SDK::Unity::FEATURES::_set_OPTIMIZED_RENDER(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_OPTIMIZED_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "OPTIMIZED_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES INTERLACED_RENDER
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_INTERLACED_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_INTERLACED_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "INTERLACED_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES INTERLACED_RENDER
void LIV::SDK::Unity::FEATURES::_set_INTERLACED_RENDER(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_INTERLACED_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "INTERLACED_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES DEBUG_CLIP_PLANE
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_DEBUG_CLIP_PLANE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_DEBUG_CLIP_PLANE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "DEBUG_CLIP_PLANE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES DEBUG_CLIP_PLANE
void LIV::SDK::Unity::FEATURES::_set_DEBUG_CLIP_PLANE(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_DEBUG_CLIP_PLANE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "DEBUG_CLIP_PLANE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 value__
[[deprecated("Use field access instead!")]] uint64_t& LIV::SDK::Unity::FEATURES::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_ID
#include "LIV/SDK/Unity/TEXTURE_ID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_ID UNDEFINED
::LIV::SDK::Unity::TEXTURE_ID LIV::SDK::Unity::TEXTURE_ID::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_ID>("LIV.SDK.Unity", "TEXTURE_ID", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_ID UNDEFINED
void LIV::SDK::Unity::TEXTURE_ID::_set_UNDEFINED(::LIV::SDK::Unity::TEXTURE_ID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_ID", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_ID BACKGROUND_COLOR_BUFFER_ID
::LIV::SDK::Unity::TEXTURE_ID LIV::SDK::Unity::TEXTURE_ID::_get_BACKGROUND_COLOR_BUFFER_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_get_BACKGROUND_COLOR_BUFFER_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_ID>("LIV.SDK.Unity", "TEXTURE_ID", "BACKGROUND_COLOR_BUFFER_ID"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_ID BACKGROUND_COLOR_BUFFER_ID
void LIV::SDK::Unity::TEXTURE_ID::_set_BACKGROUND_COLOR_BUFFER_ID(::LIV::SDK::Unity::TEXTURE_ID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_set_BACKGROUND_COLOR_BUFFER_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_ID", "BACKGROUND_COLOR_BUFFER_ID", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_ID FOREGROUND_COLOR_BUFFER_ID
::LIV::SDK::Unity::TEXTURE_ID LIV::SDK::Unity::TEXTURE_ID::_get_FOREGROUND_COLOR_BUFFER_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_get_FOREGROUND_COLOR_BUFFER_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_ID>("LIV.SDK.Unity", "TEXTURE_ID", "FOREGROUND_COLOR_BUFFER_ID"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_ID FOREGROUND_COLOR_BUFFER_ID
void LIV::SDK::Unity::TEXTURE_ID::_set_FOREGROUND_COLOR_BUFFER_ID(::LIV::SDK::Unity::TEXTURE_ID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_set_FOREGROUND_COLOR_BUFFER_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_ID", "FOREGROUND_COLOR_BUFFER_ID", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_ID OPTIMIZED_COLOR_BUFFER_ID
::LIV::SDK::Unity::TEXTURE_ID LIV::SDK::Unity::TEXTURE_ID::_get_OPTIMIZED_COLOR_BUFFER_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_get_OPTIMIZED_COLOR_BUFFER_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_ID>("LIV.SDK.Unity", "TEXTURE_ID", "OPTIMIZED_COLOR_BUFFER_ID"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_ID OPTIMIZED_COLOR_BUFFER_ID
void LIV::SDK::Unity::TEXTURE_ID::_set_OPTIMIZED_COLOR_BUFFER_ID(::LIV::SDK::Unity::TEXTURE_ID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_set_OPTIMIZED_COLOR_BUFFER_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_ID", "OPTIMIZED_COLOR_BUFFER_ID", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& LIV::SDK::Unity::TEXTURE_ID::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_TYPE
#include "LIV/SDK/Unity/TEXTURE_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_TYPE UNDEFINED
::LIV::SDK::Unity::TEXTURE_TYPE LIV::SDK::Unity::TEXTURE_TYPE::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_TYPE::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_TYPE>("LIV.SDK.Unity", "TEXTURE_TYPE", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_TYPE UNDEFINED
void LIV::SDK::Unity::TEXTURE_TYPE::_set_UNDEFINED(::LIV::SDK::Unity::TEXTURE_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_TYPE::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_TYPE", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_TYPE COLOR_BUFFER
::LIV::SDK::Unity::TEXTURE_TYPE LIV::SDK::Unity::TEXTURE_TYPE::_get_COLOR_BUFFER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_TYPE::_get_COLOR_BUFFER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_TYPE>("LIV.SDK.Unity", "TEXTURE_TYPE", "COLOR_BUFFER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_TYPE COLOR_BUFFER
void LIV::SDK::Unity::TEXTURE_TYPE::_set_COLOR_BUFFER(::LIV::SDK::Unity::TEXTURE_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_TYPE::_set_COLOR_BUFFER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_TYPE", "COLOR_BUFFER", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& LIV::SDK::Unity::TEXTURE_TYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_TYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_FORMAT
#include "LIV/SDK/Unity/TEXTURE_FORMAT.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_FORMAT UNDEFINED
::LIV::SDK::Unity::TEXTURE_FORMAT LIV::SDK::Unity::TEXTURE_FORMAT::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_FORMAT::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_FORMAT>("LIV.SDK.Unity", "TEXTURE_FORMAT", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_FORMAT UNDEFINED
void LIV::SDK::Unity::TEXTURE_FORMAT::_set_UNDEFINED(::LIV::SDK::Unity::TEXTURE_FORMAT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_FORMAT::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_FORMAT", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_FORMAT ARGB32
::LIV::SDK::Unity::TEXTURE_FORMAT LIV::SDK::Unity::TEXTURE_FORMAT::_get_ARGB32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_FORMAT::_get_ARGB32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_FORMAT>("LIV.SDK.Unity", "TEXTURE_FORMAT", "ARGB32"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_FORMAT ARGB32
void LIV::SDK::Unity::TEXTURE_FORMAT::_set_ARGB32(::LIV::SDK::Unity::TEXTURE_FORMAT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_FORMAT::_set_ARGB32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_FORMAT", "ARGB32", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& LIV::SDK::Unity::TEXTURE_FORMAT::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_FORMAT::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_DEVICE
#include "LIV/SDK/Unity/TEXTURE_DEVICE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE UNDEFINED
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE UNDEFINED
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_UNDEFINED(::LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE RAW
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_RAW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_get_RAW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "RAW"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE RAW
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_RAW(::LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_set_RAW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "RAW", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE DIRECTX
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_DIRECTX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_get_DIRECTX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "DIRECTX"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE DIRECTX
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_DIRECTX(::LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_set_DIRECTX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "DIRECTX", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE OPENGL
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_OPENGL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_get_OPENGL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "OPENGL"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE OPENGL
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_OPENGL(::LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_set_OPENGL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "OPENGL", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE VULKAN
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_VULKAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_get_VULKAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "VULKAN"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE VULKAN
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_VULKAN(::LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_set_VULKAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "VULKAN", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE METAL
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_METAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_get_METAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "METAL"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE METAL
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_METAL(::LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_set_METAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "METAL", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& LIV::SDK::Unity::TEXTURE_DEVICE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_COLOR_SPACE
#include "LIV/SDK/Unity/TEXTURE_COLOR_SPACE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE UNDEFINED
::LIV::SDK::Unity::TEXTURE_COLOR_SPACE LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_COLOR_SPACE>("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE UNDEFINED
void LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_UNDEFINED(::LIV::SDK::Unity::TEXTURE_COLOR_SPACE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE LINEAR
::LIV::SDK::Unity::TEXTURE_COLOR_SPACE LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_LINEAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_LINEAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_COLOR_SPACE>("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "LINEAR"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE LINEAR
void LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_LINEAR(::LIV::SDK::Unity::TEXTURE_COLOR_SPACE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_LINEAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "LINEAR", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE SRGB
::LIV::SDK::Unity::TEXTURE_COLOR_SPACE LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_SRGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_SRGB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_COLOR_SPACE>("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "SRGB"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE SRGB
void LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_SRGB(::LIV::SDK::Unity::TEXTURE_COLOR_SPACE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_SRGB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "SRGB", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& LIV::SDK::Unity::TEXTURE_COLOR_SPACE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.RENDERING_PIPELINE
#include "LIV/SDK/Unity/RENDERING_PIPELINE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNDEFINED
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNDEFINED
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_UNDEFINED(::LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE FORWARD
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_FORWARD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_get_FORWARD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "FORWARD"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE FORWARD
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_FORWARD(::LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_set_FORWARD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "FORWARD", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE DEFERRED
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_DEFERRED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_get_DEFERRED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "DEFERRED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE DEFERRED
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_DEFERRED(::LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_set_DEFERRED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "DEFERRED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE VERTEX_LIT
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_VERTEX_LIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_get_VERTEX_LIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "VERTEX_LIT"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE VERTEX_LIT
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_VERTEX_LIT(::LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_set_VERTEX_LIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "VERTEX_LIT", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNIVERSAL
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_UNIVERSAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_get_UNIVERSAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "UNIVERSAL"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNIVERSAL
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_UNIVERSAL(::LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_set_UNIVERSAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "UNIVERSAL", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE HIGH_DEFINITION
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_HIGH_DEFINITION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_get_HIGH_DEFINITION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "HIGH_DEFINITION"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE HIGH_DEFINITION
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_HIGH_DEFINITION(::LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_set_HIGH_DEFINITION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "HIGH_DEFINITION", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& LIV::SDK::Unity::RENDERING_PIPELINE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKResolution
#include "LIV/SDK/Unity/SDKResolution.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 width
[[deprecated("Use field access instead!")]] int& LIV::SDK::Unity::SDKResolution::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKResolution::dyn_width");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 height
[[deprecated("Use field access instead!")]] int& LIV::SDK::Unity::SDKResolution::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKResolution::dyn_height");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKResolution.get_zero
::LIV::SDK::Unity::SDKResolution LIV::SDK::Unity::SDKResolution::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKResolution::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKResolution", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKResolution, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKResolution.ToString
::StringW LIV::SDK::Unity::SDKResolution::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKResolution::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKVector3
#include "LIV/SDK/Unity/SDKVector3.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single x
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKVector3::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKVector3::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single z
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKVector3::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_zero
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_one
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_one() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::get_one");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_one", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_forward
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::get_forward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_forward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_up
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::get_up");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_up", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_right
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::get_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.ToString
::StringW LIV::SDK::Unity::SDKVector3::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.op_Addition
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator+(const ::LIV::SDK::Unity::SDKVector3& lhs, const ::LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.op_Subtraction
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator-(const ::LIV::SDK::Unity::SDKVector3& lhs, const ::LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.op_Multiply
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator*(const ::LIV::SDK::Unity::SDKVector3& lhs, const ::LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.op_Multiply
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator*(const ::LIV::SDK::Unity::SDKVector3& lhs, const float& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKQuaternion
#include "LIV/SDK/Unity/SDKQuaternion.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: LIV.SDK.Unity.SDKVector3
#include "LIV/SDK/Unity/SDKVector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single x
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKQuaternion::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKQuaternion::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single z
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKQuaternion::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single w
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKQuaternion::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::dyn_w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.get_identity
::LIV::SDK::Unity::SDKQuaternion LIV::SDK::Unity::SDKQuaternion::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKQuaternion", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKQuaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.Euler
::LIV::SDK::Unity::SDKQuaternion LIV::SDK::Unity::SDKQuaternion::Euler(float pitch, float yaw, float roll) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::Euler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKQuaternion", "Euler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pitch), ::il2cpp_utils::ExtractType(yaw), ::il2cpp_utils::ExtractType(roll)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKQuaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pitch, yaw, roll);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.ToString
::StringW LIV::SDK::Unity::SDKQuaternion::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.op_Multiply
::LIV::SDK::Unity::SDKQuaternion LIV::SDK::Unity::operator*(const ::LIV::SDK::Unity::SDKQuaternion& lhs, const ::LIV::SDK::Unity::SDKQuaternion& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKQuaternion", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKQuaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.op_Multiply
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator*(const ::LIV::SDK::Unity::SDKQuaternion& lhs, const ::LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKQuaternion", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKMatrix4x4
#include "LIV/SDK/Unity/SDKMatrix4x4.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: LIV.SDK.Unity.SDKVector3
#include "LIV/SDK/Unity/SDKVector3.hpp"
// Including type: LIV.SDK.Unity.SDKQuaternion
#include "LIV/SDK/Unity/SDKQuaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single m00
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m00() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m00");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m00"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m01
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m01() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m01");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m01"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m02
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m02() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m02");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m02"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m03
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m03() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m03");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m03"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m10
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m10"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m11
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m11"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m12
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m12");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m12"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m13
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m13");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m13"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m20
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m20");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m20"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m21
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m21() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m21");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m21"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m22
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m22() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m22");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m22"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m23
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m23() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m23");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m23"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m30
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m30() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m30");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m30"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m31
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m31() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m31");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m31"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m32
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m32");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m32"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m33
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m33() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m33");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m33"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.get_identity
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.Perspective
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::Perspective(float vFov, float aspect, float zNear, float zFar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::Perspective");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "Perspective", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vFov), ::il2cpp_utils::ExtractType(aspect), ::il2cpp_utils::ExtractType(zNear), ::il2cpp_utils::ExtractType(zFar)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vFov, aspect, zNear, zFar);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.Translate
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::Translate(::LIV::SDK::Unity::SDKVector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.Rotate
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::Rotate(::LIV::SDK::Unity::SDKQuaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.Scale
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::Scale(::LIV::SDK::Unity::SDKVector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.TRS
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::TRS(::LIV::SDK::Unity::SDKVector3 translation, ::LIV::SDK::Unity::SDKQuaternion rotation, ::LIV::SDK::Unity::SDKVector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::TRS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "TRS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(translation), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, translation, rotation, scale);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.ToString
::StringW LIV::SDK::Unity::SDKMatrix4x4::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.op_Multiply
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::operator*(const ::LIV::SDK::Unity::SDKMatrix4x4& lhs, const ::LIV::SDK::Unity::SDKMatrix4x4& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.op_Multiply
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator*(const ::LIV::SDK::Unity::SDKMatrix4x4& lhs, const ::LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKPlane
#include "LIV/SDK/Unity/SDKPlane.hpp"
// Including type: UnityEngine.Plane
#include "UnityEngine/Plane.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single distance
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKPlane::dyn_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPlane::dyn_distance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 normal
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKPlane::dyn_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPlane::dyn_normal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normal"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKPlane.get_empty
::LIV::SDK::Unity::SDKPlane LIV::SDK::Unity::SDKPlane::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPlane::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKPlane", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKPlane, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKPlane.ToString
::StringW LIV::SDK::Unity::SDKPlane::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPlane::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKPriority
#include "LIV/SDK/Unity/SDKPriority.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.SByte pose
[[deprecated("Use field access instead!")]] int8_t& LIV::SDK::Unity::SDKPriority::dyn_pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_pose");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pose"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte clipPlane
[[deprecated("Use field access instead!")]] int8_t& LIV::SDK::Unity::SDKPriority::dyn_clipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_clipPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipPlane"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte stage
[[deprecated("Use field access instead!")]] int8_t& LIV::SDK::Unity::SDKPriority::dyn_stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_stage");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stage"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte resolution
[[deprecated("Use field access instead!")]] int8_t& LIV::SDK::Unity::SDKPriority::dyn_resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_resolution");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resolution"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte feature
[[deprecated("Use field access instead!")]] int8_t& LIV::SDK::Unity::SDKPriority::dyn_feature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_feature");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "feature"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte nearFarAdjustment
[[deprecated("Use field access instead!")]] int8_t& LIV::SDK::Unity::SDKPriority::dyn_nearFarAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_nearFarAdjustment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearFarAdjustment"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte groundPlane
[[deprecated("Use field access instead!")]] int8_t& LIV::SDK::Unity::SDKPriority::dyn_groundPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_groundPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groundPlane"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte reserved2
[[deprecated("Use field access instead!")]] int8_t& LIV::SDK::Unity::SDKPriority::dyn_reserved2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_reserved2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reserved2"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKPriority.get_empty
::LIV::SDK::Unity::SDKPriority LIV::SDK::Unity::SDKPriority::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKPriority", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKPriority, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKPriority.ToString
::StringW LIV::SDK::Unity::SDKPriority::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKApplicationOutput
#include "LIV/SDK/Unity/SDKApplicationOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.FEATURES supportedFeatures
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::FEATURES& LIV::SDK::Unity::SDKApplicationOutput::dyn_supportedFeatures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_supportedFeatures");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "supportedFeatures"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::FEATURES*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String engineName
[[deprecated("Use field access instead!")]] ::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_engineName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_engineName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "engineName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String engineVersion
[[deprecated("Use field access instead!")]] ::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_engineVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_engineVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "engineVersion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String applicationName
[[deprecated("Use field access instead!")]] ::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_applicationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_applicationName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applicationName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String applicationVersion
[[deprecated("Use field access instead!")]] ::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_applicationVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_applicationVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applicationVersion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String xrDeviceName
[[deprecated("Use field access instead!")]] ::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_xrDeviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_xrDeviceName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xrDeviceName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String graphicsAPI
[[deprecated("Use field access instead!")]] ::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_graphicsAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_graphicsAPI");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphicsAPI"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sdkID
[[deprecated("Use field access instead!")]] ::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_sdkID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_sdkID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sdkID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sdkVersion
[[deprecated("Use field access instead!")]] ::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_sdkVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_sdkVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sdkVersion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKApplicationOutput.get_empty
::LIV::SDK::Unity::SDKApplicationOutput LIV::SDK::Unity::SDKApplicationOutput::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKApplicationOutput", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKApplicationOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKApplicationOutput.ToString
::StringW LIV::SDK::Unity::SDKApplicationOutput::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKInputFrame
#include "LIV/SDK/Unity/SDKInputFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKPose pose
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKPose& LIV::SDK::Unity::SDKInputFrame::dyn_pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_pose");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pose"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKPose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKClipPlane clipPlane
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKClipPlane& LIV::SDK::Unity::SDKInputFrame::dyn_clipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_clipPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipPlane"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKClipPlane*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKTransform stageTransform
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKTransform& LIV::SDK::Unity::SDKInputFrame::dyn_stageTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_stageTransform");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stageTransform"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.FEATURES features
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::FEATURES& LIV::SDK::Unity::SDKInputFrame::dyn_features() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_features");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "features"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::FEATURES*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKClipPlane groundClipPlane
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKClipPlane& LIV::SDK::Unity::SDKInputFrame::dyn_groundClipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_groundClipPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groundClipPlane"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKClipPlane*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 frameid
[[deprecated("Use field access instead!")]] uint64_t& LIV::SDK::Unity::SDKInputFrame::dyn_frameid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_frameid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameid"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 referenceframe
[[deprecated("Use field access instead!")]] uint64_t& LIV::SDK::Unity::SDKInputFrame::dyn_referenceframe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_referenceframe");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referenceframe"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKPriority priority
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKPriority& LIV::SDK::Unity::SDKInputFrame::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_priority");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKInputFrame.get_empty
::LIV::SDK::Unity::SDKInputFrame LIV::SDK::Unity::SDKInputFrame::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKInputFrame", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKInputFrame, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKInputFrame.ReleaseControl
void LIV::SDK::Unity::SDKInputFrame::ReleaseControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::ReleaseControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReleaseControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKInputFrame.ObtainControl
void LIV::SDK::Unity::SDKInputFrame::ObtainControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::ObtainControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ObtainControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKInputFrame.ToString
::StringW LIV::SDK::Unity::SDKInputFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKOutputFrame
#include "LIV/SDK/Unity/SDKOutputFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.RENDERING_PIPELINE renderingPipeline
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::RENDERING_PIPELINE& LIV::SDK::Unity::SDKOutputFrame::dyn_renderingPipeline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKOutputFrame::dyn_renderingPipeline");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderingPipeline"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::RENDERING_PIPELINE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKTrackedSpace trackedSpace
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKTrackedSpace& LIV::SDK::Unity::SDKOutputFrame::dyn_trackedSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKOutputFrame::dyn_trackedSpace");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpace"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKTrackedSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKOutputFrame.get_empty
::LIV::SDK::Unity::SDKOutputFrame LIV::SDK::Unity::SDKOutputFrame::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKOutputFrame::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKOutputFrame", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKOutputFrame, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKOutputFrame.ToString
::StringW LIV::SDK::Unity::SDKOutputFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKOutputFrame::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKTrackedSpace
#include "LIV/SDK/Unity/SDKTrackedSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 trackedSpaceWorldPosition
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceWorldPosition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion trackedSpaceWorldRotation
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceWorldRotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 trackedSpaceLocalScale
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceLocalScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceLocalScale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceLocalScale"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKMatrix4x4 trackedSpaceLocalToWorldMatrix
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKMatrix4x4& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceLocalToWorldMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceLocalToWorldMatrix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceLocalToWorldMatrix"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKMatrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKMatrix4x4 trackedSpaceWorldToLocalMatrix
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKMatrix4x4& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldToLocalMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldToLocalMatrix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceWorldToLocalMatrix"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKMatrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKTrackedSpace.get_empty
::LIV::SDK::Unity::SDKTrackedSpace LIV::SDK::Unity::SDKTrackedSpace::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKTrackedSpace", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKTrackedSpace, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKTrackedSpace.ToString
::StringW LIV::SDK::Unity::SDKTrackedSpace::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKTexture
#include "LIV/SDK/Unity/SDKTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_ID id
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::TEXTURE_ID& LIV::SDK::Unity::SDKTexture::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_id");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::TEXTURE_ID*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr texturePtr
[[deprecated("Use field access instead!")]] ::System::IntPtr& LIV::SDK::Unity::SDKTexture::dyn_texturePtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_texturePtr");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texturePtr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr SharedHandle
[[deprecated("Use field access instead!")]] ::System::IntPtr& LIV::SDK::Unity::SDKTexture::dyn_SharedHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_SharedHandle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SharedHandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_DEVICE device
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::TEXTURE_DEVICE& LIV::SDK::Unity::SDKTexture::dyn_device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_device");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "device"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::TEXTURE_DEVICE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 dummy
[[deprecated("Use field access instead!")]] int& LIV::SDK::Unity::SDKTexture::dyn_dummy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_dummy");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dummy"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_TYPE type
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::TEXTURE_TYPE& LIV::SDK::Unity::SDKTexture::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::TEXTURE_TYPE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_FORMAT format
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::TEXTURE_FORMAT& LIV::SDK::Unity::SDKTexture::dyn_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_format");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "format"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::TEXTURE_FORMAT*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_COLOR_SPACE colorSpace
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::TEXTURE_COLOR_SPACE& LIV::SDK::Unity::SDKTexture::dyn_colorSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_colorSpace");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorSpace"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::TEXTURE_COLOR_SPACE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 width
[[deprecated("Use field access instead!")]] int& LIV::SDK::Unity::SDKTexture::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_width");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 height
[[deprecated("Use field access instead!")]] int& LIV::SDK::Unity::SDKTexture::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_height");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKTexture.get_empty
::LIV::SDK::Unity::SDKTexture LIV::SDK::Unity::SDKTexture::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKTexture", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKTexture, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKTexture.ToString
::StringW LIV::SDK::Unity::SDKTexture::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKTransform
#include "LIV/SDK/Unity/SDKTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 localPosition
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKTransform::dyn_localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTransform::dyn_localPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPosition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion localRotation
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKTransform::dyn_localRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTransform::dyn_localRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localRotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 localScale
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKTransform::dyn_localScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTransform::dyn_localScale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localScale"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKTransform.get_empty
::LIV::SDK::Unity::SDKTransform LIV::SDK::Unity::SDKTransform::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTransform::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKTransform", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKTransform.ToString
::StringW LIV::SDK::Unity::SDKTransform::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTransform::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKClipPlane
#include "LIV/SDK/Unity/SDKClipPlane.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKMatrix4x4 transform
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKMatrix4x4& LIV::SDK::Unity::SDKClipPlane::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKClipPlane::dyn_transform");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKMatrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 width
[[deprecated("Use field access instead!")]] int& LIV::SDK::Unity::SDKClipPlane::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKClipPlane::dyn_width");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 height
[[deprecated("Use field access instead!")]] int& LIV::SDK::Unity::SDKClipPlane::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKClipPlane::dyn_height");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tesselation
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKClipPlane::dyn_tesselation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKClipPlane::dyn_tesselation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tesselation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKClipPlane.get_empty
::LIV::SDK::Unity::SDKClipPlane LIV::SDK::Unity::SDKClipPlane::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKClipPlane::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKClipPlane", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKClipPlane, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKClipPlane.ToString
::StringW LIV::SDK::Unity::SDKClipPlane::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKClipPlane::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKControllerState
#include "LIV/SDK/Unity/SDKControllerState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 hmdposition
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_hmdposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_hmdposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hmdposition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion hmdrotation
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_hmdrotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_hmdrotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hmdrotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 calibrationcameraposition
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_calibrationcameraposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_calibrationcameraposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calibrationcameraposition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion calibrationcamerarotation
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_calibrationcamerarotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_calibrationcamerarotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calibrationcamerarotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 cameraposition
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_cameraposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_cameraposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraposition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion camerarotation
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_camerarotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_camerarotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "camerarotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 leftposition
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_leftposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_leftposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftposition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion leftrotation
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_leftrotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_leftrotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftrotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 rightposition
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_rightposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_rightposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightposition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion rightrotation
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_rightrotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_rightrotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightrotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKControllerState.get_empty
::LIV::SDK::Unity::SDKControllerState LIV::SDK::Unity::SDKControllerState::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKControllerState", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKControllerState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKControllerState.ToString
::StringW LIV::SDK::Unity::SDKControllerState::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKPose
#include "LIV/SDK/Unity/SDKPose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKMatrix4x4 projectionMatrix
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKMatrix4x4& LIV::SDK::Unity::SDKPose::dyn_projectionMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::dyn_projectionMatrix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "projectionMatrix"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKMatrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 localPosition
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKPose::dyn_localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::dyn_localPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPosition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion localRotation
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKPose::dyn_localRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::dyn_localRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localRotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single verticalFieldOfView
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKPose::dyn_verticalFieldOfView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::dyn_verticalFieldOfView");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verticalFieldOfView"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single nearClipPlane
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKPose::dyn_nearClipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::dyn_nearClipPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearClipPlane"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single farClipPlane
[[deprecated("Use field access instead!")]] float& LIV::SDK::Unity::SDKPose::dyn_farClipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::dyn_farClipPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "farClipPlane"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 unused0
[[deprecated("Use field access instead!")]] int& LIV::SDK::Unity::SDKPose::dyn_unused0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::dyn_unused0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unused0"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 unused1
[[deprecated("Use field access instead!")]] int& LIV::SDK::Unity::SDKPose::dyn_unused1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::dyn_unused1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unused1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKPose.get_empty
::LIV::SDK::Unity::SDKPose LIV::SDK::Unity::SDKPose::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKPose", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKPose.ToString
::StringW LIV::SDK::Unity::SDKPose::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKUtils
#include "LIV/SDK/Unity/SDKUtils.hpp"
// Including type: LIV.SDK.Unity.TEXTURE_COLOR_SPACE
#include "LIV/SDK/Unity/TEXTURE_COLOR_SPACE.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.RenderTextureReadWrite
#include "UnityEngine/RenderTextureReadWrite.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: LIV.SDK.Unity.RENDERING_PIPELINE
#include "LIV/SDK/Unity/RENDERING_PIPELINE.hpp"
// Including type: UnityEngine.RenderingPath
#include "UnityEngine/RenderingPath.hpp"
// Including type: LIV.SDK.Unity.TEXTURE_DEVICE
#include "LIV/SDK/Unity/TEXTURE_DEVICE.hpp"
// Including type: LIV.SDK.Unity.SDKPose
#include "LIV/SDK/Unity/SDKPose.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: LIV.SDK.Unity.SDKInputFrame
#include "LIV/SDK/Unity/SDKInputFrame.hpp"
// Including type: LIV.SDK.Unity.SDKTrackedSpace
#include "LIV/SDK/Unity/SDKTrackedSpace.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: UnityEngine.RenderTextureFormat
#include "UnityEngine/RenderTextureFormat.hpp"
// Including type: LIV.SDK.Unity.SDKRender
#include "LIV/SDK/Unity/SDKRender.hpp"
// Including type: LIV.SDK.Unity.FEATURES
#include "LIV/SDK/Unity/FEATURES.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LIV.SDK.Unity.SDKUtils.get_GetDefaultColorSpace
::LIV::SDK::Unity::TEXTURE_COLOR_SPACE LIV::SDK::Unity::SDKUtils::get_GetDefaultColorSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::get_GetDefaultColorSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "get_GetDefaultColorSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::TEXTURE_COLOR_SPACE, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.CreateClipPlane
void LIV::SDK::Unity::SDKUtils::CreateClipPlane(::UnityEngine::Mesh* mesh, int resX, int resY, bool useQuads, float skirtLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::CreateClipPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "CreateClipPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(resX), ::il2cpp_utils::ExtractType(resY), ::il2cpp_utils::ExtractType(useQuads), ::il2cpp_utils::ExtractType(skirtLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mesh, resX, resY, useQuads, skirtLength);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.GetReadWriteFromColorSpace
::UnityEngine::RenderTextureReadWrite LIV::SDK::Unity::SDKUtils::GetReadWriteFromColorSpace(::LIV::SDK::Unity::TEXTURE_COLOR_SPACE colorSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::GetReadWriteFromColorSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "GetReadWriteFromColorSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTextureReadWrite, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorSpace);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.GetColorSpace
::LIV::SDK::Unity::TEXTURE_COLOR_SPACE LIV::SDK::Unity::SDKUtils::GetColorSpace(::UnityEngine::RenderTexture* renderTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::GetColorSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "GetColorSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderTexture)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::TEXTURE_COLOR_SPACE, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderTexture);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.GetRenderingPipeline
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::SDKUtils::GetRenderingPipeline(::UnityEngine::RenderingPath renderingPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::GetRenderingPipeline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "GetRenderingPipeline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderingPath)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::RENDERING_PIPELINE, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderingPath);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.GetDevice
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::SDKUtils::GetDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::GetDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "GetDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::TEXTURE_DEVICE, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.ContainsFlag
bool LIV::SDK::Unity::SDKUtils::ContainsFlag(uint64_t flags, uint64_t flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::ContainsFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "ContainsFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flags, flag);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.SetFlag
uint64_t LIV::SDK::Unity::SDKUtils::SetFlag(uint64_t flags, uint64_t flag, bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::SetFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "SetFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(flag), ::il2cpp_utils::ExtractType(enabled)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flags, flag, enabled);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.GetCameraPositionAndRotation
void LIV::SDK::Unity::SDKUtils::GetCameraPositionAndRotation(::LIV::SDK::Unity::SDKPose pose, ::UnityEngine::Matrix4x4 originLocalToWorldMatrix, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::GetCameraPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "GetCameraPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(originLocalToWorldMatrix), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pose, originLocalToWorldMatrix, byref(position), byref(rotation));
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.CleanCameraBehaviours
void LIV::SDK::Unity::SDKUtils::CleanCameraBehaviours(::UnityEngine::Camera* camera, ::ArrayW<::StringW> excludeBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::CleanCameraBehaviours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "CleanCameraBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(excludeBehaviours)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera, excludeBehaviours);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.SetCamera
void LIV::SDK::Unity::SDKUtils::SetCamera(::UnityEngine::Camera* camera, ::UnityEngine::Transform* cameraTransform, ::LIV::SDK::Unity::SDKInputFrame inputFrame, ::UnityEngine::Matrix4x4 originLocalToWorldMatrix, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::SetCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "SetCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(cameraTransform), ::il2cpp_utils::ExtractType(inputFrame), ::il2cpp_utils::ExtractType(originLocalToWorldMatrix), ::il2cpp_utils::ExtractType(layerMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera, cameraTransform, inputFrame, originLocalToWorldMatrix, layerMask);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.RotateQuaternionByMatrix
::UnityEngine::Quaternion LIV::SDK::Unity::SDKUtils::RotateQuaternionByMatrix(::UnityEngine::Matrix4x4 matrix, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::RotateQuaternionByMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "RotateQuaternionByMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matrix), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matrix, rotation);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.GetTrackedSpace
::LIV::SDK::Unity::SDKTrackedSpace LIV::SDK::Unity::SDKUtils::GetTrackedSpace(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::GetTrackedSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "GetTrackedSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKTrackedSpace, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.CreateTexture
bool LIV::SDK::Unity::SDKUtils::CreateTexture(ByRef<::UnityEngine::RenderTexture*> renderTexture, int width, int height, int depth, ::UnityEngine::RenderTextureFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::CreateTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "CreateTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderTexture), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(depth), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(renderTexture), width, height, depth, format);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.DestroyTexture
void LIV::SDK::Unity::SDKUtils::DestroyTexture(ByRef<::UnityEngine::RenderTexture*> _renderTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::DestroyTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "DestroyTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_renderTexture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_renderTexture));
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.ApplyUserSpaceTransform
void LIV::SDK::Unity::SDKUtils::ApplyUserSpaceTransform(::LIV::SDK::Unity::SDKRender* render) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::ApplyUserSpaceTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "ApplyUserSpaceTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(render)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, render);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.CreateBridgeOutputFrame
void LIV::SDK::Unity::SDKUtils::CreateBridgeOutputFrame(::LIV::SDK::Unity::SDKRender* render) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::CreateBridgeOutputFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "CreateBridgeOutputFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(render)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, render);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.FeatureEnabled
bool LIV::SDK::Unity::SDKUtils::FeatureEnabled(::LIV::SDK::Unity::FEATURES features, ::LIV::SDK::Unity::FEATURES feature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::FeatureEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "FeatureEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(features), ::il2cpp_utils::ExtractType(feature)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, features, feature);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.DisableStandardAssets
void LIV::SDK::Unity::SDKUtils::DisableStandardAssets(::UnityEngine::Camera* cameraInstance, ByRef<::ArrayW<::UnityEngine::MonoBehaviour*>> behaviours, ByRef<::ArrayW<bool>> wasBehaviourEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::DisableStandardAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "DisableStandardAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraInstance), ::il2cpp_utils::ExtractType(behaviours), ::il2cpp_utils::ExtractType(wasBehaviourEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraInstance, byref(behaviours), byref(wasBehaviourEnabled));
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.RestoreStandardAssets
void LIV::SDK::Unity::SDKUtils::RestoreStandardAssets(ByRef<::ArrayW<::UnityEngine::MonoBehaviour*>> behaviours, ByRef<::ArrayW<bool>> wasBehaviourEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::RestoreStandardAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "RestoreStandardAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(behaviours), ::il2cpp_utils::ExtractType(wasBehaviourEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(behaviours), byref(wasBehaviourEnabled));
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.ForceForwardRendering
void LIV::SDK::Unity::SDKUtils::ForceForwardRendering(::UnityEngine::Camera* cameraInstance, ::UnityEngine::Mesh* clipPlaneMesh, ::UnityEngine::Material* forceForwardRenderingMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::ForceForwardRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "ForceForwardRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraInstance), ::il2cpp_utils::ExtractType(clipPlaneMesh), ::il2cpp_utils::ExtractType(forceForwardRenderingMaterial)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraInstance, clipPlaneMesh, forceForwardRenderingMaterial);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeautifyEffect.CameraAnimator
#include "BeautifyEffect/CameraAnimator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeautifyEffect.CameraAnimator.Update
void BeautifyEffect::CameraAnimator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::CameraAnimator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeautifyEffect.Demo1
#include "BeautifyEffect/Demo1.hpp"
// Including type: UnityEngine.GUIStyle
#include "UnityEngine/GUIStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single deltaTime
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Demo1::dyn_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Demo1::dyn_deltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean benchmarkEnabled
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Demo1::dyn_benchmarkEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Demo1::dyn_benchmarkEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "benchmarkEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GUIStyle style
[[deprecated("Use field access instead!")]] ::UnityEngine::GUIStyle*& BeautifyEffect::Demo1::dyn_style() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Demo1::dyn_style");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "style"))->offset;
  return *reinterpret_cast<::UnityEngine::GUIStyle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect rect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& BeautifyEffect::Demo1::dyn_rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Demo1::dyn_rect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeautifyEffect.Demo1.Update
void BeautifyEffect::Demo1::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Demo1::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Demo1.UpdateText
void BeautifyEffect::Demo1::UpdateText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Demo1::UpdateText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Demo1.OnGUI
void BeautifyEffect::Demo1::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Demo1::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeautifyEffect.Demo2
#include "BeautifyEffect/Demo2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 demoMode
[[deprecated("Use field access instead!")]] int& BeautifyEffect::Demo2::dyn_demoMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Demo2::dyn_demoMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "demoMode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeautifyEffect.Demo2.Start
void BeautifyEffect::Demo2::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Demo2::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Demo2.Update
void BeautifyEffect::Demo2::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Demo2::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Demo2.UpdateDemoMode
void BeautifyEffect::Demo2::UpdateDemoMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Demo2::UpdateDemoMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDemoMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeautifyEffect.Demo4
#include "BeautifyEffect/Demo4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeautifyEffect.Demo4.Update
void BeautifyEffect::Demo4::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Demo4::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeautifyEffect.FreeCameraMove
#include "BeautifyEffect/FreeCameraMove.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single cameraSensitivity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::FreeCameraMove::dyn_cameraSensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::FreeCameraMove::dyn_cameraSensitivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraSensitivity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single climbSpeed
[[deprecated("Use field access instead!")]] float& BeautifyEffect::FreeCameraMove::dyn_climbSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::FreeCameraMove::dyn_climbSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "climbSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single normalMoveSpeed
[[deprecated("Use field access instead!")]] float& BeautifyEffect::FreeCameraMove::dyn_normalMoveSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::FreeCameraMove::dyn_normalMoveSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normalMoveSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single slowMoveFactor
[[deprecated("Use field access instead!")]] float& BeautifyEffect::FreeCameraMove::dyn_slowMoveFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::FreeCameraMove::dyn_slowMoveFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slowMoveFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fastMoveFactor
[[deprecated("Use field access instead!")]] float& BeautifyEffect::FreeCameraMove::dyn_fastMoveFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::FreeCameraMove::dyn_fastMoveFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fastMoveFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rotationX
[[deprecated("Use field access instead!")]] float& BeautifyEffect::FreeCameraMove::dyn_rotationX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::FreeCameraMove::dyn_rotationX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rotationY
[[deprecated("Use field access instead!")]] float& BeautifyEffect::FreeCameraMove::dyn_rotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::FreeCameraMove::dyn_rotationY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion originalRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& BeautifyEffect::FreeCameraMove::dyn_originalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::FreeCameraMove::dyn_originalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeautifyEffect.FreeCameraMove.Start
void BeautifyEffect::FreeCameraMove::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::FreeCameraMove::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.FreeCameraMove.Update
void BeautifyEffect::FreeCameraMove::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::FreeCameraMove::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeautifyEffect.SphereAnimator
#include "BeautifyEffect/SphereAnimator.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody rb
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& BeautifyEffect::SphereAnimator::dyn_rb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::SphereAnimator::dyn_rb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rb"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeautifyEffect.SphereAnimator.Start
void BeautifyEffect::SphereAnimator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::SphereAnimator::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.SphereAnimator.FixedUpdate
void BeautifyEffect::SphereAnimator::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::SphereAnimator::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeautifyEffect.OnBeforeFocusEvent
#include "BeautifyEffect/OnBeforeFocusEvent.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeautifyEffect.OnBeforeFocusEvent.Invoke
float BeautifyEffect::OnBeforeFocusEvent::Invoke(float currentFocusDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::OnBeforeFocusEvent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BeautifyEffect::OnBeforeFocusEvent*), 12));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, currentFocusDistance);
}
// Autogenerated method: BeautifyEffect.OnBeforeFocusEvent.BeginInvoke
::System::IAsyncResult* BeautifyEffect::OnBeforeFocusEvent::BeginInvoke(float currentFocusDistance, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::OnBeforeFocusEvent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BeautifyEffect::OnBeforeFocusEvent*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, currentFocusDistance, callback, object);
}
// Autogenerated method: BeautifyEffect.OnBeforeFocusEvent.EndInvoke
float BeautifyEffect::OnBeforeFocusEvent::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::OnBeforeFocusEvent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BeautifyEffect::OnBeforeFocusEvent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeautifyEffect.BEAUTIFY_QUALITY
#include "BeautifyEffect/BEAUTIFY_QUALITY.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeautifyEffect.BEAUTIFY_QUALITY BestQuality
::BeautifyEffect::BEAUTIFY_QUALITY BeautifyEffect::BEAUTIFY_QUALITY::_get_BestQuality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_QUALITY::_get_BestQuality");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeautifyEffect::BEAUTIFY_QUALITY>("BeautifyEffect", "BEAUTIFY_QUALITY", "BestQuality"));
}
// Autogenerated static field setter
// Set static field: static public BeautifyEffect.BEAUTIFY_QUALITY BestQuality
void BeautifyEffect::BEAUTIFY_QUALITY::_set_BestQuality(::BeautifyEffect::BEAUTIFY_QUALITY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_QUALITY::_set_BestQuality");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "BEAUTIFY_QUALITY", "BestQuality", value));
}
// Autogenerated static field getter
// Get static field: static public BeautifyEffect.BEAUTIFY_QUALITY BestPerformance
::BeautifyEffect::BEAUTIFY_QUALITY BeautifyEffect::BEAUTIFY_QUALITY::_get_BestPerformance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_QUALITY::_get_BestPerformance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeautifyEffect::BEAUTIFY_QUALITY>("BeautifyEffect", "BEAUTIFY_QUALITY", "BestPerformance"));
}
// Autogenerated static field setter
// Set static field: static public BeautifyEffect.BEAUTIFY_QUALITY BestPerformance
void BeautifyEffect::BEAUTIFY_QUALITY::_set_BestPerformance(::BeautifyEffect::BEAUTIFY_QUALITY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_QUALITY::_set_BestPerformance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "BEAUTIFY_QUALITY", "BestPerformance", value));
}
// Autogenerated static field getter
// Get static field: static public BeautifyEffect.BEAUTIFY_QUALITY Basic
::BeautifyEffect::BEAUTIFY_QUALITY BeautifyEffect::BEAUTIFY_QUALITY::_get_Basic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_QUALITY::_get_Basic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeautifyEffect::BEAUTIFY_QUALITY>("BeautifyEffect", "BEAUTIFY_QUALITY", "Basic"));
}
// Autogenerated static field setter
// Set static field: static public BeautifyEffect.BEAUTIFY_QUALITY Basic
void BeautifyEffect::BEAUTIFY_QUALITY::_set_Basic(::BeautifyEffect::BEAUTIFY_QUALITY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_QUALITY::_set_Basic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "BEAUTIFY_QUALITY", "Basic", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BeautifyEffect::BEAUTIFY_QUALITY::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_QUALITY::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeautifyEffect.BEAUTIFY_PRESET
#include "BeautifyEffect/BEAUTIFY_PRESET.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeautifyEffect.BEAUTIFY_PRESET Soft
::BeautifyEffect::BEAUTIFY_PRESET BeautifyEffect::BEAUTIFY_PRESET::_get_Soft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_PRESET::_get_Soft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeautifyEffect::BEAUTIFY_PRESET>("BeautifyEffect", "BEAUTIFY_PRESET", "Soft"));
}
// Autogenerated static field setter
// Set static field: static public BeautifyEffect.BEAUTIFY_PRESET Soft
void BeautifyEffect::BEAUTIFY_PRESET::_set_Soft(::BeautifyEffect::BEAUTIFY_PRESET value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_PRESET::_set_Soft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "BEAUTIFY_PRESET", "Soft", value));
}
// Autogenerated static field getter
// Get static field: static public BeautifyEffect.BEAUTIFY_PRESET Medium
::BeautifyEffect::BEAUTIFY_PRESET BeautifyEffect::BEAUTIFY_PRESET::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_PRESET::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeautifyEffect::BEAUTIFY_PRESET>("BeautifyEffect", "BEAUTIFY_PRESET", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public BeautifyEffect.BEAUTIFY_PRESET Medium
void BeautifyEffect::BEAUTIFY_PRESET::_set_Medium(::BeautifyEffect::BEAUTIFY_PRESET value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_PRESET::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "BEAUTIFY_PRESET", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public BeautifyEffect.BEAUTIFY_PRESET Strong
::BeautifyEffect::BEAUTIFY_PRESET BeautifyEffect::BEAUTIFY_PRESET::_get_Strong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_PRESET::_get_Strong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeautifyEffect::BEAUTIFY_PRESET>("BeautifyEffect", "BEAUTIFY_PRESET", "Strong"));
}
// Autogenerated static field setter
// Set static field: static public BeautifyEffect.BEAUTIFY_PRESET Strong
void BeautifyEffect::BEAUTIFY_PRESET::_set_Strong(::BeautifyEffect::BEAUTIFY_PRESET value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_PRESET::_set_Strong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "BEAUTIFY_PRESET", "Strong", value));
}
// Autogenerated static field getter
// Get static field: static public BeautifyEffect.BEAUTIFY_PRESET Exaggerated
::BeautifyEffect::BEAUTIFY_PRESET BeautifyEffect::BEAUTIFY_PRESET::_get_Exaggerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_PRESET::_get_Exaggerated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeautifyEffect::BEAUTIFY_PRESET>("BeautifyEffect", "BEAUTIFY_PRESET", "Exaggerated"));
}
// Autogenerated static field setter
// Set static field: static public BeautifyEffect.BEAUTIFY_PRESET Exaggerated
void BeautifyEffect::BEAUTIFY_PRESET::_set_Exaggerated(::BeautifyEffect::BEAUTIFY_PRESET value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_PRESET::_set_Exaggerated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "BEAUTIFY_PRESET", "Exaggerated", value));
}
// Autogenerated static field getter
// Get static field: static public BeautifyEffect.BEAUTIFY_PRESET Custom
::BeautifyEffect::BEAUTIFY_PRESET BeautifyEffect::BEAUTIFY_PRESET::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_PRESET::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeautifyEffect::BEAUTIFY_PRESET>("BeautifyEffect", "BEAUTIFY_PRESET", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public BeautifyEffect.BEAUTIFY_PRESET Custom
void BeautifyEffect::BEAUTIFY_PRESET::_set_Custom(::BeautifyEffect::BEAUTIFY_PRESET value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_PRESET::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "BEAUTIFY_PRESET", "Custom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BeautifyEffect::BEAUTIFY_PRESET::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_PRESET::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeautifyEffect.BEAUTIFY_TMO
#include "BeautifyEffect/BEAUTIFY_TMO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeautifyEffect.BEAUTIFY_TMO Linear
::BeautifyEffect::BEAUTIFY_TMO BeautifyEffect::BEAUTIFY_TMO::_get_Linear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_TMO::_get_Linear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeautifyEffect::BEAUTIFY_TMO>("BeautifyEffect", "BEAUTIFY_TMO", "Linear"));
}
// Autogenerated static field setter
// Set static field: static public BeautifyEffect.BEAUTIFY_TMO Linear
void BeautifyEffect::BEAUTIFY_TMO::_set_Linear(::BeautifyEffect::BEAUTIFY_TMO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_TMO::_set_Linear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "BEAUTIFY_TMO", "Linear", value));
}
// Autogenerated static field getter
// Get static field: static public BeautifyEffect.BEAUTIFY_TMO ACES
::BeautifyEffect::BEAUTIFY_TMO BeautifyEffect::BEAUTIFY_TMO::_get_ACES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_TMO::_get_ACES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeautifyEffect::BEAUTIFY_TMO>("BeautifyEffect", "BEAUTIFY_TMO", "ACES"));
}
// Autogenerated static field setter
// Set static field: static public BeautifyEffect.BEAUTIFY_TMO ACES
void BeautifyEffect::BEAUTIFY_TMO::_set_ACES(::BeautifyEffect::BEAUTIFY_TMO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_TMO::_set_ACES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "BEAUTIFY_TMO", "ACES", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BeautifyEffect::BEAUTIFY_TMO::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BEAUTIFY_TMO::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeautifyEffect.Beautify
#include "BeautifyEffect/Beautify.hpp"
// Including type: BeautifyEffect.Beautify/BeautifyEffect.<DoBlink>d__712
#include "BeautifyEffect/Beautify_-DoBlink-d__712.hpp"
// Including type: BeautifyEffect.BeautifyProfile
#include "BeautifyEffect/BeautifyProfile.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: BeautifyEffect.OnBeforeFocusEvent
#include "BeautifyEffect/OnBeforeFocusEvent.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private BeautifyEffect.Beautify _beautify
::BeautifyEffect::Beautify* BeautifyEffect::Beautify::_get__beautify() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get__beautify");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeautifyEffect::Beautify*>("BeautifyEffect", "Beautify", "_beautify"));
}
// Autogenerated static field setter
// Set static field: static private BeautifyEffect.Beautify _beautify
void BeautifyEffect::Beautify::_set__beautify(::BeautifyEffect::Beautify* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set__beautify");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "_beautify", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SKW_BLOOM
::StringW BeautifyEffect::Beautify::_get_SKW_BLOOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get_SKW_BLOOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeautifyEffect", "Beautify", "SKW_BLOOM"));
}
// Autogenerated static field setter
// Set static field: static public System.String SKW_BLOOM
void BeautifyEffect::Beautify::_set_SKW_BLOOM(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set_SKW_BLOOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "SKW_BLOOM", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SKW_LUT
::StringW BeautifyEffect::Beautify::_get_SKW_LUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get_SKW_LUT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeautifyEffect", "Beautify", "SKW_LUT"));
}
// Autogenerated static field setter
// Set static field: static public System.String SKW_LUT
void BeautifyEffect::Beautify::_set_SKW_LUT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set_SKW_LUT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "SKW_LUT", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SKW_NIGHT_VISION
::StringW BeautifyEffect::Beautify::_get_SKW_NIGHT_VISION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get_SKW_NIGHT_VISION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeautifyEffect", "Beautify", "SKW_NIGHT_VISION"));
}
// Autogenerated static field setter
// Set static field: static public System.String SKW_NIGHT_VISION
void BeautifyEffect::Beautify::_set_SKW_NIGHT_VISION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set_SKW_NIGHT_VISION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "SKW_NIGHT_VISION", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SKW_THERMAL_VISION
::StringW BeautifyEffect::Beautify::_get_SKW_THERMAL_VISION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get_SKW_THERMAL_VISION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeautifyEffect", "Beautify", "SKW_THERMAL_VISION"));
}
// Autogenerated static field setter
// Set static field: static public System.String SKW_THERMAL_VISION
void BeautifyEffect::Beautify::_set_SKW_THERMAL_VISION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set_SKW_THERMAL_VISION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "SKW_THERMAL_VISION", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SKW_OUTLINE
::StringW BeautifyEffect::Beautify::_get_SKW_OUTLINE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get_SKW_OUTLINE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeautifyEffect", "Beautify", "SKW_OUTLINE"));
}
// Autogenerated static field setter
// Set static field: static public System.String SKW_OUTLINE
void BeautifyEffect::Beautify::_set_SKW_OUTLINE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set_SKW_OUTLINE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "SKW_OUTLINE", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SKW_FRAME
::StringW BeautifyEffect::Beautify::_get_SKW_FRAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get_SKW_FRAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeautifyEffect", "Beautify", "SKW_FRAME"));
}
// Autogenerated static field setter
// Set static field: static public System.String SKW_FRAME
void BeautifyEffect::Beautify::_set_SKW_FRAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set_SKW_FRAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "SKW_FRAME", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SKW_FRAME_MASK
::StringW BeautifyEffect::Beautify::_get_SKW_FRAME_MASK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get_SKW_FRAME_MASK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeautifyEffect", "Beautify", "SKW_FRAME_MASK"));
}
// Autogenerated static field setter
// Set static field: static public System.String SKW_FRAME_MASK
void BeautifyEffect::Beautify::_set_SKW_FRAME_MASK(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set_SKW_FRAME_MASK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "SKW_FRAME_MASK", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SKW_DALTONIZE
::StringW BeautifyEffect::Beautify::_get_SKW_DALTONIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get_SKW_DALTONIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeautifyEffect", "Beautify", "SKW_DALTONIZE"));
}
// Autogenerated static field setter
// Set static field: static public System.String SKW_DALTONIZE
void BeautifyEffect::Beautify::_set_SKW_DALTONIZE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set_SKW_DALTONIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "SKW_DALTONIZE", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SKW_DIRT
::StringW BeautifyEffect::Beautify::_get_SKW_DIRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get_SKW_DIRT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeautifyEffect", "Beautify", "SKW_DIRT"));
}
// Autogenerated static field setter
// Set static field: static public System.String SKW_DIRT
void BeautifyEffect::Beautify::_set_SKW_DIRT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set_SKW_DIRT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "SKW_DIRT", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SKW_VIGNETTING
::StringW BeautifyEffect::Beautify::_get_SKW_VIGNETTING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get_SKW_VIGNETTING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeautifyEffect", "Beautify", "SKW_VIGNETTING"));
}
// Autogenerated static field setter
// Set static field: static public System.String SKW_VIGNETTING
void BeautifyEffect::Beautify::_set_SKW_VIGNETTING(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set_SKW_VIGNETTING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "SKW_VIGNETTING", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SKW_VIGNETTING_MASK
::StringW BeautifyEffect::Beautify::_get_SKW_VIGNETTING_MASK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get_SKW_VIGNETTING_MASK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeautifyEffect", "Beautify", "SKW_VIGNETTING_MASK"));
}
// Autogenerated static field setter
// Set static field: static public System.String SKW_VIGNETTING_MASK
void BeautifyEffect::Beautify::_set_SKW_VIGNETTING_MASK(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set_SKW_VIGNETTING_MASK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "SKW_VIGNETTING_MASK", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SKW_DEPTH_OF_FIELD
::StringW BeautifyEffect::Beautify::_get_SKW_DEPTH_OF_FIELD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get_SKW_DEPTH_OF_FIELD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeautifyEffect", "Beautify", "SKW_DEPTH_OF_FIELD"));
}
// Autogenerated static field setter
// Set static field: static public System.String SKW_DEPTH_OF_FIELD
void BeautifyEffect::Beautify::_set_SKW_DEPTH_OF_FIELD(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set_SKW_DEPTH_OF_FIELD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "SKW_DEPTH_OF_FIELD", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SKW_DEPTH_OF_FIELD_TRANSPARENT
::StringW BeautifyEffect::Beautify::_get_SKW_DEPTH_OF_FIELD_TRANSPARENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get_SKW_DEPTH_OF_FIELD_TRANSPARENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeautifyEffect", "Beautify", "SKW_DEPTH_OF_FIELD_TRANSPARENT"));
}
// Autogenerated static field setter
// Set static field: static public System.String SKW_DEPTH_OF_FIELD_TRANSPARENT
void BeautifyEffect::Beautify::_set_SKW_DEPTH_OF_FIELD_TRANSPARENT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set_SKW_DEPTH_OF_FIELD_TRANSPARENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "SKW_DEPTH_OF_FIELD_TRANSPARENT", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SKW_EYE_ADAPTATION
::StringW BeautifyEffect::Beautify::_get_SKW_EYE_ADAPTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get_SKW_EYE_ADAPTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeautifyEffect", "Beautify", "SKW_EYE_ADAPTATION"));
}
// Autogenerated static field setter
// Set static field: static public System.String SKW_EYE_ADAPTATION
void BeautifyEffect::Beautify::_set_SKW_EYE_ADAPTATION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set_SKW_EYE_ADAPTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "SKW_EYE_ADAPTATION", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SKW_TONEMAP_ACES
::StringW BeautifyEffect::Beautify::_get_SKW_TONEMAP_ACES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get_SKW_TONEMAP_ACES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeautifyEffect", "Beautify", "SKW_TONEMAP_ACES"));
}
// Autogenerated static field setter
// Set static field: static public System.String SKW_TONEMAP_ACES
void BeautifyEffect::Beautify::_set_SKW_TONEMAP_ACES(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set_SKW_TONEMAP_ACES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "SKW_TONEMAP_ACES", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SKW_PURKINJE
::StringW BeautifyEffect::Beautify::_get_SKW_PURKINJE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get_SKW_PURKINJE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeautifyEffect", "Beautify", "SKW_PURKINJE"));
}
// Autogenerated static field setter
// Set static field: static public System.String SKW_PURKINJE
void BeautifyEffect::Beautify::_set_SKW_PURKINJE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set_SKW_PURKINJE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "SKW_PURKINJE", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SKW_BLOOM_USE_DEPTH
::StringW BeautifyEffect::Beautify::_get_SKW_BLOOM_USE_DEPTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get_SKW_BLOOM_USE_DEPTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeautifyEffect", "Beautify", "SKW_BLOOM_USE_DEPTH"));
}
// Autogenerated static field setter
// Set static field: static public System.String SKW_BLOOM_USE_DEPTH
void BeautifyEffect::Beautify::_set_SKW_BLOOM_USE_DEPTH(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set_SKW_BLOOM_USE_DEPTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "SKW_BLOOM_USE_DEPTH", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SKW_BLOOM_USE_LAYER
::StringW BeautifyEffect::Beautify::_get_SKW_BLOOM_USE_LAYER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get_SKW_BLOOM_USE_LAYER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeautifyEffect", "Beautify", "SKW_BLOOM_USE_LAYER"));
}
// Autogenerated static field setter
// Set static field: static public System.String SKW_BLOOM_USE_LAYER
void BeautifyEffect::Beautify::_set_SKW_BLOOM_USE_LAYER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set_SKW_BLOOM_USE_LAYER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "SKW_BLOOM_USE_LAYER", value));
}
// Autogenerated static field getter
// Get static field: static private System.String BEAUTIFY_BUILD_HINT
::StringW BeautifyEffect::Beautify::_get_BEAUTIFY_BUILD_HINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_get_BEAUTIFY_BUILD_HINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeautifyEffect", "Beautify", "BEAUTIFY_BUILD_HINT"));
}
// Autogenerated static field setter
// Set static field: static private System.String BEAUTIFY_BUILD_HINT
void BeautifyEffect::Beautify::_set_BEAUTIFY_BUILD_HINT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::_set_BEAUTIFY_BUILD_HINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeautifyEffect", "Beautify", "BEAUTIFY_BUILD_HINT", value));
}
// Autogenerated instance field getter
// Get instance field: private BeautifyEffect.BEAUTIFY_PRESET _preset
[[deprecated("Use field access instead!")]] ::BeautifyEffect::BEAUTIFY_PRESET& BeautifyEffect::Beautify::dyn__preset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__preset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_preset"))->offset;
  return *reinterpret_cast<::BeautifyEffect::BEAUTIFY_PRESET*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeautifyEffect.BEAUTIFY_QUALITY _quality
[[deprecated("Use field access instead!")]] ::BeautifyEffect::BEAUTIFY_QUALITY& BeautifyEffect::Beautify::dyn__quality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__quality");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_quality"))->offset;
  return *reinterpret_cast<::BeautifyEffect::BEAUTIFY_QUALITY*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeautifyEffect.BeautifyProfile _profile
[[deprecated("Use field access instead!")]] ::BeautifyEffect::BeautifyProfile*& BeautifyEffect::Beautify::dyn__profile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__profile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_profile"))->offset;
  return *reinterpret_cast<::BeautifyEffect::BeautifyProfile**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _compareMode
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__compareMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__compareMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compareMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _compareLineAngle
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__compareLineAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__compareLineAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compareLineAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _compareLineWidth
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__compareLineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__compareLineWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compareLineWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _dither
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__dither() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__dither");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dither"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _ditherDepth
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__ditherDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__ditherDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ditherDepth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sharpenMinDepth
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sharpenMinDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sharpenMinDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sharpenMinDepth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sharpenMaxDepth
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sharpenMaxDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sharpenMaxDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sharpenMaxDepth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sharpen
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sharpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sharpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sharpen"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sharpenDepthThreshold
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sharpenDepthThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sharpenDepthThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sharpenDepthThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _tintColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& BeautifyEffect::Beautify::dyn__tintColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__tintColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tintColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sharpenRelaxation
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sharpenRelaxation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sharpenRelaxation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sharpenRelaxation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sharpenClamp
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sharpenClamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sharpenClamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sharpenClamp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sharpenMotionSensibility
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sharpenMotionSensibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sharpenMotionSensibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sharpenMotionSensibility"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _saturate
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__saturate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__saturate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saturate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _contrast
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__contrast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__contrast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contrast"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _brightness
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__brightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _daltonize
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__daltonize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__daltonize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_daltonize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _vignetting
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__vignetting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__vignetting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vignetting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _vignettingColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& BeautifyEffect::Beautify::dyn__vignettingColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__vignettingColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vignettingColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _vignettingFade
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__vignettingFade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__vignettingFade");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vignettingFade"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _vignettingCircularShape
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__vignettingCircularShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__vignettingCircularShape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vignettingCircularShape"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _vignettingAspectRatio
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__vignettingAspectRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__vignettingAspectRatio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vignettingAspectRatio"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _vignettingBlink
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__vignettingBlink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__vignettingBlink");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vignettingBlink"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _vignettingMask
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& BeautifyEffect::Beautify::dyn__vignettingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__vignettingMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vignettingMask"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _frame
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__frame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_frame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _frameColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& BeautifyEffect::Beautify::dyn__frameColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__frameColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_frameColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _frameMask
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& BeautifyEffect::Beautify::dyn__frameMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__frameMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_frameMask"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lut
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__lut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__lut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lut"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lutIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__lutIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__lutIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lutIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _lutTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& BeautifyEffect::Beautify::dyn__lutTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__lutTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lutTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _nightVision
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__nightVision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__nightVision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nightVision"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _nightVisionColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& BeautifyEffect::Beautify::dyn__nightVisionColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__nightVisionColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nightVisionColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _outline
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__outline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__outline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outline"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _outlineColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& BeautifyEffect::Beautify::dyn__outlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__outlineColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outlineColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _thermalVision
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__thermalVision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__thermalVision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thermalVision"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lensDirt
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__lensDirt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__lensDirt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lensDirt"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lensDirtThreshold
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__lensDirtThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__lensDirtThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lensDirtThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lensDirtIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__lensDirtIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__lensDirtIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lensDirtIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _lensDirtTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& BeautifyEffect::Beautify::dyn__lensDirtTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__lensDirtTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lensDirtTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _bloom
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__bloom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _bloomCullingMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& BeautifyEffect::Beautify::dyn__bloomCullingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomCullingMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomCullingMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomLayerMaskDownsampling
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__bloomLayerMaskDownsampling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomLayerMaskDownsampling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomLayerMaskDownsampling"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__bloomIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomMaxBrightness
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__bloomMaxBrightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomMaxBrightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomMaxBrightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomBoost0
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__bloomBoost0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomBoost0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomBoost0"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomBoost1
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__bloomBoost1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomBoost1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomBoost1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomBoost2
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__bloomBoost2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomBoost2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomBoost2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomBoost3
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__bloomBoost3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomBoost3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomBoost3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomBoost4
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__bloomBoost4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomBoost4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomBoost4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomBoost5
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__bloomBoost5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomBoost5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomBoost5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _bloomAntiflicker
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__bloomAntiflicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomAntiflicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomAntiflicker"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _bloomUltra
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__bloomUltra() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomUltra");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomUltra"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomThreshold
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__bloomThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _bloomCustomize
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__bloomCustomize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomCustomize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomCustomize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _bloomDebug
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__bloomDebug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomDebug");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomDebug"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomWeight0
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__bloomWeight0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomWeight0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomWeight0"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomWeight1
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__bloomWeight1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomWeight1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomWeight1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomWeight2
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__bloomWeight2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomWeight2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomWeight2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomWeight3
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__bloomWeight3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomWeight3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomWeight3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomWeight4
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__bloomWeight4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomWeight4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomWeight4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomWeight5
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__bloomWeight5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomWeight5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomWeight5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _bloomBlur
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__bloomBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomBlur");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomBlur"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomDepthAtten
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__bloomDepthAtten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomDepthAtten");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomDepthAtten"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomLayerZBias
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__bloomLayerZBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__bloomLayerZBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomLayerZBias"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _anamorphicFlares
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__anamorphicFlares() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__anamorphicFlares");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anamorphicFlares"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _anamorphicFlaresIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__anamorphicFlaresIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__anamorphicFlaresIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anamorphicFlaresIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _anamorphicFlaresAntiflicker
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__anamorphicFlaresAntiflicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__anamorphicFlaresAntiflicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anamorphicFlaresAntiflicker"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _anamorphicFlaresUltra
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__anamorphicFlaresUltra() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__anamorphicFlaresUltra");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anamorphicFlaresUltra"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _anamorphicFlaresThreshold
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__anamorphicFlaresThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__anamorphicFlaresThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anamorphicFlaresThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _anamorphicFlaresSpread
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__anamorphicFlaresSpread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__anamorphicFlaresSpread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anamorphicFlaresSpread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _anamorphicFlaresVertical
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__anamorphicFlaresVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__anamorphicFlaresVertical");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anamorphicFlaresVertical"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _anamorphicFlaresTint
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& BeautifyEffect::Beautify::dyn__anamorphicFlaresTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__anamorphicFlaresTint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anamorphicFlaresTint"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _anamorphicFlaresBlur
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__anamorphicFlaresBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__anamorphicFlaresBlur");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anamorphicFlaresBlur"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _depthOfField
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__depthOfField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _depthOfFieldTransparencySupport
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__depthOfFieldTransparencySupport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldTransparencySupport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldTransparencySupport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _depthOfFieldTransparencyLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& BeautifyEffect::Beautify::dyn__depthOfFieldTransparencyLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldTransparencyLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldTransparencyLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _depthOfFieldTargetFocus
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& BeautifyEffect::Beautify::dyn__depthOfFieldTargetFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldTargetFocus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldTargetFocus"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _depthOfFieldDebug
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__depthOfFieldDebug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldDebug");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldDebug"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _depthOfFieldAutofocus
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__depthOfFieldAutofocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldAutofocus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldAutofocus"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _depthofFieldAutofocusViewportPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& BeautifyEffect::Beautify::dyn__depthofFieldAutofocusViewportPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthofFieldAutofocusViewportPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthofFieldAutofocusViewportPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _depthOfFieldAutofocusMinDistance
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__depthOfFieldAutofocusMinDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldAutofocusMinDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldAutofocusMinDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _depthOfFieldAutofocusMaxDistance
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__depthOfFieldAutofocusMaxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldAutofocusMaxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldAutofocusMaxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _depthOfFieldAutofocusLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& BeautifyEffect::Beautify::dyn__depthOfFieldAutofocusLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldAutofocusLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldAutofocusLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _depthOfFieldExclusionLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& BeautifyEffect::Beautify::dyn__depthOfFieldExclusionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldExclusionLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldExclusionLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _depthOfFieldExclusionLayerMaskDownsampling
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__depthOfFieldExclusionLayerMaskDownsampling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldExclusionLayerMaskDownsampling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldExclusionLayerMaskDownsampling"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _depthOfFieldTransparencySupportDownsampling
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__depthOfFieldTransparencySupportDownsampling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldTransparencySupportDownsampling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldTransparencySupportDownsampling"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _depthOfFieldExclusionBias
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__depthOfFieldExclusionBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldExclusionBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldExclusionBias"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _depthOfFieldDistance
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__depthOfFieldDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _depthOfFieldFocusSpeed
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__depthOfFieldFocusSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldFocusSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldFocusSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _depthOfFieldDownsampling
[[deprecated("Use field access instead!")]] int& BeautifyEffect::Beautify::dyn__depthOfFieldDownsampling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldDownsampling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldDownsampling"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _depthOfFieldMaxSamples
[[deprecated("Use field access instead!")]] int& BeautifyEffect::Beautify::dyn__depthOfFieldMaxSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldMaxSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldMaxSamples"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _depthOfFieldFocalLength
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__depthOfFieldFocalLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldFocalLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldFocalLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _depthOfFieldAperture
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__depthOfFieldAperture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldAperture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldAperture"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _depthOfFieldForegroundBlur
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__depthOfFieldForegroundBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldForegroundBlur");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldForegroundBlur"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _depthOfFieldForegroundBlurHQ
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__depthOfFieldForegroundBlurHQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldForegroundBlurHQ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldForegroundBlurHQ"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _depthOfFieldForegroundDistance
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__depthOfFieldForegroundDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldForegroundDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldForegroundDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _depthOfFieldBokeh
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__depthOfFieldBokeh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldBokeh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldBokeh"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _depthOfFieldBokehThreshold
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__depthOfFieldBokehThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldBokehThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldBokehThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _depthOfFieldBokehIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__depthOfFieldBokehIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldBokehIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldBokehIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _depthOfFieldMaxBrightness
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__depthOfFieldMaxBrightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldMaxBrightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldMaxBrightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _depthOfFieldMaxDistance
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__depthOfFieldMaxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldMaxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldMaxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.FilterMode _depthOfFieldFilterMode
[[deprecated("Use field access instead!")]] ::UnityEngine::FilterMode& BeautifyEffect::Beautify::dyn__depthOfFieldFilterMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__depthOfFieldFilterMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthOfFieldFilterMode"))->offset;
  return *reinterpret_cast<::UnityEngine::FilterMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeautifyEffect.OnBeforeFocusEvent OnBeforeFocus
[[deprecated("Use field access instead!")]] ::BeautifyEffect::OnBeforeFocusEvent*& BeautifyEffect::Beautify::dyn_OnBeforeFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_OnBeforeFocus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnBeforeFocus"))->offset;
  return *reinterpret_cast<::BeautifyEffect::OnBeforeFocusEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _eyeAdaptation
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__eyeAdaptation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__eyeAdaptation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eyeAdaptation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _eyeAdaptationMinExposure
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__eyeAdaptationMinExposure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__eyeAdaptationMinExposure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eyeAdaptationMinExposure"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _eyeAdaptationMaxExposure
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__eyeAdaptationMaxExposure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__eyeAdaptationMaxExposure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eyeAdaptationMaxExposure"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _eyeAdaptationSpeedToLight
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__eyeAdaptationSpeedToLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__eyeAdaptationSpeedToLight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eyeAdaptationSpeedToLight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _eyeAdaptationSpeedToDark
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__eyeAdaptationSpeedToDark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__eyeAdaptationSpeedToDark");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eyeAdaptationSpeedToDark"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _purkinje
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__purkinje() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__purkinje");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_purkinje"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _purkinjeAmount
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__purkinjeAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__purkinjeAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_purkinjeAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _purkinjeLuminanceThreshold
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__purkinjeLuminanceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__purkinjeLuminanceThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_purkinjeLuminanceThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeautifyEffect.BEAUTIFY_TMO _tonemap
[[deprecated("Use field access instead!")]] ::BeautifyEffect::BEAUTIFY_TMO& BeautifyEffect::Beautify::dyn__tonemap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__tonemap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tonemap"))->offset;
  return *reinterpret_cast<::BeautifyEffect::BEAUTIFY_TMO*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sunFlares
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__sunFlares() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlares");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlares"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _sun
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& BeautifyEffect::Beautify::dyn__sun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sun");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sun"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _sunFlaresLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& BeautifyEffect::Beautify::dyn__sunFlaresLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresSolarWindSpeed
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresSolarWindSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresSolarWindSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresSolarWindSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _sunFlaresTint
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& BeautifyEffect::Beautify::dyn__sunFlaresTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresTint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresTint"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _sunFlaresDownsampling
[[deprecated("Use field access instead!")]] int& BeautifyEffect::Beautify::dyn__sunFlaresDownsampling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresDownsampling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresDownsampling"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresSunIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresSunIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresSunIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresSunIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresSunDiskSize
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresSunDiskSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresSunDiskSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresSunDiskSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresSunRayDiffractionIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresSunRayDiffractionIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresSunRayDiffractionIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresSunRayDiffractionIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresSunRayDiffractionThreshold
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresSunRayDiffractionThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresSunRayDiffractionThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresSunRayDiffractionThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresCoronaRays1Length
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresCoronaRays1Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresCoronaRays1Length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresCoronaRays1Length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _sunFlaresCoronaRays1Streaks
[[deprecated("Use field access instead!")]] int& BeautifyEffect::Beautify::dyn__sunFlaresCoronaRays1Streaks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresCoronaRays1Streaks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresCoronaRays1Streaks"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresCoronaRays1Spread
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresCoronaRays1Spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresCoronaRays1Spread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresCoronaRays1Spread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresCoronaRays1AngleOffset
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresCoronaRays1AngleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresCoronaRays1AngleOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresCoronaRays1AngleOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresCoronaRays2Length
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresCoronaRays2Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresCoronaRays2Length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresCoronaRays2Length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _sunFlaresCoronaRays2Streaks
[[deprecated("Use field access instead!")]] int& BeautifyEffect::Beautify::dyn__sunFlaresCoronaRays2Streaks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresCoronaRays2Streaks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresCoronaRays2Streaks"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresCoronaRays2Spread
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresCoronaRays2Spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresCoronaRays2Spread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresCoronaRays2Spread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresCoronaRays2AngleOffset
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresCoronaRays2AngleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresCoronaRays2AngleOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresCoronaRays2AngleOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresGhosts1Size
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresGhosts1Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresGhosts1Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresGhosts1Size"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresGhosts1Offset
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresGhosts1Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresGhosts1Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresGhosts1Offset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresGhosts1Brightness
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresGhosts1Brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresGhosts1Brightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresGhosts1Brightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresGhosts2Size
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresGhosts2Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresGhosts2Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresGhosts2Size"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresGhosts2Offset
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresGhosts2Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresGhosts2Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresGhosts2Offset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresGhosts2Brightness
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresGhosts2Brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresGhosts2Brightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresGhosts2Brightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresGhosts3Size
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresGhosts3Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresGhosts3Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresGhosts3Size"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresGhosts3Brightness
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresGhosts3Brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresGhosts3Brightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresGhosts3Brightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresGhosts3Offset
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresGhosts3Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresGhosts3Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresGhosts3Offset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresGhosts4Size
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresGhosts4Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresGhosts4Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresGhosts4Size"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresGhosts4Offset
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresGhosts4Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresGhosts4Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresGhosts4Offset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresGhosts4Brightness
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresGhosts4Brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresGhosts4Brightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresGhosts4Brightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresHaloOffset
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresHaloOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresHaloOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresHaloOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresHaloAmplitude
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresHaloAmplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresHaloAmplitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresHaloAmplitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sunFlaresHaloIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__sunFlaresHaloIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresHaloIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresHaloIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sunFlaresRotationDeadZone
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__sunFlaresRotationDeadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__sunFlaresRotationDeadZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunFlaresRotationDeadZone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _blur
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__blur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__blur");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blur"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _blurIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__blurIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__blurIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blurIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pixelateAmount
[[deprecated("Use field access instead!")]] int& BeautifyEffect::Beautify::dyn__pixelateAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__pixelateAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pixelateAmount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _pixelateDownscale
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn__pixelateDownscale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__pixelateDownscale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pixelateDownscale"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _antialiasStrength
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__antialiasStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__antialiasStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_antialiasStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _antialiasDepthThreshold
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn__antialiasDepthThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn__antialiasDepthThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_antialiasDepthThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isDirty
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn_isDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_isDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material bMatDesktop
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& BeautifyEffect::Beautify::dyn_bMatDesktop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_bMatDesktop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bMatDesktop"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material bMatMobile
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& BeautifyEffect::Beautify::dyn_bMatMobile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_bMatMobile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bMatMobile"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material bMatBasic
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& BeautifyEffect::Beautify::dyn_bMatBasic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_bMatBasic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bMatBasic"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material bMat
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& BeautifyEffect::Beautify::dyn_bMat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_bMat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bMat"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera currentCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& BeautifyEffect::Beautify::dyn_currentCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_currentCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 camPrevForward
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& BeautifyEffect::Beautify::dyn_camPrevForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_camPrevForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "camPrevForward"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 camPrevPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& BeautifyEffect::Beautify::dyn_camPrevPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_camPrevPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "camPrevPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currSens
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn_currSens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_currSens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currSens"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 renderPass
[[deprecated("Use field access instead!")]] int& BeautifyEffect::Beautify::dyn_renderPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_renderPass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderPass"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTextureFormat rtFormat
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTextureFormat& BeautifyEffect::Beautify::dyn_rtFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_rtFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rtFormat"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTextureFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture[] rt
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RenderTexture*>& BeautifyEffect::Beautify::dyn_rt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_rt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rt"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RenderTexture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture[] rtAF
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RenderTexture*>& BeautifyEffect::Beautify::dyn_rtAF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_rtAF");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rtAF"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RenderTexture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture[] rtEA
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RenderTexture*>& BeautifyEffect::Beautify::dyn_rtEA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_rtEA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rtEA"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RenderTexture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture rtEAacum
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& BeautifyEffect::Beautify::dyn_rtEAacum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_rtEAacum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rtEAacum"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture rtEAHist
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& BeautifyEffect::Beautify::dyn_rtEAHist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_rtEAHist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rtEAHist"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single dofPrevDistance
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn_dofPrevDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_dofPrevDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dofPrevDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single dofLastAutofocusDistance
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn_dofLastAutofocusDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_dofLastAutofocusDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dofLastAutofocusDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector4 dofLastBokehData
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& BeautifyEffect::Beautify::dyn_dofLastBokehData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_dofLastBokehData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dofLastBokehData"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera sceneCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& BeautifyEffect::Beautify::dyn_sceneCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_sceneCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera depthCam
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& BeautifyEffect::Beautify::dyn_depthCam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_depthCam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthCam"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject depthCamObj
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& BeautifyEffect::Beautify::dyn_depthCamObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_depthCamObj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthCamObj"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> shaderKeywords
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& BeautifyEffect::Beautify::dyn_shaderKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_shaderKeywords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shaderKeywords"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader depthShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& BeautifyEffect::Beautify::dyn_depthShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_depthShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader dofExclusionShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& BeautifyEffect::Beautify::dyn_dofExclusionShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_dofExclusionShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dofExclusionShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean shouldUpdateMaterialProperties
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::Beautify::dyn_shouldUpdateMaterialProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_shouldUpdateMaterialProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shouldUpdateMaterialProperties"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single sunFlareCurrentIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn_sunFlareCurrentIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_sunFlareCurrentIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlareCurrentIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector4 sunLastScrPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& BeautifyEffect::Beautify::dyn_sunLastScrPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_sunLastScrPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunLastScrPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single sunLastRot
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn_sunLastRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_sunLastRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunLastRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D flareNoise
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& BeautifyEffect::Beautify::dyn_flareNoise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_flareNoise");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flareNoise"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture dofDepthTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& BeautifyEffect::Beautify::dyn_dofDepthTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_dofDepthTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dofDepthTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture dofExclusionTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& BeautifyEffect::Beautify::dyn_dofExclusionTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_dofExclusionTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dofExclusionTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture bloomSourceTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& BeautifyEffect::Beautify::dyn_bloomSourceTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_bloomSourceTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomSourceTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture bloomSourceDepthTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& BeautifyEffect::Beautify::dyn_bloomSourceDepthTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_bloomSourceDepthTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomSourceDepthTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture pixelateTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& BeautifyEffect::Beautify::dyn_pixelateTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_pixelateTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pixelateTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTextureDescriptor rtDescBase
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTextureDescriptor& BeautifyEffect::Beautify::dyn_rtDescBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_rtDescBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rtDescBase"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTextureDescriptor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single sunFlareTime
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::dyn_sunFlareTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_sunFlareTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlareTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 dofCurrentLayerMaskValue
[[deprecated("Use field access instead!")]] int& BeautifyEffect::Beautify::dyn_dofCurrentLayerMaskValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_dofCurrentLayerMaskValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dofCurrentLayerMaskValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 bloomCurrentLayerMaskValue
[[deprecated("Use field access instead!")]] int& BeautifyEffect::Beautify::dyn_bloomCurrentLayerMaskValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::dyn_bloomCurrentLayerMaskValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomCurrentLayerMaskValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeautifyEffect.Beautify.get_preset
::BeautifyEffect::BEAUTIFY_PRESET BeautifyEffect::Beautify::get_preset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_preset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeautifyEffect::BEAUTIFY_PRESET, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_preset
void BeautifyEffect::Beautify::set_preset(::BeautifyEffect::BEAUTIFY_PRESET value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_preset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_preset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_quality
::BeautifyEffect::BEAUTIFY_QUALITY BeautifyEffect::Beautify::get_quality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_quality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_quality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeautifyEffect::BEAUTIFY_QUALITY, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_quality
void BeautifyEffect::Beautify::set_quality(::BeautifyEffect::BEAUTIFY_QUALITY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_quality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_quality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_profile
::BeautifyEffect::BeautifyProfile* BeautifyEffect::Beautify::get_profile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_profile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_profile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeautifyEffect::BeautifyProfile*, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_profile
void BeautifyEffect::Beautify::set_profile(::BeautifyEffect::BeautifyProfile* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_profile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_profile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_compareMode
bool BeautifyEffect::Beautify::get_compareMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_compareMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_compareMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_compareMode
void BeautifyEffect::Beautify::set_compareMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_compareMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_compareMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_compareLineAngle
float BeautifyEffect::Beautify::get_compareLineAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_compareLineAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_compareLineAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_compareLineAngle
void BeautifyEffect::Beautify::set_compareLineAngle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_compareLineAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_compareLineAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_compareLineWidth
float BeautifyEffect::Beautify::get_compareLineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_compareLineWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_compareLineWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_compareLineWidth
void BeautifyEffect::Beautify::set_compareLineWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_compareLineWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_compareLineWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_dither
float BeautifyEffect::Beautify::get_dither() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_dither");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dither", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_dither
void BeautifyEffect::Beautify::set_dither(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_dither");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dither", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_ditherDepth
float BeautifyEffect::Beautify::get_ditherDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_ditherDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ditherDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_ditherDepth
void BeautifyEffect::Beautify::set_ditherDepth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_ditherDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ditherDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sharpenMinDepth
float BeautifyEffect::Beautify::get_sharpenMinDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sharpenMinDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharpenMinDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sharpenMinDepth
void BeautifyEffect::Beautify::set_sharpenMinDepth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sharpenMinDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharpenMinDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sharpenMaxDepth
float BeautifyEffect::Beautify::get_sharpenMaxDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sharpenMaxDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharpenMaxDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sharpenMaxDepth
void BeautifyEffect::Beautify::set_sharpenMaxDepth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sharpenMaxDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharpenMaxDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sharpen
float BeautifyEffect::Beautify::get_sharpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sharpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sharpen
void BeautifyEffect::Beautify::set_sharpen(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sharpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sharpenDepthThreshold
float BeautifyEffect::Beautify::get_sharpenDepthThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sharpenDepthThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharpenDepthThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sharpenDepthThreshold
void BeautifyEffect::Beautify::set_sharpenDepthThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sharpenDepthThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharpenDepthThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_tintColor
::UnityEngine::Color BeautifyEffect::Beautify::get_tintColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_tintColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_tintColor
void BeautifyEffect::Beautify::set_tintColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_tintColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sharpenRelaxation
float BeautifyEffect::Beautify::get_sharpenRelaxation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sharpenRelaxation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharpenRelaxation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sharpenRelaxation
void BeautifyEffect::Beautify::set_sharpenRelaxation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sharpenRelaxation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharpenRelaxation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sharpenClamp
float BeautifyEffect::Beautify::get_sharpenClamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sharpenClamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharpenClamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sharpenClamp
void BeautifyEffect::Beautify::set_sharpenClamp(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sharpenClamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharpenClamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sharpenMotionSensibility
float BeautifyEffect::Beautify::get_sharpenMotionSensibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sharpenMotionSensibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharpenMotionSensibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sharpenMotionSensibility
void BeautifyEffect::Beautify::set_sharpenMotionSensibility(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sharpenMotionSensibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharpenMotionSensibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_saturate
float BeautifyEffect::Beautify::get_saturate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_saturate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_saturate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_saturate
void BeautifyEffect::Beautify::set_saturate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_saturate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_saturate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_contrast
float BeautifyEffect::Beautify::get_contrast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_contrast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contrast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_contrast
void BeautifyEffect::Beautify::set_contrast(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_contrast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_contrast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_brightness
float BeautifyEffect::Beautify::get_brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_brightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_brightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_brightness
void BeautifyEffect::Beautify::set_brightness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_brightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_brightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_daltonize
float BeautifyEffect::Beautify::get_daltonize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_daltonize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_daltonize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_daltonize
void BeautifyEffect::Beautify::set_daltonize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_daltonize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_daltonize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_vignetting
bool BeautifyEffect::Beautify::get_vignetting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_vignetting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vignetting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_vignetting
void BeautifyEffect::Beautify::set_vignetting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_vignetting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vignetting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_vignettingColor
::UnityEngine::Color BeautifyEffect::Beautify::get_vignettingColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_vignettingColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vignettingColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_vignettingColor
void BeautifyEffect::Beautify::set_vignettingColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_vignettingColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vignettingColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_vignettingFade
float BeautifyEffect::Beautify::get_vignettingFade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_vignettingFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vignettingFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_vignettingFade
void BeautifyEffect::Beautify::set_vignettingFade(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_vignettingFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vignettingFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_vignettingCircularShape
bool BeautifyEffect::Beautify::get_vignettingCircularShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_vignettingCircularShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vignettingCircularShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_vignettingCircularShape
void BeautifyEffect::Beautify::set_vignettingCircularShape(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_vignettingCircularShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vignettingCircularShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_vignettingAspectRatio
float BeautifyEffect::Beautify::get_vignettingAspectRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_vignettingAspectRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vignettingAspectRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_vignettingAspectRatio
void BeautifyEffect::Beautify::set_vignettingAspectRatio(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_vignettingAspectRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vignettingAspectRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_vignettingBlink
float BeautifyEffect::Beautify::get_vignettingBlink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_vignettingBlink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vignettingBlink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_vignettingBlink
void BeautifyEffect::Beautify::set_vignettingBlink(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_vignettingBlink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vignettingBlink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_vignettingMask
::UnityEngine::Texture2D* BeautifyEffect::Beautify::get_vignettingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_vignettingMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vignettingMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_vignettingMask
void BeautifyEffect::Beautify::set_vignettingMask(::UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_vignettingMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vignettingMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_frame
bool BeautifyEffect::Beautify::get_frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_frame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_frame
void BeautifyEffect::Beautify::set_frame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_frame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_frame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_frameColor
::UnityEngine::Color BeautifyEffect::Beautify::get_frameColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_frameColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frameColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_frameColor
void BeautifyEffect::Beautify::set_frameColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_frameColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_frameColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_frameMask
::UnityEngine::Texture2D* BeautifyEffect::Beautify::get_frameMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_frameMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frameMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_frameMask
void BeautifyEffect::Beautify::set_frameMask(::UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_frameMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_frameMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_lut
bool BeautifyEffect::Beautify::get_lut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_lut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_lut
void BeautifyEffect::Beautify::set_lut(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_lut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_lutIntensity
float BeautifyEffect::Beautify::get_lutIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_lutIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lutIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_lutIntensity
void BeautifyEffect::Beautify::set_lutIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_lutIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lutIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_lutTexture
::UnityEngine::Texture2D* BeautifyEffect::Beautify::get_lutTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_lutTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lutTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_lutTexture
void BeautifyEffect::Beautify::set_lutTexture(::UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_lutTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lutTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_nightVision
bool BeautifyEffect::Beautify::get_nightVision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_nightVision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nightVision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_nightVision
void BeautifyEffect::Beautify::set_nightVision(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_nightVision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_nightVision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_nightVisionColor
::UnityEngine::Color BeautifyEffect::Beautify::get_nightVisionColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_nightVisionColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nightVisionColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_nightVisionColor
void BeautifyEffect::Beautify::set_nightVisionColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_nightVisionColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_nightVisionColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_outline
bool BeautifyEffect::Beautify::get_outline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_outline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_outline
void BeautifyEffect::Beautify::set_outline(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_outline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_outline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_outlineColor
::UnityEngine::Color BeautifyEffect::Beautify::get_outlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_outlineColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outlineColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_outlineColor
void BeautifyEffect::Beautify::set_outlineColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_outlineColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_outlineColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_thermalVision
bool BeautifyEffect::Beautify::get_thermalVision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_thermalVision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_thermalVision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_thermalVision
void BeautifyEffect::Beautify::set_thermalVision(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_thermalVision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_thermalVision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_lensDirt
bool BeautifyEffect::Beautify::get_lensDirt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_lensDirt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lensDirt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_lensDirt
void BeautifyEffect::Beautify::set_lensDirt(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_lensDirt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lensDirt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_lensDirtThreshold
float BeautifyEffect::Beautify::get_lensDirtThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_lensDirtThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lensDirtThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_lensDirtThreshold
void BeautifyEffect::Beautify::set_lensDirtThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_lensDirtThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lensDirtThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_lensDirtIntensity
float BeautifyEffect::Beautify::get_lensDirtIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_lensDirtIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lensDirtIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_lensDirtIntensity
void BeautifyEffect::Beautify::set_lensDirtIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_lensDirtIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lensDirtIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_lensDirtTexture
::UnityEngine::Texture2D* BeautifyEffect::Beautify::get_lensDirtTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_lensDirtTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lensDirtTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_lensDirtTexture
void BeautifyEffect::Beautify::set_lensDirtTexture(::UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_lensDirtTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lensDirtTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloom
bool BeautifyEffect::Beautify::get_bloom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloom
void BeautifyEffect::Beautify::set_bloom(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomCullingMask
::UnityEngine::LayerMask BeautifyEffect::Beautify::get_bloomCullingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomCullingMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomCullingMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomCullingMask
void BeautifyEffect::Beautify::set_bloomCullingMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomCullingMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomCullingMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomLayerMaskDownsampling
float BeautifyEffect::Beautify::get_bloomLayerMaskDownsampling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomLayerMaskDownsampling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomLayerMaskDownsampling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomLayerMaskDownsampling
void BeautifyEffect::Beautify::set_bloomLayerMaskDownsampling(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomLayerMaskDownsampling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomLayerMaskDownsampling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomIntensity
float BeautifyEffect::Beautify::get_bloomIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomIntensity
void BeautifyEffect::Beautify::set_bloomIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomMaxBrightness
float BeautifyEffect::Beautify::get_bloomMaxBrightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomMaxBrightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomMaxBrightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomMaxBrightness
void BeautifyEffect::Beautify::set_bloomMaxBrightness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomMaxBrightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomMaxBrightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomBoost0
float BeautifyEffect::Beautify::get_bloomBoost0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomBoost0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomBoost0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomBoost0
void BeautifyEffect::Beautify::set_bloomBoost0(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomBoost0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomBoost0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomBoost1
float BeautifyEffect::Beautify::get_bloomBoost1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomBoost1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomBoost1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomBoost1
void BeautifyEffect::Beautify::set_bloomBoost1(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomBoost1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomBoost1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomBoost2
float BeautifyEffect::Beautify::get_bloomBoost2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomBoost2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomBoost2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomBoost2
void BeautifyEffect::Beautify::set_bloomBoost2(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomBoost2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomBoost2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomBoost3
float BeautifyEffect::Beautify::get_bloomBoost3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomBoost3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomBoost3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomBoost3
void BeautifyEffect::Beautify::set_bloomBoost3(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomBoost3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomBoost3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomBoost4
float BeautifyEffect::Beautify::get_bloomBoost4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomBoost4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomBoost4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomBoost4
void BeautifyEffect::Beautify::set_bloomBoost4(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomBoost4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomBoost4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomBoost5
float BeautifyEffect::Beautify::get_bloomBoost5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomBoost5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomBoost5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomBoost5
void BeautifyEffect::Beautify::set_bloomBoost5(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomBoost5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomBoost5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomAntiflicker
bool BeautifyEffect::Beautify::get_bloomAntiflicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomAntiflicker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomAntiflicker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomAntiflicker
void BeautifyEffect::Beautify::set_bloomAntiflicker(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomAntiflicker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomAntiflicker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomUltra
bool BeautifyEffect::Beautify::get_bloomUltra() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomUltra");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomUltra", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomUltra
void BeautifyEffect::Beautify::set_bloomUltra(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomUltra");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomUltra", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomThreshold
float BeautifyEffect::Beautify::get_bloomThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomThreshold
void BeautifyEffect::Beautify::set_bloomThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomCustomize
bool BeautifyEffect::Beautify::get_bloomCustomize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomCustomize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomCustomize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomCustomize
void BeautifyEffect::Beautify::set_bloomCustomize(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomCustomize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomCustomize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomDebug
bool BeautifyEffect::Beautify::get_bloomDebug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomDebug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomDebug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomDebug
void BeautifyEffect::Beautify::set_bloomDebug(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomDebug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomDebug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomWeight0
float BeautifyEffect::Beautify::get_bloomWeight0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomWeight0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomWeight0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomWeight0
void BeautifyEffect::Beautify::set_bloomWeight0(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomWeight0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomWeight0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomWeight1
float BeautifyEffect::Beautify::get_bloomWeight1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomWeight1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomWeight1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomWeight1
void BeautifyEffect::Beautify::set_bloomWeight1(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomWeight1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomWeight1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomWeight2
float BeautifyEffect::Beautify::get_bloomWeight2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomWeight2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomWeight2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomWeight2
void BeautifyEffect::Beautify::set_bloomWeight2(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomWeight2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomWeight2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomWeight3
float BeautifyEffect::Beautify::get_bloomWeight3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomWeight3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomWeight3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomWeight3
void BeautifyEffect::Beautify::set_bloomWeight3(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomWeight3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomWeight3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomWeight4
float BeautifyEffect::Beautify::get_bloomWeight4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomWeight4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomWeight4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomWeight4
void BeautifyEffect::Beautify::set_bloomWeight4(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomWeight4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomWeight4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomWeight5
float BeautifyEffect::Beautify::get_bloomWeight5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomWeight5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomWeight5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomWeight5
void BeautifyEffect::Beautify::set_bloomWeight5(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomWeight5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomWeight5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomBlur
bool BeautifyEffect::Beautify::get_bloomBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomBlur");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomBlur", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomBlur
void BeautifyEffect::Beautify::set_bloomBlur(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomBlur");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomBlur", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomDepthAtten
float BeautifyEffect::Beautify::get_bloomDepthAtten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomDepthAtten");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomDepthAtten", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomDepthAtten
void BeautifyEffect::Beautify::set_bloomDepthAtten(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomDepthAtten");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomDepthAtten", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_bloomLayerZBias
float BeautifyEffect::Beautify::get_bloomLayerZBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_bloomLayerZBias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomLayerZBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_bloomLayerZBias
void BeautifyEffect::Beautify::set_bloomLayerZBias(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_bloomLayerZBias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomLayerZBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_anamorphicFlares
bool BeautifyEffect::Beautify::get_anamorphicFlares() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_anamorphicFlares");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anamorphicFlares", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_anamorphicFlares
void BeautifyEffect::Beautify::set_anamorphicFlares(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_anamorphicFlares");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anamorphicFlares", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_anamorphicFlaresIntensity
float BeautifyEffect::Beautify::get_anamorphicFlaresIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_anamorphicFlaresIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anamorphicFlaresIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_anamorphicFlaresIntensity
void BeautifyEffect::Beautify::set_anamorphicFlaresIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_anamorphicFlaresIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anamorphicFlaresIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_anamorphicFlaresAntiflicker
bool BeautifyEffect::Beautify::get_anamorphicFlaresAntiflicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_anamorphicFlaresAntiflicker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anamorphicFlaresAntiflicker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_anamorphicFlaresAntiflicker
void BeautifyEffect::Beautify::set_anamorphicFlaresAntiflicker(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_anamorphicFlaresAntiflicker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anamorphicFlaresAntiflicker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_anamorphicFlaresUltra
bool BeautifyEffect::Beautify::get_anamorphicFlaresUltra() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_anamorphicFlaresUltra");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anamorphicFlaresUltra", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_anamorphicFlaresUltra
void BeautifyEffect::Beautify::set_anamorphicFlaresUltra(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_anamorphicFlaresUltra");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anamorphicFlaresUltra", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_anamorphicFlaresThreshold
float BeautifyEffect::Beautify::get_anamorphicFlaresThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_anamorphicFlaresThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anamorphicFlaresThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_anamorphicFlaresThreshold
void BeautifyEffect::Beautify::set_anamorphicFlaresThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_anamorphicFlaresThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anamorphicFlaresThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_anamorphicFlaresSpread
float BeautifyEffect::Beautify::get_anamorphicFlaresSpread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_anamorphicFlaresSpread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anamorphicFlaresSpread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_anamorphicFlaresSpread
void BeautifyEffect::Beautify::set_anamorphicFlaresSpread(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_anamorphicFlaresSpread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anamorphicFlaresSpread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_anamorphicFlaresVertical
bool BeautifyEffect::Beautify::get_anamorphicFlaresVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_anamorphicFlaresVertical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anamorphicFlaresVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_anamorphicFlaresVertical
void BeautifyEffect::Beautify::set_anamorphicFlaresVertical(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_anamorphicFlaresVertical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anamorphicFlaresVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_anamorphicFlaresTint
::UnityEngine::Color BeautifyEffect::Beautify::get_anamorphicFlaresTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_anamorphicFlaresTint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anamorphicFlaresTint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_anamorphicFlaresTint
void BeautifyEffect::Beautify::set_anamorphicFlaresTint(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_anamorphicFlaresTint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anamorphicFlaresTint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_anamorphicFlaresBlur
bool BeautifyEffect::Beautify::get_anamorphicFlaresBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_anamorphicFlaresBlur");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anamorphicFlaresBlur", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_anamorphicFlaresBlur
void BeautifyEffect::Beautify::set_anamorphicFlaresBlur(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_anamorphicFlaresBlur");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anamorphicFlaresBlur", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfField
bool BeautifyEffect::Beautify::get_depthOfField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfField
void BeautifyEffect::Beautify::set_depthOfField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldTransparencySupport
bool BeautifyEffect::Beautify::get_depthOfFieldTransparencySupport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldTransparencySupport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldTransparencySupport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldTransparencySupport
void BeautifyEffect::Beautify::set_depthOfFieldTransparencySupport(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldTransparencySupport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldTransparencySupport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldTransparencyLayerMask
::UnityEngine::LayerMask BeautifyEffect::Beautify::get_depthOfFieldTransparencyLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldTransparencyLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldTransparencyLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldTransparencyLayerMask
void BeautifyEffect::Beautify::set_depthOfFieldTransparencyLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldTransparencyLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldTransparencyLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldTargetFocus
::UnityEngine::Transform* BeautifyEffect::Beautify::get_depthOfFieldTargetFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldTargetFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldTargetFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldTargetFocus
void BeautifyEffect::Beautify::set_depthOfFieldTargetFocus(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldTargetFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldTargetFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldDebug
bool BeautifyEffect::Beautify::get_depthOfFieldDebug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldDebug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldDebug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldDebug
void BeautifyEffect::Beautify::set_depthOfFieldDebug(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldDebug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldDebug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldAutofocus
bool BeautifyEffect::Beautify::get_depthOfFieldAutofocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldAutofocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldAutofocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldAutofocus
void BeautifyEffect::Beautify::set_depthOfFieldAutofocus(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldAutofocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldAutofocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthofFieldAutofocusViewportPoint
::UnityEngine::Vector2 BeautifyEffect::Beautify::get_depthofFieldAutofocusViewportPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthofFieldAutofocusViewportPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthofFieldAutofocusViewportPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthofFieldAutofocusViewportPoint
void BeautifyEffect::Beautify::set_depthofFieldAutofocusViewportPoint(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthofFieldAutofocusViewportPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthofFieldAutofocusViewportPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldAutofocusMinDistance
float BeautifyEffect::Beautify::get_depthOfFieldAutofocusMinDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldAutofocusMinDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldAutofocusMinDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldAutofocusMinDistance
void BeautifyEffect::Beautify::set_depthOfFieldAutofocusMinDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldAutofocusMinDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldAutofocusMinDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldAutofocusMaxDistance
float BeautifyEffect::Beautify::get_depthOfFieldAutofocusMaxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldAutofocusMaxDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldAutofocusMaxDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldAutofocusMaxDistance
void BeautifyEffect::Beautify::set_depthOfFieldAutofocusMaxDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldAutofocusMaxDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldAutofocusMaxDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldAutofocusLayerMask
::UnityEngine::LayerMask BeautifyEffect::Beautify::get_depthOfFieldAutofocusLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldAutofocusLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldAutofocusLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldAutofocusLayerMask
void BeautifyEffect::Beautify::set_depthOfFieldAutofocusLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldAutofocusLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldAutofocusLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldExclusionLayerMask
::UnityEngine::LayerMask BeautifyEffect::Beautify::get_depthOfFieldExclusionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldExclusionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldExclusionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldExclusionLayerMask
void BeautifyEffect::Beautify::set_depthOfFieldExclusionLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldExclusionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldExclusionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldExclusionLayerMaskDownsampling
float BeautifyEffect::Beautify::get_depthOfFieldExclusionLayerMaskDownsampling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldExclusionLayerMaskDownsampling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldExclusionLayerMaskDownsampling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldExclusionLayerMaskDownsampling
void BeautifyEffect::Beautify::set_depthOfFieldExclusionLayerMaskDownsampling(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldExclusionLayerMaskDownsampling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldExclusionLayerMaskDownsampling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldTransparencySupportDownsampling
float BeautifyEffect::Beautify::get_depthOfFieldTransparencySupportDownsampling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldTransparencySupportDownsampling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldTransparencySupportDownsampling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldTransparencySupportDownsampling
void BeautifyEffect::Beautify::set_depthOfFieldTransparencySupportDownsampling(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldTransparencySupportDownsampling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldTransparencySupportDownsampling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldExclusionBias
float BeautifyEffect::Beautify::get_depthOfFieldExclusionBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldExclusionBias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldExclusionBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldExclusionBias
void BeautifyEffect::Beautify::set_depthOfFieldExclusionBias(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldExclusionBias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldExclusionBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldDistance
float BeautifyEffect::Beautify::get_depthOfFieldDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldDistance
void BeautifyEffect::Beautify::set_depthOfFieldDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldFocusSpeed
float BeautifyEffect::Beautify::get_depthOfFieldFocusSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldFocusSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldFocusSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldFocusSpeed
void BeautifyEffect::Beautify::set_depthOfFieldFocusSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldFocusSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldFocusSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldDownsampling
int BeautifyEffect::Beautify::get_depthOfFieldDownsampling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldDownsampling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldDownsampling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldDownsampling
void BeautifyEffect::Beautify::set_depthOfFieldDownsampling(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldDownsampling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldDownsampling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldMaxSamples
int BeautifyEffect::Beautify::get_depthOfFieldMaxSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldMaxSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldMaxSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldMaxSamples
void BeautifyEffect::Beautify::set_depthOfFieldMaxSamples(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldMaxSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldMaxSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldFocalLength
float BeautifyEffect::Beautify::get_depthOfFieldFocalLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldFocalLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldFocalLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldFocalLength
void BeautifyEffect::Beautify::set_depthOfFieldFocalLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldFocalLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldFocalLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldAperture
float BeautifyEffect::Beautify::get_depthOfFieldAperture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldAperture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldAperture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldAperture
void BeautifyEffect::Beautify::set_depthOfFieldAperture(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldAperture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldAperture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldForegroundBlur
bool BeautifyEffect::Beautify::get_depthOfFieldForegroundBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldForegroundBlur");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldForegroundBlur", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldForegroundBlur
void BeautifyEffect::Beautify::set_depthOfFieldForegroundBlur(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldForegroundBlur");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldForegroundBlur", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldForegroundBlurHQ
bool BeautifyEffect::Beautify::get_depthOfFieldForegroundBlurHQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldForegroundBlurHQ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldForegroundBlurHQ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldForegroundBlurHQ
void BeautifyEffect::Beautify::set_depthOfFieldForegroundBlurHQ(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldForegroundBlurHQ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldForegroundBlurHQ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldForegroundDistance
float BeautifyEffect::Beautify::get_depthOfFieldForegroundDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldForegroundDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldForegroundDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldForegroundDistance
void BeautifyEffect::Beautify::set_depthOfFieldForegroundDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldForegroundDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldForegroundDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldBokeh
bool BeautifyEffect::Beautify::get_depthOfFieldBokeh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldBokeh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldBokeh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldBokeh
void BeautifyEffect::Beautify::set_depthOfFieldBokeh(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldBokeh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldBokeh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldBokehThreshold
float BeautifyEffect::Beautify::get_depthOfFieldBokehThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldBokehThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldBokehThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldBokehThreshold
void BeautifyEffect::Beautify::set_depthOfFieldBokehThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldBokehThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldBokehThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldBokehIntensity
float BeautifyEffect::Beautify::get_depthOfFieldBokehIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldBokehIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldBokehIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldBokehIntensity
void BeautifyEffect::Beautify::set_depthOfFieldBokehIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldBokehIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldBokehIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldMaxBrightness
float BeautifyEffect::Beautify::get_depthOfFieldMaxBrightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldMaxBrightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldMaxBrightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldMaxBrightness
void BeautifyEffect::Beautify::set_depthOfFieldMaxBrightness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldMaxBrightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldMaxBrightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldMaxDistance
float BeautifyEffect::Beautify::get_depthOfFieldMaxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldMaxDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldMaxDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldMaxDistance
void BeautifyEffect::Beautify::set_depthOfFieldMaxDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldMaxDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldMaxDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldFilterMode
::UnityEngine::FilterMode BeautifyEffect::Beautify::get_depthOfFieldFilterMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldFilterMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldFilterMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::FilterMode, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_depthOfFieldFilterMode
void BeautifyEffect::Beautify::set_depthOfFieldFilterMode(::UnityEngine::FilterMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_depthOfFieldFilterMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthOfFieldFilterMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_eyeAdaptation
bool BeautifyEffect::Beautify::get_eyeAdaptation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_eyeAdaptation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eyeAdaptation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_eyeAdaptation
void BeautifyEffect::Beautify::set_eyeAdaptation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_eyeAdaptation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eyeAdaptation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_eyeAdaptationMinExposure
float BeautifyEffect::Beautify::get_eyeAdaptationMinExposure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_eyeAdaptationMinExposure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eyeAdaptationMinExposure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_eyeAdaptationMinExposure
void BeautifyEffect::Beautify::set_eyeAdaptationMinExposure(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_eyeAdaptationMinExposure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eyeAdaptationMinExposure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_eyeAdaptationMaxExposure
float BeautifyEffect::Beautify::get_eyeAdaptationMaxExposure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_eyeAdaptationMaxExposure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eyeAdaptationMaxExposure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_eyeAdaptationMaxExposure
void BeautifyEffect::Beautify::set_eyeAdaptationMaxExposure(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_eyeAdaptationMaxExposure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eyeAdaptationMaxExposure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_eyeAdaptationSpeedToLight
float BeautifyEffect::Beautify::get_eyeAdaptationSpeedToLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_eyeAdaptationSpeedToLight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eyeAdaptationSpeedToLight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_eyeAdaptationSpeedToLight
void BeautifyEffect::Beautify::set_eyeAdaptationSpeedToLight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_eyeAdaptationSpeedToLight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eyeAdaptationSpeedToLight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_eyeAdaptationSpeedToDark
float BeautifyEffect::Beautify::get_eyeAdaptationSpeedToDark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_eyeAdaptationSpeedToDark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eyeAdaptationSpeedToDark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_eyeAdaptationSpeedToDark
void BeautifyEffect::Beautify::set_eyeAdaptationSpeedToDark(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_eyeAdaptationSpeedToDark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eyeAdaptationSpeedToDark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_purkinje
bool BeautifyEffect::Beautify::get_purkinje() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_purkinje");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_purkinje", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_purkinje
void BeautifyEffect::Beautify::set_purkinje(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_purkinje");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_purkinje", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_purkinjeAmount
float BeautifyEffect::Beautify::get_purkinjeAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_purkinjeAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_purkinjeAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_purkinjeAmount
void BeautifyEffect::Beautify::set_purkinjeAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_purkinjeAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_purkinjeAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_purkinjeLuminanceThreshold
float BeautifyEffect::Beautify::get_purkinjeLuminanceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_purkinjeLuminanceThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_purkinjeLuminanceThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_purkinjeLuminanceThreshold
void BeautifyEffect::Beautify::set_purkinjeLuminanceThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_purkinjeLuminanceThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_purkinjeLuminanceThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_tonemap
::BeautifyEffect::BEAUTIFY_TMO BeautifyEffect::Beautify::get_tonemap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_tonemap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tonemap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeautifyEffect::BEAUTIFY_TMO, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_tonemap
void BeautifyEffect::Beautify::set_tonemap(::BeautifyEffect::BEAUTIFY_TMO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_tonemap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tonemap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlares
bool BeautifyEffect::Beautify::get_sunFlares() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlares");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlares", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlares
void BeautifyEffect::Beautify::set_sunFlares(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlares");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlares", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sun
::UnityEngine::Transform* BeautifyEffect::Beautify::get_sun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sun");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sun", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sun
void BeautifyEffect::Beautify::set_sun(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sun");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sun", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresLayerMask
::UnityEngine::LayerMask BeautifyEffect::Beautify::get_sunFlaresLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresLayerMask
void BeautifyEffect::Beautify::set_sunFlaresLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresIntensity
float BeautifyEffect::Beautify::get_sunFlaresIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresIntensity
void BeautifyEffect::Beautify::set_sunFlaresIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresSolarWindSpeed
float BeautifyEffect::Beautify::get_sunFlaresSolarWindSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresSolarWindSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresSolarWindSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresSolarWindSpeed
void BeautifyEffect::Beautify::set_sunFlaresSolarWindSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresSolarWindSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresSolarWindSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresTint
::UnityEngine::Color BeautifyEffect::Beautify::get_sunFlaresTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresTint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresTint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresTint
void BeautifyEffect::Beautify::set_sunFlaresTint(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresTint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresTint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresDownsampling
int BeautifyEffect::Beautify::get_sunFlaresDownsampling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresDownsampling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresDownsampling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresDownsampling
void BeautifyEffect::Beautify::set_sunFlaresDownsampling(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresDownsampling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresDownsampling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresSunIntensity
float BeautifyEffect::Beautify::get_sunFlaresSunIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresSunIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresSunIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresSunIntensity
void BeautifyEffect::Beautify::set_sunFlaresSunIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresSunIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresSunIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresSunDiskSize
float BeautifyEffect::Beautify::get_sunFlaresSunDiskSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresSunDiskSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresSunDiskSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresSunDiskSize
void BeautifyEffect::Beautify::set_sunFlaresSunDiskSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresSunDiskSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresSunDiskSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresSunRayDiffractionIntensity
float BeautifyEffect::Beautify::get_sunFlaresSunRayDiffractionIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresSunRayDiffractionIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresSunRayDiffractionIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresSunRayDiffractionIntensity
void BeautifyEffect::Beautify::set_sunFlaresSunRayDiffractionIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresSunRayDiffractionIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresSunRayDiffractionIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresSunRayDiffractionThreshold
float BeautifyEffect::Beautify::get_sunFlaresSunRayDiffractionThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresSunRayDiffractionThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresSunRayDiffractionThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresSunRayDiffractionThreshold
void BeautifyEffect::Beautify::set_sunFlaresSunRayDiffractionThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresSunRayDiffractionThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresSunRayDiffractionThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresCoronaRays1Length
float BeautifyEffect::Beautify::get_sunFlaresCoronaRays1Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresCoronaRays1Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresCoronaRays1Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresCoronaRays1Length
void BeautifyEffect::Beautify::set_sunFlaresCoronaRays1Length(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresCoronaRays1Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresCoronaRays1Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresCoronaRays1Streaks
int BeautifyEffect::Beautify::get_sunFlaresCoronaRays1Streaks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresCoronaRays1Streaks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresCoronaRays1Streaks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresCoronaRays1Streaks
void BeautifyEffect::Beautify::set_sunFlaresCoronaRays1Streaks(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresCoronaRays1Streaks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresCoronaRays1Streaks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresCoronaRays1Spread
float BeautifyEffect::Beautify::get_sunFlaresCoronaRays1Spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresCoronaRays1Spread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresCoronaRays1Spread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresCoronaRays1Spread
void BeautifyEffect::Beautify::set_sunFlaresCoronaRays1Spread(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresCoronaRays1Spread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresCoronaRays1Spread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresCoronaRays1AngleOffset
float BeautifyEffect::Beautify::get_sunFlaresCoronaRays1AngleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresCoronaRays1AngleOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresCoronaRays1AngleOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresCoronaRays1AngleOffset
void BeautifyEffect::Beautify::set_sunFlaresCoronaRays1AngleOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresCoronaRays1AngleOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresCoronaRays1AngleOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresCoronaRays2Length
float BeautifyEffect::Beautify::get_sunFlaresCoronaRays2Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresCoronaRays2Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresCoronaRays2Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresCoronaRays2Length
void BeautifyEffect::Beautify::set_sunFlaresCoronaRays2Length(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresCoronaRays2Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresCoronaRays2Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresCoronaRays2Streaks
int BeautifyEffect::Beautify::get_sunFlaresCoronaRays2Streaks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresCoronaRays2Streaks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresCoronaRays2Streaks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresCoronaRays2Streaks
void BeautifyEffect::Beautify::set_sunFlaresCoronaRays2Streaks(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresCoronaRays2Streaks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresCoronaRays2Streaks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresCoronaRays2Spread
float BeautifyEffect::Beautify::get_sunFlaresCoronaRays2Spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresCoronaRays2Spread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresCoronaRays2Spread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresCoronaRays2Spread
void BeautifyEffect::Beautify::set_sunFlaresCoronaRays2Spread(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresCoronaRays2Spread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresCoronaRays2Spread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresCoronaRays2AngleOffset
float BeautifyEffect::Beautify::get_sunFlaresCoronaRays2AngleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresCoronaRays2AngleOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresCoronaRays2AngleOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresCoronaRays2AngleOffset
void BeautifyEffect::Beautify::set_sunFlaresCoronaRays2AngleOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresCoronaRays2AngleOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresCoronaRays2AngleOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresGhosts1Size
float BeautifyEffect::Beautify::get_sunFlaresGhosts1Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresGhosts1Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresGhosts1Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresGhosts1Size
void BeautifyEffect::Beautify::set_sunFlaresGhosts1Size(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresGhosts1Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresGhosts1Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresGhosts1Offset
float BeautifyEffect::Beautify::get_sunFlaresGhosts1Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresGhosts1Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresGhosts1Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresGhosts1Offset
void BeautifyEffect::Beautify::set_sunFlaresGhosts1Offset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresGhosts1Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresGhosts1Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresGhosts1Brightness
float BeautifyEffect::Beautify::get_sunFlaresGhosts1Brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresGhosts1Brightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresGhosts1Brightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresGhosts1Brightness
void BeautifyEffect::Beautify::set_sunFlaresGhosts1Brightness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresGhosts1Brightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresGhosts1Brightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresGhosts2Size
float BeautifyEffect::Beautify::get_sunFlaresGhosts2Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresGhosts2Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresGhosts2Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresGhosts2Size
void BeautifyEffect::Beautify::set_sunFlaresGhosts2Size(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresGhosts2Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresGhosts2Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresGhosts2Offset
float BeautifyEffect::Beautify::get_sunFlaresGhosts2Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresGhosts2Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresGhosts2Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresGhosts2Offset
void BeautifyEffect::Beautify::set_sunFlaresGhosts2Offset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresGhosts2Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresGhosts2Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresGhosts2Brightness
float BeautifyEffect::Beautify::get_sunFlaresGhosts2Brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresGhosts2Brightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresGhosts2Brightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresGhosts2Brightness
void BeautifyEffect::Beautify::set_sunFlaresGhosts2Brightness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresGhosts2Brightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresGhosts2Brightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresGhosts3Size
float BeautifyEffect::Beautify::get_sunFlaresGhosts3Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresGhosts3Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresGhosts3Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresGhosts3Size
void BeautifyEffect::Beautify::set_sunFlaresGhosts3Size(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresGhosts3Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresGhosts3Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresGhosts3Brightness
float BeautifyEffect::Beautify::get_sunFlaresGhosts3Brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresGhosts3Brightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresGhosts3Brightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresGhosts3Brightness
void BeautifyEffect::Beautify::set_sunFlaresGhosts3Brightness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresGhosts3Brightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresGhosts3Brightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresGhosts3Offset
float BeautifyEffect::Beautify::get_sunFlaresGhosts3Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresGhosts3Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresGhosts3Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresGhosts3Offset
void BeautifyEffect::Beautify::set_sunFlaresGhosts3Offset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresGhosts3Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresGhosts3Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresGhosts4Size
float BeautifyEffect::Beautify::get_sunFlaresGhosts4Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresGhosts4Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresGhosts4Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresGhosts4Size
void BeautifyEffect::Beautify::set_sunFlaresGhosts4Size(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresGhosts4Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresGhosts4Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresGhosts4Offset
float BeautifyEffect::Beautify::get_sunFlaresGhosts4Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresGhosts4Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresGhosts4Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresGhosts4Offset
void BeautifyEffect::Beautify::set_sunFlaresGhosts4Offset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresGhosts4Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresGhosts4Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresGhosts4Brightness
float BeautifyEffect::Beautify::get_sunFlaresGhosts4Brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresGhosts4Brightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresGhosts4Brightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresGhosts4Brightness
void BeautifyEffect::Beautify::set_sunFlaresGhosts4Brightness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresGhosts4Brightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresGhosts4Brightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresHaloOffset
float BeautifyEffect::Beautify::get_sunFlaresHaloOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresHaloOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresHaloOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresHaloOffset
void BeautifyEffect::Beautify::set_sunFlaresHaloOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresHaloOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresHaloOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresHaloAmplitude
float BeautifyEffect::Beautify::get_sunFlaresHaloAmplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresHaloAmplitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresHaloAmplitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresHaloAmplitude
void BeautifyEffect::Beautify::set_sunFlaresHaloAmplitude(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresHaloAmplitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresHaloAmplitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresHaloIntensity
float BeautifyEffect::Beautify::get_sunFlaresHaloIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresHaloIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresHaloIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresHaloIntensity
void BeautifyEffect::Beautify::set_sunFlaresHaloIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresHaloIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresHaloIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_sunFlaresRotationDeadZone
bool BeautifyEffect::Beautify::get_sunFlaresRotationDeadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_sunFlaresRotationDeadZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sunFlaresRotationDeadZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_sunFlaresRotationDeadZone
void BeautifyEffect::Beautify::set_sunFlaresRotationDeadZone(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_sunFlaresRotationDeadZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sunFlaresRotationDeadZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_blur
bool BeautifyEffect::Beautify::get_blur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_blur");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blur", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_blur
void BeautifyEffect::Beautify::set_blur(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_blur");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_blur", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_blurIntensity
float BeautifyEffect::Beautify::get_blurIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_blurIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blurIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_blurIntensity
void BeautifyEffect::Beautify::set_blurIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_blurIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_blurIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_pixelateAmount
int BeautifyEffect::Beautify::get_pixelateAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_pixelateAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelateAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_pixelateAmount
void BeautifyEffect::Beautify::set_pixelateAmount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_pixelateAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pixelateAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_pixelateDownscale
bool BeautifyEffect::Beautify::get_pixelateDownscale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_pixelateDownscale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelateDownscale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_pixelateDownscale
void BeautifyEffect::Beautify::set_pixelateDownscale(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_pixelateDownscale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pixelateDownscale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_antialiasStrength
float BeautifyEffect::Beautify::get_antialiasStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_antialiasStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_antialiasStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_antialiasStrength
void BeautifyEffect::Beautify::set_antialiasStrength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_antialiasStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_antialiasStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_antialiasDepthThreshold
float BeautifyEffect::Beautify::get_antialiasDepthThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_antialiasDepthThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_antialiasDepthThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.set_antialiasDepthThreshold
void BeautifyEffect::Beautify::set_antialiasDepthThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::set_antialiasDepthThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_antialiasDepthThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeautifyEffect.Beautify.get_instance
::BeautifyEffect::Beautify* BeautifyEffect::Beautify::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BeautifyEffect", "Beautify", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeautifyEffect::Beautify*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.get_cameraEffect
::UnityEngine::Camera* BeautifyEffect::Beautify::get_cameraEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_cameraEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cameraEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.get_depthOfFieldCurrentFocalPointDistance
float BeautifyEffect::Beautify::get_depthOfFieldCurrentFocalPointDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::get_depthOfFieldCurrentFocalPointDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthOfFieldCurrentFocalPointDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.OnEnable
void BeautifyEffect::Beautify::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.OnDestroy
void BeautifyEffect::Beautify::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.Reset
void BeautifyEffect::Beautify::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.LateUpdate
void BeautifyEffect::Beautify::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.OnPreCull
void BeautifyEffect::Beautify::OnPreCull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::OnPreCull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreCull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.OnPreRender
void BeautifyEffect::Beautify::OnPreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::OnPreRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.CleanUpRT
void BeautifyEffect::Beautify::CleanUpRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::CleanUpRT");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanUpRT", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.CheckDoFTransparencySupport
void BeautifyEffect::Beautify::CheckDoFTransparencySupport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::CheckDoFTransparencySupport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDoFTransparencySupport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.CheckDoFExclusionMask
void BeautifyEffect::Beautify::CheckDoFExclusionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::CheckDoFExclusionMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDoFExclusionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.CheckBloomCullingLayer
void BeautifyEffect::Beautify::CheckBloomCullingLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::CheckBloomCullingLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckBloomCullingLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.OnRenderImage
void BeautifyEffect::Beautify::OnRenderImage(::UnityEngine::RenderTexture* source, ::UnityEngine::RenderTexture* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::OnRenderImage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BeautifyEffect::Beautify*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, destination);
}
// Autogenerated method: BeautifyEffect.Beautify.OnPostRender
void BeautifyEffect::Beautify::OnPostRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::OnPostRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.BlurThis
void BeautifyEffect::Beautify::BlurThis(::UnityEngine::RenderTexture* rt, float blurScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::BlurThis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlurThis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(blurScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rt, blurScale);
}
// Autogenerated method: BeautifyEffect.Beautify.BlurThisDownscaling
void BeautifyEffect::Beautify::BlurThisDownscaling(::UnityEngine::RenderTexture* rt, ::UnityEngine::RenderTexture* downscaled, float blurScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::BlurThisDownscaling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlurThisDownscaling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(downscaled), ::il2cpp_utils::ExtractType(blurScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rt, downscaled, blurScale);
}
// Autogenerated method: BeautifyEffect.Beautify.BlurThisOneDirection
::UnityEngine::RenderTexture* BeautifyEffect::Beautify::BlurThisOneDirection(::UnityEngine::RenderTexture* rt, bool vertical, float blurScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::BlurThisOneDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlurThisOneDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(vertical), ::il2cpp_utils::ExtractType(blurScale)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(this, ___internal__method, rt, vertical, blurScale);
}
// Autogenerated method: BeautifyEffect.Beautify.BlurThisDoF
void BeautifyEffect::Beautify::BlurThisDoF(::UnityEngine::RenderTexture* rt, int renderPass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::BlurThisDoF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlurThisDoF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(renderPass)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rt, renderPass);
}
// Autogenerated method: BeautifyEffect.Beautify.BlurThisAlpha
void BeautifyEffect::Beautify::BlurThisAlpha(::UnityEngine::RenderTexture* rt, float blurScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::BlurThisAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlurThisAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(blurScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rt, blurScale);
}
// Autogenerated method: BeautifyEffect.Beautify.OnDidApplyAnimationProperties
void BeautifyEffect::Beautify::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::OnDidApplyAnimationProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.UpdateQualitySettings
void BeautifyEffect::Beautify::UpdateQualitySettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::UpdateQualitySettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateQualitySettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.UpdateMaterialProperties
void BeautifyEffect::Beautify::UpdateMaterialProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::UpdateMaterialProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaterialProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.UpdateMaterialPropertiesNow
void BeautifyEffect::Beautify::UpdateMaterialPropertiesNow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::UpdateMaterialPropertiesNow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaterialPropertiesNow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.UpdateMaterialBloomIntensityAndThreshold
void BeautifyEffect::Beautify::UpdateMaterialBloomIntensityAndThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::UpdateMaterialBloomIntensityAndThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaterialBloomIntensityAndThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.UpdateMaterialAnamorphicIntensityAndThreshold
void BeautifyEffect::Beautify::UpdateMaterialAnamorphicIntensityAndThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::UpdateMaterialAnamorphicIntensityAndThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaterialAnamorphicIntensityAndThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.UpdateSharpenParams
void BeautifyEffect::Beautify::UpdateSharpenParams(float sharpen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::UpdateSharpenParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSharpenParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sharpen)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sharpen);
}
// Autogenerated method: BeautifyEffect.Beautify.UpdateDepthOfFieldData
void BeautifyEffect::Beautify::UpdateDepthOfFieldData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::UpdateDepthOfFieldData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDepthOfFieldData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.UpdateDepthOfFieldBlurData
void BeautifyEffect::Beautify::UpdateDepthOfFieldBlurData(::UnityEngine::Vector2 blurDir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::UpdateDepthOfFieldBlurData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDepthOfFieldBlurData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blurDir)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, blurDir);
}
// Autogenerated method: BeautifyEffect.Beautify.UpdateDoFAutofocusDistance
void BeautifyEffect::Beautify::UpdateDoFAutofocusDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::UpdateDoFAutofocusDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDoFAutofocusDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify.Blink
void BeautifyEffect::Beautify::Blink(float duration, float maxValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::Blink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Blink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(maxValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, duration, maxValue);
}
// Autogenerated method: BeautifyEffect.Beautify.DoBlink
::System::Collections::IEnumerator* BeautifyEffect::Beautify::DoBlink(float duration, float maxValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::DoBlink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoBlink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(maxValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, duration, maxValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeautifyEffect.Beautify/BeautifyEffect.<DoBlink>d__712
#include "BeautifyEffect/Beautify_-DoBlink-d__712.hpp"
// Including type: UnityEngine.WaitForEndOfFrame
#include "UnityEngine/WaitForEndOfFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& BeautifyEffect::Beautify::$DoBlink$d__712::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::$DoBlink$d__712::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& BeautifyEffect::Beautify::$DoBlink$d__712::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::$DoBlink$d__712::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single duration
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::$DoBlink$d__712::dyn_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::$DoBlink$d__712::dyn_duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeautifyEffect.Beautify <>4__this
[[deprecated("Use field access instead!")]] ::BeautifyEffect::Beautify*& BeautifyEffect::Beautify::$DoBlink$d__712::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::$DoBlink$d__712::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::BeautifyEffect::Beautify**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxValue
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::$DoBlink$d__712::dyn_maxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::$DoBlink$d__712::dyn_maxValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <start>5__2
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::$DoBlink$d__712::dyn_$start$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::$DoBlink$d__712::dyn_$start$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<start>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <t>5__3
[[deprecated("Use field access instead!")]] float& BeautifyEffect::Beautify::$DoBlink$d__712::dyn_$t$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::$DoBlink$d__712::dyn_$t$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<t>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.WaitForEndOfFrame <w>5__4
[[deprecated("Use field access instead!")]] ::UnityEngine::WaitForEndOfFrame*& BeautifyEffect::Beautify::$DoBlink$d__712::dyn_$w$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::$DoBlink$d__712::dyn_$w$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<w>5__4"))->offset;
  return *reinterpret_cast<::UnityEngine::WaitForEndOfFrame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeautifyEffect.Beautify/BeautifyEffect.<DoBlink>d__712.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* BeautifyEffect::Beautify::$DoBlink$d__712::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::$DoBlink$d__712::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BeautifyEffect::Beautify::$DoBlink$d__712*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify/BeautifyEffect.<DoBlink>d__712.System.Collections.IEnumerator.get_Current
::Il2CppObject* BeautifyEffect::Beautify::$DoBlink$d__712::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::$DoBlink$d__712::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BeautifyEffect::Beautify::$DoBlink$d__712*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify/BeautifyEffect.<DoBlink>d__712.System.IDisposable.Dispose
void BeautifyEffect::Beautify::$DoBlink$d__712::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::$DoBlink$d__712::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BeautifyEffect::Beautify::$DoBlink$d__712*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify/BeautifyEffect.<DoBlink>d__712.MoveNext
bool BeautifyEffect::Beautify::$DoBlink$d__712::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::$DoBlink$d__712::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BeautifyEffect::Beautify::$DoBlink$d__712*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeautifyEffect.Beautify/BeautifyEffect.<DoBlink>d__712.System.Collections.IEnumerator.Reset
void BeautifyEffect::Beautify::$DoBlink$d__712::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::$DoBlink$d__712::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BeautifyEffect::Beautify::$DoBlink$d__712*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeautifyEffect.BeautifyProfile
#include "BeautifyEffect/BeautifyProfile.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: BeautifyEffect.Beautify
#include "BeautifyEffect/Beautify.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single dither
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_dither() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_dither");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dither"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ditherDepth
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_ditherDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_ditherDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ditherDepth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sharpenMinDepth
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sharpenMinDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sharpenMinDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharpenMinDepth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sharpenMaxDepth
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sharpenMaxDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sharpenMaxDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharpenMaxDepth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sharpen
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sharpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sharpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharpen"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sharpenDepthThreshold
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sharpenDepthThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sharpenDepthThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharpenDepthThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color tintColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& BeautifyEffect::BeautifyProfile::dyn_tintColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_tintColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tintColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sharpenRelaxation
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sharpenRelaxation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sharpenRelaxation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharpenRelaxation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sharpenClamp
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sharpenClamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sharpenClamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharpenClamp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sharpenMotionSensibility
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sharpenMotionSensibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sharpenMotionSensibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharpenMotionSensibility"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single antialiasStrength
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_antialiasStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_antialiasStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "antialiasStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single antialiasDepthThreshold
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_antialiasDepthThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_antialiasDepthThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "antialiasDepthThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single saturate
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_saturate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_saturate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saturate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single contrast
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_contrast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_contrast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contrast"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single brightness
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_brightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "brightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single daltonize
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_daltonize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_daltonize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "daltonize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean vignetting
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_vignetting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_vignetting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vignetting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color vignettingColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& BeautifyEffect::BeautifyProfile::dyn_vignettingColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_vignettingColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vignettingColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single vignettingFade
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_vignettingFade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_vignettingFade");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vignettingFade"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean vignettingCircularShape
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_vignettingCircularShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_vignettingCircularShape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vignettingCircularShape"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single vignettingAspectRatio
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_vignettingAspectRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_vignettingAspectRatio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vignettingAspectRatio"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single vignettingBlink
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_vignettingBlink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_vignettingBlink");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vignettingBlink"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D vignettingMask
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& BeautifyEffect::BeautifyProfile::dyn_vignettingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_vignettingMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vignettingMask"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean frame
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_frame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color frameColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& BeautifyEffect::BeautifyProfile::dyn_frameColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_frameColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D frameMask
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& BeautifyEffect::BeautifyProfile::dyn_frameMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_frameMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameMask"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean lut
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_lut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_lut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lut"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lutIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_lutIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_lutIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lutIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D lutTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& BeautifyEffect::BeautifyProfile::dyn_lutTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_lutTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lutTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean nightVision
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_nightVision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_nightVision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nightVision"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color nightVisionColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& BeautifyEffect::BeautifyProfile::dyn_nightVisionColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_nightVisionColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nightVisionColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean outline
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_outline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_outline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outline"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color outlineColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& BeautifyEffect::BeautifyProfile::dyn_outlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_outlineColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outlineColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean thermalVision
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_thermalVision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_thermalVision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thermalVision"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean lensDirt
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_lensDirt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_lensDirt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lensDirt"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lensDirtThreshold
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_lensDirtThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_lensDirtThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lensDirtThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lensDirtIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_lensDirtIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_lensDirtIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lensDirtIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D lensDirtTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& BeautifyEffect::BeautifyProfile::dyn_lensDirtTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_lensDirtTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lensDirtTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean bloom
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_bloom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask bloomCullingMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& BeautifyEffect::BeautifyProfile::dyn_bloomCullingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomCullingMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomCullingMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bloomLayerMaskDownsampling
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_bloomLayerMaskDownsampling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomLayerMaskDownsampling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomLayerMaskDownsampling"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bloomIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_bloomIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bloomMaxBrightness
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_bloomMaxBrightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomMaxBrightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomMaxBrightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bloomBoost0
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_bloomBoost0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomBoost0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomBoost0"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bloomBoost1
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_bloomBoost1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomBoost1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomBoost1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bloomBoost2
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_bloomBoost2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomBoost2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomBoost2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bloomBoost3
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_bloomBoost3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomBoost3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomBoost3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bloomBoost4
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_bloomBoost4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomBoost4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomBoost4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bloomBoost5
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_bloomBoost5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomBoost5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomBoost5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean bloomAntiflicker
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_bloomAntiflicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomAntiflicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomAntiflicker"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean bloomUltra
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_bloomUltra() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomUltra");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomUltra"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bloomThreshold
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_bloomThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean bloomCustomize
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_bloomCustomize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomCustomize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomCustomize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bloomWeight0
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_bloomWeight0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomWeight0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomWeight0"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bloomWeight1
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_bloomWeight1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomWeight1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomWeight1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bloomWeight2
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_bloomWeight2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomWeight2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomWeight2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bloomWeight3
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_bloomWeight3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomWeight3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomWeight3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bloomWeight4
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_bloomWeight4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomWeight4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomWeight4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bloomWeight5
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_bloomWeight5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomWeight5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomWeight5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean bloomBlur
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_bloomBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomBlur");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomBlur"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bloomDepthAtten
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_bloomDepthAtten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomDepthAtten");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomDepthAtten"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bloomLayerZBias
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_bloomLayerZBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_bloomLayerZBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomLayerZBias"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean anamorphicFlares
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_anamorphicFlares() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_anamorphicFlares");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anamorphicFlares"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single anamorphicFlaresIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_anamorphicFlaresIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_anamorphicFlaresIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anamorphicFlaresIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean anamorphicFlaresAntiflicker
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_anamorphicFlaresAntiflicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_anamorphicFlaresAntiflicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anamorphicFlaresAntiflicker"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean anamorphicFlaresUltra
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_anamorphicFlaresUltra() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_anamorphicFlaresUltra");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anamorphicFlaresUltra"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single anamorphicFlaresThreshold
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_anamorphicFlaresThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_anamorphicFlaresThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anamorphicFlaresThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single anamorphicFlaresSpread
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_anamorphicFlaresSpread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_anamorphicFlaresSpread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anamorphicFlaresSpread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean anamorphicFlaresVertical
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_anamorphicFlaresVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_anamorphicFlaresVertical");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anamorphicFlaresVertical"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color anamorphicFlaresTint
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& BeautifyEffect::BeautifyProfile::dyn_anamorphicFlaresTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_anamorphicFlaresTint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anamorphicFlaresTint"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean anamorphicFlaresBlur
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_anamorphicFlaresBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_anamorphicFlaresBlur");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anamorphicFlaresBlur"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean depthOfField
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_depthOfField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean depthOfFieldTransparencySupport
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldTransparencySupport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldTransparencySupport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldTransparencySupport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform depthOfFieldTargetFocus
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldTargetFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldTargetFocus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldTargetFocus"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean depthOfFieldAutofocus
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldAutofocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldAutofocus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldAutofocus"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 depthofFieldAutofocusViewportPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& BeautifyEffect::BeautifyProfile::dyn_depthofFieldAutofocusViewportPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthofFieldAutofocusViewportPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthofFieldAutofocusViewportPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask depthOfFieldAutofocusLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldAutofocusLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldAutofocusLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldAutofocusLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single depthOfFieldAutofocusMinDistance
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldAutofocusMinDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldAutofocusMinDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldAutofocusMinDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single depthOfFieldAutofocusMaxDistance
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldAutofocusMaxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldAutofocusMaxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldAutofocusMaxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask depthOfFieldExclusionLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldExclusionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldExclusionLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldExclusionLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single depthOfFieldExclusionLayerMaskDownsampling
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldExclusionLayerMaskDownsampling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldExclusionLayerMaskDownsampling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldExclusionLayerMaskDownsampling"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single depthOfFieldTransparencySupportDownsampling
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldTransparencySupportDownsampling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldTransparencySupportDownsampling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldTransparencySupportDownsampling"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single depthOfFieldExclusionBias
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldExclusionBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldExclusionBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldExclusionBias"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single depthOfFieldDistance
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single depthOfFieldFocusSpeed
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldFocusSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldFocusSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldFocusSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 depthOfFieldDownsampling
[[deprecated("Use field access instead!")]] int& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldDownsampling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldDownsampling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldDownsampling"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 depthOfFieldMaxSamples
[[deprecated("Use field access instead!")]] int& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldMaxSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldMaxSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldMaxSamples"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single depthOfFieldFocalLength
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldFocalLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldFocalLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldFocalLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single depthOfFieldAperture
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldAperture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldAperture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldAperture"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean depthOfFieldForegroundBlur
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldForegroundBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldForegroundBlur");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldForegroundBlur"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean depthOfFieldForegroundBlurHQ
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldForegroundBlurHQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldForegroundBlurHQ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldForegroundBlurHQ"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single depthOfFieldForegroundDistance
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldForegroundDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldForegroundDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldForegroundDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean depthOfFieldBokeh
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldBokeh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldBokeh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldBokeh"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single depthOfFieldBokehThreshold
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldBokehThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldBokehThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldBokehThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single depthOfFieldBokehIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldBokehIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldBokehIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldBokehIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single depthOfFieldMaxBrightness
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldMaxBrightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldMaxBrightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldMaxBrightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single depthOfFieldMaxDistance
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldMaxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldMaxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldMaxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.FilterMode depthOfFieldFilterMode
[[deprecated("Use field access instead!")]] ::UnityEngine::FilterMode& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldFilterMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldFilterMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldFilterMode"))->offset;
  return *reinterpret_cast<::UnityEngine::FilterMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask depthOfFieldTransparencyLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& BeautifyEffect::BeautifyProfile::dyn_depthOfFieldTransparencyLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_depthOfFieldTransparencyLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthOfFieldTransparencyLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean eyeAdaptation
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_eyeAdaptation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_eyeAdaptation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyeAdaptation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single eyeAdaptationMinExposure
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_eyeAdaptationMinExposure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_eyeAdaptationMinExposure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyeAdaptationMinExposure"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single eyeAdaptationMaxExposure
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_eyeAdaptationMaxExposure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_eyeAdaptationMaxExposure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyeAdaptationMaxExposure"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single eyeAdaptationSpeedToLight
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_eyeAdaptationSpeedToLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_eyeAdaptationSpeedToLight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyeAdaptationSpeedToLight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single eyeAdaptationSpeedToDark
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_eyeAdaptationSpeedToDark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_eyeAdaptationSpeedToDark");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyeAdaptationSpeedToDark"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean purkinje
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_purkinje() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_purkinje");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "purkinje"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single purkinjeAmount
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_purkinjeAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_purkinjeAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "purkinjeAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single purkinjeLuminanceThreshold
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_purkinjeLuminanceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_purkinjeLuminanceThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "purkinjeLuminanceThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeautifyEffect.BEAUTIFY_TMO tonemap
[[deprecated("Use field access instead!")]] ::BeautifyEffect::BEAUTIFY_TMO& BeautifyEffect::BeautifyProfile::dyn_tonemap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_tonemap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tonemap"))->offset;
  return *reinterpret_cast<::BeautifyEffect::BEAUTIFY_TMO*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean sunFlares
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_sunFlares() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlares");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlares"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresSolarWindSpeed
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresSolarWindSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresSolarWindSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresSolarWindSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color sunFlaresTint
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& BeautifyEffect::BeautifyProfile::dyn_sunFlaresTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresTint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresTint"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sunFlaresDownsampling
[[deprecated("Use field access instead!")]] int& BeautifyEffect::BeautifyProfile::dyn_sunFlaresDownsampling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresDownsampling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresDownsampling"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresSunIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresSunIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresSunIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresSunIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresSunDiskSize
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresSunDiskSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresSunDiskSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresSunDiskSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresSunRayDiffractionIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresSunRayDiffractionIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresSunRayDiffractionIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresSunRayDiffractionIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresSunRayDiffractionThreshold
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresSunRayDiffractionThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresSunRayDiffractionThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresSunRayDiffractionThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresCoronaRays1Length
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresCoronaRays1Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresCoronaRays1Length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresCoronaRays1Length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sunFlaresCoronaRays1Streaks
[[deprecated("Use field access instead!")]] int& BeautifyEffect::BeautifyProfile::dyn_sunFlaresCoronaRays1Streaks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresCoronaRays1Streaks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresCoronaRays1Streaks"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresCoronaRays1Spread
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresCoronaRays1Spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresCoronaRays1Spread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresCoronaRays1Spread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresCoronaRays1AngleOffset
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresCoronaRays1AngleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresCoronaRays1AngleOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresCoronaRays1AngleOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresCoronaRays2Length
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresCoronaRays2Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresCoronaRays2Length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresCoronaRays2Length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sunFlaresCoronaRays2Streaks
[[deprecated("Use field access instead!")]] int& BeautifyEffect::BeautifyProfile::dyn_sunFlaresCoronaRays2Streaks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresCoronaRays2Streaks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresCoronaRays2Streaks"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresCoronaRays2Spread
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresCoronaRays2Spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresCoronaRays2Spread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresCoronaRays2Spread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresCoronaRays2AngleOffset
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresCoronaRays2AngleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresCoronaRays2AngleOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresCoronaRays2AngleOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresGhosts1Size
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts1Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts1Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresGhosts1Size"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresGhosts1Offset
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts1Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts1Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresGhosts1Offset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresGhosts1Brightness
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts1Brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts1Brightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresGhosts1Brightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresGhosts2Size
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts2Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts2Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresGhosts2Size"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresGhosts2Offset
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts2Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts2Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresGhosts2Offset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresGhosts2Brightness
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts2Brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts2Brightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresGhosts2Brightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresGhosts3Size
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts3Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts3Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresGhosts3Size"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresGhosts3Brightness
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts3Brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts3Brightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresGhosts3Brightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresGhosts3Offset
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts3Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts3Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresGhosts3Offset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresGhosts4Size
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts4Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts4Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresGhosts4Size"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresGhosts4Offset
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts4Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts4Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresGhosts4Offset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresGhosts4Brightness
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts4Brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresGhosts4Brightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresGhosts4Brightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresHaloOffset
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresHaloOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresHaloOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresHaloOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresHaloAmplitude
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresHaloAmplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresHaloAmplitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresHaloAmplitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sunFlaresHaloIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_sunFlaresHaloIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresHaloIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresHaloIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean sunFlaresRotationDeadZone
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_sunFlaresRotationDeadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_sunFlaresRotationDeadZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sunFlaresRotationDeadZone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean blur
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_blur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_blur");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blur"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single blurIntensity
[[deprecated("Use field access instead!")]] float& BeautifyEffect::BeautifyProfile::dyn_blurIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_blurIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blurIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 pixelateAmount
[[deprecated("Use field access instead!")]] int& BeautifyEffect::BeautifyProfile::dyn_pixelateAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_pixelateAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pixelateAmount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean pixelateDownscale
[[deprecated("Use field access instead!")]] bool& BeautifyEffect::BeautifyProfile::dyn_pixelateDownscale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::dyn_pixelateDownscale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pixelateDownscale"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeautifyEffect.BeautifyProfile.Load
void BeautifyEffect::BeautifyProfile::Load(::BeautifyEffect::Beautify* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, b);
}
// Autogenerated method: BeautifyEffect.BeautifyProfile.Save
void BeautifyEffect::BeautifyProfile::Save(::BeautifyEffect::Beautify* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::BeautifyProfile::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.BounceAudio2d
#include "AudioHelm/BounceAudio2d.hpp"
// Including type: AudioHelm.HelmController
#include "AudioHelm/HelmController.hpp"
// Including type: UnityEngine.Collision2D
#include "UnityEngine/Collision2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AudioHelm.HelmController synth
[[deprecated("Use field access instead!")]] ::AudioHelm::HelmController*& AudioHelm::BounceAudio2d::dyn_synth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::BounceAudio2d::dyn_synth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synth"))->offset;
  return *reinterpret_cast<::AudioHelm::HelmController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] scale
[[deprecated("Use field access instead!")]] ::ArrayW<int>& AudioHelm::BounceAudio2d::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::BounceAudio2d::dyn_scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 minNote
[[deprecated("Use field access instead!")]] int& AudioHelm::BounceAudio2d::dyn_minNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::BounceAudio2d::dyn_minNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minNote"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxSize
[[deprecated("Use field access instead!")]] float& AudioHelm::BounceAudio2d::dyn_maxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::BounceAudio2d::dyn_maxSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single noteLength
[[deprecated("Use field access instead!")]] float& AudioHelm::BounceAudio2d::dyn_noteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::BounceAudio2d::dyn_noteLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxSpeed
[[deprecated("Use field access instead!")]] float& AudioHelm::BounceAudio2d::dyn_maxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::BounceAudio2d::dyn_maxSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.BounceAudio2d.GetCollisionStrength
float AudioHelm::BounceAudio2d::GetCollisionStrength(::UnityEngine::Collision2D* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::BounceAudio2d::GetCollisionStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCollisionStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, collision);
}
// Autogenerated method: AudioHelm.BounceAudio2d.GetNote
int AudioHelm::BounceAudio2d::GetNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::BounceAudio2d::GetNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.BounceAudio2d.OnCollisionEnter2D
void AudioHelm::BounceAudio2d::OnCollisionEnter2D(::UnityEngine::Collision2D* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::BounceAudio2d::OnCollisionEnter2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.CameraMan
#include "AudioHelm/CameraMan.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform player
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& AudioHelm::CameraMan::dyn_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::CameraMan::dyn_player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "player"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 diff_
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& AudioHelm::CameraMan::dyn_diff_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::CameraMan::dyn_diff_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "diff_"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.CameraMan.Start
void AudioHelm::CameraMan::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::CameraMan::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.CameraMan.Update
void AudioHelm::CameraMan::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::CameraMan::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.ControlJump
#include "AudioHelm/ControlJump.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single jumpForce
[[deprecated("Use field access instead!")]] float& AudioHelm::ControlJump::dyn_jumpForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::ControlJump::dyn_jumpForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jumpForce"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode key
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& AudioHelm::ControlJump::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::ControlJump::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 surface_normal_
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& AudioHelm::ControlJump::dyn_surface_normal_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::ControlJump::dyn_surface_normal_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "surface_normal_"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.ControlJump.Update
void AudioHelm::ControlJump::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::ControlJump::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.ControlJump.OnCollisionStay
void AudioHelm::ControlJump::OnCollisionStay(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::ControlJump::OnCollisionStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.ControlTorque
#include "AudioHelm/ControlTorque.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single torque
[[deprecated("Use field access instead!")]] float& AudioHelm::ControlTorque::dyn_torque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::ControlTorque::dyn_torque");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "torque"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxAngularVelocity
[[deprecated("Use field access instead!")]] float& AudioHelm::ControlTorque::dyn_maxAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::ControlTorque::dyn_maxAngularVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxAngularVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 forward
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& AudioHelm::ControlTorque::dyn_forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::ControlTorque::dyn_forward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forward"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 right
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& AudioHelm::ControlTorque::dyn_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::ControlTorque::dyn_right");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "right"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.ControlTorque.Start
void AudioHelm::ControlTorque::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::ControlTorque::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.ControlTorque.Update
void AudioHelm::ControlTorque::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::ControlTorque::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.DestroyAfterTime
#include "AudioHelm/DestroyAfterTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single time
[[deprecated("Use field access instead!")]] float& AudioHelm::DestroyAfterTime::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::DestroyAfterTime::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.DestroyAfterTime.Start
void AudioHelm::DestroyAfterTime::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::DestroyAfterTime::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.DestroyAfterTime.Die
void AudioHelm::DestroyAfterTime::Die() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::DestroyAfterTime::Die");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Die", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.EnableAfterTime
#include "AudioHelm/EnableAfterTime.hpp"
// Including type: AudioHelm.Sequencer
#include "AudioHelm/Sequencer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single time
[[deprecated("Use field access instead!")]] float& AudioHelm::EnableAfterTime::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::EnableAfterTime::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.Sequencer sequencer
[[deprecated("Use field access instead!")]] ::AudioHelm::Sequencer*& AudioHelm::EnableAfterTime::dyn_sequencer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::EnableAfterTime::dyn_sequencer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sequencer"))->offset;
  return *reinterpret_cast<::AudioHelm::Sequencer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.EnableAfterTime.Start
void AudioHelm::EnableAfterTime::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::EnableAfterTime::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.EnableAfterTime.Enable
void AudioHelm::EnableAfterTime::Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::EnableAfterTime::Enable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Enable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.GroundKey
#include "AudioHelm/GroundKey.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Renderer keyLight
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& AudioHelm::GroundKey::dyn_keyLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKey::dyn_keyLight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyLight"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean noteOn
[[deprecated("Use field access instead!")]] bool& AudioHelm::GroundKey::dyn_noteOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKey::dyn_noteOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.GroundKey.IsInside
bool AudioHelm::GroundKey::IsInside(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKey::IsInside");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInside", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, position);
}
// Autogenerated method: AudioHelm.GroundKey.IsOn
bool AudioHelm::GroundKey::IsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKey::IsOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.GroundKey.SetOn
void AudioHelm::GroundKey::SetOn(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKey::SetOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: AudioHelm.GroundKey.Update
void AudioHelm::GroundKey::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKey::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.GroundKeyboard
#include "AudioHelm/GroundKeyboard.hpp"
// Including type: AudioHelm.GroundKeyboard/AudioHelm.<OnCollisionStay>d__19
#include "AudioHelm/GroundKeyboard_-OnCollisionStay-d__19.hpp"
// Including type: AudioHelm.GroundKeyboard/AudioHelm.<OnCollisionEnter>d__20
#include "AudioHelm/GroundKeyboard_-OnCollisionEnter-d__20.hpp"
// Including type: AudioHelm.GroundKey
#include "AudioHelm/GroundKey.hpp"
// Including type: AudioHelm.HelmController
#include "AudioHelm/HelmController.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AudioHelm.GroundKey keyModel
[[deprecated("Use field access instead!")]] ::AudioHelm::GroundKey*& AudioHelm::GroundKeyboard::dyn_keyModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::dyn_keyModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyModel"))->offset;
  return *reinterpret_cast<::AudioHelm::GroundKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.HelmController synth
[[deprecated("Use field access instead!")]] ::AudioHelm::HelmController*& AudioHelm::GroundKeyboard::dyn_synth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::dyn_synth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synth"))->offset;
  return *reinterpret_cast<::AudioHelm::HelmController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 keyOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& AudioHelm::GroundKeyboard::dyn_keyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::dyn_keyOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single verticalOffset
[[deprecated("Use field access instead!")]] float& AudioHelm::GroundKeyboard::dyn_verticalOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::dyn_verticalOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verticalOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 numKeys
[[deprecated("Use field access instead!")]] int& AudioHelm::GroundKeyboard::dyn_numKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::dyn_numKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numKeys"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 startingKey
[[deprecated("Use field access instead!")]] int& AudioHelm::GroundKeyboard::dyn_startingKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::dyn_startingKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingKey"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] scale
[[deprecated("Use field access instead!")]] ::ArrayW<int>& AudioHelm::GroundKeyboard::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::dyn_scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 octaveSize
[[deprecated("Use field access instead!")]] int& AudioHelm::GroundKeyboard::dyn_octaveSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::dyn_octaveSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "octaveSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioHelm.GroundKey[] keys
[[deprecated("Use field access instead!")]] ::ArrayW<::AudioHelm::GroundKey*>& AudioHelm::GroundKeyboard::dyn_keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::dyn_keys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keys"))->offset;
  return *reinterpret_cast<::ArrayW<::AudioHelm::GroundKey*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.Int32> currentIndices
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<int>*& AudioHelm::GroundKeyboard::dyn_currentIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::dyn_currentIndices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentIndices"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.Int32> newIndices
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<int>*& AudioHelm::GroundKeyboard::dyn_newIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::dyn_newIndices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newIndices"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.GroundKeyboard.Start
void AudioHelm::GroundKeyboard::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.GroundKeyboard.CreateKey
::AudioHelm::GroundKey* AudioHelm::GroundKeyboard::CreateKey(int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::CreateKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::AudioHelm::GroundKey*, false>(this, ___internal__method, key);
}
// Autogenerated method: AudioHelm.GroundKeyboard.GetKeyFromIndex
int AudioHelm::GroundKeyboard::GetKeyFromIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::GetKeyFromIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKeyFromIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, index);
}
// Autogenerated method: AudioHelm.GroundKeyboard.NoteOn
void AudioHelm::GroundKeyboard::NoteOn(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::NoteOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: AudioHelm.GroundKeyboard.NoteOff
void AudioHelm::GroundKeyboard::NoteOff(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::NoteOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: AudioHelm.GroundKeyboard.TryNoteOn
void AudioHelm::GroundKeyboard::TryNoteOn(int index, ::UnityEngine::Vector3 contactPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::TryNoteOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryNoteOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(contactPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, contactPoint);
}
// Autogenerated method: AudioHelm.GroundKeyboard.TryNoteOff
void AudioHelm::GroundKeyboard::TryNoteOff(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::TryNoteOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryNoteOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: AudioHelm.GroundKeyboard.Impulse
void AudioHelm::GroundKeyboard::Impulse(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::Impulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Impulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: AudioHelm.GroundKeyboard.OnCollisionStay
::System::Collections::IEnumerator* AudioHelm::GroundKeyboard::OnCollisionStay(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::OnCollisionStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, collision);
}
// Autogenerated method: AudioHelm.GroundKeyboard.OnCollisionEnter
::System::Collections::IEnumerator* AudioHelm::GroundKeyboard::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, collision);
}
// Autogenerated method: AudioHelm.GroundKeyboard.FixedUpdate
void AudioHelm::GroundKeyboard::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AudioHelm.GroundKeyboard/AudioHelm.<OnCollisionStay>d__19
#include "AudioHelm/GroundKeyboard_-OnCollisionStay-d__19.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& AudioHelm::GroundKeyboard::$OnCollisionStay$d__19::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::$OnCollisionStay$d__19::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& AudioHelm::GroundKeyboard::$OnCollisionStay$d__19::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::$OnCollisionStay$d__19::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.GroundKeyboard <>4__this
[[deprecated("Use field access instead!")]] ::AudioHelm::GroundKeyboard*& AudioHelm::GroundKeyboard::$OnCollisionStay$d__19::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::$OnCollisionStay$d__19::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::AudioHelm::GroundKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collision collision
[[deprecated("Use field access instead!")]] ::UnityEngine::Collision*& AudioHelm::GroundKeyboard::$OnCollisionStay$d__19::dyn_collision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::$OnCollisionStay$d__19::dyn_collision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collision"))->offset;
  return *reinterpret_cast<::UnityEngine::Collision**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.GroundKeyboard/AudioHelm.<OnCollisionStay>d__19.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* AudioHelm::GroundKeyboard::$OnCollisionStay$d__19::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::$OnCollisionStay$d__19::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::GroundKeyboard::$OnCollisionStay$d__19*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.GroundKeyboard/AudioHelm.<OnCollisionStay>d__19.System.Collections.IEnumerator.get_Current
::Il2CppObject* AudioHelm::GroundKeyboard::$OnCollisionStay$d__19::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::$OnCollisionStay$d__19::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::GroundKeyboard::$OnCollisionStay$d__19*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.GroundKeyboard/AudioHelm.<OnCollisionStay>d__19.System.IDisposable.Dispose
void AudioHelm::GroundKeyboard::$OnCollisionStay$d__19::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::$OnCollisionStay$d__19::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::GroundKeyboard::$OnCollisionStay$d__19*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.GroundKeyboard/AudioHelm.<OnCollisionStay>d__19.MoveNext
bool AudioHelm::GroundKeyboard::$OnCollisionStay$d__19::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::$OnCollisionStay$d__19::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::GroundKeyboard::$OnCollisionStay$d__19*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.GroundKeyboard/AudioHelm.<OnCollisionStay>d__19.System.Collections.IEnumerator.Reset
void AudioHelm::GroundKeyboard::$OnCollisionStay$d__19::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::$OnCollisionStay$d__19::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::GroundKeyboard::$OnCollisionStay$d__19*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AudioHelm.GroundKeyboard/AudioHelm.<OnCollisionEnter>d__20
#include "AudioHelm/GroundKeyboard_-OnCollisionEnter-d__20.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.GroundKeyboard <>4__this
[[deprecated("Use field access instead!")]] ::AudioHelm::GroundKeyboard*& AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::AudioHelm::GroundKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collision collision
[[deprecated("Use field access instead!")]] ::UnityEngine::Collision*& AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20::dyn_collision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20::dyn_collision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collision"))->offset;
  return *reinterpret_cast<::UnityEngine::Collision**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.GroundKeyboard/AudioHelm.<OnCollisionEnter>d__20.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.GroundKeyboard/AudioHelm.<OnCollisionEnter>d__20.System.Collections.IEnumerator.get_Current
::Il2CppObject* AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.GroundKeyboard/AudioHelm.<OnCollisionEnter>d__20.System.IDisposable.Dispose
void AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.GroundKeyboard/AudioHelm.<OnCollisionEnter>d__20.MoveNext
bool AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.GroundKeyboard/AudioHelm.<OnCollisionEnter>d__20.System.Collections.IEnumerator.Reset
void AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::GroundKeyboard::$OnCollisionEnter$d__20*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.MaterialOnOff
#include "AudioHelm/MaterialOnOff.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.UI.RawImage
#include "UnityEngine/UI/RawImage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material offMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& AudioHelm::MaterialOnOff::dyn_offMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MaterialOnOff::dyn_offMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material onMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& AudioHelm::MaterialOnOff::dyn_onMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MaterialOnOff::dyn_onMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.RawImage rawImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::RawImage*& AudioHelm::MaterialOnOff::dyn_rawImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MaterialOnOff::dyn_rawImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rawImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::RawImage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single progress
[[deprecated("Use field access instead!")]] float& AudioHelm::MaterialOnOff::dyn_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MaterialOnOff::dyn_progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean on
[[deprecated("Use field access instead!")]] bool& AudioHelm::MaterialOnOff::dyn_on() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MaterialOnOff::dyn_on");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "on"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.MaterialOnOff.Start
void AudioHelm::MaterialOnOff::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MaterialOnOff::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.MaterialOnOff.On
void AudioHelm::MaterialOnOff::On() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MaterialOnOff::On");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "On", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.MaterialOnOff.Off
void AudioHelm::MaterialOnOff::Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MaterialOnOff::Off");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Off", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.MaterialOnOff.Update
void AudioHelm::MaterialOnOff::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MaterialOnOff::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.MaterialPulse
#include "AudioHelm/MaterialPulse.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.UI.RawImage
#include "UnityEngine/UI/RawImage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material defaultMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& AudioHelm::MaterialPulse::dyn_defaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MaterialPulse::dyn_defaultMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material pulseMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& AudioHelm::MaterialPulse::dyn_pulseMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MaterialPulse::dyn_pulseMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pulseMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single decay
[[deprecated("Use field access instead!")]] float& AudioHelm::MaterialPulse::dyn_decay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MaterialPulse::dyn_decay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single progress
[[deprecated("Use field access instead!")]] float& AudioHelm::MaterialPulse::dyn_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MaterialPulse::dyn_progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer render
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& AudioHelm::MaterialPulse::dyn_render() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MaterialPulse::dyn_render");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "render"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.RawImage rawImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::RawImage*& AudioHelm::MaterialPulse::dyn_rawImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MaterialPulse::dyn_rawImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rawImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::RawImage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.MaterialPulse.Pulse
void AudioHelm::MaterialPulse::Pulse(float amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MaterialPulse::Pulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amount);
}
// Autogenerated method: AudioHelm.MaterialPulse.Update
void AudioHelm::MaterialPulse::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MaterialPulse::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.NoteBlaster
#include "AudioHelm/NoteBlaster.hpp"
// Including type: AudioHelm.HelmController
#include "AudioHelm/HelmController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AudioHelm.HelmController player
[[deprecated("Use field access instead!")]] ::AudioHelm::HelmController*& AudioHelm::NoteBlaster::dyn_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::NoteBlaster::dyn_player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "player"))->offset;
  return *reinterpret_cast<::AudioHelm::HelmController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 min
[[deprecated("Use field access instead!")]] int& AudioHelm::NoteBlaster::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::NoteBlaster::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 max
[[deprecated("Use field access instead!")]] int& AudioHelm::NoteBlaster::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::NoteBlaster::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.NoteBlaster.Update
void AudioHelm::NoteBlaster::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::NoteBlaster::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.Oscillate
#include "AudioHelm/Oscillate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 oscillationVector
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& AudioHelm::Oscillate::dyn_oscillationVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Oscillate::dyn_oscillationVector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oscillationVector"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single freqeuncy
[[deprecated("Use field access instead!")]] float& AudioHelm::Oscillate::dyn_freqeuncy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Oscillate::dyn_freqeuncy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "freqeuncy"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single progress
[[deprecated("Use field access instead!")]] float& AudioHelm::Oscillate::dyn_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Oscillate::dyn_progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 startingPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& AudioHelm::Oscillate::dyn_startingPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Oscillate::dyn_startingPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.Oscillate.Start
void AudioHelm::Oscillate::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Oscillate::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Oscillate.Update
void AudioHelm::Oscillate::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Oscillate::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.PlatformCreator
#include "AudioHelm/PlatformCreator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform platformModel
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& AudioHelm::PlatformCreator::dyn_platformModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::PlatformCreator::dyn_platformModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platformModel"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minWidth
[[deprecated("Use field access instead!")]] float& AudioHelm::PlatformCreator::dyn_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::PlatformCreator::dyn_minWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Transform> allPlatforms
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Transform*>*& AudioHelm::PlatformCreator::dyn_allPlatforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::PlatformCreator::dyn_allPlatforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allPlatforms"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode clearKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& AudioHelm::PlatformCreator::dyn_clearKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::PlatformCreator::dyn_clearKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode undoKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& AudioHelm::PlatformCreator::dyn_undoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::PlatformCreator::dyn_undoKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "undoKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform currentPlatform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& AudioHelm::PlatformCreator::dyn_currentPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::PlatformCreator::dyn_currentPlatform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPlatform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 startPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& AudioHelm::PlatformCreator::dyn_startPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::PlatformCreator::dyn_startPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.PlatformCreator.TryInitialize
void AudioHelm::PlatformCreator::TryInitialize(::UnityEngine::Vector2 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::PlatformCreator::TryInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: AudioHelm.PlatformCreator.TryRelease
void AudioHelm::PlatformCreator::TryRelease(::UnityEngine::Vector2 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::PlatformCreator::TryRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: AudioHelm.PlatformCreator.TryUpdate
void AudioHelm::PlatformCreator::TryUpdate(::UnityEngine::Vector2 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::PlatformCreator::TryUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: AudioHelm.PlatformCreator.ClearPlatforms
void AudioHelm::PlatformCreator::ClearPlatforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::PlatformCreator::ClearPlatforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPlatforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.PlatformCreator.UndoPlatform
void AudioHelm::PlatformCreator::UndoPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::PlatformCreator::UndoPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UndoPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.PlatformCreator.Update
void AudioHelm::PlatformCreator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::PlatformCreator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.PulseImageOnNote
#include "AudioHelm/PulseImageOnNote.hpp"
// Including type: AudioHelm.MaterialPulse
#include "AudioHelm/MaterialPulse.hpp"
// Including type: AudioHelm.Note
#include "AudioHelm/Note.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AudioHelm.MaterialPulse[] images
[[deprecated("Use field access instead!")]] ::ArrayW<::AudioHelm::MaterialPulse*>& AudioHelm::PulseImageOnNote::dyn_images() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::PulseImageOnNote::dyn_images");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "images"))->offset;
  return *reinterpret_cast<::ArrayW<::AudioHelm::MaterialPulse*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 startingNote
[[deprecated("Use field access instead!")]] int& AudioHelm::PulseImageOnNote::dyn_startingNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::PulseImageOnNote::dyn_startingNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingNote"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] scale
[[deprecated("Use field access instead!")]] ::ArrayW<int>& AudioHelm::PulseImageOnNote::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::PulseImageOnNote::dyn_scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.PulseImageOnNote.GetNoteIndex
int AudioHelm::PulseImageOnNote::GetNoteIndex(int note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::PulseImageOnNote::GetNoteIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNoteIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.PulseImageOnNote.NoteOn
void AudioHelm::PulseImageOnNote::NoteOn(::AudioHelm::Note* note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::PulseImageOnNote::NoteOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.RepetitiveSpawner
#include "AudioHelm/RepetitiveSpawner.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform model
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& AudioHelm::RepetitiveSpawner::dyn_model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::RepetitiveSpawner::dyn_model");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "model"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rate
[[deprecated("Use field access instead!")]] float& AudioHelm::RepetitiveSpawner::dyn_rate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::RepetitiveSpawner::dyn_rate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single progress
[[deprecated("Use field access instead!")]] float& AudioHelm::RepetitiveSpawner::dyn_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::RepetitiveSpawner::dyn_progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.RepetitiveSpawner.Spawn
void AudioHelm::RepetitiveSpawner::Spawn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::RepetitiveSpawner::Spawn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Spawn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.RepetitiveSpawner.Update
void AudioHelm::RepetitiveSpawner::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::RepetitiveSpawner::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.SequenceGenerator
#include "AudioHelm/SequenceGenerator.hpp"
// Including type: AudioHelm.HelmSequencer
#include "AudioHelm/HelmSequencer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AudioHelm.HelmSequencer sequencer
[[deprecated("Use field access instead!")]] ::AudioHelm::HelmSequencer*& AudioHelm::SequenceGenerator::dyn_sequencer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SequenceGenerator::dyn_sequencer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sequencer"))->offset;
  return *reinterpret_cast<::AudioHelm::HelmSequencer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] scale
[[deprecated("Use field access instead!")]] ::ArrayW<int>& AudioHelm::SequenceGenerator::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SequenceGenerator::dyn_scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 minNote
[[deprecated("Use field access instead!")]] int& AudioHelm::SequenceGenerator::dyn_minNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SequenceGenerator::dyn_minNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minNote"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 octaveSpan
[[deprecated("Use field access instead!")]] int& AudioHelm::SequenceGenerator::dyn_octaveSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SequenceGenerator::dyn_octaveSpan");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "octaveSpan"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minDensity
[[deprecated("Use field access instead!")]] float& AudioHelm::SequenceGenerator::dyn_minDensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SequenceGenerator::dyn_minDensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDensity
[[deprecated("Use field access instead!")]] float& AudioHelm::SequenceGenerator::dyn_maxDensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SequenceGenerator::dyn_maxDensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.SequenceGenerator.GenerateRhythm
void AudioHelm::SequenceGenerator::GenerateRhythm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SequenceGenerator::GenerateRhythm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateRhythm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.SequenceGenerator.GenerateMelody
void AudioHelm::SequenceGenerator::GenerateMelody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SequenceGenerator::GenerateMelody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateMelody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.SequenceGenerator.Start
void AudioHelm::SequenceGenerator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SequenceGenerator::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.SequenceGenerator.GetKeyFromRandomWalk
int AudioHelm::SequenceGenerator::GetKeyFromRandomWalk(int note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SequenceGenerator::GetKeyFromRandomWalk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKeyFromRandomWalk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.SequenceGenerator.GetNextNote
int AudioHelm::SequenceGenerator::GetNextNote(int current, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SequenceGenerator::GetNextNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, current, max);
}
// Autogenerated method: AudioHelm.SequenceGenerator.Generate
void AudioHelm::SequenceGenerator::Generate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SequenceGenerator::Generate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Generate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.SetAnimationParameter
#include "AudioHelm/SetAnimationParameter.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String parameter
[[deprecated("Use field access instead!")]] ::StringW& AudioHelm::SetAnimationParameter::dyn_parameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SetAnimationParameter::dyn_parameter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameter"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animator animator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& AudioHelm::SetAnimationParameter::dyn_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SetAnimationParameter::dyn_animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.SetAnimationParameter.SetValue
void AudioHelm::SetAnimationParameter::SetValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SetAnimationParameter::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.SetAnimationParameter.Start
void AudioHelm::SetAnimationParameter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SetAnimationParameter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.SetHelmParameter
#include "AudioHelm/SetHelmParameter.hpp"
// Including type: AudioHelm.HelmController
#include "AudioHelm/HelmController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 parameterIndex
[[deprecated("Use field access instead!")]] int& AudioHelm::SetHelmParameter::dyn_parameterIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SetHelmParameter::dyn_parameterIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameterIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.HelmController controller
[[deprecated("Use field access instead!")]] ::AudioHelm::HelmController*& AudioHelm::SetHelmParameter::dyn_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SetHelmParameter::dyn_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controller"))->offset;
  return *reinterpret_cast<::AudioHelm::HelmController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.SetHelmParameter.SetPercent
void AudioHelm::SetHelmParameter::SetPercent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SetHelmParameter::SetPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.SetHelmParameter.Start
void AudioHelm::SetHelmParameter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SetHelmParameter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.SetSleepThreshold
#include "AudioHelm/SetSleepThreshold.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single threshold
[[deprecated("Use field access instead!")]] float& AudioHelm::SetSleepThreshold::dyn_threshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SetSleepThreshold::dyn_threshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.SetSleepThreshold.Start
void AudioHelm::SetSleepThreshold::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SetSleepThreshold::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.SyncAudioAndSequencers
#include "AudioHelm/SyncAudioAndSequencers.hpp"
// Including type: AudioHelm.AudioHelmClock
#include "AudioHelm/AudioHelmClock.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AudioHelm.AudioHelmClock clock
[[deprecated("Use field access instead!")]] ::AudioHelm::AudioHelmClock*& AudioHelm::SyncAudioAndSequencers::dyn_clock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SyncAudioAndSequencers::dyn_clock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clock"))->offset;
  return *reinterpret_cast<::AudioHelm::AudioHelmClock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource loop
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& AudioHelm::SyncAudioAndSequencers::dyn_loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SyncAudioAndSequencers::dyn_loop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loop"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single waitTime
[[deprecated("Use field access instead!")]] float& AudioHelm::SyncAudioAndSequencers::dyn_waitTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SyncAudioAndSequencers::dyn_waitTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text text
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& AudioHelm::SyncAudioAndSequencers::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SyncAudioAndSequencers::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastSecond
[[deprecated("Use field access instead!")]] int& AudioHelm::SyncAudioAndSequencers::dyn_lastSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SyncAudioAndSequencers::dyn_lastSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastSecond"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.SyncAudioAndSequencers.Start
void AudioHelm::SyncAudioAndSequencers::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SyncAudioAndSequencers::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.SyncAudioAndSequencers.Update
void AudioHelm::SyncAudioAndSequencers::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SyncAudioAndSequencers::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.ToggleParameter
#include "AudioHelm/ToggleParameter.hpp"
// Including type: AudioHelm.HelmController
#include "AudioHelm/HelmController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AudioHelm.HelmController controller
[[deprecated("Use field access instead!")]] ::AudioHelm::HelmController*& AudioHelm::ToggleParameter::dyn_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::ToggleParameter::dyn_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controller"))->offset;
  return *reinterpret_cast<::AudioHelm::HelmController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.Param param
[[deprecated("Use field access instead!")]] ::AudioHelm::Param& AudioHelm::ToggleParameter::dyn_param() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::ToggleParameter::dyn_param");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "param"))->offset;
  return *reinterpret_cast<::AudioHelm::Param*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single onValue
[[deprecated("Use field access instead!")]] float& AudioHelm::ToggleParameter::dyn_onValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::ToggleParameter::dyn_onValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single offValue
[[deprecated("Use field access instead!")]] float& AudioHelm::ToggleParameter::dyn_offValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::ToggleParameter::dyn_offValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isOn
[[deprecated("Use field access instead!")]] bool& AudioHelm::ToggleParameter::dyn_isOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::ToggleParameter::dyn_isOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.ToggleParameter.Start
void AudioHelm::ToggleParameter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::ToggleParameter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.ToggleParameter.Toggle
void AudioHelm::ToggleParameter::Toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::ToggleParameter::Toggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Toggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.TriggerVisibleNotes
#include "AudioHelm/TriggerVisibleNotes.hpp"
// Including type: AudioHelm.MaterialOnOff
#include "AudioHelm/MaterialOnOff.hpp"
// Including type: AudioHelm.Note
#include "AudioHelm/Note.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AudioHelm.MaterialOnOff[] images
[[deprecated("Use field access instead!")]] ::ArrayW<::AudioHelm::MaterialOnOff*>& AudioHelm::TriggerVisibleNotes::dyn_images() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::TriggerVisibleNotes::dyn_images");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "images"))->offset;
  return *reinterpret_cast<::ArrayW<::AudioHelm::MaterialOnOff*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 startingNote
[[deprecated("Use field access instead!")]] int& AudioHelm::TriggerVisibleNotes::dyn_startingNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::TriggerVisibleNotes::dyn_startingNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingNote"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.TriggerVisibleNotes.GetIndex
int AudioHelm::TriggerVisibleNotes::GetIndex(::AudioHelm::Note* note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::TriggerVisibleNotes::GetIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.TriggerVisibleNotes.NoteOn
void AudioHelm::TriggerVisibleNotes::NoteOn(::AudioHelm::Note* note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::TriggerVisibleNotes::NoteOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.TriggerVisibleNotes.NoteOff
void AudioHelm::TriggerVisibleNotes::NoteOff(::AudioHelm::Note* note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::TriggerVisibleNotes::NoteOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.TriggerVisibleNotes.Clear
void AudioHelm::TriggerVisibleNotes::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::TriggerVisibleNotes::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.AudioHelmClock
#include "AudioHelm/AudioHelmClock.hpp"
// Including type: AudioHelm.AudioHelmClock/AudioHelm.ResetAction
#include "AudioHelm/AudioHelmClock_ResetAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single globalBpm
float AudioHelm::AudioHelmClock::_get_globalBpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::_get_globalBpm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("AudioHelm", "AudioHelmClock", "globalBpm"));
}
// Autogenerated static field setter
// Set static field: static private System.Single globalBpm
void AudioHelm::AudioHelmClock::_set_globalBpm(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::_set_globalBpm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "AudioHelmClock", "globalBpm", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean globalPause
bool AudioHelm::AudioHelmClock::_get_globalPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::_get_globalPause");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("AudioHelm", "AudioHelmClock", "globalPause"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean globalPause
void AudioHelm::AudioHelmClock::_set_globalPause(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::_set_globalPause");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "AudioHelmClock", "globalPause", value));
}
// Autogenerated static field getter
// Get static field: static private System.Double globalBeatTime
double AudioHelm::AudioHelmClock::_get_globalBeatTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::_get_globalBeatTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("AudioHelm", "AudioHelmClock", "globalBeatTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Double globalBeatTime
void AudioHelm::AudioHelmClock::_set_globalBeatTime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::_set_globalBeatTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "AudioHelmClock", "globalBeatTime", value));
}
// Autogenerated static field getter
// Get static field: static private System.Double lastSampledTime
double AudioHelm::AudioHelmClock::_get_lastSampledTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::_get_lastSampledTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("AudioHelm", "AudioHelmClock", "lastSampledTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Double lastSampledTime
void AudioHelm::AudioHelmClock::_set_lastSampledTime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::_set_lastSampledTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "AudioHelmClock", "lastSampledTime", value));
}
// Autogenerated static field getter
// Get static field: static private AudioHelm.AudioHelmClock singleton
::AudioHelm::AudioHelmClock* AudioHelm::AudioHelmClock::_get_singleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::_get_singleton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AudioHelm::AudioHelmClock*>("AudioHelm", "AudioHelmClock", "singleton"));
}
// Autogenerated static field setter
// Set static field: static private AudioHelm.AudioHelmClock singleton
void AudioHelm::AudioHelmClock::_set_singleton(::AudioHelm::AudioHelmClock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::_set_singleton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "AudioHelmClock", "singleton", value));
}
// Autogenerated static field getter
// Get static field: static private System.Double waitToSync
double AudioHelm::AudioHelmClock::_get_waitToSync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::_get_waitToSync");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("AudioHelm", "AudioHelmClock", "waitToSync"));
}
// Autogenerated static field setter
// Set static field: static private System.Double waitToSync
void AudioHelm::AudioHelmClock::_set_waitToSync(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::_set_waitToSync");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "AudioHelmClock", "waitToSync", value));
}
// Autogenerated static field getter
// Get static field: static private System.Double SECONDS_PER_MIN
double AudioHelm::AudioHelmClock::_get_SECONDS_PER_MIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::_get_SECONDS_PER_MIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("AudioHelm", "AudioHelmClock", "SECONDS_PER_MIN"));
}
// Autogenerated static field setter
// Set static field: static private System.Double SECONDS_PER_MIN
void AudioHelm::AudioHelmClock::_set_SECONDS_PER_MIN(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::_set_SECONDS_PER_MIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "AudioHelmClock", "SECONDS_PER_MIN", value));
}
// Autogenerated instance field getter
// Get instance field: private AudioHelm.AudioHelmClock/AudioHelm.ResetAction OnReset
[[deprecated("Use field access instead!")]] ::AudioHelm::AudioHelmClock::ResetAction*& AudioHelm::AudioHelmClock::dyn_OnReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::dyn_OnReset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnReset"))->offset;
  return *reinterpret_cast<::AudioHelm::AudioHelmClock::ResetAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single bpm_
[[deprecated("Use field access instead!")]] float& AudioHelm::AudioHelmClock::dyn_bpm_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::dyn_bpm_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bpm_"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean pause_
[[deprecated("Use field access instead!")]] bool& AudioHelm::AudioHelmClock::dyn_pause_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::dyn_pause_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pause_"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.AudioHelmClock.get_bpm
float AudioHelm::AudioHelmClock::get_bpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::get_bpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.AudioHelmClock.set_bpm
void AudioHelm::AudioHelmClock::set_bpm(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::set_bpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.AudioHelmClock.get_pause
bool AudioHelm::AudioHelmClock::get_pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::get_pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.AudioHelmClock.set_pause
void AudioHelm::AudioHelmClock::set_pause(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::set_pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.AudioHelmClock.add_OnReset
void AudioHelm::AudioHelmClock::add_OnReset(::AudioHelm::AudioHelmClock::ResetAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::add_OnReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.AudioHelmClock.remove_OnReset
void AudioHelm::AudioHelmClock::remove_OnReset(::AudioHelm::AudioHelmClock::ResetAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::remove_OnReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.AudioHelmClock..cctor
void AudioHelm::AudioHelmClock::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "AudioHelmClock", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AudioHelm.AudioHelmClock.GetInstance
::AudioHelm::AudioHelmClock* AudioHelm::AudioHelmClock::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "AudioHelmClock", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::AudioHelm::AudioHelmClock*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AudioHelm.AudioHelmClock.Awake
void AudioHelm::AudioHelmClock::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.AudioHelmClock.OnDestroy
void AudioHelm::AudioHelmClock::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.AudioHelmClock.SetGlobalBpm
void AudioHelm::AudioHelmClock::SetGlobalBpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::SetGlobalBpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGlobalBpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.AudioHelmClock.SetGlobalPause
void AudioHelm::AudioHelmClock::SetGlobalPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::SetGlobalPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGlobalPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.AudioHelmClock.StartScheduled
void AudioHelm::AudioHelmClock::StartScheduled(double timeToStart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::StartScheduled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartScheduled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeToStart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeToStart);
}
// Autogenerated method: AudioHelm.AudioHelmClock.Reset
void AudioHelm::AudioHelmClock::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.AudioHelmClock.GetGlobalBpm
float AudioHelm::AudioHelmClock::GetGlobalBpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::GetGlobalBpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "AudioHelmClock", "GetGlobalBpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AudioHelm.AudioHelmClock.GetGlobalBeatTime
double AudioHelm::AudioHelmClock::GetGlobalBeatTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::GetGlobalBeatTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "AudioHelmClock", "GetGlobalBeatTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AudioHelm.AudioHelmClock.GetGlobalPause
bool AudioHelm::AudioHelmClock::GetGlobalPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::GetGlobalPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "AudioHelmClock", "GetGlobalPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AudioHelm.AudioHelmClock.GetLastSampledTime
double AudioHelm::AudioHelmClock::GetLastSampledTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::GetLastSampledTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "AudioHelmClock", "GetLastSampledTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AudioHelm.AudioHelmClock.FixedUpdate
void AudioHelm::AudioHelmClock::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AudioHelm.AudioHelmClock/AudioHelm.ResetAction
#include "AudioHelm/AudioHelmClock_ResetAction.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AudioHelm.AudioHelmClock/AudioHelm.ResetAction.Invoke
void AudioHelm::AudioHelmClock::ResetAction::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::ResetAction::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::AudioHelmClock::ResetAction*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.AudioHelmClock/AudioHelm.ResetAction.BeginInvoke
::System::IAsyncResult* AudioHelm::AudioHelmClock::ResetAction::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::ResetAction::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::AudioHelmClock::ResetAction*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: AudioHelm.AudioHelmClock/AudioHelm.ResetAction.EndInvoke
void AudioHelm::AudioHelmClock::ResetAction::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::AudioHelmClock::ResetAction::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::AudioHelmClock::ResetAction*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.HelmAudioInit
#include "AudioHelm/HelmAudioInit.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: AudioHelm.HelmAudioReceive
#include "AudioHelm/HelmAudioReceive.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean warnedNoAudioGroup
[[deprecated("Use field access instead!")]] bool& AudioHelm::HelmAudioInit::dyn_warnedNoAudioGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmAudioInit::dyn_warnedNoAudioGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "warnedNoAudioGroup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup synthesizerMixerGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerGroup*& AudioHelm::HelmAudioInit::dyn_synthesizerMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmAudioInit::dyn_synthesizerMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synthesizerMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup spatializerMixerGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerGroup*& AudioHelm::HelmAudioInit::dyn_spatializerMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmAudioInit::dyn_spatializerMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spatializerMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource sendAudioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& AudioHelm::HelmAudioInit::dyn_sendAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmAudioInit::dyn_sendAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sendAudioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean wasSpatialized
[[deprecated("Use field access instead!")]] bool& AudioHelm::HelmAudioInit::dyn_wasSpatialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmAudioInit::dyn_wasSpatialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasSpatialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioHelm.HelmAudioReceive receiveAudio
[[deprecated("Use field access instead!")]] ::AudioHelm::HelmAudioReceive*& AudioHelm::HelmAudioInit::dyn_receiveAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmAudioInit::dyn_receiveAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receiveAudio"))->offset;
  return *reinterpret_cast<::AudioHelm::HelmAudioReceive**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.HelmAudioInit.GetChannel
int AudioHelm::HelmAudioInit::GetChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmAudioInit::GetChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmAudioInit.SetupSpatialization
void AudioHelm::HelmAudioInit::SetupSpatialization(::UnityEngine::AudioSource* audioComponent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmAudioInit::SetupSpatialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupSpatialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioComponent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioComponent);
}
// Autogenerated method: AudioHelm.HelmAudioInit.Awake
void AudioHelm::HelmAudioInit::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmAudioInit::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmAudioInit.Update
void AudioHelm::HelmAudioInit::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmAudioInit::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.HelmAudioReceive
#include "AudioHelm/HelmAudioReceive.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 channel
[[deprecated("Use field access instead!")]] int& AudioHelm::HelmAudioReceive::dyn_channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmAudioReceive::dyn_channel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.HelmAudioReceive.OnAudioFilterRead
void AudioHelm::HelmAudioReceive::OnAudioFilterRead(::ArrayW<float> data, int audioChannels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmAudioReceive::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(audioChannels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, audioChannels);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.HelmController
#include "AudioHelm/HelmController.hpp"
// Including type: AudioHelm.HelmController/AudioHelm.<WaitNoteOff>d__49
#include "AudioHelm/HelmController_-WaitNoteOff-d__49.hpp"
// Including type: AudioHelm.HelmController/AudioHelm.<WaitFrequencyOff>d__53
#include "AudioHelm/HelmController_-WaitFrequencyOff-d__53.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: AudioHelm.HelmParameter
#include "AudioHelm/HelmParameter.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: AudioHelm.HelmPatch
#include "AudioHelm/HelmPatch.hpp"
// Including type: AudioHelm.Param
#include "AudioHelm/Param.hpp"
// Including type: AudioHelm.CommonParam
#include "AudioHelm/CommonParam.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single UPDATE_WAIT
float AudioHelm::HelmController::_get_UPDATE_WAIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::_get_UPDATE_WAIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("AudioHelm", "HelmController", "UPDATE_WAIT"));
}
// Autogenerated static field setter
// Set static field: static public System.Single UPDATE_WAIT
void AudioHelm::HelmController::_set_UPDATE_WAIT(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::_set_UPDATE_WAIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "HelmController", "UPDATE_WAIT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MAX_PARAMETERS
int AudioHelm::HelmController::_get_MAX_PARAMETERS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::_get_MAX_PARAMETERS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AudioHelm", "HelmController", "MAX_PARAMETERS"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MAX_PARAMETERS
void AudioHelm::HelmController::_set_MAX_PARAMETERS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::_set_MAX_PARAMETERS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "HelmController", "MAX_PARAMETERS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 channel
[[deprecated("Use field access instead!")]] int& AudioHelm::HelmController::dyn_channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_channel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single synthParamValue0
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmController::dyn_synthParamValue0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_synthParamValue0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synthParamValue0"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single synthParamValue1
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmController::dyn_synthParamValue1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_synthParamValue1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synthParamValue1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single synthParamValue2
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmController::dyn_synthParamValue2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_synthParamValue2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synthParamValue2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single synthParamValue3
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmController::dyn_synthParamValue3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_synthParamValue3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synthParamValue3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single synthParamValue4
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmController::dyn_synthParamValue4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_synthParamValue4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synthParamValue4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single synthParamValue5
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmController::dyn_synthParamValue5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_synthParamValue5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synthParamValue5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single synthParamValue6
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmController::dyn_synthParamValue6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_synthParamValue6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synthParamValue6"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single synthParamValue7
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmController::dyn_synthParamValue7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_synthParamValue7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synthParamValue7"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single synthParamValue8
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmController::dyn_synthParamValue8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_synthParamValue8");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synthParamValue8"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single synthParamValue9
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmController::dyn_synthParamValue9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_synthParamValue9");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synthParamValue9"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single synthParamValue10
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmController::dyn_synthParamValue10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_synthParamValue10");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synthParamValue10"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single synthParamValue11
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmController::dyn_synthParamValue11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_synthParamValue11");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synthParamValue11"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single synthParamValue12
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmController::dyn_synthParamValue12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_synthParamValue12");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synthParamValue12"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single synthParamValue13
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmController::dyn_synthParamValue13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_synthParamValue13");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synthParamValue13"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single synthParamValue14
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmController::dyn_synthParamValue14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_synthParamValue14");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synthParamValue14"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single synthParamValue15
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmController::dyn_synthParamValue15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_synthParamValue15");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synthParamValue15"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] paramValues
[[deprecated("Use field access instead!")]] ::ArrayW<float>& AudioHelm::HelmController::dyn_paramValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_paramValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "paramValues"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<AudioHelm.HelmParameter> synthParameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::AudioHelm::HelmParameter*>*& AudioHelm::HelmController::dyn_synthParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_synthParameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synthParameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::AudioHelm::HelmParameter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> pressedNotes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, int>*& AudioHelm::HelmController::dyn_pressedNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_pressedNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pressedNotes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Single,System.Int32> pressedFrequencies
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<float, int>*& AudioHelm::HelmController::dyn_pressedFrequencies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::dyn_pressedFrequencies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pressedFrequencies"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<float, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.HelmController.OnDestroy
void AudioHelm::HelmController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmController.Awake
void AudioHelm::HelmController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmController.Start
void AudioHelm::HelmController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmController.LoadPatch
void AudioHelm::HelmController::LoadPatch(::AudioHelm::HelmPatch* patch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::LoadPatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadPatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(patch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, patch);
}
// Autogenerated method: AudioHelm.HelmController.GetParameterAtIndex
float AudioHelm::HelmController::GetParameterAtIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::GetParameterAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameterAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: AudioHelm.HelmController.SetParameterAtIndex
void AudioHelm::HelmController::SetParameterAtIndex(int index, float newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::SetParameterAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParameterAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, newValue);
}
// Autogenerated method: AudioHelm.HelmController.UpdateAllParameters
void AudioHelm::HelmController::UpdateAllParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::UpdateAllParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAllParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmController.UpdateParameter
void AudioHelm::HelmController::UpdateParameter(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::UpdateParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: AudioHelm.HelmController.AddEmptyParameter
::AudioHelm::HelmParameter* AudioHelm::HelmController::AddEmptyParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::AddEmptyParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEmptyParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::AudioHelm::HelmParameter*, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmController.AddParameter
::AudioHelm::HelmParameter* AudioHelm::HelmController::AddParameter(::AudioHelm::Param parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::AddParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter)})));
  return ::il2cpp_utils::RunMethodRethrow<::AudioHelm::HelmParameter*, false>(this, ___internal__method, parameter);
}
// Autogenerated method: AudioHelm.HelmController.RemoveParameter
int AudioHelm::HelmController::RemoveParameter(::AudioHelm::HelmParameter* parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::RemoveParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, parameter);
}
// Autogenerated method: AudioHelm.HelmController.GetParameterValue
float AudioHelm::HelmController::GetParameterValue(::AudioHelm::Param parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::GetParameterValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameterValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, parameter);
}
// Autogenerated method: AudioHelm.HelmController.SetParameterValue
void AudioHelm::HelmController::SetParameterValue(::AudioHelm::Param parameter, float newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::SetParameterValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParameterValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameter, newValue);
}
// Autogenerated method: AudioHelm.HelmController.GetParameterValue
float AudioHelm::HelmController::GetParameterValue(::AudioHelm::CommonParam parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::GetParameterValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameterValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, parameter);
}
// Autogenerated method: AudioHelm.HelmController.SetParameterValue
void AudioHelm::HelmController::SetParameterValue(::AudioHelm::CommonParam parameter, float newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::SetParameterValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParameterValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameter, newValue);
}
// Autogenerated method: AudioHelm.HelmController.GetParameterPercent
float AudioHelm::HelmController::GetParameterPercent(::AudioHelm::Param parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::GetParameterPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameterPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, parameter);
}
// Autogenerated method: AudioHelm.HelmController.SetParameterPercent
void AudioHelm::HelmController::SetParameterPercent(::AudioHelm::Param parameter, float newPercent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::SetParameterPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParameterPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter), ::il2cpp_utils::ExtractType(newPercent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameter, newPercent);
}
// Autogenerated method: AudioHelm.HelmController.GetParameterPercent
float AudioHelm::HelmController::GetParameterPercent(::AudioHelm::CommonParam parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::GetParameterPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameterPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, parameter);
}
// Autogenerated method: AudioHelm.HelmController.SetParameterPercent
void AudioHelm::HelmController::SetParameterPercent(::AudioHelm::CommonParam parameter, float newPercent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::SetParameterPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParameterPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter), ::il2cpp_utils::ExtractType(newPercent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameter, newPercent);
}
// Autogenerated method: AudioHelm.HelmController.SetPolyphony
void AudioHelm::HelmController::SetPolyphony(int numVoices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::SetPolyphony");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPolyphony", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numVoices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numVoices);
}
// Autogenerated method: AudioHelm.HelmController.AllNotesOff
void AudioHelm::HelmController::AllNotesOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::AllNotesOff");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::HelmController*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmController.IsNoteOn
bool AudioHelm::HelmController::IsNoteOn(int note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::IsNoteOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsNoteOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.HelmController.IsFrequencyOn
bool AudioHelm::HelmController::IsFrequencyOn(float frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::IsFrequencyOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsFrequencyOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frequency)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, frequency);
}
// Autogenerated method: AudioHelm.HelmController.GetPressedNotes
::System::Collections::Generic::Dictionary_2<int, int>* AudioHelm::HelmController::GetPressedNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::GetPressedNotes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPressedNotes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<int, int>*, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmController.NoteOn
void AudioHelm::HelmController::NoteOn(int note, float velocity, float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::NoteOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, velocity, length);
}
// Autogenerated method: AudioHelm.HelmController.NoteOn
void AudioHelm::HelmController::NoteOn(int note, float velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::NoteOn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::HelmController*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, velocity);
}
// Autogenerated method: AudioHelm.HelmController.WaitNoteOff
::System::Collections::IEnumerator* AudioHelm::HelmController::WaitNoteOff(int note, float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::WaitNoteOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitNoteOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, note, length);
}
// Autogenerated method: AudioHelm.HelmController.NoteOff
void AudioHelm::HelmController::NoteOff(int note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::NoteOff");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::HelmController*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.HelmController.FrequencyOn
void AudioHelm::HelmController::FrequencyOn(float frequency, float velocity, float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::FrequencyOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FrequencyOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frequency, velocity, length);
}
// Autogenerated method: AudioHelm.HelmController.FrequencyOn
void AudioHelm::HelmController::FrequencyOn(float frequency, float velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::FrequencyOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FrequencyOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(velocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frequency, velocity);
}
// Autogenerated method: AudioHelm.HelmController.WaitFrequencyOff
::System::Collections::IEnumerator* AudioHelm::HelmController::WaitFrequencyOff(float frequency, float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::WaitFrequencyOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitFrequencyOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, frequency, length);
}
// Autogenerated method: AudioHelm.HelmController.FrequencyOff
void AudioHelm::HelmController::FrequencyOff(float frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::FrequencyOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FrequencyOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frequency)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frequency);
}
// Autogenerated method: AudioHelm.HelmController.SetPitchWheel
void AudioHelm::HelmController::SetPitchWheel(float wheelValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::SetPitchWheel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPitchWheel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wheelValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wheelValue);
}
// Autogenerated method: AudioHelm.HelmController.SetModWheel
void AudioHelm::HelmController::SetModWheel(float wheelValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::SetModWheel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModWheel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wheelValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wheelValue);
}
// Autogenerated method: AudioHelm.HelmController.SetAftertouch
void AudioHelm::HelmController::SetAftertouch(int note, float aftertouchValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::SetAftertouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAftertouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(aftertouchValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, aftertouchValue);
}
// Autogenerated method: AudioHelm.HelmController.FixedUpdate
void AudioHelm::HelmController::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmController.PopulateParamsArray
void AudioHelm::HelmController::PopulateParamsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::PopulateParamsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateParamsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AudioHelm.HelmController/AudioHelm.<WaitNoteOff>d__49
#include "AudioHelm/HelmController_-WaitNoteOff-d__49.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& AudioHelm::HelmController::$WaitNoteOff$d__49::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitNoteOff$d__49::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& AudioHelm::HelmController::$WaitNoteOff$d__49::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitNoteOff$d__49::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single length
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmController::$WaitNoteOff$d__49::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitNoteOff$d__49::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.HelmController <>4__this
[[deprecated("Use field access instead!")]] ::AudioHelm::HelmController*& AudioHelm::HelmController::$WaitNoteOff$d__49::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitNoteOff$d__49::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::AudioHelm::HelmController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 note
[[deprecated("Use field access instead!")]] int& AudioHelm::HelmController::$WaitNoteOff$d__49::dyn_note() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitNoteOff$d__49::dyn_note");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "note"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.HelmController/AudioHelm.<WaitNoteOff>d__49.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* AudioHelm::HelmController::$WaitNoteOff$d__49::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitNoteOff$d__49::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::HelmController::$WaitNoteOff$d__49*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmController/AudioHelm.<WaitNoteOff>d__49.System.Collections.IEnumerator.get_Current
::Il2CppObject* AudioHelm::HelmController::$WaitNoteOff$d__49::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitNoteOff$d__49::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::HelmController::$WaitNoteOff$d__49*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmController/AudioHelm.<WaitNoteOff>d__49.System.IDisposable.Dispose
void AudioHelm::HelmController::$WaitNoteOff$d__49::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitNoteOff$d__49::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::HelmController::$WaitNoteOff$d__49*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmController/AudioHelm.<WaitNoteOff>d__49.MoveNext
bool AudioHelm::HelmController::$WaitNoteOff$d__49::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitNoteOff$d__49::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::HelmController::$WaitNoteOff$d__49*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmController/AudioHelm.<WaitNoteOff>d__49.System.Collections.IEnumerator.Reset
void AudioHelm::HelmController::$WaitNoteOff$d__49::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitNoteOff$d__49::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::HelmController::$WaitNoteOff$d__49*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AudioHelm.HelmController/AudioHelm.<WaitFrequencyOff>d__53
#include "AudioHelm/HelmController_-WaitFrequencyOff-d__53.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& AudioHelm::HelmController::$WaitFrequencyOff$d__53::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitFrequencyOff$d__53::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& AudioHelm::HelmController::$WaitFrequencyOff$d__53::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitFrequencyOff$d__53::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single length
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmController::$WaitFrequencyOff$d__53::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitFrequencyOff$d__53::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.HelmController <>4__this
[[deprecated("Use field access instead!")]] ::AudioHelm::HelmController*& AudioHelm::HelmController::$WaitFrequencyOff$d__53::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitFrequencyOff$d__53::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::AudioHelm::HelmController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single frequency
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmController::$WaitFrequencyOff$d__53::dyn_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitFrequencyOff$d__53::dyn_frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.HelmController/AudioHelm.<WaitFrequencyOff>d__53.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* AudioHelm::HelmController::$WaitFrequencyOff$d__53::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitFrequencyOff$d__53::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::HelmController::$WaitFrequencyOff$d__53*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmController/AudioHelm.<WaitFrequencyOff>d__53.System.Collections.IEnumerator.get_Current
::Il2CppObject* AudioHelm::HelmController::$WaitFrequencyOff$d__53::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitFrequencyOff$d__53::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::HelmController::$WaitFrequencyOff$d__53*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmController/AudioHelm.<WaitFrequencyOff>d__53.System.IDisposable.Dispose
void AudioHelm::HelmController::$WaitFrequencyOff$d__53::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitFrequencyOff$d__53::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::HelmController::$WaitFrequencyOff$d__53*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmController/AudioHelm.<WaitFrequencyOff>d__53.MoveNext
bool AudioHelm::HelmController::$WaitFrequencyOff$d__53::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitFrequencyOff$d__53::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::HelmController::$WaitFrequencyOff$d__53*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmController/AudioHelm.<WaitFrequencyOff>d__53.System.Collections.IEnumerator.Reset
void AudioHelm::HelmController::$WaitFrequencyOff$d__53::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmController::$WaitFrequencyOff$d__53::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::HelmController::$WaitFrequencyOff$d__53*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.HelmParameter
#include "AudioHelm/HelmParameter.hpp"
// Including type: AudioHelm.HelmController
#include "AudioHelm/HelmController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AudioHelm.Param parameter_
[[deprecated("Use field access instead!")]] ::AudioHelm::Param& AudioHelm::HelmParameter::dyn_parameter_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::dyn_parameter_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameter_"))->offset;
  return *reinterpret_cast<::AudioHelm::Param*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.HelmParameter/AudioHelm.ScaleType scaleType
[[deprecated("Use field access instead!")]] ::AudioHelm::HelmParameter::ScaleType& AudioHelm::HelmParameter::dyn_scaleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::dyn_scaleType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scaleType"))->offset;
  return *reinterpret_cast<::AudioHelm::HelmParameter::ScaleType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.HelmController parent
[[deprecated("Use field access instead!")]] ::AudioHelm::HelmController*& AudioHelm::HelmParameter::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::AudioHelm::HelmController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastValue
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmParameter::dyn_lastValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::dyn_lastValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single minimumRange
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmParameter::dyn_minimumRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::dyn_minimumRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minimumRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single maximumRange
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmParameter::dyn_maximumRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::dyn_maximumRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maximumRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single paramValue_
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmParameter::dyn_paramValue_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::dyn_paramValue_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "paramValue_"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.HelmParameter.get_parameter
::AudioHelm::Param AudioHelm::HelmParameter::get_parameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::get_parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::AudioHelm::Param, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmParameter.set_parameter
void AudioHelm::HelmParameter::set_parameter(::AudioHelm::Param value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::set_parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.HelmParameter.get_paramValue
float AudioHelm::HelmParameter::get_paramValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::get_paramValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_paramValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmParameter.set_paramValue
void AudioHelm::HelmParameter::set_paramValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::set_paramValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_paramValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.HelmParameter.GetMinimumRange
float AudioHelm::HelmParameter::GetMinimumRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::GetMinimumRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMinimumRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmParameter.GetMaximumRange
float AudioHelm::HelmParameter::GetMaximumRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::GetMaximumRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaximumRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmParameter.UpdateMinMax
void AudioHelm::HelmParameter::UpdateMinMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::UpdateMinMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMinMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmParameter.UpdateNative
void AudioHelm::HelmParameter::UpdateNative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::UpdateNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.HelmParameter/AudioHelm.ScaleType
#include "AudioHelm/HelmParameter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AudioHelm.HelmParameter/AudioHelm.ScaleType kByValue
::AudioHelm::HelmParameter::ScaleType AudioHelm::HelmParameter::ScaleType::_get_kByValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::ScaleType::_get_kByValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AudioHelm::HelmParameter::ScaleType>("AudioHelm", "HelmParameter/ScaleType", "kByValue"));
}
// Autogenerated static field setter
// Set static field: static public AudioHelm.HelmParameter/AudioHelm.ScaleType kByValue
void AudioHelm::HelmParameter::ScaleType::_set_kByValue(::AudioHelm::HelmParameter::ScaleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::ScaleType::_set_kByValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "HelmParameter/ScaleType", "kByValue", value));
}
// Autogenerated static field getter
// Get static field: static public AudioHelm.HelmParameter/AudioHelm.ScaleType kByPercent
::AudioHelm::HelmParameter::ScaleType AudioHelm::HelmParameter::ScaleType::_get_kByPercent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::ScaleType::_get_kByPercent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AudioHelm::HelmParameter::ScaleType>("AudioHelm", "HelmParameter/ScaleType", "kByPercent"));
}
// Autogenerated static field setter
// Set static field: static public AudioHelm.HelmParameter/AudioHelm.ScaleType kByPercent
void AudioHelm::HelmParameter::ScaleType::_set_kByPercent(::AudioHelm::HelmParameter::ScaleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::ScaleType::_set_kByPercent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "HelmParameter/ScaleType", "kByPercent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& AudioHelm::HelmParameter::ScaleType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmParameter::ScaleType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.HelmPatch
#include "AudioHelm/HelmPatch.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: AudioHelm.HelmPatchFormat
#include "AudioHelm/HelmPatchFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Object patchObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& AudioHelm::HelmPatch::dyn_patchObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatch::dyn_patchObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "patchObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.HelmPatchFormat patchData
[[deprecated("Use field access instead!")]] ::AudioHelm::HelmPatchFormat*& AudioHelm::HelmPatch::dyn_patchData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatch::dyn_patchData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "patchData"))->offset;
  return *reinterpret_cast<::AudioHelm::HelmPatchFormat**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.HelmPatch.LoadPatchData
void AudioHelm::HelmPatch::LoadPatchData(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatch::LoadPatchData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadPatchData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, filePath);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.HelmModulationSetting
#include "AudioHelm/HelmModulationSetting.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String source
[[deprecated("Use field access instead!")]] ::StringW& AudioHelm::HelmModulationSetting::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmModulationSetting::dyn_source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String destination
[[deprecated("Use field access instead!")]] ::StringW& AudioHelm::HelmModulationSetting::dyn_destination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmModulationSetting::dyn_destination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destination"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single amount
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmModulationSetting::dyn_amount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmModulationSetting::dyn_amount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "amount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.HelmPatchSettings
#include "AudioHelm/HelmPatchSettings.hpp"
// Including type: AudioHelm.HelmModulationSetting
#include "AudioHelm/HelmModulationSetting.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxModulations
int AudioHelm::HelmPatchSettings::_get_kMaxModulations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::_get_kMaxModulations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AudioHelm", "HelmPatchSettings", "kMaxModulations"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxModulations
void AudioHelm::HelmPatchSettings::_set_kMaxModulations(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::_set_kMaxModulations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "HelmPatchSettings", "kMaxModulations", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxCharacters
int AudioHelm::HelmPatchSettings::_get_kMaxCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::_get_kMaxCharacters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AudioHelm", "HelmPatchSettings", "kMaxCharacters"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxCharacters
void AudioHelm::HelmPatchSettings::_set_kMaxCharacters(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::_set_kMaxCharacters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "HelmPatchSettings", "kMaxCharacters", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] kModulationSources
::ArrayW<::StringW> AudioHelm::HelmPatchSettings::_get_kModulationSources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::_get_kModulationSources");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("AudioHelm", "HelmPatchSettings", "kModulationSources"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] kModulationSources
void AudioHelm::HelmPatchSettings::_set_kModulationSources(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::_set_kModulationSources");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "HelmPatchSettings", "kModulationSources", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] kModulationDestinations
::ArrayW<::StringW> AudioHelm::HelmPatchSettings::_get_kModulationDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::_get_kModulationDestinations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("AudioHelm", "HelmPatchSettings", "kModulationDestinations"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] kModulationDestinations
void AudioHelm::HelmPatchSettings::_set_kModulationDestinations(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::_set_kModulationDestinations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "HelmPatchSettings", "kModulationDestinations", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String[] kShortenNames
::ArrayW<::StringW> AudioHelm::HelmPatchSettings::_get_kShortenNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::_get_kShortenNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("AudioHelm", "HelmPatchSettings", "kShortenNames"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String[] kShortenNames
void AudioHelm::HelmPatchSettings::_set_kShortenNames(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::_set_kShortenNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "HelmPatchSettings", "kShortenNames", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single amp_attack
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_amp_attack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_amp_attack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "amp_attack"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single amp_decay
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_amp_decay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_amp_decay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "amp_decay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single amp_release
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_amp_release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_amp_release");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "amp_release"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single amp_sustain
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_amp_sustain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_amp_sustain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "amp_sustain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single arp_frequency
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_arp_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_arp_frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arp_frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single arp_gate
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_arp_gate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_arp_gate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arp_gate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single arp_octaves
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_arp_octaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_arp_octaves");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arp_octaves"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single arp_on
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_arp_on() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_arp_on");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arp_on"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single arp_pattern
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_arp_pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_arp_pattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arp_pattern"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single arp_sync
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_arp_sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_arp_sync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arp_sync"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single arp_tempo
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_arp_tempo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_arp_tempo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arp_tempo"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single beats_per_minute
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_beats_per_minute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_beats_per_minute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beats_per_minute"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cross_modulation
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_cross_modulation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_cross_modulation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cross_modulation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cutoff
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_cutoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_cutoff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutoff"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay_dry_wet
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_delay_dry_wet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_delay_dry_wet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay_dry_wet"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay_feedback
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_delay_feedback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_delay_feedback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay_feedback"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay_frequency
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_delay_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_delay_frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay_frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay_on
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_delay_on() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_delay_on");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay_on"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay_sync
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_delay_sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_delay_sync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay_sync"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay_tempo
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_delay_tempo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_delay_tempo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay_tempo"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single distortion_drive
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_distortion_drive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_distortion_drive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distortion_drive"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single distortion_mix
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_distortion_mix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_distortion_mix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distortion_mix"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single distortion_on
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_distortion_on() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_distortion_on");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distortion_on"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single distortion_type
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_distortion_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_distortion_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distortion_type"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fil_attack
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_fil_attack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_fil_attack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fil_attack"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fil_decay
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_fil_decay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_fil_decay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fil_decay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fil_env_depth
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_fil_env_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_fil_env_depth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fil_env_depth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fil_release
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_fil_release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_fil_release");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fil_release"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fil_sustain
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_fil_sustain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_fil_sustain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fil_sustain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single filter_blend
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_filter_blend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_filter_blend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filter_blend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single filter_drive
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_filter_drive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_filter_drive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filter_drive"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single filter_on
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_filter_on() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_filter_on");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filter_on"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single filter_saturation
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_filter_saturation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_filter_saturation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filter_saturation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single filter_shelf
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_filter_shelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_filter_shelf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filter_shelf"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single filter_style
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_filter_style() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_filter_style");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filter_style"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single filter_type
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_filter_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_filter_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filter_type"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single formant_on
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_formant_on() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_formant_on");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "formant_on"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single formant_x
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_formant_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_formant_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "formant_x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single formant_y
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_formant_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_formant_y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "formant_y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single keytrack
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_keytrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_keytrack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keytrack"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single legato
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_legato() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_legato");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "legato"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single mod_attack
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_mod_attack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_mod_attack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mod_attack"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single mod_decay
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_mod_decay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_mod_decay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mod_decay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single mod_release
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_mod_release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_mod_release");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mod_release"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single mod_sustain
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_mod_sustain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_mod_sustain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mod_sustain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single mono_lfo_1_amplitude
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_mono_lfo_1_amplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_mono_lfo_1_amplitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mono_lfo_1_amplitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single mono_lfo_1_frequency
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_mono_lfo_1_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_mono_lfo_1_frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mono_lfo_1_frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single mono_lfo_1_retrigger
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_mono_lfo_1_retrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_mono_lfo_1_retrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mono_lfo_1_retrigger"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single mono_lfo_1_sync
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_mono_lfo_1_sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_mono_lfo_1_sync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mono_lfo_1_sync"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single mono_lfo_1_tempo
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_mono_lfo_1_tempo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_mono_lfo_1_tempo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mono_lfo_1_tempo"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single mono_lfo_1_waveform
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_mono_lfo_1_waveform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_mono_lfo_1_waveform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mono_lfo_1_waveform"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single mono_lfo_2_amplitude
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_mono_lfo_2_amplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_mono_lfo_2_amplitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mono_lfo_2_amplitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single mono_lfo_2_frequency
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_mono_lfo_2_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_mono_lfo_2_frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mono_lfo_2_frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single mono_lfo_2_retrigger
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_mono_lfo_2_retrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_mono_lfo_2_retrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mono_lfo_2_retrigger"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single mono_lfo_2_sync
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_mono_lfo_2_sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_mono_lfo_2_sync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mono_lfo_2_sync"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single mono_lfo_2_tempo
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_mono_lfo_2_tempo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_mono_lfo_2_tempo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mono_lfo_2_tempo"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single mono_lfo_2_waveform
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_mono_lfo_2_waveform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_mono_lfo_2_waveform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mono_lfo_2_waveform"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single noise_volume
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_noise_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_noise_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noise_volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single num_steps
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_num_steps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_num_steps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "num_steps"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single osc_1_transpose
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_osc_1_transpose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_osc_1_transpose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osc_1_transpose"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single osc_1_tune
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_osc_1_tune() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_osc_1_tune");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osc_1_tune"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single osc_1_unison_detune
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_osc_1_unison_detune() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_osc_1_unison_detune");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osc_1_unison_detune"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single osc_1_unison_voices
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_osc_1_unison_voices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_osc_1_unison_voices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osc_1_unison_voices"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single osc_1_volume
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_osc_1_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_osc_1_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osc_1_volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single osc_1_waveform
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_osc_1_waveform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_osc_1_waveform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osc_1_waveform"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single osc_2_transpose
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_osc_2_transpose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_osc_2_transpose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osc_2_transpose"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single osc_2_tune
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_osc_2_tune() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_osc_2_tune");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osc_2_tune"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single osc_2_unison_detune
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_osc_2_unison_detune() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_osc_2_unison_detune");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osc_2_unison_detune"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single osc_2_unison_voices
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_osc_2_unison_voices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_osc_2_unison_voices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osc_2_unison_voices"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single osc_2_volume
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_osc_2_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_osc_2_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osc_2_volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single osc_2_waveform
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_osc_2_waveform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_osc_2_waveform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osc_2_waveform"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single osc_feedback_amount
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_osc_feedback_amount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_osc_feedback_amount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osc_feedback_amount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single osc_feedback_transpose
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_osc_feedback_transpose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_osc_feedback_transpose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osc_feedback_transpose"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single osc_feedback_tune
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_osc_feedback_tune() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_osc_feedback_tune");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osc_feedback_tune"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single osc_mix
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_osc_mix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_osc_mix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osc_mix"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pitch_bend_range
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_pitch_bend_range() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_pitch_bend_range");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pitch_bend_range"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single poly_lfo_amplitude
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_poly_lfo_amplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_poly_lfo_amplitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "poly_lfo_amplitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single poly_lfo_frequency
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_poly_lfo_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_poly_lfo_frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "poly_lfo_frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single poly_lfo_sync
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_poly_lfo_sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_poly_lfo_sync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "poly_lfo_sync"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single poly_lfo_tempo
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_poly_lfo_tempo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_poly_lfo_tempo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "poly_lfo_tempo"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single poly_lfo_waveform
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_poly_lfo_waveform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_poly_lfo_waveform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "poly_lfo_waveform"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single polyphony
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_polyphony() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_polyphony");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "polyphony"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single portamento
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_portamento() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_portamento");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "portamento"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single portamento_type
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_portamento_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_portamento_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "portamento_type"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single resonance
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_resonance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_resonance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resonance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single reverb_damping
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_reverb_damping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_reverb_damping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverb_damping"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single reverb_dry_wet
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_reverb_dry_wet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_reverb_dry_wet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverb_dry_wet"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single reverb_feedback
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_reverb_feedback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_reverb_feedback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverb_feedback"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single reverb_on
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_reverb_on() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_reverb_on");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverb_on"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_frequency
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_00
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_00() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_00");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_00"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_01
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_01() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_01");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_01"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_02
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_02() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_02");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_02"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_03
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_03() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_03");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_03"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_04
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_04() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_04");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_04"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_05
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_05() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_05");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_05"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_06
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_06() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_06");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_06"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_07
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_07() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_07");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_07"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_08
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_08() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_08");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_08"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_09
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_09() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_09");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_09"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_10
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_10");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_10"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_11
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_11");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_11"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_12
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_12");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_12"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_13
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_13");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_13"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_14
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_14");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_14"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_15
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_15");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_15"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_16
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_16");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_16"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_17
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_17() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_17");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_17"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_18
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_18() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_18");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_18"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_19
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_19() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_19");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_19"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_20
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_20");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_20"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_21
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_21() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_21");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_21"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_22
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_22() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_22");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_22"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_23
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_23() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_23");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_23"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_24
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_24");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_24"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_25
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_25() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_25");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_25"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_26
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_26() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_26");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_26"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_27
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_27() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_27");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_27"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_28
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_28() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_28");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_28"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_29
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_29() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_29");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_29"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_30
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_30() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_30");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_30"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_seq_31
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_seq_31() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_seq_31");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_seq_31"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_sequencer_retrigger
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_sequencer_retrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_sequencer_retrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_sequencer_retrigger"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_sequencer_sync
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_sequencer_sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_sequencer_sync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_sequencer_sync"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_sequencer_tempo
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_sequencer_tempo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_sequencer_tempo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_sequencer_tempo"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single step_smoothing
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_step_smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_step_smoothing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step_smoothing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stutter_frequency
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_stutter_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_stutter_frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stutter_frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stutter_on
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_stutter_on() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_stutter_on");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stutter_on"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stutter_resample_frequency
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_stutter_resample_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_stutter_resample_frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stutter_resample_frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stutter_resample_sync
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_stutter_resample_sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_stutter_resample_sync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stutter_resample_sync"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stutter_resample_tempo
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_stutter_resample_tempo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_stutter_resample_tempo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stutter_resample_tempo"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stutter_softness
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_stutter_softness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_stutter_softness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stutter_softness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stutter_sync
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_stutter_sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_stutter_sync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stutter_sync"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stutter_tempo
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_stutter_tempo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_stutter_tempo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stutter_tempo"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sub_octave
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_sub_octave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_sub_octave");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sub_octave"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sub_shuffle
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_sub_shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_sub_shuffle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sub_shuffle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sub_volume
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_sub_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_sub_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sub_volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sub_waveform
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_sub_waveform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_sub_waveform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sub_waveform"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single unison_1_harmonize
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_unison_1_harmonize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_unison_1_harmonize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unison_1_harmonize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single unison_2_harmonize
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_unison_2_harmonize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_unison_2_harmonize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unison_2_harmonize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single velocity_track
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_velocity_track() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_velocity_track");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocity_track"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volume
[[deprecated("Use field access instead!")]] float& AudioHelm::HelmPatchSettings::dyn_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.HelmModulationSetting[] modulations
[[deprecated("Use field access instead!")]] ::ArrayW<::AudioHelm::HelmModulationSetting*>& AudioHelm::HelmPatchSettings::dyn_modulations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::dyn_modulations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modulations"))->offset;
  return *reinterpret_cast<::ArrayW<::AudioHelm::HelmModulationSetting*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.HelmPatchSettings..cctor
void AudioHelm::HelmPatchSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "HelmPatchSettings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AudioHelm.HelmPatchSettings.ConvertToPlugin
::StringW AudioHelm::HelmPatchSettings::ConvertToPlugin(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::ConvertToPlugin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "HelmPatchSettings", "ConvertToPlugin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: AudioHelm.HelmPatchSettings.GetSourceIndex
int AudioHelm::HelmPatchSettings::GetSourceIndex(::StringW source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::GetSourceIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "HelmPatchSettings", "GetSourceIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: AudioHelm.HelmPatchSettings.GetDestinationIndex
int AudioHelm::HelmPatchSettings::GetDestinationIndex(::StringW dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::GetDestinationIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "HelmPatchSettings", "GetDestinationIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest);
}
// Autogenerated method: AudioHelm.HelmPatchSettings.Clone
::AudioHelm::HelmPatchSettings* AudioHelm::HelmPatchSettings::Clone(::AudioHelm::HelmPatchSettings* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchSettings::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "HelmPatchSettings", "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<::AudioHelm::HelmPatchSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.HelmPatchFormat
#include "AudioHelm/HelmPatchFormat.hpp"
// Including type: AudioHelm.HelmPatchSettings
#include "AudioHelm/HelmPatchSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String license
[[deprecated("Use field access instead!")]] ::StringW& AudioHelm::HelmPatchFormat::dyn_license() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchFormat::dyn_license");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "license"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String synth_version
[[deprecated("Use field access instead!")]] ::StringW& AudioHelm::HelmPatchFormat::dyn_synth_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchFormat::dyn_synth_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synth_version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String patch_name
[[deprecated("Use field access instead!")]] ::StringW& AudioHelm::HelmPatchFormat::dyn_patch_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchFormat::dyn_patch_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "patch_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String folder_name
[[deprecated("Use field access instead!")]] ::StringW& AudioHelm::HelmPatchFormat::dyn_folder_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchFormat::dyn_folder_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "folder_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String author
[[deprecated("Use field access instead!")]] ::StringW& AudioHelm::HelmPatchFormat::dyn_author() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchFormat::dyn_author");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "author"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.HelmPatchSettings settings
[[deprecated("Use field access instead!")]] ::AudioHelm::HelmPatchSettings*& AudioHelm::HelmPatchFormat::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmPatchFormat::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::AudioHelm::HelmPatchSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.HelmSequencer
#include "AudioHelm/HelmSequencer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 channel
[[deprecated("Use field access instead!")]] int& AudioHelm::HelmSequencer::dyn_channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::dyn_channel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr reference
[[deprecated("Use field access instead!")]] ::System::IntPtr& AudioHelm::HelmSequencer::dyn_reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::dyn_reference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reference"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentChannel
[[deprecated("Use field access instead!")]] int& AudioHelm::HelmSequencer::dyn_currentChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::dyn_currentChannel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentChannel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentLength
[[deprecated("Use field access instead!")]] int& AudioHelm::HelmSequencer::dyn_currentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::dyn_currentLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean currentLoop
[[deprecated("Use field access instead!")]] bool& AudioHelm::HelmSequencer::dyn_currentLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::dyn_currentLoop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentLoop"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.HelmSequencer.CreateNativeSequencer
void AudioHelm::HelmSequencer::CreateNativeSequencer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::CreateNativeSequencer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNativeSequencer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmSequencer.DeleteNativeSequencer
void AudioHelm::HelmSequencer::DeleteNativeSequencer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::DeleteNativeSequencer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteNativeSequencer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmSequencer.Awake
void AudioHelm::HelmSequencer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmSequencer.OnDestroy
void AudioHelm::HelmSequencer::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmSequencer.EnableComponent
void AudioHelm::HelmSequencer::EnableComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::EnableComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmSequencer.FixedUpdate
void AudioHelm::HelmSequencer::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmSequencer.Update
void AudioHelm::HelmSequencer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmSequencer.DoUpdate
void AudioHelm::HelmSequencer::DoUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::DoUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmSequencer.Reference
::System::IntPtr AudioHelm::HelmSequencer::Reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::Reference");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmSequencer.OnEnable
void AudioHelm::HelmSequencer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmSequencer.OnDisable
void AudioHelm::HelmSequencer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmSequencer.AllNotesOff
void AudioHelm::HelmSequencer::AllNotesOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::AllNotesOff");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.HelmSequencer.NoteOn
void AudioHelm::HelmSequencer::NoteOn(int note, float velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::NoteOn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, velocity);
}
// Autogenerated method: AudioHelm.HelmSequencer.NoteOff
void AudioHelm::HelmSequencer::NoteOff(int note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::NoteOff");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.HelmSequencer.StartOnNextCycle
void AudioHelm::HelmSequencer::StartOnNextCycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::HelmSequencer::StartOnNextCycle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.Keyzone
#include "AudioHelm/Keyzone.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip audioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& AudioHelm::Keyzone::dyn_audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Keyzone::dyn_audioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup mixer
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerGroup*& AudioHelm::Keyzone::dyn_mixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Keyzone::dyn_mixer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixer"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 rootKey
[[deprecated("Use field access instead!")]] int& AudioHelm::Keyzone::dyn_rootKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Keyzone::dyn_rootKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootKey"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 minKey
[[deprecated("Use field access instead!")]] int& AudioHelm::Keyzone::dyn_minKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Keyzone::dyn_minKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minKey"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxKey
[[deprecated("Use field access instead!")]] int& AudioHelm::Keyzone::dyn_maxKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Keyzone::dyn_maxKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxKey"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minVelocity
[[deprecated("Use field access instead!")]] float& AudioHelm::Keyzone::dyn_minVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Keyzone::dyn_minVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxVelocity
[[deprecated("Use field access instead!")]] float& AudioHelm::Keyzone::dyn_maxVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Keyzone::dyn_maxVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double lastScheduled
[[deprecated("Use field access instead!")]] double& AudioHelm::Keyzone::dyn_lastScheduled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Keyzone::dyn_lastScheduled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastScheduled"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.Keyzone.ValidForNote
bool AudioHelm::Keyzone::ValidForNote(int note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Keyzone::ValidForNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidForNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.Keyzone.ValidForNote
bool AudioHelm::Keyzone::ValidForNote(int note, float velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Keyzone::ValidForNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidForNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(velocity)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, note, velocity);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.MidiFile
#include "AudioHelm/MidiFile.hpp"
// Including type: AudioHelm.MidiFile/AudioHelm.MidiData
#include "AudioHelm/MidiFile_MidiData.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Object midiObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& AudioHelm::MidiFile::dyn_midiObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MidiFile::dyn_midiObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "midiObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.MidiFile/AudioHelm.MidiData midiData
[[deprecated("Use field access instead!")]] ::AudioHelm::MidiFile::MidiData*& AudioHelm::MidiFile::dyn_midiData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MidiFile::dyn_midiData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "midiData"))->offset;
  return *reinterpret_cast<::AudioHelm::MidiFile::MidiData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.MidiFile.LoadMidiData
void AudioHelm::MidiFile::LoadMidiData(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MidiFile::LoadMidiData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadMidiData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, filePath);
}
// Autogenerated method: AudioHelm.MidiFile.LoadMidiData
::AudioHelm::MidiFile::MidiData* AudioHelm::MidiFile::LoadMidiData(::System::IO::Stream* midiStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MidiFile::LoadMidiData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "MidiFile", "LoadMidiData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(midiStream)})));
  return ::il2cpp_utils::RunMethodRethrow<::AudioHelm::MidiFile::MidiData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, midiStream);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.MidiFile/AudioHelm.MidiData
#include "AudioHelm/MidiFile_MidiData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: AudioHelm.Note
#include "AudioHelm/Note.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 length
[[deprecated("Use field access instead!")]] int& AudioHelm::MidiFile::MidiData::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MidiFile::MidiData::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<AudioHelm.Note> notes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::AudioHelm::Note*>*& AudioHelm::MidiFile::MidiData::dyn_notes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::MidiFile::MidiData::dyn_notes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::AudioHelm::Note*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.Native
#include "AudioHelm/Native.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AudioHelm.Native.HelmNoteOn
void AudioHelm::Native::HelmNoteOn(int channel, int note, float velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::HelmNoteOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "HelmNoteOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(velocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, note, velocity);
}
// Autogenerated method: AudioHelm.Native.HelmNoteOff
void AudioHelm::Native::HelmNoteOff(int channel, int note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::HelmNoteOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "HelmNoteOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(note)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, note);
}
// Autogenerated method: AudioHelm.Native.HelmFrequencyOn
void AudioHelm::Native::HelmFrequencyOn(int channel, float frequency, float velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::HelmFrequencyOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "HelmFrequencyOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(velocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, frequency, velocity);
}
// Autogenerated method: AudioHelm.Native.HelmFrequencyOff
void AudioHelm::Native::HelmFrequencyOff(int channel, float frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::HelmFrequencyOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "HelmFrequencyOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(frequency)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, frequency);
}
// Autogenerated method: AudioHelm.Native.HelmAllNotesOff
void AudioHelm::Native::HelmAllNotesOff(int channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::HelmAllNotesOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "HelmAllNotesOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel);
}
// Autogenerated method: AudioHelm.Native.HelmSetPitchWheel
void AudioHelm::Native::HelmSetPitchWheel(int channel, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::HelmSetPitchWheel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "HelmSetPitchWheel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, value);
}
// Autogenerated method: AudioHelm.Native.HelmSetModWheel
void AudioHelm::Native::HelmSetModWheel(int channel, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::HelmSetModWheel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "HelmSetModWheel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, value);
}
// Autogenerated method: AudioHelm.Native.HelmSetAftertouch
void AudioHelm::Native::HelmSetAftertouch(int channel, int note, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::HelmSetAftertouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "HelmSetAftertouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, note, value);
}
// Autogenerated method: AudioHelm.Native.HelmClearModulations
void AudioHelm::Native::HelmClearModulations(int channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::HelmClearModulations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "HelmClearModulations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel);
}
// Autogenerated method: AudioHelm.Native.HelmAddModulation
void AudioHelm::Native::HelmAddModulation(int channel, int index, ::StringW source, ::StringW dest, float amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::HelmAddModulation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "HelmAddModulation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, index, source, dest, amount);
}
// Autogenerated method: AudioHelm.Native.HelmGetParameterMinimum
float AudioHelm::Native::HelmGetParameterMinimum(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::HelmGetParameterMinimum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "HelmGetParameterMinimum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: AudioHelm.Native.HelmGetParameterMaximum
float AudioHelm::Native::HelmGetParameterMaximum(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::HelmGetParameterMaximum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "HelmGetParameterMaximum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: AudioHelm.Native.HelmGetParameterValue
float AudioHelm::Native::HelmGetParameterValue(int channel, int paramIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::HelmGetParameterValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "HelmGetParameterValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(paramIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, paramIndex);
}
// Autogenerated method: AudioHelm.Native.HelmSetParameterValue
bool AudioHelm::Native::HelmSetParameterValue(int channel, int paramIndex, float newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::HelmSetParameterValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "HelmSetParameterValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(paramIndex), ::il2cpp_utils::ExtractType(newValue)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, paramIndex, newValue);
}
// Autogenerated method: AudioHelm.Native.HelmGetParameterPercent
float AudioHelm::Native::HelmGetParameterPercent(int channel, int paramIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::HelmGetParameterPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "HelmGetParameterPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(paramIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, paramIndex);
}
// Autogenerated method: AudioHelm.Native.HelmSetParameterPercent
bool AudioHelm::Native::HelmSetParameterPercent(int channel, int paramIndex, float newPercent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::HelmSetParameterPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "HelmSetParameterPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(paramIndex), ::il2cpp_utils::ExtractType(newPercent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, paramIndex, newPercent);
}
// Autogenerated method: AudioHelm.Native.HelmSilence
bool AudioHelm::Native::HelmSilence(int channel, bool silent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::HelmSilence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "HelmSilence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(silent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, silent);
}
// Autogenerated method: AudioHelm.Native.HelmGetBufferData
bool AudioHelm::Native::HelmGetBufferData(int channel, ::ArrayW<float> buffer, int samples, int numAudioChannels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::HelmGetBufferData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "HelmGetBufferData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(samples), ::il2cpp_utils::ExtractType(numAudioChannels)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, buffer, samples, numAudioChannels);
}
// Autogenerated method: AudioHelm.Native.SetBpm
void AudioHelm::Native::SetBpm(float bpm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::SetBpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "SetBpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bpm)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bpm);
}
// Autogenerated method: AudioHelm.Native.CreateSequencer
::System::IntPtr AudioHelm::Native::CreateSequencer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::CreateSequencer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "CreateSequencer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AudioHelm.Native.DeleteSequencer
void AudioHelm::Native::DeleteSequencer(::System::IntPtr sequencer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::DeleteSequencer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "DeleteSequencer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequencer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sequencer);
}
// Autogenerated method: AudioHelm.Native.EnableSequencer
void AudioHelm::Native::EnableSequencer(::System::IntPtr sequencer, bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::EnableSequencer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "EnableSequencer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequencer), ::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sequencer, enable);
}
// Autogenerated method: AudioHelm.Native.ChangeSequencerLength
void AudioHelm::Native::ChangeSequencerLength(::System::IntPtr sequencer, float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::ChangeSequencerLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "ChangeSequencerLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequencer), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sequencer, length);
}
// Autogenerated method: AudioHelm.Native.LoopSequencer
void AudioHelm::Native::LoopSequencer(::System::IntPtr sequencer, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::LoopSequencer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "LoopSequencer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequencer), ::il2cpp_utils::ExtractType(loop)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sequencer, loop);
}
// Autogenerated method: AudioHelm.Native.ChangeSequencerChannel
bool AudioHelm::Native::ChangeSequencerChannel(::System::IntPtr sequencer, int channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::ChangeSequencerChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "ChangeSequencerChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequencer), ::il2cpp_utils::ExtractType(channel)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sequencer, channel);
}
// Autogenerated method: AudioHelm.Native.SetSequencerStart
void AudioHelm::Native::SetSequencerStart(::System::IntPtr sequencer, double startBeat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::SetSequencerStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "SetSequencerStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequencer), ::il2cpp_utils::ExtractType(startBeat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sequencer, startBeat);
}
// Autogenerated method: AudioHelm.Native.CreateNote
::System::IntPtr AudioHelm::Native::CreateNote(::System::IntPtr sequencer, int note, float velocity, float start, float end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::CreateNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "CreateNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequencer), ::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sequencer, note, velocity, start, end);
}
// Autogenerated method: AudioHelm.Native.DeleteNote
::System::IntPtr AudioHelm::Native::DeleteNote(::System::IntPtr sequencer, ::System::IntPtr note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::DeleteNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "DeleteNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequencer), ::il2cpp_utils::ExtractType(note)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sequencer, note);
}
// Autogenerated method: AudioHelm.Native.ChangeNoteStart
::System::IntPtr AudioHelm::Native::ChangeNoteStart(::System::IntPtr sequencer, ::System::IntPtr note, float newStart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::ChangeNoteStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "ChangeNoteStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequencer), ::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(newStart)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sequencer, note, newStart);
}
// Autogenerated method: AudioHelm.Native.ChangeNoteEnd
::System::IntPtr AudioHelm::Native::ChangeNoteEnd(::System::IntPtr sequencer, ::System::IntPtr note, float newEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::ChangeNoteEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "ChangeNoteEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequencer), ::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(newEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sequencer, note, newEnd);
}
// Autogenerated method: AudioHelm.Native.ChangeNoteValues
::System::IntPtr AudioHelm::Native::ChangeNoteValues(::System::IntPtr sequencer, ::System::IntPtr note, int newMidiKey, float newStart, float newEnd, float newVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::ChangeNoteValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "ChangeNoteValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequencer), ::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(newMidiKey), ::il2cpp_utils::ExtractType(newStart), ::il2cpp_utils::ExtractType(newEnd), ::il2cpp_utils::ExtractType(newVelocity)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sequencer, note, newMidiKey, newStart, newEnd, newVelocity);
}
// Autogenerated method: AudioHelm.Native.ChangeNoteKey
::System::IntPtr AudioHelm::Native::ChangeNoteKey(::System::IntPtr sequencer, ::System::IntPtr note, int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::ChangeNoteKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "ChangeNoteKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequencer), ::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sequencer, note, key);
}
// Autogenerated method: AudioHelm.Native.ChangeNoteVelocity
::System::IntPtr AudioHelm::Native::ChangeNoteVelocity(::System::IntPtr note, float velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::ChangeNoteVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "ChangeNoteVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(velocity)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, note, velocity);
}
// Autogenerated method: AudioHelm.Native.SetBeatTime
void AudioHelm::Native::SetBeatTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::SetBeatTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "SetBeatTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: AudioHelm.Native.Pause
void AudioHelm::Native::Pause(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Native::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Native", "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pause)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pause);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.Note
#include "AudioHelm/Note.hpp"
// Including type: AudioHelm.Note/AudioHelm.NoteAction
#include "AudioHelm/Note_NoteAction.hpp"
// Including type: AudioHelm.Sequencer
#include "AudioHelm/Sequencer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AudioHelm.Note/AudioHelm.NoteAction OnNoteOn
[[deprecated("Use field access instead!")]] ::AudioHelm::Note::NoteAction*& AudioHelm::Note::dyn_OnNoteOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::dyn_OnNoteOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnNoteOn"))->offset;
  return *reinterpret_cast<::AudioHelm::Note::NoteAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioHelm.Note/AudioHelm.NoteAction OnNoteOff
[[deprecated("Use field access instead!")]] ::AudioHelm::Note::NoteAction*& AudioHelm::Note::dyn_OnNoteOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::dyn_OnNoteOff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnNoteOff"))->offset;
  return *reinterpret_cast<::AudioHelm::Note::NoteAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 note_
[[deprecated("Use field access instead!")]] int& AudioHelm::Note::dyn_note_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::dyn_note_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "note_"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single start_
[[deprecated("Use field access instead!")]] float& AudioHelm::Note::dyn_start_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::dyn_start_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start_"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single end_
[[deprecated("Use field access instead!")]] float& AudioHelm::Note::dyn_end_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::dyn_end_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "end_"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single velocity_
[[deprecated("Use field access instead!")]] float& AudioHelm::Note::dyn_velocity_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::dyn_velocity_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocity_"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.Sequencer parent
[[deprecated("Use field access instead!")]] ::AudioHelm::Sequencer*& AudioHelm::Note::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::AudioHelm::Sequencer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr reference
[[deprecated("Use field access instead!")]] ::System::IntPtr& AudioHelm::Note::dyn_reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::dyn_reference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reference"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.Note.get_note
int AudioHelm::Note::get_note() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::get_note");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_note", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Note.set_note
void AudioHelm::Note::set_note(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::set_note");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_note", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.Note.get_start
float AudioHelm::Note::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::get_start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Note.set_start
void AudioHelm::Note::set_start(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::set_start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.Note.get_end
float AudioHelm::Note::get_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::get_end");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_end", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Note.set_end
void AudioHelm::Note::set_end(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::set_end");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_end", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.Note.get_velocity
float AudioHelm::Note::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Note.set_velocity
void AudioHelm::Note::set_velocity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::set_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.Note.add_OnNoteOn
void AudioHelm::Note::add_OnNoteOn(::AudioHelm::Note::NoteAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::add_OnNoteOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnNoteOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.Note.remove_OnNoteOn
void AudioHelm::Note::remove_OnNoteOn(::AudioHelm::Note::NoteAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::remove_OnNoteOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnNoteOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.Note.add_OnNoteOff
void AudioHelm::Note::add_OnNoteOff(::AudioHelm::Note::NoteAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::add_OnNoteOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnNoteOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.Note.remove_OnNoteOff
void AudioHelm::Note::remove_OnNoteOff(::AudioHelm::Note::NoteAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::remove_OnNoteOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnNoteOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.Note.OnAfterDeserialize
void AudioHelm::Note::OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Note*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Note.OnBeforeSerialize
void AudioHelm::Note::OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Note*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Note.CopySettingsToNative
void AudioHelm::Note::CopySettingsToNative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::CopySettingsToNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopySettingsToNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Note.HasNativeNote
bool AudioHelm::Note::HasNativeNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::HasNativeNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasNativeNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Note.HasNativeSequencer
bool AudioHelm::Note::HasNativeSequencer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::HasNativeSequencer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasNativeSequencer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Note.FullyNative
bool AudioHelm::Note::FullyNative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::FullyNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FullyNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Note.TriggerNoteOnEvent
void AudioHelm::Note::TriggerNoteOnEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::TriggerNoteOnEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerNoteOnEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Note.TriggerNoteOffEvent
void AudioHelm::Note::TriggerNoteOffEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::TriggerNoteOffEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerNoteOffEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Note.TryCreate
void AudioHelm::Note::TryCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::TryCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Note.TryDelete
void AudioHelm::Note::TryDelete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::TryDelete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDelete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Note.OverlapsRange
bool AudioHelm::Note::OverlapsRange(float rangeStart, float rangeEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::OverlapsRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OverlapsRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rangeStart), ::il2cpp_utils::ExtractType(rangeEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rangeStart, rangeEnd);
}
// Autogenerated method: AudioHelm.Note.InsideRange
bool AudioHelm::Note::InsideRange(float rangeStart, float rangeEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::InsideRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsideRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rangeStart), ::il2cpp_utils::ExtractType(rangeEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rangeStart, rangeEnd);
}
// Autogenerated method: AudioHelm.Note.RemoveRange
void AudioHelm::Note::RemoveRange(float rangeStart, float rangeEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::RemoveRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rangeStart), ::il2cpp_utils::ExtractType(rangeEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rangeStart, rangeEnd);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AudioHelm.Note/AudioHelm.NoteAction
#include "AudioHelm/Note_NoteAction.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AudioHelm.Note/AudioHelm.NoteAction.Invoke
void AudioHelm::Note::NoteAction::Invoke(::AudioHelm::Note* note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::NoteAction::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Note::NoteAction*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.Note/AudioHelm.NoteAction.BeginInvoke
::System::IAsyncResult* AudioHelm::Note::NoteAction::BeginInvoke(::AudioHelm::Note* note, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::NoteAction::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Note::NoteAction*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, note, callback, object);
}
// Autogenerated method: AudioHelm.Note/AudioHelm.NoteAction.EndInvoke
void AudioHelm::Note::NoteAction::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Note::NoteAction::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Note::NoteAction*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.NoteHandler
#include "AudioHelm/NoteHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AudioHelm.NoteHandler.AllNotesOff
void AudioHelm::NoteHandler::AllNotesOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::NoteHandler::AllNotesOff");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::NoteHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.NoteHandler.NoteOn
void AudioHelm::NoteHandler::NoteOn(int note, float velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::NoteHandler::NoteOn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::NoteHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, velocity);
}
// Autogenerated method: AudioHelm.NoteHandler.NoteOff
void AudioHelm::NoteHandler::NoteOff(int note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::NoteHandler::NoteOff");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::NoteHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.NoteRow
#include "AudioHelm/NoteRow.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: AudioHelm.Note
#include "AudioHelm/Note.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<AudioHelm.Note> notes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::AudioHelm::Note*>*& AudioHelm::NoteRow::dyn_notes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::NoteRow::dyn_notes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::AudioHelm::Note*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<AudioHelm.Note> oldNotes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::AudioHelm::Note*>*& AudioHelm::NoteRow::dyn_oldNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::NoteRow::dyn_oldNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oldNotes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::AudioHelm::Note*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.NoteRow.OnBeforeSerialize
void AudioHelm::NoteRow::OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::NoteRow::OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::NoteRow*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.NoteRow.OnAfterDeserialize
void AudioHelm::NoteRow::OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::NoteRow::OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::NoteRow*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.SampleSequencer
#include "AudioHelm/SampleSequencer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single lookaheadTime
float AudioHelm::SampleSequencer::_get_lookaheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SampleSequencer::_get_lookaheadTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("AudioHelm", "SampleSequencer", "lookaheadTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single lookaheadTime
void AudioHelm::SampleSequencer::_set_lookaheadTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SampleSequencer::_set_lookaheadTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "SampleSequencer", "lookaheadTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Double lastWindowTime
[[deprecated("Use field access instead!")]] double& AudioHelm::SampleSequencer::dyn_lastWindowTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SampleSequencer::dyn_lastWindowTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastWindowTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.SampleSequencer.Awake
void AudioHelm::SampleSequencer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SampleSequencer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.SampleSequencer.Start
void AudioHelm::SampleSequencer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SampleSequencer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.SampleSequencer.OnDestroy
void AudioHelm::SampleSequencer::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SampleSequencer::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.SampleSequencer.EnableComponent
void AudioHelm::SampleSequencer::EnableComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SampleSequencer::EnableComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.SampleSequencer.FixedUpdate
void AudioHelm::SampleSequencer::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SampleSequencer::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.SampleSequencer.Update
void AudioHelm::SampleSequencer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SampleSequencer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.SampleSequencer.DoUpdate
void AudioHelm::SampleSequencer::DoUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SampleSequencer::DoUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.SampleSequencer.OnEnable
void AudioHelm::SampleSequencer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SampleSequencer::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.SampleSequencer.OnDisable
void AudioHelm::SampleSequencer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SampleSequencer::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.SampleSequencer.AllNotesOff
void AudioHelm::SampleSequencer::AllNotesOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SampleSequencer::AllNotesOff");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.SampleSequencer.NoteOn
void AudioHelm::SampleSequencer::NoteOn(int note, float velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SampleSequencer::NoteOn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, velocity);
}
// Autogenerated method: AudioHelm.SampleSequencer.NoteOff
void AudioHelm::SampleSequencer::NoteOff(int note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SampleSequencer::NoteOff");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.SampleSequencer.StartOnNextCycle
void AudioHelm::SampleSequencer::StartOnNextCycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SampleSequencer::StartOnNextCycle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.Sampler
#include "AudioHelm/Sampler.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: AudioHelm.Sampler/AudioHelm.ActiveNote
#include "AudioHelm/Sampler_ActiveNote.hpp"
// Including type: AudioHelm.Sampler/AudioHelm.<TurnVoiceOffInSeconds>d__27
#include "AudioHelm/Sampler_-TurnVoiceOffInSeconds-d__27.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: AudioHelm.Keyzone
#include "AudioHelm/Keyzone.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Double endEarlyTime
double AudioHelm::Sampler::_get_endEarlyTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::_get_endEarlyTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("AudioHelm", "Sampler", "endEarlyTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Double endEarlyTime
void AudioHelm::Sampler::_set_endEarlyTime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::_set_endEarlyTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "Sampler", "endEarlyTime", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<AudioHelm.Keyzone> keyzones
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::AudioHelm::Keyzone*>*& AudioHelm::Sampler::dyn_keyzones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::dyn_keyzones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyzones"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::AudioHelm::Keyzone*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.Sampler/AudioHelm.KeyzonePlayMode keyzonePlayMode
[[deprecated("Use field access instead!")]] ::AudioHelm::Sampler::KeyzonePlayMode& AudioHelm::Sampler::dyn_keyzonePlayMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::dyn_keyzonePlayMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyzonePlayMode"))->offset;
  return *reinterpret_cast<::AudioHelm::Sampler::KeyzonePlayMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single velocityTracking
[[deprecated("Use field access instead!")]] float& AudioHelm::Sampler::dyn_velocityTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::dyn_velocityTracking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityTracking"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 numVoices
[[deprecated("Use field access instead!")]] int& AudioHelm::Sampler::dyn_numVoices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::dyn_numVoices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numVoices"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useNoteOff_
[[deprecated("Use field access instead!")]] bool& AudioHelm::Sampler::dyn_useNoteOff_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::dyn_useNoteOff_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useNoteOff_"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 audioIndex
[[deprecated("Use field access instead!")]] int& AudioHelm::Sampler::dyn_audioIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::dyn_audioIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<AudioHelm.Sampler/AudioHelm.ActiveNote> activeNotes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::AudioHelm::Sampler::ActiveNote*>*& AudioHelm::Sampler::dyn_activeNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::dyn_activeNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeNotes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::AudioHelm::Sampler::ActiveNote*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.Sampler.get_useNoteOff
bool AudioHelm::Sampler::get_useNoteOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::get_useNoteOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useNoteOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sampler.set_useNoteOff
void AudioHelm::Sampler::set_useNoteOff(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::set_useNoteOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useNoteOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.Sampler.Awake
void AudioHelm::Sampler::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sampler.OnDestroy
void AudioHelm::Sampler::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sampler.OnDisable
void AudioHelm::Sampler::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sampler.AddKeyzone
::AudioHelm::Keyzone* AudioHelm::Sampler::AddKeyzone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::AddKeyzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::AudioHelm::Keyzone*, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sampler.RemoveKeyzone
int AudioHelm::Sampler::RemoveKeyzone(::AudioHelm::Keyzone* keyzone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::RemoveKeyzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveKeyzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyzone)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, keyzone);
}
// Autogenerated method: AudioHelm.Sampler.GetNextAudioSource
::UnityEngine::AudioSource* AudioHelm::Sampler::GetNextAudioSource(::System::Collections::Generic::List_1<::UnityEngine::AudioSource*>* ignore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::GetNextAudioSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextAudioSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignore)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioSource*, false>(this, ___internal__method, ignore);
}
// Autogenerated method: AudioHelm.Sampler.PrepNote
void AudioHelm::Sampler::PrepNote(::UnityEngine::AudioSource* audioSource, int note, float velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::PrepNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioSource), ::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(velocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioSource, note, velocity);
}
// Autogenerated method: AudioHelm.Sampler.PrepNote
void AudioHelm::Sampler::PrepNote(::UnityEngine::AudioSource* audioSource, ::AudioHelm::Keyzone* keyzone, int note, float velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::PrepNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioSource), ::il2cpp_utils::ExtractType(keyzone), ::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(velocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioSource, keyzone, note, velocity);
}
// Autogenerated method: AudioHelm.Sampler.GetValidKeyzones
::System::Collections::Generic::List_1<::AudioHelm::Keyzone*>* AudioHelm::Sampler::GetValidKeyzones(int note, float velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::GetValidKeyzones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidKeyzones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(velocity)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::AudioHelm::Keyzone*>*, false>(this, ___internal__method, note, velocity);
}
// Autogenerated method: AudioHelm.Sampler.GetKeyzonesToPlay
::System::Collections::Generic::List_1<::AudioHelm::Keyzone*>* AudioHelm::Sampler::GetKeyzonesToPlay(::System::Collections::Generic::List_1<::AudioHelm::Keyzone*>* validKeyzones) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::GetKeyzonesToPlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKeyzonesToPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(validKeyzones)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::AudioHelm::Keyzone*>*, false>(this, ___internal__method, validKeyzones);
}
// Autogenerated method: AudioHelm.Sampler.GetPreppedAudioSources
::System::Collections::Generic::List_1<::UnityEngine::AudioSource*>* AudioHelm::Sampler::GetPreppedAudioSources(int note, float velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::GetPreppedAudioSources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreppedAudioSources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(velocity)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::AudioSource*>*, false>(this, ___internal__method, note, velocity);
}
// Autogenerated method: AudioHelm.Sampler.GetMinKey
int AudioHelm::Sampler::GetMinKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::GetMinKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMinKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sampler.GetMaxKey
int AudioHelm::Sampler::GetMaxKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::GetMaxKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaxKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sampler.AllNotesOff
void AudioHelm::Sampler::AllNotesOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::AllNotesOff");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sampler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sampler.TurnVoiceOffInSeconds
::System::Collections::IEnumerator* AudioHelm::Sampler::TurnVoiceOffInSeconds(int note, float seconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::TurnVoiceOffInSeconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TurnVoiceOffInSeconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(seconds)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, note, seconds);
}
// Autogenerated method: AudioHelm.Sampler.NoteOn
void AudioHelm::Sampler::NoteOn(int note, float velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::NoteOn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sampler*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, velocity);
}
// Autogenerated method: AudioHelm.Sampler.NoteOnScheduled
void AudioHelm::Sampler::NoteOnScheduled(int note, float velocity, double timeToStart, double timeToEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::NoteOnScheduled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteOnScheduled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(timeToStart), ::il2cpp_utils::ExtractType(timeToEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, velocity, timeToStart, timeToEnd);
}
// Autogenerated method: AudioHelm.Sampler.FindActiveNote
::AudioHelm::Sampler::ActiveNote* AudioHelm::Sampler::FindActiveNote(int note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::FindActiveNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindActiveNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note)})));
  return ::il2cpp_utils::RunMethodRethrow<::AudioHelm::Sampler::ActiveNote*, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.Sampler.NoteOff
void AudioHelm::Sampler::NoteOff(int note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::NoteOff");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sampler*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.Sampler.DoNoteOff
void AudioHelm::Sampler::DoNoteOff(int note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::DoNoteOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoNoteOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.Sampler/AudioHelm.KeyzonePlayMode
#include "AudioHelm/Sampler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AudioHelm.Sampler/AudioHelm.KeyzonePlayMode kAll
::AudioHelm::Sampler::KeyzonePlayMode AudioHelm::Sampler::KeyzonePlayMode::_get_kAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::KeyzonePlayMode::_get_kAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AudioHelm::Sampler::KeyzonePlayMode>("AudioHelm", "Sampler/KeyzonePlayMode", "kAll"));
}
// Autogenerated static field setter
// Set static field: static public AudioHelm.Sampler/AudioHelm.KeyzonePlayMode kAll
void AudioHelm::Sampler::KeyzonePlayMode::_set_kAll(::AudioHelm::Sampler::KeyzonePlayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::KeyzonePlayMode::_set_kAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "Sampler/KeyzonePlayMode", "kAll", value));
}
// Autogenerated static field getter
// Get static field: static public AudioHelm.Sampler/AudioHelm.KeyzonePlayMode kRoundRobin
::AudioHelm::Sampler::KeyzonePlayMode AudioHelm::Sampler::KeyzonePlayMode::_get_kRoundRobin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::KeyzonePlayMode::_get_kRoundRobin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AudioHelm::Sampler::KeyzonePlayMode>("AudioHelm", "Sampler/KeyzonePlayMode", "kRoundRobin"));
}
// Autogenerated static field setter
// Set static field: static public AudioHelm.Sampler/AudioHelm.KeyzonePlayMode kRoundRobin
void AudioHelm::Sampler::KeyzonePlayMode::_set_kRoundRobin(::AudioHelm::Sampler::KeyzonePlayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::KeyzonePlayMode::_set_kRoundRobin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "Sampler/KeyzonePlayMode", "kRoundRobin", value));
}
// Autogenerated static field getter
// Get static field: static public AudioHelm.Sampler/AudioHelm.KeyzonePlayMode kRandom
::AudioHelm::Sampler::KeyzonePlayMode AudioHelm::Sampler::KeyzonePlayMode::_get_kRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::KeyzonePlayMode::_get_kRandom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AudioHelm::Sampler::KeyzonePlayMode>("AudioHelm", "Sampler/KeyzonePlayMode", "kRandom"));
}
// Autogenerated static field setter
// Set static field: static public AudioHelm.Sampler/AudioHelm.KeyzonePlayMode kRandom
void AudioHelm::Sampler::KeyzonePlayMode::_set_kRandom(::AudioHelm::Sampler::KeyzonePlayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::KeyzonePlayMode::_set_kRandom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "Sampler/KeyzonePlayMode", "kRandom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& AudioHelm::Sampler::KeyzonePlayMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::KeyzonePlayMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.Sampler/AudioHelm.ActiveNote
#include "AudioHelm/Sampler_ActiveNote.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 note
[[deprecated("Use field access instead!")]] int& AudioHelm::Sampler::ActiveNote::dyn_note() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::ActiveNote::dyn_note");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "note"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.AudioSource> audioSources
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::AudioSource*>*& AudioHelm::Sampler::ActiveNote::dyn_audioSources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::ActiveNote::dyn_audioSources");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSources"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::AudioSource*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double startTime
[[deprecated("Use field access instead!")]] double& AudioHelm::Sampler::ActiveNote::dyn_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::ActiveNote::dyn_startTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AudioHelm.Sampler/AudioHelm.<TurnVoiceOffInSeconds>d__27
#include "AudioHelm/Sampler_-TurnVoiceOffInSeconds-d__27.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single seconds
[[deprecated("Use field access instead!")]] float& AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::dyn_seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::dyn_seconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.Sampler <>4__this
[[deprecated("Use field access instead!")]] ::AudioHelm::Sampler*& AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::AudioHelm::Sampler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 note
[[deprecated("Use field access instead!")]] int& AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::dyn_note() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::dyn_note");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "note"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.Sampler/AudioHelm.<TurnVoiceOffInSeconds>d__27.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sampler/AudioHelm.<TurnVoiceOffInSeconds>d__27.System.Collections.IEnumerator.get_Current
::Il2CppObject* AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sampler/AudioHelm.<TurnVoiceOffInSeconds>d__27.System.IDisposable.Dispose
void AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sampler/AudioHelm.<TurnVoiceOffInSeconds>d__27.MoveNext
bool AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sampler/AudioHelm.<TurnVoiceOffInSeconds>d__27.System.Collections.IEnumerator.Reset
void AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sampler::$TurnVoiceOffInSeconds$d__27*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.Sequencer
#include "AudioHelm/Sequencer.hpp"
// Including type: AudioHelm.Sequencer/AudioHelm.NoteAction
#include "AudioHelm/Sequencer_NoteAction.hpp"
// Including type: AudioHelm.Sequencer/AudioHelm.BeatAction
#include "AudioHelm/Sequencer_BeatAction.hpp"
// Including type: AudioHelm.Sequencer/AudioHelm.NoteEvent
#include "AudioHelm/Sequencer_NoteEvent.hpp"
// Including type: AudioHelm.Sequencer/AudioHelm.BeatEvent
#include "AudioHelm/Sequencer_BeatEvent.hpp"
// Including type: AudioHelm.Sequencer/AudioHelm.NoteComparer
#include "AudioHelm/Sequencer_NoteComparer.hpp"
// Including type: AudioHelm.Sequencer/AudioHelm.NotePositionComparer
#include "AudioHelm/Sequencer_NotePositionComparer.hpp"
// Including type: System.Collections.Generic.SortedList`2
#include "System/Collections/Generic/SortedList_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: AudioHelm.Note
#include "AudioHelm/Note.hpp"
// Including type: AudioHelm.NoteRow
#include "AudioHelm/NoteRow.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: AudioHelm.MidiFile/AudioHelm.MidiData
#include "AudioHelm/MidiFile_MidiData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private AudioHelm.Sequencer/AudioHelm.NoteComparer noteComparer
::AudioHelm::Sequencer::NoteComparer* AudioHelm::Sequencer::_get_noteComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::_get_noteComparer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AudioHelm::Sequencer::NoteComparer*>("AudioHelm", "Sequencer", "noteComparer"));
}
// Autogenerated static field setter
// Set static field: static private AudioHelm.Sequencer/AudioHelm.NoteComparer noteComparer
void AudioHelm::Sequencer::_set_noteComparer(::AudioHelm::Sequencer::NoteComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::_set_noteComparer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "Sequencer", "noteComparer", value));
}
// Autogenerated static field getter
// Get static field: static private AudioHelm.Sequencer/AudioHelm.NotePositionComparer notePositionComparer
::AudioHelm::Sequencer::NotePositionComparer* AudioHelm::Sequencer::_get_notePositionComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::_get_notePositionComparer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AudioHelm::Sequencer::NotePositionComparer*>("AudioHelm", "Sequencer", "notePositionComparer"));
}
// Autogenerated static field setter
// Set static field: static private AudioHelm.Sequencer/AudioHelm.NotePositionComparer notePositionComparer
void AudioHelm::Sequencer::_set_notePositionComparer(::AudioHelm::Sequencer::NotePositionComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::_set_notePositionComparer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AudioHelm", "Sequencer", "notePositionComparer", value));
}
// Autogenerated instance field getter
// Get instance field: private AudioHelm.Sequencer/AudioHelm.NoteAction OnNoteOn
[[deprecated("Use field access instead!")]] ::AudioHelm::Sequencer::NoteAction*& AudioHelm::Sequencer::dyn_OnNoteOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_OnNoteOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnNoteOn"))->offset;
  return *reinterpret_cast<::AudioHelm::Sequencer::NoteAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioHelm.Sequencer/AudioHelm.NoteAction OnNoteOff
[[deprecated("Use field access instead!")]] ::AudioHelm::Sequencer::NoteAction*& AudioHelm::Sequencer::dyn_OnNoteOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_OnNoteOff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnNoteOff"))->offset;
  return *reinterpret_cast<::AudioHelm::Sequencer::NoteAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioHelm.Sequencer/AudioHelm.BeatAction OnBeat
[[deprecated("Use field access instead!")]] ::AudioHelm::Sequencer::BeatAction*& AudioHelm::Sequencer::dyn_OnBeat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_OnBeat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnBeat"))->offset;
  return *reinterpret_cast<::AudioHelm::Sequencer::BeatAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.Sequencer/AudioHelm.NoteEvent noteOnEvent
[[deprecated("Use field access instead!")]] ::AudioHelm::Sequencer::NoteEvent*& AudioHelm::Sequencer::dyn_noteOnEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_noteOnEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteOnEvent"))->offset;
  return *reinterpret_cast<::AudioHelm::Sequencer::NoteEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.Sequencer/AudioHelm.NoteEvent noteOffEvent
[[deprecated("Use field access instead!")]] ::AudioHelm::Sequencer::NoteEvent*& AudioHelm::Sequencer::dyn_noteOffEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_noteOffEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteOffEvent"))->offset;
  return *reinterpret_cast<::AudioHelm::Sequencer::NoteEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.Sequencer/AudioHelm.BeatEvent beatEvent
[[deprecated("Use field access instead!")]] ::AudioHelm::Sequencer::BeatEvent*& AudioHelm::Sequencer::dyn_beatEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_beatEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatEvent"))->offset;
  return *reinterpret_cast<::AudioHelm::Sequencer::BeatEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<AudioHelm.Note> activeNotes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::AudioHelm::Note*>*& AudioHelm::Sequencer::dyn_activeNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_activeNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeNotes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::AudioHelm::Note*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 length
[[deprecated("Use field access instead!")]] int& AudioHelm::Sequencer::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentIndex
[[deprecated("Use field access instead!")]] int& AudioHelm::Sequencer::dyn_currentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_currentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean loop
[[deprecated("Use field access instead!")]] bool& AudioHelm::Sequencer::dyn_loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_loop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loop"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Double beatTime
[[deprecated("Use field access instead!")]] double& AudioHelm::Sequencer::dyn_beatTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_beatTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean paused
[[deprecated("Use field access instead!")]] bool& AudioHelm::Sequencer::dyn_paused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_paused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "paused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.NoteRow[] allNotes
[[deprecated("Use field access instead!")]] ::ArrayW<::AudioHelm::NoteRow*>& AudioHelm::Sequencer::dyn_allNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_allNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allNotes"))->offset;
  return *reinterpret_cast<::ArrayW<::AudioHelm::NoteRow*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 scrollPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& AudioHelm::Sequencer::dyn_scrollPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_scrollPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scrollPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoScroll
[[deprecated("Use field access instead!")]] bool& AudioHelm::Sequencer::dyn_autoScroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_autoScroll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoScroll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioHelm.Sequencer/AudioHelm.Division division
[[deprecated("Use field access instead!")]] ::AudioHelm::Sequencer::Division& AudioHelm::Sequencer::dyn_division() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_division");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "division"))->offset;
  return *reinterpret_cast<::AudioHelm::Sequencer::Division*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single zoom
[[deprecated("Use field access instead!")]] float& AudioHelm::Sequencer::dyn_zoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_zoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zoom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.SortedList`2<AudioHelm.Sequencer/AudioHelm.NotePosition,AudioHelm.Note> sortedNoteOns
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::SortedList_2<::AudioHelm::Sequencer::NotePosition, ::AudioHelm::Note*>*& AudioHelm::Sequencer::dyn_sortedNoteOns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_sortedNoteOns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortedNoteOns"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::SortedList_2<::AudioHelm::Sequencer::NotePosition, ::AudioHelm::Note*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.SortedList`2<AudioHelm.Sequencer/AudioHelm.NotePosition,AudioHelm.Note> sortedNoteOffs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::SortedList_2<::AudioHelm::Sequencer::NotePosition, ::AudioHelm::Note*>*& AudioHelm::Sequencer::dyn_sortedNoteOffs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_sortedNoteOffs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortedNoteOffs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::SortedList_2<::AudioHelm::Sequencer::NotePosition, ::AudioHelm::Note*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastSequencerPosition
[[deprecated("Use field access instead!")]] float& AudioHelm::Sequencer::dyn_lastSequencerPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_lastSequencerPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastSequencerPosition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean waitTillNextCycle
[[deprecated("Use field access instead!")]] bool& AudioHelm::Sequencer::dyn_waitTillNextCycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_waitTillNextCycle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitTillNextCycle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 numCycles
[[deprecated("Use field access instead!")]] int& AudioHelm::Sequencer::dyn_numCycles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::dyn_numCycles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numCycles"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioHelm.Sequencer.add_OnNoteOn
void AudioHelm::Sequencer::add_OnNoteOn(::AudioHelm::Sequencer::NoteAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::add_OnNoteOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnNoteOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.Sequencer.remove_OnNoteOn
void AudioHelm::Sequencer::remove_OnNoteOn(::AudioHelm::Sequencer::NoteAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::remove_OnNoteOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnNoteOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.Sequencer.add_OnNoteOff
void AudioHelm::Sequencer::add_OnNoteOff(::AudioHelm::Sequencer::NoteAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::add_OnNoteOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnNoteOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.Sequencer.remove_OnNoteOff
void AudioHelm::Sequencer::remove_OnNoteOff(::AudioHelm::Sequencer::NoteAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::remove_OnNoteOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnNoteOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.Sequencer.add_OnBeat
void AudioHelm::Sequencer::add_OnBeat(::AudioHelm::Sequencer::BeatAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::add_OnBeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnBeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.Sequencer.remove_OnBeat
void AudioHelm::Sequencer::remove_OnBeat(::AudioHelm::Sequencer::BeatAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::remove_OnBeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnBeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioHelm.Sequencer..cctor
void AudioHelm::Sequencer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AudioHelm", "Sequencer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AudioHelm.Sequencer.AllNotesOff
void AudioHelm::Sequencer::AllNotesOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::AllNotesOff");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sequencer.NoteOn
void AudioHelm::Sequencer::NoteOn(int note, float velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::NoteOn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, velocity);
}
// Autogenerated method: AudioHelm.Sequencer.NoteOff
void AudioHelm::Sequencer::NoteOff(int note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::NoteOff");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.Sequencer.StartScheduled
void AudioHelm::Sequencer::StartScheduled(double dspTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::StartScheduled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartScheduled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dspTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dspTime);
}
// Autogenerated method: AudioHelm.Sequencer.StartOnNextCycle
void AudioHelm::Sequencer::StartOnNextCycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::StartOnNextCycle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sequencer.OnBeforeSerialize
void AudioHelm::Sequencer::OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sequencer.OnAfterDeserialize
void AudioHelm::Sequencer::OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sequencer.OnEnable
void AudioHelm::Sequencer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sequencer.OnDisable
void AudioHelm::Sequencer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sequencer.WaitForNextCycle
void AudioHelm::Sequencer::WaitForNextCycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::WaitForNextCycle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForNextCycle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sequencer.WaitingForNextCycle
bool AudioHelm::Sequencer::WaitingForNextCycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::WaitingForNextCycle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitingForNextCycle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sequencer.NoteOnPosition
::AudioHelm::Sequencer::NotePosition AudioHelm::Sequencer::NoteOnPosition(::AudioHelm::Note* note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::NoteOnPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteOnPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note)})));
  return ::il2cpp_utils::RunMethodRethrow<::AudioHelm::Sequencer::NotePosition, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.Sequencer.NoteOffPosition
::AudioHelm::Sequencer::NotePosition AudioHelm::Sequencer::NoteOffPosition(::AudioHelm::Note* note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::NoteOffPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteOffPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note)})));
  return ::il2cpp_utils::RunMethodRethrow<::AudioHelm::Sequencer::NotePosition, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.Sequencer.RemoveSortedNoteEvents
void AudioHelm::Sequencer::RemoveSortedNoteEvents(::AudioHelm::Note* note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::RemoveSortedNoteEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSortedNoteEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.Sequencer.AddSortedNoteEvents
void AudioHelm::Sequencer::AddSortedNoteEvents(::AudioHelm::Note* note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::AddSortedNoteEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSortedNoteEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.Sequencer.Reference
::System::IntPtr AudioHelm::Sequencer::Reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::Reference");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sequencer.InitNoteRows
void AudioHelm::Sequencer::InitNoteRows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::InitNoteRows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitNoteRows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sequencer.GetDivisionLength
float AudioHelm::Sequencer::GetDivisionLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::GetDivisionLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDivisionLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sequencer.NotifyNoteKeyChanged
void AudioHelm::Sequencer::NotifyNoteKeyChanged(::AudioHelm::Note* note, int oldKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::NotifyNoteKeyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyNoteKeyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(oldKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, oldKey);
}
// Autogenerated method: AudioHelm.Sequencer.NotifyNoteStartChanged
void AudioHelm::Sequencer::NotifyNoteStartChanged(::AudioHelm::Note* note, float oldStart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::NotifyNoteStartChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyNoteStartChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(oldStart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, oldStart);
}
// Autogenerated method: AudioHelm.Sequencer.NotifyNoteEndChanged
void AudioHelm::Sequencer::NotifyNoteEndChanged(::AudioHelm::Note* note, float oldEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::NotifyNoteEndChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyNoteEndChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(oldEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, oldEnd);
}
// Autogenerated method: AudioHelm.Sequencer.RemoveNote
void AudioHelm::Sequencer::RemoveNote(::AudioHelm::Note* note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::RemoveNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.Sequencer.NoteExistsInRange
bool AudioHelm::Sequencer::NoteExistsInRange(int note, float start, float end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::NoteExistsInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteExistsInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, note, start, end);
}
// Autogenerated method: AudioHelm.Sequencer.GetNoteInRange
::AudioHelm::Note* AudioHelm::Sequencer::GetNoteInRange(int note, float start, float end, ::AudioHelm::Note* ignore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::GetNoteInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNoteInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(ignore)})));
  return ::il2cpp_utils::RunMethodRethrow<::AudioHelm::Note*, false>(this, ___internal__method, note, start, end, ignore);
}
// Autogenerated method: AudioHelm.Sequencer.GetAllNotes
::System::Collections::Generic::List_1<::AudioHelm::Note*>* AudioHelm::Sequencer::GetAllNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::GetAllNotes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllNotes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::AudioHelm::Note*>*, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sequencer.GetAllNoteOnsInRange
::System::Collections::Generic::List_1<::AudioHelm::Note*>* AudioHelm::Sequencer::GetAllNoteOnsInRange(float start, float end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::GetAllNoteOnsInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllNoteOnsInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::AudioHelm::Note*>*, false>(this, ___internal__method, start, end);
}
// Autogenerated method: AudioHelm.Sequencer.GetAllNoteOffsInRange
::System::Collections::Generic::List_1<::AudioHelm::Note*>* AudioHelm::Sequencer::GetAllNoteOffsInRange(float start, float end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::GetAllNoteOffsInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllNoteOffsInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::AudioHelm::Note*>*, false>(this, ___internal__method, start, end);
}
// Autogenerated method: AudioHelm.Sequencer.RemoveNotesInRange
void AudioHelm::Sequencer::RemoveNotesInRange(int note, float start, float end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::RemoveNotesInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveNotesInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, start, end);
}
// Autogenerated method: AudioHelm.Sequencer.RemoveNotesContainedInRange
void AudioHelm::Sequencer::RemoveNotesContainedInRange(int note, float start, float end, ::AudioHelm::Note* ignore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::RemoveNotesContainedInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveNotesContainedInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(ignore)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, start, end, ignore);
}
// Autogenerated method: AudioHelm.Sequencer.ClampNotesInRange
void AudioHelm::Sequencer::ClampNotesInRange(int note, float start, float end, ::AudioHelm::Note* ignore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::ClampNotesInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClampNotesInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(ignore)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, start, end, ignore);
}
// Autogenerated method: AudioHelm.Sequencer.AddNote
::AudioHelm::Note* AudioHelm::Sequencer::AddNote(int note, float start, float end, float velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::AddNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(velocity)})));
  return ::il2cpp_utils::RunMethodRethrow<::AudioHelm::Note*, false>(this, ___internal__method, note, start, end, velocity);
}
// Autogenerated method: AudioHelm.Sequencer.TransposeNotes
void AudioHelm::Sequencer::TransposeNotes(int transpose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::TransposeNotes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransposeNotes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transpose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transpose);
}
// Autogenerated method: AudioHelm.Sequencer.ReadMidiData
void AudioHelm::Sequencer::ReadMidiData(::AudioHelm::MidiFile::MidiData* midiData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::ReadMidiData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadMidiData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(midiData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, midiData);
}
// Autogenerated method: AudioHelm.Sequencer.ReadMidiFile
void AudioHelm::Sequencer::ReadMidiFile(::System::IO::Stream* midiStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::ReadMidiFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadMidiFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(midiStream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, midiStream);
}
// Autogenerated method: AudioHelm.Sequencer.ReadMidiFile
void AudioHelm::Sequencer::ReadMidiFile(::AudioHelm::MidiFile* midiFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::ReadMidiFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadMidiFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(midiFile)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, midiFile);
}
// Autogenerated method: AudioHelm.Sequencer.Clear
void AudioHelm::Sequencer::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sequencer.GetSixteenthTime
float AudioHelm::Sequencer::GetSixteenthTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::GetSixteenthTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSixteenthTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sequencer.GetSequencerTime
double AudioHelm::Sequencer::GetSequencerTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::GetSequencerTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSequencerTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sequencer.GetSequencerPosition
double AudioHelm::Sequencer::GetSequencerPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::GetSequencerPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSequencerPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sequencer.GetAllNoteEventsInRange
::System::Collections::Generic::List_1<::AudioHelm::Note*>* AudioHelm::Sequencer::GetAllNoteEventsInRange(float start, float end, ::System::Collections::Generic::SortedList_2<::AudioHelm::Sequencer::NotePosition, ::AudioHelm::Note*>* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::GetAllNoteEventsInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllNoteEventsInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::AudioHelm::Note*>*, false>(this, ___internal__method, start, end, events);
}
// Autogenerated method: AudioHelm.Sequencer.UpdateIndex
void AudioHelm::Sequencer::UpdateIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::UpdateIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sequencer.UpdateBeatTime
void AudioHelm::Sequencer::UpdateBeatTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::UpdateBeatTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBeatTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioHelm.Sequencer.SendNoteOff
void AudioHelm::Sequencer::SendNoteOff(::AudioHelm::Note* note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::SendNoteOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendNoteOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.Sequencer.SendNoteOn
void AudioHelm::Sequencer::SendNoteOn(::AudioHelm::Note* note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::SendNoteOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendNoteOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.Sequencer.UpdatePosition
void AudioHelm::Sequencer::UpdatePosition(bool sendEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::UpdatePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sendEvents)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sendEvents);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AudioHelm.Sequencer/AudioHelm.NoteAction
#include "AudioHelm/Sequencer_NoteAction.hpp"
// Including type: AudioHelm.Note
#include "AudioHelm/Note.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AudioHelm.Sequencer/AudioHelm.NoteAction.Invoke
void AudioHelm::Sequencer::NoteAction::Invoke(::AudioHelm::Note* note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::NoteAction::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer::NoteAction*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note);
}
// Autogenerated method: AudioHelm.Sequencer/AudioHelm.NoteAction.BeginInvoke
::System::IAsyncResult* AudioHelm::Sequencer::NoteAction::BeginInvoke(::AudioHelm::Note* note, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::NoteAction::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer::NoteAction*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, note, callback, object);
}
// Autogenerated method: AudioHelm.Sequencer/AudioHelm.NoteAction.EndInvoke
void AudioHelm::Sequencer::NoteAction::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::NoteAction::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer::NoteAction*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AudioHelm.Sequencer/AudioHelm.BeatAction
#include "AudioHelm/Sequencer_BeatAction.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AudioHelm.Sequencer/AudioHelm.BeatAction.Invoke
void AudioHelm::Sequencer::BeatAction::Invoke(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::BeatAction::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer::BeatAction*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: AudioHelm.Sequencer/AudioHelm.BeatAction.BeginInvoke
::System::IAsyncResult* AudioHelm::Sequencer::BeatAction::BeginInvoke(int index, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::BeatAction::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer::BeatAction*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, index, callback, object);
}
// Autogenerated method: AudioHelm.Sequencer/AudioHelm.BeatAction.EndInvoke
void AudioHelm::Sequencer::BeatAction::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::BeatAction::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer::BeatAction*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.Sequencer/AudioHelm.NoteEvent
#include "AudioHelm/Sequencer_NoteEvent.hpp"
// Including type: AudioHelm.Note
#include "AudioHelm/Note.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.Sequencer/AudioHelm.BeatEvent
#include "AudioHelm/Sequencer_BeatEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.Sequencer/AudioHelm.NoteComparer
#include "AudioHelm/Sequencer_NoteComparer.hpp"
// Including type: AudioHelm.Note
#include "AudioHelm/Note.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AudioHelm.Sequencer/AudioHelm.NoteComparer.Compare
int AudioHelm::Sequencer::NoteComparer::Compare(::AudioHelm::Note* left, ::AudioHelm::Note* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::NoteComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer::NoteComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, left, right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelm.Sequencer/AudioHelm.NotePositionComparer
#include "AudioHelm/Sequencer_NotePositionComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AudioHelm.Sequencer/AudioHelm.NotePositionComparer.Compare
int AudioHelm::Sequencer::NotePositionComparer::Compare(::AudioHelm::Sequencer::NotePosition left, ::AudioHelm::Sequencer::NotePosition right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::Sequencer::NotePositionComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AudioHelm::Sequencer::NotePositionComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, left, right);
}
