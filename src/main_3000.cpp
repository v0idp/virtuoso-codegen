// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanParse/System.Globalization.TTT
#include "System/Globalization/TimeSpanParse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/System.Globalization.TTT None
::System::Globalization::TimeSpanParse::TTT System::Globalization::TimeSpanParse::TTT::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::TTT>("System.Globalization", "TimeSpanParse/TTT", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/System.Globalization.TTT None
void System::Globalization::TimeSpanParse::TTT::_set_None(::System::Globalization::TimeSpanParse::TTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/TTT", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/System.Globalization.TTT End
::System::Globalization::TimeSpanParse::TTT System::Globalization::TimeSpanParse::TTT::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::TTT>("System.Globalization", "TimeSpanParse/TTT", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/System.Globalization.TTT End
void System::Globalization::TimeSpanParse::TTT::_set_End(::System::Globalization::TimeSpanParse::TTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/TTT", "End", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/System.Globalization.TTT Num
::System::Globalization::TimeSpanParse::TTT System::Globalization::TimeSpanParse::TTT::_get_Num() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_get_Num");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::TTT>("System.Globalization", "TimeSpanParse/TTT", "Num"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/System.Globalization.TTT Num
void System::Globalization::TimeSpanParse::TTT::_set_Num(::System::Globalization::TimeSpanParse::TTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_set_Num");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/TTT", "Num", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/System.Globalization.TTT Sep
::System::Globalization::TimeSpanParse::TTT System::Globalization::TimeSpanParse::TTT::_get_Sep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_get_Sep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::TTT>("System.Globalization", "TimeSpanParse/TTT", "Sep"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/System.Globalization.TTT Sep
void System::Globalization::TimeSpanParse::TTT::_set_Sep(::System::Globalization::TimeSpanParse::TTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_set_Sep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/TTT", "Sep", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/System.Globalization.TTT NumOverflow
::System::Globalization::TimeSpanParse::TTT System::Globalization::TimeSpanParse::TTT::_get_NumOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_get_NumOverflow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::TTT>("System.Globalization", "TimeSpanParse/TTT", "NumOverflow"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/System.Globalization.TTT NumOverflow
void System::Globalization::TimeSpanParse::TTT::_set_NumOverflow(::System::Globalization::TimeSpanParse::TTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_set_NumOverflow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/TTT", "NumOverflow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Globalization::TimeSpanParse::TTT::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanToken
#include "System/Globalization/TimeSpanParse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Globalization.TimeSpanParse/System.Globalization.TTT ttt
[[deprecated]] ::System::Globalization::TimeSpanParse::TTT& System::Globalization::TimeSpanParse::TimeSpanToken::dyn_ttt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanToken::dyn_ttt");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ttt"))->offset;
  return *reinterpret_cast<::System::Globalization::TimeSpanParse::TTT*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 num
[[deprecated]] int& System::Globalization::TimeSpanParse::TimeSpanToken::dyn_num() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanToken::dyn_num");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "num"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 zeroes
[[deprecated]] int& System::Globalization::TimeSpanParse::TimeSpanToken::dyn_zeroes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanToken::dyn_zeroes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zeroes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String sep
[[deprecated]] ::StringW& System::Globalization::TimeSpanParse::TimeSpanToken::dyn_sep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanToken::dyn_sep");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sep"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanToken..ctor
System::Globalization::TimeSpanParse::TimeSpanToken::TimeSpanToken(int number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanToken::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, number);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanToken.IsInvalidNumber
bool System::Globalization::TimeSpanParse::TimeSpanToken::IsInvalidNumber(int maxValue, int maxPrecision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanToken::IsInvalidNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsInvalidNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxValue), ::il2cpp_utils::ExtractType(maxPrecision)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, maxValue, maxPrecision);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanTokenizer
#include "System/Globalization/TimeSpanParse_TimeSpanTokenizer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_pos
[[deprecated]] int& System::Globalization::TimeSpanParse::TimeSpanTokenizer::dyn_m_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanTokenizer::dyn_m_pos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_value
[[deprecated]] ::StringW& System::Globalization::TimeSpanParse::TimeSpanTokenizer::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanTokenizer::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanTokenizer.get_EOL
bool System::Globalization::TimeSpanParse::TimeSpanTokenizer::get_EOL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanTokenizer::get_EOL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_EOL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanTokenizer.get_NextChar
::Il2CppChar System::Globalization::TimeSpanParse::TimeSpanTokenizer::get_NextChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanTokenizer::get_NextChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NextChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanTokenizer.get_CurrentChar
::Il2CppChar System::Globalization::TimeSpanParse::TimeSpanTokenizer::get_CurrentChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanTokenizer::get_CurrentChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CurrentChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanTokenizer.Init
void System::Globalization::TimeSpanParse::TimeSpanTokenizer::Init(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanTokenizer::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanTokenizer.Init
void System::Globalization::TimeSpanParse::TimeSpanTokenizer::Init(::StringW input, int startPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanTokenizer::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(startPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, startPosition);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanTokenizer.GetNextToken
::System::Globalization::TimeSpanParse::TimeSpanToken System::Globalization::TimeSpanParse::TimeSpanTokenizer::GetNextToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanTokenizer::GetNextToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetNextToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TimeSpanParse::TimeSpanToken, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanRawInfo
#include "System/Globalization/TimeSpanParse_TimeSpanRawInfo.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanResult
#include "System/Globalization/TimeSpanParse_TimeSpanResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Globalization.TimeSpanParse/System.Globalization.TTT lastSeenTTT
[[deprecated]] ::System::Globalization::TimeSpanParse::TTT& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_lastSeenTTT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_lastSeenTTT");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastSeenTTT"))->offset;
  return *reinterpret_cast<::System::Globalization::TimeSpanParse::TTT*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 tokenCount
[[deprecated]] int& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_tokenCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_tokenCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokenCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 SepCount
[[deprecated]] int& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_SepCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_SepCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SepCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 NumCount
[[deprecated]] int& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_NumCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_NumCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] literals
[[deprecated]] ::ArrayW<::StringW>& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_literals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_literals");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "literals"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanToken[] numbers
[[deprecated]] ::ArrayW<::System::Globalization::TimeSpanParse::TimeSpanToken>& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_numbers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_numbers");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numbers"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Globalization::TimeSpanParse::TimeSpanToken>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.TimeSpanFormat/System.Globalization.FormatLiterals m_posLoc
[[deprecated]] ::System::Globalization::TimeSpanFormat::FormatLiterals& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_m_posLoc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_m_posLoc");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_posLoc"))->offset;
  return *reinterpret_cast<::System::Globalization::TimeSpanFormat::FormatLiterals*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.TimeSpanFormat/System.Globalization.FormatLiterals m_negLoc
[[deprecated]] ::System::Globalization::TimeSpanFormat::FormatLiterals& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_m_negLoc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_m_negLoc");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_negLoc"))->offset;
  return *reinterpret_cast<::System::Globalization::TimeSpanFormat::FormatLiterals*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_posLocInit
[[deprecated]] bool& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_m_posLocInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_m_posLocInit");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_posLocInit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_negLocInit
[[deprecated]] bool& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_m_negLocInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_m_negLocInit");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_negLocInit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_fullPosPattern
[[deprecated]] ::StringW& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_m_fullPosPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_m_fullPosPattern");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fullPosPattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_fullNegPattern
[[deprecated]] ::StringW& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_m_fullNegPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn_m_fullNegPattern");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fullNegPattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanRawInfo.get_PositiveInvariant
::System::Globalization::TimeSpanFormat::FormatLiterals System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_PositiveInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_PositiveInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_PositiveInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TimeSpanFormat::FormatLiterals, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanRawInfo.get_NegativeInvariant
::System::Globalization::TimeSpanFormat::FormatLiterals System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_NegativeInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_NegativeInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NegativeInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TimeSpanFormat::FormatLiterals, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanRawInfo.get_PositiveLocalized
::System::Globalization::TimeSpanFormat::FormatLiterals System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_PositiveLocalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_PositiveLocalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_PositiveLocalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TimeSpanFormat::FormatLiterals, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanRawInfo.get_NegativeLocalized
::System::Globalization::TimeSpanFormat::FormatLiterals System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_NegativeLocalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_NegativeLocalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NegativeLocalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TimeSpanFormat::FormatLiterals, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanRawInfo.FullAppCompatMatch
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullAppCompatMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullAppCompatMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FullAppCompatMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanRawInfo.PartialAppCompatMatch
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::PartialAppCompatMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::PartialAppCompatMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PartialAppCompatMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanRawInfo.FullMatch
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FullMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanRawInfo.FullDMatch
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullDMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullDMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FullDMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanRawInfo.FullHMMatch
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullHMMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullHMMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FullHMMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanRawInfo.FullDHMMatch
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullDHMMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullDHMMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FullDHMMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanRawInfo.FullHMSMatch
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullHMSMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullHMSMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FullHMSMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanRawInfo.FullDHMSMatch
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullDHMSMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullDHMSMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FullDHMSMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanRawInfo.FullHMSFMatch
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullHMSFMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullHMSFMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FullHMSFMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanRawInfo.Init
void System::Globalization::TimeSpanParse::TimeSpanRawInfo::Init(::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dtfi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dtfi);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanRawInfo.ProcessToken
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::ProcessToken(ByRef<::System::Globalization::TimeSpanParse::TimeSpanToken> tok, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::ProcessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ProcessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tok), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(tok), byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanRawInfo.AddSep
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::AddSep(::StringW sep, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::AddSep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddSep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sep), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sep, byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanRawInfo.AddNum
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::AddNum(::System::Globalization::TimeSpanParse::TimeSpanToken num, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::AddNum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddNum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(num), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, num, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanResult
#include "System/Globalization/TimeSpanParse_TimeSpanResult.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.TimeSpan parsedTimeSpan
[[deprecated]] ::System::TimeSpan& System::Globalization::TimeSpanParse::TimeSpanResult::dyn_parsedTimeSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanResult::dyn_parsedTimeSpan");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parsedTimeSpan"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanThrowStyle throwStyle
[[deprecated]] ::System::Globalization::TimeSpanParse::TimeSpanThrowStyle& System::Globalization::TimeSpanParse::TimeSpanResult::dyn_throwStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanResult::dyn_throwStyle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "throwStyle"))->offset;
  return *reinterpret_cast<::System::Globalization::TimeSpanParse::TimeSpanThrowStyle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.TimeSpanParse/System.Globalization.ParseFailureKind m_failure
[[deprecated]] ::System::Globalization::TimeSpanParse::ParseFailureKind& System::Globalization::TimeSpanParse::TimeSpanResult::dyn_m_failure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanResult::dyn_m_failure");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_failure"))->offset;
  return *reinterpret_cast<::System::Globalization::TimeSpanParse::ParseFailureKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_failureMessageID
[[deprecated]] ::StringW& System::Globalization::TimeSpanParse::TimeSpanResult::dyn_m_failureMessageID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanResult::dyn_m_failureMessageID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_failureMessageID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object m_failureMessageFormatArgument
[[deprecated]] ::Il2CppObject*& System::Globalization::TimeSpanParse::TimeSpanResult::dyn_m_failureMessageFormatArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanResult::dyn_m_failureMessageFormatArgument");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_failureMessageFormatArgument"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_failureArgumentName
[[deprecated]] ::StringW& System::Globalization::TimeSpanParse::TimeSpanResult::dyn_m_failureArgumentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanResult::dyn_m_failureArgumentName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_failureArgumentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanResult.Init
void System::Globalization::TimeSpanParse::TimeSpanResult::Init(::System::Globalization::TimeSpanParse::TimeSpanThrowStyle canThrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanResult::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canThrow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canThrow);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanResult.SetFailure
void System::Globalization::TimeSpanParse::TimeSpanResult::SetFailure(::System::Globalization::TimeSpanParse::ParseFailureKind failure, ::StringW failureMessageID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failure), ::il2cpp_utils::ExtractType(failureMessageID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, failure, failureMessageID);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanResult.SetFailure
void System::Globalization::TimeSpanParse::TimeSpanResult::SetFailure(::System::Globalization::TimeSpanParse::ParseFailureKind failure, ::StringW failureMessageID, ::Il2CppObject* failureMessageFormatArgument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failure), ::il2cpp_utils::ExtractType(failureMessageID), ::il2cpp_utils::ExtractType(failureMessageFormatArgument)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, failure, failureMessageID, failureMessageFormatArgument);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanResult.SetFailure
void System::Globalization::TimeSpanParse::TimeSpanResult::SetFailure(::System::Globalization::TimeSpanParse::ParseFailureKind failure, ::StringW failureMessageID, ::Il2CppObject* failureMessageFormatArgument, ::StringW failureArgumentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failure), ::il2cpp_utils::ExtractType(failureMessageID), ::il2cpp_utils::ExtractType(failureMessageFormatArgument), ::il2cpp_utils::ExtractType(failureArgumentName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, failure, failureMessageID, failureMessageFormatArgument, failureArgumentName);
}
// Autogenerated method: System.Globalization.TimeSpanParse/System.Globalization.TimeSpanResult.GetTimeSpanParseException
::System::Exception* System::Globalization::TimeSpanParse::TimeSpanResult::GetTimeSpanParseException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanResult::GetTimeSpanParseException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTimeSpanParseException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.UnicodeCategory
#include "System/Globalization/UnicodeCategory.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory UppercaseLetter
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_UppercaseLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_UppercaseLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "UppercaseLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory UppercaseLetter
void System::Globalization::UnicodeCategory::_set_UppercaseLetter(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_UppercaseLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "UppercaseLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory LowercaseLetter
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_LowercaseLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_LowercaseLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "LowercaseLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory LowercaseLetter
void System::Globalization::UnicodeCategory::_set_LowercaseLetter(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_LowercaseLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "LowercaseLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory TitlecaseLetter
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_TitlecaseLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_TitlecaseLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "TitlecaseLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory TitlecaseLetter
void System::Globalization::UnicodeCategory::_set_TitlecaseLetter(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_TitlecaseLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "TitlecaseLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ModifierLetter
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ModifierLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_ModifierLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ModifierLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ModifierLetter
void System::Globalization::UnicodeCategory::_set_ModifierLetter(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_ModifierLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ModifierLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherLetter
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_OtherLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherLetter
void System::Globalization::UnicodeCategory::_set_OtherLetter(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_OtherLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory NonSpacingMark
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_NonSpacingMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_NonSpacingMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "NonSpacingMark"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory NonSpacingMark
void System::Globalization::UnicodeCategory::_set_NonSpacingMark(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_NonSpacingMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "NonSpacingMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory SpacingCombiningMark
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_SpacingCombiningMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_SpacingCombiningMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "SpacingCombiningMark"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory SpacingCombiningMark
void System::Globalization::UnicodeCategory::_set_SpacingCombiningMark(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_SpacingCombiningMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "SpacingCombiningMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory EnclosingMark
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_EnclosingMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_EnclosingMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "EnclosingMark"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory EnclosingMark
void System::Globalization::UnicodeCategory::_set_EnclosingMark(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_EnclosingMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "EnclosingMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory DecimalDigitNumber
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_DecimalDigitNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_DecimalDigitNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "DecimalDigitNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory DecimalDigitNumber
void System::Globalization::UnicodeCategory::_set_DecimalDigitNumber(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_DecimalDigitNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "DecimalDigitNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory LetterNumber
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_LetterNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_LetterNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "LetterNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory LetterNumber
void System::Globalization::UnicodeCategory::_set_LetterNumber(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_LetterNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "LetterNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherNumber
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_OtherNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherNumber
void System::Globalization::UnicodeCategory::_set_OtherNumber(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_OtherNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory SpaceSeparator
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_SpaceSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_SpaceSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "SpaceSeparator"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory SpaceSeparator
void System::Globalization::UnicodeCategory::_set_SpaceSeparator(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_SpaceSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "SpaceSeparator", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory LineSeparator
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_LineSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_LineSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "LineSeparator"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory LineSeparator
void System::Globalization::UnicodeCategory::_set_LineSeparator(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_LineSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "LineSeparator", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ParagraphSeparator
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ParagraphSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_ParagraphSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ParagraphSeparator"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ParagraphSeparator
void System::Globalization::UnicodeCategory::_set_ParagraphSeparator(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_ParagraphSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ParagraphSeparator", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory Control
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_Control() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_Control");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "Control"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory Control
void System::Globalization::UnicodeCategory::_set_Control(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_Control");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "Control", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory Format
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_Format");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "Format"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory Format
void System::Globalization::UnicodeCategory::_set_Format(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_Format");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "Format", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory Surrogate
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_Surrogate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_Surrogate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "Surrogate"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory Surrogate
void System::Globalization::UnicodeCategory::_set_Surrogate(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_Surrogate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "Surrogate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory PrivateUse
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_PrivateUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_PrivateUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "PrivateUse"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory PrivateUse
void System::Globalization::UnicodeCategory::_set_PrivateUse(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_PrivateUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "PrivateUse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ConnectorPunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ConnectorPunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_ConnectorPunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ConnectorPunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ConnectorPunctuation
void System::Globalization::UnicodeCategory::_set_ConnectorPunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_ConnectorPunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ConnectorPunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory DashPunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_DashPunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_DashPunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "DashPunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory DashPunctuation
void System::Globalization::UnicodeCategory::_set_DashPunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_DashPunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "DashPunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OpenPunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OpenPunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_OpenPunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OpenPunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OpenPunctuation
void System::Globalization::UnicodeCategory::_set_OpenPunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_OpenPunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OpenPunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ClosePunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ClosePunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_ClosePunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ClosePunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ClosePunctuation
void System::Globalization::UnicodeCategory::_set_ClosePunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_ClosePunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ClosePunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory InitialQuotePunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_InitialQuotePunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_InitialQuotePunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "InitialQuotePunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory InitialQuotePunctuation
void System::Globalization::UnicodeCategory::_set_InitialQuotePunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_InitialQuotePunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "InitialQuotePunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory FinalQuotePunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_FinalQuotePunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_FinalQuotePunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "FinalQuotePunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory FinalQuotePunctuation
void System::Globalization::UnicodeCategory::_set_FinalQuotePunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_FinalQuotePunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "FinalQuotePunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherPunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherPunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_OtherPunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherPunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherPunctuation
void System::Globalization::UnicodeCategory::_set_OtherPunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_OtherPunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherPunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory MathSymbol
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_MathSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_MathSymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "MathSymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory MathSymbol
void System::Globalization::UnicodeCategory::_set_MathSymbol(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_MathSymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "MathSymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory CurrencySymbol
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_CurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_CurrencySymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "CurrencySymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory CurrencySymbol
void System::Globalization::UnicodeCategory::_set_CurrencySymbol(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_CurrencySymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "CurrencySymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ModifierSymbol
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ModifierSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_ModifierSymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ModifierSymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ModifierSymbol
void System::Globalization::UnicodeCategory::_set_ModifierSymbol(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_ModifierSymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ModifierSymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherSymbol
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_OtherSymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherSymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherSymbol
void System::Globalization::UnicodeCategory::_set_OtherSymbol(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_OtherSymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherSymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherNotAssigned
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherNotAssigned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_OtherNotAssigned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherNotAssigned"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherNotAssigned
void System::Globalization::UnicodeCategory::_set_OtherNotAssigned(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_OtherNotAssigned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherNotAssigned", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Globalization::UnicodeCategory::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.SortKey
#include "System/Globalization/SortKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String source
[[deprecated]] ::StringW& System::Globalization::SortKey::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::dyn_source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] key
[[deprecated]] ::ArrayW<uint8_t>& System::Globalization::SortKey::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Globalization.CompareOptions options
[[deprecated]] ::System::Globalization::CompareOptions& System::Globalization::SortKey::dyn_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::dyn_options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "options"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 lcid
[[deprecated]] int& System::Globalization::SortKey::dyn_lcid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::dyn_lcid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lcid"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.SortKey.get_OriginalString
::StringW System::Globalization::SortKey::get_OriginalString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::get_OriginalString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::SortKey*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.SortKey.get_KeyData
::ArrayW<uint8_t> System::Globalization::SortKey::get_KeyData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::get_KeyData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::SortKey*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.SortKey.Compare
int System::Globalization::SortKey::Compare(::System::Globalization::SortKey* sortkey1, ::System::Globalization::SortKey* sortkey2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "SortKey", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sortkey1), ::il2cpp_utils::ExtractType(sortkey2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sortkey1, sortkey2);
}
// Autogenerated method: System.Globalization.SortKey.Equals
bool System::Globalization::SortKey::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.SortKey.GetHashCode
int System::Globalization::SortKey::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.SortKey.ToString
::StringW System::Globalization::SortKey::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.CultureData
#include "System/Globalization/CultureData.hpp"
// Including type: System.Globalization.CalendarData
#include "System/Globalization/CalendarData.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureData s_Invariant
::System::Globalization::CultureData* System::Globalization::CultureData::_get_s_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::_get_s_Invariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureData*>("System.Globalization", "CultureData", "s_Invariant"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureData s_Invariant
void System::Globalization::CultureData::_set_s_Invariant(::System::Globalization::CultureData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::_set_s_Invariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureData", "s_Invariant", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String sAM1159
[[deprecated]] ::StringW& System::Globalization::CultureData::dyn_sAM1159() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_sAM1159");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sAM1159"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sPM2359
[[deprecated]] ::StringW& System::Globalization::CultureData::dyn_sPM2359() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_sPM2359");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sPM2359"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sTimeSeparator
[[deprecated]] ::StringW& System::Globalization::CultureData::dyn_sTimeSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_sTimeSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sTimeSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] saLongTimes
[[deprecated]] ::ArrayW<::StringW>& System::Globalization::CultureData::dyn_saLongTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_saLongTimes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saLongTimes"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] saShortTimes
[[deprecated]] ::ArrayW<::StringW>& System::Globalization::CultureData::dyn_saShortTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_saShortTimes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saShortTimes"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iFirstDayOfWeek
[[deprecated]] int& System::Globalization::CultureData::dyn_iFirstDayOfWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_iFirstDayOfWeek");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iFirstDayOfWeek"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iFirstWeekOfYear
[[deprecated]] int& System::Globalization::CultureData::dyn_iFirstWeekOfYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_iFirstWeekOfYear");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iFirstWeekOfYear"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] waCalendars
[[deprecated]] ::ArrayW<int>& System::Globalization::CultureData::dyn_waCalendars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_waCalendars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waCalendars"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CalendarData[] calendars
[[deprecated]] ::ArrayW<::System::Globalization::CalendarData*>& System::Globalization::CultureData::dyn_calendars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_calendars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calendars"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Globalization::CalendarData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sISO639Language
[[deprecated]] ::StringW& System::Globalization::CultureData::dyn_sISO639Language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_sISO639Language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sISO639Language"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String sRealName
[[deprecated]] ::StringW& System::Globalization::CultureData::dyn_sRealName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_sRealName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sRealName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean bUseOverrides
[[deprecated]] bool& System::Globalization::CultureData::dyn_bUseOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_bUseOverrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bUseOverrides"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 calendarId
[[deprecated]] int& System::Globalization::CultureData::dyn_calendarId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_calendarId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calendarId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 numberIndex
[[deprecated]] int& System::Globalization::CultureData::dyn_numberIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_numberIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iDefaultAnsiCodePage
[[deprecated]] int& System::Globalization::CultureData::dyn_iDefaultAnsiCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_iDefaultAnsiCodePage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iDefaultAnsiCodePage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iDefaultOemCodePage
[[deprecated]] int& System::Globalization::CultureData::dyn_iDefaultOemCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_iDefaultOemCodePage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iDefaultOemCodePage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iDefaultMacCodePage
[[deprecated]] int& System::Globalization::CultureData::dyn_iDefaultMacCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_iDefaultMacCodePage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iDefaultMacCodePage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iDefaultEbcdicCodePage
[[deprecated]] int& System::Globalization::CultureData::dyn_iDefaultEbcdicCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_iDefaultEbcdicCodePage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iDefaultEbcdicCodePage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRightToLeft
[[deprecated]] bool& System::Globalization::CultureData::dyn_isRightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_isRightToLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRightToLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sListSeparator
[[deprecated]] ::StringW& System::Globalization::CultureData::dyn_sListSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_sListSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sListSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.CultureData.get_Invariant
::System::Globalization::CultureData* System::Globalization::CultureData::get_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_Invariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "get_Invariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_LongTimes
::ArrayW<::StringW> System::Globalization::CultureData::get_LongTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_LongTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LongTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_ShortTimes
::ArrayW<::StringW> System::Globalization::CultureData::get_ShortTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_ShortTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShortTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_SISO639LANGNAME
::StringW System::Globalization::CultureData::get_SISO639LANGNAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_SISO639LANGNAME");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SISO639LANGNAME", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_IFIRSTDAYOFWEEK
int System::Globalization::CultureData::get_IFIRSTDAYOFWEEK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_IFIRSTDAYOFWEEK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IFIRSTDAYOFWEEK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_IFIRSTWEEKOFYEAR
int System::Globalization::CultureData::get_IFIRSTWEEKOFYEAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_IFIRSTWEEKOFYEAR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IFIRSTWEEKOFYEAR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_SAM1159
::StringW System::Globalization::CultureData::get_SAM1159() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_SAM1159");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SAM1159", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_SPM2359
::StringW System::Globalization::CultureData::get_SPM2359() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_SPM2359");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SPM2359", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_TimeSeparator
::StringW System::Globalization::CultureData::get_TimeSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_TimeSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TimeSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_CalendarIds
::ArrayW<int> System::Globalization::CultureData::get_CalendarIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_CalendarIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CalendarIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_IsInvariantCulture
bool System::Globalization::CultureData::get_IsInvariantCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_IsInvariantCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInvariantCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_CultureName
::StringW System::Globalization::CultureData::get_CultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_CultureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CultureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_SCOMPAREINFO
::StringW System::Globalization::CultureData::get_SCOMPAREINFO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_SCOMPAREINFO");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SCOMPAREINFO", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_STEXTINFO
::StringW System::Globalization::CultureData::get_STEXTINFO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_STEXTINFO");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_STEXTINFO", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_ILANGUAGE
int System::Globalization::CultureData::get_ILANGUAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_ILANGUAGE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ILANGUAGE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_UseUserOverride
bool System::Globalization::CultureData::get_UseUserOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_UseUserOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseUserOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.GetCultureData
::System::Globalization::CultureData* System::Globalization::CultureData::GetCultureData(::StringW cultureName, bool useUserOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetCultureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "GetCultureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cultureName), ::il2cpp_utils::ExtractType(useUserOverride)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cultureName, useUserOverride);
}
// Autogenerated method: System.Globalization.CultureData.GetCultureData
::System::Globalization::CultureData* System::Globalization::CultureData::GetCultureData(::StringW cultureName, bool useUserOverride, int datetimeIndex, int calendarId, int numberIndex, ::StringW iso2lang, int ansiCodePage, int oemCodePage, int macCodePage, int ebcdicCodePage, bool rightToLeft, ::StringW listSeparator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetCultureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "GetCultureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cultureName), ::il2cpp_utils::ExtractType(useUserOverride), ::il2cpp_utils::ExtractType(datetimeIndex), ::il2cpp_utils::ExtractType(calendarId), ::il2cpp_utils::ExtractType(numberIndex), ::il2cpp_utils::ExtractType(iso2lang), ::il2cpp_utils::ExtractType(ansiCodePage), ::il2cpp_utils::ExtractType(oemCodePage), ::il2cpp_utils::ExtractType(macCodePage), ::il2cpp_utils::ExtractType(ebcdicCodePage), ::il2cpp_utils::ExtractType(rightToLeft), ::il2cpp_utils::ExtractType(listSeparator)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cultureName, useUserOverride, datetimeIndex, calendarId, numberIndex, iso2lang, ansiCodePage, oemCodePage, macCodePage, ebcdicCodePage, rightToLeft, listSeparator);
}
// Autogenerated method: System.Globalization.CultureData.GetCultureData
::System::Globalization::CultureData* System::Globalization::CultureData::GetCultureData(int culture, bool bUseUserOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetCultureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "GetCultureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(bUseUserOverride)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, culture, bUseUserOverride);
}
// Autogenerated method: System.Globalization.CultureData.fill_culture_data
void System::Globalization::CultureData::fill_culture_data(int datetimeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::fill_culture_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "fill_culture_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(datetimeIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, datetimeIndex);
}
// Autogenerated method: System.Globalization.CultureData.GetCalendar
::System::Globalization::CalendarData* System::Globalization::CultureData::GetCalendar(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetCalendar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalendar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CalendarData*, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.EraNames
::ArrayW<::StringW> System::Globalization::CultureData::EraNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::EraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbrevEraNames
::ArrayW<::StringW> System::Globalization::CultureData::AbbrevEraNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::AbbrevEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbbrevEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbreviatedEnglishEraNames
::ArrayW<::StringW> System::Globalization::CultureData::AbbreviatedEnglishEraNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::AbbreviatedEnglishEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbbreviatedEnglishEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.ShortDates
::ArrayW<::StringW> System::Globalization::CultureData::ShortDates(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::ShortDates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShortDates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.LongDates
::ArrayW<::StringW> System::Globalization::CultureData::LongDates(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::LongDates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LongDates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.YearMonths
::ArrayW<::StringW> System::Globalization::CultureData::YearMonths(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::YearMonths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "YearMonths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.DayNames
::ArrayW<::StringW> System::Globalization::CultureData::DayNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::DayNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DayNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbreviatedDayNames
::ArrayW<::StringW> System::Globalization::CultureData::AbbreviatedDayNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::AbbreviatedDayNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbbreviatedDayNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.MonthNames
::ArrayW<::StringW> System::Globalization::CultureData::MonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::MonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.GenitiveMonthNames
::ArrayW<::StringW> System::Globalization::CultureData::GenitiveMonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GenitiveMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenitiveMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbreviatedMonthNames
::ArrayW<::StringW> System::Globalization::CultureData::AbbreviatedMonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::AbbreviatedMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbbreviatedMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbreviatedGenitiveMonthNames
::ArrayW<::StringW> System::Globalization::CultureData::AbbreviatedGenitiveMonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::AbbreviatedGenitiveMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbbreviatedGenitiveMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.LeapYearMonthNames
::ArrayW<::StringW> System::Globalization::CultureData::LeapYearMonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::LeapYearMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LeapYearMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.MonthDay
::StringW System::Globalization::CultureData::MonthDay(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::MonthDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MonthDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.DateSeparator
::StringW System::Globalization::CultureData::DateSeparator(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::DateSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DateSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.GetDateSeparator
::StringW System::Globalization::CultureData::GetDateSeparator(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetDateSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "GetDateSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated method: System.Globalization.CultureData.GetSeparator
::StringW System::Globalization::CultureData::GetSeparator(::StringW format, ::StringW timeParts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "GetSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(timeParts)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, timeParts);
}
// Autogenerated method: System.Globalization.CultureData.IndexOfTimePart
int System::Globalization::CultureData::IndexOfTimePart(::StringW format, int startIndex, ::StringW timeParts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::IndexOfTimePart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "IndexOfTimePart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(timeParts)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, startIndex, timeParts);
}
// Autogenerated method: System.Globalization.CultureData.UnescapeNlsString
::StringW System::Globalization::CultureData::UnescapeNlsString(::StringW str, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::UnescapeNlsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "UnescapeNlsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, start, end);
}
// Autogenerated method: System.Globalization.CultureData.ReescapeWin32Strings
::ArrayW<::StringW> System::Globalization::CultureData::ReescapeWin32Strings(::ArrayW<::StringW> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::ReescapeWin32Strings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "ReescapeWin32Strings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.Globalization.CultureData.ReescapeWin32String
::StringW System::Globalization::CultureData::ReescapeWin32String(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::ReescapeWin32String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "ReescapeWin32String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Globalization.CultureData.GetNFIValues
void System::Globalization::CultureData::GetNFIValues(::System::Globalization::NumberFormatInfo* nfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetNFIValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNFIValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nfi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nfi);
}
// Autogenerated method: System.Globalization.CultureData.fill_number_data
void System::Globalization::CultureData::fill_number_data(::System::Globalization::NumberFormatInfo* nfi, int numberIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::fill_number_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "fill_number_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nfi), ::il2cpp_utils::ExtractType(numberIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nfi, numberIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.CodePageDataItem
#include "System/Globalization/CodePageDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] sep
::ArrayW<::Il2CppChar> System::Globalization::CodePageDataItem::_get_sep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::_get_sep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "CodePageDataItem", "sep"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] sep
void System::Globalization::CodePageDataItem::_set_sep(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::_set_sep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CodePageDataItem", "sep", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_dataIndex
[[deprecated]] int& System::Globalization::CodePageDataItem::dyn_m_dataIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::dyn_m_dataIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dataIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_uiFamilyCodePage
[[deprecated]] int& System::Globalization::CodePageDataItem::dyn_m_uiFamilyCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::dyn_m_uiFamilyCodePage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_uiFamilyCodePage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_webName
[[deprecated]] ::StringW& System::Globalization::CodePageDataItem::dyn_m_webName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::dyn_m_webName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_webName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_headerName
[[deprecated]] ::StringW& System::Globalization::CodePageDataItem::dyn_m_headerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::dyn_m_headerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_headerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_flags
[[deprecated]] uint& System::Globalization::CodePageDataItem::dyn_m_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::dyn_m_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_flags"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.CodePageDataItem.get_WebName
::StringW System::Globalization::CodePageDataItem::get_WebName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::get_WebName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WebName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CodePageDataItem.get_HeaderName
::StringW System::Globalization::CodePageDataItem::get_HeaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::get_HeaderName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HeaderName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CodePageDataItem..cctor
void System::Globalization::CodePageDataItem::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CodePageDataItem", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CodePageDataItem.CreateString
::StringW System::Globalization::CodePageDataItem::CreateString(::StringW pStrings, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CodePageDataItem", "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pStrings), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pStrings, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.EncodingTable
#include "System/Globalization/EncodingTable.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Globalization.CodePageDataItem
#include "System/Globalization/CodePageDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Globalization.InternalEncodingDataItem[] encodingDataPtr
::ArrayW<::System::Globalization::InternalEncodingDataItem> System::Globalization::EncodingTable::_get_encodingDataPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_get_encodingDataPtr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Globalization::InternalEncodingDataItem>>("System.Globalization", "EncodingTable", "encodingDataPtr"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.InternalEncodingDataItem[] encodingDataPtr
void System::Globalization::EncodingTable::_set_encodingDataPtr(::ArrayW<::System::Globalization::InternalEncodingDataItem> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_set_encodingDataPtr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "encodingDataPtr", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.InternalCodePageDataItem[] codePageDataPtr
::ArrayW<::System::Globalization::InternalCodePageDataItem> System::Globalization::EncodingTable::_get_codePageDataPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_get_codePageDataPtr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Globalization::InternalCodePageDataItem>>("System.Globalization", "EncodingTable", "codePageDataPtr"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.InternalCodePageDataItem[] codePageDataPtr
void System::Globalization::EncodingTable::_set_codePageDataPtr(::ArrayW<::System::Globalization::InternalCodePageDataItem> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_set_codePageDataPtr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "codePageDataPtr", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 lastEncodingItem
int System::Globalization::EncodingTable::_get_lastEncodingItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_get_lastEncodingItem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "EncodingTable", "lastEncodingItem"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 lastEncodingItem
void System::Globalization::EncodingTable::_set_lastEncodingItem(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_set_lastEncodingItem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "lastEncodingItem", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable hashByName
::System::Collections::Hashtable* System::Globalization::EncodingTable::_get_hashByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_get_hashByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Globalization", "EncodingTable", "hashByName"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable hashByName
void System::Globalization::EncodingTable::_set_hashByName(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_set_hashByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "hashByName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable hashByCodePage
::System::Collections::Hashtable* System::Globalization::EncodingTable::_get_hashByCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_get_hashByCodePage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Globalization", "EncodingTable", "hashByCodePage"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable hashByCodePage
void System::Globalization::EncodingTable::_set_hashByCodePage(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_set_hashByCodePage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "hashByCodePage", value));
}
// Autogenerated method: System.Globalization.EncodingTable..cctor
void System::Globalization::EncodingTable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.EncodingTable.GetNumEncodingItems
int System::Globalization::EncodingTable::GetNumEncodingItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::GetNumEncodingItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "GetNumEncodingItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.EncodingTable.ENC
::System::Globalization::InternalEncodingDataItem System::Globalization::EncodingTable::ENC(::StringW name, uint16_t cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::ENC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "ENC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::InternalEncodingDataItem, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, cp);
}
// Autogenerated method: System.Globalization.EncodingTable.MapCodePageDataItem
::System::Globalization::InternalCodePageDataItem System::Globalization::EncodingTable::MapCodePageDataItem(uint16_t cp, uint16_t fcp, ::StringW names, uint flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::MapCodePageDataItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "MapCodePageDataItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp), ::il2cpp_utils::ExtractType(fcp), ::il2cpp_utils::ExtractType(names), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::InternalCodePageDataItem, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp, fcp, names, flags);
}
// Autogenerated method: System.Globalization.EncodingTable.internalGetCodePageFromName
int System::Globalization::EncodingTable::internalGetCodePageFromName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::internalGetCodePageFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "internalGetCodePageFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.EncodingTable.GetCodePageFromName
int System::Globalization::EncodingTable::GetCodePageFromName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::GetCodePageFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "GetCodePageFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.EncodingTable.GetCodePageDataItem
::System::Globalization::CodePageDataItem* System::Globalization::EncodingTable::GetCodePageDataItem(int codepage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::GetCodePageDataItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "GetCodePageDataItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codepage)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CodePageDataItem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, codepage);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.TextInfoToUpperData
#include "System/Globalization/TextInfoToUpperData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_00e0_0586
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_00e0_0586() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_00e0_0586");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_00e0_0586"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_00e0_0586
void System::Globalization::TextInfoToUpperData::_set_range_00e0_0586(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_00e0_0586");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_00e0_0586", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_1e01_1ff3
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_1e01_1ff3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_1e01_1ff3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_1e01_1ff3"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_1e01_1ff3
void System::Globalization::TextInfoToUpperData::_set_range_1e01_1ff3(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_1e01_1ff3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_1e01_1ff3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2170_2184
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_2170_2184() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_2170_2184");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_2170_2184"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2170_2184
void System::Globalization::TextInfoToUpperData::_set_range_2170_2184(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_2170_2184");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_2170_2184", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_24d0_24e9
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_24d0_24e9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_24d0_24e9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_24d0_24e9"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_24d0_24e9
void System::Globalization::TextInfoToUpperData::_set_range_24d0_24e9(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_24d0_24e9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_24d0_24e9", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2c30_2ce3
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_2c30_2ce3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_2c30_2ce3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_2c30_2ce3"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2c30_2ce3
void System::Globalization::TextInfoToUpperData::_set_range_2c30_2ce3(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_2c30_2ce3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_2c30_2ce3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2d00_2d25
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_2d00_2d25() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_2d00_2d25");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_2d00_2d25"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2d00_2d25
void System::Globalization::TextInfoToUpperData::_set_range_2d00_2d25(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_2d00_2d25");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_2d00_2d25", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_a641_a697
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_a641_a697() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_a641_a697");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_a641_a697"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_a641_a697
void System::Globalization::TextInfoToUpperData::_set_range_a641_a697(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_a641_a697");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_a641_a697", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_a723_a78c
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_a723_a78c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_a723_a78c");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_a723_a78c"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_a723_a78c
void System::Globalization::TextInfoToUpperData::_set_range_a723_a78c(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_a723_a78c");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_a723_a78c", value));
}
// Autogenerated method: System.Globalization.TextInfoToUpperData..cctor
void System::Globalization::TextInfoToUpperData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfoToUpperData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.TextInfoToLowerData
#include "System/Globalization/TextInfoToLowerData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_00c0_0556
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_00c0_0556() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_00c0_0556");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_00c0_0556"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_00c0_0556
void System::Globalization::TextInfoToLowerData::_set_range_00c0_0556(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_00c0_0556");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_00c0_0556", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_10a0_10c5
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_10a0_10c5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_10a0_10c5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_10a0_10c5"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_10a0_10c5
void System::Globalization::TextInfoToLowerData::_set_range_10a0_10c5(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_10a0_10c5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_10a0_10c5", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_1e00_1ffc
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_1e00_1ffc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_1e00_1ffc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_1e00_1ffc"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_1e00_1ffc
void System::Globalization::TextInfoToLowerData::_set_range_1e00_1ffc(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_1e00_1ffc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_1e00_1ffc", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2160_216f
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_2160_216f() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_2160_216f");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_2160_216f"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2160_216f
void System::Globalization::TextInfoToLowerData::_set_range_2160_216f(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_2160_216f");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_2160_216f", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_24b6_24cf
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_24b6_24cf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_24b6_24cf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_24b6_24cf"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_24b6_24cf
void System::Globalization::TextInfoToLowerData::_set_range_24b6_24cf(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_24b6_24cf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_24b6_24cf", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2c00_2c2e
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_2c00_2c2e() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_2c00_2c2e");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_2c00_2c2e"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2c00_2c2e
void System::Globalization::TextInfoToLowerData::_set_range_2c00_2c2e(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_2c00_2c2e");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_2c00_2c2e", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2c60_2ce2
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_2c60_2ce2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_2c60_2ce2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_2c60_2ce2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2c60_2ce2
void System::Globalization::TextInfoToLowerData::_set_range_2c60_2ce2(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_2c60_2ce2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_2c60_2ce2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_a640_a696
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_a640_a696() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_a640_a696");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_a640_a696"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_a640_a696
void System::Globalization::TextInfoToLowerData::_set_range_a640_a696(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_a640_a696");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_a640_a696", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_a722_a78b
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_a722_a78b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_a722_a78b");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_a722_a78b"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_a722_a78b
void System::Globalization::TextInfoToLowerData::_set_range_a722_a78b(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_a722_a78b");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_a722_a78b", value));
}
// Autogenerated method: System.Globalization.TextInfoToLowerData..cctor
void System::Globalization::TextInfoToLowerData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfoToLowerData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.CultureInfo/System.Globalization.Data
#include "System/Globalization/CultureInfo_Data.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.Globalization.TextInfo
#include "System/Globalization/TextInfo.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.Globalization.CultureData
#include "System/Globalization/CultureData.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureInfo invariant_culture_info
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::_get_invariant_culture_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_invariant_culture_info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureInfo*>("System.Globalization", "CultureInfo", "invariant_culture_info"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureInfo invariant_culture_info
void System::Globalization::CultureInfo::_set_invariant_culture_info(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_invariant_culture_info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "invariant_culture_info", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object shared_table_lock
::Il2CppObject* System::Globalization::CultureInfo::_get_shared_table_lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_shared_table_lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Globalization", "CultureInfo", "shared_table_lock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object shared_table_lock
void System::Globalization::CultureInfo::_set_shared_table_lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_shared_table_lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "shared_table_lock", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureInfo default_current_culture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::_get_default_current_culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_default_current_culture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureInfo*>("System.Globalization", "CultureInfo", "default_current_culture"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureInfo default_current_culture
void System::Globalization::CultureInfo::_set_default_current_culture(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_default_current_culture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "default_current_culture", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 InvariantCultureId
int System::Globalization::CultureInfo::_get_InvariantCultureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_InvariantCultureId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CultureInfo", "InvariantCultureId"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 InvariantCultureId
void System::Globalization::CultureInfo::_set_InvariantCultureId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_InvariantCultureId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "InvariantCultureId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CalendarTypeBits
int System::Globalization::CultureInfo::_get_CalendarTypeBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_CalendarTypeBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CultureInfo", "CalendarTypeBits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CalendarTypeBits
void System::Globalization::CultureInfo::_set_CalendarTypeBits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_CalendarTypeBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "CalendarTypeBits", value));
}
// Autogenerated static field getter
// Get static field: static private System.String MSG_READONLY
::StringW System::Globalization::CultureInfo::_get_MSG_READONLY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_MSG_READONLY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "CultureInfo", "MSG_READONLY"));
}
// Autogenerated static field setter
// Set static field: static private System.String MSG_READONLY
void System::Globalization::CultureInfo::_set_MSG_READONLY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_MSG_READONLY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "MSG_READONLY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureInfo s_DefaultThreadCurrentUICulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::_get_s_DefaultThreadCurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_s_DefaultThreadCurrentUICulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureInfo*>("System.Globalization", "CultureInfo", "s_DefaultThreadCurrentUICulture"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureInfo s_DefaultThreadCurrentUICulture
void System::Globalization::CultureInfo::_set_s_DefaultThreadCurrentUICulture(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_s_DefaultThreadCurrentUICulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "s_DefaultThreadCurrentUICulture", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureInfo s_DefaultThreadCurrentCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::_get_s_DefaultThreadCurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_s_DefaultThreadCurrentCulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureInfo*>("System.Globalization", "CultureInfo", "s_DefaultThreadCurrentCulture"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureInfo s_DefaultThreadCurrentCulture
void System::Globalization::CultureInfo::_set_s_DefaultThreadCurrentCulture(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_s_DefaultThreadCurrentCulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "s_DefaultThreadCurrentCulture", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Globalization.CultureInfo> shared_by_number
::System::Collections::Generic::Dictionary_2<int, ::System::Globalization::CultureInfo*>* System::Globalization::CultureInfo::_get_shared_by_number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_shared_by_number");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::System::Globalization::CultureInfo*>*>("System.Globalization", "CultureInfo", "shared_by_number")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Globalization.CultureInfo> shared_by_number
void System::Globalization::CultureInfo::_set_shared_by_number(::System::Collections::Generic::Dictionary_2<int, ::System::Globalization::CultureInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_shared_by_number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "shared_by_number", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Globalization.CultureInfo> shared_by_name
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Globalization::CultureInfo*>* System::Globalization::CultureInfo::_get_shared_by_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_shared_by_name");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Globalization::CultureInfo*>*>("System.Globalization", "CultureInfo", "shared_by_name")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Globalization.CultureInfo> shared_by_name
void System::Globalization::CultureInfo::_set_shared_by_name(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Globalization::CultureInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_shared_by_name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "shared_by_name", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Boolean IsTaiwanSku
bool System::Globalization::CultureInfo::_get_IsTaiwanSku() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_IsTaiwanSku");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Globalization", "CultureInfo", "IsTaiwanSku"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean IsTaiwanSku
void System::Globalization::CultureInfo::_set_IsTaiwanSku(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_IsTaiwanSku");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "IsTaiwanSku", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isReadOnly
[[deprecated]] bool& System::Globalization::CultureInfo::dyn_m_isReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_m_isReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 cultureID
[[deprecated]] int& System::Globalization::CultureInfo::dyn_cultureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_cultureID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cultureID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 parent_lcid
[[deprecated]] int& System::Globalization::CultureInfo::dyn_parent_lcid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_parent_lcid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent_lcid"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 datetime_index
[[deprecated]] int& System::Globalization::CultureInfo::dyn_datetime_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_datetime_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "datetime_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 number_index
[[deprecated]] int& System::Globalization::CultureInfo::dyn_number_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_number_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "number_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 default_calendar_type
[[deprecated]] int& System::Globalization::CultureInfo::dyn_default_calendar_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_default_calendar_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "default_calendar_type"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_useUserOverride
[[deprecated]] bool& System::Globalization::CultureInfo::dyn_m_useUserOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_m_useUserOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useUserOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.NumberFormatInfo numInfo
[[deprecated]] ::System::Globalization::NumberFormatInfo*& System::Globalization::CultureInfo::dyn_numInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_numInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::NumberFormatInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.DateTimeFormatInfo dateTimeInfo
[[deprecated]] ::System::Globalization::DateTimeFormatInfo*& System::Globalization::CultureInfo::dyn_dateTimeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_dateTimeInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dateTimeInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::DateTimeFormatInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.TextInfo textInfo
[[deprecated]] ::System::Globalization::TextInfo*& System::Globalization::CultureInfo::dyn_textInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_textInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::TextInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_name
[[deprecated]] ::StringW& System::Globalization::CultureInfo::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_m_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String englishname
[[deprecated]] ::StringW& System::Globalization::CultureInfo::dyn_englishname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_englishname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "englishname"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String nativename
[[deprecated]] ::StringW& System::Globalization::CultureInfo::dyn_nativename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_nativename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nativename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String iso3lang
[[deprecated]] ::StringW& System::Globalization::CultureInfo::dyn_iso3lang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_iso3lang");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iso3lang"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String iso2lang
[[deprecated]] ::StringW& System::Globalization::CultureInfo::dyn_iso2lang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_iso2lang");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iso2lang"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String win3lang
[[deprecated]] ::StringW& System::Globalization::CultureInfo::dyn_win3lang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_win3lang");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "win3lang"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String territory
[[deprecated]] ::StringW& System::Globalization::CultureInfo::dyn_territory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_territory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "territory"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] native_calendar_names
[[deprecated]] ::ArrayW<::StringW>& System::Globalization::CultureInfo::dyn_native_calendar_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_native_calendar_names");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "native_calendar_names"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareInfo compareInfo
[[deprecated]] ::System::Globalization::CompareInfo*& System::Globalization::CultureInfo::dyn_compareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_compareInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compareInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Void* textinfo_data
[[deprecated]] void*& System::Globalization::CultureInfo::dyn_textinfo_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_textinfo_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textinfo_data"))->offset;
  return *reinterpret_cast<void**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_dataItem
[[deprecated]] int& System::Globalization::CultureInfo::dyn_m_dataItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_m_dataItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dataItem"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.Calendar calendar
[[deprecated]] ::System::Globalization::Calendar*& System::Globalization::CultureInfo::dyn_calendar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_calendar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calendar"))->offset;
  return *reinterpret_cast<::System::Globalization::Calendar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo parent_culture
[[deprecated]] ::System::Globalization::CultureInfo*& System::Globalization::CultureInfo::dyn_parent_culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_parent_culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent_culture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean constructed
[[deprecated]] bool& System::Globalization::CultureInfo::dyn_constructed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_constructed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constructed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] cached_serialized_form
[[deprecated]] ::ArrayW<uint8_t>& System::Globalization::CultureInfo::dyn_cached_serialized_form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_cached_serialized_form");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cached_serialized_form"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.CultureData m_cultureData
[[deprecated]] ::System::Globalization::CultureData*& System::Globalization::CultureInfo::dyn_m_cultureData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_m_cultureData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cultureData"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_isInherited
[[deprecated]] bool& System::Globalization::CultureInfo::dyn_m_isInherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_m_isInherited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isInherited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.CultureInfo.get_InvariantCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_InvariantCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_InvariantCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_InvariantCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_CurrentCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_CurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_CurrentCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_CurrentCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_CurrentUICulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_CurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_CurrentUICulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_CurrentUICulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_Territory
::StringW System::Globalization::CultureInfo::get_Territory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_Territory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Territory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_LCID
int System::Globalization::CultureInfo::get_LCID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_LCID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_Name
::StringW System::Globalization::CultureInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_Calendar
::System::Globalization::Calendar* System::Globalization::CultureInfo::get_Calendar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_Calendar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::Calendar*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_Parent
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_Parent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_TextInfo
::System::Globalization::TextInfo* System::Globalization::CultureInfo::get_TextInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_TextInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TextInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_CompareInfo
::System::Globalization::CompareInfo* System::Globalization::CultureInfo::get_CompareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_CompareInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CompareInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_IsNeutralCulture
bool System::Globalization::CultureInfo::get_IsNeutralCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_IsNeutralCulture");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_NumberFormat
::System::Globalization::NumberFormatInfo* System::Globalization::CultureInfo::get_NumberFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_NumberFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::NumberFormatInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.set_NumberFormat
void System::Globalization::CultureInfo::set_NumberFormat(::System::Globalization::NumberFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::set_NumberFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.CultureInfo.get_DateTimeFormat
::System::Globalization::DateTimeFormatInfo* System::Globalization::CultureInfo::get_DateTimeFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_DateTimeFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeFormatInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.set_DateTimeFormat
void System::Globalization::CultureInfo::set_DateTimeFormat(::System::Globalization::DateTimeFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::set_DateTimeFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.CultureInfo.get_EnglishName
::StringW System::Globalization::CultureInfo::get_EnglishName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_EnglishName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_IsReadOnly
bool System::Globalization::CultureInfo::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_CalendarType
int System::Globalization::CultureInfo::get_CalendarType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_CalendarType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CalendarType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_DefaultThreadCurrentCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_DefaultThreadCurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_DefaultThreadCurrentCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_DefaultThreadCurrentCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_DefaultThreadCurrentUICulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_DefaultThreadCurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_DefaultThreadCurrentUICulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_DefaultThreadCurrentUICulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_SortName
::StringW System::Globalization::CultureInfo::get_SortName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_SortName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SortName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_UserDefaultUICulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_UserDefaultUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_UserDefaultUICulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_UserDefaultUICulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_UserDefaultCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_UserDefaultCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_UserDefaultCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_UserDefaultCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo..cctor
void System::Globalization::CultureInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.ConstructCurrentCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::ConstructCurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::ConstructCurrentCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "ConstructCurrentCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.ConstructCurrentUICulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::ConstructCurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::ConstructCurrentUICulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "ConstructCurrentUICulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.Clone
::Il2CppObject* System::Globalization::CultureInfo::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.GetTextInfoData
::System::Globalization::CultureInfo::Data System::Globalization::CultureInfo::GetTextInfoData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::GetTextInfoData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextInfoData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo::Data, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.CheckNeutral
void System::Globalization::CultureInfo::CheckNeutral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CheckNeutral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckNeutral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.GetFormat
::Il2CppObject* System::Globalization::CultureInfo::GetFormat(::System::Type* formatType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::GetFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, formatType);
}
// Autogenerated method: System.Globalization.CultureInfo.Construct
void System::Globalization::CultureInfo::Construct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.construct_internal_locale_from_lcid
bool System::Globalization::CultureInfo::construct_internal_locale_from_lcid(int lcid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::construct_internal_locale_from_lcid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "construct_internal_locale_from_lcid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lcid)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lcid);
}
// Autogenerated method: System.Globalization.CultureInfo.construct_internal_locale_from_name
bool System::Globalization::CultureInfo::construct_internal_locale_from_name(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::construct_internal_locale_from_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "construct_internal_locale_from_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.get_current_locale_name
::StringW System::Globalization::CultureInfo::get_current_locale_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_current_locale_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_current_locale_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.ConstructInvariant
void System::Globalization::CultureInfo::ConstructInvariant(bool read_only) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::ConstructInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(read_only)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, read_only);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateTextInfo
::System::Globalization::TextInfo* System::Globalization::CultureInfo::CreateTextInfo(bool readOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CreateTextInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTextInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TextInfo*, false>(this, ___internal__method, readOnly);
}
// Autogenerated method: System.Globalization.CultureInfo.insert_into_shared_tables
void System::Globalization::CultureInfo::insert_into_shared_tables(::System::Globalization::CultureInfo* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::insert_into_shared_tables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "insert_into_shared_tables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Globalization.CultureInfo.GetCultureInfo
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::GetCultureInfo(int culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::GetCultureInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "GetCultureInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, culture);
}
// Autogenerated method: System.Globalization.CultureInfo.GetCultureInfo
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::GetCultureInfo(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::GetCultureInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "GetCultureInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::CreateCulture(::StringW name, bool reference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CreateCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(reference)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, reference);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateSpecificCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::CreateSpecificCulture(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CreateSpecificCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateSpecificCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateSpecificCultureFromNeutral
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::CreateSpecificCultureFromNeutral(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CreateSpecificCultureFromNeutral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateSpecificCultureFromNeutral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateCalendar
::System::Globalization::Calendar* System::Globalization::CultureInfo::CreateCalendar(int calendarType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CreateCalendar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateCalendar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::Calendar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, calendarType);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateNotFoundException
::System::Exception* System::Globalization::CultureInfo::CreateNotFoundException(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CreateNotFoundException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateNotFoundException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.CheckDomainSafetyObject
void System::Globalization::CultureInfo::CheckDomainSafetyObject(::Il2CppObject* obj, ::Il2CppObject* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CheckDomainSafetyObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CheckDomainSafetyObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, container);
}
// Autogenerated method: System.Globalization.CultureInfo.Equals
bool System::Globalization::CultureInfo::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.CultureInfo.GetHashCode
int System::Globalization::CultureInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.ToString
::StringW System::Globalization::CultureInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.IdnMapping
#include "System/Globalization/IdnMapping.hpp"
// Including type: System.Globalization.Punycode
#include "System/Globalization/Punycode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean allow_unassigned
[[deprecated]] bool& System::Globalization::IdnMapping::dyn_allow_unassigned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::dyn_allow_unassigned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allow_unassigned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean use_std3
[[deprecated]] bool& System::Globalization::IdnMapping::dyn_use_std3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::dyn_use_std3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "use_std3"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.Punycode puny
[[deprecated]] ::System::Globalization::Punycode*& System::Globalization::IdnMapping::dyn_puny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::dyn_puny");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "puny"))->offset;
  return *reinterpret_cast<::System::Globalization::Punycode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.IdnMapping.GetAscii
::StringW System::Globalization::IdnMapping::GetAscii(::StringW unicode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::GetAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, unicode);
}
// Autogenerated method: System.Globalization.IdnMapping.GetAscii
::StringW System::Globalization::IdnMapping::GetAscii(::StringW unicode, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::GetAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, unicode, index, count);
}
// Autogenerated method: System.Globalization.IdnMapping.Convert
::StringW System::Globalization::IdnMapping::Convert(::StringW input, int index, int count, bool toAscii) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(toAscii)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, input, index, count, toAscii);
}
// Autogenerated method: System.Globalization.IdnMapping.ToAscii
::StringW System::Globalization::IdnMapping::ToAscii(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::ToAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.VerifyLength
void System::Globalization::IdnMapping::VerifyLength(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::VerifyLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.NamePrep
::StringW System::Globalization::IdnMapping::NamePrep(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::NamePrep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NamePrep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.VerifyProhibitedCharacters
void System::Globalization::IdnMapping::VerifyProhibitedCharacters(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::VerifyProhibitedCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyProhibitedCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.VerifyStd3AsciiRules
void System::Globalization::IdnMapping::VerifyStd3AsciiRules(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::VerifyStd3AsciiRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyStd3AsciiRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.GetUnicode
::StringW System::Globalization::IdnMapping::GetUnicode(::StringW ascii) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::GetUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ascii)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ascii);
}
// Autogenerated method: System.Globalization.IdnMapping.GetUnicode
::StringW System::Globalization::IdnMapping::GetUnicode(::StringW ascii, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::GetUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ascii), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ascii, index, count);
}
// Autogenerated method: System.Globalization.IdnMapping.ToUnicode
::StringW System::Globalization::IdnMapping::ToUnicode(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::ToUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.Equals
bool System::Globalization::IdnMapping::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Globalization.IdnMapping.GetHashCode
int System::Globalization::IdnMapping::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.Bootstring
#include "System/Globalization/Bootstring.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Char delimiter
[[deprecated]] ::Il2CppChar& System::Globalization::Bootstring::dyn_delimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_delimiter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delimiter"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 base_num
[[deprecated]] int& System::Globalization::Bootstring::dyn_base_num() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_base_num");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "base_num"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 tmin
[[deprecated]] int& System::Globalization::Bootstring::dyn_tmin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_tmin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tmin"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 tmax
[[deprecated]] int& System::Globalization::Bootstring::dyn_tmax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_tmax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tmax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 skew
[[deprecated]] int& System::Globalization::Bootstring::dyn_skew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_skew");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skew"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 damp
[[deprecated]] int& System::Globalization::Bootstring::dyn_damp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_damp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "damp"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 initial_bias
[[deprecated]] int& System::Globalization::Bootstring::dyn_initial_bias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_initial_bias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initial_bias"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 initial_n
[[deprecated]] int& System::Globalization::Bootstring::dyn_initial_n() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_initial_n");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initial_n"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.Bootstring.Encode
::StringW System::Globalization::Bootstring::Encode(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.Bootstring.EncodeDigit
::Il2CppChar System::Globalization::Bootstring::EncodeDigit(int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::EncodeDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, d);
}
// Autogenerated method: System.Globalization.Bootstring.DecodeDigit
int System::Globalization::Bootstring::DecodeDigit(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::DecodeDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Globalization.Bootstring.Adapt
int System::Globalization::Bootstring::Adapt(int delta, int numPoints, bool firstTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::Adapt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Adapt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta), ::il2cpp_utils::ExtractType(numPoints), ::il2cpp_utils::ExtractType(firstTime)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, delta, numPoints, firstTime);
}
// Autogenerated method: System.Globalization.Bootstring.Decode
::StringW System::Globalization::Bootstring::Decode(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s, offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.Punycode
#include "System/Globalization/Punycode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.RegionInfo
#include "System/Globalization/RegionInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.RegionInfo currentRegion
::System::Globalization::RegionInfo* System::Globalization::RegionInfo::_get_currentRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::_get_currentRegion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::RegionInfo*>("System.Globalization", "RegionInfo", "currentRegion"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.RegionInfo currentRegion
void System::Globalization::RegionInfo::_set_currentRegion(::System::Globalization::RegionInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::_set_currentRegion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "RegionInfo", "currentRegion", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 regionId
[[deprecated]] int& System::Globalization::RegionInfo::dyn_regionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_regionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "regionId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String iso2Name
[[deprecated]] ::StringW& System::Globalization::RegionInfo::dyn_iso2Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_iso2Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iso2Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String iso3Name
[[deprecated]] ::StringW& System::Globalization::RegionInfo::dyn_iso3Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_iso3Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iso3Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String win3Name
[[deprecated]] ::StringW& System::Globalization::RegionInfo::dyn_win3Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_win3Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "win3Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String englishName
[[deprecated]] ::StringW& System::Globalization::RegionInfo::dyn_englishName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_englishName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "englishName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String nativeName
[[deprecated]] ::StringW& System::Globalization::RegionInfo::dyn_nativeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_nativeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nativeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String currencySymbol
[[deprecated]] ::StringW& System::Globalization::RegionInfo::dyn_currencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_currencySymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencySymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String isoCurrencySymbol
[[deprecated]] ::StringW& System::Globalization::RegionInfo::dyn_isoCurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_isoCurrencySymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isoCurrencySymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String currencyEnglishName
[[deprecated]] ::StringW& System::Globalization::RegionInfo::dyn_currencyEnglishName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_currencyEnglishName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyEnglishName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String currencyNativeName
[[deprecated]] ::StringW& System::Globalization::RegionInfo::dyn_currencyNativeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_currencyNativeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyNativeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.RegionInfo.get_CurrentRegion
::System::Globalization::RegionInfo* System::Globalization::RegionInfo::get_CurrentRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_CurrentRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "RegionInfo", "get_CurrentRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::RegionInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_CurrencyEnglishName
::StringW System::Globalization::RegionInfo::get_CurrencyEnglishName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_CurrencyEnglishName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_CurrencySymbol
::StringW System::Globalization::RegionInfo::get_CurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_CurrencySymbol");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_DisplayName
::StringW System::Globalization::RegionInfo::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_DisplayName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_EnglishName
::StringW System::Globalization::RegionInfo::get_EnglishName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_EnglishName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_GeoId
int System::Globalization::RegionInfo::get_GeoId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_GeoId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_IsMetric
bool System::Globalization::RegionInfo::get_IsMetric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_IsMetric");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_ISOCurrencySymbol
::StringW System::Globalization::RegionInfo::get_ISOCurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_ISOCurrencySymbol");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_NativeName
::StringW System::Globalization::RegionInfo::get_NativeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_NativeName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_CurrencyNativeName
::StringW System::Globalization::RegionInfo::get_CurrencyNativeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_CurrencyNativeName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_Name
::StringW System::Globalization::RegionInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_ThreeLetterISORegionName
::StringW System::Globalization::RegionInfo::get_ThreeLetterISORegionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_ThreeLetterISORegionName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_ThreeLetterWindowsRegionName
::StringW System::Globalization::RegionInfo::get_ThreeLetterWindowsRegionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_ThreeLetterWindowsRegionName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_TwoLetterISORegionName
::StringW System::Globalization::RegionInfo::get_TwoLetterISORegionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_TwoLetterISORegionName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.GetByTerritory
bool System::Globalization::RegionInfo::GetByTerritory(::System::Globalization::CultureInfo* ci) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::GetByTerritory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByTerritory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ci)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ci);
}
// Autogenerated method: System.Globalization.RegionInfo.construct_internal_region_from_name
bool System::Globalization::RegionInfo::construct_internal_region_from_name(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::construct_internal_region_from_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "construct_internal_region_from_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Globalization.RegionInfo.ClearCachedData
void System::Globalization::RegionInfo::ClearCachedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::ClearCachedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "RegionInfo", "ClearCachedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.Equals
bool System::Globalization::RegionInfo::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.RegionInfo.GetHashCode
int System::Globalization::RegionInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.ToString
::StringW System::Globalization::RegionInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Numerics.Hashing.HashHelpers
#include "System/Numerics/Hashing/HashHelpers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 RandomSeed
int System::Numerics::Hashing::HashHelpers::_get_RandomSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::Hashing::HashHelpers::_get_RandomSeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Numerics.Hashing", "HashHelpers", "RandomSeed"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 RandomSeed
void System::Numerics::Hashing::HashHelpers::_set_RandomSeed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::Hashing::HashHelpers::_set_RandomSeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics.Hashing", "HashHelpers", "RandomSeed", value));
}
// Autogenerated method: System.Numerics.Hashing.HashHelpers..cctor
void System::Numerics::Hashing::HashHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::Hashing::HashHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics.Hashing", "HashHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.Hashing.HashHelpers.Combine
int System::Numerics::Hashing::HashHelpers::Combine(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::Hashing::HashHelpers::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics.Hashing", "HashHelpers", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.AtomicBoolean
#include "System/Threading/AtomicBoolean.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 flag
[[deprecated]] int& System::Threading::AtomicBoolean::dyn_flag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::AtomicBoolean::dyn_flag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.AtomicBoolean.TryRelaxedSet
bool System::Threading::AtomicBoolean::TryRelaxedSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::AtomicBoolean::TryRelaxedSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryRelaxedSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.AtomicBoolean.Exchange
bool System::Threading::AtomicBoolean::Exchange(bool newVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::AtomicBoolean::Exchange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Exchange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newVal)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, newVal);
}
// Autogenerated method: System.Threading.AtomicBoolean.Equals
bool System::Threading::AtomicBoolean::Equals(::System::Threading::AtomicBoolean* rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::AtomicBoolean::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rhs);
}
// Autogenerated method: System.Threading.AtomicBoolean.Equals
bool System::Threading::AtomicBoolean::Equals(::Il2CppObject* rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::AtomicBoolean::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rhs);
}
// Autogenerated method: System.Threading.AtomicBoolean.GetHashCode
int System::Threading::AtomicBoolean::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::AtomicBoolean::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.CancellationTokenRegistration
#include "System/Threading/CancellationTokenRegistration.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Action`1<System.Object> s_ActionToActionObjShunt
::System::Action_1<::Il2CppObject*>* System::Threading::CancellationToken::_get_s_ActionToActionObjShunt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::_get_s_ActionToActionObjShunt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.Threading", "CancellationToken", "s_ActionToActionObjShunt"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Action`1<System.Object> s_ActionToActionObjShunt
void System::Threading::CancellationToken::_set_s_ActionToActionObjShunt(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::_set_s_ActionToActionObjShunt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationToken", "s_ActionToActionObjShunt", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource m_source
[[deprecated]] ::System::Threading::CancellationTokenSource*& System::Threading::CancellationToken::dyn_m_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::dyn_m_source");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_source"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.CancellationToken.get_None
::System::Threading::CancellationToken System::Threading::CancellationToken::get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::get_None");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationToken", "get_None", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationToken, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.get_IsCancellationRequested
bool System::Threading::CancellationToken::get_IsCancellationRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::get_IsCancellationRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsCancellationRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.get_CanBeCanceled
bool System::Threading::CancellationToken::get_CanBeCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::get_CanBeCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CanBeCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken..ctor
// ABORTED elsewhere.  System::Threading::CancellationToken::CancellationToken(::System::Threading::CancellationTokenSource* source)
// Autogenerated method: System.Threading.CancellationToken..cctor
void System::Threading::CancellationToken::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationToken", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.ActionToActionObjShunt
void System::Threading::CancellationToken::ActionToActionObjShunt(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::ActionToActionObjShunt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationToken", "ActionToActionObjShunt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.CancellationToken.Register
::System::Threading::CancellationTokenRegistration System::Threading::CancellationToken::Register(::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationTokenRegistration, false>(this, ___internal__method, callback);
}
// Autogenerated method: System.Threading.CancellationToken.InternalRegisterWithoutEC
::System::Threading::CancellationTokenRegistration System::Threading::CancellationToken::InternalRegisterWithoutEC(::System::Action_1<::Il2CppObject*>* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::InternalRegisterWithoutEC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalRegisterWithoutEC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationTokenRegistration, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Threading.CancellationToken.Register
::System::Threading::CancellationTokenRegistration System::Threading::CancellationToken::Register(::System::Action_1<::Il2CppObject*>* callback, ::Il2CppObject* state, bool useSynchronizationContext, bool useExecutionContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(useSynchronizationContext), ::il2cpp_utils::ExtractType(useExecutionContext)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationTokenRegistration, false>(this, ___internal__method, callback, state, useSynchronizationContext, useExecutionContext);
}
// Autogenerated method: System.Threading.CancellationToken.Equals
bool System::Threading::CancellationToken::Equals(::System::Threading::CancellationToken other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Threading.CancellationToken.ThrowIfCancellationRequested
void System::Threading::CancellationToken::ThrowIfCancellationRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::ThrowIfCancellationRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ThrowIfCancellationRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.ThrowIfSourceDisposed
void System::Threading::CancellationToken::ThrowIfSourceDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::ThrowIfSourceDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ThrowIfSourceDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.ThrowOperationCanceledException
void System::Threading::CancellationToken::ThrowOperationCanceledException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::ThrowOperationCanceledException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ThrowOperationCanceledException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.ThrowObjectDisposedException
void System::Threading::CancellationToken::ThrowObjectDisposedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::ThrowObjectDisposedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationToken", "ThrowObjectDisposedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.Equals
bool System::Threading::CancellationToken::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Threading.CancellationToken.GetHashCode
int System::Threading::CancellationToken::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.op_Equality
bool System::Threading::operator ==(const ::System::Threading::CancellationToken& left, const ::System::Threading::CancellationToken& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationToken", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Threading.CancellationToken.op_Inequality
bool System::Threading::operator !=(const ::System::Threading::CancellationToken& left, const ::System::Threading::CancellationToken& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationToken", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.CancellationTokenRegistration
#include "System/Threading/CancellationTokenRegistration.hpp"
// Including type: System.Threading.CancellationCallbackInfo
#include "System/Threading/CancellationCallbackInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.CancellationCallbackInfo m_callbackInfo
[[deprecated]] ::System::Threading::CancellationCallbackInfo*& System::Threading::CancellationTokenRegistration::dyn_m_callbackInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenRegistration::dyn_m_callbackInfo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_callbackInfo"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationCallbackInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.SparselyPopulatedArrayAddInfo`1<System.Threading.CancellationCallbackInfo> m_registrationInfo
[[deprecated]] ::System::Threading::SparselyPopulatedArrayAddInfo_1<::System::Threading::CancellationCallbackInfo*>& System::Threading::CancellationTokenRegistration::dyn_m_registrationInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenRegistration::dyn_m_registrationInfo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_registrationInfo"))->offset;
  return *reinterpret_cast<::System::Threading::SparselyPopulatedArrayAddInfo_1<::System::Threading::CancellationCallbackInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.CancellationTokenRegistration..ctor
// ABORTED elsewhere.  System::Threading::CancellationTokenRegistration::CancellationTokenRegistration(::System::Threading::CancellationCallbackInfo* callbackInfo, ::System::Threading::SparselyPopulatedArrayAddInfo_1<::System::Threading::CancellationCallbackInfo*> registrationInfo)
// Autogenerated method: System.Threading.CancellationTokenRegistration.TryDeregister
bool System::Threading::CancellationTokenRegistration::TryDeregister() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenRegistration::TryDeregister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryDeregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenRegistration.Dispose
void System::Threading::CancellationTokenRegistration::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenRegistration::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Threading::CancellationTokenRegistration), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenRegistration.Equals
bool System::Threading::CancellationTokenRegistration::Equals(::System::Threading::CancellationTokenRegistration other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenRegistration::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Threading::CancellationTokenRegistration), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Threading.CancellationTokenRegistration.Equals
bool System::Threading::CancellationTokenRegistration::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenRegistration::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Threading.CancellationTokenRegistration.GetHashCode
int System::Threading::CancellationTokenRegistration::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenRegistration::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Threading.SparselyPopulatedArray`1
#include "System/Threading/SparselyPopulatedArray_1.hpp"
// Including type: System.Threading.CancellationCallbackInfo
#include "System/Threading/CancellationCallbackInfo.hpp"
// Including type: System.Threading.Timer
#include "System/Threading/Timer.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.TimerCallback
#include "System/Threading/TimerCallback.hpp"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Threading.CancellationCallbackCoreWorkArguments
#include "System/Threading/CancellationCallbackCoreWorkArguments.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.CancellationTokenSource _staticSource_Set
::System::Threading::CancellationTokenSource* System::Threading::CancellationTokenSource::_get__staticSource_Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_get__staticSource_Set");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::CancellationTokenSource*>("System.Threading", "CancellationTokenSource", "_staticSource_Set"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.CancellationTokenSource _staticSource_Set
void System::Threading::CancellationTokenSource::_set__staticSource_Set(::System::Threading::CancellationTokenSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_set__staticSource_Set");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "_staticSource_Set", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.CancellationTokenSource _staticSource_NotCancelable
::System::Threading::CancellationTokenSource* System::Threading::CancellationTokenSource::_get__staticSource_NotCancelable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_get__staticSource_NotCancelable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::CancellationTokenSource*>("System.Threading", "CancellationTokenSource", "_staticSource_NotCancelable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.CancellationTokenSource _staticSource_NotCancelable
void System::Threading::CancellationTokenSource::_set__staticSource_NotCancelable(::System::Threading::CancellationTokenSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_set__staticSource_NotCancelable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "_staticSource_NotCancelable", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 s_nLists
int System::Threading::CancellationTokenSource::_get_s_nLists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_get_s_nLists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "CancellationTokenSource", "s_nLists"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 s_nLists
void System::Threading::CancellationTokenSource::_set_s_nLists(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_set_s_nLists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "s_nLists", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CANNOT_BE_CANCELED
int System::Threading::CancellationTokenSource::_get_CANNOT_BE_CANCELED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_get_CANNOT_BE_CANCELED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "CancellationTokenSource", "CANNOT_BE_CANCELED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CANNOT_BE_CANCELED
void System::Threading::CancellationTokenSource::_set_CANNOT_BE_CANCELED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_set_CANNOT_BE_CANCELED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "CANNOT_BE_CANCELED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NOT_CANCELED
int System::Threading::CancellationTokenSource::_get_NOT_CANCELED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_get_NOT_CANCELED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "CancellationTokenSource", "NOT_CANCELED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NOT_CANCELED
void System::Threading::CancellationTokenSource::_set_NOT_CANCELED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_set_NOT_CANCELED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "NOT_CANCELED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NOTIFYING
int System::Threading::CancellationTokenSource::_get_NOTIFYING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_get_NOTIFYING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "CancellationTokenSource", "NOTIFYING"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NOTIFYING
void System::Threading::CancellationTokenSource::_set_NOTIFYING(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_set_NOTIFYING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "NOTIFYING", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NOTIFYINGCOMPLETE
int System::Threading::CancellationTokenSource::_get_NOTIFYINGCOMPLETE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_get_NOTIFYINGCOMPLETE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "CancellationTokenSource", "NOTIFYINGCOMPLETE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NOTIFYINGCOMPLETE
void System::Threading::CancellationTokenSource::_set_NOTIFYINGCOMPLETE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_set_NOTIFYINGCOMPLETE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "NOTIFYINGCOMPLETE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Action`1<System.Object> s_LinkedTokenCancelDelegate
::System::Action_1<::Il2CppObject*>* System::Threading::CancellationTokenSource::_get_s_LinkedTokenCancelDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_get_s_LinkedTokenCancelDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.Threading", "CancellationTokenSource", "s_LinkedTokenCancelDelegate"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Action`1<System.Object> s_LinkedTokenCancelDelegate
void System::Threading::CancellationTokenSource::_set_s_LinkedTokenCancelDelegate(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_set_s_LinkedTokenCancelDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "s_LinkedTokenCancelDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.TimerCallback s_timerCallback
::System::Threading::TimerCallback* System::Threading::CancellationTokenSource::_get_s_timerCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_get_s_timerCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::TimerCallback*>("System.Threading", "CancellationTokenSource", "s_timerCallback"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.TimerCallback s_timerCallback
void System::Threading::CancellationTokenSource::_set_s_timerCallback(::System::Threading::TimerCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_set_s_timerCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "s_timerCallback", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent m_kernelEvent
[[deprecated]] ::System::Threading::ManualResetEvent*& System::Threading::CancellationTokenSource::dyn_m_kernelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::dyn_m_kernelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_kernelEvent"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SparselyPopulatedArray`1<System.Threading.CancellationCallbackInfo>[] m_registeredCallbacksLists
[[deprecated]] ::ArrayW<::System::Threading::SparselyPopulatedArray_1<::System::Threading::CancellationCallbackInfo*>*>& System::Threading::CancellationTokenSource::dyn_m_registeredCallbacksLists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::dyn_m_registeredCallbacksLists");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_registeredCallbacksLists"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Threading::SparselyPopulatedArray_1<::System::Threading::CancellationCallbackInfo*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_state
[[deprecated]] int& System::Threading::CancellationTokenSource::dyn_m_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::dyn_m_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_threadIDExecutingCallbacks
[[deprecated]] int& System::Threading::CancellationTokenSource::dyn_m_threadIDExecutingCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::dyn_m_threadIDExecutingCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_threadIDExecutingCallbacks"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_disposed
[[deprecated]] bool& System::Threading::CancellationTokenSource::dyn_m_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::dyn_m_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenRegistration[] m_linkingRegistrations
[[deprecated]] ::ArrayW<::System::Threading::CancellationTokenRegistration>& System::Threading::CancellationTokenSource::dyn_m_linkingRegistrations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::dyn_m_linkingRegistrations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_linkingRegistrations"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Threading::CancellationTokenRegistration>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationCallbackInfo m_executingCallback
[[deprecated]] ::System::Threading::CancellationCallbackInfo*& System::Threading::CancellationTokenSource::dyn_m_executingCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::dyn_m_executingCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_executingCallback"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationCallbackInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Timer m_timer
[[deprecated]] ::System::Threading::Timer*& System::Threading::CancellationTokenSource::dyn_m_timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::dyn_m_timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timer"))->offset;
  return *reinterpret_cast<::System::Threading::Timer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_IsCancellationRequested
bool System::Threading::CancellationTokenSource::get_IsCancellationRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::get_IsCancellationRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCancellationRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_IsCancellationCompleted
bool System::Threading::CancellationTokenSource::get_IsCancellationCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::get_IsCancellationCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCancellationCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_IsDisposed
bool System::Threading::CancellationTokenSource::get_IsDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::get_IsDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_ThreadIDExecutingCallbacks
int System::Threading::CancellationTokenSource::get_ThreadIDExecutingCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::get_ThreadIDExecutingCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ThreadIDExecutingCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.set_ThreadIDExecutingCallbacks
void System::Threading::CancellationTokenSource::set_ThreadIDExecutingCallbacks(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::set_ThreadIDExecutingCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ThreadIDExecutingCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_Token
::System::Threading::CancellationToken System::Threading::CancellationTokenSource::get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::get_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_CanBeCanceled
bool System::Threading::CancellationTokenSource::get_CanBeCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::get_CanBeCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanBeCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_ExecutingCallback
::System::Threading::CancellationCallbackInfo* System::Threading::CancellationTokenSource::get_ExecutingCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::get_ExecutingCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExecutingCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationCallbackInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource..cctor
void System::Threading::CancellationTokenSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationTokenSource", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.LinkedTokenCancelDelegate
void System::Threading::CancellationTokenSource::LinkedTokenCancelDelegate(::Il2CppObject* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::LinkedTokenCancelDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationTokenSource", "LinkedTokenCancelDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: System.Threading.CancellationTokenSource.Cancel
void System::Threading::CancellationTokenSource::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.Cancel
void System::Threading::CancellationTokenSource::Cancel(bool throwOnFirstException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(throwOnFirstException)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, throwOnFirstException);
}
// Autogenerated method: System.Threading.CancellationTokenSource.CancelAfter
void System::Threading::CancellationTokenSource::CancelAfter(int millisecondsDelay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::CancelAfter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsDelay)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, millisecondsDelay);
}
// Autogenerated method: System.Threading.CancellationTokenSource.TimerCallbackLogic
void System::Threading::CancellationTokenSource::TimerCallbackLogic(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::TimerCallbackLogic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationTokenSource", "TimerCallbackLogic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.CancellationTokenSource.Dispose
void System::Threading::CancellationTokenSource::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::CancellationTokenSource*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.Dispose
void System::Threading::CancellationTokenSource::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::CancellationTokenSource*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Threading.CancellationTokenSource.ThrowIfDisposed
void System::Threading::CancellationTokenSource::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.ThrowObjectDisposedException
void System::Threading::CancellationTokenSource::ThrowObjectDisposedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::ThrowObjectDisposedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationTokenSource", "ThrowObjectDisposedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.InternalGetStaticSource
::System::Threading::CancellationTokenSource* System::Threading::CancellationTokenSource::InternalGetStaticSource(bool set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::InternalGetStaticSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationTokenSource", "InternalGetStaticSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationTokenSource*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Threading.CancellationTokenSource.InternalRegister
::System::Threading::CancellationTokenRegistration System::Threading::CancellationTokenSource::InternalRegister(::System::Action_1<::Il2CppObject*>* callback, ::Il2CppObject* stateForCallback, ::System::Threading::SynchronizationContext* targetSyncContext, ::System::Threading::ExecutionContext* executionContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::InternalRegister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(stateForCallback), ::il2cpp_utils::ExtractType(targetSyncContext), ::il2cpp_utils::ExtractType(executionContext)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationTokenRegistration, false>(this, ___internal__method, callback, stateForCallback, targetSyncContext, executionContext);
}
// Autogenerated method: System.Threading.CancellationTokenSource.NotifyCancellation
void System::Threading::CancellationTokenSource::NotifyCancellation(bool throwOnFirstException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::NotifyCancellation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyCancellation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(throwOnFirstException)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, throwOnFirstException);
}
// Autogenerated method: System.Threading.CancellationTokenSource.ExecuteCallbackHandlers
void System::Threading::CancellationTokenSource::ExecuteCallbackHandlers(bool throwOnFirstException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::ExecuteCallbackHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteCallbackHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(throwOnFirstException)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, throwOnFirstException);
}
// Autogenerated method: System.Threading.CancellationTokenSource.CancellationCallbackCoreWork_OnSyncContext
void System::Threading::CancellationTokenSource::CancellationCallbackCoreWork_OnSyncContext(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::CancellationCallbackCoreWork_OnSyncContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancellationCallbackCoreWork_OnSyncContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Threading.CancellationTokenSource.CancellationCallbackCoreWork
void System::Threading::CancellationTokenSource::CancellationCallbackCoreWork(::System::Threading::CancellationCallbackCoreWorkArguments args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::CancellationCallbackCoreWork");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancellationCallbackCoreWork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: System.Threading.CancellationTokenSource.CreateLinkedTokenSource
::System::Threading::CancellationTokenSource* System::Threading::CancellationTokenSource::CreateLinkedTokenSource(::System::Threading::CancellationToken token1, ::System::Threading::CancellationToken token2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::CreateLinkedTokenSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationTokenSource", "CreateLinkedTokenSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token1), ::il2cpp_utils::ExtractType(token2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationTokenSource*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token1, token2);
}
// Autogenerated method: System.Threading.CancellationTokenSource.CreateLinkedTokenSource
::System::Threading::CancellationTokenSource* System::Threading::CancellationTokenSource::CreateLinkedTokenSource(::ArrayW<::System::Threading::CancellationToken> tokens) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::CreateLinkedTokenSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationTokenSource", "CreateLinkedTokenSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tokens)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationTokenSource*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tokens);
}
// Autogenerated method: System.Threading.CancellationTokenSource.WaitForCallbackToComplete
void System::Threading::CancellationTokenSource::WaitForCallbackToComplete(::System::Threading::CancellationCallbackInfo* callbackInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::WaitForCallbackToComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForCallbackToComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callbackInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.CancellationCallbackCoreWorkArguments
#include "System/Threading/CancellationCallbackCoreWorkArguments.hpp"
// Including type: System.Threading.SparselyPopulatedArrayFragment`1
#include "System/Threading/SparselyPopulatedArrayFragment_1.hpp"
// Including type: System.Threading.CancellationCallbackInfo
#include "System/Threading/CancellationCallbackInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Threading.SparselyPopulatedArrayFragment`1<System.Threading.CancellationCallbackInfo> m_currArrayFragment
[[deprecated]] ::System::Threading::SparselyPopulatedArrayFragment_1<::System::Threading::CancellationCallbackInfo*>*& System::Threading::CancellationCallbackCoreWorkArguments::dyn_m_currArrayFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackCoreWorkArguments::dyn_m_currArrayFragment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currArrayFragment"))->offset;
  return *reinterpret_cast<::System::Threading::SparselyPopulatedArrayFragment_1<::System::Threading::CancellationCallbackInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_currArrayIndex
[[deprecated]] int& System::Threading::CancellationCallbackCoreWorkArguments::dyn_m_currArrayIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackCoreWorkArguments::dyn_m_currArrayIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currArrayIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.CancellationCallbackCoreWorkArguments..ctor
// ABORTED elsewhere.  System::Threading::CancellationCallbackCoreWorkArguments::CancellationCallbackCoreWorkArguments(::System::Threading::SparselyPopulatedArrayFragment_1<::System::Threading::CancellationCallbackInfo*>* currArrayFragment, int currArrayIndex)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.CancellationCallbackInfo
#include "System/Threading/CancellationCallbackInfo.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.ContextCallback s_executionContextCallback
::System::Threading::ContextCallback* System::Threading::CancellationCallbackInfo::_get_s_executionContextCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackInfo::_get_s_executionContextCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ContextCallback*>("System.Threading", "CancellationCallbackInfo", "s_executionContextCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ContextCallback s_executionContextCallback
void System::Threading::CancellationCallbackInfo::_set_s_executionContextCallback(::System::Threading::ContextCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackInfo::_set_s_executionContextCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationCallbackInfo", "s_executionContextCallback", value));
}
// Autogenerated instance field getter
// Get instance field: readonly System.Action`1<System.Object> Callback
[[deprecated]] ::System::Action_1<::Il2CppObject*>*& System::Threading::CancellationCallbackInfo::dyn_Callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackInfo::dyn_Callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Callback"))->offset;
  return *reinterpret_cast<::System::Action_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Object StateForCallback
[[deprecated]] ::Il2CppObject*& System::Threading::CancellationCallbackInfo::dyn_StateForCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackInfo::dyn_StateForCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StateForCallback"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Threading.SynchronizationContext TargetSyncContext
[[deprecated]] ::System::Threading::SynchronizationContext*& System::Threading::CancellationCallbackInfo::dyn_TargetSyncContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackInfo::dyn_TargetSyncContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetSyncContext"))->offset;
  return *reinterpret_cast<::System::Threading::SynchronizationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Threading.ExecutionContext TargetExecutionContext
[[deprecated]] ::System::Threading::ExecutionContext*& System::Threading::CancellationCallbackInfo::dyn_TargetExecutionContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackInfo::dyn_TargetExecutionContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetExecutionContext"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Threading.CancellationTokenSource CancellationTokenSource
[[deprecated]] ::System::Threading::CancellationTokenSource*& System::Threading::CancellationCallbackInfo::dyn_CancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackInfo::dyn_CancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CancellationTokenSource"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.CancellationCallbackInfo.ExecuteCallback
void System::Threading::CancellationCallbackInfo::ExecuteCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackInfo::ExecuteCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationCallbackInfo.ExecutionContextCallback
void System::Threading::CancellationCallbackInfo::ExecutionContextCallback(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackInfo::ExecutionContextCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationCallbackInfo", "ExecutionContextCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.LazyInitializer
#include "System/Threading/LazyInitializer.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ManualResetEventSlim
#include "System/Threading/ManualResetEventSlim.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 DEFAULT_SPIN_SP
int System::Threading::ManualResetEventSlim::_get_DEFAULT_SPIN_SP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_DEFAULT_SPIN_SP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "DEFAULT_SPIN_SP"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DEFAULT_SPIN_SP
void System::Threading::ManualResetEventSlim::_set_DEFAULT_SPIN_SP(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_DEFAULT_SPIN_SP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "DEFAULT_SPIN_SP", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DEFAULT_SPIN_MP
int System::Threading::ManualResetEventSlim::_get_DEFAULT_SPIN_MP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_DEFAULT_SPIN_MP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "DEFAULT_SPIN_MP"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DEFAULT_SPIN_MP
void System::Threading::ManualResetEventSlim::_set_DEFAULT_SPIN_MP(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_DEFAULT_SPIN_MP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "DEFAULT_SPIN_MP", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SignalledState_BitMask
int System::Threading::ManualResetEventSlim::_get_SignalledState_BitMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_SignalledState_BitMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "SignalledState_BitMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SignalledState_BitMask
void System::Threading::ManualResetEventSlim::_set_SignalledState_BitMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_SignalledState_BitMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "SignalledState_BitMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SignalledState_ShiftCount
int System::Threading::ManualResetEventSlim::_get_SignalledState_ShiftCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_SignalledState_ShiftCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "SignalledState_ShiftCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SignalledState_ShiftCount
void System::Threading::ManualResetEventSlim::_set_SignalledState_ShiftCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_SignalledState_ShiftCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "SignalledState_ShiftCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 Dispose_BitMask
int System::Threading::ManualResetEventSlim::_get_Dispose_BitMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_Dispose_BitMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "Dispose_BitMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Dispose_BitMask
void System::Threading::ManualResetEventSlim::_set_Dispose_BitMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_Dispose_BitMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "Dispose_BitMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SpinCountState_BitMask
int System::Threading::ManualResetEventSlim::_get_SpinCountState_BitMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_SpinCountState_BitMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "SpinCountState_BitMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SpinCountState_BitMask
void System::Threading::ManualResetEventSlim::_set_SpinCountState_BitMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_SpinCountState_BitMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "SpinCountState_BitMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SpinCountState_ShiftCount
int System::Threading::ManualResetEventSlim::_get_SpinCountState_ShiftCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_SpinCountState_ShiftCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "SpinCountState_ShiftCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SpinCountState_ShiftCount
void System::Threading::ManualResetEventSlim::_set_SpinCountState_ShiftCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_SpinCountState_ShiftCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "SpinCountState_ShiftCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SpinCountState_MaxValue
int System::Threading::ManualResetEventSlim::_get_SpinCountState_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_SpinCountState_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "SpinCountState_MaxValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SpinCountState_MaxValue
void System::Threading::ManualResetEventSlim::_set_SpinCountState_MaxValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_SpinCountState_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "SpinCountState_MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NumWaitersState_BitMask
int System::Threading::ManualResetEventSlim::_get_NumWaitersState_BitMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_NumWaitersState_BitMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "NumWaitersState_BitMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NumWaitersState_BitMask
void System::Threading::ManualResetEventSlim::_set_NumWaitersState_BitMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_NumWaitersState_BitMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "NumWaitersState_BitMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NumWaitersState_ShiftCount
int System::Threading::ManualResetEventSlim::_get_NumWaitersState_ShiftCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_NumWaitersState_ShiftCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "NumWaitersState_ShiftCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NumWaitersState_ShiftCount
void System::Threading::ManualResetEventSlim::_set_NumWaitersState_ShiftCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_NumWaitersState_ShiftCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "NumWaitersState_ShiftCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NumWaitersState_MaxValue
int System::Threading::ManualResetEventSlim::_get_NumWaitersState_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_NumWaitersState_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "NumWaitersState_MaxValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NumWaitersState_MaxValue
void System::Threading::ManualResetEventSlim::_set_NumWaitersState_MaxValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_NumWaitersState_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "NumWaitersState_MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> s_cancellationTokenCallback
::System::Action_1<::Il2CppObject*>* System::Threading::ManualResetEventSlim::_get_s_cancellationTokenCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_s_cancellationTokenCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.Threading", "ManualResetEventSlim", "s_cancellationTokenCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> s_cancellationTokenCallback
void System::Threading::ManualResetEventSlim::_set_s_cancellationTokenCallback(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_s_cancellationTokenCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "s_cancellationTokenCallback", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_lock
[[deprecated]] ::Il2CppObject*& System::Threading::ManualResetEventSlim::dyn_m_lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::dyn_m_lock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent m_eventObj
[[deprecated]] ::System::Threading::ManualResetEvent*& System::Threading::ManualResetEventSlim::dyn_m_eventObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::dyn_m_eventObj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eventObj"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_combinedState
[[deprecated]] int& System::Threading::ManualResetEventSlim::dyn_m_combinedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::dyn_m_combinedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_combinedState"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.get_WaitHandle
::System::Threading::WaitHandle* System::Threading::ManualResetEventSlim::get_WaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::get_WaitHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.get_IsSet
bool System::Threading::ManualResetEventSlim::get_IsSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::get_IsSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.set_IsSet
void System::Threading::ManualResetEventSlim::set_IsSet(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::set_IsSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.get_SpinCount
int System::Threading::ManualResetEventSlim::get_SpinCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::get_SpinCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SpinCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.set_SpinCount
void System::Threading::ManualResetEventSlim::set_SpinCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::set_SpinCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SpinCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.get_Waiters
int System::Threading::ManualResetEventSlim::get_Waiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::get_Waiters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Waiters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.set_Waiters
void System::Threading::ManualResetEventSlim::set_Waiters(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::set_Waiters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Waiters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ManualResetEventSlim..cctor
void System::Threading::ManualResetEventSlim::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ManualResetEventSlim", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.Initialize
void System::Threading::ManualResetEventSlim::Initialize(bool initialState, int spinCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialState), ::il2cpp_utils::ExtractType(spinCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initialState, spinCount);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.EnsureLockObjectCreated
void System::Threading::ManualResetEventSlim::EnsureLockObjectCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::EnsureLockObjectCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureLockObjectCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.LazyInitializeEvent
bool System::Threading::ManualResetEventSlim::LazyInitializeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::LazyInitializeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInitializeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.Set
void System::Threading::ManualResetEventSlim::Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.Set
void System::Threading::ManualResetEventSlim::Set(bool duringCancellation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duringCancellation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, duringCancellation);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.Wait
bool System::Threading::ManualResetEventSlim::Wait(int millisecondsTimeout, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::Wait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Wait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, millisecondsTimeout, cancellationToken);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.Dispose
void System::Threading::ManualResetEventSlim::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::ManualResetEventSlim*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.Dispose
void System::Threading::ManualResetEventSlim::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::ManualResetEventSlim*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.ThrowIfDisposed
void System::Threading::ManualResetEventSlim::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.CancellationTokenCallback
void System::Threading::ManualResetEventSlim::CancellationTokenCallback(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::CancellationTokenCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ManualResetEventSlim", "CancellationTokenCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.UpdateStateAtomically
void System::Threading::ManualResetEventSlim::UpdateStateAtomically(int newBits, int updateBitsMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::UpdateStateAtomically");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStateAtomically", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newBits), ::il2cpp_utils::ExtractType(updateBitsMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newBits, updateBitsMask);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.ExtractStatePortionAndShiftRight
int System::Threading::ManualResetEventSlim::ExtractStatePortionAndShiftRight(int state, int mask, int rightBitShiftCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::ExtractStatePortionAndShiftRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ManualResetEventSlim", "ExtractStatePortionAndShiftRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(rightBitShiftCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state, mask, rightBitShiftCount);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.ExtractStatePortion
int System::Threading::ManualResetEventSlim::ExtractStatePortion(int state, int mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::ExtractStatePortion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ManualResetEventSlim", "ExtractStatePortion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(mask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state, mask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: System.Threading.SemaphoreSlim/System.Threading.TaskNode
#include "System/Threading/SemaphoreSlim_TaskNode.hpp"
// Including type: System.Threading.SemaphoreSlim/System.Threading.<WaitUntilCountOrTimeoutAsync>d__31
#include "System/Threading/SemaphoreSlim_-WaitUntilCountOrTimeoutAsync-d__31.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.Tasks.Task`1<System.Boolean> s_trueTask
::System::Threading::Tasks::Task_1<bool>* System::Threading::SemaphoreSlim::_get_s_trueTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::_get_s_trueTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task_1<bool>*>("System.Threading", "SemaphoreSlim", "s_trueTask"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.Tasks.Task`1<System.Boolean> s_trueTask
void System::Threading::SemaphoreSlim::_set_s_trueTask(::System::Threading::Tasks::Task_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::_set_s_trueTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SemaphoreSlim", "s_trueTask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NO_MAXIMUM
int System::Threading::SemaphoreSlim::_get_NO_MAXIMUM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::_get_NO_MAXIMUM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "SemaphoreSlim", "NO_MAXIMUM"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NO_MAXIMUM
void System::Threading::SemaphoreSlim::_set_NO_MAXIMUM(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::_set_NO_MAXIMUM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SemaphoreSlim", "NO_MAXIMUM", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> s_cancellationTokenCanceledEventHandler
::System::Action_1<::Il2CppObject*>* System::Threading::SemaphoreSlim::_get_s_cancellationTokenCanceledEventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::_get_s_cancellationTokenCanceledEventHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.Threading", "SemaphoreSlim", "s_cancellationTokenCanceledEventHandler"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> s_cancellationTokenCanceledEventHandler
void System::Threading::SemaphoreSlim::_set_s_cancellationTokenCanceledEventHandler(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::_set_s_cancellationTokenCanceledEventHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SemaphoreSlim", "s_cancellationTokenCanceledEventHandler", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_currentCount
[[deprecated]] int& System::Threading::SemaphoreSlim::dyn_m_currentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::dyn_m_currentCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 m_maxCount
[[deprecated]] int& System::Threading::SemaphoreSlim::dyn_m_maxCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::dyn_m_maxCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_waitCount
[[deprecated]] int& System::Threading::SemaphoreSlim::dyn_m_waitCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::dyn_m_waitCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_waitCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_lockObj
[[deprecated]] ::Il2CppObject*& System::Threading::SemaphoreSlim::dyn_m_lockObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::dyn_m_lockObj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lockObj"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent m_waitHandle
[[deprecated]] ::System::Threading::ManualResetEvent*& System::Threading::SemaphoreSlim::dyn_m_waitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::dyn_m_waitHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_waitHandle"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SemaphoreSlim/System.Threading.TaskNode m_asyncHead
[[deprecated]] ::System::Threading::SemaphoreSlim::TaskNode*& System::Threading::SemaphoreSlim::dyn_m_asyncHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::dyn_m_asyncHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_asyncHead"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim::TaskNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SemaphoreSlim/System.Threading.TaskNode m_asyncTail
[[deprecated]] ::System::Threading::SemaphoreSlim::TaskNode*& System::Threading::SemaphoreSlim::dyn_m_asyncTail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::dyn_m_asyncTail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_asyncTail"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim::TaskNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.SemaphoreSlim..cctor
void System::Threading::SemaphoreSlim::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "SemaphoreSlim", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.Wait
void System::Threading::SemaphoreSlim::Wait() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::Wait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Wait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.Wait
bool System::Threading::SemaphoreSlim::Wait(int millisecondsTimeout, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::Wait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Wait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, millisecondsTimeout, cancellationToken);
}
// Autogenerated method: System.Threading.SemaphoreSlim.WaitUntilCountOrTimeout
bool System::Threading::SemaphoreSlim::WaitUntilCountOrTimeout(int millisecondsTimeout, uint startTime, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::WaitUntilCountOrTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitUntilCountOrTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(startTime), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, millisecondsTimeout, startTime, cancellationToken);
}
// Autogenerated method: System.Threading.SemaphoreSlim.WaitAsync
::System::Threading::Tasks::Task* System::Threading::SemaphoreSlim::WaitAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::WaitAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.WaitAsync
::System::Threading::Tasks::Task_1<bool>* System::Threading::SemaphoreSlim::WaitAsync(int millisecondsTimeout, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::WaitAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, millisecondsTimeout, cancellationToken);
}
// Autogenerated method: System.Threading.SemaphoreSlim.CreateAndAddAsyncWaiter
::System::Threading::SemaphoreSlim::TaskNode* System::Threading::SemaphoreSlim::CreateAndAddAsyncWaiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::CreateAndAddAsyncWaiter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAndAddAsyncWaiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SemaphoreSlim::TaskNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.RemoveAsyncWaiter
bool System::Threading::SemaphoreSlim::RemoveAsyncWaiter(::System::Threading::SemaphoreSlim::TaskNode* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::RemoveAsyncWaiter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAsyncWaiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, task);
}
// Autogenerated method: System.Threading.SemaphoreSlim.WaitUntilCountOrTimeoutAsync
::System::Threading::Tasks::Task_1<bool>* System::Threading::SemaphoreSlim::WaitUntilCountOrTimeoutAsync(::System::Threading::SemaphoreSlim::TaskNode* asyncWaiter, int millisecondsTimeout, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::WaitUntilCountOrTimeoutAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitUntilCountOrTimeoutAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncWaiter), ::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, asyncWaiter, millisecondsTimeout, cancellationToken);
}
// Autogenerated method: System.Threading.SemaphoreSlim.Release
int System::Threading::SemaphoreSlim::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.Release
int System::Threading::SemaphoreSlim::Release(int releaseCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(releaseCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, releaseCount);
}
// Autogenerated method: System.Threading.SemaphoreSlim.QueueWaiterTask
void System::Threading::SemaphoreSlim::QueueWaiterTask(::System::Threading::SemaphoreSlim::TaskNode* waiterTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::QueueWaiterTask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "SemaphoreSlim", "QueueWaiterTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waiterTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, waiterTask);
}
// Autogenerated method: System.Threading.SemaphoreSlim.Dispose
void System::Threading::SemaphoreSlim::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SemaphoreSlim*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.Dispose
void System::Threading::SemaphoreSlim::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SemaphoreSlim*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Threading.SemaphoreSlim.CancellationTokenCanceledEventHandler
void System::Threading::SemaphoreSlim::CancellationTokenCanceledEventHandler(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::CancellationTokenCanceledEventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "SemaphoreSlim", "CancellationTokenCanceledEventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.SemaphoreSlim.CheckDispose
void System::Threading::SemaphoreSlim::CheckDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::CheckDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.GetResourceString
::StringW System::Threading::SemaphoreSlim::GetResourceString(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::GetResourceString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "SemaphoreSlim", "GetResourceString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.SemaphoreSlim/System.Threading.TaskNode
#include "System/Threading/SemaphoreSlim_TaskNode.hpp"
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Threading.SemaphoreSlim/System.Threading.TaskNode Prev
[[deprecated]] ::System::Threading::SemaphoreSlim::TaskNode*& System::Threading::SemaphoreSlim::TaskNode::dyn_Prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::TaskNode::dyn_Prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Prev"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim::TaskNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Threading.SemaphoreSlim/System.Threading.TaskNode Next
[[deprecated]] ::System::Threading::SemaphoreSlim::TaskNode*& System::Threading::SemaphoreSlim::TaskNode::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::TaskNode::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim::TaskNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.SemaphoreSlim/System.Threading.TaskNode.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem
void System::Threading::SemaphoreSlim::TaskNode::System_Threading_IThreadPoolWorkItem_ExecuteWorkItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::TaskNode::System.Threading.IThreadPoolWorkItem.ExecuteWorkItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SemaphoreSlim::TaskNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim/System.Threading.TaskNode.System.Threading.IThreadPoolWorkItem.MarkAborted
void System::Threading::SemaphoreSlim::TaskNode::System_Threading_IThreadPoolWorkItem_MarkAborted(::System::Threading::ThreadAbortException* tae) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::TaskNode::System.Threading.IThreadPoolWorkItem.MarkAborted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SemaphoreSlim::TaskNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tae);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.SemaphoreSlim/System.Threading.<WaitUntilCountOrTimeoutAsync>d__31
#include "System/Threading/SemaphoreSlim_-WaitUntilCountOrTimeoutAsync-d__31.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.SemaphoreSlim/System.Threading.TaskNode
#include "System/Threading/SemaphoreSlim_TaskNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated]] int& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Boolean> <>t__builder
[[deprecated]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated]] ::System::Threading::CancellationToken& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.SemaphoreSlim/System.Threading.TaskNode asyncWaiter
[[deprecated]] ::System::Threading::SemaphoreSlim::TaskNode*& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_asyncWaiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_asyncWaiter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncWaiter"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim::TaskNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 millisecondsTimeout
[[deprecated]] int& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_millisecondsTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_millisecondsTimeout");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "millisecondsTimeout"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource <cts>5__1
[[deprecated]] ::System::Threading::CancellationTokenSource*& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$cts$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$cts$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cts>5__1"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.SemaphoreSlim <>4__this
[[deprecated]] ::System::Threading::SemaphoreSlim*& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>7__wrap1
[[deprecated]] ::Il2CppObject*& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$7__wrap1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Threading.Tasks.Task> <>u__1
[[deprecated]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Threading::Tasks::Task*>::ConfiguredTaskAwaiter& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Threading::Tasks::Task*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Boolean> <>u__2
[[deprecated]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<bool>::ConfiguredTaskAwaiter& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<bool>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.SemaphoreSlim/System.Threading.<WaitUntilCountOrTimeoutAsync>d__31.MoveNext
void System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim/System.Threading.<WaitUntilCountOrTimeoutAsync>d__31.SetStateMachine
void System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.SpinLock
#include "System/Threading/SpinLock.hpp"
// Including type: System.Threading.SpinLock/System.Threading.SystemThreading_SpinLockDebugView
#include "System/Threading/SpinLock_SystemThreading_SpinLockDebugView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MAXIMUM_WAITERS
int System::Threading::SpinLock::_get_MAXIMUM_WAITERS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::_get_MAXIMUM_WAITERS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "SpinLock", "MAXIMUM_WAITERS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MAXIMUM_WAITERS
void System::Threading::SpinLock::_set_MAXIMUM_WAITERS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::_set_MAXIMUM_WAITERS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SpinLock", "MAXIMUM_WAITERS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_owner
[[deprecated]] int& System::Threading::SpinLock::dyn_m_owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::dyn_m_owner");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_owner"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.SpinLock.get_IsHeldByCurrentThread
bool System::Threading::SpinLock::get_IsHeldByCurrentThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::get_IsHeldByCurrentThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsHeldByCurrentThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SpinLock.get_IsThreadOwnerTrackingEnabled
bool System::Threading::SpinLock::get_IsThreadOwnerTrackingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::get_IsThreadOwnerTrackingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsThreadOwnerTrackingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SpinLock..ctor
System::Threading::SpinLock::SpinLock(bool enableThreadOwnerTracking) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enableThreadOwnerTracking)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enableThreadOwnerTracking);
}
// Autogenerated method: System.Threading.SpinLock..cctor
void System::Threading::SpinLock::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "SpinLock", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.SpinLock.Enter
void System::Threading::SpinLock::Enter(ByRef<bool> lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::Enter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Enter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lockTaken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(lockTaken));
}
// Autogenerated method: System.Threading.SpinLock.TryEnter
void System::Threading::SpinLock::TryEnter(int millisecondsTimeout, ByRef<bool> lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::TryEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(lockTaken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, millisecondsTimeout, byref(lockTaken));
}
// Autogenerated method: System.Threading.SpinLock.ContinueTryEnter
void System::Threading::SpinLock::ContinueTryEnter(int millisecondsTimeout, ByRef<bool> lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::ContinueTryEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ContinueTryEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(lockTaken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, millisecondsTimeout, byref(lockTaken));
}
// Autogenerated method: System.Threading.SpinLock.DecrementWaiters
void System::Threading::SpinLock::DecrementWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::DecrementWaiters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "DecrementWaiters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SpinLock.ContinueTryEnterWithThreadTracking
void System::Threading::SpinLock::ContinueTryEnterWithThreadTracking(int millisecondsTimeout, uint startTime, ByRef<bool> lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::ContinueTryEnterWithThreadTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ContinueTryEnterWithThreadTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(startTime), ::il2cpp_utils::ExtractType(lockTaken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, millisecondsTimeout, startTime, byref(lockTaken));
}
// Autogenerated method: System.Threading.SpinLock.Exit
void System::Threading::SpinLock::Exit(bool useMemoryBarrier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::Exit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Exit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useMemoryBarrier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, useMemoryBarrier);
}
// Autogenerated method: System.Threading.SpinLock.ExitSlowPath
void System::Threading::SpinLock::ExitSlowPath(bool useMemoryBarrier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::ExitSlowPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ExitSlowPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useMemoryBarrier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, useMemoryBarrier);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.SpinWait
#include "System/Threading/SpinWait.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_count
[[deprecated]] int& System::Threading::SpinWait::dyn_m_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinWait::dyn_m_count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.SpinWait.get_NextSpinWillYield
bool System::Threading::SpinWait::get_NextSpinWillYield() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinWait::get_NextSpinWillYield");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NextSpinWillYield", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SpinWait.SpinOnce
void System::Threading::SpinWait::SpinOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinWait::SpinOnce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SpinOnce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.PlatformHelper
#include "System/Threading/PlatformHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 s_processorCount
int System::Threading::PlatformHelper::_get_s_processorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::PlatformHelper::_get_s_processorCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "PlatformHelper", "s_processorCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_processorCount
void System::Threading::PlatformHelper::_set_s_processorCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::PlatformHelper::_set_s_processorCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "PlatformHelper", "s_processorCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_lastProcessorCountRefreshTicks
int System::Threading::PlatformHelper::_get_s_lastProcessorCountRefreshTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::PlatformHelper::_get_s_lastProcessorCountRefreshTicks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "PlatformHelper", "s_lastProcessorCountRefreshTicks"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_lastProcessorCountRefreshTicks
void System::Threading::PlatformHelper::_set_s_lastProcessorCountRefreshTicks(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::PlatformHelper::_set_s_lastProcessorCountRefreshTicks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "PlatformHelper", "s_lastProcessorCountRefreshTicks", value));
}
// Autogenerated method: System.Threading.PlatformHelper.get_ProcessorCount
int System::Threading::PlatformHelper::get_ProcessorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::PlatformHelper::get_ProcessorCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "PlatformHelper", "get_ProcessorCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.PlatformHelper.get_IsSingleProcessor
bool System::Threading::PlatformHelper::get_IsSingleProcessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::PlatformHelper::get_IsSingleProcessor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "PlatformHelper", "get_IsSingleProcessor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.TimeoutHelper
#include "System/Threading/TimeoutHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.TimeoutHelper.GetTime
uint System::Threading::TimeoutHelper::GetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::TimeoutHelper::GetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "TimeoutHelper", "GetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.TimeoutHelper.UpdateTimeOut
int System::Threading::TimeoutHelper::UpdateTimeOut(uint startTime, int originalWaitMillisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::TimeoutHelper::UpdateTimeOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "TimeoutHelper", "UpdateTimeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTime), ::il2cpp_utils::ExtractType(originalWaitMillisecondsTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startTime, originalWaitMillisecondsTimeout);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.AbandonedMutexException
#include "System/Threading/AbandonedMutexException.hpp"
// Including type: System.Threading.Mutex
#include "System/Threading/Mutex.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_MutexIndex
[[deprecated]] int& System::Threading::AbandonedMutexException::dyn_m_MutexIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::AbandonedMutexException::dyn_m_MutexIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MutexIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Mutex m_Mutex
[[deprecated]] ::System::Threading::Mutex*& System::Threading::AbandonedMutexException::dyn_m_Mutex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::AbandonedMutexException::dyn_m_Mutex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Mutex"))->offset;
  return *reinterpret_cast<::System::Threading::Mutex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.AbandonedMutexException.SetupException
void System::Threading::AbandonedMutexException::SetupException(int location, ::System::Threading::WaitHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::AbandonedMutexException::SetupException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, location, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.IAsyncLocal
#include "System/Threading/IAsyncLocal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.IAsyncLocal.OnValueChanged
void System::Threading::IAsyncLocal::OnValueChanged(::Il2CppObject* previousValue, ::Il2CppObject* currentValue, bool contextChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::IAsyncLocal::OnValueChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::IAsyncLocal*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousValue, currentValue, contextChanged);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.AutoResetEvent
#include "System/Threading/AutoResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.EventResetMode
#include "System/Threading/EventResetMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.EventResetMode AutoReset
::System::Threading::EventResetMode System::Threading::EventResetMode::_get_AutoReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::EventResetMode::_get_AutoReset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::EventResetMode>("System.Threading", "EventResetMode", "AutoReset"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.EventResetMode AutoReset
void System::Threading::EventResetMode::_set_AutoReset(::System::Threading::EventResetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::EventResetMode::_set_AutoReset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "EventResetMode", "AutoReset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.EventResetMode ManualReset
::System::Threading::EventResetMode System::Threading::EventResetMode::_get_ManualReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::EventResetMode::_get_ManualReset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::EventResetMode>("System.Threading", "EventResetMode", "ManualReset"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.EventResetMode ManualReset
void System::Threading::EventResetMode::_set_ManualReset(::System::Threading::EventResetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::EventResetMode::_set_ManualReset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "EventResetMode", "ManualReset", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Threading::EventResetMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::EventResetMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.EventWaitHandle
#include "System/Threading/EventWaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.EventWaitHandle.Reset
bool System::Threading::EventWaitHandle::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::EventWaitHandle::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.EventWaitHandle.Set
bool System::Threading::EventWaitHandle::Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::EventWaitHandle::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.ContextCallback.Invoke
void System::Threading::ContextCallback::Invoke(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ContextCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::ContextCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Threading.ContextCallback.BeginInvoke
::System::IAsyncResult* System::Threading::ContextCallback::BeginInvoke(::Il2CppObject* state, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ContextCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::ContextCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, state, callback, object);
}
// Autogenerated method: System.Threading.ContextCallback.EndInvoke
void System::Threading::ContextCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ContextCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::ContextCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ExecutionContextSwitcher
#include "System/Threading/ExecutionContextSwitcher.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Threading.ExecutionContext/System.Threading.Reader outerEC
[[deprecated]] ::System::Threading::ExecutionContext::Reader& System::Threading::ExecutionContextSwitcher::dyn_outerEC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContextSwitcher::dyn_outerEC");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outerEC"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext::Reader*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean outerECBelongsToScope
[[deprecated]] bool& System::Threading::ExecutionContextSwitcher::dyn_outerECBelongsToScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContextSwitcher::dyn_outerECBelongsToScope");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outerECBelongsToScope"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object hecsw
[[deprecated]] ::Il2CppObject*& System::Threading::ExecutionContextSwitcher::dyn_hecsw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContextSwitcher::dyn_hecsw");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hecsw"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Threading.Thread thread
[[deprecated]] ::System::Threading::Thread*& System::Threading::ExecutionContextSwitcher::dyn_thread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContextSwitcher::dyn_thread");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thread"))->offset;
  return *reinterpret_cast<::System::Threading::Thread**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ExecutionContextSwitcher.UndoNoThrow
bool System::Threading::ExecutionContextSwitcher::UndoNoThrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContextSwitcher::UndoNoThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UndoNoThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContextSwitcher.Undo
void System::Threading::ExecutionContextSwitcher::Undo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContextSwitcher::Undo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Undo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Threading.ExecutionContext/System.Threading.Reader
#include "System/Threading/ExecutionContext_Reader.hpp"
// Including type: System.Threading.ExecutionContext/System.Threading.CaptureOptions
#include "System/Threading/ExecutionContext_CaptureOptions.hpp"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Including type: System.Runtime.Remoting.Messaging.LogicalCallContext
#include "System/Runtime/Remoting/Messaging/LogicalCallContext.hpp"
// Including type: System.Runtime.Remoting.Messaging.IllogicalCallContext
#include "System/Runtime/Remoting/Messaging/IllogicalCallContext.hpp"
// Including type: System.Threading.IAsyncLocal
#include "System/Threading/IAsyncLocal.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
// Including type: System.Threading.ExecutionContextSwitcher
#include "System/Threading/ExecutionContextSwitcher.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: System.Threading.StackCrawlMark
#include "System/Threading/StackCrawlMark.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.ExecutionContext s_dummyDefaultEC
::System::Threading::ExecutionContext* System::Threading::ExecutionContext::_get_s_dummyDefaultEC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::_get_s_dummyDefaultEC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ExecutionContext*>("System.Threading", "ExecutionContext", "s_dummyDefaultEC"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.ExecutionContext s_dummyDefaultEC
void System::Threading::ExecutionContext::_set_s_dummyDefaultEC(::System::Threading::ExecutionContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::_set_s_dummyDefaultEC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext", "s_dummyDefaultEC", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SynchronizationContext _syncContext
[[deprecated]] ::System::Threading::SynchronizationContext*& System::Threading::ExecutionContext::dyn__syncContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::dyn__syncContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncContext"))->offset;
  return *reinterpret_cast<::System::Threading::SynchronizationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SynchronizationContext _syncContextNoFlow
[[deprecated]] ::System::Threading::SynchronizationContext*& System::Threading::ExecutionContext::dyn__syncContextNoFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::dyn__syncContextNoFlow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncContextNoFlow"))->offset;
  return *reinterpret_cast<::System::Threading::SynchronizationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Remoting.Messaging.LogicalCallContext _logicalCallContext
[[deprecated]] ::System::Runtime::Remoting::Messaging::LogicalCallContext*& System::Threading::ExecutionContext::dyn__logicalCallContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::dyn__logicalCallContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logicalCallContext"))->offset;
  return *reinterpret_cast<::System::Runtime::Remoting::Messaging::LogicalCallContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Remoting.Messaging.IllogicalCallContext _illogicalCallContext
[[deprecated]] ::System::Runtime::Remoting::Messaging::IllogicalCallContext*& System::Threading::ExecutionContext::dyn__illogicalCallContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::dyn__illogicalCallContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_illogicalCallContext"))->offset;
  return *reinterpret_cast<::System::Runtime::Remoting::Messaging::IllogicalCallContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ExecutionContext/System.Threading.Flags _flags
[[deprecated]] ::System::Threading::ExecutionContext::Flags& System::Threading::ExecutionContext::dyn__flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::dyn__flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flags"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext::Flags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Threading.IAsyncLocal,System.Object> _localValues
[[deprecated]] ::System::Collections::Generic::Dictionary_2<::System::Threading::IAsyncLocal*, ::Il2CppObject*>*& System::Threading::ExecutionContext::dyn__localValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::dyn__localValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localValues"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Threading::IAsyncLocal*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Threading.IAsyncLocal> _localChangeNotifications
[[deprecated]] ::System::Collections::Generic::List_1<::System::Threading::IAsyncLocal*>*& System::Threading::ExecutionContext::dyn__localChangeNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::dyn__localChangeNotifications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localChangeNotifications"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Threading::IAsyncLocal*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ExecutionContext.get_isNewCapture
bool System::Threading::ExecutionContext::get_isNewCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::get_isNewCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isNewCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.set_isNewCapture
void System::Threading::ExecutionContext::set_isNewCapture(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::set_isNewCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isNewCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ExecutionContext.get_isFlowSuppressed
bool System::Threading::ExecutionContext::get_isFlowSuppressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::get_isFlowSuppressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isFlowSuppressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.set_isFlowSuppressed
void System::Threading::ExecutionContext::set_isFlowSuppressed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::set_isFlowSuppressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isFlowSuppressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ExecutionContext.get_PreAllocatedDefault
::System::Threading::ExecutionContext* System::Threading::ExecutionContext::get_PreAllocatedDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::get_PreAllocatedDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "get_PreAllocatedDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.get_IsPreAllocatedDefault
bool System::Threading::ExecutionContext::get_IsPreAllocatedDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::get_IsPreAllocatedDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPreAllocatedDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.get_LogicalCallContext
::System::Runtime::Remoting::Messaging::LogicalCallContext* System::Threading::ExecutionContext::get_LogicalCallContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::get_LogicalCallContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LogicalCallContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::LogicalCallContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.set_LogicalCallContext
void System::Threading::ExecutionContext::set_LogicalCallContext(::System::Runtime::Remoting::Messaging::LogicalCallContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::set_LogicalCallContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LogicalCallContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ExecutionContext.get_IllogicalCallContext
::System::Runtime::Remoting::Messaging::IllogicalCallContext* System::Threading::ExecutionContext::get_IllogicalCallContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::get_IllogicalCallContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IllogicalCallContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::IllogicalCallContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.set_IllogicalCallContext
void System::Threading::ExecutionContext::set_IllogicalCallContext(::System::Runtime::Remoting::Messaging::IllogicalCallContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::set_IllogicalCallContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IllogicalCallContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ExecutionContext.get_SynchronizationContext
::System::Threading::SynchronizationContext* System::Threading::ExecutionContext::get_SynchronizationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::get_SynchronizationContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SynchronizationContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.set_SynchronizationContext
void System::Threading::ExecutionContext::set_SynchronizationContext(::System::Threading::SynchronizationContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::set_SynchronizationContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SynchronizationContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ExecutionContext.get_SynchronizationContextNoFlow
::System::Threading::SynchronizationContext* System::Threading::ExecutionContext::get_SynchronizationContextNoFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::get_SynchronizationContextNoFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SynchronizationContextNoFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.set_SynchronizationContextNoFlow
void System::Threading::ExecutionContext::set_SynchronizationContextNoFlow(::System::Threading::SynchronizationContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::set_SynchronizationContextNoFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SynchronizationContextNoFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ExecutionContext..cctor
void System::Threading::ExecutionContext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.OnAsyncLocalContextChanged
void System::Threading::ExecutionContext::OnAsyncLocalContextChanged(::System::Threading::ExecutionContext* previous, ::System::Threading::ExecutionContext* current) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::OnAsyncLocalContextChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "OnAsyncLocalContextChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previous), ::il2cpp_utils::ExtractType(current)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, previous, current);
}
// Autogenerated method: System.Threading.ExecutionContext.Dispose
void System::Threading::ExecutionContext::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::ExecutionContext*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.Run
void System::Threading::ExecutionContext::Run(::System::Threading::ExecutionContext* executionContext, ::System::Threading::ContextCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(executionContext), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, executionContext, callback, state);
}
// Autogenerated method: System.Threading.ExecutionContext.Run
void System::Threading::ExecutionContext::Run(::System::Threading::ExecutionContext* executionContext, ::System::Threading::ContextCallback* callback, ::Il2CppObject* state, bool preserveSyncCtx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(executionContext), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(preserveSyncCtx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, executionContext, callback, state, preserveSyncCtx);
}
// Autogenerated method: System.Threading.ExecutionContext.RunInternal
void System::Threading::ExecutionContext::RunInternal(::System::Threading::ExecutionContext* executionContext, ::System::Threading::ContextCallback* callback, ::Il2CppObject* state, bool preserveSyncCtx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::RunInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "RunInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(executionContext), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(preserveSyncCtx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, executionContext, callback, state, preserveSyncCtx);
}
// Autogenerated method: System.Threading.ExecutionContext.EstablishCopyOnWriteScope
void System::Threading::ExecutionContext::EstablishCopyOnWriteScope(ByRef<::System::Threading::ExecutionContextSwitcher> ecsw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::EstablishCopyOnWriteScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "EstablishCopyOnWriteScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ecsw)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ecsw));
}
// Autogenerated method: System.Threading.ExecutionContext.EstablishCopyOnWriteScope
void System::Threading::ExecutionContext::EstablishCopyOnWriteScope(::System::Threading::Thread* currentThread, bool knownNullWindowsIdentity, ByRef<::System::Threading::ExecutionContextSwitcher> ecsw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::EstablishCopyOnWriteScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "EstablishCopyOnWriteScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentThread), ::il2cpp_utils::ExtractType(knownNullWindowsIdentity), ::il2cpp_utils::ExtractType(ecsw)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, currentThread, knownNullWindowsIdentity, byref(ecsw));
}
// Autogenerated method: System.Threading.ExecutionContext.SetExecutionContext
::System::Threading::ExecutionContextSwitcher System::Threading::ExecutionContext::SetExecutionContext(::System::Threading::ExecutionContext* executionContext, bool preserveSyncCtx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::SetExecutionContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "SetExecutionContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(executionContext), ::il2cpp_utils::ExtractType(preserveSyncCtx)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContextSwitcher, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, executionContext, preserveSyncCtx);
}
// Autogenerated method: System.Threading.ExecutionContext.CreateCopy
::System::Threading::ExecutionContext* System::Threading::ExecutionContext::CreateCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::CreateCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.CreateMutableCopy
::System::Threading::ExecutionContext* System::Threading::ExecutionContext::CreateMutableCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::CreateMutableCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMutableCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.IsFlowSuppressed
bool System::Threading::ExecutionContext::IsFlowSuppressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::IsFlowSuppressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "IsFlowSuppressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.Capture
::System::Threading::ExecutionContext* System::Threading::ExecutionContext::Capture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Capture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "Capture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.FastCapture
::System::Threading::ExecutionContext* System::Threading::ExecutionContext::FastCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::FastCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "FastCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.Capture
::System::Threading::ExecutionContext* System::Threading::ExecutionContext::Capture(ByRef<::System::Threading::StackCrawlMark> stackMark, ::System::Threading::ExecutionContext::CaptureOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Capture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "Capture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stackMark), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(stackMark), options);
}
// Autogenerated method: System.Threading.ExecutionContext.GetObjectData
void System::Threading::ExecutionContext::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::ExecutionContext*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Threading.ExecutionContext.IsDefaultFTContext
bool System::Threading::ExecutionContext::IsDefaultFTContext(bool ignoreSyncCtx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::IsDefaultFTContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefaultFTContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignoreSyncCtx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ignoreSyncCtx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ExecutionContext/System.Threading.Flags
#include "System/Threading/ExecutionContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/System.Threading.Flags None
::System::Threading::ExecutionContext::Flags System::Threading::ExecutionContext::Flags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Flags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ExecutionContext::Flags>("System.Threading", "ExecutionContext/Flags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/System.Threading.Flags None
void System::Threading::ExecutionContext::Flags::_set_None(::System::Threading::ExecutionContext::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Flags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/Flags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/System.Threading.Flags IsNewCapture
::System::Threading::ExecutionContext::Flags System::Threading::ExecutionContext::Flags::_get_IsNewCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Flags::_get_IsNewCapture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ExecutionContext::Flags>("System.Threading", "ExecutionContext/Flags", "IsNewCapture"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/System.Threading.Flags IsNewCapture
void System::Threading::ExecutionContext::Flags::_set_IsNewCapture(::System::Threading::ExecutionContext::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Flags::_set_IsNewCapture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/Flags", "IsNewCapture", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/System.Threading.Flags IsFlowSuppressed
::System::Threading::ExecutionContext::Flags System::Threading::ExecutionContext::Flags::_get_IsFlowSuppressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Flags::_get_IsFlowSuppressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ExecutionContext::Flags>("System.Threading", "ExecutionContext/Flags", "IsFlowSuppressed"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/System.Threading.Flags IsFlowSuppressed
void System::Threading::ExecutionContext::Flags::_set_IsFlowSuppressed(::System::Threading::ExecutionContext::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Flags::_set_IsFlowSuppressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/Flags", "IsFlowSuppressed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/System.Threading.Flags IsPreAllocatedDefault
::System::Threading::ExecutionContext::Flags System::Threading::ExecutionContext::Flags::_get_IsPreAllocatedDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Flags::_get_IsPreAllocatedDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ExecutionContext::Flags>("System.Threading", "ExecutionContext/Flags", "IsPreAllocatedDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/System.Threading.Flags IsPreAllocatedDefault
void System::Threading::ExecutionContext::Flags::_set_IsPreAllocatedDefault(::System::Threading::ExecutionContext::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Flags::_set_IsPreAllocatedDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/Flags", "IsPreAllocatedDefault", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Threading::ExecutionContext::Flags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Flags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ExecutionContext/System.Threading.Reader
#include "System/Threading/ExecutionContext_Reader.hpp"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Including type: System.Runtime.Remoting.Messaging.LogicalCallContext/System.Runtime.Remoting.Messaging.Reader
#include "System/Runtime/Remoting/Messaging/LogicalCallContext_Reader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Threading.ExecutionContext m_ec
[[deprecated]] ::System::Threading::ExecutionContext*& System::Threading::ExecutionContext::Reader::dyn_m_ec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Reader::dyn_m_ec");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ec"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ExecutionContext/System.Threading.Reader.get_IsNull
bool System::Threading::ExecutionContext::Reader::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Reader::get_IsNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext/System.Threading.Reader.get_IsFlowSuppressed
bool System::Threading::ExecutionContext::Reader::get_IsFlowSuppressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Reader::get_IsFlowSuppressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsFlowSuppressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext/System.Threading.Reader.get_SynchronizationContext
::System::Threading::SynchronizationContext* System::Threading::ExecutionContext::Reader::get_SynchronizationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Reader::get_SynchronizationContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_SynchronizationContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext/System.Threading.Reader.get_SynchronizationContextNoFlow
::System::Threading::SynchronizationContext* System::Threading::ExecutionContext::Reader::get_SynchronizationContextNoFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Reader::get_SynchronizationContextNoFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_SynchronizationContextNoFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext/System.Threading.Reader.get_LogicalCallContext
::System::Runtime::Remoting::Messaging::LogicalCallContext::Reader System::Threading::ExecutionContext::Reader::get_LogicalCallContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Reader::get_LogicalCallContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LogicalCallContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::LogicalCallContext::Reader, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext/System.Threading.Reader..ctor
// ABORTED elsewhere.  System::Threading::ExecutionContext::Reader::Reader(::System::Threading::ExecutionContext* ec)
// Autogenerated method: System.Threading.ExecutionContext/System.Threading.Reader.DangerousGetRawExecutionContext
::System::Threading::ExecutionContext* System::Threading::ExecutionContext::Reader::DangerousGetRawExecutionContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Reader::DangerousGetRawExecutionContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "DangerousGetRawExecutionContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext/System.Threading.Reader.IsDefaultFTContext
bool System::Threading::ExecutionContext::Reader::IsDefaultFTContext(bool ignoreSyncCtx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Reader::IsDefaultFTContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsDefaultFTContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignoreSyncCtx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ignoreSyncCtx);
}
// Autogenerated method: System.Threading.ExecutionContext/System.Threading.Reader.HasSameLocalValues
bool System::Threading::ExecutionContext::Reader::HasSameLocalValues(::System::Threading::ExecutionContext* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Reader::HasSameLocalValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "HasSameLocalValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ExecutionContext/System.Threading.CaptureOptions
#include "System/Threading/ExecutionContext_CaptureOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/System.Threading.CaptureOptions None
::System::Threading::ExecutionContext::CaptureOptions System::Threading::ExecutionContext::CaptureOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::CaptureOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ExecutionContext::CaptureOptions>("System.Threading", "ExecutionContext/CaptureOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/System.Threading.CaptureOptions None
void System::Threading::ExecutionContext::CaptureOptions::_set_None(::System::Threading::ExecutionContext::CaptureOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::CaptureOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/CaptureOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/System.Threading.CaptureOptions IgnoreSyncCtx
::System::Threading::ExecutionContext::CaptureOptions System::Threading::ExecutionContext::CaptureOptions::_get_IgnoreSyncCtx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::CaptureOptions::_get_IgnoreSyncCtx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ExecutionContext::CaptureOptions>("System.Threading", "ExecutionContext/CaptureOptions", "IgnoreSyncCtx"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/System.Threading.CaptureOptions IgnoreSyncCtx
void System::Threading::ExecutionContext::CaptureOptions::_set_IgnoreSyncCtx(::System::Threading::ExecutionContext::CaptureOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::CaptureOptions::_set_IgnoreSyncCtx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/CaptureOptions", "IgnoreSyncCtx", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/System.Threading.CaptureOptions OptimizeDefaultCase
::System::Threading::ExecutionContext::CaptureOptions System::Threading::ExecutionContext::CaptureOptions::_get_OptimizeDefaultCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::CaptureOptions::_get_OptimizeDefaultCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ExecutionContext::CaptureOptions>("System.Threading", "ExecutionContext/CaptureOptions", "OptimizeDefaultCase"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/System.Threading.CaptureOptions OptimizeDefaultCase
void System::Threading::ExecutionContext::CaptureOptions::_set_OptimizeDefaultCase(::System::Threading::ExecutionContext::CaptureOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::CaptureOptions::_set_OptimizeDefaultCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/CaptureOptions", "OptimizeDefaultCase", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Threading::ExecutionContext::CaptureOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::CaptureOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.LockRecursionException
#include "System/Threading/LockRecursionException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Monitor
#include "System/Threading/Monitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Monitor.Enter
void System::Threading::Monitor::Enter(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Enter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Enter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.Enter
void System::Threading::Monitor::Enter(::Il2CppObject* obj, ByRef<bool> lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Enter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Enter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(lockTaken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, byref(lockTaken));
}
// Autogenerated method: System.Threading.Monitor.ThrowLockTakenException
void System::Threading::Monitor::ThrowLockTakenException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::ThrowLockTakenException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "ThrowLockTakenException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Monitor.Exit
void System::Threading::Monitor::Exit(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Exit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Exit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.TryEnter
void System::Threading::Monitor::TryEnter(::Il2CppObject* obj, ByRef<bool> lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::TryEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "TryEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(lockTaken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, byref(lockTaken));
}
// Autogenerated method: System.Threading.Monitor.Wait
bool System::Threading::Monitor::Wait(::Il2CppObject* obj, int millisecondsTimeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Wait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Wait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(exitContext)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, millisecondsTimeout, exitContext);
}
// Autogenerated method: System.Threading.Monitor.Wait
bool System::Threading::Monitor::Wait(::Il2CppObject* obj, int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Wait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Wait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, millisecondsTimeout);
}
// Autogenerated method: System.Threading.Monitor.Pulse
void System::Threading::Monitor::Pulse(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Pulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Pulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.PulseAll
void System::Threading::Monitor::PulseAll(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::PulseAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "PulseAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.Monitor_test_synchronised
bool System::Threading::Monitor::Monitor_test_synchronised(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Monitor_test_synchronised");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Monitor_test_synchronised", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.Monitor_pulse
void System::Threading::Monitor::Monitor_pulse(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Monitor_pulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Monitor_pulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.ObjPulse
void System::Threading::Monitor::ObjPulse(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::ObjPulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "ObjPulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.Monitor_pulse_all
void System::Threading::Monitor::Monitor_pulse_all(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Monitor_pulse_all");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Monitor_pulse_all", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.ObjPulseAll
void System::Threading::Monitor::ObjPulseAll(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::ObjPulseAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "ObjPulseAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.Monitor_wait
bool System::Threading::Monitor::Monitor_wait(::Il2CppObject* obj, int ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Monitor_wait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Monitor_wait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(ms)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, ms);
}
// Autogenerated method: System.Threading.Monitor.ObjWait
bool System::Threading::Monitor::ObjWait(bool exitContext, int millisecondsTimeout, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::ObjWait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "ObjWait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exitContext), ::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exitContext, millisecondsTimeout, obj);
}
// Autogenerated method: System.Threading.Monitor.try_enter_with_atomic_var
void System::Threading::Monitor::try_enter_with_atomic_var(::Il2CppObject* obj, int millisecondsTimeout, ByRef<bool> lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::try_enter_with_atomic_var");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "try_enter_with_atomic_var", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(lockTaken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, millisecondsTimeout, byref(lockTaken));
}
// Autogenerated method: System.Threading.Monitor.ReliableEnterTimeout
void System::Threading::Monitor::ReliableEnterTimeout(::Il2CppObject* obj, int timeout, ByRef<bool> lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::ReliableEnterTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "ReliableEnterTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(timeout), ::il2cpp_utils::ExtractType(lockTaken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, timeout, byref(lockTaken));
}
// Autogenerated method: System.Threading.Monitor.ReliableEnter
void System::Threading::Monitor::ReliableEnter(::Il2CppObject* obj, ByRef<bool> lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::ReliableEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "ReliableEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(lockTaken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, byref(lockTaken));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ParameterizedThreadStart
#include "System/Threading/ParameterizedThreadStart.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.ParameterizedThreadStart.Invoke
void System::Threading::ParameterizedThreadStart::Invoke(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ParameterizedThreadStart::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::ParameterizedThreadStart*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Threading.ParameterizedThreadStart.BeginInvoke
::System::IAsyncResult* System::Threading::ParameterizedThreadStart::BeginInvoke(::Il2CppObject* obj, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ParameterizedThreadStart::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::ParameterizedThreadStart*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, obj, callback, object);
}
// Autogenerated method: System.Threading.ParameterizedThreadStart.EndInvoke
void System::Threading::ParameterizedThreadStart::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ParameterizedThreadStart::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::ParameterizedThreadStart*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.SemaphoreFullException
#include "System/Threading/SemaphoreFullException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.SendOrPostCallback.Invoke
void System::Threading::SendOrPostCallback::Invoke(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SendOrPostCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SendOrPostCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Threading.SendOrPostCallback.BeginInvoke
::System::IAsyncResult* System::Threading::SendOrPostCallback::BeginInvoke(::Il2CppObject* state, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SendOrPostCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SendOrPostCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, state, callback, object);
}
// Autogenerated method: System.Threading.SendOrPostCallback.EndInvoke
void System::Threading::SendOrPostCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SendOrPostCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SendOrPostCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.SynchronizationContextProperties
#include "System/Threading/SynchronizationContextProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.SynchronizationContextProperties None
::System::Threading::SynchronizationContextProperties System::Threading::SynchronizationContextProperties::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContextProperties::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::SynchronizationContextProperties>("System.Threading", "SynchronizationContextProperties", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.SynchronizationContextProperties None
void System::Threading::SynchronizationContextProperties::_set_None(::System::Threading::SynchronizationContextProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContextProperties::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContextProperties", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.SynchronizationContextProperties RequireWaitNotification
::System::Threading::SynchronizationContextProperties System::Threading::SynchronizationContextProperties::_get_RequireWaitNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContextProperties::_get_RequireWaitNotification");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::SynchronizationContextProperties>("System.Threading", "SynchronizationContextProperties", "RequireWaitNotification"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.SynchronizationContextProperties RequireWaitNotification
void System::Threading::SynchronizationContextProperties::_set_RequireWaitNotification(::System::Threading::SynchronizationContextProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContextProperties::_set_RequireWaitNotification");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContextProperties", "RequireWaitNotification", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Threading::SynchronizationContextProperties::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContextProperties::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Type s_cachedPreparedType1
::System::Type* System::Threading::SynchronizationContext::_get_s_cachedPreparedType1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_get_s_cachedPreparedType1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Threading", "SynchronizationContext", "s_cachedPreparedType1"));
}
// Autogenerated static field setter
// Set static field: static private System.Type s_cachedPreparedType1
void System::Threading::SynchronizationContext::_set_s_cachedPreparedType1(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_set_s_cachedPreparedType1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContext", "s_cachedPreparedType1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type s_cachedPreparedType2
::System::Type* System::Threading::SynchronizationContext::_get_s_cachedPreparedType2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_get_s_cachedPreparedType2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Threading", "SynchronizationContext", "s_cachedPreparedType2"));
}
// Autogenerated static field setter
// Set static field: static private System.Type s_cachedPreparedType2
void System::Threading::SynchronizationContext::_set_s_cachedPreparedType2(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_set_s_cachedPreparedType2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContext", "s_cachedPreparedType2", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type s_cachedPreparedType3
::System::Type* System::Threading::SynchronizationContext::_get_s_cachedPreparedType3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_get_s_cachedPreparedType3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Threading", "SynchronizationContext", "s_cachedPreparedType3"));
}
// Autogenerated static field setter
// Set static field: static private System.Type s_cachedPreparedType3
void System::Threading::SynchronizationContext::_set_s_cachedPreparedType3(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_set_s_cachedPreparedType3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContext", "s_cachedPreparedType3", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type s_cachedPreparedType4
::System::Type* System::Threading::SynchronizationContext::_get_s_cachedPreparedType4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_get_s_cachedPreparedType4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Threading", "SynchronizationContext", "s_cachedPreparedType4"));
}
// Autogenerated static field setter
// Set static field: static private System.Type s_cachedPreparedType4
void System::Threading::SynchronizationContext::_set_s_cachedPreparedType4(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_set_s_cachedPreparedType4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContext", "s_cachedPreparedType4", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type s_cachedPreparedType5
::System::Type* System::Threading::SynchronizationContext::_get_s_cachedPreparedType5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_get_s_cachedPreparedType5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Threading", "SynchronizationContext", "s_cachedPreparedType5"));
}
// Autogenerated static field setter
// Set static field: static private System.Type s_cachedPreparedType5
void System::Threading::SynchronizationContext::_set_s_cachedPreparedType5(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_set_s_cachedPreparedType5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContext", "s_cachedPreparedType5", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SynchronizationContextProperties _props
[[deprecated]] ::System::Threading::SynchronizationContextProperties& System::Threading::SynchronizationContext::dyn__props() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::dyn__props");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_props"))->offset;
  return *reinterpret_cast<::System::Threading::SynchronizationContextProperties*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.SynchronizationContext.get_Current
::System::Threading::SynchronizationContext* System::Threading::SynchronizationContext::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "SynchronizationContext", "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.SynchronizationContext.get_CurrentNoFlow
::System::Threading::SynchronizationContext* System::Threading::SynchronizationContext::get_CurrentNoFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::get_CurrentNoFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "SynchronizationContext", "get_CurrentNoFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.SynchronizationContext.Send
void System::Threading::SynchronizationContext::Send(::System::Threading::SendOrPostCallback* d, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SynchronizationContext*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, d, state);
}
// Autogenerated method: System.Threading.SynchronizationContext.Post
void System::Threading::SynchronizationContext::Post(::System::Threading::SendOrPostCallback* d, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::Post");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SynchronizationContext*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, d, state);
}
// Autogenerated method: System.Threading.SynchronizationContext.OperationStarted
void System::Threading::SynchronizationContext::OperationStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::OperationStarted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SynchronizationContext*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SynchronizationContext.OperationCompleted
void System::Threading::SynchronizationContext::OperationCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::OperationCompleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SynchronizationContext*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SynchronizationContext.SetSynchronizationContext
void System::Threading::SynchronizationContext::SetSynchronizationContext(::System::Threading::SynchronizationContext* syncContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::SetSynchronizationContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "SynchronizationContext", "SetSynchronizationContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syncContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, syncContext);
}
// Autogenerated method: System.Threading.SynchronizationContext.GetThreadLocalContext
::System::Threading::SynchronizationContext* System::Threading::SynchronizationContext::GetThreadLocalContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::GetThreadLocalContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "SynchronizationContext", "GetThreadLocalContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.SynchronizationContext.CreateCopy
::System::Threading::SynchronizationContext* System::Threading::SynchronizationContext::CreateCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::CreateCopy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SynchronizationContext*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.OSSpecificSynchronizationContext
#include "System/Threading/OSSpecificSynchronizationContext.hpp"
// Including type: System.Threading.OSSpecificSynchronizationContext/System.Threading.InvocationEntryDelegate
#include "System/Threading/OSSpecificSynchronizationContext_InvocationEntryDelegate.hpp"
// Including type: System.Threading.OSSpecificSynchronizationContext/System.Threading.MonoPInvokeCallbackAttribute
#include "System/Threading/OSSpecificSynchronizationContext_MonoPInvokeCallbackAttribute.hpp"
// Including type: System.Threading.OSSpecificSynchronizationContext/System.Threading.InvocationContext
#include "System/Threading/OSSpecificSynchronizationContext_InvocationContext.hpp"
// Including type: System.Threading.OSSpecificSynchronizationContext/System.Threading.<>c
#include "System/Threading/OSSpecificSynchronizationContext_--c.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Threading.OSSpecificSynchronizationContext> s_ContextCache
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Threading::OSSpecificSynchronizationContext*>* System::Threading::OSSpecificSynchronizationContext::_get_s_ContextCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::_get_s_ContextCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Threading::OSSpecificSynchronizationContext*>*>("System.Threading", "OSSpecificSynchronizationContext", "s_ContextCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Threading.OSSpecificSynchronizationContext> s_ContextCache
void System::Threading::OSSpecificSynchronizationContext::_set_s_ContextCache(::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Threading::OSSpecificSynchronizationContext*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::_set_s_ContextCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "OSSpecificSynchronizationContext", "s_ContextCache", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_OSSynchronizationContext
[[deprecated]] ::Il2CppObject*& System::Threading::OSSpecificSynchronizationContext::dyn_m_OSSynchronizationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::dyn_m_OSSynchronizationContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OSSynchronizationContext"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext..cctor
void System::Threading::OSSpecificSynchronizationContext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "OSSpecificSynchronizationContext", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.Get
::System::Threading::OSSpecificSynchronizationContext* System::Threading::OSSpecificSynchronizationContext::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "OSSpecificSynchronizationContext", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::OSSpecificSynchronizationContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.InvocationEntry
void System::Threading::OSSpecificSynchronizationContext::InvocationEntry(::System::IntPtr arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::InvocationEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "OSSpecificSynchronizationContext", "InvocationEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.GetOSContext
::Il2CppObject* System::Threading::OSSpecificSynchronizationContext::GetOSContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::GetOSContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "OSSpecificSynchronizationContext", "GetOSContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.PostInternal
void System::Threading::OSSpecificSynchronizationContext::PostInternal(::Il2CppObject* osSynchronizationContext, ::System::IntPtr callback, ::System::IntPtr arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::PostInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "OSSpecificSynchronizationContext", "PostInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(osSynchronizationContext), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, osSynchronizationContext, callback, arg);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.CreateCopy
::System::Threading::SynchronizationContext* System::Threading::OSSpecificSynchronizationContext::CreateCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::CreateCopy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SynchronizationContext*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.Send
void System::Threading::OSSpecificSynchronizationContext::Send(::System::Threading::SendOrPostCallback* d, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SynchronizationContext*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, d, state);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.Post
void System::Threading::OSSpecificSynchronizationContext::Post(::System::Threading::SendOrPostCallback* d, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::Post");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SynchronizationContext*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, d, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.OSSpecificSynchronizationContext/System.Threading.InvocationEntryDelegate
#include "System/Threading/OSSpecificSynchronizationContext_InvocationEntryDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext/System.Threading.InvocationEntryDelegate.Invoke
void System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate::Invoke(::System::IntPtr arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arg);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext/System.Threading.InvocationEntryDelegate.BeginInvoke
::System::IAsyncResult* System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate::BeginInvoke(::System::IntPtr arg, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, arg, callback, object);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext/System.Threading.InvocationEntryDelegate.EndInvoke
void System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.OSSpecificSynchronizationContext/System.Threading.MonoPInvokeCallbackAttribute
#include "System/Threading/OSSpecificSynchronizationContext_MonoPInvokeCallbackAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.OSSpecificSynchronizationContext/System.Threading.InvocationContext
#include "System/Threading/OSSpecificSynchronizationContext_InvocationContext.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Threading.SendOrPostCallback m_Delegate
[[deprecated]] ::System::Threading::SendOrPostCallback*& System::Threading::OSSpecificSynchronizationContext::InvocationContext::dyn_m_Delegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::InvocationContext::dyn_m_Delegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Delegate"))->offset;
  return *reinterpret_cast<::System::Threading::SendOrPostCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_State
[[deprecated]] ::Il2CppObject*& System::Threading::OSSpecificSynchronizationContext::InvocationContext::dyn_m_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::InvocationContext::dyn_m_State");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_State"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext/System.Threading.InvocationContext.Invoke
void System::Threading::OSSpecificSynchronizationContext::InvocationContext::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::InvocationContext::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.OSSpecificSynchronizationContext/System.Threading.<>c
#include "System/Threading/OSSpecificSynchronizationContext_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.OSSpecificSynchronizationContext/System.Threading.<>c <>9
::System::Threading::OSSpecificSynchronizationContext::$$c* System::Threading::OSSpecificSynchronizationContext::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Threading::OSSpecificSynchronizationContext::$$c*>("System.Threading", "OSSpecificSynchronizationContext/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.OSSpecificSynchronizationContext/System.Threading.<>c <>9
void System::Threading::OSSpecificSynchronizationContext::$$c::_set_$$9(::System::Threading::OSSpecificSynchronizationContext::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading", "OSSpecificSynchronizationContext/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.CompilerServices.ConditionalWeakTable`2/System.Runtime.CompilerServices.CreateValueCallback<System.Object,System.Threading.OSSpecificSynchronizationContext> <>9__3_0
typename ::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Threading::OSSpecificSynchronizationContext*>::CreateValueCallback* System::Threading::OSSpecificSynchronizationContext::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Threading::OSSpecificSynchronizationContext*>::CreateValueCallback*>("System.Threading", "OSSpecificSynchronizationContext/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.CompilerServices.ConditionalWeakTable`2/System.Runtime.CompilerServices.CreateValueCallback<System.Object,System.Threading.OSSpecificSynchronizationContext> <>9__3_0
void System::Threading::OSSpecificSynchronizationContext::$$c::_set_$$9__3_0(typename ::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Threading::OSSpecificSynchronizationContext*>::CreateValueCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading", "OSSpecificSynchronizationContext/<>c", "<>9__3_0", value)));
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext/System.Threading.<>c..cctor
void System::Threading::OSSpecificSynchronizationContext::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "OSSpecificSynchronizationContext/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext/System.Threading.<>c.<Get>b__3_0
::System::Threading::OSSpecificSynchronizationContext* System::Threading::OSSpecificSynchronizationContext::$$c::$Get$b__3_0(::Il2CppObject* _osContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::$$c::<Get>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Get>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_osContext)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::OSSpecificSynchronizationContext*, false>(this, ___internal__method, _osContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.SynchronizationLockException
#include "System/Threading/SynchronizationLockException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ThreadHelper
#include "System/Threading/ThreadHelper.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Threading.ContextCallback _ccb
::System::Threading::ContextCallback* System::Threading::ThreadHelper::_get__ccb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadHelper::_get__ccb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ContextCallback*>("System.Threading", "ThreadHelper", "_ccb"));
}
// Autogenerated static field setter
// Set static field: static System.Threading.ContextCallback _ccb
void System::Threading::ThreadHelper::_set__ccb(::System::Threading::ContextCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadHelper::_set__ccb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadHelper", "_ccb", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Delegate _start
[[deprecated]] ::System::Delegate*& System::Threading::ThreadHelper::dyn__start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadHelper::dyn__start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_start"))->offset;
  return *reinterpret_cast<::System::Delegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _startArg
[[deprecated]] ::Il2CppObject*& System::Threading::ThreadHelper::dyn__startArg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadHelper::dyn__startArg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startArg"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ExecutionContext _executionContext
[[deprecated]] ::System::Threading::ExecutionContext*& System::Threading::ThreadHelper::dyn__executionContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadHelper::dyn__executionContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_executionContext"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ThreadHelper..cctor
void System::Threading::ThreadHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ThreadHelper.SetExecutionContextHelper
void System::Threading::ThreadHelper::SetExecutionContextHelper(::System::Threading::ExecutionContext* ec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadHelper::SetExecutionContextHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExecutionContextHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ec);
}
// Autogenerated method: System.Threading.ThreadHelper.ThreadStart_Context
void System::Threading::ThreadHelper::ThreadStart_Context(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadHelper::ThreadStart_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadHelper", "ThreadStart_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated method: System.Threading.ThreadHelper.ThreadStart
void System::Threading::ThreadHelper::ThreadStart(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadHelper::ThreadStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThreadStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Threading.ThreadHelper.ThreadStart
void System::Threading::ThreadHelper::ThreadStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadHelper::ThreadStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThreadStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: System.Threading.InternalThread
#include "System/Threading/InternalThread.hpp"
// Including type: System.Security.Principal.IPrincipal
#include "System/Security/Principal/IPrincipal.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.LocalDataStoreMgr
#include "System/LocalDataStoreMgr.hpp"
// Including type: System.LocalDataStoreHolder
#include "System/LocalDataStoreHolder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Threading.AsyncLocal`1
#include "System/Threading/AsyncLocal_1.hpp"
// Including type: System.Runtime.Remoting.Contexts.Context
#include "System/Runtime/Remoting/Contexts/Context.hpp"
// Including type: System.Threading.ThreadState
#include "System/Threading/ThreadState.hpp"
// Including type: System.Threading.ThreadStart
#include "System/Threading/ThreadStart.hpp"
// Including type: System.Threading.ParameterizedThreadStart
#include "System/Threading/ParameterizedThreadStart.hpp"
// Including type: System.Threading.StackCrawlMark
#include "System/Threading/StackCrawlMark.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Threading.ExecutionContext/System.Threading.Reader
#include "System/Threading/ExecutionContext_Reader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.LocalDataStoreMgr s_LocalDataStoreMgr
::System::LocalDataStoreMgr* System::Threading::Thread::_get_s_LocalDataStoreMgr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::_get_s_LocalDataStoreMgr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::LocalDataStoreMgr*>("System.Threading", "Thread", "s_LocalDataStoreMgr"));
}
// Autogenerated static field setter
// Set static field: static private System.LocalDataStoreMgr s_LocalDataStoreMgr
void System::Threading::Thread::_set_s_LocalDataStoreMgr(::System::LocalDataStoreMgr* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::_set_s_LocalDataStoreMgr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Thread", "s_LocalDataStoreMgr", value));
}
// Autogenerated static field getter
// Get static field: static private System.LocalDataStoreHolder s_LocalDataStore
::System::LocalDataStoreHolder* System::Threading::Thread::_get_s_LocalDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::_get_s_LocalDataStore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::LocalDataStoreHolder*>("System.Threading", "Thread", "s_LocalDataStore"));
}
// Autogenerated static field setter
// Set static field: static private System.LocalDataStoreHolder s_LocalDataStore
void System::Threading::Thread::_set_s_LocalDataStore(::System::LocalDataStoreHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::_set_s_LocalDataStore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Thread", "s_LocalDataStore", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.CultureInfo m_CurrentCulture
::System::Globalization::CultureInfo* System::Threading::Thread::_get_m_CurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::_get_m_CurrentCulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureInfo*>("System.Threading", "Thread", "m_CurrentCulture"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.CultureInfo m_CurrentCulture
void System::Threading::Thread::_set_m_CurrentCulture(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::_set_m_CurrentCulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Thread", "m_CurrentCulture", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.CultureInfo m_CurrentUICulture
::System::Globalization::CultureInfo* System::Threading::Thread::_get_m_CurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::_get_m_CurrentUICulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureInfo*>("System.Threading", "Thread", "m_CurrentUICulture"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.CultureInfo m_CurrentUICulture
void System::Threading::Thread::_set_m_CurrentUICulture(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::_set_m_CurrentUICulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Thread", "m_CurrentUICulture", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.AsyncLocal`1<System.Globalization.CultureInfo> s_asyncLocalCurrentCulture
::System::Threading::AsyncLocal_1<::System::Globalization::CultureInfo*>* System::Threading::Thread::_get_s_asyncLocalCurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::_get_s_asyncLocalCurrentCulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::AsyncLocal_1<::System::Globalization::CultureInfo*>*>("System.Threading", "Thread", "s_asyncLocalCurrentCulture"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.AsyncLocal`1<System.Globalization.CultureInfo> s_asyncLocalCurrentCulture
void System::Threading::Thread::_set_s_asyncLocalCurrentCulture(::System::Threading::AsyncLocal_1<::System::Globalization::CultureInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::_set_s_asyncLocalCurrentCulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Thread", "s_asyncLocalCurrentCulture", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.AsyncLocal`1<System.Globalization.CultureInfo> s_asyncLocalCurrentUICulture
::System::Threading::AsyncLocal_1<::System::Globalization::CultureInfo*>* System::Threading::Thread::_get_s_asyncLocalCurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::_get_s_asyncLocalCurrentUICulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::AsyncLocal_1<::System::Globalization::CultureInfo*>*>("System.Threading", "Thread", "s_asyncLocalCurrentUICulture"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.AsyncLocal`1<System.Globalization.CultureInfo> s_asyncLocalCurrentUICulture
void System::Threading::Thread::_set_s_asyncLocalCurrentUICulture(::System::Threading::AsyncLocal_1<::System::Globalization::CultureInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::_set_s_asyncLocalCurrentUICulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Thread", "s_asyncLocalCurrentUICulture", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.Thread current_thread
::System::Threading::Thread* System::Threading::Thread::_get_current_thread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::_get_current_thread");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Thread*>("System.Threading", "Thread", "current_thread"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.Thread current_thread
void System::Threading::Thread::_set_current_thread(::System::Threading::Thread* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::_set_current_thread");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Thread", "current_thread", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.InternalThread internal_thread
[[deprecated]] ::System::Threading::InternalThread*& System::Threading::Thread::dyn_internal_thread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::dyn_internal_thread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internal_thread"))->offset;
  return *reinterpret_cast<::System::Threading::InternalThread**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_ThreadStartArg
[[deprecated]] ::Il2CppObject*& System::Threading::Thread::dyn_m_ThreadStartArg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::dyn_m_ThreadStartArg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThreadStartArg"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object pending_exception
[[deprecated]] ::Il2CppObject*& System::Threading::Thread::dyn_pending_exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::dyn_pending_exception");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pending_exception"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Principal.IPrincipal principal
[[deprecated]] ::System::Security::Principal::IPrincipal*& System::Threading::Thread::dyn_principal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::dyn_principal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "principal"))->offset;
  return *reinterpret_cast<::System::Security::Principal::IPrincipal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 principal_version
[[deprecated]] int& System::Threading::Thread::dyn_principal_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::dyn_principal_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "principal_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.MulticastDelegate m_Delegate
[[deprecated]] ::System::MulticastDelegate*& System::Threading::Thread::dyn_m_Delegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::dyn_m_Delegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Delegate"))->offset;
  return *reinterpret_cast<::System::MulticastDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ExecutionContext m_ExecutionContext
[[deprecated]] ::System::Threading::ExecutionContext*& System::Threading::Thread::dyn_m_ExecutionContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::dyn_m_ExecutionContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ExecutionContext"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ExecutionContextBelongsToOuterScope
[[deprecated]] bool& System::Threading::Thread::dyn_m_ExecutionContextBelongsToOuterScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::dyn_m_ExecutionContextBelongsToOuterScope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ExecutionContextBelongsToOuterScope"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Thread.get_ExecutionContextBelongsToCurrentScope
bool System::Threading::Thread::get_ExecutionContextBelongsToCurrentScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::get_ExecutionContextBelongsToCurrentScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExecutionContextBelongsToCurrentScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.set_ExecutionContextBelongsToCurrentScope
void System::Threading::Thread::set_ExecutionContextBelongsToCurrentScope(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::set_ExecutionContextBelongsToCurrentScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExecutionContextBelongsToCurrentScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.Thread.get_CurrentUICulture
::System::Globalization::CultureInfo* System::Threading::Thread::get_CurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::get_CurrentUICulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentUICulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.get_CurrentCulture
::System::Globalization::CultureInfo* System::Threading::Thread::get_CurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::get_CurrentCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.get_Internal
::System::Threading::InternalThread* System::Threading::Thread::get_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::get_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::InternalThread*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.get_CurrentContext
::System::Runtime::Remoting::Contexts::Context* System::Threading::Thread::get_CurrentContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::get_CurrentContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "get_CurrentContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Contexts::Context*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.get_CurrentThread
::System::Threading::Thread* System::Threading::Thread::get_CurrentThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::get_CurrentThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "get_CurrentThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Thread*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.get_CurrentThreadId
int System::Threading::Thread::get_CurrentThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::get_CurrentThreadId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "get_CurrentThreadId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.get_IsThreadPoolThread
bool System::Threading::Thread::get_IsThreadPoolThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::get_IsThreadPoolThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsThreadPoolThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.get_IsThreadPoolThreadInternal
bool System::Threading::Thread::get_IsThreadPoolThreadInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::get_IsThreadPoolThreadInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsThreadPoolThreadInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.set_IsBackground
void System::Threading::Thread::set_IsBackground(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::set_IsBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.Thread.set_Name
void System::Threading::Thread::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.Thread.get_ThreadState
::System::Threading::ThreadState System::Threading::Thread::get_ThreadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::get_ThreadState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ThreadState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ThreadState, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.get_ManagedThreadId
int System::Threading::Thread::get_ManagedThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::get_ManagedThreadId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ManagedThreadId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.Start
void System::Threading::Thread::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.Start
void System::Threading::Thread::Start(::Il2CppObject* parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameter);
}
// Autogenerated method: System.Threading.Thread.Start
void System::Threading::Thread::Start(ByRef<::System::Threading::StackCrawlMark> stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stackMark)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stackMark));
}
// Autogenerated method: System.Threading.Thread.GetExecutionContextReader
::System::Threading::ExecutionContext::Reader System::Threading::Thread::GetExecutionContextReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::GetExecutionContextReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExecutionContextReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContext::Reader, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.GetMutableExecutionContext
::System::Threading::ExecutionContext* System::Threading::Thread::GetMutableExecutionContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::GetMutableExecutionContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMutableExecutionContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.SetExecutionContext
void System::Threading::Thread::SetExecutionContext(::System::Threading::ExecutionContext* value, bool belongsToCurrentScope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::SetExecutionContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExecutionContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(belongsToCurrentScope)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, belongsToCurrentScope);
}
// Autogenerated method: System.Threading.Thread.SetExecutionContext
void System::Threading::Thread::SetExecutionContext(::System::Threading::ExecutionContext::Reader value, bool belongsToCurrentScope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::SetExecutionContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExecutionContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(belongsToCurrentScope)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, belongsToCurrentScope);
}
// Autogenerated method: System.Threading.Thread.SleepInternal
void System::Threading::Thread::SleepInternal(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::SleepInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "SleepInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.Thread.Sleep
void System::Threading::Thread::Sleep(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::Sleep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "Sleep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.Thread.YieldInternal
bool System::Threading::Thread::YieldInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::YieldInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "YieldInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.Yield
bool System::Threading::Thread::Yield() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::Yield");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "Yield", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.SetStartHelper
void System::Threading::Thread::SetStartHelper(::System::Delegate* start, int maxStackSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::SetStartHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStartHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(maxStackSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, maxStackSize);
}
// Autogenerated method: System.Threading.Thread.GetCurrentUICultureNoAppX
::System::Globalization::CultureInfo* System::Threading::Thread::GetCurrentUICultureNoAppX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::GetCurrentUICultureNoAppX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentUICultureNoAppX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.GetCurrentCultureNoAppX
::System::Globalization::CultureInfo* System::Threading::Thread::GetCurrentCultureNoAppX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::GetCurrentCultureNoAppX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentCultureNoAppX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.MemoryBarrier
void System::Threading::Thread::MemoryBarrier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::MemoryBarrier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "MemoryBarrier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.ConstructInternalThread
void System::Threading::Thread::ConstructInternalThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::ConstructInternalThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructInternalThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.GetCurrentThread
::System::Threading::Thread* System::Threading::Thread::GetCurrentThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::GetCurrentThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "GetCurrentThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Thread*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.GetDomainID
int System::Threading::Thread::GetDomainID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::GetDomainID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "GetDomainID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.Thread_internal
::System::IntPtr System::Threading::Thread::Thread_internal(::System::MulticastDelegate* start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::Thread_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Thread_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Threading.Thread.SetName_internal
void System::Threading::Thread::SetName_internal(::System::Threading::InternalThread* thread, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::SetName_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "SetName_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thread), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thread, name);
}
// Autogenerated method: System.Threading.Thread.Abort_internal
void System::Threading::Thread::Abort_internal(::System::Threading::InternalThread* thread, ::Il2CppObject* stateInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::Abort_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "Abort_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thread), ::il2cpp_utils::ExtractType(stateInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thread, stateInfo);
}
// Autogenerated method: System.Threading.Thread.Abort
void System::Threading::Thread::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::Abort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Abort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.SpinWait_nop
void System::Threading::Thread::SpinWait_nop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::SpinWait_nop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "SpinWait_nop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.SpinWait
void System::Threading::Thread::SpinWait(int iterations) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::SpinWait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "SpinWait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iterations)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, iterations);
}
// Autogenerated method: System.Threading.Thread.StartInternal
void System::Threading::Thread::StartInternal(::System::Security::Principal::IPrincipal* principal, ByRef<::System::Threading::StackCrawlMark> stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::StartInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(principal), ::il2cpp_utils::ExtractType(stackMark)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, principal, byref(stackMark));
}
// Autogenerated method: System.Threading.Thread.SetState
void System::Threading::Thread::SetState(::System::Threading::InternalThread* thread, ::System::Threading::ThreadState set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thread), ::il2cpp_utils::ExtractType(set)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thread, set);
}
// Autogenerated method: System.Threading.Thread.ClrState
void System::Threading::Thread::ClrState(::System::Threading::InternalThread* thread, ::System::Threading::ThreadState clr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::ClrState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "ClrState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thread), ::il2cpp_utils::ExtractType(clr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thread, clr);
}
// Autogenerated method: System.Threading.Thread.GetState
::System::Threading::ThreadState System::Threading::Thread::GetState(::System::Threading::InternalThread* thread) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::GetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thread)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ThreadState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thread);
}
// Autogenerated method: System.Threading.Thread.SystemMaxStackStize
int System::Threading::Thread::SystemMaxStackStize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::SystemMaxStackStize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "SystemMaxStackStize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.GetProcessDefaultStackSize
int System::Threading::Thread::GetProcessDefaultStackSize(int maxStackSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::GetProcessDefaultStackSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "GetProcessDefaultStackSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxStackSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, maxStackSize);
}
// Autogenerated method: System.Threading.Thread.SetStart
void System::Threading::Thread::SetStart(::System::MulticastDelegate* start, int maxStackSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::SetStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(maxStackSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, maxStackSize);
}
// Autogenerated method: System.Threading.Thread.BeginCriticalRegion
void System::Threading::Thread::BeginCriticalRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::BeginCriticalRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "BeginCriticalRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.EndCriticalRegion
void System::Threading::Thread::EndCriticalRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::EndCriticalRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Thread", "EndCriticalRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.ValidateThreadState
::System::Threading::ThreadState System::Threading::Thread::ValidateThreadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::ValidateThreadState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateThreadState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ThreadState, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.Finalize
void System::Threading::Thread::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::ConstrainedExecution::CriticalFinalizerObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.GetHashCode
int System::Threading::Thread::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Thread::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.StackCrawlMark
#include "System/Threading/StackCrawlMark.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.StackCrawlMark LookForMe
::System::Threading::StackCrawlMark System::Threading::StackCrawlMark::_get_LookForMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::StackCrawlMark::_get_LookForMe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::StackCrawlMark>("System.Threading", "StackCrawlMark", "LookForMe"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.StackCrawlMark LookForMe
void System::Threading::StackCrawlMark::_set_LookForMe(::System::Threading::StackCrawlMark value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::StackCrawlMark::_set_LookForMe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "StackCrawlMark", "LookForMe", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.StackCrawlMark LookForMyCaller
::System::Threading::StackCrawlMark System::Threading::StackCrawlMark::_get_LookForMyCaller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::StackCrawlMark::_get_LookForMyCaller");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::StackCrawlMark>("System.Threading", "StackCrawlMark", "LookForMyCaller"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.StackCrawlMark LookForMyCaller
void System::Threading::StackCrawlMark::_set_LookForMyCaller(::System::Threading::StackCrawlMark value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::StackCrawlMark::_set_LookForMyCaller");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "StackCrawlMark", "LookForMyCaller", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.StackCrawlMark LookForMyCallersCaller
::System::Threading::StackCrawlMark System::Threading::StackCrawlMark::_get_LookForMyCallersCaller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::StackCrawlMark::_get_LookForMyCallersCaller");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::StackCrawlMark>("System.Threading", "StackCrawlMark", "LookForMyCallersCaller"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.StackCrawlMark LookForMyCallersCaller
void System::Threading::StackCrawlMark::_set_LookForMyCallersCaller(::System::Threading::StackCrawlMark value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::StackCrawlMark::_set_LookForMyCallersCaller");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "StackCrawlMark", "LookForMyCallersCaller", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.StackCrawlMark LookForThread
::System::Threading::StackCrawlMark System::Threading::StackCrawlMark::_get_LookForThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::StackCrawlMark::_get_LookForThread");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::StackCrawlMark>("System.Threading", "StackCrawlMark", "LookForThread"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.StackCrawlMark LookForThread
void System::Threading::StackCrawlMark::_set_LookForThread(::System::Threading::StackCrawlMark value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::StackCrawlMark::_set_LookForThread");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "StackCrawlMark", "LookForThread", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Threading::StackCrawlMark::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::StackCrawlMark::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ThreadInterruptedException
#include "System/Threading/ThreadInterruptedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.IThreadPoolWorkItem
#include "System/Threading/IThreadPoolWorkItem.hpp"
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.IThreadPoolWorkItem.ExecuteWorkItem
void System::Threading::IThreadPoolWorkItem::ExecuteWorkItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::IThreadPoolWorkItem::ExecuteWorkItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::IThreadPoolWorkItem*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.IThreadPoolWorkItem.MarkAborted
void System::Threading::IThreadPoolWorkItem::MarkAborted(::System::Threading::ThreadAbortException* tae) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::IThreadPoolWorkItem::MarkAborted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::IThreadPoolWorkItem*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tae);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.WaitCallback
#include "System/Threading/WaitCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.WaitCallback.Invoke
void System::Threading::WaitCallback::Invoke(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::WaitCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Threading.WaitCallback.BeginInvoke
::System::IAsyncResult* System::Threading::WaitCallback::BeginInvoke(::Il2CppObject* state, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::WaitCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, state, callback, object);
}
// Autogenerated method: System.Threading.WaitCallback.EndInvoke
void System::Threading::WaitCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::WaitCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.WaitOrTimerCallback
#include "System/Threading/WaitOrTimerCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.WaitOrTimerCallback.Invoke
void System::Threading::WaitOrTimerCallback::Invoke(::Il2CppObject* state, bool timedOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitOrTimerCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::WaitOrTimerCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, timedOut);
}
// Autogenerated method: System.Threading.WaitOrTimerCallback.BeginInvoke
::System::IAsyncResult* System::Threading::WaitOrTimerCallback::BeginInvoke(::Il2CppObject* state, bool timedOut, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitOrTimerCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::WaitOrTimerCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, state, timedOut, callback, object);
}
// Autogenerated method: System.Threading.WaitOrTimerCallback.EndInvoke
void System::Threading::WaitOrTimerCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitOrTimerCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::WaitOrTimerCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ThreadPoolGlobals
#include "System/Threading/ThreadPoolGlobals.hpp"
// Including type: System.Threading.ThreadPoolWorkQueue
#include "System/Threading/ThreadPoolWorkQueue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 tpQuantum
uint System::Threading::ThreadPoolGlobals::_get_tpQuantum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolGlobals::_get_tpQuantum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Threading", "ThreadPoolGlobals", "tpQuantum"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 tpQuantum
void System::Threading::ThreadPoolGlobals::_set_tpQuantum(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolGlobals::_set_tpQuantum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolGlobals", "tpQuantum", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 processorCount
int System::Threading::ThreadPoolGlobals::_get_processorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolGlobals::_get_processorCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ThreadPoolGlobals", "processorCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 processorCount
void System::Threading::ThreadPoolGlobals::_set_processorCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolGlobals::_set_processorCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolGlobals", "processorCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean tpHosted
bool System::Threading::ThreadPoolGlobals::_get_tpHosted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolGlobals::_get_tpHosted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Threading", "ThreadPoolGlobals", "tpHosted"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean tpHosted
void System::Threading::ThreadPoolGlobals::_set_tpHosted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolGlobals::_set_tpHosted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolGlobals", "tpHosted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean vmTpInitialized
bool System::Threading::ThreadPoolGlobals::_get_vmTpInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolGlobals::_get_vmTpInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Threading", "ThreadPoolGlobals", "vmTpInitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean vmTpInitialized
void System::Threading::ThreadPoolGlobals::_set_vmTpInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolGlobals::_set_vmTpInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolGlobals", "vmTpInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean enableWorkerTracking
bool System::Threading::ThreadPoolGlobals::_get_enableWorkerTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolGlobals::_get_enableWorkerTracking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Threading", "ThreadPoolGlobals", "enableWorkerTracking"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean enableWorkerTracking
void System::Threading::ThreadPoolGlobals::_set_enableWorkerTracking(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolGlobals::_set_enableWorkerTracking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolGlobals", "enableWorkerTracking", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadPoolWorkQueue workQueue
::System::Threading::ThreadPoolWorkQueue* System::Threading::ThreadPoolGlobals::_get_workQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolGlobals::_get_workQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ThreadPoolWorkQueue*>("System.Threading", "ThreadPoolGlobals", "workQueue"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadPoolWorkQueue workQueue
void System::Threading::ThreadPoolGlobals::_set_workQueue(::System::Threading::ThreadPoolWorkQueue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolGlobals::_set_workQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolGlobals", "workQueue", value));
}
// Autogenerated method: System.Threading.ThreadPoolGlobals..cctor
void System::Threading::ThreadPoolGlobals::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolGlobals::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadPoolGlobals", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ThreadPoolWorkQueue
#include "System/Threading/ThreadPoolWorkQueue.hpp"
// Including type: System.Threading.ThreadPoolWorkQueue/System.Threading.SparseArray`1
#include "System/Threading/ThreadPoolWorkQueue_SparseArray_1.hpp"
// Including type: System.Threading.ThreadPoolWorkQueue/System.Threading.WorkStealingQueue
#include "System/Threading/ThreadPoolWorkQueue_WorkStealingQueue.hpp"
// Including type: System.Threading.ThreadPoolWorkQueue/System.Threading.QueueSegment
#include "System/Threading/ThreadPoolWorkQueue_QueueSegment.hpp"
// Including type: System.Threading.ThreadPoolWorkQueueThreadLocals
#include "System/Threading/ThreadPoolWorkQueueThreadLocals.hpp"
// Including type: System.Threading.IThreadPoolWorkItem
#include "System/Threading/IThreadPoolWorkItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Threading.ThreadPoolWorkQueue/System.Threading.SparseArray`1<System.Threading.ThreadPoolWorkQueue/System.Threading.WorkStealingQueue> allThreadQueues
::System::Threading::ThreadPoolWorkQueue::SparseArray_1<::System::Threading::ThreadPoolWorkQueue::WorkStealingQueue*>* System::Threading::ThreadPoolWorkQueue::_get_allThreadQueues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::_get_allThreadQueues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ThreadPoolWorkQueue::SparseArray_1<::System::Threading::ThreadPoolWorkQueue::WorkStealingQueue*>*>("System.Threading", "ThreadPoolWorkQueue", "allThreadQueues"));
}
// Autogenerated static field setter
// Set static field: static System.Threading.ThreadPoolWorkQueue/System.Threading.SparseArray`1<System.Threading.ThreadPoolWorkQueue/System.Threading.WorkStealingQueue> allThreadQueues
void System::Threading::ThreadPoolWorkQueue::_set_allThreadQueues(::System::Threading::ThreadPoolWorkQueue::SparseArray_1<::System::Threading::ThreadPoolWorkQueue::WorkStealingQueue*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::_set_allThreadQueues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolWorkQueue", "allThreadQueues", value));
}
// Autogenerated instance field getter
// Get instance field: System.Threading.ThreadPoolWorkQueue/System.Threading.QueueSegment queueHead
[[deprecated]] ::System::Threading::ThreadPoolWorkQueue::QueueSegment*& System::Threading::ThreadPoolWorkQueue::dyn_queueHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::dyn_queueHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queueHead"))->offset;
  return *reinterpret_cast<::System::Threading::ThreadPoolWorkQueue::QueueSegment**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Threading.ThreadPoolWorkQueue/System.Threading.QueueSegment queueTail
[[deprecated]] ::System::Threading::ThreadPoolWorkQueue::QueueSegment*& System::Threading::ThreadPoolWorkQueue::dyn_queueTail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::dyn_queueTail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queueTail"))->offset;
  return *reinterpret_cast<::System::Threading::ThreadPoolWorkQueue::QueueSegment**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 numOutstandingThreadRequests
[[deprecated]] int& System::Threading::ThreadPoolWorkQueue::dyn_numOutstandingThreadRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::dyn_numOutstandingThreadRequests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numOutstandingThreadRequests"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue..cctor
void System::Threading::ThreadPoolWorkQueue::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadPoolWorkQueue", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue.EnsureCurrentThreadHasQueue
::System::Threading::ThreadPoolWorkQueueThreadLocals* System::Threading::ThreadPoolWorkQueue::EnsureCurrentThreadHasQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::EnsureCurrentThreadHasQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCurrentThreadHasQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ThreadPoolWorkQueueThreadLocals*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue.EnsureThreadRequested
void System::Threading::ThreadPoolWorkQueue::EnsureThreadRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::EnsureThreadRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureThreadRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue.MarkThreadRequestSatisfied
void System::Threading::ThreadPoolWorkQueue::MarkThreadRequestSatisfied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::MarkThreadRequestSatisfied");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkThreadRequestSatisfied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue.Enqueue
void System::Threading::ThreadPoolWorkQueue::Enqueue(::System::Threading::IThreadPoolWorkItem* callback, bool forceGlobal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::Enqueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Enqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(forceGlobal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, forceGlobal);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue.LocalFindAndPop
bool System::Threading::ThreadPoolWorkQueue::LocalFindAndPop(::System::Threading::IThreadPoolWorkItem* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::LocalFindAndPop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalFindAndPop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, callback);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue.Dequeue
void System::Threading::ThreadPoolWorkQueue::Dequeue(::System::Threading::ThreadPoolWorkQueueThreadLocals* tl, ByRef<::System::Threading::IThreadPoolWorkItem*> callback, ByRef<bool> missedSteal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::Dequeue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dequeue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tl), ::il2cpp_utils::ExtractIndependentType<::System::Threading::IThreadPoolWorkItem*&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tl, byref(callback), byref(missedSteal));
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue.Dispatch
bool System::Threading::ThreadPoolWorkQueue::Dispatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::Dispatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadPoolWorkQueue", "Dispatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ThreadPoolWorkQueue/System.Threading.WorkStealingQueue
#include "System/Threading/ThreadPoolWorkQueue_WorkStealingQueue.hpp"
// Including type: System.Threading.IThreadPoolWorkItem
#include "System/Threading/IThreadPoolWorkItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Threading.IThreadPoolWorkItem[] m_array
[[deprecated]] ::ArrayW<::System::Threading::IThreadPoolWorkItem*>& System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::dyn_m_array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::dyn_m_array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_array"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Threading::IThreadPoolWorkItem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_mask
[[deprecated]] int& System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::dyn_m_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::dyn_m_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_headIndex
[[deprecated]] int& System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::dyn_m_headIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::dyn_m_headIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_headIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_tailIndex
[[deprecated]] int& System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::dyn_m_tailIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::dyn_m_tailIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_tailIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SpinLock m_foreignLock
[[deprecated]] ::System::Threading::SpinLock& System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::dyn_m_foreignLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::dyn_m_foreignLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_foreignLock"))->offset;
  return *reinterpret_cast<::System::Threading::SpinLock*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/System.Threading.WorkStealingQueue.LocalPush
void System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::LocalPush(::System::Threading::IThreadPoolWorkItem* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::LocalPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/System.Threading.WorkStealingQueue.LocalFindAndPop
bool System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::LocalFindAndPop(::System::Threading::IThreadPoolWorkItem* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::LocalFindAndPop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalFindAndPop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/System.Threading.WorkStealingQueue.LocalPop
bool System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::LocalPop(ByRef<::System::Threading::IThreadPoolWorkItem*> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::LocalPop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalPop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Threading::IThreadPoolWorkItem*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(obj));
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/System.Threading.WorkStealingQueue.TrySteal
bool System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::TrySteal(ByRef<::System::Threading::IThreadPoolWorkItem*> obj, ByRef<bool> missedSteal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::TrySteal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySteal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Threading::IThreadPoolWorkItem*&>(), ::il2cpp_utils::ExtractType(missedSteal)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(obj), byref(missedSteal));
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/System.Threading.WorkStealingQueue.TrySteal
bool System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::TrySteal(ByRef<::System::Threading::IThreadPoolWorkItem*> obj, ByRef<bool> missedSteal, int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::TrySteal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySteal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Threading::IThreadPoolWorkItem*&>(), ::il2cpp_utils::ExtractType(missedSteal), ::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(obj), byref(missedSteal), millisecondsTimeout);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ThreadPoolWorkQueue/System.Threading.QueueSegment
#include "System/Threading/ThreadPoolWorkQueue_QueueSegment.hpp"
// Including type: System.Threading.IThreadPoolWorkItem
#include "System/Threading/IThreadPoolWorkItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Threading.IThreadPoolWorkItem[] nodes
[[deprecated]] ::ArrayW<::System::Threading::IThreadPoolWorkItem*>& System::Threading::ThreadPoolWorkQueue::QueueSegment::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::QueueSegment::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Threading::IThreadPoolWorkItem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 indexes
[[deprecated]] int& System::Threading::ThreadPoolWorkQueue::QueueSegment::dyn_indexes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::QueueSegment::dyn_indexes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indexes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.ThreadPoolWorkQueue/System.Threading.QueueSegment Next
[[deprecated]] ::System::Threading::ThreadPoolWorkQueue::QueueSegment*& System::Threading::ThreadPoolWorkQueue::QueueSegment::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::QueueSegment::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::System::Threading::ThreadPoolWorkQueue::QueueSegment**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/System.Threading.QueueSegment.GetIndexes
void System::Threading::ThreadPoolWorkQueue::QueueSegment::GetIndexes(ByRef<int> upper, ByRef<int> lower) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::QueueSegment::GetIndexes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndexes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(upper), byref(lower));
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/System.Threading.QueueSegment.CompareExchangeIndexes
bool System::Threading::ThreadPoolWorkQueue::QueueSegment::CompareExchangeIndexes(ByRef<int> prevUpper, int newUpper, ByRef<int> prevLower, int newLower) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::QueueSegment::CompareExchangeIndexes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareExchangeIndexes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prevUpper), ::il2cpp_utils::ExtractType(newUpper), ::il2cpp_utils::ExtractType(prevLower), ::il2cpp_utils::ExtractType(newLower)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(prevUpper), newUpper, byref(prevLower), newLower);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/System.Threading.QueueSegment.IsUsedUp
bool System::Threading::ThreadPoolWorkQueue::QueueSegment::IsUsedUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::QueueSegment::IsUsedUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsUsedUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/System.Threading.QueueSegment.TryEnqueue
bool System::Threading::ThreadPoolWorkQueue::QueueSegment::TryEnqueue(::System::Threading::IThreadPoolWorkItem* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::QueueSegment::TryEnqueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/System.Threading.QueueSegment.TryDequeue
bool System::Threading::ThreadPoolWorkQueue::QueueSegment::TryDequeue(ByRef<::System::Threading::IThreadPoolWorkItem*> node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueue::QueueSegment::TryDequeue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDequeue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Threading::IThreadPoolWorkItem*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(node));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ThreadPoolWorkQueueThreadLocals
#include "System/Threading/ThreadPoolWorkQueueThreadLocals.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: System.Threading.ThreadPoolWorkQueue/System.Threading.WorkStealingQueue
#include "System/Threading/ThreadPoolWorkQueue_WorkStealingQueue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadPoolWorkQueueThreadLocals threadLocals
::System::Threading::ThreadPoolWorkQueueThreadLocals* System::Threading::ThreadPoolWorkQueueThreadLocals::_get_threadLocals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueueThreadLocals::_get_threadLocals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ThreadPoolWorkQueueThreadLocals*>("System.Threading", "ThreadPoolWorkQueueThreadLocals", "threadLocals"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadPoolWorkQueueThreadLocals threadLocals
void System::Threading::ThreadPoolWorkQueueThreadLocals::_set_threadLocals(::System::Threading::ThreadPoolWorkQueueThreadLocals* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueueThreadLocals::_set_threadLocals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolWorkQueueThreadLocals", "threadLocals", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Threading.ThreadPoolWorkQueue workQueue
[[deprecated]] ::System::Threading::ThreadPoolWorkQueue*& System::Threading::ThreadPoolWorkQueueThreadLocals::dyn_workQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueueThreadLocals::dyn_workQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workQueue"))->offset;
  return *reinterpret_cast<::System::Threading::ThreadPoolWorkQueue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Threading.ThreadPoolWorkQueue/System.Threading.WorkStealingQueue workStealingQueue
[[deprecated]] ::System::Threading::ThreadPoolWorkQueue::WorkStealingQueue*& System::Threading::ThreadPoolWorkQueueThreadLocals::dyn_workStealingQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueueThreadLocals::dyn_workStealingQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workStealingQueue"))->offset;
  return *reinterpret_cast<::System::Threading::ThreadPoolWorkQueue::WorkStealingQueue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Random random
[[deprecated]] ::System::Random*& System::Threading::ThreadPoolWorkQueueThreadLocals::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueueThreadLocals::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<::System::Random**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueueThreadLocals.CleanUp
void System::Threading::ThreadPoolWorkQueueThreadLocals::CleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueueThreadLocals::CleanUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueueThreadLocals.Finalize
void System::Threading::ThreadPoolWorkQueueThreadLocals::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPoolWorkQueueThreadLocals::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading._ThreadPoolWaitCallback
#include "System/Threading/_ThreadPoolWaitCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading._ThreadPoolWaitCallback.PerformWaitCallback
bool System::Threading::_ThreadPoolWaitCallback::PerformWaitCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::_ThreadPoolWaitCallback::PerformWaitCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "_ThreadPoolWaitCallback", "PerformWaitCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.QueueUserWorkItemCallback
#include "System/Threading/QueueUserWorkItemCallback.hpp"
// Including type: System.Threading.WaitCallback
#include "System/Threading/WaitCallback.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Threading.ContextCallback ccb
::System::Threading::ContextCallback* System::Threading::QueueUserWorkItemCallback::_get_ccb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::QueueUserWorkItemCallback::_get_ccb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ContextCallback*>("System.Threading", "QueueUserWorkItemCallback", "ccb"));
}
// Autogenerated static field setter
// Set static field: static System.Threading.ContextCallback ccb
void System::Threading::QueueUserWorkItemCallback::_set_ccb(::System::Threading::ContextCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::QueueUserWorkItemCallback::_set_ccb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "QueueUserWorkItemCallback", "ccb", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.WaitCallback callback
[[deprecated]] ::System::Threading::WaitCallback*& System::Threading::QueueUserWorkItemCallback::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::QueueUserWorkItemCallback::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Threading::WaitCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ExecutionContext context
[[deprecated]] ::System::Threading::ExecutionContext*& System::Threading::QueueUserWorkItemCallback::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::QueueUserWorkItemCallback::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object state
[[deprecated]] ::Il2CppObject*& System::Threading::QueueUserWorkItemCallback::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::QueueUserWorkItemCallback::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.QueueUserWorkItemCallback..cctor
void System::Threading::QueueUserWorkItemCallback::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::QueueUserWorkItemCallback::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "QueueUserWorkItemCallback", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem
void System::Threading::QueueUserWorkItemCallback::System_Threading_IThreadPoolWorkItem_ExecuteWorkItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::QueueUserWorkItemCallback::System.Threading.IThreadPoolWorkItem.ExecuteWorkItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::QueueUserWorkItemCallback*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.MarkAborted
void System::Threading::QueueUserWorkItemCallback::System_Threading_IThreadPoolWorkItem_MarkAborted(::System::Threading::ThreadAbortException* tae) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::QueueUserWorkItemCallback::System.Threading.IThreadPoolWorkItem.MarkAborted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::QueueUserWorkItemCallback*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tae);
}
// Autogenerated method: System.Threading.QueueUserWorkItemCallback.WaitCallback_Context
void System::Threading::QueueUserWorkItemCallback::WaitCallback_Context(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::QueueUserWorkItemCallback::WaitCallback_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "QueueUserWorkItemCallback", "WaitCallback_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ThreadPool
#include "System/Threading/ThreadPool.hpp"
// Including type: System.Threading.RegisteredWaitHandle
#include "System/Threading/RegisteredWaitHandle.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Threading.WaitOrTimerCallback
#include "System/Threading/WaitOrTimerCallback.hpp"
// Including type: System.Threading.StackCrawlMark
#include "System/Threading/StackCrawlMark.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Threading.WaitCallback
#include "System/Threading/WaitCallback.hpp"
// Including type: System.Threading.IThreadPoolWorkItem
#include "System/Threading/IThreadPoolWorkItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.ThreadPool.RegisterWaitForSingleObject
::System::Threading::RegisteredWaitHandle* System::Threading::ThreadPool::RegisterWaitForSingleObject(::System::Threading::WaitHandle* waitObject, ::System::Threading::WaitOrTimerCallback* callBack, ::Il2CppObject* state, uint millisecondsTimeOutInterval, bool executeOnlyOnce, ByRef<::System::Threading::StackCrawlMark> stackMark, bool compressStack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPool::RegisterWaitForSingleObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "RegisterWaitForSingleObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waitObject), ::il2cpp_utils::ExtractType(callBack), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(millisecondsTimeOutInterval), ::il2cpp_utils::ExtractType(executeOnlyOnce), ::il2cpp_utils::ExtractType(stackMark), ::il2cpp_utils::ExtractType(compressStack)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::RegisteredWaitHandle*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, waitObject, callBack, state, millisecondsTimeOutInterval, executeOnlyOnce, byref(stackMark), compressStack);
}
// Autogenerated method: System.Threading.ThreadPool.RegisterWaitForSingleObject
::System::Threading::RegisteredWaitHandle* System::Threading::ThreadPool::RegisterWaitForSingleObject(::System::Threading::WaitHandle* waitObject, ::System::Threading::WaitOrTimerCallback* callBack, ::Il2CppObject* state, ::System::TimeSpan timeout, bool executeOnlyOnce) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPool::RegisterWaitForSingleObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "RegisterWaitForSingleObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waitObject), ::il2cpp_utils::ExtractType(callBack), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(timeout), ::il2cpp_utils::ExtractType(executeOnlyOnce)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::RegisteredWaitHandle*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, waitObject, callBack, state, timeout, executeOnlyOnce);
}
// Autogenerated method: System.Threading.ThreadPool.QueueUserWorkItem
bool System::Threading::ThreadPool::QueueUserWorkItem(::System::Threading::WaitCallback* callBack, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPool::QueueUserWorkItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "QueueUserWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callBack), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callBack, state);
}
// Autogenerated method: System.Threading.ThreadPool.QueueUserWorkItem
bool System::Threading::ThreadPool::QueueUserWorkItem(::System::Threading::WaitCallback* callBack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPool::QueueUserWorkItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "QueueUserWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callBack)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callBack);
}
// Autogenerated method: System.Threading.ThreadPool.UnsafeQueueUserWorkItem
bool System::Threading::ThreadPool::UnsafeQueueUserWorkItem(::System::Threading::WaitCallback* callBack, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPool::UnsafeQueueUserWorkItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "UnsafeQueueUserWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callBack), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callBack, state);
}
// Autogenerated method: System.Threading.ThreadPool.QueueUserWorkItemHelper
bool System::Threading::ThreadPool::QueueUserWorkItemHelper(::System::Threading::WaitCallback* callBack, ::Il2CppObject* state, ByRef<::System::Threading::StackCrawlMark> stackMark, bool compressStack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPool::QueueUserWorkItemHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "QueueUserWorkItemHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callBack), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(stackMark), ::il2cpp_utils::ExtractType(compressStack)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callBack, state, byref(stackMark), compressStack);
}
// Autogenerated method: System.Threading.ThreadPool.UnsafeQueueCustomWorkItem
void System::Threading::ThreadPool::UnsafeQueueCustomWorkItem(::System::Threading::IThreadPoolWorkItem* workItem, bool forceGlobal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPool::UnsafeQueueCustomWorkItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "UnsafeQueueCustomWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(workItem), ::il2cpp_utils::ExtractType(forceGlobal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, workItem, forceGlobal);
}
// Autogenerated method: System.Threading.ThreadPool.TryPopCustomWorkItem
bool System::Threading::ThreadPool::TryPopCustomWorkItem(::System::Threading::IThreadPoolWorkItem* workItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPool::TryPopCustomWorkItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "TryPopCustomWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(workItem)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, workItem);
}
// Autogenerated method: System.Threading.ThreadPool.RequestWorkerThread
bool System::Threading::ThreadPool::RequestWorkerThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPool::RequestWorkerThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "RequestWorkerThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPool.EnsureVMInitialized
void System::Threading::ThreadPool::EnsureVMInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPool::EnsureVMInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "EnsureVMInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPool.NotifyWorkItemComplete
bool System::Threading::ThreadPool::NotifyWorkItemComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPool::NotifyWorkItemComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "NotifyWorkItemComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPool.ReportThreadStatus
void System::Threading::ThreadPool::ReportThreadStatus(bool isWorking) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPool::ReportThreadStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "ReportThreadStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isWorking)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, isWorking);
}
// Autogenerated method: System.Threading.ThreadPool.NotifyWorkItemProgress
void System::Threading::ThreadPool::NotifyWorkItemProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPool::NotifyWorkItemProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "NotifyWorkItemProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPool.NotifyWorkItemProgressNative
void System::Threading::ThreadPool::NotifyWorkItemProgressNative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPool::NotifyWorkItemProgressNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "NotifyWorkItemProgressNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPool.IsThreadPoolHosted
bool System::Threading::ThreadPool::IsThreadPoolHosted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPool::IsThreadPoolHosted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "IsThreadPoolHosted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPool.InitializeVMTp
void System::Threading::ThreadPool::InitializeVMTp(ByRef<bool> enableWorkerTracking) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadPool::InitializeVMTp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "InitializeVMTp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enableWorkerTracking)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(enableWorkerTracking));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ThreadStart
#include "System/Threading/ThreadStart.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.ThreadStart.Invoke
void System::Threading::ThreadStart::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadStart::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::ThreadStart*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ThreadStart.BeginInvoke
::System::IAsyncResult* System::Threading::ThreadStart::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadStart::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::ThreadStart*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: System.Threading.ThreadStart.EndInvoke
void System::Threading::ThreadStart::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadStart::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::ThreadStart*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ThreadState
#include "System/Threading/ThreadState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState Running
::System::Threading::ThreadState System::Threading::ThreadState::_get_Running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_get_Running");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ThreadState>("System.Threading", "ThreadState", "Running"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState Running
void System::Threading::ThreadState::_set_Running(::System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_set_Running");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "Running", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState StopRequested
::System::Threading::ThreadState System::Threading::ThreadState::_get_StopRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_get_StopRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ThreadState>("System.Threading", "ThreadState", "StopRequested"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState StopRequested
void System::Threading::ThreadState::_set_StopRequested(::System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_set_StopRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "StopRequested", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState SuspendRequested
::System::Threading::ThreadState System::Threading::ThreadState::_get_SuspendRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_get_SuspendRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ThreadState>("System.Threading", "ThreadState", "SuspendRequested"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState SuspendRequested
void System::Threading::ThreadState::_set_SuspendRequested(::System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_set_SuspendRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "SuspendRequested", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState Background
::System::Threading::ThreadState System::Threading::ThreadState::_get_Background() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_get_Background");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ThreadState>("System.Threading", "ThreadState", "Background"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState Background
void System::Threading::ThreadState::_set_Background(::System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_set_Background");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "Background", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState Unstarted
::System::Threading::ThreadState System::Threading::ThreadState::_get_Unstarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_get_Unstarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ThreadState>("System.Threading", "ThreadState", "Unstarted"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState Unstarted
void System::Threading::ThreadState::_set_Unstarted(::System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_set_Unstarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "Unstarted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState Stopped
::System::Threading::ThreadState System::Threading::ThreadState::_get_Stopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_get_Stopped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ThreadState>("System.Threading", "ThreadState", "Stopped"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState Stopped
void System::Threading::ThreadState::_set_Stopped(::System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_set_Stopped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "Stopped", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState WaitSleepJoin
::System::Threading::ThreadState System::Threading::ThreadState::_get_WaitSleepJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_get_WaitSleepJoin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ThreadState>("System.Threading", "ThreadState", "WaitSleepJoin"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState WaitSleepJoin
void System::Threading::ThreadState::_set_WaitSleepJoin(::System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_set_WaitSleepJoin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "WaitSleepJoin", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState Suspended
::System::Threading::ThreadState System::Threading::ThreadState::_get_Suspended() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_get_Suspended");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ThreadState>("System.Threading", "ThreadState", "Suspended"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState Suspended
void System::Threading::ThreadState::_set_Suspended(::System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_set_Suspended");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "Suspended", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState AbortRequested
::System::Threading::ThreadState System::Threading::ThreadState::_get_AbortRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_get_AbortRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ThreadState>("System.Threading", "ThreadState", "AbortRequested"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState AbortRequested
void System::Threading::ThreadState::_set_AbortRequested(::System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_set_AbortRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "AbortRequested", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState Aborted
::System::Threading::ThreadState System::Threading::ThreadState::_get_Aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_get_Aborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ThreadState>("System.Threading", "ThreadState", "Aborted"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState Aborted
void System::Threading::ThreadState::_set_Aborted(::System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::_set_Aborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "Aborted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Threading::ThreadState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ThreadState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ThreadStateException
#include "System/Threading/ThreadStateException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Timeout
#include "System/Threading/Timeout.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [ComVisibleAttribute] Offset: 0x688E54
// Autogenerated static field getter
// Get static field: static public readonly System.TimeSpan InfiniteTimeSpan
::System::TimeSpan System::Threading::Timeout::_get_InfiniteTimeSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timeout::_get_InfiniteTimeSpan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System.Threading", "Timeout", "InfiniteTimeSpan"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.TimeSpan InfiniteTimeSpan
void System::Threading::Timeout::_set_InfiniteTimeSpan(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timeout::_set_InfiniteTimeSpan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Timeout", "InfiniteTimeSpan", value));
}
// Autogenerated method: System.Threading.Timeout..cctor
void System::Threading::Timeout::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timeout::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Timeout", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeWaitHandle
#include "Microsoft/Win32/SafeHandles/SafeWaitHandle.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 WaitTimeout
int System::Threading::WaitHandle::_get_WaitTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::_get_WaitTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "WaitTimeout"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 WaitTimeout
void System::Threading::WaitHandle::_set_WaitTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::_set_WaitTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "WaitTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MAX_WAITHANDLES
int System::Threading::WaitHandle::_get_MAX_WAITHANDLES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::_get_MAX_WAITHANDLES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "MAX_WAITHANDLES"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MAX_WAITHANDLES
void System::Threading::WaitHandle::_set_MAX_WAITHANDLES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::_set_MAX_WAITHANDLES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "MAX_WAITHANDLES", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 WAIT_OBJECT_0
int System::Threading::WaitHandle::_get_WAIT_OBJECT_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::_get_WAIT_OBJECT_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "WAIT_OBJECT_0"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 WAIT_OBJECT_0
void System::Threading::WaitHandle::_set_WAIT_OBJECT_0(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::_set_WAIT_OBJECT_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "WAIT_OBJECT_0", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 WAIT_ABANDONED
int System::Threading::WaitHandle::_get_WAIT_ABANDONED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::_get_WAIT_ABANDONED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "WAIT_ABANDONED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 WAIT_ABANDONED
void System::Threading::WaitHandle::_set_WAIT_ABANDONED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::_set_WAIT_ABANDONED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "WAIT_ABANDONED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 WAIT_FAILED
int System::Threading::WaitHandle::_get_WAIT_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::_get_WAIT_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "WAIT_FAILED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 WAIT_FAILED
void System::Threading::WaitHandle::_set_WAIT_FAILED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::_set_WAIT_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "WAIT_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ERROR_TOO_MANY_POSTS
int System::Threading::WaitHandle::_get_ERROR_TOO_MANY_POSTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::_get_ERROR_TOO_MANY_POSTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "ERROR_TOO_MANY_POSTS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ERROR_TOO_MANY_POSTS
void System::Threading::WaitHandle::_set_ERROR_TOO_MANY_POSTS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::_set_ERROR_TOO_MANY_POSTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "ERROR_TOO_MANY_POSTS", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.IntPtr InvalidHandle
::System::IntPtr System::Threading::WaitHandle::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("System.Threading", "WaitHandle", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.IntPtr InvalidHandle
void System::Threading::WaitHandle::_set_InvalidHandle(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MaxWaitHandles
int System::Threading::WaitHandle::_get_MaxWaitHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::_get_MaxWaitHandles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "MaxWaitHandles"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MaxWaitHandles
void System::Threading::WaitHandle::_set_MaxWaitHandles(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::_set_MaxWaitHandles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "MaxWaitHandles", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr waitHandle
[[deprecated]] ::System::IntPtr& System::Threading::WaitHandle::dyn_waitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::dyn_waitHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitHandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Microsoft.Win32.SafeHandles.SafeWaitHandle safeWaitHandle
[[deprecated]] ::Microsoft::Win32::SafeHandles::SafeWaitHandle*& System::Threading::WaitHandle::dyn_safeWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::dyn_safeWaitHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "safeWaitHandle"))->offset;
  return *reinterpret_cast<::Microsoft::Win32::SafeHandles::SafeWaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean hasThreadAffinity
[[deprecated]] bool& System::Threading::WaitHandle::dyn_hasThreadAffinity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::dyn_hasThreadAffinity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasThreadAffinity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.WaitHandle.set_Handle
void System::Threading::WaitHandle::set_Handle(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::set_Handle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::WaitHandle*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.WaitHandle.get_SafeWaitHandle
::Microsoft::Win32::SafeHandles::SafeWaitHandle* System::Threading::WaitHandle::get_SafeWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::get_SafeWaitHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SafeWaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::SafeHandles::SafeWaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.WaitHandle..cctor
void System::Threading::WaitHandle::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.WaitHandle.Init
void System::Threading::WaitHandle::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.WaitHandle.SetHandleInternal
void System::Threading::WaitHandle::SetHandleInternal(::Microsoft::Win32::SafeHandles::SafeWaitHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::SetHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handle);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOne
bool System::Threading::WaitHandle::WaitOne(int millisecondsTimeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::WaitOne");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::WaitHandle*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, millisecondsTimeout, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOne
bool System::Threading::WaitHandle::WaitOne(::System::TimeSpan timeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::WaitOne");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::WaitHandle*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOne
bool System::Threading::WaitHandle::WaitOne() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::WaitOne");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::WaitHandle*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOne
bool System::Threading::WaitHandle::WaitOne(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::WaitOne");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::WaitHandle*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOne
bool System::Threading::WaitHandle::WaitOne(::System::TimeSpan timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::WaitOne");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::WaitHandle*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOne
bool System::Threading::WaitHandle::WaitOne(int64_t timeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::WaitOne");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitOne", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout), ::il2cpp_utils::ExtractType(exitContext)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.InternalWaitOne
bool System::Threading::WaitHandle::InternalWaitOne(::System::Runtime::InteropServices::SafeHandle* waitableSafeHandle, int64_t millisecondsTimeout, bool hasThreadAffinity, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::InternalWaitOne");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "InternalWaitOne", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waitableSafeHandle), ::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(hasThreadAffinity), ::il2cpp_utils::ExtractType(exitContext)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, waitableSafeHandle, millisecondsTimeout, hasThreadAffinity, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.WaitAny
int System::Threading::WaitHandle::WaitAny(::ArrayW<::System::Threading::WaitHandle*> waitHandles, int millisecondsTimeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::WaitAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "WaitAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waitHandles), ::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(exitContext)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, waitHandles, millisecondsTimeout, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.WaitAny
int System::Threading::WaitHandle::WaitAny(::ArrayW<::System::Threading::WaitHandle*> waitHandles, ::System::TimeSpan timeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::WaitAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "WaitAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waitHandles), ::il2cpp_utils::ExtractType(timeout), ::il2cpp_utils::ExtractType(exitContext)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, waitHandles, timeout, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.ThrowAbandonedMutexException
void System::Threading::WaitHandle::ThrowAbandonedMutexException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::ThrowAbandonedMutexException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "ThrowAbandonedMutexException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.WaitHandle.ThrowAbandonedMutexException
void System::Threading::WaitHandle::ThrowAbandonedMutexException(int location, ::System::Threading::WaitHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::ThrowAbandonedMutexException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "ThrowAbandonedMutexException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, location, handle);
}
// Autogenerated method: System.Threading.WaitHandle.Close
void System::Threading::WaitHandle::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::WaitHandle*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.WaitHandle.Dispose
void System::Threading::WaitHandle::Dispose(bool explicitDisposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::WaitHandle*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, explicitDisposing);
}
// Autogenerated method: System.Threading.WaitHandle.Dispose
void System::Threading::WaitHandle::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::WaitHandle*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.WaitHandle.WaitMultiple
int System::Threading::WaitHandle::WaitMultiple(::ArrayW<::System::Threading::WaitHandle*> waitHandles, int millisecondsTimeout, bool exitContext, bool WaitAll) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::WaitMultiple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "WaitMultiple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waitHandles), ::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(exitContext), ::il2cpp_utils::ExtractType(WaitAll)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, waitHandles, millisecondsTimeout, exitContext, WaitAll);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOneNative
int System::Threading::WaitHandle::WaitOneNative(::System::Runtime::InteropServices::SafeHandle* waitableSafeHandle, uint millisecondsTimeout, bool hasThreadAffinity, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::WaitOneNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "WaitOneNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waitableSafeHandle), ::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(hasThreadAffinity), ::il2cpp_utils::ExtractType(exitContext)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, waitableSafeHandle, millisecondsTimeout, hasThreadAffinity, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.Wait_internal
int System::Threading::WaitHandle::Wait_internal(::System::IntPtr* handles, int numHandles, bool waitAll, int ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::WaitHandle::Wait_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "Wait_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handles), ::il2cpp_utils::ExtractType(numHandles), ::il2cpp_utils::ExtractType(waitAll), ::il2cpp_utils::ExtractType(ms)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handles, numHandles, waitAll, ms);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.WaitHandleCannotBeOpenedException
#include "System/Threading/WaitHandleCannotBeOpenedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Interlocked
#include "System/Threading/Interlocked.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Interlocked.CompareExchange
int System::Threading::Interlocked::CompareExchange(ByRef<int> location1, int value, int comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Interlocked::CompareExchange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "CompareExchange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location1), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparand)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location1), value, comparand);
}
// Autogenerated method: System.Threading.Interlocked.CompareExchange
int System::Threading::Interlocked::CompareExchange(ByRef<int> location1, int value, int comparand, ByRef<bool> succeeded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Interlocked::CompareExchange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "CompareExchange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location1), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparand), ::il2cpp_utils::ExtractType(succeeded)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location1), value, comparand, byref(succeeded));
}
// Autogenerated method: System.Threading.Interlocked.CompareExchange
::Il2CppObject* System::Threading::Interlocked::CompareExchange(ByRef<::Il2CppObject*> location1, ::Il2CppObject* value, ::Il2CppObject* comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Interlocked::CompareExchange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "CompareExchange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location1), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparand)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location1), value, comparand);
}
// Autogenerated method: System.Threading.Interlocked.CompareExchange
float System::Threading::Interlocked::CompareExchange(ByRef<float> location1, float value, float comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Interlocked::CompareExchange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "CompareExchange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location1), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparand)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location1), value, comparand);
}
// Autogenerated method: System.Threading.Interlocked.Decrement
int System::Threading::Interlocked::Decrement(ByRef<int> location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Interlocked::Decrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Decrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location));
}
// Autogenerated method: System.Threading.Interlocked.Increment
int System::Threading::Interlocked::Increment(ByRef<int> location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Interlocked::Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location));
}
// Autogenerated method: System.Threading.Interlocked.Increment
int64_t System::Threading::Interlocked::Increment(ByRef<int64_t> location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Interlocked::Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location));
}
// Autogenerated method: System.Threading.Interlocked.Exchange
int System::Threading::Interlocked::Exchange(ByRef<int> location1, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Interlocked::Exchange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Exchange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location1), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location1), value);
}
// Autogenerated method: System.Threading.Interlocked.Exchange
::Il2CppObject* System::Threading::Interlocked::Exchange(ByRef<::Il2CppObject*> location1, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Interlocked::Exchange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Exchange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location1), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location1), value);
}
// Autogenerated method: System.Threading.Interlocked.Exchange
float System::Threading::Interlocked::Exchange(ByRef<float> location1, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Interlocked::Exchange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Exchange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location1), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location1), value);
}
// Autogenerated method: System.Threading.Interlocked.CompareExchange
int64_t System::Threading::Interlocked::CompareExchange(ByRef<int64_t> location1, int64_t value, int64_t comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Interlocked::CompareExchange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "CompareExchange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location1), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparand)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location1), value, comparand);
}
// Autogenerated method: System.Threading.Interlocked.CompareExchange
::System::IntPtr System::Threading::Interlocked::CompareExchange(ByRef<::System::IntPtr> location1, ::System::IntPtr value, ::System::IntPtr comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Interlocked::CompareExchange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "CompareExchange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location1), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparand)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location1), value, comparand);
}
// Autogenerated method: System.Threading.Interlocked.CompareExchange
double System::Threading::Interlocked::CompareExchange(ByRef<double> location1, double value, double comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Interlocked::CompareExchange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "CompareExchange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location1), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparand)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location1), value, comparand);
}
// Autogenerated method: System.Threading.Interlocked.Exchange
int64_t System::Threading::Interlocked::Exchange(ByRef<int64_t> location1, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Interlocked::Exchange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Exchange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location1), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location1), value);
}
// Autogenerated method: System.Threading.Interlocked.Exchange
::System::IntPtr System::Threading::Interlocked::Exchange(ByRef<::System::IntPtr> location1, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Interlocked::Exchange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Exchange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location1), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location1), value);
}
// Autogenerated method: System.Threading.Interlocked.Exchange
double System::Threading::Interlocked::Exchange(ByRef<double> location1, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Interlocked::Exchange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Exchange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location1), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location1), value);
}
// Autogenerated method: System.Threading.Interlocked.Read
int64_t System::Threading::Interlocked::Read(ByRef<int64_t> location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Interlocked::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location));
}
// Autogenerated method: System.Threading.Interlocked.Add
int System::Threading::Interlocked::Add(ByRef<int> location1, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Interlocked::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location1), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location1), value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.LockQueue
#include "System/Threading/LockQueue.hpp"
// Including type: System.Threading.ReaderWriterLock
#include "System/Threading/ReaderWriterLock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Threading.ReaderWriterLock rwlock
[[deprecated]] ::System::Threading::ReaderWriterLock*& System::Threading::LockQueue::dyn_rwlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LockQueue::dyn_rwlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rwlock"))->offset;
  return *reinterpret_cast<::System::Threading::ReaderWriterLock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lockCount
[[deprecated]] int& System::Threading::LockQueue::dyn_lockCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LockQueue::dyn_lockCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lockCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.LockQueue.get_IsEmpty
bool System::Threading::LockQueue::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LockQueue::get_IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.LockQueue.Wait
bool System::Threading::LockQueue::Wait(int timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LockQueue::Wait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Wait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.LockQueue.Pulse
void System::Threading::LockQueue::Pulse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LockQueue::Pulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.NativeEventCalls
#include "System/Threading/NativeEventCalls.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeWaitHandle
#include "Microsoft/Win32/SafeHandles/SafeWaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.NativeEventCalls.CreateEvent_internal
::System::IntPtr System::Threading::NativeEventCalls::CreateEvent_internal(bool manual, bool initial, ::StringW name, ByRef<int> errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::NativeEventCalls::CreateEvent_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "NativeEventCalls", "CreateEvent_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(manual), ::il2cpp_utils::ExtractType(initial), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, manual, initial, name, byref(errorCode));
}
// Autogenerated method: System.Threading.NativeEventCalls.SetEvent
bool System::Threading::NativeEventCalls::SetEvent(::Microsoft::Win32::SafeHandles::SafeWaitHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::NativeEventCalls::SetEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "NativeEventCalls", "SetEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Threading.NativeEventCalls.SetEvent_internal
bool System::Threading::NativeEventCalls::SetEvent_internal(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::NativeEventCalls::SetEvent_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "NativeEventCalls", "SetEvent_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Threading.NativeEventCalls.ResetEvent
bool System::Threading::NativeEventCalls::ResetEvent(::Microsoft::Win32::SafeHandles::SafeWaitHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::NativeEventCalls::ResetEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "NativeEventCalls", "ResetEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Threading.NativeEventCalls.ResetEvent_internal
bool System::Threading::NativeEventCalls::ResetEvent_internal(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::NativeEventCalls::ResetEvent_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "NativeEventCalls", "ResetEvent_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Threading.NativeEventCalls.CloseEvent_internal
void System::Threading::NativeEventCalls::CloseEvent_internal(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::NativeEventCalls::CloseEvent_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "NativeEventCalls", "CloseEvent_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ReaderWriterLock
#include "System/Threading/ReaderWriterLock.hpp"
// Including type: System.Threading.LockQueue
#include "System/Threading/LockQueue.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 seq_num
[[deprecated]] int& System::Threading::ReaderWriterLock::dyn_seq_num() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLock::dyn_seq_num");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seq_num"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 state
[[deprecated]] int& System::Threading::ReaderWriterLock::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLock::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 readers
[[deprecated]] int& System::Threading::ReaderWriterLock::dyn_readers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLock::dyn_readers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 writer_lock_owner
[[deprecated]] int& System::Threading::ReaderWriterLock::dyn_writer_lock_owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLock::dyn_writer_lock_owner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writer_lock_owner"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.LockQueue writer_queue
[[deprecated]] ::System::Threading::LockQueue*& System::Threading::ReaderWriterLock::dyn_writer_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLock::dyn_writer_queue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writer_queue"))->offset;
  return *reinterpret_cast<::System::Threading::LockQueue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable reader_locks
[[deprecated]] ::System::Collections::Hashtable*& System::Threading::ReaderWriterLock::dyn_reader_locks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLock::dyn_reader_locks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader_locks"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ReaderWriterLock.AcquireReaderLock
void System::Threading::ReaderWriterLock::AcquireReaderLock(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLock::AcquireReaderLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcquireReaderLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.ReaderWriterLock.AcquireReaderLock
void System::Threading::ReaderWriterLock::AcquireReaderLock(int millisecondsTimeout, int initialLockCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLock::AcquireReaderLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcquireReaderLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(initialLockCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, millisecondsTimeout, initialLockCount);
}
// Autogenerated method: System.Threading.ReaderWriterLock.AcquireWriterLock
void System::Threading::ReaderWriterLock::AcquireWriterLock(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLock::AcquireWriterLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcquireWriterLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.ReaderWriterLock.AcquireWriterLock
void System::Threading::ReaderWriterLock::AcquireWriterLock(int millisecondsTimeout, int initialLockCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLock::AcquireWriterLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcquireWriterLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(initialLockCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, millisecondsTimeout, initialLockCount);
}
// Autogenerated method: System.Threading.ReaderWriterLock.ReleaseReaderLock
void System::Threading::ReaderWriterLock::ReleaseReaderLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLock::ReleaseReaderLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseReaderLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLock.ReleaseReaderLock
void System::Threading::ReaderWriterLock::ReleaseReaderLock(int currentCount, int releaseCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLock::ReleaseReaderLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseReaderLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentCount), ::il2cpp_utils::ExtractType(releaseCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentCount, releaseCount);
}
// Autogenerated method: System.Threading.ReaderWriterLock.ReleaseWriterLock
void System::Threading::ReaderWriterLock::ReleaseWriterLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLock::ReleaseWriterLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseWriterLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLock.ReleaseWriterLock
void System::Threading::ReaderWriterLock::ReleaseWriterLock(int releaseCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLock::ReleaseWriterLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseWriterLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(releaseCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, releaseCount);
}
// Autogenerated method: System.Threading.ReaderWriterLock.HasWriterLock
bool System::Threading::ReaderWriterLock::HasWriterLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLock::HasWriterLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasWriterLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLock.Finalize
void System::Threading::ReaderWriterLock::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLock::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::ConstrainedExecution::CriticalFinalizerObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.RegisteredWaitHandle
#include "System/Threading/RegisteredWaitHandle.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Threading.WaitOrTimerCallback
#include "System/Threading/WaitOrTimerCallback.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Threading.WaitHandle _waitObject
[[deprecated]] ::System::Threading::WaitHandle*& System::Threading::RegisteredWaitHandle::dyn__waitObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::RegisteredWaitHandle::dyn__waitObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitObject"))->offset;
  return *reinterpret_cast<::System::Threading::WaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.WaitOrTimerCallback _callback
[[deprecated]] ::System::Threading::WaitOrTimerCallback*& System::Threading::RegisteredWaitHandle::dyn__callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::RegisteredWaitHandle::dyn__callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_callback"))->offset;
  return *reinterpret_cast<::System::Threading::WaitOrTimerCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _state
[[deprecated]] ::Il2CppObject*& System::Threading::RegisteredWaitHandle::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::RegisteredWaitHandle::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.WaitHandle _finalEvent
[[deprecated]] ::System::Threading::WaitHandle*& System::Threading::RegisteredWaitHandle::dyn__finalEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::RegisteredWaitHandle::dyn__finalEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalEvent"))->offset;
  return *reinterpret_cast<::System::Threading::WaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent _cancelEvent
[[deprecated]] ::System::Threading::ManualResetEvent*& System::Threading::RegisteredWaitHandle::dyn__cancelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::RegisteredWaitHandle::dyn__cancelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelEvent"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.TimeSpan _timeout
[[deprecated]] ::System::TimeSpan& System::Threading::RegisteredWaitHandle::dyn__timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::RegisteredWaitHandle::dyn__timeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeout"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _callsInProcess
[[deprecated]] int& System::Threading::RegisteredWaitHandle::dyn__callsInProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::RegisteredWaitHandle::dyn__callsInProcess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_callsInProcess"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _executeOnlyOnce
[[deprecated]] bool& System::Threading::RegisteredWaitHandle::dyn__executeOnlyOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::RegisteredWaitHandle::dyn__executeOnlyOnce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_executeOnlyOnce"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _unregistered
[[deprecated]] bool& System::Threading::RegisteredWaitHandle::dyn__unregistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::RegisteredWaitHandle::dyn__unregistered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unregistered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.RegisteredWaitHandle.Wait
void System::Threading::RegisteredWaitHandle::Wait(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::RegisteredWaitHandle::Wait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Wait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Threading.RegisteredWaitHandle.DoCallBack
void System::Threading::RegisteredWaitHandle::DoCallBack(::Il2CppObject* timedOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::RegisteredWaitHandle::DoCallBack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoCallBack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timedOut)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timedOut);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.InternalThread
#include "System/Threading/InternalThread.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 lock_thread_id
[[deprecated]] int& System::Threading::InternalThread::dyn_lock_thread_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_lock_thread_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lock_thread_id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr handle
[[deprecated]] ::System::IntPtr& System::Threading::InternalThread::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr native_handle
[[deprecated]] ::System::IntPtr& System::Threading::InternalThread::dyn_native_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_native_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "native_handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr unused3
[[deprecated]] ::System::IntPtr& System::Threading::InternalThread::dyn_unused3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_unused3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unused3"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr name
[[deprecated]] ::System::IntPtr& System::Threading::InternalThread::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 name_len
[[deprecated]] int& System::Threading::InternalThread::dyn_name_len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_name_len");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name_len"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ThreadState state
[[deprecated]] ::System::Threading::ThreadState& System::Threading::InternalThread::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::System::Threading::ThreadState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object abort_exc
[[deprecated]] ::Il2CppObject*& System::Threading::InternalThread::dyn_abort_exc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_abort_exc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "abort_exc"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 abort_state_handle
[[deprecated]] int& System::Threading::InternalThread::dyn_abort_state_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_abort_state_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "abort_state_handle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int64 thread_id
[[deprecated]] int64_t& System::Threading::InternalThread::dyn_thread_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_thread_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thread_id"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr debugger_thread
[[deprecated]] ::System::IntPtr& System::Threading::InternalThread::dyn_debugger_thread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_debugger_thread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugger_thread"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UIntPtr static_data
[[deprecated]] ::System::UIntPtr& System::Threading::InternalThread::dyn_static_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_static_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "static_data"))->offset;
  return *reinterpret_cast<::System::UIntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr runtime_thread_info
[[deprecated]] ::System::IntPtr& System::Threading::InternalThread::dyn_runtime_thread_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_runtime_thread_info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtime_thread_info"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object current_appcontext
[[deprecated]] ::Il2CppObject*& System::Threading::InternalThread::dyn_current_appcontext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_current_appcontext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current_appcontext"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object root_domain_thread
[[deprecated]] ::Il2CppObject*& System::Threading::InternalThread::dyn_root_domain_thread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_root_domain_thread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root_domain_thread"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] _serialized_principal
[[deprecated]] ::ArrayW<uint8_t>& System::Threading::InternalThread::dyn__serialized_principal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn__serialized_principal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serialized_principal"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _serialized_principal_version
[[deprecated]] int& System::Threading::InternalThread::dyn__serialized_principal_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn__serialized_principal_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serialized_principal_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr appdomain_refs
[[deprecated]] ::System::IntPtr& System::Threading::InternalThread::dyn_appdomain_refs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_appdomain_refs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "appdomain_refs"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 interruption_requested
[[deprecated]] int& System::Threading::InternalThread::dyn_interruption_requested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_interruption_requested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interruption_requested"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr synch_cs
[[deprecated]] ::System::IntPtr& System::Threading::InternalThread::dyn_synch_cs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_synch_cs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synch_cs"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean threadpool_thread
[[deprecated]] bool& System::Threading::InternalThread::dyn_threadpool_thread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_threadpool_thread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threadpool_thread"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean thread_interrupt_requested
[[deprecated]] bool& System::Threading::InternalThread::dyn_thread_interrupt_requested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_thread_interrupt_requested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thread_interrupt_requested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 stack_size
[[deprecated]] int& System::Threading::InternalThread::dyn_stack_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_stack_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stack_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte apartment_state
[[deprecated]] uint8_t& System::Threading::InternalThread::dyn_apartment_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_apartment_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "apartment_state"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 critical_region_level
[[deprecated]] int& System::Threading::InternalThread::dyn_critical_region_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_critical_region_level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "critical_region_level"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 managed_id
[[deprecated]] int& System::Threading::InternalThread::dyn_managed_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_managed_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "managed_id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 small_id
[[deprecated]] int& System::Threading::InternalThread::dyn_small_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_small_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "small_id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr manage_callback
[[deprecated]] ::System::IntPtr& System::Threading::InternalThread::dyn_manage_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_manage_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "manage_callback"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr unused4
[[deprecated]] ::System::IntPtr& System::Threading::InternalThread::dyn_unused4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_unused4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unused4"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr flags
[[deprecated]] ::System::IntPtr& System::Threading::InternalThread::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr thread_pinning_ref
[[deprecated]] ::System::IntPtr& System::Threading::InternalThread::dyn_thread_pinning_ref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_thread_pinning_ref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thread_pinning_ref"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr abort_protected_block_count
[[deprecated]] ::System::IntPtr& System::Threading::InternalThread::dyn_abort_protected_block_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_abort_protected_block_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "abort_protected_block_count"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 priority
[[deprecated]] int& System::Threading::InternalThread::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr owned_mutex
[[deprecated]] ::System::IntPtr& System::Threading::InternalThread::dyn_owned_mutex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_owned_mutex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "owned_mutex"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr suspended_event
[[deprecated]] ::System::IntPtr& System::Threading::InternalThread::dyn_suspended_event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_suspended_event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "suspended_event"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 self_suspended
[[deprecated]] int& System::Threading::InternalThread::dyn_self_suspended() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_self_suspended");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "self_suspended"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr unused1
[[deprecated]] ::System::IntPtr& System::Threading::InternalThread::dyn_unused1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_unused1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unused1"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr unused2
[[deprecated]] ::System::IntPtr& System::Threading::InternalThread::dyn_unused2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_unused2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unused2"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr last
[[deprecated]] ::System::IntPtr& System::Threading::InternalThread::dyn_last() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::dyn_last");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "last"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.InternalThread.Thread_free_internal
void System::Threading::InternalThread::Thread_free_internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::Thread_free_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Thread_free_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.InternalThread.Finalize
void System::Threading::InternalThread::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::InternalThread::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::ConstrainedExecution::CriticalFinalizerObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Timer
#include "System/Threading/Timer.hpp"
// Including type: System.Threading.Timer/System.Threading.TimerComparer
#include "System/Threading/Timer_TimerComparer.hpp"
// Including type: System.Threading.Timer/System.Threading.Scheduler
#include "System/Threading/Timer_Scheduler.hpp"
// Including type: System.Threading.TimerCallback
#include "System/Threading/TimerCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.Timer/System.Threading.Scheduler scheduler
::System::Threading::Timer::Scheduler* System::Threading::Timer::_get_scheduler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timer::_get_scheduler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Timer::Scheduler*>("System.Threading", "Timer", "scheduler"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.Timer/System.Threading.Scheduler scheduler
void System::Threading::Timer::_set_scheduler(::System::Threading::Timer::Scheduler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timer::_set_scheduler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Timer", "scheduler", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 MaxValue
int64_t System::Threading::Timer::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timer::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Threading", "Timer", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 MaxValue
void System::Threading::Timer::_set_MaxValue(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timer::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Timer", "MaxValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.TimerCallback callback
[[deprecated]] ::System::Threading::TimerCallback*& System::Threading::Timer::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timer::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Threading::TimerCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object state
[[deprecated]] ::Il2CppObject*& System::Threading::Timer::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timer::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 due_time_ms
[[deprecated]] int64_t& System::Threading::Timer::dyn_due_time_ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timer::dyn_due_time_ms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "due_time_ms"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 period_ms
[[deprecated]] int64_t& System::Threading::Timer::dyn_period_ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timer::dyn_period_ms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "period_ms"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 next_run
[[deprecated]] int64_t& System::Threading::Timer::dyn_next_run() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timer::dyn_next_run");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next_run"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated]] bool& System::Threading::Timer::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timer::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Timer..cctor
void System::Threading::Timer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Timer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Timer.Init
void System::Threading::Timer::Init(::System::Threading::TimerCallback* callback, ::Il2CppObject* state, int64_t dueTime, int64_t period) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timer::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(dueTime), ::il2cpp_utils::ExtractType(period)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, state, dueTime, period);
}
// Autogenerated method: System.Threading.Timer.Change
bool System::Threading::Timer::Change(int dueTime, int period) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timer::Change");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Change", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dueTime), ::il2cpp_utils::ExtractType(period)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dueTime, period);
}
// Autogenerated method: System.Threading.Timer.Change
bool System::Threading::Timer::Change(::System::TimeSpan dueTime, ::System::TimeSpan period) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timer::Change");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Change", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dueTime), ::il2cpp_utils::ExtractType(period)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dueTime, period);
}
// Autogenerated method: System.Threading.Timer.Dispose
void System::Threading::Timer::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timer::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::Timer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Timer.Change
bool System::Threading::Timer::Change(int64_t dueTime, int64_t period, bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timer::Change");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Change", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dueTime), ::il2cpp_utils::ExtractType(period), ::il2cpp_utils::ExtractType(first)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dueTime, period, first);
}
// Autogenerated method: System.Threading.Timer.KeepRootedWhileScheduled
void System::Threading::Timer::KeepRootedWhileScheduled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timer::KeepRootedWhileScheduled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeepRootedWhileScheduled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Timer.GetTimeMonotonic
int64_t System::Threading::Timer::GetTimeMonotonic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timer::GetTimeMonotonic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Timer", "GetTimeMonotonic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Timer/System.Threading.TimerComparer
#include "System/Threading/Timer_TimerComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Timer/System.Threading.TimerComparer.Compare
int System::Threading::Timer::TimerComparer::Compare(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Timer::TimerComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::Timer::TimerComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
