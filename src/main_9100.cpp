// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoAudioOutputMode
#include "UnityEngine/Video/VideoAudioOutputMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAudioOutputMode None
::UnityEngine::Video::VideoAudioOutputMode UnityEngine::Video::VideoAudioOutputMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAudioOutputMode>("UnityEngine.Video", "VideoAudioOutputMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAudioOutputMode None
void UnityEngine::Video::VideoAudioOutputMode::_set_None(::UnityEngine::Video::VideoAudioOutputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAudioOutputMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAudioOutputMode AudioSource
::UnityEngine::Video::VideoAudioOutputMode UnityEngine::Video::VideoAudioOutputMode::_get_AudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_get_AudioSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAudioOutputMode>("UnityEngine.Video", "VideoAudioOutputMode", "AudioSource"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAudioOutputMode AudioSource
void UnityEngine::Video::VideoAudioOutputMode::_set_AudioSource(::UnityEngine::Video::VideoAudioOutputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_set_AudioSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAudioOutputMode", "AudioSource", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAudioOutputMode Direct
::UnityEngine::Video::VideoAudioOutputMode UnityEngine::Video::VideoAudioOutputMode::_get_Direct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_get_Direct");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAudioOutputMode>("UnityEngine.Video", "VideoAudioOutputMode", "Direct"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAudioOutputMode Direct
void UnityEngine::Video::VideoAudioOutputMode::_set_Direct(::UnityEngine::Video::VideoAudioOutputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_set_Direct");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAudioOutputMode", "Direct", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAudioOutputMode APIOnly
::UnityEngine::Video::VideoAudioOutputMode UnityEngine::Video::VideoAudioOutputMode::_get_APIOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_get_APIOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAudioOutputMode>("UnityEngine.Video", "VideoAudioOutputMode", "APIOnly"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAudioOutputMode APIOnly
void UnityEngine::Video::VideoAudioOutputMode::_set_APIOnly(::UnityEngine::Video::VideoAudioOutputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_set_APIOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAudioOutputMode", "APIOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& UnityEngine::Video::VideoAudioOutputMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoPlayer
#include "UnityEngine/Video/VideoPlayer.hpp"
// Including type: UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler
#include "UnityEngine/Video/VideoPlayer_EventHandler.hpp"
// Including type: UnityEngine.Video.VideoPlayer/UnityEngine.Video.ErrorEventHandler
#include "UnityEngine/Video/VideoPlayer_ErrorEventHandler.hpp"
// Including type: UnityEngine.Video.VideoPlayer/UnityEngine.Video.FrameReadyEventHandler
#include "UnityEngine/Video/VideoPlayer_FrameReadyEventHandler.hpp"
// Including type: UnityEngine.Video.VideoPlayer/UnityEngine.Video.TimeEventHandler
#include "UnityEngine/Video/VideoPlayer_TimeEventHandler.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler prepareCompleted
[[deprecated]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_prepareCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_prepareCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prepareCompleted"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler loopPointReached
[[deprecated]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_loopPointReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_loopPointReached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loopPointReached"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler started
[[deprecated]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "started"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler frameDropped
[[deprecated]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_frameDropped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_frameDropped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameDropped"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.ErrorEventHandler errorReceived
[[deprecated]] ::UnityEngine::Video::VideoPlayer::ErrorEventHandler*& UnityEngine::Video::VideoPlayer::dyn_errorReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_errorReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "errorReceived"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::ErrorEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler seekCompleted
[[deprecated]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_seekCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_seekCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seekCompleted"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.TimeEventHandler clockResyncOccurred
[[deprecated]] ::UnityEngine::Video::VideoPlayer::TimeEventHandler*& UnityEngine::Video::VideoPlayer::dyn_clockResyncOccurred() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_clockResyncOccurred");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clockResyncOccurred"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::TimeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.FrameReadyEventHandler frameReady
[[deprecated]] ::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler*& UnityEngine::Video::VideoPlayer::dyn_frameReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_frameReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameReady"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.set_url
void UnityEngine::Video::VideoPlayer::set_url(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::set_url");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_url", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.get_isPrepared
bool UnityEngine::Video::VideoPlayer::get_isPrepared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::get_isPrepared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPrepared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.get_isPlaying
bool UnityEngine::Video::VideoPlayer::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.get_time
double UnityEngine::Video::VideoPlayer::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.set_time
void UnityEngine::Video::VideoPlayer::set_time(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.get_length
double UnityEngine::Video::VideoPlayer::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.add_loopPointReached
void UnityEngine::Video::VideoPlayer::add_loopPointReached(::UnityEngine::Video::VideoPlayer::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::add_loopPointReached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_loopPointReached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.remove_loopPointReached
void UnityEngine::Video::VideoPlayer::remove_loopPointReached(::UnityEngine::Video::VideoPlayer::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::remove_loopPointReached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_loopPointReached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.add_seekCompleted
void UnityEngine::Video::VideoPlayer::add_seekCompleted(::UnityEngine::Video::VideoPlayer::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::add_seekCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_seekCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.remove_seekCompleted
void UnityEngine::Video::VideoPlayer::remove_seekCompleted(::UnityEngine::Video::VideoPlayer::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::remove_seekCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_seekCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.Prepare
void UnityEngine::Video::VideoPlayer::Prepare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::Prepare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Prepare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.Play
void UnityEngine::Video::VideoPlayer::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.Pause
void UnityEngine::Video::VideoPlayer::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.Stop
void UnityEngine::Video::VideoPlayer::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.SetTargetAudioSource
void UnityEngine::Video::VideoPlayer::SetTargetAudioSource(uint16_t trackIndex, ::UnityEngine::AudioSource* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::SetTargetAudioSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTargetAudioSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackIndex), ::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, trackIndex, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokePrepareCompletedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokePrepareCompletedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokePrepareCompletedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokePrepareCompletedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeFrameReadyCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeFrameReadyCallback_Internal(::UnityEngine::Video::VideoPlayer* source, int64_t frameIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeFrameReadyCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeFrameReadyCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(frameIdx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, frameIdx);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeLoopPointReachedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeLoopPointReachedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeLoopPointReachedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeLoopPointReachedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeStartedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeStartedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeStartedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeStartedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeFrameDroppedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeFrameDroppedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeFrameDroppedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeFrameDroppedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeErrorReceivedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeErrorReceivedCallback_Internal(::UnityEngine::Video::VideoPlayer* source, ::StringW errorStr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeErrorReceivedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeErrorReceivedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(errorStr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, errorStr);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeSeekCompletedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeSeekCompletedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeSeekCompletedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeSeekCompletedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeClockResyncOccurredCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeClockResyncOccurredCallback_Internal(::UnityEngine::Video::VideoPlayer* source, double seconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeClockResyncOccurredCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeClockResyncOccurredCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(seconds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, seconds);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler
#include "UnityEngine/Video/VideoPlayer_EventHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler.Invoke
void UnityEngine::Video::VideoPlayer::EventHandler::Invoke(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::EventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::EventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler.BeginInvoke
::System::IAsyncResult* UnityEngine::Video::VideoPlayer::EventHandler::BeginInvoke(::UnityEngine::Video::VideoPlayer* source, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::EventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::EventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, source, callback, object);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler.EndInvoke
void UnityEngine::Video::VideoPlayer::EventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::EventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::EventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Video.VideoPlayer/UnityEngine.Video.ErrorEventHandler
#include "UnityEngine/Video/VideoPlayer_ErrorEventHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.ErrorEventHandler.Invoke
void UnityEngine::Video::VideoPlayer::ErrorEventHandler::Invoke(::UnityEngine::Video::VideoPlayer* source, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::ErrorEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::ErrorEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, message);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.ErrorEventHandler.BeginInvoke
::System::IAsyncResult* UnityEngine::Video::VideoPlayer::ErrorEventHandler::BeginInvoke(::UnityEngine::Video::VideoPlayer* source, ::StringW message, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::ErrorEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::ErrorEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, source, message, callback, object);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.ErrorEventHandler.EndInvoke
void UnityEngine::Video::VideoPlayer::ErrorEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::ErrorEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::ErrorEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Video.VideoPlayer/UnityEngine.Video.FrameReadyEventHandler
#include "UnityEngine/Video/VideoPlayer_FrameReadyEventHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.FrameReadyEventHandler.Invoke
void UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::Invoke(::UnityEngine::Video::VideoPlayer* source, int64_t frameIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, frameIdx);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.FrameReadyEventHandler.BeginInvoke
::System::IAsyncResult* UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::BeginInvoke(::UnityEngine::Video::VideoPlayer* source, int64_t frameIdx, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, source, frameIdx, callback, object);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.FrameReadyEventHandler.EndInvoke
void UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Video.VideoPlayer/UnityEngine.Video.TimeEventHandler
#include "UnityEngine/Video/VideoPlayer_TimeEventHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.TimeEventHandler.Invoke
void UnityEngine::Video::VideoPlayer::TimeEventHandler::Invoke(::UnityEngine::Video::VideoPlayer* source, double seconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::TimeEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::TimeEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, seconds);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.TimeEventHandler.BeginInvoke
::System::IAsyncResult* UnityEngine::Video::VideoPlayer::TimeEventHandler::BeginInvoke(::UnityEngine::Video::VideoPlayer* source, double seconds, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::TimeEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::TimeEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, source, seconds, callback, object);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.TimeEventHandler.EndInvoke
void UnityEngine::Video::VideoPlayer::TimeEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::TimeEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::TimeEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RenderTextureDescriptor
#include "UnityEngine/RenderTextureDescriptor.hpp"
// Including type: UnityEngine.XR.XRSettings
#include "UnityEngine/XR/XRSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.XRSettings.get_enabled
bool UnityEngine::XR::XRSettings::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_showDeviceView
bool UnityEngine::XR::XRSettings::get_showDeviceView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_showDeviceView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_showDeviceView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.set_showDeviceView
void UnityEngine::XR::XRSettings::set_showDeviceView(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::set_showDeviceView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "set_showDeviceView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_eyeTextureWidth
int UnityEngine::XR::XRSettings::get_eyeTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_eyeTextureWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_eyeTextureWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_eyeTextureHeight
int UnityEngine::XR::XRSettings::get_eyeTextureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_eyeTextureHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_eyeTextureHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_eyeTextureDesc
::UnityEngine::RenderTextureDescriptor UnityEngine::XR::XRSettings::get_eyeTextureDesc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_eyeTextureDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_eyeTextureDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTextureDescriptor, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_renderViewportScale
float UnityEngine::XR::XRSettings::get_renderViewportScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_renderViewportScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_renderViewportScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_renderViewportScaleInternal
float UnityEngine::XR::XRSettings::get_renderViewportScaleInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_renderViewportScaleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_renderViewportScaleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_loadedDeviceName
::StringW UnityEngine::XR::XRSettings::get_loadedDeviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_loadedDeviceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_loadedDeviceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_eyeTextureDesc_Injected
void UnityEngine::XR::XRSettings::get_eyeTextureDesc_Injected(ByRef<::UnityEngine::RenderTextureDescriptor> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_eyeTextureDesc_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_eyeTextureDesc_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::RenderTextureDescriptor&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRDevice
#include "UnityEngine/XR/XRDevice.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x6E6360
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.String> deviceLoaded
::System::Action_1<::StringW>* UnityEngine::XR::XRDevice::_get_deviceLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::_get_deviceLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("UnityEngine.XR", "XRDevice", "deviceLoaded"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.String> deviceLoaded
void UnityEngine::XR::XRDevice::_set_deviceLoaded(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::_set_deviceLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRDevice", "deviceLoaded", value));
}
// Autogenerated method: UnityEngine.XR.XRDevice..cctor
void UnityEngine::XR::XRDevice::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRDevice.InvokeDeviceLoaded
void UnityEngine::XR::XRDevice::InvokeDeviceLoaded(::StringW loadedDeviceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::InvokeDeviceLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", "InvokeDeviceLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loadedDeviceName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, loadedDeviceName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputTracking
#include "UnityEngine/XR/InputTracking.hpp"
// Including type: UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType
#include "UnityEngine/XR/InputTracking_TrackingStateEventType.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x6C9720
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingAcquired
::System::Action_1<::UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_trackingAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_get_trackingAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "trackingAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingAcquired
void UnityEngine::XR::InputTracking::_set_trackingAcquired(::System::Action_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_set_trackingAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "trackingAcquired", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x6C975C
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingLost
::System::Action_1<::UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_trackingLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_get_trackingLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "trackingLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingLost
void UnityEngine::XR::InputTracking::_set_trackingLost(::System::Action_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_set_trackingLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "trackingLost", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x6C9798
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeAdded
::System::Action_1<::UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_nodeAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_get_nodeAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "nodeAdded"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeAdded
void UnityEngine::XR::InputTracking::_set_nodeAdded(::System::Action_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_set_nodeAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "nodeAdded", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x6C97D4
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeRemoved
::System::Action_1<::UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_nodeRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_get_nodeRemoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "nodeRemoved"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeRemoved
void UnityEngine::XR::InputTracking::_set_nodeRemoved(::System::Action_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_set_nodeRemoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "nodeRemoved", value));
}
// Autogenerated method: UnityEngine.XR.InputTracking..cctor
void UnityEngine::XR::InputTracking::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputTracking.InvokeTrackingEvent
void UnityEngine::XR::InputTracking::InvokeTrackingEvent(::UnityEngine::XR::InputTracking::TrackingStateEventType eventType, ::UnityEngine::XR::XRNode nodeType, int64_t uniqueID, bool tracked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::InvokeTrackingEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "InvokeTrackingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(uniqueID), ::il2cpp_utils::ExtractType(tracked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventType, nodeType, uniqueID, tracked);
}
// Autogenerated method: UnityEngine.XR.InputTracking.GetNodeStates
void UnityEngine::XR::InputTracking::GetNodeStates(::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* nodeStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::GetNodeStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "GetNodeStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeStates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeStates);
}
// Autogenerated method: UnityEngine.XR.InputTracking.GetNodeStates_Internal
void UnityEngine::XR::InputTracking::GetNodeStates_Internal(::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* nodeStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::GetNodeStates_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "GetNodeStates_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeStates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeStates);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType
#include "UnityEngine/XR/InputTracking_TrackingStateEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType NodeAdded
::UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeAdded"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType NodeAdded
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeAdded(::UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeAdded", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType NodeRemoved
::UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeRemoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeRemoved"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType NodeRemoved
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeRemoved(::UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeRemoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeRemoved", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType TrackingAcquired
::UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingAcquired"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType TrackingAcquired
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingAcquired(::UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingAcquired", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType TrackingLost
::UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingLost"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType TrackingLost
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingLost(::UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingLost", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& UnityEngine::XR::InputTracking::TrackingStateEventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode LeftEye
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_LeftEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_LeftEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "LeftEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode LeftEye
void UnityEngine::XR::XRNode::_set_LeftEye(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_LeftEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "LeftEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode RightEye
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_RightEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_RightEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "RightEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode RightEye
void UnityEngine::XR::XRNode::_set_RightEye(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_RightEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "RightEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode CenterEye
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_CenterEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_CenterEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "CenterEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode CenterEye
void UnityEngine::XR::XRNode::_set_CenterEye(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_CenterEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "CenterEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode Head
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "Head"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode Head
void UnityEngine::XR::XRNode::_set_Head(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode LeftHand
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode LeftHand
void UnityEngine::XR::XRNode::_set_LeftHand(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode RightHand
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode RightHand
void UnityEngine::XR::XRNode::_set_RightHand(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "RightHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode GameController
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_GameController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_GameController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "GameController"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode GameController
void UnityEngine::XR::XRNode::_set_GameController(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_GameController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "GameController", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode TrackingReference
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_TrackingReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_TrackingReference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "TrackingReference"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode TrackingReference
void UnityEngine::XR::XRNode::_set_TrackingReference(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_TrackingReference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "TrackingReference", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode HardwareTracker
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_HardwareTracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_HardwareTracker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "HardwareTracker"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode HardwareTracker
void UnityEngine::XR::XRNode::_set_HardwareTracker(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_HardwareTracker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "HardwareTracker", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& UnityEngine::XR::XRNode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.AvailableTrackingData
#include "UnityEngine/XR/AvailableTrackingData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData None
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData None
void UnityEngine::XR::AvailableTrackingData::_set_None(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData PositionAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_PositionAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_PositionAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "PositionAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData PositionAvailable
void UnityEngine::XR::AvailableTrackingData::_set_PositionAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_PositionAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "PositionAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData RotationAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_RotationAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_RotationAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "RotationAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData RotationAvailable
void UnityEngine::XR::AvailableTrackingData::_set_RotationAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_RotationAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "RotationAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData VelocityAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_VelocityAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_VelocityAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "VelocityAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData VelocityAvailable
void UnityEngine::XR::AvailableTrackingData::_set_VelocityAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_VelocityAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "VelocityAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData AngularVelocityAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_AngularVelocityAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_AngularVelocityAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "AngularVelocityAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData AngularVelocityAvailable
void UnityEngine::XR::AvailableTrackingData::_set_AngularVelocityAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_AngularVelocityAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "AngularVelocityAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData AccelerationAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_AccelerationAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_AccelerationAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "AccelerationAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData AccelerationAvailable
void UnityEngine::XR::AvailableTrackingData::_set_AccelerationAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_AccelerationAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "AccelerationAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData AngularAccelerationAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_AngularAccelerationAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_AngularAccelerationAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "AngularAccelerationAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData AngularAccelerationAvailable
void UnityEngine::XR::AvailableTrackingData::_set_AngularAccelerationAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_AngularAccelerationAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "AngularAccelerationAvailable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& UnityEngine::XR::AvailableTrackingData::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRNodeState
#include "UnityEngine/XR/XRNodeState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.XRNode m_Type
[[deprecated]] ::UnityEngine::XR::XRNode& UnityEngine::XR::XRNodeState::dyn_m_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Type"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.AvailableTrackingData m_AvailableFields
[[deprecated]] ::UnityEngine::XR::AvailableTrackingData& UnityEngine::XR::XRNodeState::dyn_m_AvailableFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_AvailableFields");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AvailableFields"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::AvailableTrackingData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Position
[[deprecated]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_Rotation
[[deprecated]] ::UnityEngine::Quaternion& UnityEngine::XR::XRNodeState::dyn_m_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Velocity
[[deprecated]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Velocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_AngularVelocity
[[deprecated]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_AngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_AngularVelocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AngularVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Acceleration
[[deprecated]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Acceleration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Acceleration"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_AngularAcceleration
[[deprecated]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_AngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_AngularAcceleration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AngularAcceleration"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Tracked
[[deprecated]] int& UnityEngine::XR::XRNodeState::dyn_m_Tracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Tracked");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tracked"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_UniqueID
[[deprecated]] uint64_t& UnityEngine::XR::XRNodeState::dyn_m_UniqueID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_UniqueID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UniqueID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.set_uniqueID
void UnityEngine::XR::XRNodeState::set_uniqueID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::set_uniqueID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_uniqueID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.get_nodeType
::UnityEngine::XR::XRNode UnityEngine::XR::XRNodeState::get_nodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::get_nodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_nodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::XRNode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.set_nodeType
void UnityEngine::XR::XRNodeState::set_nodeType(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::set_nodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_nodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.set_tracked
void UnityEngine::XR::XRNodeState::set_tracked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::set_tracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_tracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetPosition
bool UnityEngine::XR::XRNodeState::TryGetPosition(ByRef<::UnityEngine::Vector3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(position));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetRotation
bool UnityEngine::XR::XRNodeState::TryGetRotation(ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(rotation));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetVelocity
bool UnityEngine::XR::XRNodeState::TryGetVelocity(ByRef<::UnityEngine::Vector3> velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(velocity));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetAngularVelocity
bool UnityEngine::XR::XRNodeState::TryGetAngularVelocity(ByRef<::UnityEngine::Vector3> angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(angularVelocity));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetAcceleration
bool UnityEngine::XR::XRNodeState::TryGetAcceleration(ByRef<::UnityEngine::Vector3> acceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(acceleration));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetAngularAcceleration
bool UnityEngine::XR::XRNodeState::TryGetAngularAcceleration(ByRef<::UnityEngine::Vector3> angularAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(angularAcceleration));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGet
bool UnityEngine::XR::XRNodeState::TryGet(::UnityEngine::Vector3 inValue, ::UnityEngine::XR::AvailableTrackingData availabilityFlag, ByRef<::UnityEngine::Vector3> outValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inValue), ::il2cpp_utils::ExtractType(availabilityFlag), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, inValue, availabilityFlag, byref(outValue));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGet
bool UnityEngine::XR::XRNodeState::TryGet(::UnityEngine::Quaternion inValue, ::UnityEngine::XR::AvailableTrackingData availabilityFlag, ByRef<::UnityEngine::Quaternion> outValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inValue), ::il2cpp_utils::ExtractType(availabilityFlag), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, inValue, availabilityFlag, byref(outValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputFeatureType
#include "UnityEngine/XR/InputFeatureType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Custom
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Custom
void UnityEngine::XR::InputFeatureType::_set_Custom(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Binary
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Binary
void UnityEngine::XR::InputFeatureType::_set_Binary(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Binary", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType DiscreteStates
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_DiscreteStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_DiscreteStates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "DiscreteStates"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType DiscreteStates
void UnityEngine::XR::InputFeatureType::_set_DiscreteStates(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_DiscreteStates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "DiscreteStates", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Axis1D
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Axis1D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Axis1D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Axis1D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Axis1D
void UnityEngine::XR::InputFeatureType::_set_Axis1D(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Axis1D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Axis1D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Axis2D
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Axis2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Axis2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Axis2D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Axis2D
void UnityEngine::XR::InputFeatureType::_set_Axis2D(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Axis2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Axis2D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Axis3D
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Axis3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Axis3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Axis3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Axis3D
void UnityEngine::XR::InputFeatureType::_set_Axis3D(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Axis3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Axis3D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Rotation
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Rotation
void UnityEngine::XR::InputFeatureType::_set_Rotation(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Rotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Hand
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Hand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Hand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Hand
void UnityEngine::XR::InputFeatureType::_set_Hand(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Hand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Hand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Bone
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Bone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Bone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Bone"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Bone
void UnityEngine::XR::InputFeatureType::_set_Bone(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Bone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Bone", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Eyes
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Eyes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Eyes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Eyes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Eyes
void UnityEngine::XR::InputFeatureType::_set_Eyes(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Eyes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Eyes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType kUnityXRInputFeatureTypeInvalid
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_kUnityXRInputFeatureTypeInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_kUnityXRInputFeatureTypeInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "kUnityXRInputFeatureTypeInvalid"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType kUnityXRInputFeatureTypeInvalid
void UnityEngine::XR::InputFeatureType::_set_kUnityXRInputFeatureTypeInvalid(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_kUnityXRInputFeatureTypeInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "kUnityXRInputFeatureTypeInvalid", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated]] uint& UnityEngine::XR::InputFeatureType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.ConnectionChangeType
#include "UnityEngine/XR/ConnectionChangeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.ConnectionChangeType Connected
::UnityEngine::XR::ConnectionChangeType UnityEngine::XR::ConnectionChangeType::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::ConnectionChangeType>("UnityEngine.XR", "ConnectionChangeType", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.ConnectionChangeType Connected
void UnityEngine::XR::ConnectionChangeType::_set_Connected(::UnityEngine::XR::ConnectionChangeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "ConnectionChangeType", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.ConnectionChangeType Disconnected
::UnityEngine::XR::ConnectionChangeType UnityEngine::XR::ConnectionChangeType::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::ConnectionChangeType>("UnityEngine.XR", "ConnectionChangeType", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.ConnectionChangeType Disconnected
void UnityEngine::XR::ConnectionChangeType::_set_Disconnected(::UnityEngine::XR::ConnectionChangeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "ConnectionChangeType", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.ConnectionChangeType ConfigChange
::UnityEngine::XR::ConnectionChangeType UnityEngine::XR::ConnectionChangeType::_get_ConfigChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::_get_ConfigChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::ConnectionChangeType>("UnityEngine.XR", "ConnectionChangeType", "ConfigChange"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.ConnectionChangeType ConfigChange
void UnityEngine::XR::ConnectionChangeType::_set_ConfigChange(::UnityEngine::XR::ConnectionChangeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::_set_ConfigChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "ConnectionChangeType", "ConfigChange", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated]] uint& UnityEngine::XR::ConnectionChangeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputDeviceCharacteristics
#include "UnityEngine/XR/InputDeviceCharacteristics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics None
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics None
void UnityEngine::XR::InputDeviceCharacteristics::_set_None(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics HeadMounted
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_HeadMounted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_HeadMounted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "HeadMounted"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics HeadMounted
void UnityEngine::XR::InputDeviceCharacteristics::_set_HeadMounted(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_HeadMounted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "HeadMounted", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics Camera
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_Camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_Camera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "Camera"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics Camera
void UnityEngine::XR::InputDeviceCharacteristics::_set_Camera(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_Camera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "Camera", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics HeldInHand
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_HeldInHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_HeldInHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "HeldInHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics HeldInHand
void UnityEngine::XR::InputDeviceCharacteristics::_set_HeldInHand(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_HeldInHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "HeldInHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics HandTracking
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_HandTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_HandTracking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "HandTracking"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics HandTracking
void UnityEngine::XR::InputDeviceCharacteristics::_set_HandTracking(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_HandTracking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "HandTracking", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics EyeTracking
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_EyeTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_EyeTracking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "EyeTracking"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics EyeTracking
void UnityEngine::XR::InputDeviceCharacteristics::_set_EyeTracking(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_EyeTracking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "EyeTracking", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics TrackedDevice
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_TrackedDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_TrackedDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "TrackedDevice"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics TrackedDevice
void UnityEngine::XR::InputDeviceCharacteristics::_set_TrackedDevice(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_TrackedDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "TrackedDevice", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics Controller
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_Controller");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "Controller"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics Controller
void UnityEngine::XR::InputDeviceCharacteristics::_set_Controller(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_Controller");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "Controller", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics TrackingReference
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_TrackingReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_TrackingReference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "TrackingReference"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics TrackingReference
void UnityEngine::XR::InputDeviceCharacteristics::_set_TrackingReference(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_TrackingReference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "TrackingReference", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics Left
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "Left"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics Left
void UnityEngine::XR::InputDeviceCharacteristics::_set_Left(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics Right
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "Right"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics Right
void UnityEngine::XR::InputDeviceCharacteristics::_set_Right(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics Simulated6DOF
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_Simulated6DOF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_Simulated6DOF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "Simulated6DOF"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics Simulated6DOF
void UnityEngine::XR::InputDeviceCharacteristics::_set_Simulated6DOF(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_Simulated6DOF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "Simulated6DOF", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated]] uint& UnityEngine::XR::InputDeviceCharacteristics::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputTrackingState
#include "UnityEngine/XR/InputTrackingState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTrackingState None
::UnityEngine::XR::InputTrackingState UnityEngine::XR::InputTrackingState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTrackingState>("UnityEngine.XR", "InputTrackingState", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTrackingState None
void UnityEngine::XR::InputTrackingState::_set_None(::UnityEngine::XR::InputTrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTrackingState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTrackingState Position
::UnityEngine::XR::InputTrackingState UnityEngine::XR::InputTrackingState::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTrackingState>("UnityEngine.XR", "InputTrackingState", "Position"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTrackingState Position
void UnityEngine::XR::InputTrackingState::_set_Position(::UnityEngine::XR::InputTrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTrackingState", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTrackingState Rotation
::UnityEngine::XR::InputTrackingState UnityEngine::XR::InputTrackingState::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTrackingState>("UnityEngine.XR", "InputTrackingState", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTrackingState Rotation
void UnityEngine::XR::InputTrackingState::_set_Rotation(::UnityEngine::XR::InputTrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTrackingState", "Rotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTrackingState Velocity
::UnityEngine::XR::InputTrackingState UnityEngine::XR::InputTrackingState::_get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_get_Velocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTrackingState>("UnityEngine.XR", "InputTrackingState", "Velocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTrackingState Velocity
void UnityEngine::XR::InputTrackingState::_set_Velocity(::UnityEngine::XR::InputTrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_set_Velocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTrackingState", "Velocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTrackingState AngularVelocity
::UnityEngine::XR::InputTrackingState UnityEngine::XR::InputTrackingState::_get_AngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_get_AngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTrackingState>("UnityEngine.XR", "InputTrackingState", "AngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTrackingState AngularVelocity
void UnityEngine::XR::InputTrackingState::_set_AngularVelocity(::UnityEngine::XR::InputTrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_set_AngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTrackingState", "AngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTrackingState Acceleration
::UnityEngine::XR::InputTrackingState UnityEngine::XR::InputTrackingState::_get_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_get_Acceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTrackingState>("UnityEngine.XR", "InputTrackingState", "Acceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTrackingState Acceleration
void UnityEngine::XR::InputTrackingState::_set_Acceleration(::UnityEngine::XR::InputTrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_set_Acceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTrackingState", "Acceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTrackingState AngularAcceleration
::UnityEngine::XR::InputTrackingState UnityEngine::XR::InputTrackingState::_get_AngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_get_AngularAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTrackingState>("UnityEngine.XR", "InputTrackingState", "AngularAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTrackingState AngularAcceleration
void UnityEngine::XR::InputTrackingState::_set_AngularAcceleration(::UnityEngine::XR::InputTrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_set_AngularAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTrackingState", "AngularAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTrackingState All
::UnityEngine::XR::InputTrackingState UnityEngine::XR::InputTrackingState::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTrackingState>("UnityEngine.XR", "InputTrackingState", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTrackingState All
void UnityEngine::XR::InputTrackingState::_set_All(::UnityEngine::XR::InputTrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTrackingState", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated]] uint& UnityEngine::XR::InputTrackingState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.InputFeatureUsage
#include "UnityEngine/XR/InputFeatureUsage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String m_Name
[[deprecated]] ::StringW& UnityEngine::XR::InputFeatureUsage::dyn_m_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::dyn_m_Name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.XR.InputFeatureType m_InternalType
[[deprecated]] ::UnityEngine::XR::InputFeatureType& UnityEngine::XR::InputFeatureUsage::dyn_m_InternalType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::dyn_m_InternalType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InternalType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputFeatureType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.get_name
::StringW UnityEngine::XR::InputFeatureUsage::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.get_internalType
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureUsage::get_internalType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::get_internalType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_internalType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::InputFeatureType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.Equals
bool UnityEngine::XR::InputFeatureUsage::Equals(::UnityEngine::XR::InputFeatureUsage other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::XR::InputFeatureUsage), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.Equals
bool UnityEngine::XR::InputFeatureUsage::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.GetHashCode
int UnityEngine::XR::InputFeatureUsage::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.CommonUsages
#include "UnityEngine/XR/CommonUsages.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> isTracked
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_isTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_isTracked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "isTracked"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> isTracked
void UnityEngine::XR::CommonUsages::_set_isTracked(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_isTracked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "isTracked", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primaryButton
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_primaryButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_primaryButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "primaryButton"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primaryButton
void UnityEngine::XR::CommonUsages::_set_primaryButton(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_primaryButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "primaryButton", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primaryTouch
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_primaryTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_primaryTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "primaryTouch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primaryTouch
void UnityEngine::XR::CommonUsages::_set_primaryTouch(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_primaryTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "primaryTouch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondaryButton
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_secondaryButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_secondaryButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "secondaryButton"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondaryButton
void UnityEngine::XR::CommonUsages::_set_secondaryButton(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_secondaryButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "secondaryButton", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondaryTouch
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_secondaryTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_secondaryTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "secondaryTouch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondaryTouch
void UnityEngine::XR::CommonUsages::_set_secondaryTouch(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_secondaryTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "secondaryTouch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> gripButton
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_gripButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_gripButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "gripButton"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> gripButton
void UnityEngine::XR::CommonUsages::_set_gripButton(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_gripButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "gripButton", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> triggerButton
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_triggerButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_triggerButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "triggerButton"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> triggerButton
void UnityEngine::XR::CommonUsages::_set_triggerButton(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_triggerButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "triggerButton", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> menuButton
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_menuButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_menuButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "menuButton"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> menuButton
void UnityEngine::XR::CommonUsages::_set_menuButton(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_menuButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "menuButton", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primary2DAxisClick
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_primary2DAxisClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_primary2DAxisClick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "primary2DAxisClick"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primary2DAxisClick
void UnityEngine::XR::CommonUsages::_set_primary2DAxisClick(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_primary2DAxisClick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "primary2DAxisClick", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primary2DAxisTouch
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_primary2DAxisTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_primary2DAxisTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "primary2DAxisTouch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primary2DAxisTouch
void UnityEngine::XR::CommonUsages::_set_primary2DAxisTouch(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_primary2DAxisTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "primary2DAxisTouch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondary2DAxisClick
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_secondary2DAxisClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_secondary2DAxisClick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "secondary2DAxisClick"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondary2DAxisClick
void UnityEngine::XR::CommonUsages::_set_secondary2DAxisClick(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_secondary2DAxisClick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "secondary2DAxisClick", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondary2DAxisTouch
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_secondary2DAxisTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_secondary2DAxisTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "secondary2DAxisTouch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondary2DAxisTouch
void UnityEngine::XR::CommonUsages::_set_secondary2DAxisTouch(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_secondary2DAxisTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "secondary2DAxisTouch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> userPresence
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_userPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_userPresence");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "userPresence"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> userPresence
void UnityEngine::XR::CommonUsages::_set_userPresence(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_userPresence");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "userPresence", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.XR.InputTrackingState> trackingState
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::InputTrackingState> UnityEngine::XR::CommonUsages::_get_trackingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_trackingState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::InputTrackingState>>("UnityEngine.XR", "CommonUsages", "trackingState"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.XR.InputTrackingState> trackingState
void UnityEngine::XR::CommonUsages::_set_trackingState(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::InputTrackingState> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_trackingState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "trackingState", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> batteryLevel
::UnityEngine::XR::InputFeatureUsage_1<float> UnityEngine::XR::CommonUsages::_get_batteryLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_batteryLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<float>>("UnityEngine.XR", "CommonUsages", "batteryLevel"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> batteryLevel
void UnityEngine::XR::CommonUsages::_set_batteryLevel(::UnityEngine::XR::InputFeatureUsage_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_batteryLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "batteryLevel", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> trigger
::UnityEngine::XR::InputFeatureUsage_1<float> UnityEngine::XR::CommonUsages::_get_trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_trigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<float>>("UnityEngine.XR", "CommonUsages", "trigger"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> trigger
void UnityEngine::XR::CommonUsages::_set_trigger(::UnityEngine::XR::InputFeatureUsage_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_trigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "trigger", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> grip
::UnityEngine::XR::InputFeatureUsage_1<float> UnityEngine::XR::CommonUsages::_get_grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_grip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<float>>("UnityEngine.XR", "CommonUsages", "grip"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> grip
void UnityEngine::XR::CommonUsages::_set_grip(::UnityEngine::XR::InputFeatureUsage_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_grip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "grip", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2> primary2DAxis
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2> UnityEngine::XR::CommonUsages::_get_primary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_primary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>>("UnityEngine.XR", "CommonUsages", "primary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2> primary2DAxis
void UnityEngine::XR::CommonUsages::_set_primary2DAxis(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_primary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "primary2DAxis", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2> secondary2DAxis
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2> UnityEngine::XR::CommonUsages::_get_secondary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_secondary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>>("UnityEngine.XR", "CommonUsages", "secondary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2> secondary2DAxis
void UnityEngine::XR::CommonUsages::_set_secondary2DAxis(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_secondary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "secondary2DAxis", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> devicePosition
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_devicePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_devicePosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "devicePosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> devicePosition
void UnityEngine::XR::CommonUsages::_set_devicePosition(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_devicePosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "devicePosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyePosition
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_leftEyePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_leftEyePosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "leftEyePosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyePosition
void UnityEngine::XR::CommonUsages::_set_leftEyePosition(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_leftEyePosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "leftEyePosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyePosition
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_rightEyePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_rightEyePosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "rightEyePosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyePosition
void UnityEngine::XR::CommonUsages::_set_rightEyePosition(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_rightEyePosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "rightEyePosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyePosition
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_centerEyePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_centerEyePosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "centerEyePosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyePosition
void UnityEngine::XR::CommonUsages::_set_centerEyePosition(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_centerEyePosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "centerEyePosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraPosition
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_colorCameraPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_colorCameraPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "colorCameraPosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraPosition
void UnityEngine::XR::CommonUsages::_set_colorCameraPosition(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_colorCameraPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "colorCameraPosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_deviceVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_deviceVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "deviceVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceVelocity
void UnityEngine::XR::CommonUsages::_set_deviceVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_deviceVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "deviceVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceAngularVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_deviceAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_deviceAngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "deviceAngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceAngularVelocity
void UnityEngine::XR::CommonUsages::_set_deviceAngularVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_deviceAngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "deviceAngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_leftEyeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_leftEyeVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "leftEyeVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeVelocity
void UnityEngine::XR::CommonUsages::_set_leftEyeVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_leftEyeVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "leftEyeVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeAngularVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_leftEyeAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_leftEyeAngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "leftEyeAngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeAngularVelocity
void UnityEngine::XR::CommonUsages::_set_leftEyeAngularVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_leftEyeAngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "leftEyeAngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_rightEyeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_rightEyeVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "rightEyeVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeVelocity
void UnityEngine::XR::CommonUsages::_set_rightEyeVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_rightEyeVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "rightEyeVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeAngularVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_rightEyeAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_rightEyeAngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "rightEyeAngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeAngularVelocity
void UnityEngine::XR::CommonUsages::_set_rightEyeAngularVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_rightEyeAngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "rightEyeAngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_centerEyeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_centerEyeVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "centerEyeVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeVelocity
void UnityEngine::XR::CommonUsages::_set_centerEyeVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_centerEyeVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "centerEyeVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeAngularVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_centerEyeAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_centerEyeAngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "centerEyeAngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeAngularVelocity
void UnityEngine::XR::CommonUsages::_set_centerEyeAngularVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_centerEyeAngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "centerEyeAngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_colorCameraVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_colorCameraVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "colorCameraVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraVelocity
void UnityEngine::XR::CommonUsages::_set_colorCameraVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_colorCameraVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "colorCameraVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraAngularVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_colorCameraAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_colorCameraAngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "colorCameraAngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraAngularVelocity
void UnityEngine::XR::CommonUsages::_set_colorCameraAngularVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_colorCameraAngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "colorCameraAngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_deviceAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_deviceAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "deviceAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceAcceleration
void UnityEngine::XR::CommonUsages::_set_deviceAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_deviceAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "deviceAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceAngularAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_deviceAngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_deviceAngularAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "deviceAngularAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceAngularAcceleration
void UnityEngine::XR::CommonUsages::_set_deviceAngularAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_deviceAngularAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "deviceAngularAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_leftEyeAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_leftEyeAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "leftEyeAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeAcceleration
void UnityEngine::XR::CommonUsages::_set_leftEyeAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_leftEyeAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "leftEyeAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeAngularAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_leftEyeAngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_leftEyeAngularAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "leftEyeAngularAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeAngularAcceleration
void UnityEngine::XR::CommonUsages::_set_leftEyeAngularAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_leftEyeAngularAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "leftEyeAngularAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_rightEyeAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_rightEyeAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "rightEyeAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeAcceleration
void UnityEngine::XR::CommonUsages::_set_rightEyeAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_rightEyeAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "rightEyeAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeAngularAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_rightEyeAngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_rightEyeAngularAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "rightEyeAngularAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeAngularAcceleration
void UnityEngine::XR::CommonUsages::_set_rightEyeAngularAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_rightEyeAngularAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "rightEyeAngularAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_centerEyeAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_centerEyeAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "centerEyeAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeAcceleration
void UnityEngine::XR::CommonUsages::_set_centerEyeAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_centerEyeAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "centerEyeAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeAngularAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_centerEyeAngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_centerEyeAngularAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "centerEyeAngularAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeAngularAcceleration
void UnityEngine::XR::CommonUsages::_set_centerEyeAngularAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_centerEyeAngularAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "centerEyeAngularAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_colorCameraAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_colorCameraAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "colorCameraAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraAcceleration
void UnityEngine::XR::CommonUsages::_set_colorCameraAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_colorCameraAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "colorCameraAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraAngularAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_colorCameraAngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_colorCameraAngularAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "colorCameraAngularAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraAngularAcceleration
void UnityEngine::XR::CommonUsages::_set_colorCameraAngularAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_colorCameraAngularAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "colorCameraAngularAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> deviceRotation
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> UnityEngine::XR::CommonUsages::_get_deviceRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_deviceRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion>>("UnityEngine.XR", "CommonUsages", "deviceRotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> deviceRotation
void UnityEngine::XR::CommonUsages::_set_deviceRotation(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_deviceRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "deviceRotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> leftEyeRotation
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> UnityEngine::XR::CommonUsages::_get_leftEyeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_leftEyeRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion>>("UnityEngine.XR", "CommonUsages", "leftEyeRotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> leftEyeRotation
void UnityEngine::XR::CommonUsages::_set_leftEyeRotation(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_leftEyeRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "leftEyeRotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> rightEyeRotation
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> UnityEngine::XR::CommonUsages::_get_rightEyeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_rightEyeRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion>>("UnityEngine.XR", "CommonUsages", "rightEyeRotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> rightEyeRotation
void UnityEngine::XR::CommonUsages::_set_rightEyeRotation(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_rightEyeRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "rightEyeRotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> centerEyeRotation
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> UnityEngine::XR::CommonUsages::_get_centerEyeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_centerEyeRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion>>("UnityEngine.XR", "CommonUsages", "centerEyeRotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> centerEyeRotation
void UnityEngine::XR::CommonUsages::_set_centerEyeRotation(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_centerEyeRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "centerEyeRotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> colorCameraRotation
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> UnityEngine::XR::CommonUsages::_get_colorCameraRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_colorCameraRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion>>("UnityEngine.XR", "CommonUsages", "colorCameraRotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> colorCameraRotation
void UnityEngine::XR::CommonUsages::_set_colorCameraRotation(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_colorCameraRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "colorCameraRotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.XR.Hand> handData
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::Hand> UnityEngine::XR::CommonUsages::_get_handData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_handData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::Hand>>("UnityEngine.XR", "CommonUsages", "handData"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.XR.Hand> handData
void UnityEngine::XR::CommonUsages::_set_handData(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::Hand> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_handData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "handData", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.XR.Eyes> eyesData
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::Eyes> UnityEngine::XR::CommonUsages::_get_eyesData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_eyesData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::Eyes>>("UnityEngine.XR", "CommonUsages", "eyesData"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.XR.Eyes> eyesData
void UnityEngine::XR::CommonUsages::_set_eyesData(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::Eyes> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_eyesData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "eyesData", value));
}
// [ObsoleteAttribute] Offset: 0x6C9884
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2> dPad
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2> UnityEngine::XR::CommonUsages::_get_dPad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_dPad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>>("UnityEngine.XR", "CommonUsages", "dPad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2> dPad
void UnityEngine::XR::CommonUsages::_set_dPad(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_dPad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "dPad", value));
}
// [ObsoleteAttribute] Offset: 0x6C98BC
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> indexFinger
::UnityEngine::XR::InputFeatureUsage_1<float> UnityEngine::XR::CommonUsages::_get_indexFinger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_indexFinger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<float>>("UnityEngine.XR", "CommonUsages", "indexFinger"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> indexFinger
void UnityEngine::XR::CommonUsages::_set_indexFinger(::UnityEngine::XR::InputFeatureUsage_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_indexFinger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "indexFinger", value));
}
// [ObsoleteAttribute] Offset: 0x6C98F4
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> middleFinger
::UnityEngine::XR::InputFeatureUsage_1<float> UnityEngine::XR::CommonUsages::_get_middleFinger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_middleFinger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<float>>("UnityEngine.XR", "CommonUsages", "middleFinger"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> middleFinger
void UnityEngine::XR::CommonUsages::_set_middleFinger(::UnityEngine::XR::InputFeatureUsage_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_middleFinger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "middleFinger", value));
}
// [ObsoleteAttribute] Offset: 0x6C992C
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> ringFinger
::UnityEngine::XR::InputFeatureUsage_1<float> UnityEngine::XR::CommonUsages::_get_ringFinger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_ringFinger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<float>>("UnityEngine.XR", "CommonUsages", "ringFinger"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> ringFinger
void UnityEngine::XR::CommonUsages::_set_ringFinger(::UnityEngine::XR::InputFeatureUsage_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_ringFinger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "ringFinger", value));
}
// [ObsoleteAttribute] Offset: 0x6C9964
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> pinkyFinger
::UnityEngine::XR::InputFeatureUsage_1<float> UnityEngine::XR::CommonUsages::_get_pinkyFinger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_pinkyFinger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<float>>("UnityEngine.XR", "CommonUsages", "pinkyFinger"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> pinkyFinger
void UnityEngine::XR::CommonUsages::_set_pinkyFinger(::UnityEngine::XR::InputFeatureUsage_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_pinkyFinger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "pinkyFinger", value));
}
// [ObsoleteAttribute] Offset: 0x6C999C
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> thumbrest
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_thumbrest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_thumbrest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "thumbrest"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> thumbrest
void UnityEngine::XR::CommonUsages::_set_thumbrest(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_thumbrest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "thumbrest", value));
}
// [ObsoleteAttribute] Offset: 0x6C99D4
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> indexTouch
::UnityEngine::XR::InputFeatureUsage_1<float> UnityEngine::XR::CommonUsages::_get_indexTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_indexTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<float>>("UnityEngine.XR", "CommonUsages", "indexTouch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> indexTouch
void UnityEngine::XR::CommonUsages::_set_indexTouch(::UnityEngine::XR::InputFeatureUsage_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_indexTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "indexTouch", value));
}
// [ObsoleteAttribute] Offset: 0x6C9A0C
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> thumbTouch
::UnityEngine::XR::InputFeatureUsage_1<float> UnityEngine::XR::CommonUsages::_get_thumbTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_thumbTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<float>>("UnityEngine.XR", "CommonUsages", "thumbTouch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> thumbTouch
void UnityEngine::XR::CommonUsages::_set_thumbTouch(::UnityEngine::XR::InputFeatureUsage_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_thumbTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "thumbTouch", value));
}
// Autogenerated method: UnityEngine.XR.CommonUsages..cctor
void UnityEngine::XR::CommonUsages::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "CommonUsages", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.InputDevice
#include "UnityEngine/XR/InputDevice.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.XRInputSubsystem
#include "UnityEngine/XR/XRInputSubsystem.hpp"
// Including type: UnityEngine.XR.InputDeviceCharacteristics
#include "UnityEngine/XR/InputDeviceCharacteristics.hpp"
// Including type: UnityEngine.XR.InputFeatureUsage`1
#include "UnityEngine/XR/InputFeatureUsage_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem> s_InputSubsystemCache
::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystem*>* UnityEngine::XR::InputDevice::_get_s_InputSubsystemCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::_get_s_InputSubsystemCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystem*>*>("UnityEngine.XR", "InputDevice", "s_InputSubsystemCache"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem> s_InputSubsystemCache
void UnityEngine::XR::InputDevice::_set_s_InputSubsystemCache(::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::_set_s_InputSubsystemCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDevice", "s_InputSubsystemCache", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_DeviceId
[[deprecated]] uint64_t& UnityEngine::XR::InputDevice::dyn_m_DeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::dyn_m_DeviceId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeviceId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Initialized
[[deprecated]] bool& UnityEngine::XR::InputDevice::dyn_m_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::dyn_m_Initialized");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.InputDevice.get_deviceId
uint64_t UnityEngine::XR::InputDevice::get_deviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::get_deviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputDevice.get_subsystem
::UnityEngine::XR::XRInputSubsystem* UnityEngine::XR::InputDevice::get_subsystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::get_subsystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_subsystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::XRInputSubsystem*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputDevice.get_characteristics
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDevice::get_characteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::get_characteristics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_characteristics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::InputDeviceCharacteristics, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputDevice..ctor
UnityEngine::XR::InputDevice::InputDevice(uint64_t deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deviceId);
}
// Autogenerated method: UnityEngine.XR.InputDevice.IsValidId
bool UnityEngine::XR::InputDevice::IsValidId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::IsValidId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValidId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputDevice.TryGetFeatureValue
bool UnityEngine::XR::InputDevice::TryGetFeatureValue(::UnityEngine::XR::InputFeatureUsage_1<bool> usage, ByRef<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::TryGetFeatureValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetFeatureValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(usage), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, usage, byref(value));
}
// Autogenerated method: UnityEngine.XR.InputDevice.Equals
bool UnityEngine::XR::InputDevice::Equals(::UnityEngine::XR::InputDevice other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::XR::InputDevice), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.InputDevice.Equals
bool UnityEngine::XR::InputDevice::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.InputDevice.GetHashCode
int UnityEngine::XR::InputDevice::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.Hand
#include "UnityEngine/XR/Hand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_DeviceId
[[deprecated]] uint64_t& UnityEngine::XR::Hand::dyn_m_DeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::dyn_m_DeviceId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeviceId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_FeatureIndex
[[deprecated]] uint& UnityEngine::XR::Hand::dyn_m_FeatureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::dyn_m_FeatureIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FeatureIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Hand.get_deviceId
uint64_t UnityEngine::XR::Hand::get_deviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::get_deviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Hand.get_featureIndex
uint UnityEngine::XR::Hand::get_featureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::get_featureIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_featureIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Hand.Equals
bool UnityEngine::XR::Hand::Equals(::UnityEngine::XR::Hand other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::XR::Hand), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.Hand.Equals
bool UnityEngine::XR::Hand::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.Hand.GetHashCode
int UnityEngine::XR::Hand::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.Eyes
#include "UnityEngine/XR/Eyes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_DeviceId
[[deprecated]] uint64_t& UnityEngine::XR::Eyes::dyn_m_DeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::dyn_m_DeviceId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeviceId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_FeatureIndex
[[deprecated]] uint& UnityEngine::XR::Eyes::dyn_m_FeatureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::dyn_m_FeatureIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FeatureIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Eyes.get_deviceId
uint64_t UnityEngine::XR::Eyes::get_deviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::get_deviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Eyes.get_featureIndex
uint UnityEngine::XR::Eyes::get_featureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::get_featureIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_featureIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Eyes.Equals
bool UnityEngine::XR::Eyes::Equals(::UnityEngine::XR::Eyes other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::XR::Eyes), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.Eyes.Equals
bool UnityEngine::XR::Eyes::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.Eyes.GetHashCode
int UnityEngine::XR::Eyes::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.Bone
#include "UnityEngine/XR/Bone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_DeviceId
[[deprecated]] uint64_t& UnityEngine::XR::Bone::dyn_m_DeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::dyn_m_DeviceId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeviceId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_FeatureIndex
[[deprecated]] uint& UnityEngine::XR::Bone::dyn_m_FeatureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::dyn_m_FeatureIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FeatureIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Bone.get_deviceId
uint64_t UnityEngine::XR::Bone::get_deviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::get_deviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Bone.get_featureIndex
uint UnityEngine::XR::Bone::get_featureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::get_featureIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_featureIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Bone.Equals
bool UnityEngine::XR::Bone::Equals(::UnityEngine::XR::Bone other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::XR::Bone), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.Bone.Equals
bool UnityEngine::XR::Bone::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.Bone.GetHashCode
int UnityEngine::XR::Bone::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputDevices
#include "UnityEngine/XR/InputDevices.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.XR.InputDeviceCharacteristics
#include "UnityEngine/XR/InputDeviceCharacteristics.hpp"
// Including type: UnityEngine.XR.ConnectionChangeType
#include "UnityEngine/XR/ConnectionChangeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.XR.InputDevice> s_InputDeviceList
::System::Collections::Generic::List_1<::UnityEngine::XR::InputDevice>* UnityEngine::XR::InputDevices::_get_s_InputDeviceList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_get_s_InputDeviceList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::InputDevice>*>("UnityEngine.XR", "InputDevices", "s_InputDeviceList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.XR.InputDevice> s_InputDeviceList
void UnityEngine::XR::InputDevices::_set_s_InputDeviceList(::System::Collections::Generic::List_1<::UnityEngine::XR::InputDevice>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_set_s_InputDeviceList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDevices", "s_InputDeviceList", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x6C9A44
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceConnected
::System::Action_1<::UnityEngine::XR::InputDevice>* UnityEngine::XR::InputDevices::_get_deviceConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_get_deviceConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::InputDevice>*>("UnityEngine.XR", "InputDevices", "deviceConnected"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceConnected
void UnityEngine::XR::InputDevices::_set_deviceConnected(::System::Action_1<::UnityEngine::XR::InputDevice>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_set_deviceConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDevices", "deviceConnected", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x6C9A80
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceDisconnected
::System::Action_1<::UnityEngine::XR::InputDevice>* UnityEngine::XR::InputDevices::_get_deviceDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_get_deviceDisconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::InputDevice>*>("UnityEngine.XR", "InputDevices", "deviceDisconnected"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceDisconnected
void UnityEngine::XR::InputDevices::_set_deviceDisconnected(::System::Action_1<::UnityEngine::XR::InputDevice>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_set_deviceDisconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDevices", "deviceDisconnected", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x6C9ABC
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceConfigChanged
::System::Action_1<::UnityEngine::XR::InputDevice>* UnityEngine::XR::InputDevices::_get_deviceConfigChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_get_deviceConfigChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::InputDevice>*>("UnityEngine.XR", "InputDevices", "deviceConfigChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceConfigChanged
void UnityEngine::XR::InputDevices::_set_deviceConfigChanged(::System::Action_1<::UnityEngine::XR::InputDevice>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_set_deviceConfigChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDevices", "deviceConfigChanged", value));
}
// Autogenerated method: UnityEngine.XR.InputDevices.GetDevicesWithCharacteristics
void UnityEngine::XR::InputDevices::GetDevicesWithCharacteristics(::UnityEngine::XR::InputDeviceCharacteristics desiredCharacteristics, ::System::Collections::Generic::List_1<::UnityEngine::XR::InputDevice>* inputDevices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::GetDevicesWithCharacteristics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "GetDevicesWithCharacteristics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desiredCharacteristics), ::il2cpp_utils::ExtractType(inputDevices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, desiredCharacteristics, inputDevices);
}
// Autogenerated method: UnityEngine.XR.InputDevices.InvokeConnectionEvent
void UnityEngine::XR::InputDevices::InvokeConnectionEvent(uint64_t deviceId, ::UnityEngine::XR::ConnectionChangeType change) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::InvokeConnectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "InvokeConnectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId), ::il2cpp_utils::ExtractType(change)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId, change);
}
// Autogenerated method: UnityEngine.XR.InputDevices.GetDevices_Internal
void UnityEngine::XR::InputDevices::GetDevices_Internal(::System::Collections::Generic::List_1<::UnityEngine::XR::InputDevice>* inputDevices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::GetDevices_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "GetDevices_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputDevices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inputDevices);
}
// Autogenerated method: UnityEngine.XR.InputDevices.TryGetFeatureValue_bool
bool UnityEngine::XR::InputDevices::TryGetFeatureValue_bool(uint64_t deviceId, ::StringW usage, ByRef<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::TryGetFeatureValue_bool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "TryGetFeatureValue_bool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId), ::il2cpp_utils::ExtractType(usage), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId, usage, byref(value));
}
// Autogenerated method: UnityEngine.XR.InputDevices.GetDeviceCharacteristics
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDevices::GetDeviceCharacteristics(uint64_t deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::GetDeviceCharacteristics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "GetDeviceCharacteristics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::InputDeviceCharacteristics, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRDisplaySubsystemDescriptor
#include "UnityEngine/XR/XRDisplaySubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem
#include "UnityEngine/XR/XRDisplaySubsystem.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem/UnityEngine.XR.XRRenderPass
#include "UnityEngine/XR/XRDisplaySubsystem_XRRenderPass.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem/UnityEngine.XR.XRMirrorViewBlitDesc
#include "UnityEngine/XR/XRDisplaySubsystem_XRMirrorViewBlitDesc.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Boolean> displayFocusChanged
[[deprecated]] ::System::Action_1<bool>*& UnityEngine::XR::XRDisplaySubsystem::dyn_displayFocusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::dyn_displayFocusChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "displayFocusChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.InvokeDisplayFocusChanged
void UnityEngine::XR::XRDisplaySubsystem::InvokeDisplayFocusChanged(bool focus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::InvokeDisplayFocusChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeDisplayFocusChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focus);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.TryGetAppGPUTimeLastFrame
bool UnityEngine::XR::XRDisplaySubsystem::TryGetAppGPUTimeLastFrame(ByRef<float> gpuTimeLastFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::TryGetAppGPUTimeLastFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetAppGPUTimeLastFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(gpuTimeLastFrame));
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.TryGetCompositorGPUTimeLastFrame
bool UnityEngine::XR::XRDisplaySubsystem::TryGetCompositorGPUTimeLastFrame(ByRef<float> gpuTimeLastFrameCompositor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::TryGetCompositorGPUTimeLastFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetCompositorGPUTimeLastFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(gpuTimeLastFrameCompositor));
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.TryGetDisplayRefreshRate
bool UnityEngine::XR::XRDisplaySubsystem::TryGetDisplayRefreshRate(ByRef<float> displayRefreshRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::TryGetDisplayRefreshRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetDisplayRefreshRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(displayRefreshRate));
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.TryGetMotionToPhoton
bool UnityEngine::XR::XRDisplaySubsystem::TryGetMotionToPhoton(ByRef<float> motionToPhoton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::TryGetMotionToPhoton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetMotionToPhoton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(motionToPhoton));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRDisplaySubsystemDescriptor
#include "UnityEngine/XR/XRDisplaySubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem
#include "UnityEngine/XR/XRDisplaySubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRInputSubsystemDescriptor
#include "UnityEngine/XR/XRInputSubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRInputSubsystem
#include "UnityEngine/XR/XRInputSubsystem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.XRInputSubsystem> trackingOriginUpdated
[[deprecated]] ::System::Action_1<::UnityEngine::XR::XRInputSubsystem*>*& UnityEngine::XR::XRInputSubsystem::dyn_trackingOriginUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::dyn_trackingOriginUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackingOriginUpdated"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::XRInputSubsystem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.XRInputSubsystem> boundaryChanged
[[deprecated]] ::System::Action_1<::UnityEngine::XR::XRInputSubsystem*>*& UnityEngine::XR::XRInputSubsystem::dyn_boundaryChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::dyn_boundaryChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boundaryChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::XRInputSubsystem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.UInt64> m_DeviceIdsCache
[[deprecated]] ::System::Collections::Generic::List_1<uint64_t>*& UnityEngine::XR::XRInputSubsystem::dyn_m_DeviceIdsCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::dyn_m_DeviceIdsCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeviceIdsCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<uint64_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.XRInputSubsystem.GetIndex
uint UnityEngine::XR::XRInputSubsystem::GetIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::GetIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRInputSubsystem.TryRecenter
bool UnityEngine::XR::XRInputSubsystem::TryRecenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::TryRecenter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryRecenter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRInputSubsystem.InvokeTrackingOriginUpdatedEvent
void UnityEngine::XR::XRInputSubsystem::InvokeTrackingOriginUpdatedEvent(::System::IntPtr internalPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::InvokeTrackingOriginUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRInputSubsystem", "InvokeTrackingOriginUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(internalPtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, internalPtr);
}
// Autogenerated method: UnityEngine.XR.XRInputSubsystem.InvokeBoundaryChangedEvent
void UnityEngine::XR::XRInputSubsystem::InvokeBoundaryChangedEvent(::System::IntPtr internalPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::InvokeBoundaryChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRInputSubsystem", "InvokeBoundaryChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(internalPtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, internalPtr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRInputSubsystemDescriptor
#include "UnityEngine/XR/XRInputSubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRInputSubsystem
#include "UnityEngine/XR/XRInputSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.MeshId
#include "UnityEngine/XR/MeshId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.XR.MeshId s_InvalidId
::UnityEngine::XR::MeshId UnityEngine::XR::MeshId::_get_s_InvalidId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::_get_s_InvalidId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshId>("UnityEngine.XR", "MeshId", "s_InvalidId"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.XR.MeshId s_InvalidId
void UnityEngine::XR::MeshId::_set_s_InvalidId(::UnityEngine::XR::MeshId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::_set_s_InvalidId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshId", "s_InvalidId", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_SubId1
[[deprecated]] uint64_t& UnityEngine::XR::MeshId::dyn_m_SubId1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::dyn_m_SubId1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubId1"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_SubId2
[[deprecated]] uint64_t& UnityEngine::XR::MeshId::dyn_m_SubId2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::dyn_m_SubId2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubId2"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.MeshId..cctor
void UnityEngine::XR::MeshId::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "MeshId", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshId.Equals
bool UnityEngine::XR::MeshId::Equals(::UnityEngine::XR::MeshId other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::XR::MeshId), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.MeshId.ToString
::StringW UnityEngine::XR::MeshId::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshId.GetHashCode
int UnityEngine::XR::MeshId::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshId.Equals
bool UnityEngine::XR::MeshId::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.MeshGenerationStatus
#include "UnityEngine/XR/MeshGenerationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus Success
::UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "Success"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus Success
void UnityEngine::XR::MeshGenerationStatus::_set_Success(::UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus InvalidMeshId
::UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_InvalidMeshId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_get_InvalidMeshId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "InvalidMeshId"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus InvalidMeshId
void UnityEngine::XR::MeshGenerationStatus::_set_InvalidMeshId(::UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_set_InvalidMeshId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "InvalidMeshId", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus GenerationAlreadyInProgress
::UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_GenerationAlreadyInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_get_GenerationAlreadyInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "GenerationAlreadyInProgress"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus GenerationAlreadyInProgress
void UnityEngine::XR::MeshGenerationStatus::_set_GenerationAlreadyInProgress(::UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_set_GenerationAlreadyInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "GenerationAlreadyInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus Canceled
::UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_Canceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_get_Canceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "Canceled"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus Canceled
void UnityEngine::XR::MeshGenerationStatus::_set_Canceled(::UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_set_Canceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "Canceled", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus UnknownError
::UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus UnknownError
void UnityEngine::XR::MeshGenerationStatus::_set_UnknownError(::UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "UnknownError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& UnityEngine::XR::MeshGenerationStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.HashCodeHelper
#include "UnityEngine/XR/HashCodeHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.HashCodeHelper.Combine
int UnityEngine::XR::HashCodeHelper::Combine(int hash1, int hash2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HashCodeHelper::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "HashCodeHelper", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash1), ::il2cpp_utils::ExtractType(hash2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash1, hash2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.MeshGenerationResult
#include "UnityEngine/XR/MeshGenerationResult.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.MeshCollider
#include "UnityEngine/MeshCollider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.MeshId <MeshId>k__BackingField
[[deprecated]] ::UnityEngine::XR::MeshId& UnityEngine::XR::MeshGenerationResult::dyn_$MeshId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::dyn_$MeshId$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MeshId>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::MeshId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Mesh <Mesh>k__BackingField
[[deprecated]] ::UnityEngine::Mesh*& UnityEngine::XR::MeshGenerationResult::dyn_$Mesh$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::dyn_$Mesh$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Mesh>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.MeshCollider <MeshCollider>k__BackingField
[[deprecated]] ::UnityEngine::MeshCollider*& UnityEngine::XR::MeshGenerationResult::dyn_$MeshCollider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::dyn_$MeshCollider$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MeshCollider>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.MeshGenerationStatus <Status>k__BackingField
[[deprecated]] ::UnityEngine::XR::MeshGenerationStatus& UnityEngine::XR::MeshGenerationResult::dyn_$Status$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::dyn_$Status$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Status>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::MeshGenerationStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.MeshVertexAttributes <Attributes>k__BackingField
[[deprecated]] ::UnityEngine::XR::MeshVertexAttributes& UnityEngine::XR::MeshGenerationResult::dyn_$Attributes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::dyn_$Attributes$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Attributes>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::MeshVertexAttributes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_MeshId
::UnityEngine::XR::MeshId UnityEngine::XR::MeshGenerationResult::get_MeshId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::get_MeshId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MeshId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::MeshId, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_Mesh
::UnityEngine::Mesh* UnityEngine::XR::MeshGenerationResult::get_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::get_Mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_MeshCollider
::UnityEngine::MeshCollider* UnityEngine::XR::MeshGenerationResult::get_MeshCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::get_MeshCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MeshCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::MeshCollider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_Status
::UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationResult::get_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::get_Status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::MeshGenerationStatus, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_Attributes
::UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshGenerationResult::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::get_Attributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::MeshVertexAttributes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.Equals
bool UnityEngine::XR::MeshGenerationResult::Equals(::UnityEngine::XR::MeshGenerationResult other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::XR::MeshGenerationResult), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.Equals
bool UnityEngine::XR::MeshGenerationResult::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.GetHashCode
int UnityEngine::XR::MeshGenerationResult::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.MeshVertexAttributes
#include "UnityEngine/XR/MeshVertexAttributes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes None
::UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes None
void UnityEngine::XR::MeshVertexAttributes::_set_None(::UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes Normals
::UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_Normals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_get_Normals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "Normals"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes Normals
void UnityEngine::XR::MeshVertexAttributes::_set_Normals(::UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_set_Normals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "Normals", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes Tangents
::UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_Tangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_get_Tangents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "Tangents"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes Tangents
void UnityEngine::XR::MeshVertexAttributes::_set_Tangents(::UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_set_Tangents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "Tangents", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes UVs
::UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_UVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_get_UVs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "UVs"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes UVs
void UnityEngine::XR::MeshVertexAttributes::_set_UVs(::UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_set_UVs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "UVs", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes Colors
::UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_Colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_get_Colors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "Colors"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes Colors
void UnityEngine::XR::MeshVertexAttributes::_set_Colors(::UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_set_Colors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "Colors", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& UnityEngine::XR::MeshVertexAttributes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRMeshSubsystemDescriptor
#include "UnityEngine/XR/XRMeshSubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRMeshSubsystem
#include "UnityEngine/XR/XRMeshSubsystem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.XRMeshSubsystem.InvokeMeshReadyDelegate
void UnityEngine::XR::XRMeshSubsystem::InvokeMeshReadyDelegate(::UnityEngine::XR::MeshGenerationResult result, ::System::Action_1<::UnityEngine::XR::MeshGenerationResult>* onMeshGenerationComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRMeshSubsystem::InvokeMeshReadyDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeMeshReadyDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(onMeshGenerationComplete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result, onMeshGenerationComplete);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRMeshSubsystemDescriptor
#include "UnityEngine/XR/XRMeshSubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRMeshSubsystem
#include "UnityEngine/XR/XRMeshSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Provider.XRStats
#include "UnityEngine/XR/Provider/XRStats.hpp"
// Including type: UnityEngine.IntegratedSubsystem
#include "UnityEngine/IntegratedSubsystem.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Provider.XRStats.TryGetStat
bool UnityEngine::XR::Provider::XRStats::TryGetStat(::UnityEngine::IntegratedSubsystem* xrSubsystem, ::StringW tag, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Provider::XRStats::TryGetStat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Provider", "XRStats", "TryGetStat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrSubsystem), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xrSubsystem, tag, byref(value));
}
// Autogenerated method: UnityEngine.XR.Provider.XRStats.TryGetStat_Internal
bool UnityEngine::XR::Provider::XRStats::TryGetStat_Internal(::System::IntPtr ptr, ::StringW tag, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Provider::XRStats::TryGetStat_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Provider", "XRStats", "TryGetStat_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, tag, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.AppBuiltIns
#include "Oculus/Voice/AppBuiltIns.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String builtInPrefix
::StringW Oculus::Voice::AppBuiltIns::_get_builtInPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::_get_builtInPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Voice", "AppBuiltIns", "builtInPrefix"));
}
// Autogenerated static field setter
// Set static field: static public System.String builtInPrefix
void Oculus::Voice::AppBuiltIns::_set_builtInPrefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::_set_builtInPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice", "AppBuiltIns", "builtInPrefix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String modelName
::StringW Oculus::Voice::AppBuiltIns::_get_modelName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::_get_modelName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Voice", "AppBuiltIns", "modelName"));
}
// Autogenerated static field setter
// Set static field: static private System.String modelName
void Oculus::Voice::AppBuiltIns::_set_modelName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::_set_modelName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice", "AppBuiltIns", "modelName", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.Dictionary`2<System.String,System.String>> apps
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* Oculus::Voice::AppBuiltIns::_get_apps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::_get_apps");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>*>("Oculus.Voice", "AppBuiltIns", "apps")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.Dictionary`2<System.String,System.String>> apps
void Oculus::Voice::AppBuiltIns::_set_apps(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::_set_apps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice", "AppBuiltIns", "apps", value));
}
// Autogenerated method: Oculus.Voice.AppBuiltIns.get_appNames
::ArrayW<::StringW> Oculus::Voice::AppBuiltIns::get_appNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::get_appNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Voice", "AppBuiltIns", "get_appNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppBuiltIns..cctor
void Oculus::Voice::AppBuiltIns::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Voice", "AppBuiltIns", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.AppVoiceExperience
#include "Oculus/Voice/AppVoiceExperience.hpp"
// Including type: Facebook.WitAi.Configuration.WitRuntimeConfiguration
#include "Facebook/WitAi/Configuration/WitRuntimeConfiguration.hpp"
// Including type: Oculus.Voice.Interfaces.IPlatformVoiceService
#include "Oculus/Voice/Interfaces/IPlatformVoiceService.hpp"
// Including type: Facebook.WitAi.IVoiceService
#include "Facebook/WitAi/IVoiceService.hpp"
// Including type: Facebook.WitAi.Interfaces.ITranscriptionProvider
#include "Facebook/WitAi/Interfaces/ITranscriptionProvider.hpp"
// Including type: Facebook.WitAi.Configuration.WitRequestOptions
#include "Facebook/WitAi/Configuration/WitRequestOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Facebook.WitAi.Configuration.WitRuntimeConfiguration witRuntimeConfiguration
[[deprecated]] ::Facebook::WitAi::Configuration::WitRuntimeConfiguration*& Oculus::Voice::AppVoiceExperience::dyn_witRuntimeConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::dyn_witRuntimeConfiguration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "witRuntimeConfiguration"))->offset;
  return *reinterpret_cast<::Facebook::WitAi::Configuration::WitRuntimeConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Voice.Interfaces.IPlatformVoiceService platformService
[[deprecated]] ::Oculus::Voice::Interfaces::IPlatformVoiceService*& Oculus::Voice::AppVoiceExperience::dyn_platformService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::dyn_platformService");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platformService"))->offset;
  return *reinterpret_cast<::Oculus::Voice::Interfaces::IPlatformVoiceService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Facebook.WitAi.IVoiceService voiceServiceImpl
[[deprecated]] ::Facebook::WitAi::IVoiceService*& Oculus::Voice::AppVoiceExperience::dyn_voiceServiceImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::dyn_voiceServiceImpl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceServiceImpl"))->offset;
  return *reinterpret_cast<::Facebook::WitAi::IVoiceService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_RuntimeConfiguration
::Facebook::WitAi::Configuration::WitRuntimeConfiguration* Oculus::Voice::AppVoiceExperience::get_RuntimeConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_RuntimeConfiguration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::AppVoiceExperience*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::Facebook::WitAi::Configuration::WitRuntimeConfiguration*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.set_RuntimeConfiguration
void Oculus::Voice::AppVoiceExperience::set_RuntimeConfiguration(::Facebook::WitAi::Configuration::WitRuntimeConfiguration* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::set_RuntimeConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RuntimeConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_HasPlatformIntegrations
bool Oculus::Voice::AppVoiceExperience::get_HasPlatformIntegrations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_HasPlatformIntegrations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasPlatformIntegrations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.Start
void Oculus::Voice::AppVoiceExperience::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.InitVoiceSDK
void Oculus::Voice::AppVoiceExperience::InitVoiceSDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::InitVoiceSDK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitVoiceSDK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.RevertToWitUnity
void Oculus::Voice::AppVoiceExperience::RevertToWitUnity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::RevertToWitUnity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RevertToWitUnity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.OnEnable
void Oculus::Voice::AppVoiceExperience::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_Active
bool Oculus::Voice::AppVoiceExperience::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_IsRequestActive
bool Oculus::Voice::AppVoiceExperience::get_IsRequestActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_IsRequestActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 19));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_TranscriptionProvider
::Facebook::WitAi::Interfaces::ITranscriptionProvider* Oculus::Voice::AppVoiceExperience::get_TranscriptionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Facebook::WitAi::Interfaces::ITranscriptionProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.set_TranscriptionProvider
void Oculus::Voice::AppVoiceExperience::set_TranscriptionProvider(::Facebook::WitAi::Interfaces::ITranscriptionProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::set_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_MicActive
bool Oculus::Voice::AppVoiceExperience::get_MicActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_MicActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_ShouldSendMicData
bool Oculus::Voice::AppVoiceExperience::get_ShouldSendMicData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_ShouldSendMicData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.Activate
void Oculus::Voice::AppVoiceExperience::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.Activate
void Oculus::Voice::AppVoiceExperience::Activate(::Facebook::WitAi::Configuration::WitRequestOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, options);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.ActivateImmediately
void Oculus::Voice::AppVoiceExperience::ActivateImmediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::ActivateImmediately");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.ActivateImmediately
void Oculus::Voice::AppVoiceExperience::ActivateImmediately(::Facebook::WitAi::Configuration::WitRequestOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::ActivateImmediately");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, options);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.Deactivate
void Oculus::Voice::AppVoiceExperience::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::Deactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.Activate
void Oculus::Voice::AppVoiceExperience::Activate(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.Activate
void Oculus::Voice::AppVoiceExperience::Activate(::StringW text, ::Facebook::WitAi::Configuration::WitRequestOptions* requestOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, requestOptions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Interfaces.IPlatformVoiceService
#include "Oculus/Voice/Interfaces/IPlatformVoiceService.hpp"
// Including type: Facebook.WitAi.Configuration.WitRuntimeConfiguration
#include "Facebook/WitAi/Configuration/WitRuntimeConfiguration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Voice.Interfaces.IPlatformVoiceService.get_PlatformSupportsWit
bool Oculus::Voice::Interfaces::IPlatformVoiceService::get_PlatformSupportsWit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Interfaces::IPlatformVoiceService::get_PlatformSupportsWit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Interfaces::IPlatformVoiceService*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Interfaces.IPlatformVoiceService.SetRuntimeConfiguration
void Oculus::Voice::Interfaces::IPlatformVoiceService::SetRuntimeConfiguration(::Facebook::WitAi::Configuration::WitRuntimeConfiguration* configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Interfaces::IPlatformVoiceService::SetRuntimeConfiguration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Interfaces::IPlatformVoiceService*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, configuration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKBinding
#include "Oculus/Voice/Bindings/Android/VoiceSDKBinding.hpp"
// Including type: Facebook.WitAi.Configuration.WitRequestOptions
#include "Facebook/WitAi/Configuration/WitRequestOptions.hpp"
// Including type: Facebook.WitAi.Configuration.WitRuntimeConfiguration
#include "Facebook/WitAi/Configuration/WitRuntimeConfiguration.hpp"
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding
#include "Oculus/Voice/Bindings/Android/VoiceSDKListenerBinding.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.get_Active
bool Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_Active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.get_IsRequestActive
bool Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_IsRequestActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_IsRequestActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRequestActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.get_MicActive
bool Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_MicActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_MicActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MicActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.get_PlatformSupportsWit
bool Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_PlatformSupportsWit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_PlatformSupportsWit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlatformSupportsWit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.Activate
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.Activate
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate(::StringW text, ::Facebook::WitAi::Configuration::WitRequestOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, options);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.Activate
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.Activate
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate(::Facebook::WitAi::Configuration::WitRequestOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, options);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.ActivateImmediately
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::ActivateImmediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::ActivateImmediately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateImmediately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.ActivateImmediately
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::ActivateImmediately(::Facebook::WitAi::Configuration::WitRequestOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::ActivateImmediately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateImmediately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, options);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.Deactivate
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::Deactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.SetRuntimeConfiguration
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::SetRuntimeConfiguration(::Facebook::WitAi::Configuration::WitRuntimeConfiguration* configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::SetRuntimeConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRuntimeConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, configuration);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.SetListener
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::SetListener(::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::SetListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKConfigBinding
#include "Oculus/Voice/Bindings/Android/VoiceSDKConfigBinding.hpp"
// Including type: Facebook.WitAi.Configuration.WitRuntimeConfiguration
#include "Facebook/WitAi/Configuration/WitRuntimeConfiguration.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Facebook.WitAi.Configuration.WitRuntimeConfiguration configuration
[[deprecated]] ::Facebook::WitAi::Configuration::WitRuntimeConfiguration*& Oculus::Voice::Bindings::Android::VoiceSDKConfigBinding::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKConfigBinding::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::Facebook::WitAi::Configuration::WitRuntimeConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKConfigBinding.ToJavaObject
::UnityEngine::AndroidJavaObject* Oculus::Voice::Bindings::Android::VoiceSDKConfigBinding::ToJavaObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKConfigBinding::ToJavaObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJavaObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AndroidJavaObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKImpl
#include "Oculus/Voice/Bindings/Android/VoiceSDKImpl.hpp"
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKBinding
#include "Oculus/Voice/Bindings/Android/VoiceSDKBinding.hpp"
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding
#include "Oculus/Voice/Bindings/Android/VoiceSDKListenerBinding.hpp"
// Including type: Facebook.WitAi.Interfaces.ITranscriptionProvider
#include "Facebook/WitAi/Interfaces/ITranscriptionProvider.hpp"
// Including type: Facebook.WitAi.Events.VoiceEvents
#include "Facebook/WitAi/Events/VoiceEvents.hpp"
// Including type: Facebook.WitAi.Configuration.WitRuntimeConfiguration
#include "Facebook/WitAi/Configuration/WitRuntimeConfiguration.hpp"
// Including type: Facebook.WitAi.Configuration.WitRequestOptions
#include "Facebook/WitAi/Configuration/WitRequestOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding eventBinding
[[deprecated]] ::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding*& Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn_eventBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn_eventBinding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventBinding"))->offset;
  return *reinterpret_cast<::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Facebook.WitAi.Interfaces.ITranscriptionProvider <TranscriptionProvider>k__BackingField
[[deprecated]] ::Facebook::WitAi::Interfaces::ITranscriptionProvider*& Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn_$TranscriptionProvider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn_$TranscriptionProvider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TranscriptionProvider>k__BackingField"))->offset;
  return *reinterpret_cast<::Facebook::WitAi::Interfaces::ITranscriptionProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_PlatformSupportsWit
bool Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_PlatformSupportsWit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_PlatformSupportsWit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_Active
bool Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_IsRequestActive
bool Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_IsRequestActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_IsRequestActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_MicActive
bool Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_MicActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_MicActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_VoiceEvents
::Facebook::WitAi::Events::VoiceEvents* Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_VoiceEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_VoiceEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Facebook::WitAi::Events::VoiceEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.set_VoiceEvents
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::set_VoiceEvents(::Facebook::WitAi::Events::VoiceEvents* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::set_VoiceEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_TranscriptionProvider
::Facebook::WitAi::Interfaces::ITranscriptionProvider* Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_TranscriptionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Facebook::WitAi::Interfaces::ITranscriptionProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.set_TranscriptionProvider
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::set_TranscriptionProvider(::Facebook::WitAi::Interfaces::ITranscriptionProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::set_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.SetRuntimeConfiguration
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::SetRuntimeConfiguration(::Facebook::WitAi::Configuration::WitRuntimeConfiguration* configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::SetRuntimeConfiguration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, configuration);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.Activate
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.Activate
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate(::StringW text, ::Facebook::WitAi::Configuration::WitRequestOptions* requestOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, requestOptions);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.Activate
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.Activate
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate(::Facebook::WitAi::Configuration::WitRequestOptions* requestOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestOptions);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.ActivateImmediately
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::ActivateImmediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::ActivateImmediately");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.ActivateImmediately
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::ActivateImmediately(::Facebook::WitAi::Configuration::WitRequestOptions* requestOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::ActivateImmediately");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestOptions);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.Deactivate
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::Deactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding
#include "Oculus/Voice/Bindings/Android/VoiceSDKListenerBinding.hpp"
// Including type: Facebook.WitAi.Events.VoiceEvents
#include "Facebook/WitAi/Events/VoiceEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Facebook.WitAi.Events.VoiceEvents voiceEvents
[[deprecated]] ::Facebook::WitAi::Events::VoiceEvents*& Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::dyn_voiceEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::dyn_voiceEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceEvents"))->offset;
  return *reinterpret_cast<::Facebook::WitAi::Events::VoiceEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.get_VoiceEvents
::Facebook::WitAi::Events::VoiceEvents* Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::get_VoiceEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::get_VoiceEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VoiceEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Facebook::WitAi::Events::VoiceEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onResponse
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onResponse(::StringW response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onError
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onError(::StringW error, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error, message);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onMicLevelChanged
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMicLevelChanged(float level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMicLevelChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onMicLevelChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onRequestCreated
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onRequestCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onRequestCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onRequestCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onStartListening
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStartListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStartListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onStartListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onStoppedListening
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onStoppedListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onStoppedListeningDueToInactivity
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListeningDueToInactivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListeningDueToInactivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onStoppedListeningDueToInactivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onStoppedListeningDueToTimeout
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListeningDueToTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListeningDueToTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onStoppedListeningDueToTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onStoppedListeningDueToDeactivation
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListeningDueToDeactivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListeningDueToDeactivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onStoppedListeningDueToDeactivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onMicDataSent
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMicDataSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMicDataSent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onMicDataSent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onMinimumWakeThresholdHit
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMinimumWakeThresholdHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMinimumWakeThresholdHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onMinimumWakeThresholdHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onPartialTranscription
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onPartialTranscription(::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onPartialTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onPartialTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transcription)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onFullTranscription
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onFullTranscription(::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onFullTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onFullTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transcription)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OggVorbis.NativeBridge
#include "OggVorbis/NativeBridge.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String PLUGIN_NAME
::StringW OggVorbis::NativeBridge::_get_PLUGIN_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::_get_PLUGIN_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OggVorbis", "NativeBridge", "PLUGIN_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String PLUGIN_NAME
void OggVorbis::NativeBridge::_set_PLUGIN_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::_set_PLUGIN_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeBridge", "PLUGIN_NAME", value));
}
// Autogenerated method: OggVorbis.NativeBridge.WriteAllPcmDataToFile
int OggVorbis::NativeBridge::WriteAllPcmDataToFile(::StringW filePath, ::ArrayW<float> samples, int samplesLength, int16_t channels, int frequency, float base_quality, int samplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::WriteAllPcmDataToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeBridge", "WriteAllPcmDataToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(samples), ::il2cpp_utils::ExtractType(samplesLength), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(base_quality), ::il2cpp_utils::ExtractType(samplesToRead)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, samples, samplesLength, channels, frequency, base_quality, samplesToRead);
}
// Autogenerated method: OggVorbis.NativeBridge.WriteAllPcmDataToMemory
int OggVorbis::NativeBridge::WriteAllPcmDataToMemory(ByRef<::System::IntPtr> bytesPtr, ByRef<int> bytesLength, ::ArrayW<float> samples, int samplesLength, int16_t channels, int frequency, float base_quality, int samplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::WriteAllPcmDataToMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeBridge", "WriteAllPcmDataToMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(samples), ::il2cpp_utils::ExtractType(samplesLength), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(base_quality), ::il2cpp_utils::ExtractType(samplesToRead)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(bytesPtr), byref(bytesLength), samples, samplesLength, channels, frequency, base_quality, samplesToRead);
}
// Autogenerated method: OggVorbis.NativeBridge.FreeMemoryArrayForWriteAllPcmData
int OggVorbis::NativeBridge::FreeMemoryArrayForWriteAllPcmData(::System::IntPtr bytesNativeArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::FreeMemoryArrayForWriteAllPcmData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeBridge", "FreeMemoryArrayForWriteAllPcmData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytesNativeArray)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytesNativeArray);
}
// Autogenerated method: OggVorbis.NativeBridge.ReadAllPcmDataFromFile
int OggVorbis::NativeBridge::ReadAllPcmDataFromFile(::StringW filePath, ByRef<::System::IntPtr> samples, ByRef<int> samplesLength, ByRef<int16_t> channels, ByRef<int> frequency, int maxSamplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::ReadAllPcmDataFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeBridge", "ReadAllPcmDataFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int16_t&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(maxSamplesToRead)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, byref(samples), byref(samplesLength), byref(channels), byref(frequency), maxSamplesToRead);
}
// Autogenerated method: OggVorbis.NativeBridge.ReadAllPcmDataFromMemory
int OggVorbis::NativeBridge::ReadAllPcmDataFromMemory(::ArrayW<uint8_t> memoryArray, int memoryArrayLength, ByRef<::System::IntPtr> samples, ByRef<int> samplesLength, ByRef<int16_t> channels, ByRef<int> frequency, int maxSamplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::ReadAllPcmDataFromMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeBridge", "ReadAllPcmDataFromMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memoryArray), ::il2cpp_utils::ExtractType(memoryArrayLength), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int16_t&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(maxSamplesToRead)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, memoryArray, memoryArrayLength, byref(samples), byref(samplesLength), byref(channels), byref(frequency), maxSamplesToRead);
}
// Autogenerated method: OggVorbis.NativeBridge.FreeSamplesArrayNativeMemory
int OggVorbis::NativeBridge::FreeSamplesArrayNativeMemory(ByRef<::System::IntPtr> samples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::FreeSamplesArrayNativeMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeBridge", "FreeSamplesArrayNativeMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samples)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(samples));
}
// Autogenerated method: OggVorbis.NativeBridge.OpenReadFileStream
::System::IntPtr OggVorbis::NativeBridge::OpenReadFileStream(::StringW filePath, ByRef<int16_t> channels, ByRef<int> frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::OpenReadFileStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeBridge", "OpenReadFileStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractIndependentType<int16_t&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, byref(channels), byref(frequency));
}
// Autogenerated method: OggVorbis.NativeBridge.ReadFromFileStream
int OggVorbis::NativeBridge::ReadFromFileStream(::System::IntPtr state, ::ArrayW<float> samplesToFill, int maxSamplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::ReadFromFileStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeBridge", "ReadFromFileStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(samplesToFill), ::il2cpp_utils::ExtractType(maxSamplesToRead)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state, samplesToFill, maxSamplesToRead);
}
// Autogenerated method: OggVorbis.NativeBridge.CloseFileStream
int OggVorbis::NativeBridge::CloseFileStream(::System::IntPtr state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::CloseFileStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeBridge", "CloseFileStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OggVorbis.NativeErrorCode
#include "OggVorbis/NativeErrorCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_FILEPATH_PARAMETER
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_INVALID_FILEPATH_PARAMETER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_INVALID_FILEPATH_PARAMETER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_INVALID_FILEPATH_PARAMETER"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_FILEPATH_PARAMETER
void OggVorbis::NativeErrorCode::_set_ERROR_INVALID_FILEPATH_PARAMETER(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_INVALID_FILEPATH_PARAMETER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_INVALID_FILEPATH_PARAMETER", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_CANNOT_OPEN_FILE_FOR_WRITE
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_CANNOT_OPEN_FILE_FOR_WRITE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_CANNOT_OPEN_FILE_FOR_WRITE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_CANNOT_OPEN_FILE_FOR_WRITE"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_CANNOT_OPEN_FILE_FOR_WRITE
void OggVorbis::NativeErrorCode::_set_ERROR_CANNOT_OPEN_FILE_FOR_WRITE(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_CANNOT_OPEN_FILE_FOR_WRITE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_CANNOT_OPEN_FILE_FOR_WRITE", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_CANNOT_OPEN_FILE_FOR_READ
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_CANNOT_OPEN_FILE_FOR_READ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_CANNOT_OPEN_FILE_FOR_READ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_CANNOT_OPEN_FILE_FOR_READ"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_CANNOT_OPEN_FILE_FOR_READ
void OggVorbis::NativeErrorCode::_set_ERROR_CANNOT_OPEN_FILE_FOR_READ(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_CANNOT_OPEN_FILE_FOR_READ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_CANNOT_OPEN_FILE_FOR_READ", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_INPUT_FILESTREAM_IS_NOT_OGG_STREAM
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_INPUT_FILESTREAM_IS_NOT_OGG_STREAM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_INPUT_FILESTREAM_IS_NOT_OGG_STREAM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_INPUT_FILESTREAM_IS_NOT_OGG_STREAM"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_INPUT_FILESTREAM_IS_NOT_OGG_STREAM
void OggVorbis::NativeErrorCode::_set_ERROR_INPUT_FILESTREAM_IS_NOT_OGG_STREAM(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_INPUT_FILESTREAM_IS_NOT_OGG_STREAM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_INPUT_FILESTREAM_IS_NOT_OGG_STREAM", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_READING_OGG_STREAM
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_READING_OGG_STREAM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_READING_OGG_STREAM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_READING_OGG_STREAM"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_READING_OGG_STREAM
void OggVorbis::NativeErrorCode::_set_ERROR_READING_OGG_STREAM(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_READING_OGG_STREAM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_READING_OGG_STREAM", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_SAMPLES_PARAMETER
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_INVALID_SAMPLES_PARAMETER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_INVALID_SAMPLES_PARAMETER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_INVALID_SAMPLES_PARAMETER"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_SAMPLES_PARAMETER
void OggVorbis::NativeErrorCode::_set_ERROR_INVALID_SAMPLES_PARAMETER(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_INVALID_SAMPLES_PARAMETER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_INVALID_SAMPLES_PARAMETER", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_SAMPLESLENGTH_PARAMETER
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_INVALID_SAMPLESLENGTH_PARAMETER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_INVALID_SAMPLESLENGTH_PARAMETER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_INVALID_SAMPLESLENGTH_PARAMETER"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_SAMPLESLENGTH_PARAMETER
void OggVorbis::NativeErrorCode::_set_ERROR_INVALID_SAMPLESLENGTH_PARAMETER(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_INVALID_SAMPLESLENGTH_PARAMETER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_INVALID_SAMPLESLENGTH_PARAMETER", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_CHANNELS_PARAMETER
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_INVALID_CHANNELS_PARAMETER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_INVALID_CHANNELS_PARAMETER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_INVALID_CHANNELS_PARAMETER"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_CHANNELS_PARAMETER
void OggVorbis::NativeErrorCode::_set_ERROR_INVALID_CHANNELS_PARAMETER(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_INVALID_CHANNELS_PARAMETER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_INVALID_CHANNELS_PARAMETER", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_FREQUENCY_PARAMETER
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_INVALID_FREQUENCY_PARAMETER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_INVALID_FREQUENCY_PARAMETER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_INVALID_FREQUENCY_PARAMETER"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_FREQUENCY_PARAMETER
void OggVorbis::NativeErrorCode::_set_ERROR_INVALID_FREQUENCY_PARAMETER(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_INVALID_FREQUENCY_PARAMETER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_INVALID_FREQUENCY_PARAMETER", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_BASE_QUALITY_PARAMETER
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_INVALID_BASE_QUALITY_PARAMETER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_INVALID_BASE_QUALITY_PARAMETER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_INVALID_BASE_QUALITY_PARAMETER"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_BASE_QUALITY_PARAMETER
void OggVorbis::NativeErrorCode::_set_ERROR_INVALID_BASE_QUALITY_PARAMETER(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_INVALID_BASE_QUALITY_PARAMETER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_INVALID_BASE_QUALITY_PARAMETER", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_MALLOC_RETURNED_NULL
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_MALLOC_RETURNED_NULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_MALLOC_RETURNED_NULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_MALLOC_RETURNED_NULL"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_MALLOC_RETURNED_NULL
void OggVorbis::NativeErrorCode::_set_ERROR_MALLOC_RETURNED_NULL(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_MALLOC_RETURNED_NULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_MALLOC_RETURNED_NULL", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_BYTES_MEMORY_ARRAY_NULL
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_BYTES_MEMORY_ARRAY_NULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_BYTES_MEMORY_ARRAY_NULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_BYTES_MEMORY_ARRAY_NULL"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_BYTES_MEMORY_ARRAY_NULL
void OggVorbis::NativeErrorCode::_set_ERROR_BYTES_MEMORY_ARRAY_NULL(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_BYTES_MEMORY_ARRAY_NULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_BYTES_MEMORY_ARRAY_NULL", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_WRITE_CALLBACK_PARAMETER
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_INVALID_WRITE_CALLBACK_PARAMETER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_INVALID_WRITE_CALLBACK_PARAMETER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_INVALID_WRITE_CALLBACK_PARAMETER"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_WRITE_CALLBACK_PARAMETER
void OggVorbis::NativeErrorCode::_set_ERROR_INVALID_WRITE_CALLBACK_PARAMETER(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_INVALID_WRITE_CALLBACK_PARAMETER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_INVALID_WRITE_CALLBACK_PARAMETER", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OggVorbis::NativeErrorCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OggVorbis.NativeErrorException
#include "OggVorbis/NativeErrorException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly OggVorbis.NativeErrorCode <NativeErrorCode>k__BackingField
[[deprecated]] ::OggVorbis::NativeErrorCode& OggVorbis::NativeErrorException::dyn_$NativeErrorCode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorException::dyn_$NativeErrorCode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NativeErrorCode>k__BackingField"))->offset;
  return *reinterpret_cast<::OggVorbis::NativeErrorCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OggVorbis.NativeErrorException.get_NativeErrorCode
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorException::get_NativeErrorCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorException::get_NativeErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NativeErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OggVorbis::NativeErrorCode, false>(this, ___internal__method);
}
// Autogenerated method: OggVorbis.NativeErrorException.ThrowExceptionIfNecessary
void OggVorbis::NativeErrorException::ThrowExceptionIfNecessary(int returnValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorException::ThrowExceptionIfNecessary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeErrorException", "ThrowExceptionIfNecessary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(returnValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, returnValue);
}
// Autogenerated method: OggVorbis.NativeErrorException.ToString
::StringW OggVorbis::NativeErrorException::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorException::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OggVorbis.VorbisPlugin
#include "OggVorbis/VorbisPlugin.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OggVorbis.VorbisPlugin.Save
void OggVorbis::VorbisPlugin::Save(::StringW filePath, ::UnityEngine::AudioClip* audioClip, float quality, int samplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::VorbisPlugin::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "VorbisPlugin", "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(audioClip), ::il2cpp_utils::ExtractType(quality), ::il2cpp_utils::ExtractType(samplesToRead)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, audioClip, quality, samplesToRead);
}
// Autogenerated method: OggVorbis.VorbisPlugin.Save
void OggVorbis::VorbisPlugin::Save(::StringW filePath, ::ArrayW<float> samples, int channels, int frequency, float quality, int samplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::VorbisPlugin::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "VorbisPlugin", "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(samples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(quality), ::il2cpp_utils::ExtractType(samplesToRead)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, samples, channels, frequency, quality, samplesToRead);
}
// Autogenerated method: OggVorbis.VorbisPlugin.GetOggVorbis
::ArrayW<uint8_t> OggVorbis::VorbisPlugin::GetOggVorbis(::UnityEngine::AudioClip* audioClip, float quality, int samplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::VorbisPlugin::GetOggVorbis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "VorbisPlugin", "GetOggVorbis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClip), ::il2cpp_utils::ExtractType(quality), ::il2cpp_utils::ExtractType(samplesToRead)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioClip, quality, samplesToRead);
}
// Autogenerated method: OggVorbis.VorbisPlugin.Load
::UnityEngine::AudioClip* OggVorbis::VorbisPlugin::Load(::StringW filePath, int maxSamplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::VorbisPlugin::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "VorbisPlugin", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(maxSamplesToRead)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, maxSamplesToRead);
}
// Autogenerated method: OggVorbis.VorbisPlugin.ToAudioClip
::UnityEngine::AudioClip* OggVorbis::VorbisPlugin::ToAudioClip(::ArrayW<uint8_t> bytes, ::StringW audioClipName, int maxSamplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::VorbisPlugin::ToAudioClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "VorbisPlugin", "ToAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(audioClipName), ::il2cpp_utils::ExtractType(maxSamplesToRead)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, audioClipName, maxSamplesToRead);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/XrApi
#include "GlobalNamespace/OVRManager_XrApi.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/XrApi Unknown
::GlobalNamespace::OVRManager_XrApi GlobalNamespace::OVRManager_XrApi::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XrApi>("", "OVRManager/XrApi", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XrApi Unknown
void GlobalNamespace::OVRManager_XrApi::_set_Unknown(::GlobalNamespace::OVRManager_XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XrApi", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XrApi CAPI
::GlobalNamespace::OVRManager_XrApi GlobalNamespace::OVRManager_XrApi::_get_CAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_get_CAPI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XrApi>("", "OVRManager/XrApi", "CAPI"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XrApi CAPI
void GlobalNamespace::OVRManager_XrApi::_set_CAPI(::GlobalNamespace::OVRManager_XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_set_CAPI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XrApi", "CAPI", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XrApi VRAPI
::GlobalNamespace::OVRManager_XrApi GlobalNamespace::OVRManager_XrApi::_get_VRAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_get_VRAPI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XrApi>("", "OVRManager/XrApi", "VRAPI"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XrApi VRAPI
void GlobalNamespace::OVRManager_XrApi::_set_VRAPI(::GlobalNamespace::OVRManager_XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_set_VRAPI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XrApi", "VRAPI", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XrApi OpenXR
::GlobalNamespace::OVRManager_XrApi GlobalNamespace::OVRManager_XrApi::_get_OpenXR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_get_OpenXR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XrApi>("", "OVRManager/XrApi", "OpenXR"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XrApi OpenXR
void GlobalNamespace::OVRManager_XrApi::_set_OpenXR(::GlobalNamespace::OVRManager_XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_set_OpenXR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XrApi", "OpenXR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRManager_XrApi::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/TrackingOrigin
#include "GlobalNamespace/OVRManager_TrackingOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/TrackingOrigin EyeLevel
::GlobalNamespace::OVRManager_TrackingOrigin GlobalNamespace::OVRManager_TrackingOrigin::_get_EyeLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::_get_EyeLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TrackingOrigin>("", "OVRManager/TrackingOrigin", "EyeLevel"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TrackingOrigin EyeLevel
void GlobalNamespace::OVRManager_TrackingOrigin::_set_EyeLevel(::GlobalNamespace::OVRManager_TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::_set_EyeLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TrackingOrigin", "EyeLevel", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TrackingOrigin FloorLevel
::GlobalNamespace::OVRManager_TrackingOrigin GlobalNamespace::OVRManager_TrackingOrigin::_get_FloorLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::_get_FloorLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TrackingOrigin>("", "OVRManager/TrackingOrigin", "FloorLevel"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TrackingOrigin FloorLevel
void GlobalNamespace::OVRManager_TrackingOrigin::_set_FloorLevel(::GlobalNamespace::OVRManager_TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::_set_FloorLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TrackingOrigin", "FloorLevel", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TrackingOrigin Stage
::GlobalNamespace::OVRManager_TrackingOrigin GlobalNamespace::OVRManager_TrackingOrigin::_get_Stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::_get_Stage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TrackingOrigin>("", "OVRManager/TrackingOrigin", "Stage"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TrackingOrigin Stage
void GlobalNamespace::OVRManager_TrackingOrigin::_set_Stage(::GlobalNamespace::OVRManager_TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::_set_Stage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TrackingOrigin", "Stage", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRManager_TrackingOrigin::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/EyeTextureFormat
#include "GlobalNamespace/OVRManager_EyeTextureFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/EyeTextureFormat Default
::GlobalNamespace::OVRManager_EyeTextureFormat GlobalNamespace::OVRManager_EyeTextureFormat::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_EyeTextureFormat>("", "OVRManager/EyeTextureFormat", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/EyeTextureFormat Default
void GlobalNamespace::OVRManager_EyeTextureFormat::_set_Default(::GlobalNamespace::OVRManager_EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/EyeTextureFormat", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/EyeTextureFormat R16G16B16A16_FP
::GlobalNamespace::OVRManager_EyeTextureFormat GlobalNamespace::OVRManager_EyeTextureFormat::_get_R16G16B16A16_FP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::_get_R16G16B16A16_FP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_EyeTextureFormat>("", "OVRManager/EyeTextureFormat", "R16G16B16A16_FP"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/EyeTextureFormat R16G16B16A16_FP
void GlobalNamespace::OVRManager_EyeTextureFormat::_set_R16G16B16A16_FP(::GlobalNamespace::OVRManager_EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::_set_R16G16B16A16_FP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/EyeTextureFormat", "R16G16B16A16_FP", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/EyeTextureFormat R11G11B10_FP
::GlobalNamespace::OVRManager_EyeTextureFormat GlobalNamespace::OVRManager_EyeTextureFormat::_get_R11G11B10_FP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::_get_R11G11B10_FP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_EyeTextureFormat>("", "OVRManager/EyeTextureFormat", "R11G11B10_FP"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/EyeTextureFormat R11G11B10_FP
void GlobalNamespace::OVRManager_EyeTextureFormat::_set_R11G11B10_FP(::GlobalNamespace::OVRManager_EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::_set_R11G11B10_FP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/EyeTextureFormat", "R11G11B10_FP", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRManager_EyeTextureFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/FixedFoveatedRenderingLevel
#include "GlobalNamespace/OVRManager_FixedFoveatedRenderingLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel Off
::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel Off
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Off(::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel Low
::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel Low
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Low(::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel Medium
::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel Medium
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Medium(::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel High
::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel High
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_High(::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "High", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel HighTop
::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_HighTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_HighTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "HighTop"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel HighTop
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_HighTop(::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_HighTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "HighTop", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/TiledMultiResLevel
#include "GlobalNamespace/OVRManager_TiledMultiResLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel Off
::GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel Off
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_Off(::GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSLow
::GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSLow"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSLow
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSLow(::GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSLow", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSMedium
::GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSMedium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSMedium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSMedium"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSMedium
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSMedium(::GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSMedium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSMedium", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSHigh
::GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSHigh"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSHigh
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSHigh(::GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSHigh", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSHighTop
::GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSHighTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSHighTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSHighTop"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSHighTop
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSHighTop(::GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSHighTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSHighTop", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRManager_TiledMultiResLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/SystemHeadsetType
#include "GlobalNamespace/OVRManager_SystemHeadsetType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType None
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType None
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_None(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Oculus_Quest
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Oculus_Quest"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Oculus_Quest
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Quest(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Oculus_Quest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Oculus_Quest_2
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Quest_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Quest_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Oculus_Quest_2"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Oculus_Quest_2
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Quest_2(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Quest_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Oculus_Quest_2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_10
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_10"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_10
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_10(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_10", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_11
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_11"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_11
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_11(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_11", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_12
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_12"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_12
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_12(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_12", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_13
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_13"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_13
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_13(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_13", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_14
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_14"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_14
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_14(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_14", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_DK1
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_DK1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_DK1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_DK1"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_DK1
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_DK1(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_DK1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_DK1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_DK2
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_DK2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_DK2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_DK2"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_DK2
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_DK2(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_DK2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_DK2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_CV1
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_CV1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_CV1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_CV1"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_CV1
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_CV1(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_CV1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_CV1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_CB
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_CB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_CB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_CB"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_CB
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_CB(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_CB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_CB", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_S
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_S"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_S
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_S(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_S", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Oculus_Link_Quest
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Link_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Link_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Oculus_Link_Quest"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Oculus_Link_Quest
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Link_Quest(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Link_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Oculus_Link_Quest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Oculus_Link_Quest_2
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Link_Quest_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Link_Quest_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Oculus_Link_Quest_2"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Oculus_Link_Quest_2
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Link_Quest_2(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Link_Quest_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Oculus_Link_Quest_2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4103
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4103() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4103");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4103"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4103
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4103(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4103");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4103", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4104
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4104() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4104");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4104"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4104
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4104(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4104");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4104", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4105
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4105() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4105");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4105"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4105
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4105(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4105");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4105", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4106
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4106() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4106");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4106"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4106
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4106(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4106");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4106", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4107
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4107() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4107");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4107"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4107
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4107(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4107");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4107", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRManager_SystemHeadsetType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/XRDevice
#include "GlobalNamespace/OVRManager_XRDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/XRDevice Unknown
::GlobalNamespace::OVRManager_XRDevice GlobalNamespace::OVRManager_XRDevice::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XRDevice>("", "OVRManager/XRDevice", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XRDevice Unknown
void GlobalNamespace::OVRManager_XRDevice::_set_Unknown(::GlobalNamespace::OVRManager_XRDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XRDevice", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XRDevice Oculus
::GlobalNamespace::OVRManager_XRDevice GlobalNamespace::OVRManager_XRDevice::_get_Oculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::_get_Oculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XRDevice>("", "OVRManager/XRDevice", "Oculus"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XRDevice Oculus
void GlobalNamespace::OVRManager_XRDevice::_set_Oculus(::GlobalNamespace::OVRManager_XRDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::_set_Oculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XRDevice", "Oculus", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XRDevice OpenVR
::GlobalNamespace::OVRManager_XRDevice GlobalNamespace::OVRManager_XRDevice::_get_OpenVR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::_get_OpenVR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XRDevice>("", "OVRManager/XRDevice", "OpenVR"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XRDevice OpenVR
void GlobalNamespace::OVRManager_XRDevice::_set_OpenVR(::GlobalNamespace::OVRManager_XRDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::_set_OpenVR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XRDevice", "OpenVR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRManager_XRDevice::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/ColorSpace
#include "GlobalNamespace/OVRManager_ColorSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Unknown
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Unknown
void GlobalNamespace::OVRManager_ColorSpace::_set_Unknown(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Unmanaged
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Unmanaged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Unmanaged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Unmanaged"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Unmanaged
void GlobalNamespace::OVRManager_ColorSpace::_set_Unmanaged(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Unmanaged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Unmanaged", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Rec_2020
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Rec_2020() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Rec_2020");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Rec_2020"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Rec_2020
void GlobalNamespace::OVRManager_ColorSpace::_set_Rec_2020(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Rec_2020");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Rec_2020", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Rec_709
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Rec_709() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Rec_709");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Rec_709"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Rec_709
void GlobalNamespace::OVRManager_ColorSpace::_set_Rec_709(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Rec_709");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Rec_709", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Rift_CV1
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Rift_CV1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Rift_CV1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Rift_CV1"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Rift_CV1
void GlobalNamespace::OVRManager_ColorSpace::_set_Rift_CV1(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Rift_CV1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Rift_CV1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Rift_S
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Rift_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Rift_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Rift_S"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Rift_S
void GlobalNamespace::OVRManager_ColorSpace::_set_Rift_S(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Rift_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Rift_S", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Quest
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Quest"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Quest
void GlobalNamespace::OVRManager_ColorSpace::_set_Quest(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Quest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace P3
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_P3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_P3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "P3"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace P3
void GlobalNamespace::OVRManager_ColorSpace::_set_P3(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_P3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "P3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Adobe_RGB
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Adobe_RGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Adobe_RGB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Adobe_RGB"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Adobe_RGB
void GlobalNamespace::OVRManager_ColorSpace::_set_Adobe_RGB(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Adobe_RGB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Adobe_RGB", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRManager_ColorSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/CompositionMethod
#include "GlobalNamespace/OVRManager_CompositionMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/CompositionMethod External
::GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRManager_CompositionMethod::_get_External() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CompositionMethod::_get_External");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_CompositionMethod>("", "OVRManager/CompositionMethod", "External"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CompositionMethod External
void GlobalNamespace::OVRManager_CompositionMethod::_set_External(::GlobalNamespace::OVRManager_CompositionMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CompositionMethod::_set_External");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CompositionMethod", "External", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/CompositionMethod Direct
::GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRManager_CompositionMethod::_get_Direct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CompositionMethod::_get_Direct");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_CompositionMethod>("", "OVRManager/CompositionMethod", "Direct"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CompositionMethod Direct
void GlobalNamespace::OVRManager_CompositionMethod::_set_Direct(::GlobalNamespace::OVRManager_CompositionMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CompositionMethod::_set_Direct");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CompositionMethod", "Direct", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRManager_CompositionMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CompositionMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/CameraDevice
#include "GlobalNamespace/OVRManager_CameraDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/CameraDevice WebCamera0
::GlobalNamespace::OVRManager_CameraDevice GlobalNamespace::OVRManager_CameraDevice::_get_WebCamera0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::_get_WebCamera0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_CameraDevice>("", "OVRManager/CameraDevice", "WebCamera0"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CameraDevice WebCamera0
void GlobalNamespace::OVRManager_CameraDevice::_set_WebCamera0(::GlobalNamespace::OVRManager_CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::_set_WebCamera0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CameraDevice", "WebCamera0", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/CameraDevice WebCamera1
::GlobalNamespace::OVRManager_CameraDevice GlobalNamespace::OVRManager_CameraDevice::_get_WebCamera1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::_get_WebCamera1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_CameraDevice>("", "OVRManager/CameraDevice", "WebCamera1"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CameraDevice WebCamera1
void GlobalNamespace::OVRManager_CameraDevice::_set_WebCamera1(::GlobalNamespace::OVRManager_CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::_set_WebCamera1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CameraDevice", "WebCamera1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/CameraDevice ZEDCamera
::GlobalNamespace::OVRManager_CameraDevice GlobalNamespace::OVRManager_CameraDevice::_get_ZEDCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::_get_ZEDCamera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_CameraDevice>("", "OVRManager/CameraDevice", "ZEDCamera"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CameraDevice ZEDCamera
void GlobalNamespace::OVRManager_CameraDevice::_set_ZEDCamera(::GlobalNamespace::OVRManager_CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::_set_ZEDCamera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CameraDevice", "ZEDCamera", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRManager_CameraDevice::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/DepthQuality
#include "GlobalNamespace/OVRManager_DepthQuality.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/DepthQuality Low
::GlobalNamespace::OVRManager_DepthQuality GlobalNamespace::OVRManager_DepthQuality::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_DepthQuality>("", "OVRManager/DepthQuality", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/DepthQuality Low
void GlobalNamespace::OVRManager_DepthQuality::_set_Low(::GlobalNamespace::OVRManager_DepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/DepthQuality", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/DepthQuality Medium
::GlobalNamespace::OVRManager_DepthQuality GlobalNamespace::OVRManager_DepthQuality::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_DepthQuality>("", "OVRManager/DepthQuality", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/DepthQuality Medium
void GlobalNamespace::OVRManager_DepthQuality::_set_Medium(::GlobalNamespace::OVRManager_DepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/DepthQuality", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/DepthQuality High
::GlobalNamespace::OVRManager_DepthQuality GlobalNamespace::OVRManager_DepthQuality::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_DepthQuality>("", "OVRManager/DepthQuality", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/DepthQuality High
void GlobalNamespace::OVRManager_DepthQuality::_set_High(::GlobalNamespace::OVRManager_DepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/DepthQuality", "High", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRManager_DepthQuality::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/VirtualGreenScreenType
#include "GlobalNamespace/OVRManager_VirtualGreenScreenType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/VirtualGreenScreenType Off
::GlobalNamespace::OVRManager_VirtualGreenScreenType GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_VirtualGreenScreenType>("", "OVRManager/VirtualGreenScreenType", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/VirtualGreenScreenType Off
void GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_Off(::GlobalNamespace::OVRManager_VirtualGreenScreenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/VirtualGreenScreenType", "Off", value));
}
// [ObsoleteAttribute] Offset: 0x697748
// Autogenerated static field getter
// Get static field: static public OVRManager/VirtualGreenScreenType OuterBoundary
::GlobalNamespace::OVRManager_VirtualGreenScreenType GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_OuterBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_OuterBoundary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_VirtualGreenScreenType>("", "OVRManager/VirtualGreenScreenType", "OuterBoundary"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/VirtualGreenScreenType OuterBoundary
void GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_OuterBoundary(::GlobalNamespace::OVRManager_VirtualGreenScreenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_OuterBoundary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/VirtualGreenScreenType", "OuterBoundary", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/VirtualGreenScreenType PlayArea
::GlobalNamespace::OVRManager_VirtualGreenScreenType GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_PlayArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_PlayArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_VirtualGreenScreenType>("", "OVRManager/VirtualGreenScreenType", "PlayArea"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/VirtualGreenScreenType PlayArea
void GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_PlayArea(::GlobalNamespace::OVRManager_VirtualGreenScreenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_PlayArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/VirtualGreenScreenType", "PlayArea", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRManager_VirtualGreenScreenType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/MrcActivationMode
#include "GlobalNamespace/OVRManager_MrcActivationMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcActivationMode Automatic
::GlobalNamespace::OVRManager_MrcActivationMode GlobalNamespace::OVRManager_MrcActivationMode::_get_Automatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcActivationMode::_get_Automatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_MrcActivationMode>("", "OVRManager/MrcActivationMode", "Automatic"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcActivationMode Automatic
void GlobalNamespace::OVRManager_MrcActivationMode::_set_Automatic(::GlobalNamespace::OVRManager_MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcActivationMode::_set_Automatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcActivationMode", "Automatic", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcActivationMode Disabled
::GlobalNamespace::OVRManager_MrcActivationMode GlobalNamespace::OVRManager_MrcActivationMode::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcActivationMode::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_MrcActivationMode>("", "OVRManager/MrcActivationMode", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcActivationMode Disabled
void GlobalNamespace::OVRManager_MrcActivationMode::_set_Disabled(::GlobalNamespace::OVRManager_MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcActivationMode::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcActivationMode", "Disabled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRManager_MrcActivationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcActivationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/MrcCameraType
#include "GlobalNamespace/OVRManager_MrcCameraType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcCameraType Normal
::GlobalNamespace::OVRManager_MrcCameraType GlobalNamespace::OVRManager_MrcCameraType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_MrcCameraType>("", "OVRManager/MrcCameraType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcCameraType Normal
void GlobalNamespace::OVRManager_MrcCameraType::_set_Normal(::GlobalNamespace::OVRManager_MrcCameraType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcCameraType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcCameraType Foreground
::GlobalNamespace::OVRManager_MrcCameraType GlobalNamespace::OVRManager_MrcCameraType::_get_Foreground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::_get_Foreground");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_MrcCameraType>("", "OVRManager/MrcCameraType", "Foreground"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcCameraType Foreground
void GlobalNamespace::OVRManager_MrcCameraType::_set_Foreground(::GlobalNamespace::OVRManager_MrcCameraType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::_set_Foreground");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcCameraType", "Foreground", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcCameraType Background
::GlobalNamespace::OVRManager_MrcCameraType GlobalNamespace::OVRManager_MrcCameraType::_get_Background() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::_get_Background");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_MrcCameraType>("", "OVRManager/MrcCameraType", "Background"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcCameraType Background
void GlobalNamespace::OVRManager_MrcCameraType::_set_Background(::GlobalNamespace::OVRManager_MrcCameraType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::_set_Background");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcCameraType", "Background", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRManager_MrcCameraType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRManager/InstantiateMrcCameraDelegate
#include "GlobalNamespace/OVRManager_InstantiateMrcCameraDelegate.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRManager/MrcCameraType
#include "GlobalNamespace/OVRManager_MrcCameraType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRManager/InstantiateMrcCameraDelegate.Invoke
::UnityEngine::GameObject* GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::Invoke(::UnityEngine::GameObject* mainCameraGameObject, ::GlobalNamespace::OVRManager_MrcCameraType cameraType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, mainCameraGameObject, cameraType);
}
// Autogenerated method: OVRManager/InstantiateMrcCameraDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::BeginInvoke(::UnityEngine::GameObject* mainCameraGameObject, ::GlobalNamespace::OVRManager_MrcCameraType cameraType, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, mainCameraGameObject, cameraType, callback, object);
}
// Autogenerated method: OVRManager/InstantiateMrcCameraDelegate.EndInvoke
::UnityEngine::GameObject* GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/PassthroughInitializationState
#include "GlobalNamespace/OVRManager_PassthroughInitializationState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/PassthroughInitializationState Unspecified
::GlobalNamespace::OVRManager_PassthroughInitializationState GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Unspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Unspecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_PassthroughInitializationState>("", "OVRManager/PassthroughInitializationState", "Unspecified"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/PassthroughInitializationState Unspecified
void GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Unspecified(::GlobalNamespace::OVRManager_PassthroughInitializationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Unspecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/PassthroughInitializationState", "Unspecified", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/PassthroughInitializationState Pending
::GlobalNamespace::OVRManager_PassthroughInitializationState GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Pending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Pending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_PassthroughInitializationState>("", "OVRManager/PassthroughInitializationState", "Pending"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/PassthroughInitializationState Pending
void GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Pending(::GlobalNamespace::OVRManager_PassthroughInitializationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Pending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/PassthroughInitializationState", "Pending", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/PassthroughInitializationState Initialized
::GlobalNamespace::OVRManager_PassthroughInitializationState GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_PassthroughInitializationState>("", "OVRManager/PassthroughInitializationState", "Initialized"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/PassthroughInitializationState Initialized
void GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Initialized(::GlobalNamespace::OVRManager_PassthroughInitializationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/PassthroughInitializationState", "Initialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/PassthroughInitializationState Failed
::GlobalNamespace::OVRManager_PassthroughInitializationState GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_PassthroughInitializationState>("", "OVRManager/PassthroughInitializationState", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/PassthroughInitializationState Failed
void GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Failed(::GlobalNamespace::OVRManager_PassthroughInitializationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/PassthroughInitializationState", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRManager_PassthroughInitializationState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/<>c
#include "GlobalNamespace/OVRManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRManager/<>c <>9
::GlobalNamespace::OVRManager_$$c* GlobalNamespace::OVRManager_$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_$$c*>("", "OVRManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRManager/<>c <>9
void GlobalNamespace::OVRManager_$$c::_set_$$9(::GlobalNamespace::OVRManager_$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Single,System.String> <>9__345_0
::System::Func_2<float, ::StringW>* GlobalNamespace::OVRManager_$$c::_get_$$9__345_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::_get_$$9__345_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<float, ::StringW>*>("", "OVRManager/<>c", "<>9__345_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Single,System.String> <>9__345_0
void GlobalNamespace::OVRManager_$$c::_set_$$9__345_0(::System::Func_2<float, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::_set_$$9__345_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRManager/<>c", "<>9__345_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Camera> <>9__359_0
::System::Comparison_1<::UnityEngine::Camera*>* GlobalNamespace::OVRManager_$$c::_get_$$9__359_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::_get_$$9__359_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::Camera*>*>("", "OVRManager/<>c", "<>9__359_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Camera> <>9__359_0
void GlobalNamespace::OVRManager_$$c::_set_$$9__359_0(::System::Comparison_1<::UnityEngine::Camera*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::_set_$$9__359_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRManager/<>c", "<>9__359_0", value)));
}
// Autogenerated method: OVRManager/<>c..cctor
void GlobalNamespace::OVRManager_$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager/<>c.<InitOVRManager>b__345_0
::StringW GlobalNamespace::OVRManager_$$c::$InitOVRManager$b__345_0(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::<InitOVRManager>b__345_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitOVRManager>b__345_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, f);
}
// Autogenerated method: OVRManager/<>c.<FindMainCamera>b__359_0
int GlobalNamespace::OVRManager_$$c::$FindMainCamera$b__359_0(::UnityEngine::Camera* c0, ::UnityEngine::Camera* c1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::<FindMainCamera>b__359_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindMainCamera>b__359_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c0), ::il2cpp_utils::ExtractType(c1)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, c0, c1);
}
