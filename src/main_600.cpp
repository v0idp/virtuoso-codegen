// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.HapticManager
#include "VROSC/HapticManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.HapticRequest> _hapticRequests
[[deprecated]] ::System::Collections::Generic::List_1<::VROSC::HapticRequest>*& VROSC::HapticManager::dyn__hapticRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticManager::dyn__hapticRequests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hapticRequests"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::HapticRequest>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.HapticManager.RequestHapticFeedback
void VROSC::HapticManager::RequestHapticFeedback(::VROSC::HapticRequest hapticRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticManager::RequestHapticFeedback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestHapticFeedback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hapticRequest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hapticRequest);
}
// Autogenerated method: VROSC.HapticManager.Update
void VROSC::HapticManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.ObjectExtensions
#include "VROSC/ObjectExtensions.hpp"
// Including type: VROSC.ObjectExtensions/VROSC.<>c
#include "VROSC/ObjectExtensions_--c.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VROSC.Note
#include "VROSC/Note.hpp"
// Including type: VROSC.ScalePreset
#include "VROSC/ScalePreset.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 _seedPrimeNumber
int VROSC::ObjectExtensions::_get__seedPrimeNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::_get__seedPrimeNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("VROSC", "ObjectExtensions", "_seedPrimeNumber"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _seedPrimeNumber
void VROSC::ObjectExtensions::_set__seedPrimeNumber(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::_set__seedPrimeNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ObjectExtensions", "_seedPrimeNumber", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _fieldPrimeNumber
int VROSC::ObjectExtensions::_get__fieldPrimeNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::_get__fieldPrimeNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("VROSC", "ObjectExtensions", "_fieldPrimeNumber"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _fieldPrimeNumber
void VROSC::ObjectExtensions::_set__fieldPrimeNumber(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::_set__fieldPrimeNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ObjectExtensions", "_fieldPrimeNumber", value));
}
// Autogenerated static field getter
// Get static field: static private System.Random rng
::System::Random* VROSC::ObjectExtensions::_get_rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::_get_rng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Random*>("VROSC", "ObjectExtensions", "rng"));
}
// Autogenerated static field setter
// Set static field: static private System.Random rng
void VROSC::ObjectExtensions::_set_rng(::System::Random* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::_set_rng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ObjectExtensions", "rng", value));
}
// Autogenerated method: VROSC.ObjectExtensions..cctor
void VROSC::ObjectExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.ObjectExtensions.GetHashCodeFromFields
int VROSC::ObjectExtensions::GetHashCodeFromFields(::Il2CppObject* obj, ::ArrayW<::Il2CppObject*> fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::GetHashCodeFromFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "GetHashCodeFromFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, fields);
}
// Autogenerated method: VROSC.ObjectExtensions.Multiply
::UnityEngine::Vector3 VROSC::ObjectExtensions::Multiply(::UnityEngine::Vector3 vector, ::UnityEngine::Vector3 factor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector), ::il2cpp_utils::ExtractType(factor)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vector, factor);
}
// Autogenerated method: VROSC.ObjectExtensions.Max
::UnityEngine::Vector3 VROSC::ObjectExtensions::Max(::UnityEngine::Vector3 v1, ::UnityEngine::Vector3 v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v1, v2);
}
// Autogenerated method: VROSC.ObjectExtensions.Reset
void VROSC::ObjectExtensions::Reset(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform);
}
// Autogenerated method: VROSC.ObjectExtensions.IsPointInside
bool VROSC::ObjectExtensions::IsPointInside(::UnityEngine::Transform* transform, ::UnityEngine::Vector3 worldPosition, ::UnityEngine::Vector3 size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::IsPointInside");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "IsPointInside", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(worldPosition), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, worldPosition, size);
}
// Autogenerated method: VROSC.ObjectExtensions.TransposeScale
::VROSC::Scale VROSC::ObjectExtensions::TransposeScale(::VROSC::Scale scale, int steps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::TransposeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "TransposeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(steps)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Scale, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scale, steps);
}
// Autogenerated method: VROSC.ObjectExtensions.GetStrippedScale
::VROSC::Scale VROSC::ObjectExtensions::GetStrippedScale(::VROSC::Scale scale, ::VROSC::Note baseNote, int numberOfNotesToDrop, bool keepBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::GetStrippedScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "GetStrippedScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(baseNote), ::il2cpp_utils::ExtractType(numberOfNotesToDrop), ::il2cpp_utils::ExtractType(keepBase)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Scale, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scale, baseNote, numberOfNotesToDrop, keepBase);
}
// Autogenerated method: VROSC.ObjectExtensions.ConstructStrippedScale
::VROSC::Scale VROSC::ObjectExtensions::ConstructStrippedScale(::VROSC::ScalePreset* scalePreset, int noteCount, ::VROSC::Note key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::ConstructStrippedScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "ConstructStrippedScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scalePreset), ::il2cpp_utils::ExtractType(noteCount), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Scale, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scalePreset, noteCount, key);
}
// Autogenerated method: VROSC.ObjectExtensions.FitNotesToScale
::VROSC::Scale VROSC::ObjectExtensions::FitNotesToScale(::VROSC::Scale notes, ::VROSC::Scale oldScale, ::VROSC::Note oldKey, ::VROSC::Scale newScale, ::VROSC::Note newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::FitNotesToScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "FitNotesToScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notes), ::il2cpp_utils::ExtractType(oldScale), ::il2cpp_utils::ExtractType(oldKey), ::il2cpp_utils::ExtractType(newScale), ::il2cpp_utils::ExtractType(newKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Scale, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, notes, oldScale, oldKey, newScale, newKey);
}
// Autogenerated method: VROSC.ObjectExtensions.NoteCount
int VROSC::ObjectExtensions::NoteCount(::VROSC::Scale scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::NoteCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "NoteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scale);
}
// Autogenerated method: VROSC.ObjectExtensions.GetRandomNote
::VROSC::Note VROSC::ObjectExtensions::GetRandomNote(::VROSC::Scale scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::GetRandomNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "GetRandomNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Note, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scale);
}
// Autogenerated method: VROSC.ObjectExtensions.ContainsNote
bool VROSC::ObjectExtensions::ContainsNote(::VROSC::Scale scale, ::VROSC::Note note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::ContainsNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "ContainsNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(note)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scale, note);
}
// Autogenerated method: VROSC.ObjectExtensions.GetOffsetNote
int VROSC::ObjectExtensions::GetOffsetNote(int note, ::VROSC::Scale scale, int offsetSteps, bool avoidTritone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::GetOffsetNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "GetOffsetNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(offsetSteps), ::il2cpp_utils::ExtractType(avoidTritone)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, note, scale, offsetSteps, avoidTritone);
}
// Autogenerated method: VROSC.ObjectExtensions.GetNearestNote
bool VROSC::ObjectExtensions::GetNearestNote(::VROSC::Note note, ::System::Collections::Generic::List_1<::VROSC::Scale>* insideScales, ::System::Collections::Generic::List_1<::VROSC::Scale>* outsideScales, ByRef<::VROSC::Note> nearestNote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::GetNearestNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "GetNearestNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(insideScales), ::il2cpp_utils::ExtractType(outsideScales), ::il2cpp_utils::ExtractIndependentType<::VROSC::Note&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, note, insideScales, outsideScales, byref(nearestNote));
}
// Autogenerated method: VROSC.ObjectExtensions.GetRandomNote
::VROSC::Note VROSC::ObjectExtensions::GetRandomNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::GetRandomNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "GetRandomNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Note, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.ObjectExtensions.GetNote
::VROSC::Note VROSC::ObjectExtensions::GetNote(int noteNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::GetNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "GetNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteNumber)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Note, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, noteNumber);
}
// Autogenerated method: VROSC.ObjectExtensions.GetNoteAndOctave
::StringW VROSC::ObjectExtensions::GetNoteAndOctave(int noteNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::GetNoteAndOctave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "GetNoteAndOctave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteNumber)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, noteNumber);
}
// Autogenerated method: VROSC.ObjectExtensions.ToBitMask
int VROSC::ObjectExtensions::ToBitMask(::VROSC::Note note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::ToBitMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "ToBitMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, note);
}
// Autogenerated method: VROSC.ObjectExtensions.Transpose
::VROSC::Note VROSC::ObjectExtensions::Transpose(::VROSC::Note note, ::VROSC::Note fromKey, ::VROSC::Note toKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::Transpose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "Transpose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(fromKey), ::il2cpp_utils::ExtractType(toKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Note, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, note, fromKey, toKey);
}
// Autogenerated method: VROSC.ObjectExtensions.ConvertToSentence
::StringW VROSC::ObjectExtensions::ConvertToSentence(::StringW text, bool preserveAcronyms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::ConvertToSentence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "ConvertToSentence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(preserveAcronyms)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, preserveAcronyms);
}
// Autogenerated method: VROSC.ObjectExtensions.DrawGizmoWireBox
void VROSC::ObjectExtensions::DrawGizmoWireBox(::UnityEngine::Transform* transform, ::UnityEngine::Vector3 size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::DrawGizmoWireBox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "DrawGizmoWireBox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, size);
}
// Autogenerated method: VROSC.ObjectExtensions.Modulo
int VROSC::ObjectExtensions::Modulo(int value, int mod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::Modulo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "Modulo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(mod)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, mod);
}
// Autogenerated method: VROSC.ObjectExtensions.Modulo
float VROSC::ObjectExtensions::Modulo(float value, float mod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::Modulo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "Modulo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(mod)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, mod);
}
// Autogenerated method: VROSC.ObjectExtensions.LinearToDb
float VROSC::ObjectExtensions::LinearToDb(float linearVolume, float minDb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::LinearToDb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "LinearToDb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linearVolume), ::il2cpp_utils::ExtractType(minDb)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, linearVolume, minDb);
}
// Autogenerated method: VROSC.ObjectExtensions.GetNormalizeMultiplier
float VROSC::ObjectExtensions::GetNormalizeMultiplier(::ArrayW<float> audioData, int startIndex, int endIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::GetNormalizeMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "GetNormalizeMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(endIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioData, startIndex, endIndex);
}
// Autogenerated method: VROSC.ObjectExtensions.DenormalizeSamples
void VROSC::ObjectExtensions::DenormalizeSamples(::ArrayW<float> audioData, float normalizeMultiplier, int startIndex, int endIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::DenormalizeSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "DenormalizeSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(normalizeMultiplier), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(endIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioData, normalizeMultiplier, startIndex, endIndex);
}
// Autogenerated method: VROSC.ObjectExtensions.GetTrimSilenceValues
void VROSC::ObjectExtensions::GetTrimSilenceValues(::ArrayW<float> audioData, ByRef<int> startValue, ByRef<int> endValue, int lastSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::GetTrimSilenceValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "GetTrimSilenceValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(lastSample)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioData, byref(startValue), byref(endValue), lastSample);
}
// Autogenerated method: VROSC.ObjectExtensions.TrimSilence
::ArrayW<float> VROSC::ObjectExtensions::TrimSilence(::ArrayW<float> audioData, float gateValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::TrimSilence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "TrimSilence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(gateValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioData, gateValue);
}
// Autogenerated method: VROSC.ObjectExtensions.FormatTimeFraction
::StringW VROSC::ObjectExtensions::FormatTimeFraction(float elapsedTime, float totalTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::FormatTimeFraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "FormatTimeFraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elapsedTime), ::il2cpp_utils::ExtractType(totalTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, elapsedTime, totalTime);
}
// Autogenerated method: VROSC.ObjectExtensions.SemitoneShiftToPitchFraction
float VROSC::ObjectExtensions::SemitoneShiftToPitchFraction(int semitone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::SemitoneShiftToPitchFraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions", "SemitoneShiftToPitchFraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(semitone)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, semitone);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.ObjectExtensions/VROSC.<>c
#include "VROSC/ObjectExtensions_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: VROSC.ScalePreset/VROSC.NotePriority
#include "VROSC/ScalePreset_NotePriority.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VROSC.ObjectExtensions/VROSC.<>c <>9
::VROSC::ObjectExtensions::$$c* VROSC::ObjectExtensions::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::VROSC::ObjectExtensions::$$c*>("VROSC", "ObjectExtensions/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly VROSC.ObjectExtensions/VROSC.<>c <>9
void VROSC::ObjectExtensions::$$c::_set_$$9(::VROSC::ObjectExtensions::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("VROSC", "ObjectExtensions/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<VROSC.ScalePreset/VROSC.NotePriority,System.Int32> <>9__11_0
::System::Func_2<::VROSC::ScalePreset::NotePriority*, int>* VROSC::ObjectExtensions::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::VROSC::ScalePreset::NotePriority*, int>*>("VROSC", "ObjectExtensions/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<VROSC.ScalePreset/VROSC.NotePriority,System.Int32> <>9__11_0
void VROSC::ObjectExtensions::$$c::_set_$$9__11_0(::System::Func_2<::VROSC::ScalePreset::NotePriority*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("VROSC", "ObjectExtensions/<>c", "<>9__11_0", value)));
}
// Autogenerated method: VROSC.ObjectExtensions/VROSC.<>c..cctor
void VROSC::ObjectExtensions::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ObjectExtensions/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.ObjectExtensions/VROSC.<>c.<ConstructStrippedScale>b__11_0
int VROSC::ObjectExtensions::$$c::$ConstructStrippedScale$b__11_0(::VROSC::ScalePreset::NotePriority* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ObjectExtensions::$$c::<ConstructStrippedScale>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ConstructStrippedScale>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.IEnablable
#include "VROSC/IEnablable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VROSC.IEnablable.get_Enabled
bool VROSC::IEnablable::get_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IEnablable::get_Enabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IEnablable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
// Including type: VROSC.InputDevice/VROSC.HeldInputNode
#include "VROSC/InputDevice_HeldInputNode.hpp"
// Including type: VROSC.InputDevice/VROSC.HoveredInputNode
#include "VROSC/InputDevice_HoveredInputNode.hpp"
// Including type: VROSC.UI.UIInputHand
#include "VROSC/UI/UIInputHand.hpp"
// Including type: VROSC.InputVisualizer
#include "VROSC/InputVisualizer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VROSC.PredictiveHitter
#include "VROSC/PredictiveHitter.hpp"
// Including type: VROSC.KeyHitter
#include "VROSC/KeyHitter.hpp"
// Including type: VROSC.HighlightControllerComponents
#include "VROSC/HighlightControllerComponents.hpp"
// Including type: VROSC.TutorialInputDevice
#include "VROSC/TutorialInputDevice.hpp"
// Including type: VROSC.DashboardSpawnPoint
#include "VROSC/DashboardSpawnPoint.hpp"
// Including type: VROSC.ControllerRecordingUI
#include "VROSC/ControllerRecordingUI.hpp"
// Including type: VROSC.UIHelpers
#include "VROSC/UIHelpers.hpp"
// Including type: VROSC.InputSettings
#include "VROSC/InputSettings.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VROSC.InputDeviceTransformData
#include "VROSC/InputDeviceTransformData.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VROSC.VRPlayer
#include "VROSC/VRPlayer.hpp"
// Including type: VROSC.Mallet
#include "VROSC/Mallet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single TriggerHairPinValue
float VROSC::InputDevice::_get_TriggerHairPinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::_get_TriggerHairPinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("VROSC", "InputDevice", "TriggerHairPinValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Single TriggerHairPinValue
void VROSC::InputDevice::_set_TriggerHairPinValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::_set_TriggerHairPinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "InputDevice", "TriggerHairPinValue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single TriggerAlwaysPressedValue
float VROSC::InputDevice::_get_TriggerAlwaysPressedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::_get_TriggerAlwaysPressedValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("VROSC", "InputDevice", "TriggerAlwaysPressedValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Single TriggerAlwaysPressedValue
void VROSC::InputDevice::_set_TriggerAlwaysPressedValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::_set_TriggerAlwaysPressedValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "InputDevice", "TriggerAlwaysPressedValue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean <GrabDisabled>k__BackingField
bool VROSC::InputDevice::_get_$GrabDisabled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::_get_$GrabDisabled$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("VROSC", "InputDevice", "<GrabDisabled>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean <GrabDisabled>k__BackingField
void VROSC::InputDevice::_set_$GrabDisabled$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::_set_$GrabDisabled$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "InputDevice", "<GrabDisabled>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Boolean> GrabDisabledChanged
::System::Action_1<bool>* VROSC::InputDevice::_get_GrabDisabledChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::_get_GrabDisabledChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<bool>*>("VROSC", "InputDevice", "GrabDisabledChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Boolean> GrabDisabledChanged
void VROSC::InputDevice::_set_GrabDisabledChanged(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::_set_GrabDisabledChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "InputDevice", "GrabDisabledChanged", value));
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UI.UIInputHand _uIInput
[[deprecated]] ::VROSC::UI::UIInputHand*& VROSC::InputDevice::dyn__uIInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn__uIInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uIInput"))->offset;
  return *reinterpret_cast<::VROSC::UI::UIInputHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.InputVisualizer _inputVisualizer
[[deprecated]] ::VROSC::InputVisualizer*& VROSC::InputDevice::dyn__inputVisualizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn__inputVisualizer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputVisualizer"))->offset;
  return *reinterpret_cast<::VROSC::InputVisualizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _centerPoint
[[deprecated]] ::UnityEngine::Transform*& VROSC::InputDevice::dyn__centerPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn__centerPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.PredictiveHitter _predictiveHitter
[[deprecated]] ::VROSC::PredictiveHitter*& VROSC::InputDevice::dyn__predictiveHitter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn__predictiveHitter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_predictiveHitter"))->offset;
  return *reinterpret_cast<::VROSC::PredictiveHitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.KeyHitter _keyBoardHitter
[[deprecated]] ::VROSC::KeyHitter*& VROSC::InputDevice::dyn__keyBoardHitter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn__keyBoardHitter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyBoardHitter"))->offset;
  return *reinterpret_cast<::VROSC::KeyHitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.HighlightControllerComponents _highLight
[[deprecated]] ::VROSC::HighlightControllerComponents*& VROSC::InputDevice::dyn__highLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn__highLight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highLight"))->offset;
  return *reinterpret_cast<::VROSC::HighlightControllerComponents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.TutorialInputDevice _tutorial
[[deprecated]] ::VROSC::TutorialInputDevice*& VROSC::InputDevice::dyn__tutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn__tutorial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorial"))->offset;
  return *reinterpret_cast<::VROSC::TutorialInputDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.DashboardSpawnPoint _dashboardSpawnPoint
[[deprecated]] ::VROSC::DashboardSpawnPoint*& VROSC::InputDevice::dyn__dashboardSpawnPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn__dashboardSpawnPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dashboardSpawnPoint"))->offset;
  return *reinterpret_cast<::VROSC::DashboardSpawnPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.ControllerRecordingUI _recordingUI
[[deprecated]] ::VROSC::ControllerRecordingUI*& VROSC::InputDevice::dyn__recordingUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn__recordingUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingUI"))->offset;
  return *reinterpret_cast<::VROSC::ControllerRecordingUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIHelpers <UIHelpers>k__BackingField
[[deprecated]] ::VROSC::UIHelpers*& VROSC::InputDevice::dyn_$UIHelpers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn_$UIHelpers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UIHelpers>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::UIHelpers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.InputSettings _inputSettings
[[deprecated]] ::VROSC::InputSettings*& VROSC::InputDevice::dyn__inputSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn__inputSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputSettings"))->offset;
  return *reinterpret_cast<::VROSC::InputSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _overlapColliderAllocSize
[[deprecated]] int& VROSC::InputDevice::dyn__overlapColliderAllocSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn__overlapColliderAllocSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overlapColliderAllocSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _overlapSize
[[deprecated]] float& VROSC::InputDevice::dyn__overlapSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn__overlapSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overlapSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.HandType <HandType>k__BackingField
[[deprecated]] ::VROSC::HandType& VROSC::InputDevice::dyn_$HandType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn_$HandType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HandType>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::HandType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <TouchPointTransform>k__BackingField
[[deprecated]] ::UnityEngine::Transform*& VROSC::InputDevice::dyn_$TouchPointTransform$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn_$TouchPointTransform$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TouchPointTransform>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <InteractionPointTransform>k__BackingField
[[deprecated]] ::UnityEngine::Transform*& VROSC::InputDevice::dyn_$InteractionPointTransform$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn_$InteractionPointTransform$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InteractionPointTransform>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] _hoveredColliders
[[deprecated]] ::ArrayW<::UnityEngine::Collider*>& VROSC::InputDevice::dyn__hoveredColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn__hoveredColliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoveredColliders"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.InputDevice/VROSC.HoveredInputNode> <HoveredInputNodes>k__BackingField
[[deprecated]] ::System::Collections::Generic::List_1<::VROSC::InputDevice::HoveredInputNode*>*& VROSC::InputDevice::dyn_$HoveredInputNodes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn_$HoveredInputNodes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HoveredInputNodes>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::InputDevice::HoveredInputNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.InputDevice/VROSC.HeldInputNode> <HeldInputNodes>k__BackingField
[[deprecated]] ::System::Collections::Generic::List_1<::VROSC::InputDevice::HeldInputNode*>*& VROSC::InputDevice::dyn_$HeldInputNodes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn_$HeldInputNodes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HeldInputNodes>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::InputDevice::HeldInputNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 <StickPadValue>k__BackingField
[[deprecated]] ::UnityEngine::Vector2& VROSC::InputDevice::dyn_$StickPadValue$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn_$StickPadValue$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StickPadValue>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <IndexTriggerValue>k__BackingField
[[deprecated]] float& VROSC::InputDevice::dyn_$IndexTriggerValue$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn_$IndexTriggerValue$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IndexTriggerValue>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <GripTriggerValue>k__BackingField
[[deprecated]] float& VROSC::InputDevice::dyn_$GripTriggerValue$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn_$GripTriggerValue$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GripTriggerValue>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IndexAsButtonPressed>k__BackingField
[[deprecated]] bool& VROSC::InputDevice::dyn_$IndexAsButtonPressed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn_$IndexAsButtonPressed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IndexAsButtonPressed>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <LastIndexAsButtonPressed>k__BackingField
[[deprecated]] bool& VROSC::InputDevice::dyn_$LastIndexAsButtonPressed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn_$LastIndexAsButtonPressed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LastIndexAsButtonPressed>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <IndexAsButtonEdgeValue>k__BackingField
[[deprecated]] float& VROSC::InputDevice::dyn_$IndexAsButtonEdgeValue$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn_$IndexAsButtonEdgeValue$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IndexAsButtonEdgeValue>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.InputDevice <OtherController>k__BackingField
[[deprecated]] ::VROSC::InputDevice*& VROSC::InputDevice::dyn_$OtherController$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn_$OtherController$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OtherController>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::InputDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <AnyButtonTriggering>k__BackingField
[[deprecated]] bool& VROSC::InputDevice::dyn_$AnyButtonTriggering$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn_$AnyButtonTriggering$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AnyButtonTriggering>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.InputDeviceTransformData <Data>k__BackingField
[[deprecated]] ::VROSC::InputDeviceTransformData*& VROSC::InputDevice::dyn_$Data$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::dyn_$Data$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Data>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::InputDeviceTransformData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.InputDevice.get_UIInputHand
::VROSC::UI::UIInputHand* VROSC::InputDevice::get_UIInputHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_UIInputHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UIInputHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::UI::UIInputHand*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.get_UIHelpers
::VROSC::UIHelpers* VROSC::InputDevice::get_UIHelpers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_UIHelpers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UIHelpers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::UIHelpers*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.set_UIHelpers
void VROSC::InputDevice::set_UIHelpers(::VROSC::UIHelpers* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::set_UIHelpers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UIHelpers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InputDevice.get_HighLighting
::VROSC::HighlightControllerComponents* VROSC::InputDevice::get_HighLighting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_HighLighting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HighLighting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::HighlightControllerComponents*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.get_Tutorial
::VROSC::TutorialInputDevice* VROSC::InputDevice::get_Tutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_Tutorial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tutorial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::TutorialInputDevice*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.get_DashboardSpawnPoint
::VROSC::DashboardSpawnPoint* VROSC::InputDevice::get_DashboardSpawnPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_DashboardSpawnPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DashboardSpawnPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::DashboardSpawnPoint*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.get_RecordingUI
::VROSC::ControllerRecordingUI* VROSC::InputDevice::get_RecordingUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_RecordingUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecordingUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::ControllerRecordingUI*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.get_InteractionPoint
::UnityEngine::Transform* VROSC::InputDevice::get_InteractionPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_InteractionPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InteractionPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.get_RayPoint
::UnityEngine::Transform* VROSC::InputDevice::get_RayPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_RayPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RayPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.get_GrabDisabled
bool VROSC::InputDevice::get_GrabDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_GrabDisabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "InputDevice", "get_GrabDisabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.set_GrabDisabled
void VROSC::InputDevice::set_GrabDisabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::set_GrabDisabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "InputDevice", "set_GrabDisabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: VROSC.InputDevice.get_HandType
::VROSC::HandType VROSC::InputDevice::get_HandType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_HandType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HandType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::HandType, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.set_HandType
void VROSC::InputDevice::set_HandType(::VROSC::HandType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::set_HandType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HandType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InputDevice.get_TouchPointTransform
::UnityEngine::Transform* VROSC::InputDevice::get_TouchPointTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_TouchPointTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TouchPointTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.set_TouchPointTransform
void VROSC::InputDevice::set_TouchPointTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::set_TouchPointTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TouchPointTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InputDevice.get_TrackedHandTransform
::UnityEngine::Transform* VROSC::InputDevice::get_TrackedHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_TrackedHandTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrackedHandTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.get_InteractionPointTransform
::UnityEngine::Transform* VROSC::InputDevice::get_InteractionPointTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_InteractionPointTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InteractionPointTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.set_InteractionPointTransform
void VROSC::InputDevice::set_InteractionPointTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::set_InteractionPointTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InteractionPointTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InputDevice.get_HoveredInputNodes
::System::Collections::Generic::List_1<::VROSC::InputDevice::HoveredInputNode*>* VROSC::InputDevice::get_HoveredInputNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_HoveredInputNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HoveredInputNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::VROSC::InputDevice::HoveredInputNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.set_HoveredInputNodes
void VROSC::InputDevice::set_HoveredInputNodes(::System::Collections::Generic::List_1<::VROSC::InputDevice::HoveredInputNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::set_HoveredInputNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HoveredInputNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InputDevice.get_HeldInputNodes
::System::Collections::Generic::List_1<::VROSC::InputDevice::HeldInputNode*>* VROSC::InputDevice::get_HeldInputNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_HeldInputNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HeldInputNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::VROSC::InputDevice::HeldInputNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.set_HeldInputNodes
void VROSC::InputDevice::set_HeldInputNodes(::System::Collections::Generic::List_1<::VROSC::InputDevice::HeldInputNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::set_HeldInputNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HeldInputNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InputDevice.get_StickPadValue
::UnityEngine::Vector2 VROSC::InputDevice::get_StickPadValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_StickPadValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StickPadValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.set_StickPadValue
void VROSC::InputDevice::set_StickPadValue(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::set_StickPadValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StickPadValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InputDevice.get_IndexTriggerValue
float VROSC::InputDevice::get_IndexTriggerValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_IndexTriggerValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IndexTriggerValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.set_IndexTriggerValue
void VROSC::InputDevice::set_IndexTriggerValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::set_IndexTriggerValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IndexTriggerValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InputDevice.get_GripTriggerValue
float VROSC::InputDevice::get_GripTriggerValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_GripTriggerValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GripTriggerValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.set_GripTriggerValue
void VROSC::InputDevice::set_GripTriggerValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::set_GripTriggerValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GripTriggerValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InputDevice.get_IndexAsButtonPressed
bool VROSC::InputDevice::get_IndexAsButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_IndexAsButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IndexAsButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.set_IndexAsButtonPressed
void VROSC::InputDevice::set_IndexAsButtonPressed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::set_IndexAsButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IndexAsButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InputDevice.get_LastIndexAsButtonPressed
bool VROSC::InputDevice::get_LastIndexAsButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_LastIndexAsButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastIndexAsButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.set_LastIndexAsButtonPressed
void VROSC::InputDevice::set_LastIndexAsButtonPressed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::set_LastIndexAsButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastIndexAsButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InputDevice.get_IndexAsButtonEdgeValue
float VROSC::InputDevice::get_IndexAsButtonEdgeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_IndexAsButtonEdgeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IndexAsButtonEdgeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.set_IndexAsButtonEdgeValue
void VROSC::InputDevice::set_IndexAsButtonEdgeValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::set_IndexAsButtonEdgeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IndexAsButtonEdgeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InputDevice.get_OtherController
::VROSC::InputDevice* VROSC::InputDevice::get_OtherController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_OtherController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OtherController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::InputDevice*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.set_OtherController
void VROSC::InputDevice::set_OtherController(::VROSC::InputDevice* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::set_OtherController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OtherController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InputDevice.get_AnyButtonTriggering
bool VROSC::InputDevice::get_AnyButtonTriggering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_AnyButtonTriggering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AnyButtonTriggering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.set_AnyButtonTriggering
void VROSC::InputDevice::set_AnyButtonTriggering(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::set_AnyButtonTriggering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AnyButtonTriggering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InputDevice.get_Data
::VROSC::InputDeviceTransformData* VROSC::InputDevice::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::get_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::InputDeviceTransformData*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.set_Data
void VROSC::InputDevice::set_Data(::VROSC::InputDeviceTransformData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::set_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InputDevice.Setup
void VROSC::InputDevice::Setup(::VROSC::VRPlayer* player, ::VROSC::InputSettings* inputSettings, ::VROSC::InputDevice* other, ::VROSC::HandType handtype, ::VROSC::UIHelpers* uiHelpers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(inputSettings), ::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(handtype), ::il2cpp_utils::ExtractType(uiHelpers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, inputSettings, other, handtype, uiHelpers);
}
// Autogenerated method: VROSC.InputDevice.UpdateDevice
void VROSC::InputDevice::UpdateDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::UpdateDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.UpdateButtonValues
void VROSC::InputDevice::UpdateButtonValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::UpdateButtonValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateButtonValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.UpdateInputNodes
void VROSC::InputDevice::UpdateInputNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::UpdateInputNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInputNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.CheckForTouchedNodes
bool VROSC::InputDevice::CheckForTouchedNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::CheckForTouchedNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForTouchedNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.SetMalletActive
void VROSC::InputDevice::SetMalletActive(bool enabled, ::VROSC::Mallet* mallet, bool endOfAnimation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::SetMalletActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMalletActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled), ::il2cpp_utils::ExtractType(mallet), ::il2cpp_utils::ExtractType(endOfAnimation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enabled, mallet, endOfAnimation);
}
// Autogenerated method: VROSC.InputDevice.SetKeyHittersActive
void VROSC::InputDevice::SetKeyHittersActive(bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::SetKeyHittersActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKeyHittersActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, active);
}
// Autogenerated method: VROSC.InputDevice.ShouldHoveredNodesDisableGrab
bool VROSC::InputDevice::ShouldHoveredNodesDisableGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::ShouldHoveredNodesDisableGrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHoveredNodesDisableGrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDevice.DisableGrab
void VROSC::InputDevice::DisableGrab(bool disable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::DisableGrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "InputDevice", "DisableGrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, disable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.InputDevice/VROSC.HeldInputNode
#include "VROSC/InputDevice_HeldInputNode.hpp"
// Including type: VROSC.ControllerInputNode
#include "VROSC/ControllerInputNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VROSC.ControllerInputNode InputNode
[[deprecated]] ::VROSC::ControllerInputNode*& VROSC::InputDevice::HeldInputNode::dyn_InputNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::HeldInputNode::dyn_InputNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InputNode"))->offset;
  return *reinterpret_cast<::VROSC::ControllerInputNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.TriggerButton HoldingButton
[[deprecated]] ::VROSC::TriggerButton& VROSC::InputDevice::HeldInputNode::dyn_HoldingButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::HeldInputNode::dyn_HoldingButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HoldingButton"))->offset;
  return *reinterpret_cast<::VROSC::TriggerButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.InputDevice/VROSC.HoveredInputNode
#include "VROSC/InputDevice_HoveredInputNode.hpp"
// Including type: VROSC.ControllerInputNode
#include "VROSC/ControllerInputNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VROSC.ControllerInputNode InputNode
[[deprecated]] ::VROSC::ControllerInputNode*& VROSC::InputDevice::HoveredInputNode::dyn_InputNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::HoveredInputNode::dyn_InputNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InputNode"))->offset;
  return *reinterpret_cast<::VROSC::ControllerInputNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean HoveredThisFrame
[[deprecated]] bool& VROSC::InputDevice::HoveredInputNode::dyn_HoveredThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDevice::HoveredInputNode::dyn_HoveredThisFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HoveredThisFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.InputDeviceTransformData
#include "VROSC/InputDeviceTransformData.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
// Including type: VROSC.InputSettings
#include "VROSC/InputSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <LastPosition>k__BackingField
[[deprecated]] ::UnityEngine::Vector3& VROSC::InputDeviceTransformData::dyn_$LastPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDeviceTransformData::dyn_$LastPosition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LastPosition>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <Velocity>k__BackingField
[[deprecated]] ::UnityEngine::Vector3& VROSC::InputDeviceTransformData::dyn_$Velocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDeviceTransformData::dyn_$Velocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Velocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <SmoothPosition>k__BackingField
[[deprecated]] ::UnityEngine::Vector3& VROSC::InputDeviceTransformData::dyn_$SmoothPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDeviceTransformData::dyn_$SmoothPosition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SmoothPosition>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _smoothingVelocity
[[deprecated]] ::UnityEngine::Vector3& VROSC::InputDeviceTransformData::dyn__smoothingVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDeviceTransformData::dyn__smoothingVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothingVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.InputDevice _inputDevice
[[deprecated]] ::VROSC::InputDevice*& VROSC::InputDeviceTransformData::dyn__inputDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDeviceTransformData::dyn__inputDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputDevice"))->offset;
  return *reinterpret_cast<::VROSC::InputDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.InputSettings _inputSettings
[[deprecated]] ::VROSC::InputSettings*& VROSC::InputDeviceTransformData::dyn__inputSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDeviceTransformData::dyn__inputSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputSettings"))->offset;
  return *reinterpret_cast<::VROSC::InputSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.InputDeviceTransformData.get_LastPosition
::UnityEngine::Vector3 VROSC::InputDeviceTransformData::get_LastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDeviceTransformData::get_LastPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDeviceTransformData.set_LastPosition
void VROSC::InputDeviceTransformData::set_LastPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDeviceTransformData::set_LastPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InputDeviceTransformData.get_Velocity
::UnityEngine::Vector3 VROSC::InputDeviceTransformData::get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDeviceTransformData::get_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDeviceTransformData.set_Velocity
void VROSC::InputDeviceTransformData::set_Velocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDeviceTransformData::set_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InputDeviceTransformData.get_SmoothPosition
::UnityEngine::Vector3 VROSC::InputDeviceTransformData::get_SmoothPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDeviceTransformData::get_SmoothPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SmoothPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDeviceTransformData.set_SmoothPosition
void VROSC::InputDeviceTransformData::set_SmoothPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDeviceTransformData::set_SmoothPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SmoothPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InputDeviceTransformData.UpdatePosition
void VROSC::InputDeviceTransformData::UpdatePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDeviceTransformData::UpdatePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputDeviceTransformData.UpdateVelocity
void VROSC::InputDeviceTransformData::UpdateVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputDeviceTransformData::UpdateVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.InputManager
#include "VROSC/InputManager.hpp"
// Including type: VROSC.InputSettings
#include "VROSC/InputSettings.hpp"
// Including type: HandMover
#include "GlobalNamespace/HandMover.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
// Including type: VROSC.TriggerFrame
#include "VROSC/TriggerFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Action`2<VROSC.InputDevice,VROSC.TriggerButton> OnButtonBegin
::System::Action_2<::VROSC::InputDevice*, ::VROSC::TriggerButton>* VROSC::InputManager::_get_OnButtonBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::_get_OnButtonBegin");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::VROSC::InputDevice*, ::VROSC::TriggerButton>*>("VROSC", "InputManager", "OnButtonBegin")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<VROSC.InputDevice,VROSC.TriggerButton> OnButtonBegin
void VROSC::InputManager::_set_OnButtonBegin(::System::Action_2<::VROSC::InputDevice*, ::VROSC::TriggerButton>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::_set_OnButtonBegin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "InputManager", "OnButtonBegin", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<VROSC.InputDevice,VROSC.TriggerButton> OnButtonStay
::System::Action_2<::VROSC::InputDevice*, ::VROSC::TriggerButton>* VROSC::InputManager::_get_OnButtonStay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::_get_OnButtonStay");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::VROSC::InputDevice*, ::VROSC::TriggerButton>*>("VROSC", "InputManager", "OnButtonStay")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<VROSC.InputDevice,VROSC.TriggerButton> OnButtonStay
void VROSC::InputManager::_set_OnButtonStay(::System::Action_2<::VROSC::InputDevice*, ::VROSC::TriggerButton>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::_set_OnButtonStay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "InputManager", "OnButtonStay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<VROSC.InputDevice,VROSC.TriggerButton> OnButtonEnd
::System::Action_2<::VROSC::InputDevice*, ::VROSC::TriggerButton>* VROSC::InputManager::_get_OnButtonEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::_get_OnButtonEnd");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::VROSC::InputDevice*, ::VROSC::TriggerButton>*>("VROSC", "InputManager", "OnButtonEnd")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<VROSC.InputDevice,VROSC.TriggerButton> OnButtonEnd
void VROSC::InputManager::_set_OnButtonEnd(::System::Action_2<::VROSC::InputDevice*, ::VROSC::TriggerButton>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::_set_OnButtonEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "InputManager", "OnButtonEnd", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<VROSC.InputDevice,UnityEngine.Vector2> OnThumbStickDirection
::System::Action_2<::VROSC::InputDevice*, ::UnityEngine::Vector2>* VROSC::InputManager::_get_OnThumbStickDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::_get_OnThumbStickDirection");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::VROSC::InputDevice*, ::UnityEngine::Vector2>*>("VROSC", "InputManager", "OnThumbStickDirection")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<VROSC.InputDevice,UnityEngine.Vector2> OnThumbStickDirection
void VROSC::InputManager::_set_OnThumbStickDirection(::System::Action_2<::VROSC::InputDevice*, ::UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::_set_OnThumbStickDirection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "InputManager", "OnThumbStickDirection", value));
}
// Autogenerated instance field getter
// Get instance field: private VROSC.TriggerButton[] _allTriggerButtons
[[deprecated]] ::ArrayW<::VROSC::TriggerButton>& VROSC::InputManager::dyn__allTriggerButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::dyn__allTriggerButtons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allTriggerButtons"))->offset;
  return *reinterpret_cast<::ArrayW<::VROSC::TriggerButton>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.InputSettings _inputSettings
[[deprecated]] ::VROSC::InputSettings*& VROSC::InputManager::dyn__inputSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::dyn__inputSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputSettings"))->offset;
  return *reinterpret_cast<::VROSC::InputSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _setupComplete
[[deprecated]] bool& VROSC::InputManager::dyn__setupComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::dyn__setupComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setupComplete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HandMover _debugHandMover
[[deprecated]] ::GlobalNamespace::HandMover*& VROSC::InputManager::dyn__debugHandMover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::dyn__debugHandMover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_debugHandMover"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HandMover**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.TriggerButton> triggerButtonsBeginning
[[deprecated]] ::System::Collections::Generic::List_1<::VROSC::TriggerButton>*& VROSC::InputManager::dyn_triggerButtonsBeginning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::dyn_triggerButtonsBeginning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triggerButtonsBeginning"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::TriggerButton>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.TriggerButton> triggerButtonsStaying
[[deprecated]] ::System::Collections::Generic::List_1<::VROSC::TriggerButton>*& VROSC::InputManager::dyn_triggerButtonsStaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::dyn_triggerButtonsStaying");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triggerButtonsStaying"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::TriggerButton>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.TriggerButton> triggerButtonsEnding
[[deprecated]] ::System::Collections::Generic::List_1<::VROSC::TriggerButton>*& VROSC::InputManager::dyn_triggerButtonsEnding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::dyn_triggerButtonsEnding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triggerButtonsEnding"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::TriggerButton>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.InputManager.get_InputSettings
::VROSC::InputSettings* VROSC::InputManager::get_InputSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::get_InputSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::InputSettings*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputManager.Update
void VROSC::InputManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputManager.Setup
void VROSC::InputManager::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputManager.CheckForButtonInteractions
void VROSC::InputManager::CheckForButtonInteractions(::VROSC::InputDevice* inputDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::CheckForButtonInteractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForButtonInteractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputDevice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputDevice);
}
// Autogenerated method: VROSC.InputManager.ButtonIsTriggering
bool VROSC::InputManager::ButtonIsTriggering(::VROSC::InputDevice* inputDevice, ::VROSC::TriggerButton triggerButton, ::VROSC::TriggerFrame triggerFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::ButtonIsTriggering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ButtonIsTriggering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputDevice), ::il2cpp_utils::ExtractType(triggerButton), ::il2cpp_utils::ExtractType(triggerFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, inputDevice, triggerButton, triggerFrame);
}
// Autogenerated method: VROSC.InputManager.ThumbStickInput
void VROSC::InputManager::ThumbStickInput(::VROSC::InputDevice* inputDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::ThumbStickInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThumbStickInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputDevice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputDevice);
}
// Autogenerated method: VROSC.InputManager.IsPlayerLookingDown
bool VROSC::InputManager::IsPlayerLookingDown(float angleThreshhold) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputManager::IsPlayerLookingDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPlayerLookingDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angleThreshhold)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, angleThreshhold);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.InputSettings
#include "VROSC/InputSettings.hpp"
// Including type: VROSC.PointingLaser
#include "VROSC/PointingLaser.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: VROSC.SimpleHaptic
#include "VROSC/SimpleHaptic.hpp"
// Including type: VROSC.UI.IconData
#include "VROSC/UI/IconData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.PointingLaser _pointerPrefab
[[deprecated]] ::VROSC::PointingLaser*& VROSC::InputSettings::dyn__pointerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__pointerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointerPrefab"))->offset;
  return *reinterpret_cast<::VROSC::PointingLaser**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _pointingDistance
[[deprecated]] float& VROSC::InputSettings::dyn__pointingDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__pointingDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointingDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _overlapDistance
[[deprecated]] float& VROSC::InputSettings::dyn__overlapDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__overlapDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overlapDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxOverlapColliders
[[deprecated]] int& VROSC::InputSettings::dyn__maxOverlapColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__maxOverlapColliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxOverlapColliders"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _positionSmoothing
[[deprecated]] float& VROSC::InputSettings::dyn__positionSmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__positionSmoothing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionSmoothing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _grabSmoothing
[[deprecated]] float& VROSC::InputSettings::dyn__grabSmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__grabSmoothing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabSmoothing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationSmoothing
[[deprecated]] float& VROSC::InputSettings::dyn__rotationSmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__rotationSmoothing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationSmoothing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _uiInteractionMask
[[deprecated]] ::UnityEngine::LayerMask& VROSC::InputSettings::dyn__uiInteractionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__uiInteractionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uiInteractionMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _overlapLayerMask
[[deprecated]] ::UnityEngine::LayerMask& VROSC::InputSettings::dyn__overlapLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__overlapLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overlapLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _gripOnlyLayerMask
[[deprecated]] ::UnityEngine::LayerMask& VROSC::InputSettings::dyn__gripOnlyLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__gripOnlyLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gripOnlyLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.TriggerButton _pinButton
[[deprecated]] ::VROSC::TriggerButton& VROSC::InputSettings::dyn__pinButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__pinButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pinButton"))->offset;
  return *reinterpret_cast<::VROSC::TriggerButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.TriggerButton _attractButton
[[deprecated]] ::VROSC::TriggerButton& VROSC::InputSettings::dyn__attractButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__attractButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attractButton"))->offset;
  return *reinterpret_cast<::VROSC::TriggerButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _attractInDuration
[[deprecated]] float& VROSC::InputSettings::dyn__attractInDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__attractInDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attractInDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _attractAnimationInCurve
[[deprecated]] ::UnityEngine::AnimationCurve*& VROSC::InputSettings::dyn__attractAnimationInCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__attractAnimationInCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attractAnimationInCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _isPinnedHapticWarningDistance
[[deprecated]] float& VROSC::InputSettings::dyn__isPinnedHapticWarningDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__isPinnedHapticWarningDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isPinnedHapticWarningDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.SimpleHaptic _isPinnedHapticWarning
[[deprecated]] ::VROSC::SimpleHaptic*& VROSC::InputSettings::dyn__isPinnedHapticWarning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__isPinnedHapticWarning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isPinnedHapticWarning"))->offset;
  return *reinterpret_cast<::VROSC::SimpleHaptic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _activationTime
[[deprecated]] float& VROSC::InputSettings::dyn__activationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__activationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activationTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UI.IconData _pinIcon
[[deprecated]] ::VROSC::UI::IconData*& VROSC::InputSettings::dyn__pinIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__pinIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pinIcon"))->offset;
  return *reinterpret_cast<::VROSC::UI::IconData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UI.IconData _grabIcon
[[deprecated]] ::VROSC::UI::IconData*& VROSC::InputSettings::dyn__grabIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__grabIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabIcon"))->offset;
  return *reinterpret_cast<::VROSC::UI::IconData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UI.IconData _attractIcon
[[deprecated]] ::VROSC::UI::IconData*& VROSC::InputSettings::dyn__attractIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::dyn__attractIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attractIcon"))->offset;
  return *reinterpret_cast<::VROSC::UI::IconData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.InputSettings.get_PointerPrefab
::VROSC::PointingLaser* VROSC::InputSettings::get_PointerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_PointerPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PointerPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::PointingLaser*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputSettings.get_PointingDistance
float VROSC::InputSettings::get_PointingDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_PointingDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PointingDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputSettings.get_OverlapDistance
float VROSC::InputSettings::get_OverlapDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_OverlapDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverlapDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputSettings.get_MaxOverlapColliders
int VROSC::InputSettings::get_MaxOverlapColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_MaxOverlapColliders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxOverlapColliders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputSettings.get_PositionSmoothing
float VROSC::InputSettings::get_PositionSmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_PositionSmoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PositionSmoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputSettings.get_GrabSmoothing
float VROSC::InputSettings::get_GrabSmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_GrabSmoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GrabSmoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputSettings.get_RotationSmoothing
float VROSC::InputSettings::get_RotationSmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_RotationSmoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RotationSmoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputSettings.get_UIInteractionMask
::UnityEngine::LayerMask VROSC::InputSettings::get_UIInteractionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_UIInteractionMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UIInteractionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputSettings.get_OverlapLayerMask
::UnityEngine::LayerMask VROSC::InputSettings::get_OverlapLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_OverlapLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverlapLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputSettings.get_GripOnlyLayerMask
::UnityEngine::LayerMask VROSC::InputSettings::get_GripOnlyLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_GripOnlyLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GripOnlyLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputSettings.get_AttractButton
::VROSC::TriggerButton VROSC::InputSettings::get_AttractButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_AttractButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AttractButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::TriggerButton, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputSettings.get_PinButton
::VROSC::TriggerButton VROSC::InputSettings::get_PinButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_PinButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PinButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::TriggerButton, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputSettings.get_AttractDuration
float VROSC::InputSettings::get_AttractDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_AttractDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AttractDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputSettings.get_AttractAnimationCurve
::UnityEngine::AnimationCurve* VROSC::InputSettings::get_AttractAnimationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_AttractAnimationCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AttractAnimationCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputSettings.get_IsPinnedHapticWarningDistance
float VROSC::InputSettings::get_IsPinnedHapticWarningDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_IsPinnedHapticWarningDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPinnedHapticWarningDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputSettings.get_IsPinnedHapticWarning
::VROSC::SimpleHaptic* VROSC::InputSettings::get_IsPinnedHapticWarning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_IsPinnedHapticWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPinnedHapticWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::SimpleHaptic*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputSettings.get_PinIcon
::VROSC::UI::IconData* VROSC::InputSettings::get_PinIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_PinIcon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PinIcon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::UI::IconData*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputSettings.get_GrabIcon
::VROSC::UI::IconData* VROSC::InputSettings::get_GrabIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_GrabIcon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GrabIcon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::UI::IconData*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputSettings.get_AttractIcon
::VROSC::UI::IconData* VROSC::InputSettings::get_AttractIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_AttractIcon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AttractIcon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::UI::IconData*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InputSettings.get_ActivationTime
float VROSC::InputSettings::get_ActivationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InputSettings::get_ActivationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActivationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.Clickable
#include "VROSC/Clickable.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: VROSC.ClickData
#include "VROSC/ClickData.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.TriggerButton _reactsTo
[[deprecated]] ::VROSC::TriggerButton& VROSC::Clickable::dyn__reactsTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Clickable::dyn__reactsTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reactsTo"))->offset;
  return *reinterpret_cast<::VROSC::TriggerButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsPressed>k__BackingField
[[deprecated]] bool& VROSC::Clickable::dyn_$IsPressed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Clickable::dyn_$IsPressed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsPressed>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<VROSC.ClickData,System.Boolean> OnPressed
[[deprecated]] ::System::Action_2<::VROSC::ClickData*, bool>*& VROSC::Clickable::dyn_OnPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Clickable::dyn_OnPressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPressed"))->offset;
  return *reinterpret_cast<::System::Action_2<::VROSC::ClickData*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.ClickData> OnClick
[[deprecated]] ::System::Action_1<::VROSC::ClickData*>*& VROSC::Clickable::dyn_OnClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Clickable::dyn_OnClick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnClick"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::ClickData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.Clickable.get_InteractionStopsLaser
bool VROSC::Clickable::get_InteractionStopsLaser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Clickable::get_InteractionStopsLaser");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::Clickable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Clickable.get_IsPressed
bool VROSC::Clickable::get_IsPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Clickable::get_IsPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Clickable.set_IsPressed
void VROSC::Clickable::set_IsPressed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Clickable::set_IsPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.Clickable.PressBegin
void VROSC::Clickable::PressBegin(::VROSC::ClickData* clickData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Clickable::PressBegin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickData);
}
// Autogenerated method: VROSC.Clickable.PressEnd
void VROSC::Clickable::PressEnd(::VROSC::ClickData* clickData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Clickable::PressEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.ClickData
#include "VROSC/ClickData.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly VROSC.InputDevice <Device>k__BackingField
[[deprecated]] ::VROSC::InputDevice*& VROSC::ClickData::dyn_$Device$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ClickData::dyn_$Device$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Device>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::InputDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VROSC.TriggerButton <Button>k__BackingField
[[deprecated]] ::VROSC::TriggerButton& VROSC::ClickData::dyn_$Button$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ClickData::dyn_$Button$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Button>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::TriggerButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3 <Position>k__BackingField
[[deprecated]] ::UnityEngine::Vector3& VROSC::ClickData::dyn_$Position$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ClickData::dyn_$Position$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Position>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <PointedAt>k__BackingField
[[deprecated]] bool& VROSC::ClickData::dyn_$PointedAt$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ClickData::dyn_$PointedAt$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PointedAt>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.ClickData.get_Device
::VROSC::InputDevice* VROSC::ClickData::get_Device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ClickData::get_Device");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Device", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::InputDevice*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ClickData.get_Button
::VROSC::TriggerButton VROSC::ClickData::get_Button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ClickData::get_Button");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Button", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::TriggerButton, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ClickData.get_Position
::UnityEngine::Vector3 VROSC::ClickData::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ClickData::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ClickData.get_PointedAt
bool VROSC::ClickData::get_PointedAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ClickData::get_PointedAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PointedAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.Grabable
#include "VROSC/Grabable.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
// Including type: VROSC.GrabData
#include "VROSC/GrabData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Action`2<VROSC.InputDevice,System.Boolean> OnGrab
::System::Action_2<::VROSC::InputDevice*, bool>* VROSC::Grabable::_get_OnGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Grabable::_get_OnGrab");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::VROSC::InputDevice*, bool>*>("VROSC", "Grabable", "OnGrab")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<VROSC.InputDevice,System.Boolean> OnGrab
void VROSC::Grabable::_set_OnGrab(::System::Action_2<::VROSC::InputDevice*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Grabable::_set_OnGrab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Grabable", "OnGrab", value));
}
// Autogenerated method: VROSC.Grabable.Grab
void VROSC::Grabable::Grab(::VROSC::GrabData* grabData, bool grabbing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Grabable::Grab");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::Grabable*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabData, grabbing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.GrabData
#include "VROSC/GrabData.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly VROSC.InputDevice <Device>k__BackingField
[[deprecated]] ::VROSC::InputDevice*& VROSC::GrabData::dyn_$Device$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GrabData::dyn_$Device$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Device>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::InputDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Collider <GrabbedCollider>k__BackingField
[[deprecated]] ::UnityEngine::Collider*& VROSC::GrabData::dyn_$GrabbedCollider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GrabData::dyn_$GrabbedCollider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GrabbedCollider>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3 <Position>k__BackingField
[[deprecated]] ::UnityEngine::Vector3& VROSC::GrabData::dyn_$Position$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GrabData::dyn_$Position$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Position>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <PointedAt>k__BackingField
[[deprecated]] bool& VROSC::GrabData::dyn_$PointedAt$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GrabData::dyn_$PointedAt$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PointedAt>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.GrabData.get_Device
::VROSC::InputDevice* VROSC::GrabData::get_Device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GrabData::get_Device");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Device", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::InputDevice*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.GrabData.get_GrabbedCollider
::UnityEngine::Collider* VROSC::GrabData::get_GrabbedCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GrabData::get_GrabbedCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GrabbedCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.GrabData.get_Position
::UnityEngine::Vector3 VROSC::GrabData::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GrabData::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.GrabData.get_PointedAt
bool VROSC::GrabData::get_PointedAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GrabData::get_PointedAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PointedAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.Interactable
#include "VROSC/Interactable.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
// Including type: VROSC.TooltipData
#include "VROSC/TooltipData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsHovering>k__BackingField
[[deprecated]] bool& VROSC::Interactable::dyn_$IsHovering$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::dyn_$IsHovering$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsHovering>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsInteracting>k__BackingField
[[deprecated]] bool& VROSC::Interactable::dyn_$IsInteracting$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::dyn_$IsInteracting$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsInteracting>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnHoverStay
[[deprecated]] ::System::Action*& VROSC::Interactable::dyn_OnHoverStay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::dyn_OnHoverStay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnHoverStay"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> OnHover
[[deprecated]] ::System::Action_1<bool>*& VROSC::Interactable::dyn_OnHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::dyn_OnHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnHover"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> OnInteraction
[[deprecated]] ::System::Action_1<bool>*& VROSC::Interactable::dyn_OnInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::dyn_OnInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnInteraction"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> OnInteractableDisabled
[[deprecated]] ::System::Action_1<bool>*& VROSC::Interactable::dyn_OnInteractableDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::dyn_OnInteractableDisabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnInteractableDisabled"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 _lastHoverPosition
[[deprecated]] ::UnityEngine::Vector3& VROSC::Interactable::dyn__lastHoverPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::dyn__lastHoverPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastHoverPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _lastPointedAt
[[deprecated]] bool& VROSC::Interactable::dyn__lastPointedAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::dyn__lastPointedAt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastPointedAt"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.InputDevice> _hoveringControllers
[[deprecated]] ::System::Collections::Generic::List_1<::VROSC::InputDevice*>*& VROSC::Interactable::dyn__hoveringControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::dyn__hoveringControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoveringControllers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::InputDevice*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.TooltipData> _tooltipDatas
[[deprecated]] ::System::Collections::Generic::List_1<::VROSC::TooltipData*>*& VROSC::Interactable::dyn__tooltipDatas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::dyn__tooltipDatas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tooltipDatas"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::TooltipData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Object> _disablingObjects
[[deprecated]] ::System::Collections::Generic::List_1<::Il2CppObject*>*& VROSC::Interactable::dyn__disablingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::dyn__disablingObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disablingObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canBeinteractedWith
[[deprecated]] bool& VROSC::Interactable::dyn__canBeinteractedWith() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::dyn__canBeinteractedWith");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canBeinteractedWith"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.Interactable.get_IsHovering
bool VROSC::Interactable::get_IsHovering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::get_IsHovering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsHovering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Interactable.set_IsHovering
void VROSC::Interactable::set_IsHovering(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::set_IsHovering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsHovering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.Interactable.get_IsDisabled
bool VROSC::Interactable::get_IsDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::get_IsDisabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDisabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Interactable.get_IsInteracting
bool VROSC::Interactable::get_IsInteracting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::get_IsInteracting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInteracting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Interactable.set_IsInteracting
void VROSC::Interactable::set_IsInteracting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::set_IsInteracting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsInteracting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.Interactable.get_CanBeInteractedWith
bool VROSC::Interactable::get_CanBeInteractedWith() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::get_CanBeInteractedWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanBeInteractedWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Interactable.SetDisabled
void VROSC::Interactable::SetDisabled(::Il2CppObject* disabler, bool shouldBeDisabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::SetDisabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::Interactable*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disabler, shouldBeDisabled);
}
// Autogenerated method: VROSC.Interactable.SetCanBeInteractedWith
void VROSC::Interactable::SetCanBeInteractedWith(bool canBeInteractedWith) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::SetCanBeInteractedWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCanBeInteractedWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canBeInteractedWith)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canBeInteractedWith);
}
// Autogenerated method: VROSC.Interactable.SetHovering
void VROSC::Interactable::SetHovering(::VROSC::InputDevice* device, ::UnityEngine::Vector3 position, bool pointedAt, bool controllerIsHovering) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::SetHovering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::Interactable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device, position, pointedAt, controllerIsHovering);
}
// Autogenerated method: VROSC.Interactable.ContinousHovering
void VROSC::Interactable::ContinousHovering(::VROSC::InputDevice* device, ::UnityEngine::Vector3 position, bool pointedAt, bool v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::ContinousHovering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::Interactable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device, position, pointedAt, v);
}
// Autogenerated method: VROSC.Interactable.UpdateHovering
void VROSC::Interactable::UpdateHovering(bool hovering) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::UpdateHovering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::Interactable*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hovering);
}
// Autogenerated method: VROSC.Interactable.OnDisable
void VROSC::Interactable::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::Interactable*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Interactable.SetTooltipData
void VROSC::Interactable::SetTooltipData(::VROSC::TooltipData* tooltipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::SetTooltipData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTooltipData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tooltipData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tooltipData);
}
// Autogenerated method: VROSC.Interactable.SetTooltipData
void VROSC::Interactable::SetTooltipData(::System::Collections::Generic::List_1<::VROSC::TooltipData*>* tooltipDatas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::SetTooltipData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTooltipData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tooltipDatas)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tooltipDatas);
}
// Autogenerated method: VROSC.Interactable.GetTooltipDatas
::System::Collections::Generic::List_1<::VROSC::TooltipData*>* VROSC::Interactable::GetTooltipDatas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Interactable::GetTooltipDatas");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::Interactable*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::VROSC::TooltipData*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.InteractionDisabler
#include "VROSC/InteractionDisabler.hpp"
// Including type: VROSC.Interactable
#include "VROSC/Interactable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.Interactable[] _interactables
[[deprecated]] ::ArrayW<::VROSC::Interactable*>& VROSC::InteractionDisabler::dyn__interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InteractionDisabler::dyn__interactables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactables"))->offset;
  return *reinterpret_cast<::ArrayW<::VROSC::Interactable*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _getInteractablesOnAwake
[[deprecated]] bool& VROSC::InteractionDisabler::dyn__getInteractablesOnAwake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InteractionDisabler::dyn__getInteractablesOnAwake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_getInteractablesOnAwake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.InteractionDisabler.Awake
void VROSC::InteractionDisabler::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InteractionDisabler::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InteractionDisabler.GetInChildren
void VROSC::InteractionDisabler::GetInChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InteractionDisabler::GetInChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InteractionDisabler.SetDisabled
void VROSC::InteractionDisabler::SetDisabled(bool disabled, bool disableVisually) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InteractionDisabler::SetDisabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disabled), ::il2cpp_utils::ExtractType(disableVisually)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disabled, disableVisually);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.SetTooltipsOnInteractable
#include "VROSC/SetTooltipsOnInteractable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VROSC.TooltipData
#include "VROSC/TooltipData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.TooltipData> _tooltipDatas
[[deprecated]] ::System::Collections::Generic::List_1<::VROSC::TooltipData*>*& VROSC::SetTooltipsOnInteractable::dyn__tooltipDatas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SetTooltipsOnInteractable::dyn__tooltipDatas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tooltipDatas"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::TooltipData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.SetTooltipsOnInteractable.Start
void VROSC::SetTooltipsOnInteractable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SetTooltipsOnInteractable::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlayButton
#include "VROSC/LoopPlayButton.hpp"
// Including type: VROSC.LoopPlayer
#include "VROSC/LoopPlayer.hpp"
// Including type: VROSC.UIToggle
#include "VROSC/UIToggle.hpp"
// Including type: VROSC.LooperProgressSliderUpdater
#include "VROSC/LooperProgressSliderUpdater.hpp"
// Including type: VROSC.LaunchPadEffectOnSignal
#include "VROSC/LaunchPadEffectOnSignal.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
// Including type: VROSC.Launchpad
#include "VROSC/Launchpad.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayer <ConnectedPlayer>k__BackingField
[[deprecated]] ::VROSC::LoopPlayer*& VROSC::LoopPlayButton::dyn_$ConnectedPlayer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::dyn_$ConnectedPlayer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ConnectedPlayer>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIToggle _playButton
[[deprecated]] ::VROSC::UIToggle*& VROSC::LoopPlayButton::dyn__playButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::dyn__playButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playButton"))->offset;
  return *reinterpret_cast<::VROSC::UIToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LooperProgressSliderUpdater _progressUpdater
[[deprecated]] ::VROSC::LooperProgressSliderUpdater*& VROSC::LoopPlayButton::dyn__progressUpdater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::dyn__progressUpdater");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progressUpdater"))->offset;
  return *reinterpret_cast<::VROSC::LooperProgressSliderUpdater**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LaunchPadEffectOnSignal _padVisual
[[deprecated]] ::VROSC::LaunchPadEffectOnSignal*& VROSC::LoopPlayButton::dyn__padVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::dyn__padVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_padVisual"))->offset;
  return *reinterpret_cast<::VROSC::LaunchPadEffectOnSignal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> OnPlayToggleChanged
[[deprecated]] ::System::Action_1<bool>*& VROSC::LoopPlayButton::dyn_OnPlayToggleChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::dyn_OnPlayToggleChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPlayToggleChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> OnPlayingChanged
[[deprecated]] ::System::Action_1<bool>*& VROSC::LoopPlayButton::dyn_OnPlayingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::dyn_OnPlayingChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPlayingChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnNewLoopPlayerAssigned
[[deprecated]] ::System::Action*& VROSC::LoopPlayButton::dyn_OnNewLoopPlayerAssigned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::dyn_OnNewLoopPlayerAssigned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnNewLoopPlayerAssigned"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _playing
[[deprecated]] bool& VROSC::LoopPlayButton::dyn__playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::dyn__playing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopPlayButton.get_ProgressUpdater
::VROSC::LooperProgressSliderUpdater* VROSC::LoopPlayButton::get_ProgressUpdater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::get_ProgressUpdater");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProgressUpdater", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LooperProgressSliderUpdater*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayButton.get_ConnectedPlayer
::VROSC::LoopPlayer* VROSC::LoopPlayButton::get_ConnectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::get_ConnectedPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConnectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayButton.set_ConnectedPlayer
void VROSC::LoopPlayButton::set_ConnectedPlayer(::VROSC::LoopPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::set_ConnectedPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ConnectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayButton.Awake
void VROSC::LoopPlayButton::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayButton.OnDestroy
void VROSC::LoopPlayButton::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayButton.OnButtonPressed
void VROSC::LoopPlayButton::OnButtonPressed(::VROSC::InputDevice* device, bool play) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::OnButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(play)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device, play);
}
// Autogenerated method: VROSC.LoopPlayButton.TogglePlay
void VROSC::LoopPlayButton::TogglePlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::TogglePlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TogglePlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayButton.LaunchpadHit
void VROSC::LoopPlayButton::LaunchpadHit(::VROSC::Launchpad* launchpad) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::LaunchpadHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchpadHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(launchpad)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, launchpad);
}
// Autogenerated method: VROSC.LoopPlayButton.TrackLoopPlayer
void VROSC::LoopPlayButton::TrackLoopPlayer(::VROSC::LoopPlayer* loopPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::TrackLoopPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackLoopPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopPlayer);
}
// Autogenerated method: VROSC.LoopPlayButton.SetDisabled
void VROSC::LoopPlayButton::SetDisabled(bool disabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::SetDisabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disabled);
}
// Autogenerated method: VROSC.LoopPlayButton.ShowAsMuted
void VROSC::LoopPlayButton::ShowAsMuted(bool muted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::ShowAsMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowAsMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(muted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, muted);
}
// Autogenerated method: VROSC.LoopPlayButton.Update
void VROSC::LoopPlayButton::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayButton.UpdatePlaying
void VROSC::LoopPlayButton::UpdatePlaying(bool isPlaying, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::UpdatePlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isPlaying), ::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isPlaying, force);
}
// Autogenerated method: VROSC.LoopPlayButton.GetIsPlaying
bool VROSC::LoopPlayButton::GetIsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::GetIsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayButton.SetColor
void VROSC::LoopPlayButton::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayButton::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlaybackConfigData
#include "VROSC/LoopPlaybackConfigData.hpp"
// Including type: VROSC.LoopPlaybackConfig/VROSC.Sync
#include "VROSC/LoopPlaybackConfig_Sync.hpp"
// Including type: VROSC.LoopPlaybackConfig/VROSC.LoopMode
#include "VROSC/LoopPlaybackConfig_LoopMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VROSC.LoopPlaybackConfig/VROSC.TriggerSync StartMode
[[deprecated]] ::VROSC::LoopPlaybackConfig::TriggerSync& VROSC::LoopPlaybackConfigData::dyn_StartMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigData::dyn_StartMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartMode"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackConfig::TriggerSync*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsStartModeLocked
[[deprecated]] bool& VROSC::LoopPlaybackConfigData::dyn_IsStartModeLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigData::dyn_IsStartModeLocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsStartModeLocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.LoopPlaybackConfig/VROSC.TriggerSync StopMode
[[deprecated]] ::VROSC::LoopPlaybackConfig::TriggerSync& VROSC::LoopPlaybackConfigData::dyn_StopMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigData::dyn_StopMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StopMode"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackConfig::TriggerSync*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.LoopPlaybackConfig/VROSC.FadeDuration FadeIn
[[deprecated]] ::VROSC::LoopPlaybackConfig::FadeDuration& VROSC::LoopPlaybackConfigData::dyn_FadeIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigData::dyn_FadeIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FadeIn"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackConfig::FadeDuration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.LoopPlaybackConfig/VROSC.FadeDuration FadeOut
[[deprecated]] ::VROSC::LoopPlaybackConfig::FadeDuration& VROSC::LoopPlaybackConfigData::dyn_FadeOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigData::dyn_FadeOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FadeOut"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackConfig::FadeDuration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean OneShot
[[deprecated]] bool& VROSC::LoopPlaybackConfigData::dyn_OneShot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigData::dyn_OneShot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OneShot"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Retrigger
[[deprecated]] bool& VROSC::LoopPlaybackConfigData::dyn_Retrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigData::dyn_Retrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Retrigger"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopPlaybackConfigData.get_SyncMode
::VROSC::LoopPlaybackConfig::Sync VROSC::LoopPlaybackConfigData::get_SyncMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigData::get_SyncMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlaybackConfig::Sync, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlaybackConfigData.get_Looping
::VROSC::LoopPlaybackConfig::LoopMode VROSC::LoopPlaybackConfigData::get_Looping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigData::get_Looping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Looping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlaybackConfig::LoopMode, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlaybackConfigData.get_RetriggeringOneshot
bool VROSC::LoopPlaybackConfigData::get_RetriggeringOneshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigData::get_RetriggeringOneshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RetriggeringOneshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlaybackConfig
#include "VROSC/LoopPlaybackConfig.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: VROSC.LoopPlaybackConfig/VROSC.Sync
#include "VROSC/LoopPlaybackConfig_Sync.hpp"
// Including type: VROSC.LoopPlaybackConfig/VROSC.LoopMode
#include "VROSC/LoopPlaybackConfig_LoopMode.hpp"
// Including type: VROSC.LoopPlaybackConfigData
#include "VROSC/LoopPlaybackConfigData.hpp"
// Including type: VROSC.Loop
#include "VROSC/Loop.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VROSC.LoopPlayerPlaybackSettings
#include "VROSC/LoopPlayerPlaybackSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String[] TriggerSyncNames
::ArrayW<::StringW> VROSC::LoopPlaybackConfig::_get_TriggerSyncNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::_get_TriggerSyncNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("VROSC", "LoopPlaybackConfig", "TriggerSyncNames"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] TriggerSyncNames
void VROSC::LoopPlaybackConfig::_set_TriggerSyncNames(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::_set_TriggerSyncNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig", "TriggerSyncNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] FadeDurationNames
::ArrayW<::StringW> VROSC::LoopPlaybackConfig::_get_FadeDurationNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::_get_FadeDurationNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("VROSC", "LoopPlaybackConfig", "FadeDurationNames"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] FadeDurationNames
void VROSC::LoopPlaybackConfig::_set_FadeDurationNames(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::_set_FadeDurationNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig", "FadeDurationNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean FadeAfterStopInsteadOfBefore
bool VROSC::LoopPlaybackConfig::_get_FadeAfterStopInsteadOfBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::_get_FadeAfterStopInsteadOfBefore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("VROSC", "LoopPlaybackConfig", "FadeAfterStopInsteadOfBefore"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean FadeAfterStopInsteadOfBefore
void VROSC::LoopPlaybackConfig::_set_FadeAfterStopInsteadOfBefore(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::_set_FadeAfterStopInsteadOfBefore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig", "FadeAfterStopInsteadOfBefore", value));
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlaybackConfigData <Data>k__BackingField
[[deprecated]] ::VROSC::LoopPlaybackConfigData*& VROSC::LoopPlaybackConfig::dyn_$Data$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::dyn_$Data$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Data>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackConfigData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.Loop <ReferenceLoopForStart>k__BackingField
[[deprecated]] ::VROSC::Loop*& VROSC::LoopPlaybackConfig::dyn_$ReferenceLoopForStart$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::dyn_$ReferenceLoopForStart$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReferenceLoopForStart>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::Loop**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.Loop <ReferenceLoopForLength>k__BackingField
[[deprecated]] ::VROSC::Loop*& VROSC::LoopPlaybackConfig::dyn_$ReferenceLoopForLength$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::dyn_$ReferenceLoopForLength$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReferenceLoopForLength>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::Loop**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.LoopPlaybackConfig/VROSC.TriggerSync> OnStartSet
[[deprecated]] ::System::Action_1<::VROSC::LoopPlaybackConfig::TriggerSync>*& VROSC::LoopPlaybackConfig::dyn_OnStartSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::dyn_OnStartSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStartSet"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::LoopPlaybackConfig::TriggerSync>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.LoopPlaybackConfig/VROSC.TriggerSync> OnStopSet
[[deprecated]] ::System::Action_1<::VROSC::LoopPlaybackConfig::TriggerSync>*& VROSC::LoopPlaybackConfig::dyn_OnStopSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::dyn_OnStopSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStopSet"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::LoopPlaybackConfig::TriggerSync>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> OnOneShotSet
[[deprecated]] ::System::Action_1<bool>*& VROSC::LoopPlaybackConfig::dyn_OnOneShotSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::dyn_OnOneShotSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnOneShotSet"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> OnRetriggerSet
[[deprecated]] ::System::Action_1<bool>*& VROSC::LoopPlaybackConfig::dyn_OnRetriggerSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::dyn_OnRetriggerSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnRetriggerSet"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.LoopPlaybackConfig/VROSC.FadeDuration> OnFadeOutSet
[[deprecated]] ::System::Action_1<::VROSC::LoopPlaybackConfig::FadeDuration>*& VROSC::LoopPlaybackConfig::dyn_OnFadeOutSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::dyn_OnFadeOutSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnFadeOutSet"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::LoopPlaybackConfig::FadeDuration>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.LoopPlaybackConfig/VROSC.FadeDuration> OnFadeInSet
[[deprecated]] ::System::Action_1<::VROSC::LoopPlaybackConfig::FadeDuration>*& VROSC::LoopPlaybackConfig::dyn_OnFadeInSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::dyn_OnFadeInSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnFadeInSet"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::LoopPlaybackConfig::FadeDuration>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnConfigChanged
[[deprecated]] ::System::Action*& VROSC::LoopPlaybackConfig::dyn_OnConfigChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::dyn_OnConfigChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnConfigChanged"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopPlaybackConfig.get_Data
::VROSC::LoopPlaybackConfigData* VROSC::LoopPlaybackConfig::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::get_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlaybackConfigData*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlaybackConfig.set_Data
void VROSC::LoopPlaybackConfig::set_Data(::VROSC::LoopPlaybackConfigData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::set_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlaybackConfig.get_ReferenceLoopForStart
::VROSC::Loop* VROSC::LoopPlaybackConfig::get_ReferenceLoopForStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::get_ReferenceLoopForStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReferenceLoopForStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Loop*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlaybackConfig.set_ReferenceLoopForStart
void VROSC::LoopPlaybackConfig::set_ReferenceLoopForStart(::VROSC::Loop* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::set_ReferenceLoopForStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReferenceLoopForStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlaybackConfig.get_ReferenceLoopForLength
::VROSC::Loop* VROSC::LoopPlaybackConfig::get_ReferenceLoopForLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::get_ReferenceLoopForLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReferenceLoopForLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Loop*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlaybackConfig.set_ReferenceLoopForLength
void VROSC::LoopPlaybackConfig::set_ReferenceLoopForLength(::VROSC::Loop* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::set_ReferenceLoopForLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReferenceLoopForLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlaybackConfig..cctor
void VROSC::LoopPlaybackConfig::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "LoopPlaybackConfig", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.LoopPlaybackConfig.SharedConstructor
void VROSC::LoopPlaybackConfig::SharedConstructor(::VROSC::LoopPlaybackConfig::TriggerSync startMode, bool isStartModeLocked, ::VROSC::LoopPlaybackConfig::TriggerSync stopMode, ::VROSC::LoopPlaybackConfig::FadeDuration fadeIn, ::VROSC::LoopPlaybackConfig::FadeDuration fadeOut, bool oneShot, bool retrigger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::SharedConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SharedConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startMode), ::il2cpp_utils::ExtractType(isStartModeLocked), ::il2cpp_utils::ExtractType(stopMode), ::il2cpp_utils::ExtractType(fadeIn), ::il2cpp_utils::ExtractType(fadeOut), ::il2cpp_utils::ExtractType(oneShot), ::il2cpp_utils::ExtractType(retrigger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startMode, isStartModeLocked, stopMode, fadeIn, fadeOut, oneShot, retrigger);
}
// Autogenerated method: VROSC.LoopPlaybackConfig.ApplyTo
void VROSC::LoopPlaybackConfig::ApplyTo(::VROSC::LoopPlaybackConfig* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::ApplyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlaybackConfig*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: VROSC.LoopPlaybackConfig.SetStartMode
void VROSC::LoopPlaybackConfig::SetStartMode(::VROSC::LoopPlaybackConfig::TriggerSync startMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::SetStartMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStartMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startMode);
}
// Autogenerated method: VROSC.LoopPlaybackConfig.SetStopMode
void VROSC::LoopPlaybackConfig::SetStopMode(::VROSC::LoopPlaybackConfig::TriggerSync stopMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::SetStopMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStopMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stopMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stopMode);
}
// Autogenerated method: VROSC.LoopPlaybackConfig.SetFadeIn
void VROSC::LoopPlaybackConfig::SetFadeIn(::VROSC::LoopPlaybackConfig::FadeDuration fade) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::SetFadeIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFadeIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fade)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fade);
}
// Autogenerated method: VROSC.LoopPlaybackConfig.SetFadeOut
void VROSC::LoopPlaybackConfig::SetFadeOut(::VROSC::LoopPlaybackConfig::FadeDuration fade) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::SetFadeOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFadeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fade)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fade);
}
// Autogenerated method: VROSC.LoopPlaybackConfig.SetOneShot
void VROSC::LoopPlaybackConfig::SetOneShot(bool oneShot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::SetOneShot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOneShot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oneShot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oneShot);
}
// Autogenerated method: VROSC.LoopPlaybackConfig.SetRetrigger
void VROSC::LoopPlaybackConfig::SetRetrigger(bool retrigger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::SetRetrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRetrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(retrigger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, retrigger);
}
// Autogenerated method: VROSC.LoopPlaybackConfig.GetNextTriggerSyncPoint
int VROSC::LoopPlaybackConfig::GetNextTriggerSyncPoint(::VROSC::LoopPlayerPlaybackSettings* settings, int sample, ::VROSC::LoopPlaybackConfig::TriggerSync triggerSync) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::GetNextTriggerSyncPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "LoopPlaybackConfig", "GetNextTriggerSyncPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings), ::il2cpp_utils::ExtractType(sample), ::il2cpp_utils::ExtractType(triggerSync)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, settings, sample, triggerSync);
}
// Autogenerated method: VROSC.LoopPlaybackConfig.GetSyncLengthInSamples
int VROSC::LoopPlaybackConfig::GetSyncLengthInSamples(::VROSC::LoopPlayerPlaybackSettings* settings, ::VROSC::LoopPlaybackConfig::TriggerSync sync) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::GetSyncLengthInSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "LoopPlaybackConfig", "GetSyncLengthInSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings), ::il2cpp_utils::ExtractType(sync)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, settings, sync);
}
// Autogenerated method: VROSC.LoopPlaybackConfig.GetFirstPlayConfig
::VROSC::LoopPlaybackConfig* VROSC::LoopPlaybackConfig::GetFirstPlayConfig(::VROSC::LoopPlaybackConfig* recording) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::GetFirstPlayConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "LoopPlaybackConfig", "GetFirstPlayConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recording)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlaybackConfig*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, recording);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlaybackConfig/VROSC.TriggerSync
#include "VROSC/LoopPlaybackConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Instant
::VROSC::LoopPlaybackConfig::TriggerSync VROSC::LoopPlaybackConfig::TriggerSync::_get_Instant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::TriggerSync::_get_Instant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::TriggerSync>("VROSC", "LoopPlaybackConfig/TriggerSync", "Instant"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Instant
void VROSC::LoopPlaybackConfig::TriggerSync::_set_Instant(::VROSC::LoopPlaybackConfig::TriggerSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::TriggerSync::_set_Instant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/TriggerSync", "Instant", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync LoopPoint
::VROSC::LoopPlaybackConfig::TriggerSync VROSC::LoopPlaybackConfig::TriggerSync::_get_LoopPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::TriggerSync::_get_LoopPoint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::TriggerSync>("VROSC", "LoopPlaybackConfig/TriggerSync", "LoopPoint"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync LoopPoint
void VROSC::LoopPlaybackConfig::TriggerSync::_set_LoopPoint(::VROSC::LoopPlaybackConfig::TriggerSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::TriggerSync::_set_LoopPoint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/TriggerSync", "LoopPoint", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Bar
::VROSC::LoopPlaybackConfig::TriggerSync VROSC::LoopPlaybackConfig::TriggerSync::_get_Bar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::TriggerSync::_get_Bar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::TriggerSync>("VROSC", "LoopPlaybackConfig/TriggerSync", "Bar"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Bar
void VROSC::LoopPlaybackConfig::TriggerSync::_set_Bar(::VROSC::LoopPlaybackConfig::TriggerSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::TriggerSync::_set_Bar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/TriggerSync", "Bar", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Half
::VROSC::LoopPlaybackConfig::TriggerSync VROSC::LoopPlaybackConfig::TriggerSync::_get_Half() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::TriggerSync::_get_Half");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::TriggerSync>("VROSC", "LoopPlaybackConfig/TriggerSync", "Half"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Half
void VROSC::LoopPlaybackConfig::TriggerSync::_set_Half(::VROSC::LoopPlaybackConfig::TriggerSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::TriggerSync::_set_Half");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/TriggerSync", "Half", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Quarter
::VROSC::LoopPlaybackConfig::TriggerSync VROSC::LoopPlaybackConfig::TriggerSync::_get_Quarter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::TriggerSync::_get_Quarter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::TriggerSync>("VROSC", "LoopPlaybackConfig/TriggerSync", "Quarter"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Quarter
void VROSC::LoopPlaybackConfig::TriggerSync::_set_Quarter(::VROSC::LoopPlaybackConfig::TriggerSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::TriggerSync::_set_Quarter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/TriggerSync", "Quarter", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Eigth
::VROSC::LoopPlaybackConfig::TriggerSync VROSC::LoopPlaybackConfig::TriggerSync::_get_Eigth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::TriggerSync::_get_Eigth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::TriggerSync>("VROSC", "LoopPlaybackConfig/TriggerSync", "Eigth"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Eigth
void VROSC::LoopPlaybackConfig::TriggerSync::_set_Eigth(::VROSC::LoopPlaybackConfig::TriggerSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::TriggerSync::_set_Eigth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/TriggerSync", "Eigth", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Sixteenth
::VROSC::LoopPlaybackConfig::TriggerSync VROSC::LoopPlaybackConfig::TriggerSync::_get_Sixteenth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::TriggerSync::_get_Sixteenth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::TriggerSync>("VROSC", "LoopPlaybackConfig/TriggerSync", "Sixteenth"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Sixteenth
void VROSC::LoopPlaybackConfig::TriggerSync::_set_Sixteenth(::VROSC::LoopPlaybackConfig::TriggerSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::TriggerSync::_set_Sixteenth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/TriggerSync", "Sixteenth", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Twelfth
::VROSC::LoopPlaybackConfig::TriggerSync VROSC::LoopPlaybackConfig::TriggerSync::_get_Twelfth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::TriggerSync::_get_Twelfth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::TriggerSync>("VROSC", "LoopPlaybackConfig/TriggerSync", "Twelfth"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Twelfth
void VROSC::LoopPlaybackConfig::TriggerSync::_set_Twelfth(::VROSC::LoopPlaybackConfig::TriggerSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::TriggerSync::_set_Twelfth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/TriggerSync", "Twelfth", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& VROSC::LoopPlaybackConfig::TriggerSync::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::TriggerSync::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlaybackConfig/VROSC.FadeDuration
#include "VROSC/LoopPlaybackConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration None
::VROSC::LoopPlaybackConfig::FadeDuration VROSC::LoopPlaybackConfig::FadeDuration::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::FadeDuration::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::FadeDuration>("VROSC", "LoopPlaybackConfig/FadeDuration", "None"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration None
void VROSC::LoopPlaybackConfig::FadeDuration::_set_None(::VROSC::LoopPlaybackConfig::FadeDuration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::FadeDuration::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/FadeDuration", "None", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Sixteenth
::VROSC::LoopPlaybackConfig::FadeDuration VROSC::LoopPlaybackConfig::FadeDuration::_get_Sixteenth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::FadeDuration::_get_Sixteenth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::FadeDuration>("VROSC", "LoopPlaybackConfig/FadeDuration", "Sixteenth"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Sixteenth
void VROSC::LoopPlaybackConfig::FadeDuration::_set_Sixteenth(::VROSC::LoopPlaybackConfig::FadeDuration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::FadeDuration::_set_Sixteenth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/FadeDuration", "Sixteenth", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Eighth
::VROSC::LoopPlaybackConfig::FadeDuration VROSC::LoopPlaybackConfig::FadeDuration::_get_Eighth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::FadeDuration::_get_Eighth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::FadeDuration>("VROSC", "LoopPlaybackConfig/FadeDuration", "Eighth"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Eighth
void VROSC::LoopPlaybackConfig::FadeDuration::_set_Eighth(::VROSC::LoopPlaybackConfig::FadeDuration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::FadeDuration::_set_Eighth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/FadeDuration", "Eighth", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Quarter
::VROSC::LoopPlaybackConfig::FadeDuration VROSC::LoopPlaybackConfig::FadeDuration::_get_Quarter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::FadeDuration::_get_Quarter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::FadeDuration>("VROSC", "LoopPlaybackConfig/FadeDuration", "Quarter"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Quarter
void VROSC::LoopPlaybackConfig::FadeDuration::_set_Quarter(::VROSC::LoopPlaybackConfig::FadeDuration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::FadeDuration::_set_Quarter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/FadeDuration", "Quarter", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Half
::VROSC::LoopPlaybackConfig::FadeDuration VROSC::LoopPlaybackConfig::FadeDuration::_get_Half() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::FadeDuration::_get_Half");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::FadeDuration>("VROSC", "LoopPlaybackConfig/FadeDuration", "Half"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Half
void VROSC::LoopPlaybackConfig::FadeDuration::_set_Half(::VROSC::LoopPlaybackConfig::FadeDuration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::FadeDuration::_set_Half");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/FadeDuration", "Half", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Bar
::VROSC::LoopPlaybackConfig::FadeDuration VROSC::LoopPlaybackConfig::FadeDuration::_get_Bar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::FadeDuration::_get_Bar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::FadeDuration>("VROSC", "LoopPlaybackConfig/FadeDuration", "Bar"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Bar
void VROSC::LoopPlaybackConfig::FadeDuration::_set_Bar(::VROSC::LoopPlaybackConfig::FadeDuration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::FadeDuration::_set_Bar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/FadeDuration", "Bar", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration TwoBars
::VROSC::LoopPlaybackConfig::FadeDuration VROSC::LoopPlaybackConfig::FadeDuration::_get_TwoBars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::FadeDuration::_get_TwoBars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::FadeDuration>("VROSC", "LoopPlaybackConfig/FadeDuration", "TwoBars"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration TwoBars
void VROSC::LoopPlaybackConfig::FadeDuration::_set_TwoBars(::VROSC::LoopPlaybackConfig::FadeDuration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::FadeDuration::_set_TwoBars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/FadeDuration", "TwoBars", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration FourBars
::VROSC::LoopPlaybackConfig::FadeDuration VROSC::LoopPlaybackConfig::FadeDuration::_get_FourBars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::FadeDuration::_get_FourBars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::FadeDuration>("VROSC", "LoopPlaybackConfig/FadeDuration", "FourBars"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration FourBars
void VROSC::LoopPlaybackConfig::FadeDuration::_set_FourBars(::VROSC::LoopPlaybackConfig::FadeDuration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::FadeDuration::_set_FourBars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/FadeDuration", "FourBars", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Auto
::VROSC::LoopPlaybackConfig::FadeDuration VROSC::LoopPlaybackConfig::FadeDuration::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::FadeDuration::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::FadeDuration>("VROSC", "LoopPlaybackConfig/FadeDuration", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Auto
void VROSC::LoopPlaybackConfig::FadeDuration::_set_Auto(::VROSC::LoopPlaybackConfig::FadeDuration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::FadeDuration::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/FadeDuration", "Auto", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& VROSC::LoopPlaybackConfig::FadeDuration::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::FadeDuration::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlaybackConfig/VROSC.Sync
#include "VROSC/LoopPlaybackConfig_Sync.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.Sync PlayFromStart
::VROSC::LoopPlaybackConfig::Sync VROSC::LoopPlaybackConfig::Sync::_get_PlayFromStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::Sync::_get_PlayFromStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::Sync>("VROSC", "LoopPlaybackConfig/Sync", "PlayFromStart"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.Sync PlayFromStart
void VROSC::LoopPlaybackConfig::Sync::_set_PlayFromStart(::VROSC::LoopPlaybackConfig::Sync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::Sync::_set_PlayFromStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/Sync", "PlayFromStart", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.Sync Global
::VROSC::LoopPlaybackConfig::Sync VROSC::LoopPlaybackConfig::Sync::_get_Global() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::Sync::_get_Global");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::Sync>("VROSC", "LoopPlaybackConfig/Sync", "Global"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.Sync Global
void VROSC::LoopPlaybackConfig::Sync::_set_Global(::VROSC::LoopPlaybackConfig::Sync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::Sync::_set_Global");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/Sync", "Global", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& VROSC::LoopPlaybackConfig::Sync::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::Sync::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlaybackConfig/VROSC.LoopMode
#include "VROSC/LoopPlaybackConfig_LoopMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.LoopMode Loop
::VROSC::LoopPlaybackConfig::LoopMode VROSC::LoopPlaybackConfig::LoopMode::_get_Loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::LoopMode::_get_Loop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::LoopMode>("VROSC", "LoopPlaybackConfig/LoopMode", "Loop"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.LoopMode Loop
void VROSC::LoopPlaybackConfig::LoopMode::_set_Loop(::VROSC::LoopPlaybackConfig::LoopMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::LoopMode::_set_Loop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/LoopMode", "Loop", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlaybackConfig/VROSC.LoopMode Once
::VROSC::LoopPlaybackConfig::LoopMode VROSC::LoopPlaybackConfig::LoopMode::_get_Once() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::LoopMode::_get_Once");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlaybackConfig::LoopMode>("VROSC", "LoopPlaybackConfig/LoopMode", "Once"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlaybackConfig/VROSC.LoopMode Once
void VROSC::LoopPlaybackConfig::LoopMode::_set_Once(::VROSC::LoopPlaybackConfig::LoopMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::LoopMode::_set_Once");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackConfig/LoopMode", "Once", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& VROSC::LoopPlaybackConfig::LoopMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::LoopMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlaybackConfigOverrideFlags
#include "VROSC/LoopPlaybackConfigOverrideFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean OverrideStartMode
[[deprecated]] bool& VROSC::LoopPlaybackConfigOverrideFlags::dyn_OverrideStartMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverrideFlags::dyn_OverrideStartMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OverrideStartMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean OverrideStopMode
[[deprecated]] bool& VROSC::LoopPlaybackConfigOverrideFlags::dyn_OverrideStopMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverrideFlags::dyn_OverrideStopMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OverrideStopMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean OverrideFadeIn
[[deprecated]] bool& VROSC::LoopPlaybackConfigOverrideFlags::dyn_OverrideFadeIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverrideFlags::dyn_OverrideFadeIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OverrideFadeIn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean OverrideFadeOut
[[deprecated]] bool& VROSC::LoopPlaybackConfigOverrideFlags::dyn_OverrideFadeOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverrideFlags::dyn_OverrideFadeOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OverrideFadeOut"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean OverrideOneShot
[[deprecated]] bool& VROSC::LoopPlaybackConfigOverrideFlags::dyn_OverrideOneShot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverrideFlags::dyn_OverrideOneShot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OverrideOneShot"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean OverrideRetrigger
[[deprecated]] bool& VROSC::LoopPlaybackConfigOverrideFlags::dyn_OverrideRetrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverrideFlags::dyn_OverrideRetrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OverrideRetrigger"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlaybackConfigOverride
#include "VROSC/LoopPlaybackConfigOverride.hpp"
// Including type: VROSC.LoopPlaybackConfigOverrideFlags
#include "VROSC/LoopPlaybackConfigOverrideFlags.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: VROSC.LoopPlaybackConfigData
#include "VROSC/LoopPlaybackConfigData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlaybackConfigOverrideFlags <OverrideFlags>k__BackingField
[[deprecated]] ::VROSC::LoopPlaybackConfigOverrideFlags*& VROSC::LoopPlaybackConfigOverride::dyn_$OverrideFlags$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverride::dyn_$OverrideFlags$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OverrideFlags>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackConfigOverrideFlags**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> OnOneShotOverriddenChanged
[[deprecated]] ::System::Action_1<bool>*& VROSC::LoopPlaybackConfigOverride::dyn_OnOneShotOverriddenChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverride::dyn_OnOneShotOverriddenChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnOneShotOverriddenChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> OnRetriggerOverriddenChanged
[[deprecated]] ::System::Action_1<bool>*& VROSC::LoopPlaybackConfigOverride::dyn_OnRetriggerOverriddenChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverride::dyn_OnRetriggerOverriddenChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnRetriggerOverriddenChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> OnStartOverriddenChanged
[[deprecated]] ::System::Action_1<bool>*& VROSC::LoopPlaybackConfigOverride::dyn_OnStartOverriddenChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverride::dyn_OnStartOverriddenChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStartOverriddenChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> OnStopOverriddenChanged
[[deprecated]] ::System::Action_1<bool>*& VROSC::LoopPlaybackConfigOverride::dyn_OnStopOverriddenChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverride::dyn_OnStopOverriddenChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStopOverriddenChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> OnFadeInOverriddenChanged
[[deprecated]] ::System::Action_1<bool>*& VROSC::LoopPlaybackConfigOverride::dyn_OnFadeInOverriddenChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverride::dyn_OnFadeInOverriddenChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnFadeInOverriddenChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> OnFadeOutOverriddenChanged
[[deprecated]] ::System::Action_1<bool>*& VROSC::LoopPlaybackConfigOverride::dyn_OnFadeOutOverriddenChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverride::dyn_OnFadeOutOverriddenChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnFadeOutOverriddenChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnOverrideConfigChanged
[[deprecated]] ::System::Action*& VROSC::LoopPlaybackConfigOverride::dyn_OnOverrideConfigChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverride::dyn_OnOverrideConfigChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnOverrideConfigChanged"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopPlaybackConfigOverride.get_OverrideFlags
::VROSC::LoopPlaybackConfigOverrideFlags* VROSC::LoopPlaybackConfigOverride::get_OverrideFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverride::get_OverrideFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverrideFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlaybackConfigOverrideFlags*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlaybackConfigOverride.set_OverrideFlags
void VROSC::LoopPlaybackConfigOverride::set_OverrideFlags(::VROSC::LoopPlaybackConfigOverrideFlags* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverride::set_OverrideFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OverrideFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlaybackConfigOverride.SetOneShotOverridden
void VROSC::LoopPlaybackConfigOverride::SetOneShotOverridden(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverride::SetOneShotOverridden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOneShotOverridden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: VROSC.LoopPlaybackConfigOverride.SetStartOverridden
void VROSC::LoopPlaybackConfigOverride::SetStartOverridden(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverride::SetStartOverridden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStartOverridden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: VROSC.LoopPlaybackConfigOverride.SetStopOverridden
void VROSC::LoopPlaybackConfigOverride::SetStopOverridden(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverride::SetStopOverridden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStopOverridden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: VROSC.LoopPlaybackConfigOverride.SetFadeInOverridden
void VROSC::LoopPlaybackConfigOverride::SetFadeInOverridden(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverride::SetFadeInOverridden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFadeInOverridden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: VROSC.LoopPlaybackConfigOverride.SetFadeOutOverridden
void VROSC::LoopPlaybackConfigOverride::SetFadeOutOverridden(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverride::SetFadeOutOverridden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFadeOutOverridden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: VROSC.LoopPlaybackConfigOverride.SetRetriggerOverridden
void VROSC::LoopPlaybackConfigOverride::SetRetriggerOverridden(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverride::SetRetriggerOverridden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRetriggerOverridden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: VROSC.LoopPlaybackConfigOverride.ApplyTo
void VROSC::LoopPlaybackConfigOverride::ApplyTo(::VROSC::LoopPlaybackConfig* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigOverride::ApplyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlaybackConfig*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlayerPlaybackSettings
#include "VROSC/LoopPlayerPlaybackSettings.hpp"
// Including type: VROSC.LoopPlaybackConfigOverride
#include "VROSC/LoopPlaybackConfigOverride.hpp"
// Including type: VROSC.Loop
#include "VROSC/Loop.hpp"
// Including type: VROSC.LoopPlayerPlaybackStoppedState
#include "VROSC/LoopPlayerPlaybackStoppedState.hpp"
// Including type: VROSC.LoopPlayerPlaybackWillStartState
#include "VROSC/LoopPlayerPlaybackWillStartState.hpp"
// Including type: VROSC.LoopPlayerPlaybackLoopingState
#include "VROSC/LoopPlayerPlaybackLoopingState.hpp"
// Including type: VROSC.LoopPlayerPlaybackWillStopState
#include "VROSC/LoopPlayerPlaybackWillStopState.hpp"
// Including type: VROSC.LoopPlayerPlaybackState
#include "VROSC/LoopPlayerPlaybackState.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VROSC.LoopPlaybackConfig/VROSC.TriggerSync
#include "VROSC/LoopPlaybackConfig.hpp"
// Including type: VROSC.LoopPlaybackConfig/VROSC.FadeDuration
// Already included the same include: VROSC/LoopPlaybackConfig.hpp
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single AllowedLeadupToNoTailLoopInSeconds
float VROSC::LoopPlayerPlaybackSettings::_get_AllowedLeadupToNoTailLoopInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::_get_AllowedLeadupToNoTailLoopInSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("VROSC", "LoopPlayerPlaybackSettings", "AllowedLeadupToNoTailLoopInSeconds"));
}
// Autogenerated static field setter
// Set static field: static private System.Single AllowedLeadupToNoTailLoopInSeconds
void VROSC::LoopPlayerPlaybackSettings::_set_AllowedLeadupToNoTailLoopInSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::_set_AllowedLeadupToNoTailLoopInSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlayerPlaybackSettings", "AllowedLeadupToNoTailLoopInSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlaybackConfig <LocalPlaybackConfig>k__BackingField
[[deprecated]] ::VROSC::LoopPlaybackConfig*& VROSC::LoopPlayerPlaybackSettings::dyn_$LocalPlaybackConfig$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn_$LocalPlaybackConfig$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LocalPlaybackConfig>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlaybackConfig <PlayingConfig>k__BackingField
[[deprecated]] ::VROSC::LoopPlaybackConfig*& VROSC::LoopPlayerPlaybackSettings::dyn_$PlayingConfig$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn_$PlayingConfig$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlayingConfig>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.Loop <Loop>k__BackingField
[[deprecated]] ::VROSC::Loop*& VROSC::LoopPlayerPlaybackSettings::dyn_$Loop$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn_$Loop$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Loop>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::Loop**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayerPlaybackStoppedState <StoppedState>k__BackingField
[[deprecated]] ::VROSC::LoopPlayerPlaybackStoppedState*& VROSC::LoopPlayerPlaybackSettings::dyn_$StoppedState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn_$StoppedState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StoppedState>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayerPlaybackStoppedState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayerPlaybackWillStartState <WillStartState>k__BackingField
[[deprecated]] ::VROSC::LoopPlayerPlaybackWillStartState*& VROSC::LoopPlayerPlaybackSettings::dyn_$WillStartState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn_$WillStartState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WillStartState>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayerPlaybackWillStartState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayerPlaybackLoopingState <LoopingState>k__BackingField
[[deprecated]] ::VROSC::LoopPlayerPlaybackLoopingState*& VROSC::LoopPlayerPlaybackSettings::dyn_$LoopingState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn_$LoopingState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LoopingState>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayerPlaybackLoopingState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayerPlaybackWillStopState <WillStopState>k__BackingField
[[deprecated]] ::VROSC::LoopPlayerPlaybackWillStopState*& VROSC::LoopPlayerPlaybackSettings::dyn_$WillStopState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn_$WillStopState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WillStopState>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayerPlaybackWillStopState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayerPlaybackState <CurrentState>k__BackingField
[[deprecated]] ::VROSC::LoopPlayerPlaybackState*& VROSC::LoopPlayerPlaybackSettings::dyn_$CurrentState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn_$CurrentState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentState>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayerPlaybackState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayerPlaybackState <NextState>k__BackingField
[[deprecated]] ::VROSC::LoopPlayerPlaybackState*& VROSC::LoopPlayerPlaybackSettings::dyn_$NextState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn_$NextState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NextState>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayerPlaybackState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Active>k__BackingField
[[deprecated]] bool& VROSC::LoopPlayerPlaybackSettings::dyn_$Active$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn_$Active$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Active>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Playing>k__BackingField
[[deprecated]] bool& VROSC::LoopPlayerPlaybackSettings::dyn_$Playing$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn_$Playing$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Playing>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <FadeMultiplier>k__BackingField
[[deprecated]] float& VROSC::LoopPlayerPlaybackSettings::dyn_$FadeMultiplier$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn_$FadeMultiplier$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FadeMultiplier>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <PlayFromStartOffset>k__BackingField
[[deprecated]] int& VROSC::LoopPlayerPlaybackSettings::dyn_$PlayFromStartOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn_$PlayFromStartOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlayFromStartOffset>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <StartOffsetBarRelative>k__BackingField
[[deprecated]] int& VROSC::LoopPlayerPlaybackSettings::dyn_$StartOffsetBarRelative$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn_$StartOffsetBarRelative$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StartOffsetBarRelative>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _wasPlaying
[[deprecated]] bool& VROSC::LoopPlayerPlaybackSettings::dyn__wasPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn__wasPlaying");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wasPlaying"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _startedWithPlayFromStart
[[deprecated]] bool& VROSC::LoopPlayerPlaybackSettings::dyn__startedWithPlayFromStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn__startedWithPlayFromStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startedWithPlayFromStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _noTailLoops
[[deprecated]] int& VROSC::LoopPlayerPlaybackSettings::dyn__noTailLoops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn__noTailLoops");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noTailLoops"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fadeWithNaturalTail
[[deprecated]] bool& VROSC::LoopPlayerPlaybackSettings::dyn__fadeWithNaturalTail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn__fadeWithNaturalTail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeWithNaturalTail"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _playedLength
[[deprecated]] int& VROSC::LoopPlayerPlaybackSettings::dyn__playedLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn__playedLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playedLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _allowedLeadupToNoTailLoop
[[deprecated]] int& VROSC::LoopPlayerPlaybackSettings::dyn__allowedLeadupToNoTailLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn__allowedLeadupToNoTailLoop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowedLeadupToNoTailLoop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnPlayingStart
[[deprecated]] ::System::Action*& VROSC::LoopPlayerPlaybackSettings::dyn_OnPlayingStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn_OnPlayingStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPlayingStart"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnPlayingEnd
[[deprecated]] ::System::Action*& VROSC::LoopPlayerPlaybackSettings::dyn_OnPlayingEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn_OnPlayingEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPlayingEnd"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.LoopPlayerPlaybackState> OnStateChanged
[[deprecated]] ::System::Action_1<::VROSC::LoopPlayerPlaybackState*>*& VROSC::LoopPlayerPlaybackSettings::dyn_OnStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::dyn_OnStateChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStateChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::LoopPlayerPlaybackState*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.get_LocalPlaybackConfig
::VROSC::LoopPlaybackConfig* VROSC::LoopPlayerPlaybackSettings::get_LocalPlaybackConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::get_LocalPlaybackConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalPlaybackConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlaybackConfig*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.set_LocalPlaybackConfig
void VROSC::LoopPlayerPlaybackSettings::set_LocalPlaybackConfig(::VROSC::LoopPlaybackConfig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::set_LocalPlaybackConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LocalPlaybackConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.get_PlayingConfig
::VROSC::LoopPlaybackConfig* VROSC::LoopPlayerPlaybackSettings::get_PlayingConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::get_PlayingConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayingConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlaybackConfig*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.set_PlayingConfig
void VROSC::LoopPlayerPlaybackSettings::set_PlayingConfig(::VROSC::LoopPlaybackConfig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::set_PlayingConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlayingConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.get_Loop
::VROSC::Loop* VROSC::LoopPlayerPlaybackSettings::get_Loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::get_Loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Loop*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.set_Loop
void VROSC::LoopPlayerPlaybackSettings::set_Loop(::VROSC::Loop* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::set_Loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.get_StoppedState
::VROSC::LoopPlayerPlaybackStoppedState* VROSC::LoopPlayerPlaybackSettings::get_StoppedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::get_StoppedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StoppedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlayerPlaybackStoppedState*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.set_StoppedState
void VROSC::LoopPlayerPlaybackSettings::set_StoppedState(::VROSC::LoopPlayerPlaybackStoppedState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::set_StoppedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StoppedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.get_WillStartState
::VROSC::LoopPlayerPlaybackWillStartState* VROSC::LoopPlayerPlaybackSettings::get_WillStartState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::get_WillStartState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WillStartState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlayerPlaybackWillStartState*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.set_WillStartState
void VROSC::LoopPlayerPlaybackSettings::set_WillStartState(::VROSC::LoopPlayerPlaybackWillStartState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::set_WillStartState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WillStartState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.get_LoopingState
::VROSC::LoopPlayerPlaybackLoopingState* VROSC::LoopPlayerPlaybackSettings::get_LoopingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::get_LoopingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoopingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlayerPlaybackLoopingState*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.set_LoopingState
void VROSC::LoopPlayerPlaybackSettings::set_LoopingState(::VROSC::LoopPlayerPlaybackLoopingState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::set_LoopingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LoopingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.get_WillStopState
::VROSC::LoopPlayerPlaybackWillStopState* VROSC::LoopPlayerPlaybackSettings::get_WillStopState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::get_WillStopState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WillStopState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlayerPlaybackWillStopState*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.set_WillStopState
void VROSC::LoopPlayerPlaybackSettings::set_WillStopState(::VROSC::LoopPlayerPlaybackWillStopState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::set_WillStopState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WillStopState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.get_CurrentState
::VROSC::LoopPlayerPlaybackState* VROSC::LoopPlayerPlaybackSettings::get_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::get_CurrentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlayerPlaybackState*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.set_CurrentState
void VROSC::LoopPlayerPlaybackSettings::set_CurrentState(::VROSC::LoopPlayerPlaybackState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::set_CurrentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.get_NextState
::VROSC::LoopPlayerPlaybackState* VROSC::LoopPlayerPlaybackSettings::get_NextState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::get_NextState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlayerPlaybackState*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.set_NextState
void VROSC::LoopPlayerPlaybackSettings::set_NextState(::VROSC::LoopPlayerPlaybackState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::set_NextState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NextState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.get_Active
bool VROSC::LoopPlayerPlaybackSettings::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::get_Active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.set_Active
void VROSC::LoopPlayerPlaybackSettings::set_Active(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::set_Active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.get_Playing
bool VROSC::LoopPlayerPlaybackSettings::get_Playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::get_Playing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Playing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.set_Playing
void VROSC::LoopPlayerPlaybackSettings::set_Playing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::set_Playing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Playing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.get_WaitingToStart
bool VROSC::LoopPlayerPlaybackSettings::get_WaitingToStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::get_WaitingToStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WaitingToStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.get_FadeMultiplier
float VROSC::LoopPlayerPlaybackSettings::get_FadeMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::get_FadeMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FadeMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.set_FadeMultiplier
void VROSC::LoopPlayerPlaybackSettings::set_FadeMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::set_FadeMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FadeMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.get_PlayFromStartOffset
int VROSC::LoopPlayerPlaybackSettings::get_PlayFromStartOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::get_PlayFromStartOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayFromStartOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.set_PlayFromStartOffset
void VROSC::LoopPlayerPlaybackSettings::set_PlayFromStartOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::set_PlayFromStartOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlayFromStartOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.get_StartOffsetBarRelative
int VROSC::LoopPlayerPlaybackSettings::get_StartOffsetBarRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::get_StartOffsetBarRelative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartOffsetBarRelative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.set_StartOffsetBarRelative
void VROSC::LoopPlayerPlaybackSettings::set_StartOffsetBarRelative(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::set_StartOffsetBarRelative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartOffsetBarRelative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.Setup
void VROSC::LoopPlayerPlaybackSettings::Setup(::VROSC::Loop* loop, ::VROSC::LoopPlaybackConfig* config) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loop), ::il2cpp_utils::ExtractType(config)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loop, config);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.SetStart
void VROSC::LoopPlayerPlaybackSettings::SetStart(::VROSC::LoopPlaybackConfig::TriggerSync mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::SetStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mode);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.SetStop
void VROSC::LoopPlayerPlaybackSettings::SetStop(::VROSC::LoopPlaybackConfig::TriggerSync mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::SetStop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mode);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.SetFadeIn
void VROSC::LoopPlayerPlaybackSettings::SetFadeIn(::VROSC::LoopPlaybackConfig::FadeDuration mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::SetFadeIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFadeIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mode);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.SetFadeOut
void VROSC::LoopPlayerPlaybackSettings::SetFadeOut(::VROSC::LoopPlaybackConfig::FadeDuration mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::SetFadeOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFadeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mode);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.SetOneShot
void VROSC::LoopPlayerPlaybackSettings::SetOneShot(bool oneShot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::SetOneShot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOneShot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oneShot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oneShot);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.SetRetrigger
void VROSC::LoopPlayerPlaybackSettings::SetRetrigger(bool retrigger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::SetRetrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRetrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(retrigger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, retrigger);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.StartRequested
void VROSC::LoopPlayerPlaybackSettings::StartRequested(::VROSC::LoopPlaybackConfig* config) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::StartRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(config)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, config);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.ShouldShowPlayIcon
bool VROSC::LoopPlayerPlaybackSettings::ShouldShowPlayIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::ShouldShowPlayIcon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldShowPlayIcon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.UpdatePlayConfig
void VROSC::LoopPlayerPlaybackSettings::UpdatePlayConfig(::VROSC::LoopPlaybackConfigOverride* newConfig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::UpdatePlayConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlayConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newConfig)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newConfig);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.StopRequested
void VROSC::LoopPlayerPlaybackSettings::StopRequested(int atSample, bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::StopRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(atSample), ::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, atSample, instant);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.ProgressState
void VROSC::LoopPlayerPlaybackSettings::ProgressState(int atSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::ProgressState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProgressState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(atSample)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, atSample);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.SetState
void VROSC::LoopPlayerPlaybackSettings::SetState(::VROSC::LoopPlayerPlaybackState* currentState, int atSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentState), ::il2cpp_utils::ExtractType(atSample)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentState, atSample);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.PerformIsPlayingCheck
void VROSC::LoopPlayerPlaybackSettings::PerformIsPlayingCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::PerformIsPlayingCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformIsPlayingCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.ShouldCheckActivityChangeBeforeSample
bool VROSC::LoopPlayerPlaybackSettings::ShouldCheckActivityChangeBeforeSample(int samples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::ShouldCheckActivityChangeBeforeSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldCheckActivityChangeBeforeSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samples)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, samples);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.ShouldUpdateFading
bool VROSC::LoopPlayerPlaybackSettings::ShouldUpdateFading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::ShouldUpdateFading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldUpdateFading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.CheckForStateSwitchThisSample
bool VROSC::LoopPlayerPlaybackSettings::CheckForStateSwitchThisSample(int atSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::CheckForStateSwitchThisSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForStateSwitchThisSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(atSample)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, atSample);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.UpdateFading
void VROSC::LoopPlayerPlaybackSettings::UpdateFading(int atSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::UpdateFading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(atSample)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, atSample);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.GetNextLoopPointFromOffsetStart
int VROSC::LoopPlayerPlaybackSettings::GetNextLoopPointFromOffsetStart(int startSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::GetNextLoopPointFromOffsetStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextLoopPointFromOffsetStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startSample)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startSample);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.RenderPlaybackData
void VROSC::LoopPlayerPlaybackSettings::RenderPlaybackData(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::RenderPlaybackData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderPlaybackData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackSettings.GetLocalLoopSampleIndex
int VROSC::LoopPlayerPlaybackSettings::GetLocalLoopSampleIndex(int channels, int atSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackSettings::GetLocalLoopSampleIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalLoopSampleIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(atSample)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, channels, atSample);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlaybackSettingsToggle
#include "VROSC/LoopPlaybackSettingsToggle.hpp"
// Including type: VROSC.LoopPlaybackSettingsUI
#include "VROSC/LoopPlaybackSettingsUI.hpp"
// Including type: VROSC.UIToggle
#include "VROSC/UIToggle.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlaybackSettingsUI _playbackSettings
[[deprecated]] ::VROSC::LoopPlaybackSettingsUI*& VROSC::LoopPlaybackSettingsToggle::dyn__playbackSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsToggle::dyn__playbackSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackSettings"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackSettingsUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIToggle _playbackSettingsButton
[[deprecated]] ::VROSC::UIToggle*& VROSC::LoopPlaybackSettingsToggle::dyn__playbackSettingsButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsToggle::dyn__playbackSettingsButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackSettingsButton"))->offset;
  return *reinterpret_cast<::VROSC::UIToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsToggle.Awake
void VROSC::LoopPlaybackSettingsToggle::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsToggle::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsToggle.SetTarget
void VROSC::LoopPlaybackSettingsToggle::SetTarget(::VROSC::LoopPlaybackSettingsUI* settingsUI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsToggle::SetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settingsUI)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settingsUI);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsToggle.PlayBackSettingsOpened
void VROSC::LoopPlaybackSettingsToggle::PlayBackSettingsOpened(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsToggle::PlayBackSettingsOpened");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayBackSettingsOpened", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsToggle.OnDestroy
void VROSC::LoopPlaybackSettingsToggle::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsToggle::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsToggle.SetPlaybackSettingsOpen
void VROSC::LoopPlaybackSettingsToggle::SetPlaybackSettingsOpen(::VROSC::InputDevice* inputDevice, bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsToggle::SetPlaybackSettingsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlaybackSettingsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputDevice), ::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputDevice, isOn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlaybackSettingsUI
#include "VROSC/LoopPlaybackSettingsUI.hpp"
// Including type: VROSC.UISlideToggle
#include "VROSC/UISlideToggle.hpp"
// Including type: VROSC.UISpinner
#include "VROSC/UISpinner.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
// Including type: VROSC.LoopPlaybackConfig/VROSC.TriggerSync
#include "VROSC/LoopPlaybackConfig.hpp"
// Including type: VROSC.LoopPlaybackConfig/VROSC.FadeDuration
// Already included the same include: VROSC/LoopPlaybackConfig.hpp
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Boolean> OnActivated
::System::Action_1<bool>* VROSC::LoopPlaybackSettingsUI::_get_OnActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::_get_OnActivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<bool>*>("VROSC", "LoopPlaybackSettingsUI", "OnActivated"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Boolean> OnActivated
void VROSC::LoopPlaybackSettingsUI::_set_OnActivated(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::_set_OnActivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlaybackSettingsUI", "OnActivated", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsOpen>k__BackingField
[[deprecated]] bool& VROSC::LoopPlaybackSettingsUI::dyn_$IsOpen$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::dyn_$IsOpen$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsOpen>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VROSC.UISlideToggle _oneShotToggle
[[deprecated]] ::VROSC::UISlideToggle*& VROSC::LoopPlaybackSettingsUI::dyn__oneShotToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::dyn__oneShotToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oneShotToggle"))->offset;
  return *reinterpret_cast<::VROSC::UISlideToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VROSC.UISlideToggle _retriggerToggle
[[deprecated]] ::VROSC::UISlideToggle*& VROSC::LoopPlaybackSettingsUI::dyn__retriggerToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::dyn__retriggerToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_retriggerToggle"))->offset;
  return *reinterpret_cast<::VROSC::UISlideToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VROSC.UISpinner _startSpinner
[[deprecated]] ::VROSC::UISpinner*& VROSC::LoopPlaybackSettingsUI::dyn__startSpinner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::dyn__startSpinner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startSpinner"))->offset;
  return *reinterpret_cast<::VROSC::UISpinner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VROSC.UISpinner _stopSpinner
[[deprecated]] ::VROSC::UISpinner*& VROSC::LoopPlaybackSettingsUI::dyn__stopSpinner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::dyn__stopSpinner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stopSpinner"))->offset;
  return *reinterpret_cast<::VROSC::UISpinner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VROSC.UISpinner _fadeInSpinner
[[deprecated]] ::VROSC::UISpinner*& VROSC::LoopPlaybackSettingsUI::dyn__fadeInSpinner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::dyn__fadeInSpinner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInSpinner"))->offset;
  return *reinterpret_cast<::VROSC::UISpinner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VROSC.UISpinner _fadeOutSpinner
[[deprecated]] ::VROSC::UISpinner*& VROSC::LoopPlaybackSettingsUI::dyn__fadeOutSpinner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::dyn__fadeOutSpinner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOutSpinner"))->offset;
  return *reinterpret_cast<::VROSC::UISpinner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _closeWhenOtherWindowOpens
[[deprecated]] bool& VROSC::LoopPlaybackSettingsUI::dyn__closeWhenOtherWindowOpens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::dyn__closeWhenOtherWindowOpens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closeWhenOtherWindowOpens"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> OnActivatedSelf
[[deprecated]] ::System::Action_1<bool>*& VROSC::LoopPlaybackSettingsUI::dyn_OnActivatedSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::dyn_OnActivatedSelf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnActivatedSelf"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlaybackConfig _config
[[deprecated]] ::VROSC::LoopPlaybackConfig*& VROSC::LoopPlaybackSettingsUI::dyn__config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::dyn__config");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_config"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _setupDone
[[deprecated]] bool& VROSC::LoopPlaybackSettingsUI::dyn__setupDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::dyn__setupDone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setupDone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.get_IsOpen
bool VROSC::LoopPlaybackSettingsUI::get_IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::get_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.set_IsOpen
void VROSC::LoopPlaybackSettingsUI::set_IsOpen(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::set_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.Awake
void VROSC::LoopPlaybackSettingsUI::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlaybackSettingsUI*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.SetUIData
void VROSC::LoopPlaybackSettingsUI::SetUIData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::SetUIData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUIData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.SetConfig
void VROSC::LoopPlaybackSettingsUI::SetConfig(::VROSC::LoopPlaybackConfig* config) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::SetConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(config)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, config);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.OnStartChanged
void VROSC::LoopPlaybackSettingsUI::OnStartChanged(::VROSC::LoopPlaybackConfig::TriggerSync startMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::OnStartChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStartChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startMode);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.OnStopChanged
void VROSC::LoopPlaybackSettingsUI::OnStopChanged(::VROSC::LoopPlaybackConfig::TriggerSync stopMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::OnStopChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStopChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stopMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stopMode);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.OnOneShotChanged
void VROSC::LoopPlaybackSettingsUI::OnOneShotChanged(bool oneShot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::OnOneShotChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnOneShotChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oneShot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oneShot);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.OnRetriggerChanged
void VROSC::LoopPlaybackSettingsUI::OnRetriggerChanged(bool retrigger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::OnRetriggerChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRetriggerChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(retrigger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, retrigger);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.OnFadeInChanged
void VROSC::LoopPlaybackSettingsUI::OnFadeInChanged(::VROSC::LoopPlaybackConfig::FadeDuration fadeIn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::OnFadeInChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFadeInChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeIn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeIn);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.OnFadeOutChanged
void VROSC::LoopPlaybackSettingsUI::OnFadeOutChanged(::VROSC::LoopPlaybackConfig::FadeDuration fadeOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::OnFadeOutChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFadeOutChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeOut)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeOut);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.OnDestroy
void VROSC::LoopPlaybackSettingsUI::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlaybackSettingsUI*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.CloseIfOtherOpen
void VROSC::LoopPlaybackSettingsUI::CloseIfOtherOpen(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::CloseIfOtherOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseIfOtherOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.SetOpen
void VROSC::LoopPlaybackSettingsUI::SetOpen(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::SetOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.SetOneShot
void VROSC::LoopPlaybackSettingsUI::SetOneShot(::VROSC::InputDevice* inputDevice, bool oneShot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::SetOneShot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOneShot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputDevice), ::il2cpp_utils::ExtractType(oneShot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputDevice, oneShot);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.SetRetrigger
void VROSC::LoopPlaybackSettingsUI::SetRetrigger(::VROSC::InputDevice* inputDevice, bool retrigger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::SetRetrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRetrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputDevice), ::il2cpp_utils::ExtractType(retrigger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputDevice, retrigger);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.SetStart
void VROSC::LoopPlaybackSettingsUI::SetStart(int selection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::SetStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selection);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.SetStop
void VROSC::LoopPlaybackSettingsUI::SetStop(int selection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::SetStop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selection);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.SetFadeIn
void VROSC::LoopPlaybackSettingsUI::SetFadeIn(int selection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::SetFadeIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFadeIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selection);
}
// Autogenerated method: VROSC.LoopPlaybackSettingsUI.SetFadeOut
void VROSC::LoopPlaybackSettingsUI::SetFadeOut(int selection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::SetFadeOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFadeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selection);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.OverridePlaybackSettingsUI
#include "VROSC/OverridePlaybackSettingsUI.hpp"
// Including type: VROSC.UIToggle
#include "VROSC/UIToggle.hpp"
// Including type: VROSC.LoopPlaybackConfigOverride
#include "VROSC/LoopPlaybackConfigOverride.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.UIToggle _overrideOneShot
[[deprecated]] ::VROSC::UIToggle*& VROSC::OverridePlaybackSettingsUI::dyn__overrideOneShot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::dyn__overrideOneShot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideOneShot"))->offset;
  return *reinterpret_cast<::VROSC::UIToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIToggle _overrideRetrigger
[[deprecated]] ::VROSC::UIToggle*& VROSC::OverridePlaybackSettingsUI::dyn__overrideRetrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::dyn__overrideRetrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideRetrigger"))->offset;
  return *reinterpret_cast<::VROSC::UIToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIToggle _overrideStart
[[deprecated]] ::VROSC::UIToggle*& VROSC::OverridePlaybackSettingsUI::dyn__overrideStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::dyn__overrideStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideStart"))->offset;
  return *reinterpret_cast<::VROSC::UIToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIToggle _overrideStop
[[deprecated]] ::VROSC::UIToggle*& VROSC::OverridePlaybackSettingsUI::dyn__overrideStop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::dyn__overrideStop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideStop"))->offset;
  return *reinterpret_cast<::VROSC::UIToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIToggle _overrideFadeIn
[[deprecated]] ::VROSC::UIToggle*& VROSC::OverridePlaybackSettingsUI::dyn__overrideFadeIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::dyn__overrideFadeIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideFadeIn"))->offset;
  return *reinterpret_cast<::VROSC::UIToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIToggle _overrideFadeOut
[[deprecated]] ::VROSC::UIToggle*& VROSC::OverridePlaybackSettingsUI::dyn__overrideFadeOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::dyn__overrideFadeOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideFadeOut"))->offset;
  return *reinterpret_cast<::VROSC::UIToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlaybackConfigOverride _overrideConfig
[[deprecated]] ::VROSC::LoopPlaybackConfigOverride*& VROSC::OverridePlaybackSettingsUI::dyn__overrideConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::dyn__overrideConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideConfig"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackConfigOverride**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.OverridePlaybackSettingsUI.SetOverrideConfig
void VROSC::OverridePlaybackSettingsUI::SetOverrideConfig(::VROSC::LoopPlaybackConfigOverride* config) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::SetOverrideConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverrideConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(config)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, config);
}
// Autogenerated method: VROSC.OverridePlaybackSettingsUI.OnStartOverriddenChanged
void VROSC::OverridePlaybackSettingsUI::OnStartOverriddenChanged(bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::OnStartOverriddenChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStartOverriddenChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, active);
}
// Autogenerated method: VROSC.OverridePlaybackSettingsUI.OnStopOverriddenChanged
void VROSC::OverridePlaybackSettingsUI::OnStopOverriddenChanged(bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::OnStopOverriddenChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStopOverriddenChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, active);
}
// Autogenerated method: VROSC.OverridePlaybackSettingsUI.OnOneShotOverriddenChanged
void VROSC::OverridePlaybackSettingsUI::OnOneShotOverriddenChanged(bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::OnOneShotOverriddenChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnOneShotOverriddenChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, active);
}
// Autogenerated method: VROSC.OverridePlaybackSettingsUI.OnRetriggerOverriddenChanged
void VROSC::OverridePlaybackSettingsUI::OnRetriggerOverriddenChanged(bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::OnRetriggerOverriddenChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRetriggerOverriddenChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, active);
}
// Autogenerated method: VROSC.OverridePlaybackSettingsUI.OnFadeInOverriddenChanged
void VROSC::OverridePlaybackSettingsUI::OnFadeInOverriddenChanged(bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::OnFadeInOverriddenChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFadeInOverriddenChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, active);
}
// Autogenerated method: VROSC.OverridePlaybackSettingsUI.OnFadeOutOverriddenChanged
void VROSC::OverridePlaybackSettingsUI::OnFadeOutOverriddenChanged(bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::OnFadeOutOverriddenChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFadeOutOverriddenChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, active);
}
// Autogenerated method: VROSC.OverridePlaybackSettingsUI.SetOneShotOverridden
void VROSC::OverridePlaybackSettingsUI::SetOneShotOverridden(::VROSC::InputDevice* device, bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::SetOneShotOverridden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOneShotOverridden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device, active);
}
// Autogenerated method: VROSC.OverridePlaybackSettingsUI.SetRetriggerOverridden
void VROSC::OverridePlaybackSettingsUI::SetRetriggerOverridden(::VROSC::InputDevice* device, bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::SetRetriggerOverridden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRetriggerOverridden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device, active);
}
// Autogenerated method: VROSC.OverridePlaybackSettingsUI.SetStartOverridden
void VROSC::OverridePlaybackSettingsUI::SetStartOverridden(::VROSC::InputDevice* device, bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::SetStartOverridden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStartOverridden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device, active);
}
// Autogenerated method: VROSC.OverridePlaybackSettingsUI.SetStopOverridden
void VROSC::OverridePlaybackSettingsUI::SetStopOverridden(::VROSC::InputDevice* device, bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::SetStopOverridden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStopOverridden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device, active);
}
// Autogenerated method: VROSC.OverridePlaybackSettingsUI.SetFadeInOverridden
void VROSC::OverridePlaybackSettingsUI::SetFadeInOverridden(::VROSC::InputDevice* device, bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::SetFadeInOverridden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFadeInOverridden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device, active);
}
// Autogenerated method: VROSC.OverridePlaybackSettingsUI.SetFadeOutOverridden
void VROSC::OverridePlaybackSettingsUI::SetFadeOutOverridden(::VROSC::InputDevice* device, bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::SetFadeOutOverridden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFadeOutOverridden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device, active);
}
// Autogenerated method: VROSC.OverridePlaybackSettingsUI.Awake
void VROSC::OverridePlaybackSettingsUI::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlaybackSettingsUI*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.OverridePlaybackSettingsUI.OnDestroy
void VROSC::OverridePlaybackSettingsUI::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OverridePlaybackSettingsUI::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlaybackSettingsUI*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.Loop
#include "VROSC/Loop.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single[] LoopAudio
[[deprecated]] ::ArrayW<float>& VROSC::Loop::dyn_LoopAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Loop::dyn_LoopAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoopAudio"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] LoopTailAudio
[[deprecated]] ::ArrayW<float>& VROSC::Loop::dyn_LoopTailAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Loop::dyn_LoopTailAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoopTailAudio"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 LoopLength
[[deprecated]] int& VROSC::Loop::dyn_LoopLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Loop::dyn_LoopLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoopLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <GlobalSyncStartOffset>k__BackingField
[[deprecated]] int& VROSC::Loop::dyn_$GlobalSyncStartOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Loop::dyn_$GlobalSyncStartOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GlobalSyncStartOffset>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.Loop.get_TailLength
int VROSC::Loop::get_TailLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Loop::get_TailLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TailLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Loop.get_LoopLengthInSamples
int VROSC::Loop::get_LoopLengthInSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Loop::get_LoopLengthInSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoopLengthInSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Loop.get_GlobalSyncStartOffset
int VROSC::Loop::get_GlobalSyncStartOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Loop::get_GlobalSyncStartOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlobalSyncStartOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Loop.set_GlobalSyncStartOffset
void VROSC::Loop::set_GlobalSyncStartOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Loop::set_GlobalSyncStartOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GlobalSyncStartOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.Loop.get_BeatLengthMultiplier
float VROSC::Loop::get_BeatLengthMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Loop::get_BeatLengthMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BeatLengthMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Loop.GetAudio
float VROSC::Loop::GetAudio(int index, bool addTail) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Loop::GetAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(addTail)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index, addTail);
}
// Autogenerated method: VROSC.Loop.GetNextLoopStartAfterSample
int VROSC::Loop::GetNextLoopStartAfterSample(int sample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Loop::GetNextLoopStartAfterSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextLoopStartAfterSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sample)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, sample);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlayer
#include "VROSC/LoopPlayer.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: VROSC.LoopPlayerUI
#include "VROSC/LoopPlayerUI.hpp"
// Including type: VROSC.InteractionDisabler
#include "VROSC/InteractionDisabler.hpp"
// Including type: VROSC.LoopPlayerPlaybackController
#include "VROSC/LoopPlayerPlaybackController.hpp"
// Including type: VROSC.LoopPlayerMover
#include "VROSC/LoopPlayerMover.hpp"
// Including type: VROSC.LoopPlayerAutoMover
#include "VROSC/LoopPlayerAutoMover.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: VROSC.LoopStationGroup
#include "VROSC/LoopStationGroup.hpp"
// Including type: VROSC.LoopPlaybackConfigOverride
#include "VROSC/LoopPlaybackConfigOverride.hpp"
// Including type: VROSC.LoopPlaybackConfig
#include "VROSC/LoopPlaybackConfig.hpp"
// Including type: VROSC.PlaybackProgressUIData
#include "VROSC/PlaybackProgressUIData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStation _loopStation
[[deprecated]] ::VROSC::LoopStation*& VROSC::LoopPlayer::dyn__loopStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::dyn__loopStation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopStation"))->offset;
  return *reinterpret_cast<::VROSC::LoopStation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayerUI _ui
[[deprecated]] ::VROSC::LoopPlayerUI*& VROSC::LoopPlayer::dyn__ui() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::dyn__ui");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ui"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayerUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.InteractionDisabler _disabler
[[deprecated]] ::VROSC::InteractionDisabler*& VROSC::LoopPlayer::dyn__disabler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::dyn__disabler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabler"))->offset;
  return *reinterpret_cast<::VROSC::InteractionDisabler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayerPlaybackController _playBack
[[deprecated]] ::VROSC::LoopPlayerPlaybackController*& VROSC::LoopPlayer::dyn__playBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::dyn__playBack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playBack"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayerPlaybackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayerMover _mover
[[deprecated]] ::VROSC::LoopPlayerMover*& VROSC::LoopPlayer::dyn__mover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::dyn__mover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mover"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayerMover**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayerAutoMover _autoMover
[[deprecated]] ::VROSC::LoopPlayerAutoMover*& VROSC::LoopPlayer::dyn__autoMover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::dyn__autoMover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_autoMover"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayerAutoMover**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <TrackId>k__BackingField
[[deprecated]] ::StringW& VROSC::LoopPlayer::dyn_$TrackId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::dyn_$TrackId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TrackId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<VROSC.LoopPlayer,System.Boolean> OnDelete
[[deprecated]] ::System::Action_2<::VROSC::LoopPlayer*, bool>*& VROSC::LoopPlayer::dyn_OnDelete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::dyn_OnDelete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnDelete"))->offset;
  return *reinterpret_cast<::System::Action_2<::VROSC::LoopPlayer*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<VROSC.LoopPlayer,System.Boolean> OnSoloChanged
[[deprecated]] ::System::Action_2<::VROSC::LoopPlayer*, bool>*& VROSC::LoopPlayer::dyn_OnSoloChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::dyn_OnSoloChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnSoloChanged"))->offset;
  return *reinterpret_cast<::System::Action_2<::VROSC::LoopPlayer*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<VROSC.LoopPlayer,System.Boolean> OnGrabbed
[[deprecated]] ::System::Action_2<::VROSC::LoopPlayer*, bool>*& VROSC::LoopPlayer::dyn_OnGrabbed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::dyn_OnGrabbed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnGrabbed"))->offset;
  return *reinterpret_cast<::System::Action_2<::VROSC::LoopPlayer*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsShownAsComplete>k__BackingField
[[deprecated]] bool& VROSC::LoopPlayer::dyn_$IsShownAsComplete$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::dyn_$IsShownAsComplete$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsShownAsComplete>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsBeingRecorded>k__BackingField
[[deprecated]] bool& VROSC::LoopPlayer::dyn_$IsBeingRecorded$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::dyn_$IsBeingRecorded$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsBeingRecorded>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationGroup <BelongsToGroup>k__BackingField
[[deprecated]] ::VROSC::LoopStationGroup*& VROSC::LoopPlayer::dyn_$BelongsToGroup$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::dyn_$BelongsToGroup$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BelongsToGroup>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <PositionInGroup>k__BackingField
[[deprecated]] int& VROSC::LoopPlayer::dyn_$PositionInGroup$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::dyn_$PositionInGroup$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PositionInGroup>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <InstrumentName>k__BackingField
[[deprecated]] ::StringW& VROSC::LoopPlayer::dyn_$InstrumentName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::dyn_$InstrumentName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InstrumentName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopPlayer.get_IsSoloActive
bool VROSC::LoopPlayer::get_IsSoloActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::get_IsSoloActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSoloActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayer.get_IsMuteActive
bool VROSC::LoopPlayer::get_IsMuteActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::get_IsMuteActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMuteActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayer.get_IsPlaying
bool VROSC::LoopPlayer::get_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::get_IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayer.get_AutoMover
::VROSC::LoopPlayerAutoMover* VROSC::LoopPlayer::get_AutoMover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::get_AutoMover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutoMover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlayerAutoMover*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayer.get_UI
::VROSC::LoopPlayerUI* VROSC::LoopPlayer::get_UI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::get_UI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlayerUI*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayer.get_TrackId
::StringW VROSC::LoopPlayer::get_TrackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::get_TrackId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrackId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayer.set_TrackId
void VROSC::LoopPlayer::set_TrackId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::set_TrackId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TrackId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayer.get_Playback
::VROSC::LoopPlayerPlaybackController* VROSC::LoopPlayer::get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::get_Playback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Playback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlayerPlaybackController*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayer.get_IsShownAsComplete
bool VROSC::LoopPlayer::get_IsShownAsComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::get_IsShownAsComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsShownAsComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayer.set_IsShownAsComplete
void VROSC::LoopPlayer::set_IsShownAsComplete(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::set_IsShownAsComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsShownAsComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayer.get_IsBeingRecorded
bool VROSC::LoopPlayer::get_IsBeingRecorded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::get_IsBeingRecorded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsBeingRecorded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayer.set_IsBeingRecorded
void VROSC::LoopPlayer::set_IsBeingRecorded(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::set_IsBeingRecorded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsBeingRecorded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayer.get_BelongsToGroup
::VROSC::LoopStationGroup* VROSC::LoopPlayer::get_BelongsToGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::get_BelongsToGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BelongsToGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationGroup*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayer.set_BelongsToGroup
void VROSC::LoopPlayer::set_BelongsToGroup(::VROSC::LoopStationGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::set_BelongsToGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BelongsToGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayer.get_PositionInGroup
int VROSC::LoopPlayer::get_PositionInGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::get_PositionInGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PositionInGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayer.set_PositionInGroup
void VROSC::LoopPlayer::set_PositionInGroup(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::set_PositionInGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PositionInGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayer.get_LoopLength
int VROSC::LoopPlayer::get_LoopLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::get_LoopLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoopLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayer.get_InstrumentName
::StringW VROSC::LoopPlayer::get_InstrumentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::get_InstrumentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstrumentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayer.set_InstrumentName
void VROSC::LoopPlayer::set_InstrumentName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::set_InstrumentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InstrumentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayer.get_IsGrabbed
bool VROSC::LoopPlayer::get_IsGrabbed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::get_IsGrabbed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGrabbed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayer.Awake
void VROSC::LoopPlayer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayer.OnDestroy
void VROSC::LoopPlayer::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayer.SetGroup
void VROSC::LoopPlayer::SetGroup(::VROSC::LoopStationGroup* loopStationGroup, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::SetGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopStationGroup), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStationGroup, position);
}
// Autogenerated method: VROSC.LoopPlayer.SetGroupPosition
void VROSC::LoopPlayer::SetGroupPosition(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::SetGroupPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGroupPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: VROSC.LoopPlayer.Setup
void VROSC::LoopPlayer::Setup(::VROSC::LoopStation* loopStation, ::StringW trackId, bool createdByRecorder, bool overdub) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopStation), ::il2cpp_utils::ExtractType(trackId), ::il2cpp_utils::ExtractType(createdByRecorder), ::il2cpp_utils::ExtractType(overdub)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStation, trackId, createdByRecorder, overdub);
}
// Autogenerated method: VROSC.LoopPlayer.SetRecordingCompleted
void VROSC::LoopPlayer::SetRecordingCompleted(bool colorize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::SetRecordingCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRecordingCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colorize);
}
// Autogenerated method: VROSC.LoopPlayer.SetRecordingText
void VROSC::LoopPlayer::SetRecordingText(::StringW recordingtext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::SetRecordingText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRecordingText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingtext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordingtext);
}
// Autogenerated method: VROSC.LoopPlayer.TogglePlay
void VROSC::LoopPlayer::TogglePlay(bool play) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::TogglePlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TogglePlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(play)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, play);
}
// Autogenerated method: VROSC.LoopPlayer.ToggleMute
void VROSC::LoopPlayer::ToggleMute(bool mute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::ToggleMute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleMute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mute);
}
// Autogenerated method: VROSC.LoopPlayer.ToggleSolo
void VROSC::LoopPlayer::ToggleSolo(bool soloOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::ToggleSolo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleSolo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soloOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, soloOn);
}
// Autogenerated method: VROSC.LoopPlayer.DeleteFromButton
void VROSC::LoopPlayer::DeleteFromButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::DeleteFromButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteFromButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayer.UpdatePlayConfig
void VROSC::LoopPlayer::UpdatePlayConfig(::VROSC::LoopPlaybackConfigOverride* playbackConfig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::UpdatePlayConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlayConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackConfig)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playbackConfig);
}
// Autogenerated method: VROSC.LoopPlayer.Play
void VROSC::LoopPlayer::Play(::VROSC::LoopPlaybackConfig* config) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(config)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, config);
}
// Autogenerated method: VROSC.LoopPlayer.Stop
void VROSC::LoopPlayer::Stop(bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instant);
}
// Autogenerated method: VROSC.LoopPlayer.UpdateAudioSourceVolume
void VROSC::LoopPlayer::UpdateAudioSourceVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::UpdateAudioSourceVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAudioSourceVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayer.SetInteractableDuringAnimation
void VROSC::LoopPlayer::SetInteractableDuringAnimation(bool interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::SetInteractableDuringAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInteractableDuringAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: VROSC.LoopPlayer.SetVolume
void VROSC::LoopPlayer::SetVolume(float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::SetVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume);
}
// Autogenerated method: VROSC.LoopPlayer.OnVolumeSliderChanged
void VROSC::LoopPlayer::OnVolumeSliderChanged(float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::OnVolumeSliderChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnVolumeSliderChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume);
}
// Autogenerated method: VROSC.LoopPlayer.SetIsMutedByLoad
void VROSC::LoopPlayer::SetIsMutedByLoad(bool isMuted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::SetIsMutedByLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsMutedByLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isMuted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isMuted);
}
// Autogenerated method: VROSC.LoopPlayer.SetMutedBySolo
void VROSC::LoopPlayer::SetMutedBySolo(bool isMutedBySolo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::SetMutedBySolo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMutedBySolo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isMutedBySolo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isMutedBySolo);
}
// Autogenerated method: VROSC.LoopPlayer.GetPlaybackProgress
::VROSC::PlaybackProgressUIData VROSC::LoopPlayer::GetPlaybackProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::GetPlaybackProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlaybackProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::PlaybackProgressUIData, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayer.SetDisplayName
void VROSC::LoopPlayer::SetDisplayName(::StringW displayName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayer::SetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(displayName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, displayName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlayerColorizer
#include "VROSC/LoopPlayerColorizer.hpp"
// Including type: VROSC.UI.UIColorGetter
#include "VROSC/UI/UIColorGetter.hpp"
// Including type: VROSC.AdjustableMesh
#include "VROSC/AdjustableMesh.hpp"
// Including type: VROSC.UIColorPicker
#include "VROSC/UIColorPicker.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.UI.UIColorGetter _baseColor
[[deprecated]] ::VROSC::UI::UIColorGetter*& VROSC::LoopPlayerColorizer::dyn__baseColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::dyn__baseColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseColor"))->offset;
  return *reinterpret_cast<::VROSC::UI::UIColorGetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UI.UIColorGetter _mutedColor
[[deprecated]] ::VROSC::UI::UIColorGetter*& VROSC::LoopPlayerColorizer::dyn__mutedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::dyn__mutedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mutedColor"))->offset;
  return *reinterpret_cast<::VROSC::UI::UIColorGetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UI.UIColorGetter[] _loopPlayerColors
[[deprecated]] ::ArrayW<::VROSC::UI::UIColorGetter*>& VROSC::LoopPlayerColorizer::dyn__loopPlayerColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::dyn__loopPlayerColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopPlayerColors"))->offset;
  return *reinterpret_cast<::ArrayW<::VROSC::UI::UIColorGetter*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.AdjustableMesh[] _adjustableMeshes
[[deprecated]] ::ArrayW<::VROSC::AdjustableMesh*>& VROSC::LoopPlayerColorizer::dyn__adjustableMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::dyn__adjustableMeshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_adjustableMeshes"))->offset;
  return *reinterpret_cast<::ArrayW<::VROSC::AdjustableMesh*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIColorPicker _colorPicker
[[deprecated]] ::VROSC::UIColorPicker*& VROSC::LoopPlayerColorizer::dyn__colorPicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::dyn__colorPicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorPicker"))->offset;
  return *reinterpret_cast<::VROSC::UIColorPicker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <CurrentColor>k__BackingField
[[deprecated]] ::UnityEngine::Color& VROSC::LoopPlayerColorizer::dyn_$CurrentColor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::dyn_$CurrentColor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentColor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<UnityEngine.Color> OnColorChanged
[[deprecated]] ::System::Action_1<::UnityEngine::Color>*& VROSC::LoopPlayerColorizer::dyn_OnColorChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::dyn_OnColorChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnColorChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _muteColor
[[deprecated]] ::UnityEngine::Color& VROSC::LoopPlayerColorizer::dyn__muteColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::dyn__muteColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_muteColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isMuted
[[deprecated]] bool& VROSC::LoopPlayerColorizer::dyn__isMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::dyn__isMuted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isMuted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopPlayerColorizer.get_UIColorPicker
::VROSC::UIColorPicker* VROSC::LoopPlayerColorizer::get_UIColorPicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::get_UIColorPicker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UIColorPicker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::UIColorPicker*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerColorizer.get_CurrentColor
::UnityEngine::Color VROSC::LoopPlayerColorizer::get_CurrentColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::get_CurrentColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerColorizer.set_CurrentColor
void VROSC::LoopPlayerColorizer::set_CurrentColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::set_CurrentColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerColorizer.Awake
void VROSC::LoopPlayerColorizer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerColorizer.OnDestroy
void VROSC::LoopPlayerColorizer::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerColorizer.Reset
void VROSC::LoopPlayerColorizer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerColorizer.Recolor
void VROSC::LoopPlayerColorizer::Recolor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::Recolor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Recolor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerColorizer.SetColor
void VROSC::LoopPlayerColorizer::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: VROSC.LoopPlayerColorizer.UpdateDrawnColor
void VROSC::LoopPlayerColorizer::UpdateDrawnColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::UpdateDrawnColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDrawnColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerColorizer.ColorPicked
void VROSC::LoopPlayerColorizer::ColorPicked(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::ColorPicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorPicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: VROSC.LoopPlayerColorizer.SetMuted
void VROSC::LoopPlayerColorizer::SetMuted(bool isMuted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerColorizer::SetMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isMuted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isMuted);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlayerMover
#include "VROSC/LoopPlayerMover.hpp"
// Including type: VROSC.MoveOnPlane
#include "VROSC/MoveOnPlane.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: VROSC.LoopPlayer
#include "VROSC/LoopPlayer.hpp"
// Including type: VROSC.LoopStationGroup
#include "VROSC/LoopStationGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsGrabbed>k__BackingField
[[deprecated]] bool& VROSC::LoopPlayerMover::dyn_$IsGrabbed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerMover::dyn_$IsGrabbed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsGrabbed>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.MoveOnPlane _mover
[[deprecated]] ::VROSC::MoveOnPlane*& VROSC::LoopPlayerMover::dyn__mover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerMover::dyn__mover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mover"))->offset;
  return *reinterpret_cast<::VROSC::MoveOnPlane**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider _checkvolume
[[deprecated]] ::UnityEngine::Collider*& VROSC::LoopPlayerMover::dyn__checkvolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerMover::dyn__checkvolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_checkvolume"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStation _loopStation
[[deprecated]] ::VROSC::LoopStation*& VROSC::LoopPlayerMover::dyn__loopStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerMover::dyn__loopStation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopStation"))->offset;
  return *reinterpret_cast<::VROSC::LoopStation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayer _loopPlayer
[[deprecated]] ::VROSC::LoopPlayer*& VROSC::LoopPlayerMover::dyn__loopPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerMover::dyn__loopPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopPlayer"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationGroup _belongsToGroup
[[deprecated]] ::VROSC::LoopStationGroup*& VROSC::LoopPlayerMover::dyn__belongsToGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerMover::dyn__belongsToGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_belongsToGroup"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationGroup _hoveredGroup
[[deprecated]] ::VROSC::LoopStationGroup*& VROSC::LoopPlayerMover::dyn__hoveredGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerMover::dyn__hoveredGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoveredGroup"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _onlyAllowDropOnOwnGroupOrUserGroups
[[deprecated]] bool& VROSC::LoopPlayerMover::dyn__onlyAllowDropOnOwnGroupOrUserGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerMover::dyn__onlyAllowDropOnOwnGroupOrUserGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onlyAllowDropOnOwnGroupOrUserGroups"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopPlayerMover.get_IsGrabbed
bool VROSC::LoopPlayerMover::get_IsGrabbed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerMover::get_IsGrabbed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGrabbed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerMover.set_IsGrabbed
void VROSC::LoopPlayerMover::set_IsGrabbed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerMover::set_IsGrabbed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsGrabbed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerMover.Setup
void VROSC::LoopPlayerMover::Setup(::VROSC::LoopPlayer* loopPlayer, ::VROSC::LoopStation* loopStation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerMover::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopPlayer), ::il2cpp_utils::ExtractType(loopStation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopPlayer, loopStation);
}
// Autogenerated method: VROSC.LoopPlayerMover.SetGroup
void VROSC::LoopPlayerMover::SetGroup(::VROSC::LoopStationGroup* loopStationGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerMover::SetGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopStationGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStationGroup);
}
// Autogenerated method: VROSC.LoopPlayerMover.GrabBegin
void VROSC::LoopPlayerMover::GrabBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerMover::GrabBegin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerMover.Update
void VROSC::LoopPlayerMover::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerMover::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerMover.GetHoveredGroup
::VROSC::LoopStationGroup* VROSC::LoopPlayerMover::GetHoveredGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerMover::GetHoveredGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHoveredGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationGroup*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerMover.IsGroupValid
bool VROSC::LoopPlayerMover::IsGroupValid(::VROSC::LoopStationGroup* closestGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerMover::IsGroupValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsGroupValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(closestGroup)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, closestGroup);
}
// Autogenerated method: VROSC.LoopPlayerMover.GrabEnd
void VROSC::LoopPlayerMover::GrabEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerMover::GrabEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlayerPlaybackController
#include "VROSC/LoopPlayerPlaybackController.hpp"
// Including type: VROSC.LoopPlayerPlaybackSettings
#include "VROSC/LoopPlayerPlaybackSettings.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: VROSC.LoopPlaybackSettingsUI
#include "VROSC/LoopPlaybackSettingsUI.hpp"
// Including type: VROSC.Loop
#include "VROSC/Loop.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: VROSC.LoopPlayer
#include "VROSC/LoopPlayer.hpp"
// Including type: VROSC.LoopPlaybackConfig
#include "VROSC/LoopPlaybackConfig.hpp"
// Including type: VROSC.LoopPlaybackConfigOverride
#include "VROSC/LoopPlaybackConfigOverride.hpp"
// Including type: VROSC.LoopStationGroup
#include "VROSC/LoopStationGroup.hpp"
// Including type: VROSC.PlaybackProgressUIData
#include "VROSC/PlaybackProgressUIData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayerPlaybackSettings <PlaybackSettings>k__BackingField
[[deprecated]] ::VROSC::LoopPlayerPlaybackSettings*& VROSC::LoopPlayerPlaybackController::dyn_$PlaybackSettings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::dyn_$PlaybackSettings$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlaybackSettings>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayerPlaybackSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _recordingSource
[[deprecated]] ::UnityEngine::AudioSource*& VROSC::LoopPlayerPlaybackController::dyn__recordingSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::dyn__recordingSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro _tmp
[[deprecated]] ::TMPro::TextMeshPro*& VROSC::LoopPlayerPlaybackController::dyn__tmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::dyn__tmp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tmp"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlaybackSettingsUI _loopPlaybackSettingsUI
[[deprecated]] ::VROSC::LoopPlaybackSettingsUI*& VROSC::LoopPlayerPlaybackController::dyn__loopPlaybackSettingsUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::dyn__loopPlaybackSettingsUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopPlaybackSettingsUI"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackSettingsUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.Loop _loop
[[deprecated]] ::VROSC::Loop*& VROSC::LoopPlayerPlaybackController::dyn__loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::dyn__loop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loop"))->offset;
  return *reinterpret_cast<::VROSC::Loop**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStation _loopStation
[[deprecated]] ::VROSC::LoopStation*& VROSC::LoopPlayerPlaybackController::dyn__loopStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::dyn__loopStation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopStation"))->offset;
  return *reinterpret_cast<::VROSC::LoopStation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayer _loopPlayer
[[deprecated]] ::VROSC::LoopPlayer*& VROSC::LoopPlayerPlaybackController::dyn__loopPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::dyn__loopPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopPlayer"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlaybackConfig _playbackConfig
[[deprecated]] ::VROSC::LoopPlaybackConfig*& VROSC::LoopPlayerPlaybackController::dyn__playbackConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::dyn__playbackConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackConfig"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isMutedBySolo
[[deprecated]] bool& VROSC::LoopPlayerPlaybackController::dyn__isMutedBySolo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::dyn__isMutedBySolo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isMutedBySolo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _groupVolumeMultiplier
[[deprecated]] float& VROSC::LoopPlayerPlaybackController::dyn__groupVolumeMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::dyn__groupVolumeMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groupVolumeMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastCommandInputSample
[[deprecated]] int& VROSC::LoopPlayerPlaybackController::dyn__lastCommandInputSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::dyn__lastCommandInputSample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastCommandInputSample"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.get_PlaybackSettings
::VROSC::LoopPlayerPlaybackSettings* VROSC::LoopPlayerPlaybackController::get_PlaybackSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::get_PlaybackSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlaybackSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlayerPlaybackSettings*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.set_PlaybackSettings
void VROSC::LoopPlayerPlaybackController::set_PlaybackSettings(::VROSC::LoopPlayerPlaybackSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::set_PlaybackSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlaybackSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.get_Active
bool VROSC::LoopPlayerPlaybackController::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::get_Active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.OnEnable
void VROSC::LoopPlayerPlaybackController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.OnDisable
void VROSC::LoopPlayerPlaybackController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.Setup
void VROSC::LoopPlayerPlaybackController::Setup(::VROSC::LoopStation* loopStation, ::VROSC::LoopPlayer* loopPlayer, ::VROSC::LoopPlaybackConfig* config, int globalSyncStartOffset, bool overdub) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopStation), ::il2cpp_utils::ExtractType(loopPlayer), ::il2cpp_utils::ExtractType(config), ::il2cpp_utils::ExtractType(globalSyncStartOffset), ::il2cpp_utils::ExtractType(overdub)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStation, loopPlayer, config, globalSyncStartOffset, overdub);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.OnDestroy
void VROSC::LoopPlayerPlaybackController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.UpdateClip
void VROSC::LoopPlayerPlaybackController::UpdateClip(bool overdub) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::UpdateClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overdub)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, overdub);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.TogglePlay
void VROSC::LoopPlayerPlaybackController::TogglePlay(bool play) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::TogglePlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TogglePlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(play)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, play);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.SetSolo
void VROSC::LoopPlayerPlaybackController::SetSolo(bool isMutedBySolo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::SetSolo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSolo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isMutedBySolo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isMutedBySolo);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.Play
void VROSC::LoopPlayerPlaybackController::Play(::VROSC::LoopPlaybackConfig* config) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(config)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, config);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.Stop
void VROSC::LoopPlayerPlaybackController::Stop(bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instant);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.StartPlayback
void VROSC::LoopPlayerPlaybackController::StartPlayback(::VROSC::LoopPlaybackConfig* config) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::StartPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(config)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, config);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.UpdatePlayConfig
void VROSC::LoopPlayerPlaybackController::UpdatePlayConfig(::VROSC::LoopPlaybackConfigOverride* playbackConfig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::UpdatePlayConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlayConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackConfig)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playbackConfig);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.SetVolumeOnSource
void VROSC::LoopPlayerPlaybackController::SetVolumeOnSource(float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::SetVolumeOnSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVolumeOnSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.UpdateAudioSourceVolume
void VROSC::LoopPlayerPlaybackController::UpdateAudioSourceVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::UpdateAudioSourceVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAudioSourceVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.AdjustVolumeToNewGroup
void VROSC::LoopPlayerPlaybackController::AdjustVolumeToNewGroup(::VROSC::LoopStationGroup* loopStationGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::AdjustVolumeToNewGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdjustVolumeToNewGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopStationGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStationGroup);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.GetPlaybackProgress
::VROSC::PlaybackProgressUIData VROSC::LoopPlayerPlaybackController::GetPlaybackProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::GetPlaybackProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlaybackProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::PlaybackProgressUIData, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.ConfigChanged
void VROSC::LoopPlayerPlaybackController::ConfigChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::ConfigChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.Update
void VROSC::LoopPlayerPlaybackController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.SetIsMutedByGroup
void VROSC::LoopPlayerPlaybackController::SetIsMutedByGroup(bool muted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::SetIsMutedByGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsMutedByGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(muted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, muted);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.OnAudioFilterRead
void VROSC::LoopPlayerPlaybackController::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackController.DebugPrintVolume
void VROSC::LoopPlayerPlaybackController::DebugPrintVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackController::DebugPrintVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugPrintVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlayerRecordingState
#include "VROSC/LoopPlayerRecordingState.hpp"
// Including type: VROSC.UI.UIColorGetter
#include "VROSC/UI/UIColorGetter.hpp"
// Including type: VROSC.AdjustableMesh
#include "VROSC/AdjustableMesh.hpp"
// Including type: VROSC.MinMaxFloat
#include "VROSC/MinMaxFloat.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: VROSC.UIButton
#include "VROSC/UIButton.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected VROSC.UI.UIColorGetter _sliderColor
[[deprecated]] ::VROSC::UI::UIColorGetter*& VROSC::LoopPlayerRecordingState::dyn__sliderColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerRecordingState::dyn__sliderColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sliderColor"))->offset;
  return *reinterpret_cast<::VROSC::UI::UIColorGetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VROSC.AdjustableMesh _adjustableMesh
[[deprecated]] ::VROSC::AdjustableMesh*& VROSC::LoopPlayerRecordingState::dyn__adjustableMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerRecordingState::dyn__adjustableMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_adjustableMesh"))->offset;
  return *reinterpret_cast<::VROSC::AdjustableMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VROSC.MinMaxFloat _uvRange
[[deprecated]] ::VROSC::MinMaxFloat*& VROSC::LoopPlayerRecordingState::dyn__uvRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerRecordingState::dyn__uvRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uvRange"))->offset;
  return *reinterpret_cast<::VROSC::MinMaxFloat**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro _recordingLabel
[[deprecated]] ::TMPro::TextMeshPro*& VROSC::LoopPlayerRecordingState::dyn__recordingLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerRecordingState::dyn__recordingLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingLabel"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIButton _cancelButton
[[deprecated]] ::VROSC::UIButton*& VROSC::LoopPlayerRecordingState::dyn__cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerRecordingState::dyn__cancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelButton"))->offset;
  return *reinterpret_cast<::VROSC::UIButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIButton _restartButton
[[deprecated]] ::VROSC::UIButton*& VROSC::LoopPlayerRecordingState::dyn__restartButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerRecordingState::dyn__restartButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_restartButton"))->offset;
  return *reinterpret_cast<::VROSC::UIButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStation _loopStation
[[deprecated]] ::VROSC::LoopStation*& VROSC::LoopPlayerRecordingState::dyn__loopStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerRecordingState::dyn__loopStation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopStation"))->offset;
  return *reinterpret_cast<::VROSC::LoopStation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopPlayerRecordingState.Awake
void VROSC::LoopPlayerRecordingState::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerRecordingState::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerRecordingState*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerRecordingState.RestartRecordingButtonPressed
void VROSC::LoopPlayerRecordingState::RestartRecordingButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerRecordingState::RestartRecordingButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestartRecordingButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerRecordingState.CancelRecordingButtonPressed
void VROSC::LoopPlayerRecordingState::CancelRecordingButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerRecordingState::CancelRecordingButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelRecordingButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerRecordingState.Setup
void VROSC::LoopPlayerRecordingState::Setup(::VROSC::LoopStation* loopStation, bool firstLoop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerRecordingState::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopStation), ::il2cpp_utils::ExtractType(firstLoop)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStation, firstLoop);
}
// Autogenerated method: VROSC.LoopPlayerRecordingState.SetActive
void VROSC::LoopPlayerRecordingState::SetActive(bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerRecordingState::SetActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, active);
}
// Autogenerated method: VROSC.LoopPlayerRecordingState.SetColor
void VROSC::LoopPlayerRecordingState::SetColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerRecordingState::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerRecordingState.SetRecordProgressValue
void VROSC::LoopPlayerRecordingState::SetRecordProgressValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerRecordingState::SetRecordProgressValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRecordProgressValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerRecordingState.Update
void VROSC::LoopPlayerRecordingState::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerRecordingState::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerRecordingState.SetRecordingText
void VROSC::LoopPlayerRecordingState::SetRecordingText(::StringW recordingtext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerRecordingState::SetRecordingText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRecordingText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingtext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordingtext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlayerUI
#include "VROSC/LoopPlayerUI.hpp"
// Including type: VROSC.LoopPlayerUI/VROSC.State
#include "VROSC/LoopPlayerUI_State.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: VROSC.LoopPlayerRecordingState
#include "VROSC/LoopPlayerRecordingState.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: VROSC.Grabable
#include "VROSC/Grabable.hpp"
// Including type: VROSC.LoopPlaybackSettingsUI
#include "VROSC/LoopPlaybackSettingsUI.hpp"
// Including type: VROSC.LoopPlayButton
#include "VROSC/LoopPlayButton.hpp"
// Including type: VROSC.UIHoldButton
#include "VROSC/UIHoldButton.hpp"
// Including type: VROSC.LoopPlayerColorizer
#include "VROSC/LoopPlayerColorizer.hpp"
// Including type: VROSC.LoopVolumeController
#include "VROSC/LoopVolumeController.hpp"
// Including type: VROSC.UIButton
#include "VROSC/UIButton.hpp"
// Including type: VROSC.LoopStationLaunchpadHandler
#include "VROSC/LoopStationLaunchpadHandler.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VROSC.LoopPlayer
#include "VROSC/LoopPlayer.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: VROSC.LoopPlaybackConfig
#include "VROSC/LoopPlaybackConfig.hpp"
// Including type: VROSC.TransformDataController
#include "VROSC/TransformDataController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro _nameLabel
[[deprecated]] ::TMPro::TextMeshPro*& VROSC::LoopPlayerUI::dyn__nameLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::dyn__nameLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameLabel"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayerRecordingState _IsRecordingState
[[deprecated]] ::VROSC::LoopPlayerRecordingState*& VROSC::LoopPlayerUI::dyn__IsRecordingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::dyn__IsRecordingState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_IsRecordingState"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayerRecordingState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _HasRecordingState
[[deprecated]] ::UnityEngine::GameObject*& VROSC::LoopPlayerUI::dyn__HasRecordingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::dyn__HasRecordingState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_HasRecordingState"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.Grabable _hoverCheck
[[deprecated]] ::VROSC::Grabable*& VROSC::LoopPlayerUI::dyn__hoverCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::dyn__hoverCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverCheck"))->offset;
  return *reinterpret_cast<::VROSC::Grabable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _hoveringState
[[deprecated]] ::UnityEngine::GameObject*& VROSC::LoopPlayerUI::dyn__hoveringState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::dyn__hoveringState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoveringState"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlaybackSettingsUI _settingsMenu
[[deprecated]] ::VROSC::LoopPlaybackSettingsUI*& VROSC::LoopPlayerUI::dyn__settingsMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::dyn__settingsMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingsMenu"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackSettingsUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayButton _playButton
[[deprecated]] ::VROSC::LoopPlayButton*& VROSC::LoopPlayerUI::dyn__playButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::dyn__playButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playButton"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIHoldButton _deleteButton
[[deprecated]] ::VROSC::UIHoldButton*& VROSC::LoopPlayerUI::dyn__deleteButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::dyn__deleteButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deleteButton"))->offset;
  return *reinterpret_cast<::VROSC::UIHoldButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayerColorizer _playerColorizer
[[deprecated]] ::VROSC::LoopPlayerColorizer*& VROSC::LoopPlayerUI::dyn__playerColorizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::dyn__playerColorizer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerColorizer"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayerColorizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopVolumeController _volumeController
[[deprecated]] ::VROSC::LoopVolumeController*& VROSC::LoopPlayerUI::dyn__volumeController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::dyn__volumeController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volumeController"))->offset;
  return *reinterpret_cast<::VROSC::LoopVolumeController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIButton _renameButton
[[deprecated]] ::VROSC::UIButton*& VROSC::LoopPlayerUI::dyn__renameButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::dyn__renameButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renameButton"))->offset;
  return *reinterpret_cast<::VROSC::UIButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationLaunchpadHandler _launchpadHandler
[[deprecated]] ::VROSC::LoopStationLaunchpadHandler*& VROSC::LoopPlayerUI::dyn__launchpadHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::dyn__launchpadHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_launchpadHandler"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationLaunchpadHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <DisplayName>k__BackingField
[[deprecated]] ::StringW& VROSC::LoopPlayerUI::dyn_$DisplayName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::dyn_$DisplayName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DisplayName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnDeletePressed
[[deprecated]] ::System::Action*& VROSC::LoopPlayerUI::dyn_OnDeletePressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::dyn_OnDeletePressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnDeletePressed"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> OnRename
[[deprecated]] ::System::Action_1<::StringW>*& VROSC::LoopPlayerUI::dyn_OnRename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::dyn_OnRename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnRename"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<UnityEngine.Color> OnRecolor
[[deprecated]] ::System::Action_1<::UnityEngine::Color>*& VROSC::LoopPlayerUI::dyn_OnRecolor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::dyn_OnRecolor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnRecolor"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayer _loopPlayer
[[deprecated]] ::VROSC::LoopPlayer*& VROSC::LoopPlayerUI::dyn__loopPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::dyn__loopPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopPlayer"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStation _loopStation
[[deprecated]] ::VROSC::LoopStation*& VROSC::LoopPlayerUI::dyn__loopStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::dyn__loopStation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopStation"))->offset;
  return *reinterpret_cast<::VROSC::LoopStation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopPlayerUI.get_MainColor
::UnityEngine::Color VROSC::LoopPlayerUI::get_MainColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::get_MainColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MainColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerUI.get_DisplayName
::StringW VROSC::LoopPlayerUI::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::get_DisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerUI.set_DisplayName
void VROSC::LoopPlayerUI::set_DisplayName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::set_DisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerUI.get_VolumeController
::VROSC::LoopVolumeController* VROSC::LoopPlayerUI::get_VolumeController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::get_VolumeController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VolumeController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopVolumeController*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerUI.get_PlayButton
::VROSC::LoopPlayButton* VROSC::LoopPlayerUI::get_PlayButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::get_PlayButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlayButton*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerUI.Awake
void VROSC::LoopPlayerUI::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerUI.OnDestroy
void VROSC::LoopPlayerUI::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerUI.UpdateHovering
void VROSC::LoopPlayerUI::UpdateHovering(bool hovering) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::UpdateHovering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateHovering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hovering)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hovering);
}
// Autogenerated method: VROSC.LoopPlayerUI.SetState
void VROSC::LoopPlayerUI::SetState(::VROSC::LoopPlayerUI::State state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: VROSC.LoopPlayerUI.Setup
void VROSC::LoopPlayerUI::Setup(::VROSC::LoopStation* loopStation, ::VROSC::LoopPlayer* loopPlayer, bool createdByRecorder, ::StringW displayName, ::VROSC::LoopPlaybackConfig* config) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopStation), ::il2cpp_utils::ExtractType(loopPlayer), ::il2cpp_utils::ExtractType(createdByRecorder), ::il2cpp_utils::ExtractType(displayName), ::il2cpp_utils::ExtractType(config)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStation, loopPlayer, createdByRecorder, displayName, config);
}
// Autogenerated method: VROSC.LoopPlayerUI.SetRecordingComplete
void VROSC::LoopPlayerUI::SetRecordingComplete(bool colorize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::SetRecordingComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRecordingComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colorize);
}
// Autogenerated method: VROSC.LoopPlayerUI.SetRecordingText
void VROSC::LoopPlayerUI::SetRecordingText(::StringW recordingtext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::SetRecordingText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRecordingText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingtext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordingtext);
}
// Autogenerated method: VROSC.LoopPlayerUI.DeleteFromButton
void VROSC::LoopPlayerUI::DeleteFromButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::DeleteFromButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteFromButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerUI.ShowAsMuted
void VROSC::LoopPlayerUI::ShowAsMuted(bool showAsMuted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::ShowAsMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowAsMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showAsMuted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, showAsMuted);
}
// Autogenerated method: VROSC.LoopPlayerUI.RenameButtonPressed
void VROSC::LoopPlayerUI::RenameButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::RenameButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenameButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerUI.RanameComplete
void VROSC::LoopPlayerUI::RanameComplete(::StringW displayName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::RanameComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RanameComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(displayName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, displayName);
}
// Autogenerated method: VROSC.LoopPlayerUI.SetDisplayName
void VROSC::LoopPlayerUI::SetDisplayName(::StringW displayName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::SetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(displayName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, displayName);
}
// Autogenerated method: VROSC.LoopPlayerUI.SetColor
void VROSC::LoopPlayerUI::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: VROSC.LoopPlayerUI.KeyboardClosed
void VROSC::LoopPlayerUI::KeyboardClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::KeyboardClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyboardClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerUI.LoadLaunchPad
void VROSC::LoopPlayerUI::LoadLaunchPad(::StringW padID, ::VROSC::TransformDataController* transformData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::LoadLaunchPad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadLaunchPad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(padID), ::il2cpp_utils::ExtractType(transformData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, padID, transformData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlayerUI/VROSC.State
#include "VROSC/LoopPlayerUI_State.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlayerUI/VROSC.State Recording
::VROSC::LoopPlayerUI::State VROSC::LoopPlayerUI::State::_get_Recording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::State::_get_Recording");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlayerUI::State>("VROSC", "LoopPlayerUI/State", "Recording"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlayerUI/VROSC.State Recording
void VROSC::LoopPlayerUI::State::_set_Recording(::VROSC::LoopPlayerUI::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::State::_set_Recording");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlayerUI/State", "Recording", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlayerUI/VROSC.State HasRecording
::VROSC::LoopPlayerUI::State VROSC::LoopPlayerUI::State::_get_HasRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::State::_get_HasRecording");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlayerUI::State>("VROSC", "LoopPlayerUI/State", "HasRecording"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlayerUI/VROSC.State HasRecording
void VROSC::LoopPlayerUI::State::_set_HasRecording(::VROSC::LoopPlayerUI::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::State::_set_HasRecording");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlayerUI/State", "HasRecording", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& VROSC::LoopPlayerUI::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerUI::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopVolumeController
#include "VROSC/LoopVolumeController.hpp"
// Including type: VROSC.UIToggle
#include "VROSC/UIToggle.hpp"
// Including type: VROSC.UISlider
#include "VROSC/UISlider.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.UIToggle _muteButton
[[deprecated]] ::VROSC::UIToggle*& VROSC::LoopVolumeController::dyn__muteButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopVolumeController::dyn__muteButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_muteButton"))->offset;
  return *reinterpret_cast<::VROSC::UIToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIToggle _soloButton
[[deprecated]] ::VROSC::UIToggle*& VROSC::LoopVolumeController::dyn__soloButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopVolumeController::dyn__soloButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_soloButton"))->offset;
  return *reinterpret_cast<::VROSC::UIToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UISlider _volumeSlider
[[deprecated]] ::VROSC::UISlider*& VROSC::LoopVolumeController::dyn__volumeSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopVolumeController::dyn__volumeSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volumeSlider"))->offset;
  return *reinterpret_cast<::VROSC::UISlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Single> OnVolumeChanged
[[deprecated]] ::System::Action_1<float>*& VROSC::LoopVolumeController::dyn_OnVolumeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopVolumeController::dyn_OnVolumeChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnVolumeChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> OnMuteChanged
[[deprecated]] ::System::Action_1<bool>*& VROSC::LoopVolumeController::dyn_OnMuteChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopVolumeController::dyn_OnMuteChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnMuteChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> OnSoloChanged
[[deprecated]] ::System::Action_1<bool>*& VROSC::LoopVolumeController::dyn_OnSoloChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopVolumeController::dyn_OnSoloChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnSoloChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopVolumeController.get_IsSoloToggled
bool VROSC::LoopVolumeController::get_IsSoloToggled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopVolumeController::get_IsSoloToggled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSoloToggled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopVolumeController.get_IsMuteToggled
bool VROSC::LoopVolumeController::get_IsMuteToggled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopVolumeController::get_IsMuteToggled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMuteToggled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopVolumeController.get_Volume
float VROSC::LoopVolumeController::get_Volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopVolumeController::get_Volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopVolumeController.Setup
void VROSC::LoopVolumeController::Setup(::StringW sliderHeaderText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopVolumeController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderHeaderText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderHeaderText);
}
// Autogenerated method: VROSC.LoopVolumeController.Dispose
void VROSC::LoopVolumeController::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopVolumeController::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopVolumeController.ToggleMute
void VROSC::LoopVolumeController::ToggleMute(::VROSC::InputDevice* device, bool mute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopVolumeController::ToggleMute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleMute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(mute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device, mute);
}
// Autogenerated method: VROSC.LoopVolumeController.ToggleSolo
void VROSC::LoopVolumeController::ToggleSolo(::VROSC::InputDevice* arg1, bool arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopVolumeController::ToggleSolo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleSolo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arg1, arg2);
}
// Autogenerated method: VROSC.LoopVolumeController.SetVolume
void VROSC::LoopVolumeController::SetVolume(float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopVolumeController::SetVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume);
}
// Autogenerated method: VROSC.LoopVolumeController.OnVolumeSliderChanged
void VROSC::LoopVolumeController::OnVolumeSliderChanged(float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopVolumeController::OnVolumeSliderChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnVolumeSliderChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume);
}
// Autogenerated method: VROSC.LoopVolumeController.SetIsMuted
void VROSC::LoopVolumeController::SetIsMuted(bool isMuted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopVolumeController::SetIsMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isMuted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isMuted);
}
// Autogenerated method: VROSC.LoopVolumeController.SetIsSolo
void VROSC::LoopVolumeController::SetIsSolo(bool isMuted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopVolumeController::SetIsSolo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsSolo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isMuted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isMuted);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlayerPlaybackState
#include "VROSC/LoopPlayerPlaybackState.hpp"
// Including type: VROSC.LoopPlayerPlaybackSettings
#include "VROSC/LoopPlayerPlaybackSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 AntiClickFadeLength
int VROSC::LoopPlayerPlaybackState::_get_AntiClickFadeLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::_get_AntiClickFadeLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("VROSC", "LoopPlayerPlaybackState", "AntiClickFadeLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 AntiClickFadeLength
void VROSC::LoopPlayerPlaybackState::_set_AntiClickFadeLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::_set_AntiClickFadeLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlayerPlaybackState", "AntiClickFadeLength", value));
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayerPlaybackState <NextState>k__BackingField
[[deprecated]] ::VROSC::LoopPlayerPlaybackState*& VROSC::LoopPlayerPlaybackState::dyn_$NextState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::dyn_$NextState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NextState>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayerPlaybackState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayerPlaybackState/VROSC.Activity <CurrentActivity>k__BackingField
[[deprecated]] ::VROSC::LoopPlayerPlaybackState::Activity& VROSC::LoopPlayerPlaybackState::dyn_$CurrentActivity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::dyn_$CurrentActivity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentActivity>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayerPlaybackState::Activity*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <StateBeginSample>k__BackingField
[[deprecated]] int& VROSC::LoopPlayerPlaybackState::dyn_$StateBeginSample$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::dyn_$StateBeginSample$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StateBeginSample>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <StateEndSample>k__BackingField
[[deprecated]] int& VROSC::LoopPlayerPlaybackState::dyn_$StateEndSample$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::dyn_$StateEndSample$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StateEndSample>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Fading>k__BackingField
[[deprecated]] bool& VROSC::LoopPlayerPlaybackState::dyn_$Fading$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::dyn_$Fading$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Fading>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.get_NextState
::VROSC::LoopPlayerPlaybackState* VROSC::LoopPlayerPlaybackState::get_NextState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::get_NextState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlayerPlaybackState*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.set_NextState
void VROSC::LoopPlayerPlaybackState::set_NextState(::VROSC::LoopPlayerPlaybackState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::set_NextState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NextState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.get_CurrentActivity
::VROSC::LoopPlayerPlaybackState::Activity VROSC::LoopPlayerPlaybackState::get_CurrentActivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::get_CurrentActivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentActivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlayerPlaybackState::Activity, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.set_CurrentActivity
void VROSC::LoopPlayerPlaybackState::set_CurrentActivity(::VROSC::LoopPlayerPlaybackState::Activity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::set_CurrentActivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentActivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.get_StateBeginSample
int VROSC::LoopPlayerPlaybackState::get_StateBeginSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::get_StateBeginSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StateBeginSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.set_StateBeginSample
void VROSC::LoopPlayerPlaybackState::set_StateBeginSample(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::set_StateBeginSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StateBeginSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.get_StateEndSample
int VROSC::LoopPlayerPlaybackState::get_StateEndSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::get_StateEndSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StateEndSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.set_StateEndSample
void VROSC::LoopPlayerPlaybackState::set_StateEndSample(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::set_StateEndSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StateEndSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.get_Fading
bool VROSC::LoopPlayerPlaybackState::get_Fading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::get_Fading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Fading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.set_Fading
void VROSC::LoopPlayerPlaybackState::set_Fading(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::set_Fading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Fading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.get_Playing
bool VROSC::LoopPlayerPlaybackState::get_Playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::get_Playing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.get_HasEnded
bool VROSC::LoopPlayerPlaybackState::get_HasEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::get_HasEnded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.get_WaitingToBegin
bool VROSC::LoopPlayerPlaybackState::get_WaitingToBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::get_WaitingToBegin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WaitingToBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.GetCurrentFade
float VROSC::LoopPlayerPlaybackState::GetCurrentFade(int atSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::GetCurrentFade");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, atSample);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.SetExplicit
void VROSC::LoopPlayerPlaybackState::SetExplicit(int startSample, int stopSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::SetExplicit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startSample, stopSample);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.SetNextState
void VROSC::LoopPlayerPlaybackState::SetNextState(::VROSC::LoopPlayerPlaybackState* nextState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::SetNextState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNextState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nextState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nextState);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.CheckActivityChangeBeforeSample
bool VROSC::LoopPlayerPlaybackState::CheckActivityChangeBeforeSample(int sample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::CheckActivityChangeBeforeSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckActivityChangeBeforeSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sample)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sample);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.EvaluateRunningAndFlagActivityChangeAtSample
bool VROSC::LoopPlayerPlaybackState::EvaluateRunningAndFlagActivityChangeAtSample(int sample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::EvaluateRunningAndFlagActivityChangeAtSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateRunningAndFlagActivityChangeAtSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sample)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sample);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.SetActivity
void VROSC::LoopPlayerPlaybackState::SetActivity(int sample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::SetActivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sample)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sample);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.SetStateActive
void VROSC::LoopPlayerPlaybackState::SetStateActive(::VROSC::LoopPlayerPlaybackSettings* settings, int atSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::SetStateActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings, atSample);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.DebugString
::StringW VROSC::LoopPlayerPlaybackState::DebugString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::DebugString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackState.GetBeginProgress
float VROSC::LoopPlayerPlaybackState::GetBeginProgress(int startSample, int currentSyncSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::GetBeginProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeginProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startSample), ::il2cpp_utils::ExtractType(currentSyncSample)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, startSample, currentSyncSample);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlayerPlaybackState/VROSC.Activity
#include "VROSC/LoopPlayerPlaybackState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlayerPlaybackState/VROSC.Activity WaitingToBegin
::VROSC::LoopPlayerPlaybackState::Activity VROSC::LoopPlayerPlaybackState::Activity::_get_WaitingToBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::Activity::_get_WaitingToBegin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlayerPlaybackState::Activity>("VROSC", "LoopPlayerPlaybackState/Activity", "WaitingToBegin"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlayerPlaybackState/VROSC.Activity WaitingToBegin
void VROSC::LoopPlayerPlaybackState::Activity::_set_WaitingToBegin(::VROSC::LoopPlayerPlaybackState::Activity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::Activity::_set_WaitingToBegin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlayerPlaybackState/Activity", "WaitingToBegin", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlayerPlaybackState/VROSC.Activity Running
::VROSC::LoopPlayerPlaybackState::Activity VROSC::LoopPlayerPlaybackState::Activity::_get_Running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::Activity::_get_Running");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlayerPlaybackState::Activity>("VROSC", "LoopPlayerPlaybackState/Activity", "Running"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlayerPlaybackState/VROSC.Activity Running
void VROSC::LoopPlayerPlaybackState::Activity::_set_Running(::VROSC::LoopPlayerPlaybackState::Activity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::Activity::_set_Running");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlayerPlaybackState/Activity", "Running", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopPlayerPlaybackState/VROSC.Activity Ended
::VROSC::LoopPlayerPlaybackState::Activity VROSC::LoopPlayerPlaybackState::Activity::_get_Ended() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::Activity::_get_Ended");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopPlayerPlaybackState::Activity>("VROSC", "LoopPlayerPlaybackState/Activity", "Ended"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopPlayerPlaybackState/VROSC.Activity Ended
void VROSC::LoopPlayerPlaybackState::Activity::_set_Ended(::VROSC::LoopPlayerPlaybackState::Activity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::Activity::_set_Ended");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopPlayerPlaybackState/Activity", "Ended", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& VROSC::LoopPlayerPlaybackState::Activity::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackState::Activity::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlayerPlaybackFadeState
#include "VROSC/LoopPlayerPlaybackFadeState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Single _fadeStartValue
[[deprecated]] float& VROSC::LoopPlayerPlaybackFadeState::dyn__fadeStartValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackFadeState::dyn__fadeStartValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeStartValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single _fadeStopValue
[[deprecated]] float& VROSC::LoopPlayerPlaybackFadeState::dyn__fadeStopValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackFadeState::dyn__fadeStopValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeStopValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackFadeState.GetFadeOutLength
int VROSC::LoopPlayerPlaybackFadeState::GetFadeOutLength(::VROSC::LoopPlaybackConfig::FadeDuration fade, int tailLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackFadeState::GetFadeOutLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFadeOutLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fade), ::il2cpp_utils::ExtractType(tailLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, fade, tailLength);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackFadeState.GetFadeInLength
int VROSC::LoopPlayerPlaybackFadeState::GetFadeInLength(::VROSC::LoopPlaybackConfig::FadeDuration fade) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackFadeState::GetFadeInLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFadeInLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fade)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, fade);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackFadeState.GetFadeLength
int VROSC::LoopPlayerPlaybackFadeState::GetFadeLength(::VROSC::LoopPlaybackConfig::FadeDuration fade) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackFadeState::GetFadeLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFadeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fade)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, fade);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackFadeState.GetCurrentFade
float VROSC::LoopPlayerPlaybackFadeState::GetCurrentFade(int atSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackFadeState::GetCurrentFade");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, atSample);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlayerPlaybackLoopingState
#include "VROSC/LoopPlayerPlaybackLoopingState.hpp"
// Including type: VROSC.LoopPlayerPlaybackSettings
#include "VROSC/LoopPlayerPlaybackSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Looping>k__BackingField
[[deprecated]] bool& VROSC::LoopPlayerPlaybackLoopingState::dyn_$Looping$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackLoopingState::dyn_$Looping$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Looping>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackLoopingState.get_Looping
bool VROSC::LoopPlayerPlaybackLoopingState::get_Looping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackLoopingState::get_Looping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Looping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackLoopingState.set_Looping
void VROSC::LoopPlayerPlaybackLoopingState::set_Looping(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackLoopingState::set_Looping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Looping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackLoopingState.Set
void VROSC::LoopPlayerPlaybackLoopingState::Set(::VROSC::LoopPlayerPlaybackSettings* settings, int startStateBegin, int startStateEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackLoopingState::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings), ::il2cpp_utils::ExtractType(startStateBegin), ::il2cpp_utils::ExtractType(startStateEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings, startStateBegin, startStateEnd);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackLoopingState.DebugString
::StringW VROSC::LoopPlayerPlaybackLoopingState::DebugString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackLoopingState::DebugString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackLoopingState.GetCurrentFade
float VROSC::LoopPlayerPlaybackLoopingState::GetCurrentFade(int atSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackLoopingState::GetCurrentFade");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, atSample);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackLoopingState.SetExplicit
void VROSC::LoopPlayerPlaybackLoopingState::SetExplicit(int startSample, int stopSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackLoopingState::SetExplicit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startSample, stopSample);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlayerPlaybackStoppedState
#include "VROSC/LoopPlayerPlaybackStoppedState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VROSC.LoopPlayerPlaybackStoppedState.GetCurrentFade
float VROSC::LoopPlayerPlaybackStoppedState::GetCurrentFade(int atSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackStoppedState::GetCurrentFade");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, atSample);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackStoppedState.DebugString
::StringW VROSC::LoopPlayerPlaybackStoppedState::DebugString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackStoppedState::DebugString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlayerPlaybackWillStartState
#include "VROSC/LoopPlayerPlaybackWillStartState.hpp"
// Including type: VROSC.LoopPlayerPlaybackSettings
#include "VROSC/LoopPlayerPlaybackSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <SyncOffset>k__BackingField
[[deprecated]] int& VROSC::LoopPlayerPlaybackWillStartState::dyn_$SyncOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStartState::dyn_$SyncOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SyncOffset>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <InverseSyncOffset>k__BackingField
[[deprecated]] int& VROSC::LoopPlayerPlaybackWillStartState::dyn_$InverseSyncOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStartState::dyn_$InverseSyncOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InverseSyncOffset>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackWillStartState.get_SyncOffset
int VROSC::LoopPlayerPlaybackWillStartState::get_SyncOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStartState::get_SyncOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackWillStartState.set_SyncOffset
void VROSC::LoopPlayerPlaybackWillStartState::set_SyncOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStartState::set_SyncOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SyncOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackWillStartState.get_InverseSyncOffset
int VROSC::LoopPlayerPlaybackWillStartState::get_InverseSyncOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStartState::get_InverseSyncOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InverseSyncOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackWillStartState.set_InverseSyncOffset
void VROSC::LoopPlayerPlaybackWillStartState::set_InverseSyncOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStartState::set_InverseSyncOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InverseSyncOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackWillStartState.SetBySettings
void VROSC::LoopPlayerPlaybackWillStartState::SetBySettings(::VROSC::LoopPlayerPlaybackSettings* settings, int evaluateFromSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStartState::SetBySettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBySettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings), ::il2cpp_utils::ExtractType(evaluateFromSample)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings, evaluateFromSample);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackWillStartState.GetStateBeginSample
int VROSC::LoopPlayerPlaybackWillStartState::GetStateBeginSample(::VROSC::LoopPlayerPlaybackSettings* settings, int sample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStartState::GetStateBeginSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStateBeginSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings), ::il2cpp_utils::ExtractType(sample)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, settings, sample);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackWillStartState.CalculateSyncOffset
void VROSC::LoopPlayerPlaybackWillStartState::CalculateSyncOffset(::VROSC::LoopPlayerPlaybackSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStartState::CalculateSyncOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateSyncOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackWillStartState.ShouldUseOffset
bool VROSC::LoopPlayerPlaybackWillStartState::ShouldUseOffset(::VROSC::LoopPlayerPlaybackSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStartState::ShouldUseOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldUseOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, settings);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackWillStartState.get_Playing
bool VROSC::LoopPlayerPlaybackWillStartState::get_Playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStartState::get_Playing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackWillStartState.DebugString
::StringW VROSC::LoopPlayerPlaybackWillStartState::DebugString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStartState::DebugString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackWillStartState.SetExplicit
void VROSC::LoopPlayerPlaybackWillStartState::SetExplicit(int startSample, int stopSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStartState::SetExplicit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startSample, stopSample);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackWillStartState.SetStateActive
void VROSC::LoopPlayerPlaybackWillStartState::SetStateActive(::VROSC::LoopPlayerPlaybackSettings* settings, int atSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStartState::SetStateActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings, atSample);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlayerPlaybackWillStopState
#include "VROSC/LoopPlayerPlaybackWillStopState.hpp"
// Including type: VROSC.LoopPlayerPlaybackSettings
#include "VROSC/LoopPlayerPlaybackSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VROSC.LoopPlayerPlaybackWillStopState.SetBySettings
void VROSC::LoopPlayerPlaybackWillStopState::SetBySettings(::VROSC::LoopPlayerPlaybackSettings* settings, int loopStopSample, bool fromStopRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStopState::SetBySettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBySettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings), ::il2cpp_utils::ExtractType(loopStopSample), ::il2cpp_utils::ExtractType(fromStopRequest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings, loopStopSample, fromStopRequest);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackWillStopState.GetStoppingPoint
int VROSC::LoopPlayerPlaybackWillStopState::GetStoppingPoint(::VROSC::LoopPlayerPlaybackSettings* settings, int sample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStopState::GetStoppingPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStoppingPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings), ::il2cpp_utils::ExtractType(sample)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, settings, sample);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackWillStopState.get_Playing
bool VROSC::LoopPlayerPlaybackWillStopState::get_Playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStopState::get_Playing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackWillStopState.DebugString
::StringW VROSC::LoopPlayerPlaybackWillStopState::DebugString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStopState::DebugString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackWillStopState.SetExplicit
void VROSC::LoopPlayerPlaybackWillStopState::SetExplicit(int startSample, int stopSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStopState::SetExplicit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startSample, stopSample);
}
// Autogenerated method: VROSC.LoopPlayerPlaybackWillStopState.SetStateActive
void VROSC::LoopPlayerPlaybackWillStopState::SetStateActive(::VROSC::LoopPlayerPlaybackSettings* settings, int atSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStopState::SetStateActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerPlaybackState*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings, atSample);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationRecorder
#include "VROSC/LoopStationRecorder.hpp"
// Including type: VROSC.LoopStationRecordingUI
#include "VROSC/LoopStationRecordingUI.hpp"
// Including type: VROSC.LoopStationRecorder/VROSC.<ScheduleButtonPress>d__24
#include "VROSC/LoopStationRecorder_-ScheduleButtonPress-d__24.hpp"
// Including type: VROSC.LoopStationRecorder/VROSC.<ConcludeRecording>d__31
#include "VROSC/LoopStationRecorder_-ConcludeRecording-d__31.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
// Including type: VROSC.PatchSettings
#include "VROSC/PatchSettings.hpp"
// Including type: VROSC.WidgetSettings/VROSC.Identifier
#include "VROSC/WidgetSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Action`1<VROSC.LoopStationRecorder/VROSC.RecordingState> OnStateChanged
::System::Action_1<::VROSC::LoopStationRecorder::RecordingState>* VROSC::LoopStationRecorder::_get_OnStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::_get_OnStateChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::VROSC::LoopStationRecorder::RecordingState>*>("VROSC", "LoopStationRecorder", "OnStateChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<VROSC.LoopStationRecorder/VROSC.RecordingState> OnStateChanged
void VROSC::LoopStationRecorder::_set_OnStateChanged(::System::Action_1<::VROSC::LoopStationRecorder::RecordingState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::_set_OnStateChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopStationRecorder", "OnStateChanged", value));
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStation <LoopStation>k__BackingField
[[deprecated]] ::VROSC::LoopStation*& VROSC::LoopStationRecorder::dyn_$LoopStation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::dyn_$LoopStation$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LoopStation>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopStation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationRecorder/VROSC.RecordingState <State>k__BackingField
[[deprecated]] ::VROSC::LoopStationRecorder::RecordingState& VROSC::LoopStationRecorder::dyn_$State$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::dyn_$State$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<State>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationRecorder::RecordingState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationRecordingUI _ui
[[deprecated]] ::VROSC::LoopStationRecordingUI*& VROSC::LoopStationRecorder::dyn__ui() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::dyn__ui");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ui"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationRecordingUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _recordingMaxLength
[[deprecated]] int& VROSC::LoopStationRecorder::dyn__recordingMaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::dyn__recordingMaxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingMaxLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _currentTrackId
[[deprecated]] ::StringW& VROSC::LoopStationRecorder::dyn__currentTrackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::dyn__currentTrackId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentTrackId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _buttonPressScheduled
[[deprecated]] bool& VROSC::LoopStationRecorder::dyn__buttonPressScheduled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::dyn__buttonPressScheduled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonPressScheduled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.SoundSource _currentRecordingSoundSource
[[deprecated]] ::VROSC::SoundSource& VROSC::LoopStationRecorder::dyn__currentRecordingSoundSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::dyn__currentRecordingSoundSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRecordingSoundSource"))->offset;
  return *reinterpret_cast<::VROSC::SoundSource*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _recordingStartSample
[[deprecated]] int& VROSC::LoopStationRecorder::dyn__recordingStartSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::dyn__recordingStartSample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingStartSample"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _currentRecordingIsOverdub
[[deprecated]] bool& VROSC::LoopStationRecorder::dyn__currentRecordingIsOverdub() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::dyn__currentRecordingIsOverdub");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRecordingIsOverdub"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fadeOverlapSeconds
[[deprecated]] float& VROSC::LoopStationRecorder::dyn__fadeOverlapSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::dyn__fadeOverlapSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOverlapSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _fadeOverlapLength
[[deprecated]] int& VROSC::LoopStationRecorder::dyn__fadeOverlapLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::dyn__fadeOverlapLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOverlapLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _setBpmRecordingOffset
[[deprecated]] int& VROSC::LoopStationRecorder::dyn__setBpmRecordingOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::dyn__setBpmRecordingOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setBpmRecordingOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationRecorder.get_LoopStation
::VROSC::LoopStation* VROSC::LoopStationRecorder::get_LoopStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::get_LoopStation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoopStation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStation*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecorder.set_LoopStation
void VROSC::LoopStationRecorder::set_LoopStation(::VROSC::LoopStation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::set_LoopStation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LoopStation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationRecorder.get_State
::VROSC::LoopStationRecorder::RecordingState VROSC::LoopStationRecorder::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationRecorder::RecordingState, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecorder.set_State
void VROSC::LoopStationRecorder::set_State(::VROSC::LoopStationRecorder::RecordingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationRecorder.Setup
void VROSC::LoopStationRecorder::Setup(::VROSC::LoopStation* loopStation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopStation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStation);
}
// Autogenerated method: VROSC.LoopStationRecorder.OnDestroy
void VROSC::LoopStationRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecorder.UpdateLooperState
void VROSC::LoopStationRecorder::UpdateLooperState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::UpdateLooperState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLooperState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecorder.RecordOrStop
void VROSC::LoopStationRecorder::RecordOrStop(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::RecordOrStop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordOrStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(signal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.LoopStationRecorder.ScheduleButtonPress
void VROSC::LoopStationRecorder::ScheduleButtonPress(double dspTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::ScheduleButtonPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScheduleButtonPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dspTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dspTime);
}
// Autogenerated method: VROSC.LoopStationRecorder.StopRecordingByUser
void VROSC::LoopStationRecorder::StopRecordingByUser(bool restart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::StopRecordingByUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRecordingByUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(restart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, restart);
}
// Autogenerated method: VROSC.LoopStationRecorder.PrepareForRecording
void VROSC::LoopStationRecorder::PrepareForRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::PrepareForRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareForRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecorder.CancelPreparingForRecording
void VROSC::LoopStationRecorder::CancelPreparingForRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::CancelPreparingForRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelPreparingForRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecorder.StartRecordingMicrophone
void VROSC::LoopStationRecorder::StartRecordingMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::StartRecordingMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRecordingMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecorder.StartRecording
void VROSC::LoopStationRecorder::StartRecording(::VROSC::WidgetSettings::Identifier instrumentId, ::VROSC::PatchSettings* patchSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::StartRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instrumentId), ::il2cpp_utils::ExtractType(patchSettings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instrumentId, patchSettings);
}
// Autogenerated method: VROSC.LoopStationRecorder.CancelRecording
void VROSC::LoopStationRecorder::CancelRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::CancelRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecorder.ConcludeRecording
void VROSC::LoopStationRecorder::ConcludeRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::ConcludeRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConcludeRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecorder.ReceiveRecording
void VROSC::LoopStationRecorder::ReceiveRecording(::ArrayW<float> audioData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::ReceiveRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioData);
}
// Autogenerated method: VROSC.LoopStationRecorder.Finish
void VROSC::LoopStationRecorder::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecorder.CopyAudioDataToLoopTrack
void VROSC::LoopStationRecorder::CopyAudioDataToLoopTrack(::ArrayW<float> sourceData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::CopyAudioDataToLoopTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyAudioDataToLoopTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceData);
}
// Autogenerated method: VROSC.LoopStationRecorder.CalculateGlobalSyncOffset
int VROSC::LoopStationRecorder::CalculateGlobalSyncOffset(int recordingLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::CalculateGlobalSyncOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateGlobalSyncOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordingLength);
}
// Autogenerated method: VROSC.LoopStationRecorder.PlayAll
void VROSC::LoopStationRecorder::PlayAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::PlayAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecorder.SetToIdle
void VROSC::LoopStationRecorder::SetToIdle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::SetToIdle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToIdle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecorder.SetState
void VROSC::LoopStationRecorder::SetState(::VROSC::LoopStationRecorder::RecordingState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationRecorder/VROSC.RecordingState
#include "VROSC/LoopStationRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.LoopStationRecorder/VROSC.RecordingState Stopped
::VROSC::LoopStationRecorder::RecordingState VROSC::LoopStationRecorder::RecordingState::_get_Stopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::RecordingState::_get_Stopped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopStationRecorder::RecordingState>("VROSC", "LoopStationRecorder/RecordingState", "Stopped"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopStationRecorder/VROSC.RecordingState Stopped
void VROSC::LoopStationRecorder::RecordingState::_set_Stopped(::VROSC::LoopStationRecorder::RecordingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::RecordingState::_set_Stopped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopStationRecorder/RecordingState", "Stopped", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopStationRecorder/VROSC.RecordingState WaitingForNotes
::VROSC::LoopStationRecorder::RecordingState VROSC::LoopStationRecorder::RecordingState::_get_WaitingForNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::RecordingState::_get_WaitingForNotes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopStationRecorder::RecordingState>("VROSC", "LoopStationRecorder/RecordingState", "WaitingForNotes"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopStationRecorder/VROSC.RecordingState WaitingForNotes
void VROSC::LoopStationRecorder::RecordingState::_set_WaitingForNotes(::VROSC::LoopStationRecorder::RecordingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::RecordingState::_set_WaitingForNotes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopStationRecorder/RecordingState", "WaitingForNotes", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopStationRecorder/VROSC.RecordingState Recording
::VROSC::LoopStationRecorder::RecordingState VROSC::LoopStationRecorder::RecordingState::_get_Recording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::RecordingState::_get_Recording");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopStationRecorder::RecordingState>("VROSC", "LoopStationRecorder/RecordingState", "Recording"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopStationRecorder/VROSC.RecordingState Recording
void VROSC::LoopStationRecorder::RecordingState::_set_Recording(::VROSC::LoopStationRecorder::RecordingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::RecordingState::_set_Recording");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopStationRecorder/RecordingState", "Recording", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopStationRecorder/VROSC.RecordingState FinishingUp
::VROSC::LoopStationRecorder::RecordingState VROSC::LoopStationRecorder::RecordingState::_get_FinishingUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::RecordingState::_get_FinishingUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopStationRecorder::RecordingState>("VROSC", "LoopStationRecorder/RecordingState", "FinishingUp"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopStationRecorder/VROSC.RecordingState FinishingUp
void VROSC::LoopStationRecorder::RecordingState::_set_FinishingUp(::VROSC::LoopStationRecorder::RecordingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::RecordingState::_set_FinishingUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopStationRecorder/RecordingState", "FinishingUp", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopStationRecorder/VROSC.RecordingState Playing
::VROSC::LoopStationRecorder::RecordingState VROSC::LoopStationRecorder::RecordingState::_get_Playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::RecordingState::_get_Playing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopStationRecorder::RecordingState>("VROSC", "LoopStationRecorder/RecordingState", "Playing"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopStationRecorder/VROSC.RecordingState Playing
void VROSC::LoopStationRecorder::RecordingState::_set_Playing(::VROSC::LoopStationRecorder::RecordingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::RecordingState::_set_Playing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopStationRecorder/RecordingState", "Playing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& VROSC::LoopStationRecorder::RecordingState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::RecordingState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationRecorder/VROSC.<ScheduleButtonPress>d__24
#include "VROSC/LoopStationRecorder_-ScheduleButtonPress-d__24.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated]] int& VROSC::LoopStationRecorder::$ScheduleButtonPress$d__24::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::$ScheduleButtonPress$d__24::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& VROSC::LoopStationRecorder::$ScheduleButtonPress$d__24::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::$ScheduleButtonPress$d__24::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.LoopStationRecorder <>4__this
[[deprecated]] ::VROSC::LoopStationRecorder*& VROSC::LoopStationRecorder::$ScheduleButtonPress$d__24::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::$ScheduleButtonPress$d__24::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double dspTime
[[deprecated]] double& VROSC::LoopStationRecorder::$ScheduleButtonPress$d__24::dyn_dspTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::$ScheduleButtonPress$d__24::dyn_dspTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dspTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated]] ::System::Runtime::CompilerServices::TaskAwaiter& VROSC::LoopStationRecorder::$ScheduleButtonPress$d__24::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::$ScheduleButtonPress$d__24::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationRecorder/VROSC.<ScheduleButtonPress>d__24.MoveNext
void VROSC::LoopStationRecorder::$ScheduleButtonPress$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::$ScheduleButtonPress$d__24::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::LoopStationRecorder::$ScheduleButtonPress$d__24), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecorder/VROSC.<ScheduleButtonPress>d__24.SetStateMachine
void VROSC::LoopStationRecorder::$ScheduleButtonPress$d__24::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::$ScheduleButtonPress$d__24::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::LoopStationRecorder::$ScheduleButtonPress$d__24), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationRecorder/VROSC.<ConcludeRecording>d__31
#include "VROSC/LoopStationRecorder_-ConcludeRecording-d__31.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated]] int& VROSC::LoopStationRecorder::$ConcludeRecording$d__31::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::$ConcludeRecording$d__31::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& VROSC::LoopStationRecorder::$ConcludeRecording$d__31::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::$ConcludeRecording$d__31::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.LoopStationRecorder <>4__this
[[deprecated]] ::VROSC::LoopStationRecorder*& VROSC::LoopStationRecorder::$ConcludeRecording$d__31::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::$ConcludeRecording$d__31::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double <concludeTime>5__2
[[deprecated]] double& VROSC::LoopStationRecorder::$ConcludeRecording$d__31::dyn_$concludeTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::$ConcludeRecording$d__31::dyn_$concludeTime$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<concludeTime>5__2"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double <fadeOverlapSeconds>5__3
[[deprecated]] double& VROSC::LoopStationRecorder::$ConcludeRecording$d__31::dyn_$fadeOverlapSeconds$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::$ConcludeRecording$d__31::dyn_$fadeOverlapSeconds$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<fadeOverlapSeconds>5__3"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated]] ::System::Runtime::CompilerServices::TaskAwaiter& VROSC::LoopStationRecorder::$ConcludeRecording$d__31::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::$ConcludeRecording$d__31::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationRecorder/VROSC.<ConcludeRecording>d__31.MoveNext
void VROSC::LoopStationRecorder::$ConcludeRecording$d__31::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::$ConcludeRecording$d__31::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::LoopStationRecorder::$ConcludeRecording$d__31), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecorder/VROSC.<ConcludeRecording>d__31.SetStateMachine
void VROSC::LoopStationRecorder::$ConcludeRecording$d__31::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecorder::$ConcludeRecording$d__31::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::LoopStationRecorder::$ConcludeRecording$d__31), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationRecordingButton
#include "VROSC/LoopStationRecordingButton.hpp"
// Including type: VROSC.LoopStationRecorder
#include "VROSC/LoopStationRecorder.hpp"
// Including type: VROSC.SelectionBar
#include "VROSC/SelectionBar.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: VROSC.ResetableMover
#include "VROSC/ResetableMover.hpp"
// Including type: VROSC.DrumPadEffectOnSignal
#include "VROSC/DrumPadEffectOnSignal.hpp"
// Including type: VROSC.LooperButtonProgressUpdater
#include "VROSC/LooperButtonProgressUpdater.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: VROSC.LoopStationRecordingButtonVisual
#include "VROSC/LoopStationRecordingButtonVisual.hpp"
// Including type: VROSC.UI.Meshes.ProceduralArc
#include "VROSC/UI/Meshes/ProceduralArc.hpp"
// Including type: VROSC.LoopStationRecordingButtonPlayback
#include "VROSC/LoopStationRecordingButtonPlayback.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: VROSC.LoopStationRecordingProgress
#include "VROSC/LoopStationRecordingProgress.hpp"
// Including type: VROSC.LoopPlaybackConfig
#include "VROSC/LoopPlaybackConfig.hpp"
// Including type: VROSC.UIScrollableItem
#include "VROSC/UIScrollableItem.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: VROSC.TransformMover
#include "VROSC/TransformMover.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <RecordingProgressValue>k__BackingField
[[deprecated]] float& VROSC::LoopStationRecordingButton::dyn_$RecordingProgressValue$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::dyn_$RecordingProgressValue$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RecordingProgressValue>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationRecorder _recorder
[[deprecated]] ::VROSC::LoopStationRecorder*& VROSC::LoopStationRecordingButton::dyn__recorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::dyn__recorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recorder"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.SelectionBar _loopLengthSelectionBar
[[deprecated]] ::VROSC::SelectionBar*& VROSC::LoopStationRecordingButton::dyn__loopLengthSelectionBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::dyn__loopLengthSelectionBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopLengthSelectionBar"))->offset;
  return *reinterpret_cast<::VROSC::SelectionBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _loopLengthSelectionBarHolder
[[deprecated]] ::UnityEngine::GameObject*& VROSC::LoopStationRecordingButton::dyn__loopLengthSelectionBarHolder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::dyn__loopLengthSelectionBarHolder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopLengthSelectionBarHolder"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.ResetableMover _resetableMover
[[deprecated]] ::VROSC::ResetableMover*& VROSC::LoopStationRecordingButton::dyn__resetableMover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::dyn__resetableMover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resetableMover"))->offset;
  return *reinterpret_cast<::VROSC::ResetableMover**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.DrumPadEffectOnSignal _drumPadEffect
[[deprecated]] ::VROSC::DrumPadEffectOnSignal*& VROSC::LoopStationRecordingButton::dyn__drumPadEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::dyn__drumPadEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_drumPadEffect"))->offset;
  return *reinterpret_cast<::VROSC::DrumPadEffectOnSignal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LooperButtonProgressUpdater _slider
[[deprecated]] ::VROSC::LooperButtonProgressUpdater*& VROSC::LoopStationRecordingButton::dyn__slider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::dyn__slider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_slider"))->offset;
  return *reinterpret_cast<::VROSC::LooperButtonProgressUpdater**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro _buttonText
[[deprecated]] ::TMPro::TextMeshPro*& VROSC::LoopStationRecordingButton::dyn__buttonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::dyn__buttonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationRecordingButtonVisual _visual
[[deprecated]] ::VROSC::LoopStationRecordingButtonVisual*& VROSC::LoopStationRecordingButton::dyn__visual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::dyn__visual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_visual"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationRecordingButtonVisual**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UI.Meshes.ProceduralArc _arc
[[deprecated]] ::VROSC::UI::Meshes::ProceduralArc*& VROSC::LoopStationRecordingButton::dyn__arc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::dyn__arc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arc"))->offset;
  return *reinterpret_cast<::VROSC::UI::Meshes::ProceduralArc**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationRecordingButtonPlayback _playback
[[deprecated]] ::VROSC::LoopStationRecordingButtonPlayback*& VROSC::LoopStationRecordingButton::dyn__playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::dyn__playback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playback"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationRecordingButtonPlayback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _offset
[[deprecated]] float& VROSC::LoopStationRecordingButton::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStation _loopStation
[[deprecated]] ::VROSC::LoopStation*& VROSC::LoopStationRecordingButton::dyn__loopStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::dyn__loopStation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopStation"))->offset;
  return *reinterpret_cast<::VROSC::LoopStation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationRecordingProgress _recordingProgress
[[deprecated]] ::VROSC::LoopStationRecordingProgress*& VROSC::LoopStationRecordingButton::dyn__recordingProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::dyn__recordingProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingProgress"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationRecordingProgress**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationLoopHandler/VROSC.LooperState _looperState
[[deprecated]] ::VROSC::LoopStationLoopHandler::LooperState& VROSC::LoopStationRecordingButton::dyn__looperState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::dyn__looperState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_looperState"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationLoopHandler::LooperState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationRecorder/VROSC.RecordingState _recordingState
[[deprecated]] ::VROSC::LoopStationRecorder::RecordingState& VROSC::LoopStationRecordingButton::dyn__recordingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::dyn__recordingState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingState"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationRecorder::RecordingState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.get_RecordingProgressValue
float VROSC::LoopStationRecordingButton::get_RecordingProgressValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::get_RecordingProgressValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecordingProgressValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.set_RecordingProgressValue
void VROSC::LoopStationRecordingButton::set_RecordingProgressValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::set_RecordingProgressValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RecordingProgressValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.get_LoopPlaybackConfig
::VROSC::LoopPlaybackConfig* VROSC::LoopStationRecordingButton::get_LoopPlaybackConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::get_LoopPlaybackConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoopPlaybackConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlaybackConfig*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.Awake
void VROSC::LoopStationRecordingButton::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.Start
void VROSC::LoopStationRecordingButton::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.OnDestroy
void VROSC::LoopStationRecordingButton::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.Setup
void VROSC::LoopStationRecordingButton::Setup(::VROSC::LoopStation* loopStation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopStation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStation);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.Reset
void VROSC::LoopStationRecordingButton::Reset(::VROSC::LoopPlaybackConfig* loopPlaybackConfig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopPlaybackConfig)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopPlaybackConfig);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.MultiplierChanged
void VROSC::LoopStationRecordingButton::MultiplierChanged(::VROSC::UIScrollableItem* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::MultiplierChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MultiplierChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.UpdateLooperState
void VROSC::LoopStationRecordingButton::UpdateLooperState(::VROSC::LoopStationLoopHandler::LooperState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::UpdateLooperState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLooperState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.RecorderStateChanged
void VROSC::LoopStationRecordingButton::RecorderStateChanged(::VROSC::LoopStationRecorder::RecordingState recordingState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::RecorderStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecorderStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordingState);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.Update
void VROSC::LoopStationRecordingButton::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.UpdateArc
void VROSC::LoopStationRecordingButton::UpdateArc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::UpdateArc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateArc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.UpdateVisually
void VROSC::LoopStationRecordingButton::UpdateVisually() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::UpdateVisually");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisually", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.SetValue
void VROSC::LoopStationRecordingButton::SetValue(float value, float flashValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(flashValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, flashValue);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.ButtonReset
void VROSC::LoopStationRecordingButton::ButtonReset(::VROSC::ResetableMover* mover) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::ButtonReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ButtonReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mover)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mover);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.ButtonMoved
void VROSC::LoopStationRecordingButton::ButtonMoved(::VROSC::ResetableMover* mover) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::ButtonMoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ButtonMoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mover)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mover);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.SetToPosition
void VROSC::LoopStationRecordingButton::SetToPosition(bool isAttached, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::SetToPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isAttached), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isAttached, position, rotation, scale);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.LoopStationMoved
void VROSC::LoopStationRecordingButton::LoopStationMoved(::VROSC::TransformMover* mover) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::LoopStationMoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoopStationMoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mover)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mover);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.OnEnable
void VROSC::LoopStationRecordingButton::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingButton.NodeBegin
void VROSC::LoopStationRecordingButton::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButton::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationRecordingButtonPlayback
#include "VROSC/LoopStationRecordingButtonPlayback.hpp"
// Including type: VROSC.LoopPlaybackSettingsUI
#include "VROSC/LoopPlaybackSettingsUI.hpp"
// Including type: VROSC.LoopPlaybackConfig
#include "VROSC/LoopPlaybackConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlaybackSettingsUI _playbackSettingsUI
[[deprecated]] ::VROSC::LoopPlaybackSettingsUI*& VROSC::LoopStationRecordingButtonPlayback::dyn__playbackSettingsUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButtonPlayback::dyn__playbackSettingsUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackSettingsUI"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackSettingsUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlaybackConfig <PlaybackConfig>k__BackingField
[[deprecated]] ::VROSC::LoopPlaybackConfig*& VROSC::LoopStationRecordingButtonPlayback::dyn_$PlaybackConfig$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButtonPlayback::dyn_$PlaybackConfig$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlaybackConfig>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationRecordingButtonPlayback.get_PlaybackConfig
::VROSC::LoopPlaybackConfig* VROSC::LoopStationRecordingButtonPlayback::get_PlaybackConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButtonPlayback::get_PlaybackConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlaybackConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlaybackConfig*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingButtonPlayback.set_PlaybackConfig
void VROSC::LoopStationRecordingButtonPlayback::set_PlaybackConfig(::VROSC::LoopPlaybackConfig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButtonPlayback::set_PlaybackConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlaybackConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationRecordingButtonPlayback.Setup
void VROSC::LoopStationRecordingButtonPlayback::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButtonPlayback::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingButtonPlayback.Reset
void VROSC::LoopStationRecordingButtonPlayback::Reset(::VROSC::LoopPlaybackConfig* loopPlaybackConfig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButtonPlayback::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopPlaybackConfig)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopPlaybackConfig);
}
// Autogenerated method: VROSC.LoopStationRecordingButtonPlayback.CreateNewConfig
void VROSC::LoopStationRecordingButtonPlayback::CreateNewConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButtonPlayback::CreateNewConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNewConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingButtonPlayback.ConfigChanged
void VROSC::LoopStationRecordingButtonPlayback::ConfigChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButtonPlayback::ConfigChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationRecordingButtonVisual
#include "VROSC/LoopStationRecordingButtonVisual.hpp"
// Including type: VROSC.LoopStationRecorder/VROSC.RecordingState
#include "VROSC/LoopStationRecorder.hpp"
// Including type: VROSC.LoopStationLoopHandler/VROSC.LooperState
#include "VROSC/LoopStationLoopHandler_LooperState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _notActiveColor
[[deprecated]] ::UnityEngine::Color& VROSC::LoopStationRecordingButtonVisual::dyn__notActiveColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButtonVisual::dyn__notActiveColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notActiveColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _offColor
[[deprecated]] ::UnityEngine::Color& VROSC::LoopStationRecordingButtonVisual::dyn__offColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButtonVisual::dyn__offColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _waitingColor
[[deprecated]] ::UnityEngine::Color& VROSC::LoopStationRecordingButtonVisual::dyn__waitingColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButtonVisual::dyn__waitingColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitingColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _finishingColor
[[deprecated]] ::UnityEngine::Color& VROSC::LoopStationRecordingButtonVisual::dyn__finishingColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButtonVisual::dyn__finishingColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finishingColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _recordingColor
[[deprecated]] ::UnityEngine::Color& VROSC::LoopStationRecordingButtonVisual::dyn__recordingColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButtonVisual::dyn__recordingColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _playingColor
[[deprecated]] ::UnityEngine::Color& VROSC::LoopStationRecordingButtonVisual::dyn__playingColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButtonVisual::dyn__playingColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playingColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationRecordingButtonVisual.get_NotActiveColor
::UnityEngine::Color VROSC::LoopStationRecordingButtonVisual::get_NotActiveColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButtonVisual::get_NotActiveColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NotActiveColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingButtonVisual.GetButtonTextByState
::StringW VROSC::LoopStationRecordingButtonVisual::GetButtonTextByState(::VROSC::LoopStationRecorder::RecordingState recordingState, ::VROSC::LoopStationLoopHandler::LooperState looperstate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButtonVisual::GetButtonTextByState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetButtonTextByState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingState), ::il2cpp_utils::ExtractType(looperstate)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, recordingState, looperstate);
}
// Autogenerated method: VROSC.LoopStationRecordingButtonVisual.GetColorByRecordingState
::UnityEngine::Color VROSC::LoopStationRecordingButtonVisual::GetColorByRecordingState(::VROSC::LoopStationRecorder::RecordingState recordingState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButtonVisual::GetColorByRecordingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorByRecordingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingState)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, recordingState);
}
// Autogenerated method: VROSC.LoopStationRecordingButtonVisual.ShouldLengthSelectionBeDisabled
bool VROSC::LoopStationRecordingButtonVisual::ShouldLengthSelectionBeDisabled(::VROSC::LoopStationRecorder::RecordingState recordingState, ::VROSC::LoopStationLoopHandler::LooperState looperstate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingButtonVisual::ShouldLengthSelectionBeDisabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldLengthSelectionBeDisabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingState), ::il2cpp_utils::ExtractType(looperstate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, recordingState, looperstate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationRecordingProgress
#include "VROSC/LoopStationRecordingProgress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <FullLengthProgress>k__BackingField
[[deprecated]] float& VROSC::LoopStationRecordingProgress::dyn_$FullLengthProgress$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingProgress::dyn_$FullLengthProgress$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FullLengthProgress>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <SingleBarProgress>k__BackingField
[[deprecated]] float& VROSC::LoopStationRecordingProgress::dyn_$SingleBarProgress$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingProgress::dyn_$SingleBarProgress$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SingleBarProgress>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastProgress
[[deprecated]] float& VROSC::LoopStationRecordingProgress::dyn__lastProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingProgress::dyn__lastProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastProgress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _barCount
[[deprecated]] int& VROSC::LoopStationRecordingProgress::dyn__barCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingProgress::dyn__barCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_barCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationRecordingProgress.get_FullLengthProgress
float VROSC::LoopStationRecordingProgress::get_FullLengthProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingProgress::get_FullLengthProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullLengthProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingProgress.set_FullLengthProgress
void VROSC::LoopStationRecordingProgress::set_FullLengthProgress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingProgress::set_FullLengthProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FullLengthProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationRecordingProgress.get_SingleBarProgress
float VROSC::LoopStationRecordingProgress::get_SingleBarProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingProgress::get_SingleBarProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SingleBarProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingProgress.set_SingleBarProgress
void VROSC::LoopStationRecordingProgress::set_SingleBarProgress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingProgress::set_SingleBarProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SingleBarProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationRecordingProgress.Reset
void VROSC::LoopStationRecordingProgress::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingProgress::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingProgress.Update
void VROSC::LoopStationRecordingProgress::Update(float recordingLengthInBars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingProgress::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingLengthInBars)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordingLengthInBars);
}
// Autogenerated method: VROSC.LoopStationRecordingProgress.SetValue
void VROSC::LoopStationRecordingProgress::SetValue(float recordingProgress, float visualProgress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingProgress::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingProgress), ::il2cpp_utils::ExtractType(visualProgress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordingProgress, visualProgress);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationRecordingUI
#include "VROSC/LoopStationRecordingUI.hpp"
// Including type: VROSC.SelectionBar
#include "VROSC/SelectionBar.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: VROSC.LoopStationRecordingButton
#include "VROSC/LoopStationRecordingButton.hpp"
// Including type: VROSC.LoopPlayerRecordingState
#include "VROSC/LoopPlayerRecordingState.hpp"
// Including type: VROSC.UISlideToggle
#include "VROSC/UISlideToggle.hpp"
// Including type: VROSC.UIButton
#include "VROSC/UIButton.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: VROSC.UserDataControllers
#include "VROSC/UserDataControllers.hpp"
// Including type: VROSC.LoopStationRecorder/VROSC.RecordingState
#include "VROSC/LoopStationRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.SelectionBar _loopLengthSelectionBar
[[deprecated]] ::VROSC::SelectionBar*& VROSC::LoopStationRecordingUI::dyn__loopLengthSelectionBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::dyn__loopLengthSelectionBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopLengthSelectionBar"))->offset;
  return *reinterpret_cast<::VROSC::SelectionBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _noLoopsMode
[[deprecated]] ::UnityEngine::GameObject*& VROSC::LoopStationRecordingUI::dyn__noLoopsMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::dyn__noLoopsMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noLoopsMode"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _gotLoops
[[deprecated]] ::UnityEngine::GameObject*& VROSC::LoopStationRecordingUI::dyn__gotLoops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::dyn__gotLoops");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gotLoops"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _loopLengthAutoText
[[deprecated]] ::UnityEngine::GameObject*& VROSC::LoopStationRecordingUI::dyn__loopLengthAutoText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::dyn__loopLengthAutoText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopLengthAutoText"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationRecordingButton _recordingButton
[[deprecated]] ::VROSC::LoopStationRecordingButton*& VROSC::LoopStationRecordingUI::dyn__recordingButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::dyn__recordingButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingButton"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationRecordingButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayerRecordingState _firstLoopRecordingState
[[deprecated]] ::VROSC::LoopPlayerRecordingState*& VROSC::LoopStationRecordingUI::dyn__firstLoopRecordingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::dyn__firstLoopRecordingState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstLoopRecordingState"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayerRecordingState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UISlideToggle _overdubToggle
[[deprecated]] ::VROSC::UISlideToggle*& VROSC::LoopStationRecordingUI::dyn__overdubToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::dyn__overdubToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overdubToggle"))->offset;
  return *reinterpret_cast<::VROSC::UISlideToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UISlideToggle _matchLengthToggle
[[deprecated]] ::VROSC::UISlideToggle*& VROSC::LoopStationRecordingUI::dyn__matchLengthToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::dyn__matchLengthToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matchLengthToggle"))->offset;
  return *reinterpret_cast<::VROSC::UISlideToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIButton _rerecordButton
[[deprecated]] ::VROSC::UIButton*& VROSC::LoopStationRecordingUI::dyn__rerecordButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::dyn__rerecordButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rerecordButton"))->offset;
  return *reinterpret_cast<::VROSC::UIButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationLoopHandler/VROSC.LooperState _state
[[deprecated]] ::VROSC::LoopStationLoopHandler::LooperState& VROSC::LoopStationRecordingUI::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationLoopHandler::LooperState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationRecorder _recorder
[[deprecated]] ::VROSC::LoopStationRecorder*& VROSC::LoopStationRecordingUI::dyn__recorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::dyn__recorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recorder"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStation _loopStation
[[deprecated]] ::VROSC::LoopStation*& VROSC::LoopStationRecordingUI::dyn__loopStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::dyn__loopStation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopStation"))->offset;
  return *reinterpret_cast<::VROSC::LoopStation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationRecordingUI.get_OverDubLength
float VROSC::LoopStationRecordingUI::get_OverDubLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::get_OverDubLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverDubLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingUI.Setup
void VROSC::LoopStationRecordingUI::Setup(::VROSC::LoopStationRecorder* recorder, ::VROSC::LoopStation* loopStation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recorder), ::il2cpp_utils::ExtractType(loopStation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recorder, loopStation);
}
// Autogenerated method: VROSC.LoopStationRecordingUI.OnDestroy
void VROSC::LoopStationRecordingUI::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingUI.RecorderStateChanged
void VROSC::LoopStationRecordingUI::RecorderStateChanged(::VROSC::LoopStationRecorder::RecordingState recordingState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::RecorderStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecorderStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordingState);
}
// Autogenerated method: VROSC.LoopStationRecordingUI.GetRecordingTextByState
::StringW VROSC::LoopStationRecordingUI::GetRecordingTextByState(::VROSC::LoopStationRecorder::RecordingState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::GetRecordingTextByState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecordingTextByState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, state);
}
// Autogenerated method: VROSC.LoopStationRecordingUI.UpdateLooperState
void VROSC::LoopStationRecordingUI::UpdateLooperState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::UpdateLooperState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLooperState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingUI.ShowRerecordButton
void VROSC::LoopStationRecordingUI::ShowRerecordButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::ShowRerecordButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowRerecordButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingUI.GetOverdubLength
float VROSC::LoopStationRecordingUI::GetOverdubLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::GetOverdubLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverdubLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingUI.OverdubChanged
void VROSC::LoopStationRecordingUI::OverdubChanged(::VROSC::InputDevice* inputDevice, bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::OverdubChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OverdubChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputDevice), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputDevice, state);
}
// Autogenerated method: VROSC.LoopStationRecordingUI.MatchLengthChanged
void VROSC::LoopStationRecordingUI::MatchLengthChanged(::VROSC::InputDevice* inputDevice, bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::MatchLengthChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchLengthChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputDevice), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputDevice, state);
}
// Autogenerated method: VROSC.LoopStationRecordingUI.RerecordPressed
void VROSC::LoopStationRecordingUI::RerecordPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::RerecordPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RerecordPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingUI.UserDataLoaded
void VROSC::LoopStationRecordingUI::UserDataLoaded(::VROSC::UserDataControllers* dataControllers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingUI::UserDataLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UserDataLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataControllers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataControllers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: VROSC.MovementPlane
#include "VROSC/MovementPlane.hpp"
// Including type: VROSC.LoopStationButtons
#include "VROSC/LoopStationButtons.hpp"
// Including type: VROSC.LoopStationLoopHandler
#include "VROSC/LoopStationLoopHandler.hpp"
// Including type: VROSC.LoopStationRecorder
#include "VROSC/LoopStationRecorder.hpp"
// Including type: VROSC.LoopStationRecordingButton
#include "VROSC/LoopStationRecordingButton.hpp"
// Including type: VROSC.LoopStationGroupCore
#include "VROSC/LoopStationGroupCore.hpp"
// Including type: VROSC.TransformMover
#include "VROSC/TransformMover.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VROSC.SelectionBar
#include "VROSC/SelectionBar.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: VROSC.LoopStationSoloHandler
#include "VROSC/LoopStationSoloHandler.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VROSC.LoopStationDataController
#include "VROSC/LoopStationDataController.hpp"
// Including type: VROSC.LoopPlayer
#include "VROSC/LoopPlayer.hpp"
// Including type: VROSC.BeatCounter/VROSC.SyncSource
#include "VROSC/BeatCounter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.MovementPlane _movementPlane
[[deprecated]] ::VROSC::MovementPlane*& VROSC::LoopStation::dyn__movementPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::dyn__movementPlane");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementPlane"))->offset;
  return *reinterpret_cast<::VROSC::MovementPlane**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationButtons _buttons
[[deprecated]] ::VROSC::LoopStationButtons*& VROSC::LoopStation::dyn__buttons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::dyn__buttons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttons"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationButtons**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationLoopHandler _loopHandler
[[deprecated]] ::VROSC::LoopStationLoopHandler*& VROSC::LoopStation::dyn__loopHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::dyn__loopHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopHandler"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationLoopHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationRecorder _recorder
[[deprecated]] ::VROSC::LoopStationRecorder*& VROSC::LoopStation::dyn__recorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::dyn__recorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recorder"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationRecordingButton _recordingButton
[[deprecated]] ::VROSC::LoopStationRecordingButton*& VROSC::LoopStation::dyn__recordingButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::dyn__recordingButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingButton"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationRecordingButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationGroupCore _groups
[[deprecated]] ::VROSC::LoopStationGroupCore*& VROSC::LoopStation::dyn__groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::dyn__groups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groups"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationGroupCore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.TransformMover _mover
[[deprecated]] ::VROSC::TransformMover*& VROSC::LoopStation::dyn__mover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::dyn__mover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mover"))->offset;
  return *reinterpret_cast<::VROSC::TransformMover**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _loopLocation
[[deprecated]] ::UnityEngine::Transform*& VROSC::LoopStation::dyn__loopLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::dyn__loopLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopLocation"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _launchpadParent
[[deprecated]] ::UnityEngine::Transform*& VROSC::LoopStation::dyn__launchpadParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::dyn__launchpadParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_launchpadParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.SelectionBar _loopLengthSelectionBar
[[deprecated]] ::VROSC::SelectionBar*& VROSC::LoopStation::dyn__loopLengthSelectionBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::dyn__loopLengthSelectionBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopLengthSelectionBar"))->offset;
  return *reinterpret_cast<::VROSC::SelectionBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _loopLengthUIParent
[[deprecated]] ::UnityEngine::GameObject*& VROSC::LoopStation::dyn__loopLengthUIParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::dyn__loopLengthUIParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopLengthUIParent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationSoloHandler _soloHandler
[[deprecated]] ::VROSC::LoopStationSoloHandler*& VROSC::LoopStation::dyn__soloHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::dyn__soloHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_soloHandler"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationSoloHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Single> OnBPMSet
[[deprecated]] ::System::Action_1<float>*& VROSC::LoopStation::dyn_OnBPMSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::dyn_OnBPMSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnBPMSet"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Single> OnVolumeChanged
[[deprecated]] ::System::Action_1<float>*& VROSC::LoopStation::dyn_OnVolumeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::dyn_OnVolumeChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnVolumeChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <LongestLoopLengthSamples>k__BackingField
[[deprecated]] int& VROSC::LoopStation::dyn_$LongestLoopLengthSamples$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::dyn_$LongestLoopLengthSamples$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LongestLoopLengthSamples>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationDataController <Data>k__BackingField
[[deprecated]] ::VROSC::LoopStationDataController*& VROSC::LoopStation::dyn_$Data$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::dyn_$Data$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Data>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationDataController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsSetup>k__BackingField
[[deprecated]] bool& VROSC::LoopStation::dyn_$IsSetup$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::dyn_$IsSetup$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsSetup>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStation.get_MovementPlane
::VROSC::MovementPlane* VROSC::LoopStation::get_MovementPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::get_MovementPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MovementPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::MovementPlane*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.get_Groups
::VROSC::LoopStationGroupCore* VROSC::LoopStation::get_Groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::get_Groups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Groups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationGroupCore*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.get_LoopHandler
::VROSC::LoopStationLoopHandler* VROSC::LoopStation::get_LoopHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::get_LoopHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoopHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationLoopHandler*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.get_RecordingButton
::VROSC::LoopStationRecordingButton* VROSC::LoopStation::get_RecordingButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::get_RecordingButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecordingButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationRecordingButton*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.get_Mover
::VROSC::TransformMover* VROSC::LoopStation::get_Mover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::get_Mover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::TransformMover*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.get_LaunchPadParent
::UnityEngine::Transform* VROSC::LoopStation::get_LaunchPadParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::get_LaunchPadParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LaunchPadParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.get_LongestLoopLengthSamples
int VROSC::LoopStation::get_LongestLoopLengthSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::get_LongestLoopLengthSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LongestLoopLengthSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.set_LongestLoopLengthSamples
void VROSC::LoopStation::set_LongestLoopLengthSamples(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::set_LongestLoopLengthSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LongestLoopLengthSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStation.get_Data
::VROSC::LoopStationDataController* VROSC::LoopStation::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::get_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationDataController*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.set_Data
void VROSC::LoopStation::set_Data(::VROSC::LoopStationDataController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::set_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStation.get_IsSetup
bool VROSC::LoopStation::get_IsSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::get_IsSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.set_IsSetup
void VROSC::LoopStation::set_IsSetup(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::set_IsSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStation.Awake
void VROSC::LoopStation::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.OnDestroy
void VROSC::LoopStation::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.OnEnable
void VROSC::LoopStation::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.OnDisable
void VROSC::LoopStation::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.Setup
void VROSC::LoopStation::Setup(::VROSC::LoopStationDataController* dataController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataController);
}
// Autogenerated method: VROSC.LoopStation.CreateNewLoopByRecording
void VROSC::LoopStation::CreateNewLoopByRecording(::StringW trackId, int globalSyncStartOffset, bool overdub) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::CreateNewLoopByRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNewLoopByRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackId), ::il2cpp_utils::ExtractType(globalSyncStartOffset), ::il2cpp_utils::ExtractType(overdub)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, trackId, globalSyncStartOffset, overdub);
}
// Autogenerated method: VROSC.LoopStation.SetRecordingText
void VROSC::LoopStation::SetRecordingText(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::SetRecordingText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRecordingText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: VROSC.LoopStation.RecordingOfLoopComplete
void VROSC::LoopStation::RecordingOfLoopComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::RecordingOfLoopComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordingOfLoopComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.CancelRecording
void VROSC::LoopStation::CancelRecording(bool restart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::CancelRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(restart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, restart);
}
// Autogenerated method: VROSC.LoopStation.Rerecord
void VROSC::LoopStation::Rerecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::Rerecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rerecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.RemoveLoop
void VROSC::LoopStation::RemoveLoop(::VROSC::LoopPlayer* loopToRemove, bool fromReset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::RemoveLoop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopToRemove), ::il2cpp_utils::ExtractType(fromReset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopToRemove, fromReset);
}
// Autogenerated method: VROSC.LoopStation.ResetLoopStation
void VROSC::LoopStation::ResetLoopStation(bool keepLoopLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::ResetLoopStation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetLoopStation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keepLoopLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keepLoopLength);
}
// Autogenerated method: VROSC.LoopStation.SyncSourceChanged
void VROSC::LoopStation::SyncSourceChanged(::VROSC::BeatCounter::SyncSource syncSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::SyncSourceChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncSourceChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syncSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, syncSource);
}
// Autogenerated method: VROSC.LoopStation.IsEmpty
bool VROSC::LoopStation::IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.ShowAsPlaying
void VROSC::LoopStation::ShowAsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::ShowAsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowAsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.PlayAll
void VROSC::LoopStation::PlayAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::PlayAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.StopAll
void VROSC::LoopStation::StopAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::StopAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.DeleteAll
void VROSC::LoopStation::DeleteAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::DeleteAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.VolumeChanged
void VROSC::LoopStation::VolumeChanged(float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::VolumeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VolumeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume);
}
// Autogenerated method: VROSC.LoopStation.SetAutoRecordingLength
void VROSC::LoopStation::SetAutoRecordingLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::SetAutoRecordingLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAutoRecordingLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.GetLoopLengthSetting
float VROSC::LoopStation::GetLoopLengthSetting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::GetLoopLengthSetting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLoopLengthSetting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStation.SetRecordingLength
void VROSC::LoopStation::SetRecordingLength(float lengthInBars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::SetRecordingLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRecordingLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lengthInBars)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lengthInBars);
}
// Autogenerated method: VROSC.LoopStation.LoopStationDataLoaded
void VROSC::LoopStation::LoopStationDataLoaded(::VROSC::LoopStationDataController* dataController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::LoopStationDataLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoopStationDataLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataController);
}
// Autogenerated method: VROSC.LoopStation.LoadLaunchPads
void VROSC::LoopStation::LoadLaunchPads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStation::LoadLaunchPads");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadLaunchPads", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.GroupArranger
#include "VROSC/GroupArranger.hpp"
// Including type: VROSC.GroupArranger/VROSC.<>c
#include "VROSC/GroupArranger_--c.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VROSC.LoopStationGroup
#include "VROSC/LoopStationGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _sortArea
[[deprecated]] ::UnityEngine::RectTransform*& VROSC::GroupArranger::dyn__sortArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GroupArranger::dyn__sortArea");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sortArea"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _padding
[[deprecated]] float& VROSC::GroupArranger::dyn__padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GroupArranger::dyn__padding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_padding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _keepGroupIfLargerThanPercent
[[deprecated]] float& VROSC::GroupArranger::dyn__keepGroupIfLargerThanPercent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GroupArranger::dyn__keepGroupIfLargerThanPercent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keepGroupIfLargerThanPercent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _rightToLeft
[[deprecated]] bool& VROSC::GroupArranger::dyn__rightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GroupArranger::dyn__rightToLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightToLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _bySize
[[deprecated]] bool& VROSC::GroupArranger::dyn__bySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GroupArranger::dyn__bySize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bySize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentRowCount
[[deprecated]] int& VROSC::GroupArranger::dyn__currentRowCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GroupArranger::dyn__currentRowCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRowCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _groupWidth
[[deprecated]] float& VROSC::GroupArranger::dyn__groupWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GroupArranger::dyn__groupWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groupWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStation _loopStation
[[deprecated]] ::VROSC::LoopStation*& VROSC::GroupArranger::dyn__loopStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GroupArranger::dyn__loopStation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopStation"))->offset;
  return *reinterpret_cast<::VROSC::LoopStation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.GroupArranger.Setup
void VROSC::GroupArranger::Setup(::VROSC::LoopStation* loopStation, float groupWidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GroupArranger::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopStation), ::il2cpp_utils::ExtractType(groupWidth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStation, groupWidth);
}
// Autogenerated method: VROSC.GroupArranger.ArrangeGroups
void VROSC::GroupArranger::ArrangeGroups(::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>* groups, bool allowRowChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GroupArranger::ArrangeGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ArrangeGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groups), ::il2cpp_utils::ExtractType(allowRowChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, groups, allowRowChange);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.GroupArranger/VROSC.<>c
#include "VROSC/GroupArranger_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: VROSC.LoopStationGroup
#include "VROSC/LoopStationGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VROSC.GroupArranger/VROSC.<>c <>9
::VROSC::GroupArranger::$$c* VROSC::GroupArranger::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GroupArranger::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::VROSC::GroupArranger::$$c*>("VROSC", "GroupArranger/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly VROSC.GroupArranger/VROSC.<>c <>9
void VROSC::GroupArranger::$$c::_set_$$9(::VROSC::GroupArranger::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GroupArranger::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("VROSC", "GroupArranger/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<VROSC.LoopStationGroup,System.Int32> <>9__9_0
::System::Func_2<::VROSC::LoopStationGroup*, int>* VROSC::GroupArranger::$$c::_get_$$9__9_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GroupArranger::$$c::_get_$$9__9_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::VROSC::LoopStationGroup*, int>*>("VROSC", "GroupArranger/<>c", "<>9__9_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<VROSC.LoopStationGroup,System.Int32> <>9__9_0
void VROSC::GroupArranger::$$c::_set_$$9__9_0(::System::Func_2<::VROSC::LoopStationGroup*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GroupArranger::$$c::_set_$$9__9_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("VROSC", "GroupArranger/<>c", "<>9__9_0", value)));
}
// Autogenerated method: VROSC.GroupArranger/VROSC.<>c..cctor
void VROSC::GroupArranger::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GroupArranger::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "GroupArranger/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.GroupArranger/VROSC.<>c.<ArrangeGroups>b__9_0
int VROSC::GroupArranger::$$c::$ArrangeGroups$b__9_0(::VROSC::LoopStationGroup* i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GroupArranger::$$c::<ArrangeGroups>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ArrangeGroups>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationBaseGroupHandler
#include "VROSC/LoopStationBaseGroupHandler.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: VROSC.LoopPlayer
#include "VROSC/LoopPlayer.hpp"
// Including type: VROSC.LoopStationLoopHandler
#include "VROSC/LoopStationLoopHandler.hpp"
// Including type: VROSC.LoopStationGroup/VROSC.SetupVariables
#include "VROSC/LoopStationGroup_SetupVariables.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String BaseID
::StringW VROSC::LoopStationBaseGroupHandler::_get_BaseID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroupHandler::_get_BaseID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "LoopStationBaseGroupHandler", "BaseID"));
}
// Autogenerated static field setter
// Set static field: static public System.String BaseID
void VROSC::LoopStationBaseGroupHandler::_set_BaseID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroupHandler::_set_BaseID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopStationBaseGroupHandler", "BaseID", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.LoopStationGroup> _arrangedGroups
[[deprecated]] ::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>*& VROSC::LoopStationBaseGroupHandler::dyn__arrangedGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroupHandler::dyn__arrangedGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arrangedGroups"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _autoGroupHeader
[[deprecated]] ::UnityEngine::RectTransform*& VROSC::LoopStationBaseGroupHandler::dyn__autoGroupHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroupHandler::dyn__autoGroupHeader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_autoGroupHeader"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationGroup <BaseGroup>k__BackingField
[[deprecated]] ::VROSC::LoopStationGroup*& VROSC::LoopStationBaseGroupHandler::dyn_$BaseGroup$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroupHandler::dyn_$BaseGroup$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BaseGroup>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationBaseGroupHandler.get_BaseGroup
::VROSC::LoopStationGroup* VROSC::LoopStationBaseGroupHandler::get_BaseGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroupHandler::get_BaseGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationGroup*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationBaseGroupHandler.set_BaseGroup
void VROSC::LoopStationBaseGroupHandler::set_BaseGroup(::VROSC::LoopStationGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroupHandler::set_BaseGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BaseGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationBaseGroupHandler.AddToBaseGroup
void VROSC::LoopStationBaseGroupHandler::AddToBaseGroup(::VROSC::LoopPlayer* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroupHandler::AddToBaseGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToBaseGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: VROSC.LoopStationBaseGroupHandler.CreateGroupFromLoad
void VROSC::LoopStationBaseGroupHandler::CreateGroupFromLoad(::VROSC::LoopStationGroup::SetupVariables vars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroupHandler::CreateGroupFromLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGroupFromLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vars)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vars);
}
// Autogenerated method: VROSC.LoopStationBaseGroupHandler.AutoSort
void VROSC::LoopStationBaseGroupHandler::AutoSort(::VROSC::LoopPlayer* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroupHandler::AutoSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: VROSC.LoopStationBaseGroupHandler.FindGroupByInstrument
::VROSC::LoopStationGroup* VROSC::LoopStationBaseGroupHandler::FindGroupByInstrument(::StringW instrument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroupHandler::FindGroupByInstrument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindGroupByInstrument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instrument)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationGroup*, false>(this, ___internal__method, instrument);
}
// Autogenerated method: VROSC.LoopStationBaseGroupHandler.FindMatchingLoopsInBaseGroup
::ArrayW<::VROSC::LoopPlayer*> VROSC::LoopStationBaseGroupHandler::FindMatchingLoopsInBaseGroup(::VROSC::LoopPlayer* newPlayer, ::StringW instrument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroupHandler::FindMatchingLoopsInBaseGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindMatchingLoopsInBaseGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newPlayer), ::il2cpp_utils::ExtractType(instrument)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::VROSC::LoopPlayer*>, false>(this, ___internal__method, newPlayer, instrument);
}
// Autogenerated method: VROSC.LoopStationBaseGroupHandler.CreateNewInstrumentGroup
void VROSC::LoopStationBaseGroupHandler::CreateNewInstrumentGroup(::StringW instrument, ::ArrayW<::VROSC::LoopPlayer*> matchingLoops, ::VROSC::LoopPlayer* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroupHandler::CreateNewInstrumentGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNewInstrumentGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instrument), ::il2cpp_utils::ExtractType(matchingLoops), ::il2cpp_utils::ExtractType(newPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instrument, matchingLoops, newPlayer);
}
// Autogenerated method: VROSC.LoopStationBaseGroupHandler.AllGroupsLoaded
void VROSC::LoopStationBaseGroupHandler::AllGroupsLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroupHandler::AllGroupsLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllGroupsLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationBaseGroupHandler.Setup
void VROSC::LoopStationBaseGroupHandler::Setup(::VROSC::LoopStation* loopStation, ::VROSC::LoopStationLoopHandler* loopHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroupHandler::Setup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupHandler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStation, loopHandler);
}
// Autogenerated method: VROSC.LoopStationBaseGroupHandler.RemoveAllGroups
void VROSC::LoopStationBaseGroupHandler::RemoveAllGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroupHandler::RemoveAllGroups");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationBaseGroupHandler.RemoveGroup
void VROSC::LoopStationBaseGroupHandler::RemoveGroup(::VROSC::LoopStationGroup* group, bool fromReset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroupHandler::RemoveGroup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupHandler*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group, fromReset);
}
// Autogenerated method: VROSC.LoopStationBaseGroupHandler.SortGroups
void VROSC::LoopStationBaseGroupHandler::SortGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroupHandler::SortGroups");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationGroupCore
#include "VROSC/LoopStationGroupCore.hpp"
// Including type: VROSC.LoopStationBaseGroupHandler
#include "VROSC/LoopStationBaseGroupHandler.hpp"
// Including type: VROSC.LoopStationUserGroupHandler
#include "VROSC/LoopStationUserGroupHandler.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VROSC.LoopStationGroup
#include "VROSC/LoopStationGroup.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: VROSC.LoopStationLoopHandler
#include "VROSC/LoopStationLoopHandler.hpp"
// Including type: VROSC.LoopPlayer
#include "VROSC/LoopPlayer.hpp"
// Including type: VROSC.LoopStationDataController
#include "VROSC/LoopStationDataController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationBaseGroupHandler _baseGroups
[[deprecated]] ::VROSC::LoopStationBaseGroupHandler*& VROSC::LoopStationGroupCore::dyn__baseGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::dyn__baseGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseGroups"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationBaseGroupHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationUserGroupHandler _userGroups
[[deprecated]] ::VROSC::LoopStationUserGroupHandler*& VROSC::LoopStationGroupCore::dyn__userGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::dyn__userGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userGroups"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationUserGroupHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.LoopStationGroup> <Groups>k__BackingField
[[deprecated]] ::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>*& VROSC::LoopStationGroupCore::dyn_$Groups$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::dyn_$Groups$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Groups>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.LoopStationGroup> OnGroupCreated
[[deprecated]] ::System::Action_1<::VROSC::LoopStationGroup*>*& VROSC::LoopStationGroupCore::dyn_OnGroupCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::dyn_OnGroupCreated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnGroupCreated"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::LoopStationGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.LoopStationGroup> OnGroupRemoved
[[deprecated]] ::System::Action_1<::VROSC::LoopStationGroup*>*& VROSC::LoopStationGroupCore::dyn_OnGroupRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::dyn_OnGroupRemoved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnGroupRemoved"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::LoopStationGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationGroupCore.get_BaseGroups
::VROSC::LoopStationBaseGroupHandler* VROSC::LoopStationGroupCore::get_BaseGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::get_BaseGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationBaseGroupHandler*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupCore.get_UserGroups
::VROSC::LoopStationUserGroupHandler* VROSC::LoopStationGroupCore::get_UserGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::get_UserGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationUserGroupHandler*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupCore.get_Groups
::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>* VROSC::LoopStationGroupCore::get_Groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::get_Groups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Groups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupCore.set_Groups
void VROSC::LoopStationGroupCore::set_Groups(::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::set_Groups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Groups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationGroupCore.get_BaseGroup
::VROSC::LoopStationGroup* VROSC::LoopStationGroupCore::get_BaseGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::get_BaseGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationGroup*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupCore.Awake
void VROSC::LoopStationGroupCore::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupCore.OnDestroy
void VROSC::LoopStationGroupCore::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupCore.Setup
void VROSC::LoopStationGroupCore::Setup(::VROSC::LoopStation* loopStation, ::VROSC::LoopStationLoopHandler* loopHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopStation), ::il2cpp_utils::ExtractType(loopHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStation, loopHandler);
}
// Autogenerated method: VROSC.LoopStationGroupCore.AddToBaseGroup
void VROSC::LoopStationGroupCore::AddToBaseGroup(::VROSC::LoopPlayer* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::AddToBaseGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToBaseGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: VROSC.LoopStationGroupCore.CreateGroups
void VROSC::LoopStationGroupCore::CreateGroups(::VROSC::LoopStationDataController* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::CreateGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: VROSC.LoopStationGroupCore.GetGroupByID
::VROSC::LoopStationGroup* VROSC::LoopStationGroupCore::GetGroupByID(::StringW groupID, bool defaultToBaseGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::GetGroupByID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGroupByID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupID), ::il2cpp_utils::ExtractType(defaultToBaseGroup)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationGroup*, false>(this, ___internal__method, groupID, defaultToBaseGroup);
}
// Autogenerated method: VROSC.LoopStationGroupCore.RemoveAllGroups
void VROSC::LoopStationGroupCore::RemoveAllGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::RemoveAllGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAllGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupCore.GroupRemoved
void VROSC::LoopStationGroupCore::GroupRemoved(::VROSC::LoopStationGroup* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::GroupRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GroupRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group);
}
// Autogenerated method: VROSC.LoopStationGroupCore.GroupCreated
void VROSC::LoopStationGroupCore::GroupCreated(::VROSC::LoopStationGroup* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::GroupCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GroupCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group);
}
// Autogenerated method: VROSC.LoopStationGroupCore.AllLoopsLoaded
void VROSC::LoopStationGroupCore::AllLoopsLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::AllLoopsLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllLoopsLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationGroupHandler
#include "VROSC/LoopStationGroupHandler.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VROSC.LoopStationGroup/VROSC.SetupVariables
#include "VROSC/LoopStationGroup_SetupVariables.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VROSC.GroupArranger
#include "VROSC/GroupArranger.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: VROSC.LoopStationLoopHandler
#include "VROSC/LoopStationLoopHandler.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<VROSC.LoopStationGroup> _groups
[[deprecated]] ::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>*& VROSC::LoopStationGroupHandler::dyn__groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::dyn__groups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groups"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VROSC.LoopStationGroup _groupPrefab
[[deprecated]] ::VROSC::LoopStationGroup*& VROSC::LoopStationGroupHandler::dyn__groupPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::dyn__groupPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groupPrefab"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform _groupParent
[[deprecated]] ::UnityEngine::Transform*& VROSC::LoopStationGroupHandler::dyn__groupParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::dyn__groupParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groupParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VROSC.GroupArranger _arranger
[[deprecated]] ::VROSC::GroupArranger*& VROSC::LoopStationGroupHandler::dyn__arranger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::dyn__arranger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arranger"))->offset;
  return *reinterpret_cast<::VROSC::GroupArranger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _autoSorted
[[deprecated]] bool& VROSC::LoopStationGroupHandler::dyn__autoSorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::dyn__autoSorted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_autoSorted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _needsSorting
[[deprecated]] bool& VROSC::LoopStationGroupHandler::dyn__needsSorting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::dyn__needsSorting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_needsSorting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VROSC.LoopStation _loopStation
[[deprecated]] ::VROSC::LoopStation*& VROSC::LoopStationGroupHandler::dyn__loopStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::dyn__loopStation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopStation"))->offset;
  return *reinterpret_cast<::VROSC::LoopStation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VROSC.LoopStationLoopHandler _loopHandler
[[deprecated]] ::VROSC::LoopStationLoopHandler*& VROSC::LoopStationGroupHandler::dyn__loopHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::dyn__loopHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopHandler"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationLoopHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.LoopStationGroup> OnGroupCreated
[[deprecated]] ::System::Action_1<::VROSC::LoopStationGroup*>*& VROSC::LoopStationGroupHandler::dyn_OnGroupCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::dyn_OnGroupCreated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnGroupCreated"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::LoopStationGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.LoopStationGroup> OnGroupRemoved
[[deprecated]] ::System::Action_1<::VROSC::LoopStationGroup*>*& VROSC::LoopStationGroupHandler::dyn_OnGroupRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::dyn_OnGroupRemoved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnGroupRemoved"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::LoopStationGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationGroupHandler.get_Groups
::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>* VROSC::LoopStationGroupHandler::get_Groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::get_Groups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Groups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupHandler.Setup
void VROSC::LoopStationGroupHandler::Setup(::VROSC::LoopStation* loopStation, ::VROSC::LoopStationLoopHandler* loopHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::Setup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupHandler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStation, loopHandler);
}
// Autogenerated method: VROSC.LoopStationGroupHandler.CreateGroup
::VROSC::LoopStationGroup* VROSC::LoopStationGroupHandler::CreateGroup(::VROSC::LoopStationGroup::SetupVariables vars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::CreateGroup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationGroup*, false>(this, ___internal__method, vars);
}
// Autogenerated method: VROSC.LoopStationGroupHandler.RemoveGroup
void VROSC::LoopStationGroupHandler::RemoveGroup(::VROSC::LoopStationGroup* group, bool fromReset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::RemoveGroup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupHandler*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group, fromReset);
}
// Autogenerated method: VROSC.LoopStationGroupHandler.OnLoopCountChanged
void VROSC::LoopStationGroupHandler::OnLoopCountChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::OnLoopCountChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLoopCountChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupHandler.LateUpdate
void VROSC::LoopStationGroupHandler::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupHandler.GetGroupByID
::VROSC::LoopStationGroup* VROSC::LoopStationGroupHandler::GetGroupByID(::StringW groupID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::GetGroupByID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGroupByID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupID)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationGroup*, false>(this, ___internal__method, groupID);
}
// Autogenerated method: VROSC.LoopStationGroupHandler.SortGroups
void VROSC::LoopStationGroupHandler::SortGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::SortGroups");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupHandler.RemoveAllGroups
void VROSC::LoopStationGroupHandler::RemoveAllGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::RemoveAllGroups");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationUserGroupHandler
#include "VROSC/LoopStationUserGroupHandler.hpp"
// Including type: VROSC.LoopStationBaseGroupHandler
#include "VROSC/LoopStationBaseGroupHandler.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: VROSC.UIButton
#include "VROSC/UIButton.hpp"
// Including type: VROSC.UISlideToggle
#include "VROSC/UISlideToggle.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
// Including type: VROSC.LoopPlayer
#include "VROSC/LoopPlayer.hpp"
// Including type: VROSC.LoopPlaybackConfigOverride
#include "VROSC/LoopPlaybackConfigOverride.hpp"
// Including type: VROSC.LoopStationDataController
#include "VROSC/LoopStationDataController.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: VROSC.LoopStationLoopHandler
#include "VROSC/LoopStationLoopHandler.hpp"
// Including type: VROSC.LoopStationGroup/VROSC.SetupVariables
#include "VROSC/LoopStationGroup_SetupVariables.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationBaseGroupHandler _baseGroupHandler
[[deprecated]] ::VROSC::LoopStationBaseGroupHandler*& VROSC::LoopStationUserGroupHandler::dyn__baseGroupHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::dyn__baseGroupHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseGroupHandler"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationBaseGroupHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _sortArea
[[deprecated]] ::UnityEngine::RectTransform*& VROSC::LoopStationUserGroupHandler::dyn__sortArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::dyn__sortArea");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sortArea"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _padding
[[deprecated]] float& VROSC::LoopStationUserGroupHandler::dyn__padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::dyn__padding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_padding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _autoGroupHeader
[[deprecated]] ::UnityEngine::RectTransform*& VROSC::LoopStationUserGroupHandler::dyn__autoGroupHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::dyn__autoGroupHeader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_autoGroupHeader"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIButton _addGroupButton
[[deprecated]] ::VROSC::UIButton*& VROSC::LoopStationUserGroupHandler::dyn__addGroupButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::dyn__addGroupButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_addGroupButton"))->offset;
  return *reinterpret_cast<::VROSC::UIButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UISlideToggle _arrangeGroups
[[deprecated]] ::VROSC::UISlideToggle*& VROSC::LoopStationUserGroupHandler::dyn__arrangeGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::dyn__arrangeGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arrangeGroups"))->offset;
  return *reinterpret_cast<::VROSC::UISlideToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _groupNameCounter
[[deprecated]] int& VROSC::LoopStationUserGroupHandler::dyn__groupNameCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::dyn__groupNameCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groupNameCounter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationUserGroupHandler.Awake
void VROSC::LoopStationUserGroupHandler::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationUserGroupHandler.OnEnable
void VROSC::LoopStationUserGroupHandler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationUserGroupHandler.UpdateButtonsActiveState
void VROSC::LoopStationUserGroupHandler::UpdateButtonsActiveState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::UpdateButtonsActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateButtonsActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationUserGroupHandler.ArrangeChanged
void VROSC::LoopStationUserGroupHandler::ArrangeChanged(::VROSC::InputDevice* device, bool autoSortActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::ArrangeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ArrangeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(autoSortActive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device, autoSortActive);
}
// Autogenerated method: VROSC.LoopStationUserGroupHandler.OnAddGroupButtonClicked
void VROSC::LoopStationUserGroupHandler::OnAddGroupButtonClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::OnAddGroupButtonClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAddGroupButtonClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationUserGroupHandler.CreateNewUserGroup
::VROSC::LoopStationGroup* VROSC::LoopStationUserGroupHandler::CreateNewUserGroup(::VROSC::LoopPlaybackConfigOverride* playbackConfig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::CreateNewUserGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNewUserGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackConfig)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationGroup*, false>(this, ___internal__method, playbackConfig);
}
// Autogenerated method: VROSC.LoopStationUserGroupHandler.CreateGroupFromLoad
void VROSC::LoopStationUserGroupHandler::CreateGroupFromLoad(::VROSC::LoopStationDataController* data, ::VROSC::LoopStationGroup::SetupVariables vars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::CreateGroupFromLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGroupFromLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(vars)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, vars);
}
// Autogenerated method: VROSC.LoopStationUserGroupHandler.ShowGroupMenu
void VROSC::LoopStationUserGroupHandler::ShowGroupMenu(::VROSC::LoopPlayer* loopPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::ShowGroupMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowGroupMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopPlayer);
}
// Autogenerated method: VROSC.LoopStationUserGroupHandler.SetAutoGroupingActive
void VROSC::LoopStationUserGroupHandler::SetAutoGroupingActive(bool autoSortUserGroups) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::SetAutoGroupingActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAutoGroupingActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(autoSortUserGroups)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, autoSortUserGroups);
}
// Autogenerated method: VROSC.LoopStationUserGroupHandler.Setup
void VROSC::LoopStationUserGroupHandler::Setup(::VROSC::LoopStation* loopStation, ::VROSC::LoopStationLoopHandler* loopHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::Setup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupHandler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStation, loopHandler);
}
// Autogenerated method: VROSC.LoopStationUserGroupHandler.CreateGroup
::VROSC::LoopStationGroup* VROSC::LoopStationUserGroupHandler::CreateGroup(::VROSC::LoopStationGroup::SetupVariables vars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::CreateGroup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationGroup*, false>(this, ___internal__method, vars);
}
// Autogenerated method: VROSC.LoopStationUserGroupHandler.RemoveGroup
void VROSC::LoopStationUserGroupHandler::RemoveGroup(::VROSC::LoopStationGroup* group, bool fromReset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::RemoveGroup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupHandler*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group, fromReset);
}
// Autogenerated method: VROSC.LoopStationUserGroupHandler.RemoveAllGroups
void VROSC::LoopStationUserGroupHandler::RemoveAllGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::RemoveAllGroups");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationUserGroupHandler.SortGroups
void VROSC::LoopStationUserGroupHandler::SortGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroupHandler::SortGroups");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationGroupMover
#include "VROSC/LoopStationGroupMover.hpp"
// Including type: VROSC.LoopStationGroupMover/VROSC.<MoveGroupFlow>d__10
#include "VROSC/LoopStationGroupMover_-MoveGroupFlow-d__10.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: VROSC.LoopStationGroup
#include "VROSC/LoopStationGroup.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _moveDuration
[[deprecated]] float& VROSC::LoopStationGroupMover::dyn__moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::dyn__moveDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _moveCurve
[[deprecated]] ::UnityEngine::AnimationCurve*& VROSC::LoopStationGroupMover::dyn__moveCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::dyn__moveCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shortMoveDistance
[[deprecated]] float& VROSC::LoopStationGroupMover::dyn__shortMoveDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::dyn__shortMoveDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shortMoveDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shortMoveDuration
[[deprecated]] float& VROSC::LoopStationGroupMover::dyn__shortMoveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::dyn__shortMoveDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shortMoveDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _moveOutDistance
[[deprecated]] float& VROSC::LoopStationGroupMover::dyn__moveOutDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::dyn__moveOutDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveOutDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _zCurve
[[deprecated]] ::UnityEngine::AnimationCurve*& VROSC::LoopStationGroupMover::dyn__zCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::dyn__zCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStation _loopStation
[[deprecated]] ::VROSC::LoopStation*& VROSC::LoopStationGroupMover::dyn__loopStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::dyn__loopStation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopStation"))->offset;
  return *reinterpret_cast<::VROSC::LoopStation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationGroup _group
[[deprecated]] ::VROSC::LoopStationGroup*& VROSC::LoopStationGroupMover::dyn__group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::dyn__group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_group"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationGroupMover.Setup
void VROSC::LoopStationGroupMover::Setup(::VROSC::LoopStationGroup* group, ::VROSC::LoopStation* loopStation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(loopStation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group, loopStation);
}
// Autogenerated method: VROSC.LoopStationGroupMover.MoveGroup
void VROSC::LoopStationGroupMover::MoveGroup(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to, float zmultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::MoveGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(zmultiplier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to, zmultiplier);
}
// Autogenerated method: VROSC.LoopStationGroupMover.MoveGroupFlow
::System::Collections::IEnumerator* VROSC::LoopStationGroupMover::MoveGroupFlow(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to, float zmultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::MoveGroupFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveGroupFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(zmultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, from, to, zmultiplier);
}
// Autogenerated method: VROSC.LoopStationGroupMover.MoveComplete
void VROSC::LoopStationGroupMover::MoveComplete(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::MoveComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.LoopStationGroupMover/VROSC.<MoveGroupFlow>d__10
#include "VROSC/LoopStationGroupMover_-MoveGroupFlow-d__10.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated]] ::Il2CppObject*& VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.LoopStationGroupMover <>4__this
[[deprecated]] ::VROSC::LoopStationGroupMover*& VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationGroupMover**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 from
[[deprecated]] ::UnityEngine::Vector3& VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_from() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_from");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "from"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 to
[[deprecated]] ::UnityEngine::Vector3& VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_to() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_to");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "to"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single zmultiplier
[[deprecated]] float& VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_zmultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_zmultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zmultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <time>5__2
[[deprecated]] float& VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_$time$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_$time$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<time>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <parent>5__3
[[deprecated]] ::UnityEngine::Transform*& VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_$parent$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_$parent$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<parent>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <localStartPosition>5__4
[[deprecated]] ::UnityEngine::Vector3& VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_$localStartPosition$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_$localStartPosition$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<localStartPosition>5__4"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <localEndPosition>5__5
[[deprecated]] ::UnityEngine::Vector3& VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_$localEndPosition$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_$localEndPosition$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<localEndPosition>5__5"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <duration>5__6
[[deprecated]] float& VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_$duration$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::dyn_$duration$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<duration>5__6"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationGroupMover/VROSC.<MoveGroupFlow>d__10.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupMover/VROSC.<MoveGroupFlow>d__10.System.Collections.IEnumerator.get_Current
::Il2CppObject* VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupMover/VROSC.<MoveGroupFlow>d__10.System.IDisposable.Dispose
void VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupMover/VROSC.<MoveGroupFlow>d__10.MoveNext
bool VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupMover/VROSC.<MoveGroupFlow>d__10.System.Collections.IEnumerator.Reset
void VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupMover::$MoveGroupFlow$d__10*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopListArranger
#include "VROSC/LoopListArranger.hpp"
// Including type: VROSC.LoopListArranger/VROSC.<>c
#include "VROSC/LoopListArranger_--c.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: VROSC.LoopStationGroup
#include "VROSC/LoopStationGroup.hpp"
// Including type: VROSC.LoopPlayer
#include "VROSC/LoopPlayer.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _onlyAllowRearrangeOfLoops
[[deprecated]] bool& VROSC::LoopListArranger::dyn__onlyAllowRearrangeOfLoops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::dyn__onlyAllowRearrangeOfLoops");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onlyAllowRearrangeOfLoops"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _loopHeightOffset
[[deprecated]] float& VROSC::LoopListArranger::dyn__loopHeightOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::dyn__loopHeightOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopHeightOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _dropPositionPreview
[[deprecated]] ::UnityEngine::RectTransform*& VROSC::LoopListArranger::dyn__dropPositionPreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::dyn__dropPositionPreview");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dropPositionPreview"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _loopsParent
[[deprecated]] ::UnityEngine::Transform*& VROSC::LoopListArranger::dyn__loopsParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::dyn__loopsParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopsParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStation _loopStation
[[deprecated]] ::VROSC::LoopStation*& VROSC::LoopListArranger::dyn__loopStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::dyn__loopStation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopStation"))->offset;
  return *reinterpret_cast<::VROSC::LoopStation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationGroup _owner
[[deprecated]] ::VROSC::LoopStationGroup*& VROSC::LoopListArranger::dyn__owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::dyn__owner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_owner"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayer _hoveringingPlayer
[[deprecated]] ::VROSC::LoopPlayer*& VROSC::LoopListArranger::dyn__hoveringingPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::dyn__hoveringingPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoveringingPlayer"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sortNeeded
[[deprecated]] bool& VROSC::LoopListArranger::dyn__sortNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::dyn__sortNeeded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sortNeeded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _dataShouldUpdate
[[deprecated]] bool& VROSC::LoopListArranger::dyn__dataShouldUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::dyn__dataShouldUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataShouldUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnSortComplete
[[deprecated]] ::System::Action*& VROSC::LoopListArranger::dyn_OnSortComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::dyn_OnSortComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnSortComplete"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopListArranger.get_ListHeight
float VROSC::LoopListArranger::get_ListHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::get_ListHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopListArranger.get_OnlyAllowRearrangeOfLoops
bool VROSC::LoopListArranger::get_OnlyAllowRearrangeOfLoops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::get_OnlyAllowRearrangeOfLoops");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnlyAllowRearrangeOfLoops", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopListArranger.Setup
void VROSC::LoopListArranger::Setup(::VROSC::LoopStationGroup* loopStationGroup, ::VROSC::LoopStation* loopStation, ::UnityEngine::Transform* loopsParent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopStationGroup), ::il2cpp_utils::ExtractType(loopStation), ::il2cpp_utils::ExtractType(loopsParent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStationGroup, loopStation, loopsParent);
}
// Autogenerated method: VROSC.LoopListArranger.OnDestroy
void VROSC::LoopListArranger::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopListArranger.SetHovering
void VROSC::LoopListArranger::SetHovering(::VROSC::LoopPlayer* hoveringPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::SetHovering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHovering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hoveringPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hoveringPlayer);
}
// Autogenerated method: VROSC.LoopListArranger.Update
void VROSC::LoopListArranger::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopListArranger.LoopCountChanged
void VROSC::LoopListArranger::LoopCountChanged(::VROSC::LoopPlayer* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::LoopCountChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoopCountChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: VROSC.LoopListArranger.Changed
void VROSC::LoopListArranger::Changed(bool alsoUpdateData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::Changed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Changed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alsoUpdateData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alsoUpdateData);
}
// Autogenerated method: VROSC.LoopListArranger.SortLoops
void VROSC::LoopListArranger::SortLoops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::SortLoops");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortLoops", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopListArranger.GetListHeight
float VROSC::LoopListArranger::GetListHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::GetListHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetListHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopListArranger.GetListIndexByPosition
int VROSC::LoopListArranger::GetListIndexByPosition(::VROSC::LoopPlayer* loopPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::GetListIndexByPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetListIndexByPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, loopPlayer);
}
// Autogenerated method: VROSC.LoopListArranger.GetLooperPositionByOrderInList
::UnityEngine::Vector3 VROSC::LoopListArranger::GetLooperPositionByOrderInList(int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::GetLooperPositionByOrderInList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLooperPositionByOrderInList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, order);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopListArranger/VROSC.<>c
#include "VROSC/LoopListArranger_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: VROSC.LoopPlayer
#include "VROSC/LoopPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VROSC.LoopListArranger/VROSC.<>c <>9
::VROSC::LoopListArranger::$$c* VROSC::LoopListArranger::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::VROSC::LoopListArranger::$$c*>("VROSC", "LoopListArranger/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly VROSC.LoopListArranger/VROSC.<>c <>9
void VROSC::LoopListArranger::$$c::_set_$$9(::VROSC::LoopListArranger::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("VROSC", "LoopListArranger/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<VROSC.LoopPlayer> <>9__20_0
::System::Comparison_1<::VROSC::LoopPlayer*>* VROSC::LoopListArranger::$$c::_get_$$9__20_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::$$c::_get_$$9__20_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::VROSC::LoopPlayer*>*>("VROSC", "LoopListArranger/<>c", "<>9__20_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<VROSC.LoopPlayer> <>9__20_0
void VROSC::LoopListArranger::$$c::_set_$$9__20_0(::System::Comparison_1<::VROSC::LoopPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::$$c::_set_$$9__20_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("VROSC", "LoopListArranger/<>c", "<>9__20_0", value)));
}
// Autogenerated method: VROSC.LoopListArranger/VROSC.<>c..cctor
void VROSC::LoopListArranger::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "LoopListArranger/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.LoopListArranger/VROSC.<>c.<SortLoops>b__20_0
int VROSC::LoopListArranger::$$c::$SortLoops$b__20_0(::VROSC::LoopPlayer* a, ::VROSC::LoopPlayer* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopListArranger::$$c::<SortLoops>b__20_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortLoops>b__20_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationBaseGroup
#include "VROSC/LoopStationBaseGroup.hpp"
// Including type: VROSC.TransformMoverRelay
#include "VROSC/TransformMoverRelay.hpp"
// Including type: VROSC.UIButton
#include "VROSC/UIButton.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: VROSC.LoopStationGroupHandler
#include "VROSC/LoopStationGroupHandler.hpp"
// Including type: VROSC.LoopPlayer
#include "VROSC/LoopPlayer.hpp"
// Including type: VROSC.LoopStationGroup/VROSC.SetupVariables
#include "VROSC/LoopStationGroup_SetupVariables.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.TransformMoverRelay _moverRelay
[[deprecated]] ::VROSC::TransformMoverRelay*& VROSC::LoopStationBaseGroup::dyn__moverRelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroup::dyn__moverRelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moverRelay"))->offset;
  return *reinterpret_cast<::VROSC::TransformMoverRelay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIButton _convertButton
[[deprecated]] ::VROSC::UIButton*& VROSC::LoopStationBaseGroup::dyn__convertButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroup::dyn__convertButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_convertButton"))->offset;
  return *reinterpret_cast<::VROSC::UIButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _objectsToDisable
[[deprecated]] ::ArrayW<::UnityEngine::GameObject*>& VROSC::LoopStationBaseGroup::dyn__objectsToDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroup::dyn__objectsToDisable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectsToDisable"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isTheUngroupedGroup
[[deprecated]] bool& VROSC::LoopStationBaseGroup::dyn__isTheUngroupedGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroup::dyn__isTheUngroupedGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isTheUngroupedGroup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationBaseGroup.Awake
void VROSC::LoopStationBaseGroup::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroup::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationBaseGroup.ConvertToUserGroupButtonPressed
void VROSC::LoopStationBaseGroup::ConvertToUserGroupButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroup::ConvertToUserGroupButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToUserGroupButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationBaseGroup.SetAsTheUngroupedGroup
void VROSC::LoopStationBaseGroup::SetAsTheUngroupedGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroup::SetAsTheUngroupedGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAsTheUngroupedGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationBaseGroup.Setup
void VROSC::LoopStationBaseGroup::Setup(::VROSC::LoopStation* loopStation, ::VROSC::LoopStationGroupHandler* handler, ::VROSC::LoopStationGroup::SetupVariables vars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroup::Setup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroup*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStation, handler, vars);
}
// Autogenerated method: VROSC.LoopStationBaseGroup.RemoveLoop
void VROSC::LoopStationBaseGroup::RemoveLoop(::VROSC::LoopPlayer* loopPlayer, bool byGrab, bool fromReset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroup::RemoveLoop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroup*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopPlayer, byGrab, fromReset);
}
// Autogenerated method: VROSC.LoopStationBaseGroup.UpdateGroupVisibility
void VROSC::LoopStationBaseGroup::UpdateGroupVisibility(bool byGrab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationBaseGroup::UpdateGroupVisibility");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroup*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byGrab);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationGroup
#include "VROSC/LoopStationGroup.hpp"
// Including type: VROSC.LoopStationGroup/VROSC.SetupVariables
#include "VROSC/LoopStationGroup_SetupVariables.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VROSC.LoopPlayer
#include "VROSC/LoopPlayer.hpp"
// Including type: VROSC.LoopStationGroupHandler
#include "VROSC/LoopStationGroupHandler.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: VROSC.LoopStationGroupMover
#include "VROSC/LoopStationGroupMover.hpp"
// Including type: VROSC.LoopListArranger
#include "VROSC/LoopListArranger.hpp"
// Including type: VROSC.LoopStationGroupUI
#include "VROSC/LoopStationGroupUI.hpp"
// Including type: VROSC.InteractionDisabler
#include "VROSC/InteractionDisabler.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: VROSC.LoopPlaybackConfigOverride
#include "VROSC/LoopPlaybackConfigOverride.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: VROSC.TransformDataController
#include "VROSC/TransformDataController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Color DefaultGroupColor
::UnityEngine::Color VROSC::LoopStationGroup::_get_DefaultGroupColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::_get_DefaultGroupColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("VROSC", "LoopStationGroup", "DefaultGroupColor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Color DefaultGroupColor
void VROSC::LoopStationGroup::_set_DefaultGroupColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::_set_DefaultGroupColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopStationGroup", "DefaultGroupColor", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <RowInAutoArrange>k__BackingField
[[deprecated]] int& VROSC::LoopStationGroup::dyn_$RowInAutoArrange$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::dyn_$RowInAutoArrange$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RowInAutoArrange>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <GroupID>k__BackingField
[[deprecated]] ::StringW& VROSC::LoopStationGroup::dyn_$GroupID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::dyn_$GroupID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GroupID>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.LoopPlayer> <LoopPlayers>k__BackingField
[[deprecated]] ::System::Collections::Generic::List_1<::VROSC::LoopPlayer*>*& VROSC::LoopStationGroup::dyn_$LoopPlayers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::dyn_$LoopPlayers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LoopPlayers>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::LoopPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationGroupHandler <Handler>k__BackingField
[[deprecated]] ::VROSC::LoopStationGroupHandler*& VROSC::LoopStationGroup::dyn_$Handler$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::dyn_$Handler$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handler>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationGroupHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider _dropZone
[[deprecated]] ::UnityEngine::Collider*& VROSC::LoopStationGroup::dyn__dropZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::dyn__dropZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dropZone"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _loopsParent
[[deprecated]] ::UnityEngine::Transform*& VROSC::LoopStationGroup::dyn__loopsParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::dyn__loopsParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopsParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _menuRect
[[deprecated]] ::UnityEngine::RectTransform*& VROSC::LoopStationGroup::dyn__menuRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::dyn__menuRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuRect"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _dimensions
[[deprecated]] ::UnityEngine::RectTransform*& VROSC::LoopStationGroup::dyn__dimensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::dyn__dimensions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dimensions"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationGroupMover _autoMover
[[deprecated]] ::VROSC::LoopStationGroupMover*& VROSC::LoopStationGroup::dyn__autoMover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::dyn__autoMover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_autoMover"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationGroupMover**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopListArranger _arranger
[[deprecated]] ::VROSC::LoopListArranger*& VROSC::LoopStationGroup::dyn__arranger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::dyn__arranger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arranger"))->offset;
  return *reinterpret_cast<::VROSC::LoopListArranger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationGroupUI _ui
[[deprecated]] ::VROSC::LoopStationGroupUI*& VROSC::LoopStationGroup::dyn__ui() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::dyn__ui");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ui"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationGroupUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.InteractionDisabler _disabler
[[deprecated]] ::VROSC::InteractionDisabler*& VROSC::LoopStationGroup::dyn__disabler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::dyn__disabler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabler"))->offset;
  return *reinterpret_cast<::VROSC::InteractionDisabler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<VROSC.LoopStationGroup,System.Boolean> OnGroupRemoved
[[deprecated]] ::System::Action_2<::VROSC::LoopStationGroup*, bool>*& VROSC::LoopStationGroup::dyn_OnGroupRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::dyn_OnGroupRemoved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnGroupRemoved"))->offset;
  return *reinterpret_cast<::System::Action_2<::VROSC::LoopStationGroup*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.LoopPlayer> OnLoopAdded
[[deprecated]] ::System::Action_1<::VROSC::LoopPlayer*>*& VROSC::LoopStationGroup::dyn_OnLoopAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::dyn_OnLoopAdded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnLoopAdded"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::LoopPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.LoopPlayer> OnLoopRemoved
[[deprecated]] ::System::Action_1<::VROSC::LoopPlayer*>*& VROSC::LoopStationGroup::dyn_OnLoopRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::dyn_OnLoopRemoved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnLoopRemoved"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::LoopPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnGroupSizeChanged
[[deprecated]] ::System::Action*& VROSC::LoopStationGroup::dyn_OnGroupSizeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::dyn_OnGroupSizeChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnGroupSizeChanged"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<VROSC.LoopStationGroup,System.Boolean> OnSoloChanged
[[deprecated]] ::System::Action_2<::VROSC::LoopStationGroup*, bool>*& VROSC::LoopStationGroup::dyn_OnSoloChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::dyn_OnSoloChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnSoloChanged"))->offset;
  return *reinterpret_cast<::System::Action_2<::VROSC::LoopStationGroup*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VROSC.LoopStation _loopStation
[[deprecated]] ::VROSC::LoopStation*& VROSC::LoopStationGroup::dyn__loopStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::dyn__loopStation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopStation"))->offset;
  return *reinterpret_cast<::VROSC::LoopStation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationGroup.get_Dimensions
::UnityEngine::RectTransform* VROSC::LoopStationGroup::get_Dimensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::get_Dimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Dimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup.get_RowInAutoArrange
int VROSC::LoopStationGroup::get_RowInAutoArrange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::get_RowInAutoArrange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RowInAutoArrange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup.set_RowInAutoArrange
void VROSC::LoopStationGroup::set_RowInAutoArrange(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::set_RowInAutoArrange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RowInAutoArrange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationGroup.get_GroupID
::StringW VROSC::LoopStationGroup::get_GroupID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::get_GroupID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GroupID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup.set_GroupID
void VROSC::LoopStationGroup::set_GroupID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::set_GroupID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GroupID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationGroup.get_LoopPlayers
::System::Collections::Generic::List_1<::VROSC::LoopPlayer*>* VROSC::LoopStationGroup::get_LoopPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::get_LoopPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoopPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::VROSC::LoopPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup.set_LoopPlayers
void VROSC::LoopStationGroup::set_LoopPlayers(::System::Collections::Generic::List_1<::VROSC::LoopPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::set_LoopPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LoopPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationGroup.get_Handler
::VROSC::LoopStationGroupHandler* VROSC::LoopStationGroup::get_Handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::get_Handler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationGroupHandler*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup.set_Handler
void VROSC::LoopStationGroup::set_Handler(::VROSC::LoopStationGroupHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::set_Handler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Handler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationGroup.get_DropZone
::UnityEngine::Collider* VROSC::LoopStationGroup::get_DropZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::get_DropZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DropZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup.get_Loops
int VROSC::LoopStationGroup::get_Loops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::get_Loops");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Loops", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup.get_IsEmpty
bool VROSC::LoopStationGroup::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::get_IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup.get_Volume
float VROSC::LoopStationGroup::get_Volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::get_Volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup.get_IsMuted
bool VROSC::LoopStationGroup::get_IsMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::get_IsMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup.get_AutoMover
::VROSC::LoopStationGroupMover* VROSC::LoopStationGroup::get_AutoMover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::get_AutoMover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutoMover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationGroupMover*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup.get_PlaybackConfig
::VROSC::LoopPlaybackConfigOverride* VROSC::LoopStationGroup::get_PlaybackConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::get_PlaybackConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlaybackConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlaybackConfigOverride*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup.get_LoopsCanOnlyBeRearranged
bool VROSC::LoopStationGroup::get_LoopsCanOnlyBeRearranged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::get_LoopsCanOnlyBeRearranged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoopsCanOnlyBeRearranged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup.Setup
void VROSC::LoopStationGroup::Setup(::VROSC::LoopStation* loopStation, ::VROSC::LoopStationGroupHandler* handler, ::VROSC::LoopStationGroup::SetupVariables vars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::Setup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroup*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStation, handler, vars);
}
// Autogenerated method: VROSC.LoopStationGroup.SetAutoSorted
void VROSC::LoopStationGroup::SetAutoSorted(bool autoSorted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetAutoSorted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroup*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, autoSorted);
}
// Autogenerated method: VROSC.LoopStationGroup.SetInteractableDuringAnimation
void VROSC::LoopStationGroup::SetInteractableDuringAnimation(bool interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetInteractableDuringAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInteractableDuringAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: VROSC.LoopStationGroup.OnDestroy
void VROSC::LoopStationGroup::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroup*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup.SetHovering
void VROSC::LoopStationGroup::SetHovering(::VROSC::LoopPlayer* hoveringPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetHovering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHovering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hoveringPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hoveringPlayer);
}
// Autogenerated method: VROSC.LoopStationGroup.SetVolumeOfGroup
void VROSC::LoopStationGroup::SetVolumeOfGroup(float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetVolumeOfGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVolumeOfGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume);
}
// Autogenerated method: VROSC.LoopStationGroup.AddLoop
void VROSC::LoopStationGroup::AddLoop(::VROSC::LoopPlayer* newPlayer, bool considerPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::AddLoop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newPlayer), ::il2cpp_utils::ExtractType(considerPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer, considerPosition);
}
// Autogenerated method: VROSC.LoopStationGroup.AddLoopByLoad
void VROSC::LoopStationGroup::AddLoopByLoad(::VROSC::LoopPlayer* newPlayer, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::AddLoopByLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLoopByLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newPlayer), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer, position);
}
// Autogenerated method: VROSC.LoopStationGroup.AddLoopShared
void VROSC::LoopStationGroup::AddLoopShared(::VROSC::LoopPlayer* newPlayer, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::AddLoopShared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLoopShared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newPlayer), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer, position);
}
// Autogenerated method: VROSC.LoopStationGroup.OnLoadComplete
void VROSC::LoopStationGroup::OnLoadComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::OnLoadComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLoadComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup.OnLoopDeleted
void VROSC::LoopStationGroup::OnLoopDeleted(::VROSC::LoopPlayer* loopPlayer, bool fromReset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::OnLoopDeleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLoopDeleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopPlayer), ::il2cpp_utils::ExtractType(fromReset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopPlayer, fromReset);
}
// Autogenerated method: VROSC.LoopStationGroup.RemoveLoop
void VROSC::LoopStationGroup::RemoveLoop(::VROSC::LoopPlayer* loopPlayer, bool byGrab, bool fromReset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::RemoveLoop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroup*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopPlayer, byGrab, fromReset);
}
// Autogenerated method: VROSC.LoopStationGroup.UpdateSize
void VROSC::LoopStationGroup::UpdateSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::UpdateSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup.SaveGroupPosition
void VROSC::LoopStationGroup::SaveGroupPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SaveGroupPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveGroupPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup.HasTrack
bool VROSC::LoopStationGroup::HasTrack(::StringW trackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::HasTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, trackId);
}
// Autogenerated method: VROSC.LoopStationGroup.UpdateGroupVisibility
void VROSC::LoopStationGroup::UpdateGroupVisibility(bool byGrab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::UpdateGroupVisibility");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroup*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byGrab);
}
// Autogenerated method: VROSC.LoopStationGroup.GetLooperPositionByOrderInList
::UnityEngine::Vector3 VROSC::LoopStationGroup::GetLooperPositionByOrderInList(int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::GetLooperPositionByOrderInList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLooperPositionByOrderInList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, order);
}
// Autogenerated method: VROSC.LoopStationGroup.GetFirstLoop
::VROSC::LoopPlayer* VROSC::LoopStationGroup::GetFirstLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::GetFirstLoop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup.GetLoopPlayerWithLongestLoop
::VROSC::LoopPlayer* VROSC::LoopStationGroup::GetLoopPlayerWithLongestLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::GetLoopPlayerWithLongestLoop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLoopPlayerWithLongestLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup.LoadLaunchPad
void VROSC::LoopStationGroup::LoadLaunchPad(::StringW padID, ::VROSC::TransformDataController* transformData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::LoadLaunchPad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadLaunchPad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(padID), ::il2cpp_utils::ExtractType(transformData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, padID, transformData);
}
// Autogenerated method: VROSC.LoopStationGroup..cctor
void VROSC::LoopStationGroup::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "LoopStationGroup", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationGroup/VROSC.SetupVariables
#include "VROSC/LoopStationGroup_SetupVariables.hpp"
// Including type: VROSC.LoopPlaybackConfigOverride
#include "VROSC/LoopPlaybackConfigOverride.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <GroupID>k__BackingField
[[deprecated]] ::StringW& VROSC::LoopStationGroup::SetupVariables::dyn_$GroupID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::dyn_$GroupID$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GroupID>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <DisplayName>k__BackingField
[[deprecated]] ::StringW& VROSC::LoopStationGroup::SetupVariables::dyn_$DisplayName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::dyn_$DisplayName$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DisplayName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <Volume>k__BackingField
[[deprecated]] float& VROSC::LoopStationGroup::SetupVariables::dyn_$Volume$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::dyn_$Volume$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Volume>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Muted>k__BackingField
[[deprecated]] bool& VROSC::LoopStationGroup::SetupVariables::dyn_$Muted$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::dyn_$Muted$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Muted>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Solo>k__BackingField
[[deprecated]] bool& VROSC::LoopStationGroup::SetupVariables::dyn_$Solo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::dyn_$Solo$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Solo>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <Color>k__BackingField
[[deprecated]] ::UnityEngine::Color& VROSC::LoopStationGroup::SetupVariables::dyn_$Color$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::dyn_$Color$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Color>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlaybackConfigOverride <PlaybackConfig>k__BackingField
[[deprecated]] ::VROSC::LoopPlaybackConfigOverride*& VROSC::LoopStationGroup::SetupVariables::dyn_$PlaybackConfig$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::dyn_$PlaybackConfig$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlaybackConfig>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackConfigOverride**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationGroup/VROSC.SetupVariables.get_GroupID
::StringW VROSC::LoopStationGroup::SetupVariables::get_GroupID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::get_GroupID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_GroupID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup/VROSC.SetupVariables.set_GroupID
void VROSC::LoopStationGroup::SetupVariables::set_GroupID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::set_GroupID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_GroupID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationGroup/VROSC.SetupVariables.get_DisplayName
::StringW VROSC::LoopStationGroup::SetupVariables::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::get_DisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup/VROSC.SetupVariables.set_DisplayName
void VROSC::LoopStationGroup::SetupVariables::set_DisplayName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::set_DisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_DisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationGroup/VROSC.SetupVariables.get_Volume
float VROSC::LoopStationGroup::SetupVariables::get_Volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::get_Volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup/VROSC.SetupVariables.set_Volume
void VROSC::LoopStationGroup::SetupVariables::set_Volume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::set_Volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationGroup/VROSC.SetupVariables.get_Muted
bool VROSC::LoopStationGroup::SetupVariables::get_Muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::get_Muted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Muted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup/VROSC.SetupVariables.set_Muted
void VROSC::LoopStationGroup::SetupVariables::set_Muted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::set_Muted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Muted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationGroup/VROSC.SetupVariables.get_Solo
bool VROSC::LoopStationGroup::SetupVariables::get_Solo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::get_Solo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Solo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup/VROSC.SetupVariables.set_Solo
void VROSC::LoopStationGroup::SetupVariables::set_Solo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::set_Solo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Solo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationGroup/VROSC.SetupVariables.get_Color
::UnityEngine::Color VROSC::LoopStationGroup::SetupVariables::get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::get_Color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup/VROSC.SetupVariables.set_Color
void VROSC::LoopStationGroup::SetupVariables::set_Color(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::set_Color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationGroup/VROSC.SetupVariables.get_PlaybackConfig
::VROSC::LoopPlaybackConfigOverride* VROSC::LoopStationGroup::SetupVariables::get_PlaybackConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::get_PlaybackConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_PlaybackConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlaybackConfigOverride*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroup/VROSC.SetupVariables.set_PlaybackConfig
void VROSC::LoopStationGroup::SetupVariables::set_PlaybackConfig(::VROSC::LoopPlaybackConfigOverride* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::set_PlaybackConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_PlaybackConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationGroup/VROSC.SetupVariables..ctor
VROSC::LoopStationGroup::SetupVariables::SetupVariables(::StringW groupID, ::StringW displayName, float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupID), ::il2cpp_utils::ExtractType(displayName), ::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, groupID, displayName, volume);
}
// Autogenerated method: VROSC.LoopStationGroup/VROSC.SetupVariables..ctor
VROSC::LoopStationGroup::SetupVariables::SetupVariables(::StringW groupID, ::StringW displayName, float volume, bool muted, bool solo, ::VROSC::LoopPlaybackConfigOverride* playbackConfig, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroup::SetupVariables::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupID), ::il2cpp_utils::ExtractType(displayName), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(muted), ::il2cpp_utils::ExtractType(solo), ::il2cpp_utils::ExtractType(playbackConfig), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, groupID, displayName, volume, muted, solo, playbackConfig, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationGroupPlaybackUI
#include "VROSC/LoopStationGroupPlaybackUI.hpp"
// Including type: VROSC.OverridePlaybackSettingsUI
#include "VROSC/OverridePlaybackSettingsUI.hpp"
// Including type: VROSC.LoopPlayButton
#include "VROSC/LoopPlayButton.hpp"
// Including type: VROSC.LoopPlaybackConfigOverride
#include "VROSC/LoopPlaybackConfigOverride.hpp"
// Including type: VROSC.LoopStationGroup
#include "VROSC/LoopStationGroup.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: VROSC.LoopPlayer
#include "VROSC/LoopPlayer.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.OverridePlaybackSettingsUI _overridePlaybackSettingsUI
[[deprecated]] ::VROSC::OverridePlaybackSettingsUI*& VROSC::LoopStationGroupPlaybackUI::dyn__overridePlaybackSettingsUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::dyn__overridePlaybackSettingsUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overridePlaybackSettingsUI"))->offset;
  return *reinterpret_cast<::VROSC::OverridePlaybackSettingsUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayButton _playButton
[[deprecated]] ::VROSC::LoopPlayButton*& VROSC::LoopStationGroupPlaybackUI::dyn__playButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::dyn__playButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playButton"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlaybackConfigOverride <PlaybackConfig>k__BackingField
[[deprecated]] ::VROSC::LoopPlaybackConfigOverride*& VROSC::LoopStationGroupPlaybackUI::dyn_$PlaybackConfig$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::dyn_$PlaybackConfig$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlaybackConfig>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackConfigOverride**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationGroup _loopGroup
[[deprecated]] ::VROSC::LoopStationGroup*& VROSC::LoopStationGroupPlaybackUI::dyn__loopGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::dyn__loopGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopGroup"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStation _loopStation
[[deprecated]] ::VROSC::LoopStation*& VROSC::LoopStationGroupPlaybackUI::dyn__loopStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::dyn__loopStation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopStation"))->offset;
  return *reinterpret_cast<::VROSC::LoopStation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayer _firstLoopPlayer
[[deprecated]] ::VROSC::LoopPlayer*& VROSC::LoopStationGroupPlaybackUI::dyn__firstLoopPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::dyn__firstLoopPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstLoopPlayer"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayer _longestLoopPlayer
[[deprecated]] ::VROSC::LoopPlayer*& VROSC::LoopStationGroupPlaybackUI::dyn__longestLoopPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::dyn__longestLoopPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_longestLoopPlayer"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _shouldUpdatePlayback
[[deprecated]] bool& VROSC::LoopStationGroupPlaybackUI::dyn__shouldUpdatePlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::dyn__shouldUpdatePlayback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shouldUpdatePlayback"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationGroupPlaybackUI.get_PlaybackConfig
::VROSC::LoopPlaybackConfigOverride* VROSC::LoopStationGroupPlaybackUI::get_PlaybackConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::get_PlaybackConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlaybackConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlaybackConfigOverride*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupPlaybackUI.set_PlaybackConfig
void VROSC::LoopStationGroupPlaybackUI::set_PlaybackConfig(::VROSC::LoopPlaybackConfigOverride* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::set_PlaybackConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlaybackConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationGroupPlaybackUI.Setup
void VROSC::LoopStationGroupPlaybackUI::Setup(::VROSC::LoopStation* loopStation, ::VROSC::LoopStationGroup* loopGroup, ::VROSC::LoopPlaybackConfigOverride* configOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopStation), ::il2cpp_utils::ExtractType(loopGroup), ::il2cpp_utils::ExtractType(configOverride)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStation, loopGroup, configOverride);
}
// Autogenerated method: VROSC.LoopStationGroupPlaybackUI.LoopAdded
void VROSC::LoopStationGroupPlaybackUI::LoopAdded(::VROSC::LoopPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::LoopAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoopAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: VROSC.LoopStationGroupPlaybackUI.LoopRemoved
void VROSC::LoopStationGroupPlaybackUI::LoopRemoved(::VROSC::LoopPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::LoopRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoopRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: VROSC.LoopStationGroupPlaybackUI.Update
void VROSC::LoopStationGroupPlaybackUI::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupPlaybackUI.UpdatePlayback
void VROSC::LoopStationGroupPlaybackUI::UpdatePlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::UpdatePlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupPlaybackUI.SetPlaybackConfig
void VROSC::LoopStationGroupPlaybackUI::SetPlaybackConfig(::VROSC::LoopPlaybackConfigOverride* playbackOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::SetPlaybackConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlaybackConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackOverride)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playbackOverride);
}
// Autogenerated method: VROSC.LoopStationGroupPlaybackUI.OnDestroy
void VROSC::LoopStationGroupPlaybackUI::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupPlaybackUI.ConfigChanged
void VROSC::LoopStationGroupPlaybackUI::ConfigChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::ConfigChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupPlaybackUI.PlayToggled
void VROSC::LoopStationGroupPlaybackUI::PlayToggled(bool play) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::PlayToggled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayToggled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(play)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, play);
}
// Autogenerated method: VROSC.LoopStationGroupPlaybackUI.GetLongestLoopCurrentlyPlaying
::VROSC::LoopPlayer* VROSC::LoopStationGroupPlaybackUI::GetLongestLoopCurrentlyPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::GetLongestLoopCurrentlyPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLongestLoopCurrentlyPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupPlaybackUI.SetColor
void VROSC::LoopStationGroupPlaybackUI::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupPlaybackUI::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationGroupUI
#include "VROSC/LoopStationGroupUI.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: VROSC.LoopVolumeController
#include "VROSC/LoopVolumeController.hpp"
// Including type: VROSC.UIButton
#include "VROSC/UIButton.hpp"
// Including type: VROSC.LoopStationGroupPlaybackUI
#include "VROSC/LoopStationGroupPlaybackUI.hpp"
// Including type: VROSC.LoopStationLaunchpadHandler
#include "VROSC/LoopStationLaunchpadHandler.hpp"
// Including type: VROSC.InteractionDisabler
#include "VROSC/InteractionDisabler.hpp"
// Including type: VROSC.UIColorPicker
#include "VROSC/UIColorPicker.hpp"
// Including type: VROSC.AdjustableMesh
#include "VROSC/AdjustableMesh.hpp"
// Including type: VROSC.TransformDataController
#include "VROSC/TransformDataController.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: VROSC.LoopPlaybackConfigOverride
#include "VROSC/LoopPlaybackConfigOverride.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: VROSC.LoopStationGroup/VROSC.SetupVariables
#include "VROSC/LoopStationGroup_SetupVariables.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <DisplayName>k__BackingField
[[deprecated]] ::StringW& VROSC::LoopStationGroupUI::dyn_$DisplayName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::dyn_$DisplayName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DisplayName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro _groupName
[[deprecated]] ::TMPro::TextMeshPro*& VROSC::LoopStationGroupUI::dyn__groupName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::dyn__groupName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groupName"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _ifEmptyState
[[deprecated]] ::UnityEngine::GameObject*& VROSC::LoopStationGroupUI::dyn__ifEmptyState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::dyn__ifEmptyState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ifEmptyState"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopVolumeController _volumeController
[[deprecated]] ::VROSC::LoopVolumeController*& VROSC::LoopStationGroupUI::dyn__volumeController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::dyn__volumeController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volumeController"))->offset;
  return *reinterpret_cast<::VROSC::LoopVolumeController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIButton _renameButton
[[deprecated]] ::VROSC::UIButton*& VROSC::LoopStationGroupUI::dyn__renameButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::dyn__renameButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renameButton"))->offset;
  return *reinterpret_cast<::VROSC::UIButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationGroupPlaybackUI _playBackUI
[[deprecated]] ::VROSC::LoopStationGroupPlaybackUI*& VROSC::LoopStationGroupUI::dyn__playBackUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::dyn__playBackUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playBackUI"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationGroupPlaybackUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationLaunchpadHandler _launchpadHandler
[[deprecated]] ::VROSC::LoopStationLaunchpadHandler*& VROSC::LoopStationGroupUI::dyn__launchpadHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::dyn__launchpadHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_launchpadHandler"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationLaunchpadHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.InteractionDisabler _disabler
[[deprecated]] ::VROSC::InteractionDisabler*& VROSC::LoopStationGroupUI::dyn__disabler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::dyn__disabler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabler"))->offset;
  return *reinterpret_cast<::VROSC::InteractionDisabler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIColorPicker _colorPicker
[[deprecated]] ::VROSC::UIColorPicker*& VROSC::LoopStationGroupUI::dyn__colorPicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::dyn__colorPicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorPicker"))->offset;
  return *reinterpret_cast<::VROSC::UIColorPicker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.AdjustableMesh _background
[[deprecated]] ::VROSC::AdjustableMesh*& VROSC::LoopStationGroupUI::dyn__background() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::dyn__background");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_background"))->offset;
  return *reinterpret_cast<::VROSC::AdjustableMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationGroup _owner
[[deprecated]] ::VROSC::LoopStationGroup*& VROSC::LoopStationGroupUI::dyn__owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::dyn__owner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_owner"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStation _loopStation
[[deprecated]] ::VROSC::LoopStation*& VROSC::LoopStationGroupUI::dyn__loopStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::dyn__loopStation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopStation"))->offset;
  return *reinterpret_cast<::VROSC::LoopStation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationGroupUI.get_Volume
float VROSC::LoopStationGroupUI::get_Volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::get_Volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupUI.get_IsMuted
bool VROSC::LoopStationGroupUI::get_IsMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::get_IsMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupUI.get_DisplayName
::StringW VROSC::LoopStationGroupUI::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::get_DisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupUI.set_DisplayName
void VROSC::LoopStationGroupUI::set_DisplayName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::set_DisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoopStationGroupUI.get_PlaybackConfig
::VROSC::LoopPlaybackConfigOverride* VROSC::LoopStationGroupUI::get_PlaybackConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::get_PlaybackConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlaybackConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlaybackConfigOverride*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupUI.Awake
void VROSC::LoopStationGroupUI::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupUI.OnDestroy
void VROSC::LoopStationGroupUI::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupUI.Setup
void VROSC::LoopStationGroupUI::Setup(::VROSC::LoopStationGroup* owner, ::VROSC::LoopStation* loopStation, ::VROSC::LoopStationGroup::SetupVariables vars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::Setup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupUI*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, owner, loopStation, vars);
}
// Autogenerated method: VROSC.LoopStationGroupUI.SetInteractable
void VROSC::LoopStationGroupUI::SetInteractable(bool interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::SetInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: VROSC.LoopStationGroupUI.SetVolumeOfGroup
void VROSC::LoopStationGroupUI::SetVolumeOfGroup(float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::SetVolumeOfGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVolumeOfGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume);
}
// Autogenerated method: VROSC.LoopStationGroupUI.GroupVolumeChanged
void VROSC::LoopStationGroupUI::GroupVolumeChanged(float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::GroupVolumeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GroupVolumeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume);
}
// Autogenerated method: VROSC.LoopStationGroupUI.MuteChanged
void VROSC::LoopStationGroupUI::MuteChanged(bool mute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::MuteChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MuteChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mute);
}
// Autogenerated method: VROSC.LoopStationGroupUI.SoloChanged
void VROSC::LoopStationGroupUI::SoloChanged(bool soloOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::SoloChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SoloChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soloOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, soloOn);
}
// Autogenerated method: VROSC.LoopStationGroupUI.GlobalVolumeChanged
void VROSC::LoopStationGroupUI::GlobalVolumeChanged(float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::GlobalVolumeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GlobalVolumeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume);
}
// Autogenerated method: VROSC.LoopStationGroupUI.UpdateVolumeOfAllGroups
void VROSC::LoopStationGroupUI::UpdateVolumeOfAllGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::UpdateVolumeOfAllGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVolumeOfAllGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupUI.ShowAsEmpty
void VROSC::LoopStationGroupUI::ShowAsEmpty(bool shouldLookEmpty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::ShowAsEmpty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroupUI*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shouldLookEmpty);
}
// Autogenerated method: VROSC.LoopStationGroupUI.RenameButtonPressed
void VROSC::LoopStationGroupUI::RenameButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::RenameButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenameButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupUI.SetText
void VROSC::LoopStationGroupUI::SetText(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: VROSC.LoopStationGroupUI.KeyboardClosed
void VROSC::LoopStationGroupUI::KeyboardClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::KeyboardClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyboardClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationGroupUI.LoadLaunchPad
void VROSC::LoopStationGroupUI::LoadLaunchPad(::StringW padID, ::VROSC::TransformDataController* transformData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::LoadLaunchPad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadLaunchPad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(padID), ::il2cpp_utils::ExtractType(transformData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, padID, transformData);
}
// Autogenerated method: VROSC.LoopStationGroupUI.SetColor
void VROSC::LoopStationGroupUI::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: VROSC.LoopStationGroupUI.Update
void VROSC::LoopStationGroupUI::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupUI::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationLaunchpadHandler
#include "VROSC/LoopStationLaunchpadHandler.hpp"
// Including type: VROSC.LaunchpadSpawner
#include "VROSC/LaunchpadSpawner.hpp"
// Including type: VROSC.LoopPlayButton
#include "VROSC/LoopPlayButton.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: VROSC.LoopPlaybackConfig
#include "VROSC/LoopPlaybackConfig.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: VROSC.TransformDataController
#include "VROSC/TransformDataController.hpp"
// Including type: VROSC.Launchpad
#include "VROSC/Launchpad.hpp"
// Including type: VROSC.PlayButtonLaunchpad
#include "VROSC/PlayButtonLaunchpad.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.LaunchpadSpawner _launchpadSpawner
[[deprecated]] ::VROSC::LaunchpadSpawner*& VROSC::LoopStationLaunchpadHandler::dyn__launchpadSpawner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLaunchpadHandler::dyn__launchpadSpawner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_launchpadSpawner"))->offset;
  return *reinterpret_cast<::VROSC::LaunchpadSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayButton _playButton
[[deprecated]] ::VROSC::LoopPlayButton*& VROSC::LoopStationLaunchpadHandler::dyn__playButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLaunchpadHandler::dyn__playButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playButton"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStation _loopStation
[[deprecated]] ::VROSC::LoopStation*& VROSC::LoopStationLaunchpadHandler::dyn__loopStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLaunchpadHandler::dyn__loopStation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopStation"))->offset;
  return *reinterpret_cast<::VROSC::LoopStation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isGroup
[[deprecated]] bool& VROSC::LoopStationLaunchpadHandler::dyn__isGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLaunchpadHandler::dyn__isGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isGroup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlaybackConfig _config
[[deprecated]] ::VROSC::LoopPlaybackConfig*& VROSC::LoopStationLaunchpadHandler::dyn__config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLaunchpadHandler::dyn__config");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_config"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationLaunchpadHandler.get_LaunchpadSpawner
::VROSC::LaunchpadSpawner* VROSC::LoopStationLaunchpadHandler::get_LaunchpadSpawner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLaunchpadHandler::get_LaunchpadSpawner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LaunchpadSpawner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LaunchpadSpawner*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationLaunchpadHandler.Awake
void VROSC::LoopStationLaunchpadHandler::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLaunchpadHandler::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationLaunchpadHandler.OnDestroy
void VROSC::LoopStationLaunchpadHandler::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLaunchpadHandler::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationLaunchpadHandler.Setup
void VROSC::LoopStationLaunchpadHandler::Setup(::StringW targetID, bool isGroup, ::VROSC::LoopStation* loopStation, ::StringW displayName, ::VROSC::LoopPlaybackConfig* config) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLaunchpadHandler::Setup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationLaunchpadHandler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetID, isGroup, loopStation, displayName, config);
}
// Autogenerated method: VROSC.LoopStationLaunchpadHandler.SetName
void VROSC::LoopStationLaunchpadHandler::SetName(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLaunchpadHandler::SetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: VROSC.LoopStationLaunchpadHandler.SetColor
void VROSC::LoopStationLaunchpadHandler::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLaunchpadHandler::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: VROSC.LoopStationLaunchpadHandler.LoadLaunchPad
void VROSC::LoopStationLaunchpadHandler::LoadLaunchPad(::StringW padID, ::VROSC::TransformDataController* transformData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLaunchpadHandler::LoadLaunchPad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadLaunchPad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(padID), ::il2cpp_utils::ExtractType(transformData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, padID, transformData);
}
// Autogenerated method: VROSC.LoopStationLaunchpadHandler.LaunchPadDeleted
void VROSC::LoopStationLaunchpadHandler::LaunchPadDeleted(::VROSC::Launchpad* launchpad) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLaunchpadHandler::LaunchPadDeleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchPadDeleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(launchpad)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, launchpad);
}
// Autogenerated method: VROSC.LoopStationLaunchpadHandler.LaunchPadMoved
void VROSC::LoopStationLaunchpadHandler::LaunchPadMoved(::VROSC::Launchpad* launchpad) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLaunchpadHandler::LaunchPadMoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchPadMoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(launchpad)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, launchpad);
}
// Autogenerated method: VROSC.LoopStationLaunchpadHandler.LaunchPadCreated
void VROSC::LoopStationLaunchpadHandler::LaunchPadCreated(::VROSC::Launchpad* launchpad) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLaunchpadHandler::LaunchPadCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchPadCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(launchpad)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, launchpad);
}
// Autogenerated method: VROSC.LoopStationLaunchpadHandler.AssignToPlayButtonLaunchpad
void VROSC::LoopStationLaunchpadHandler::AssignToPlayButtonLaunchpad(::VROSC::PlayButtonLaunchpad* launchpad) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLaunchpadHandler::AssignToPlayButtonLaunchpad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignToPlayButtonLaunchpad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(launchpad)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, launchpad);
}
// Autogenerated method: VROSC.LoopStationLaunchpadHandler.LaunchPadHit
void VROSC::LoopStationLaunchpadHandler::LaunchPadHit(::VROSC::Launchpad* launchpad) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLaunchpadHandler::LaunchPadHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchPadHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(launchpad)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, launchpad);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationUserGroup
#include "VROSC/LoopStationUserGroup.hpp"
// Including type: VROSC.UIHoldButton
#include "VROSC/UIHoldButton.hpp"
// Including type: VROSC.MoveOnPlane
#include "VROSC/MoveOnPlane.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: VROSC.LoopStationGroupHandler
#include "VROSC/LoopStationGroupHandler.hpp"
// Including type: VROSC.LoopStationGroup/VROSC.SetupVariables
#include "VROSC/LoopStationGroup_SetupVariables.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.UIHoldButton _removeButton
[[deprecated]] ::VROSC::UIHoldButton*& VROSC::LoopStationUserGroup::dyn__removeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroup::dyn__removeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_removeButton"))->offset;
  return *reinterpret_cast<::VROSC::UIHoldButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.MoveOnPlane _mover
[[deprecated]] ::VROSC::MoveOnPlane*& VROSC::LoopStationUserGroup::dyn__mover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroup::dyn__mover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mover"))->offset;
  return *reinterpret_cast<::VROSC::MoveOnPlane**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationUserGroup.Awake
void VROSC::LoopStationUserGroup::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroup::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationUserGroup.OnGrabEnd
void VROSC::LoopStationUserGroup::OnGrabEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroup::OnGrabEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGrabEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationUserGroup.RemovePressed
void VROSC::LoopStationUserGroup::RemovePressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroup::RemovePressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemovePressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationUserGroup.Setup
void VROSC::LoopStationUserGroup::Setup(::VROSC::LoopStation* loopStation, ::VROSC::LoopStationGroupHandler* handler, ::VROSC::LoopStationGroup::SetupVariables vars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroup::Setup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroup*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStation, handler, vars);
}
// Autogenerated method: VROSC.LoopStationUserGroup.OnDestroy
void VROSC::LoopStationUserGroup::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroup::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroup*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationUserGroup.SetAutoSorted
void VROSC::LoopStationUserGroup::SetAutoSorted(bool autoSorted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationUserGroup::SetAutoSorted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopStationGroup*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, autoSorted);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationInitializer
#include "VROSC/LoopStationInitializer.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxLoopStations
int VROSC::LoopStationInitializer::_get_MaxLoopStations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationInitializer::_get_MaxLoopStations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("VROSC", "LoopStationInitializer", "MaxLoopStations"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxLoopStations
void VROSC::LoopStationInitializer::_set_MaxLoopStations(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationInitializer::_set_MaxLoopStations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopStationInitializer", "MaxLoopStations", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider _collider
[[deprecated]] ::UnityEngine::Collider*& VROSC::LoopStationInitializer::dyn__collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationInitializer::dyn__collider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationInitializer.MoveBackRecursive
void VROSC::LoopStationInitializer::MoveBackRecursive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationInitializer::MoveBackRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveBackRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationInitializer.GetLoopStationParentRecursive
bool VROSC::LoopStationInitializer::GetLoopStationParentRecursive(::UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationInitializer::GetLoopStationParentRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLoopStationParentRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated method: VROSC.LoopStationInitializer.NodeBegin
void VROSC::LoopStationInitializer::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationInitializer::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationRecordingLengths
#include "VROSC/LoopStationRecordingLengths.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] _possibleLoopLengths
::ArrayW<::StringW> VROSC::LoopStationRecordingLengths::_get__possibleLoopLengths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingLengths::_get__possibleLoopLengths");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("VROSC", "LoopStationRecordingLengths", "_possibleLoopLengths"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] _possibleLoopLengths
void VROSC::LoopStationRecordingLengths::_set__possibleLoopLengths(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingLengths::_set__possibleLoopLengths");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopStationRecordingLengths", "_possibleLoopLengths", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single[] _parsedLoopLengths
::ArrayW<float> VROSC::LoopStationRecordingLengths::_get__parsedLoopLengths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingLengths::_get__parsedLoopLengths");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("VROSC", "LoopStationRecordingLengths", "_parsedLoopLengths"));
}
// Autogenerated static field setter
// Set static field: static private System.Single[] _parsedLoopLengths
void VROSC::LoopStationRecordingLengths::_set__parsedLoopLengths(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingLengths::_set__parsedLoopLengths");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopStationRecordingLengths", "_parsedLoopLengths", value));
}
// Autogenerated method: VROSC.LoopStationRecordingLengths.get_PossibleLoopLengthNames
::ArrayW<::StringW> VROSC::LoopStationRecordingLengths::get_PossibleLoopLengthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingLengths::get_PossibleLoopLengthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "LoopStationRecordingLengths", "get_PossibleLoopLengthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingLengths.get_PossibleLoopLengths
::ArrayW<float> VROSC::LoopStationRecordingLengths::get_PossibleLoopLengths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingLengths::get_PossibleLoopLengths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "LoopStationRecordingLengths", "get_PossibleLoopLengths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingLengths.get_MaxLoopLengthBars
float VROSC::LoopStationRecordingLengths::get_MaxLoopLengthBars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingLengths::get_MaxLoopLengthBars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "LoopStationRecordingLengths", "get_MaxLoopLengthBars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingLengths..cctor
void VROSC::LoopStationRecordingLengths::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingLengths::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "LoopStationRecordingLengths", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.LoopStationRecordingLengths.GetIndexOfLength
int VROSC::LoopStationRecordingLengths::GetIndexOfLength(float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationRecordingLengths::GetIndexOfLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "LoopStationRecordingLengths", "GetIndexOfLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.LoopStationSoloHandler
#include "VROSC/LoopStationSoloHandler.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: VROSC.LoopStationLoopHandler
#include "VROSC/LoopStationLoopHandler.hpp"
// Including type: VROSC.LoopStationGroupCore
#include "VROSC/LoopStationGroupCore.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VROSC.LoopPlayer
#include "VROSC/LoopPlayer.hpp"
// Including type: VROSC.LoopStationGroup
#include "VROSC/LoopStationGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStation _loopStation
[[deprecated]] ::VROSC::LoopStation*& VROSC::LoopStationSoloHandler::dyn__loopStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationSoloHandler::dyn__loopStation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopStation"))->offset;
  return *reinterpret_cast<::VROSC::LoopStation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationLoopHandler _loopHandler
[[deprecated]] ::VROSC::LoopStationLoopHandler*& VROSC::LoopStationSoloHandler::dyn__loopHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationSoloHandler::dyn__loopHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopHandler"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationLoopHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStationGroupCore _loopGroupCore
[[deprecated]] ::VROSC::LoopStationGroupCore*& VROSC::LoopStationSoloHandler::dyn__loopGroupCore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationSoloHandler::dyn__loopGroupCore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopGroupCore"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationGroupCore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.LoopPlayer> _soloTracks
[[deprecated]] ::System::Collections::Generic::List_1<::VROSC::LoopPlayer*>*& VROSC::LoopStationSoloHandler::dyn__soloTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationSoloHandler::dyn__soloTracks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_soloTracks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::LoopPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.LoopPlayer> _loops
[[deprecated]] ::System::Collections::Generic::List_1<::VROSC::LoopPlayer*>*& VROSC::LoopStationSoloHandler::dyn__loops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationSoloHandler::dyn__loops");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loops"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::LoopPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.LoopStationGroup> _groups
[[deprecated]] ::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>*& VROSC::LoopStationSoloHandler::dyn__groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationSoloHandler::dyn__groups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groups"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.LoopStationGroup> _soloGroups
[[deprecated]] ::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>*& VROSC::LoopStationSoloHandler::dyn__soloGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationSoloHandler::dyn__soloGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_soloGroups"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationSoloHandler.LoopRecorded
void VROSC::LoopStationSoloHandler::LoopRecorded(::VROSC::LoopPlayer* newLoop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationSoloHandler::LoopRecorded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoopRecorded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newLoop)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newLoop);
}
// Autogenerated method: VROSC.LoopStationSoloHandler.LoopDestroyed
void VROSC::LoopStationSoloHandler::LoopDestroyed(::VROSC::LoopPlayer* loopToDestroy, bool fromReset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationSoloHandler::LoopDestroyed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoopDestroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopToDestroy), ::il2cpp_utils::ExtractType(fromReset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopToDestroy, fromReset);
}
// Autogenerated method: VROSC.LoopStationSoloHandler.UpdateAllTracks
void VROSC::LoopStationSoloHandler::UpdateAllTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationSoloHandler::UpdateAllTracks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAllTracks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationSoloHandler.LoopSoloChanged
void VROSC::LoopStationSoloHandler::LoopSoloChanged(::VROSC::LoopPlayer* loopPlayer, bool soloEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationSoloHandler::LoopSoloChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoopSoloChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopPlayer), ::il2cpp_utils::ExtractType(soloEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopPlayer, soloEnabled);
}
// Autogenerated method: VROSC.LoopStationSoloHandler.GroupSoloChanged
void VROSC::LoopStationSoloHandler::GroupSoloChanged(::VROSC::LoopStationGroup* group, bool soloEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationSoloHandler::GroupSoloChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GroupSoloChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(soloEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group, soloEnabled);
}
// Autogenerated method: VROSC.LoopStationSoloHandler.GroupCreated
void VROSC::LoopStationSoloHandler::GroupCreated(::VROSC::LoopStationGroup* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationSoloHandler::GroupCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GroupCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group);
}
// Autogenerated method: VROSC.LoopStationSoloHandler.GroupRemoved
void VROSC::LoopStationSoloHandler::GroupRemoved(::VROSC::LoopStationGroup* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationSoloHandler::GroupRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GroupRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group);
}
// Autogenerated method: VROSC.LoopStationSoloHandler.LoopIsInASoloGroup
bool VROSC::LoopStationSoloHandler::LoopIsInASoloGroup(::VROSC::LoopPlayer* loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationSoloHandler::LoopIsInASoloGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoopIsInASoloGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, loop);
}
// Autogenerated method: VROSC.LoopStationSoloHandler.Finalize
void VROSC::LoopStationSoloHandler::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationSoloHandler::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopPlayerAutoMover
#include "VROSC/LoopPlayerAutoMover.hpp"
// Including type: VROSC.LoopPlayerAutoMover/VROSC.<MovePlayerFlow>d__7
#include "VROSC/LoopPlayerAutoMover_-MovePlayerFlow-d__7.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: VROSC.LoopPlayer
#include "VROSC/LoopPlayer.hpp"
// Including type: VROSC.LoopStationGroup
#include "VROSC/LoopStationGroup.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _moveDuration
[[deprecated]] float& VROSC::LoopPlayerAutoMover::dyn__moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::dyn__moveDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _moveCurve
[[deprecated]] ::UnityEngine::AnimationCurve*& VROSC::LoopPlayerAutoMover::dyn__moveCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::dyn__moveCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _moveOutDistance
[[deprecated]] float& VROSC::LoopPlayerAutoMover::dyn__moveOutDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::dyn__moveOutDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveOutDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _zCurve
[[deprecated]] ::UnityEngine::AnimationCurve*& VROSC::LoopPlayerAutoMover::dyn__zCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::dyn__zCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayer _loopPlayer
[[deprecated]] ::VROSC::LoopPlayer*& VROSC::LoopPlayerAutoMover::dyn__loopPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::dyn__loopPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopPlayer"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopPlayerAutoMover.Setup
void VROSC::LoopPlayerAutoMover::Setup(::VROSC::LoopPlayer* loopPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopPlayer);
}
// Autogenerated method: VROSC.LoopPlayerAutoMover.MoveLoopPlayer
void VROSC::LoopPlayerAutoMover::MoveLoopPlayer(::VROSC::LoopStationGroup* from, ::VROSC::LoopStationGroup* to, float zmultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::MoveLoopPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveLoopPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(zmultiplier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to, zmultiplier);
}
// Autogenerated method: VROSC.LoopPlayerAutoMover.MovePlayerFlow
::System::Collections::IEnumerator* VROSC::LoopPlayerAutoMover::MovePlayerFlow(::VROSC::LoopStationGroup* from, ::VROSC::LoopStationGroup* to, float zmultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::MovePlayerFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePlayerFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(zmultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, from, to, zmultiplier);
}
// Autogenerated method: VROSC.LoopPlayerAutoMover.SetObjectsInteractable
void VROSC::LoopPlayerAutoMover::SetObjectsInteractable(::VROSC::LoopStationGroup* from, ::VROSC::LoopStationGroup* to, bool interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::SetObjectsInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetObjectsInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.LoopPlayerAutoMover/VROSC.<MovePlayerFlow>d__7
#include "VROSC/LoopPlayerAutoMover_-MovePlayerFlow-d__7.hpp"
// Including type: VROSC.LoopStationGroup
#include "VROSC/LoopStationGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated]] ::Il2CppObject*& VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.LoopPlayerAutoMover <>4__this
[[deprecated]] ::VROSC::LoopPlayerAutoMover*& VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayerAutoMover**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.LoopStationGroup from
[[deprecated]] ::VROSC::LoopStationGroup*& VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::dyn_from() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::dyn_from");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "from"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.LoopStationGroup to
[[deprecated]] ::VROSC::LoopStationGroup*& VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::dyn_to() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::dyn_to");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "to"))->offset;
  return *reinterpret_cast<::VROSC::LoopStationGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single zmultiplier
[[deprecated]] float& VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::dyn_zmultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::dyn_zmultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zmultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <time>5__2
[[deprecated]] float& VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::dyn_$time$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::dyn_$time$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<time>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <startPosition>5__3
[[deprecated]] ::UnityEngine::Vector3& VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::dyn_$startPosition$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::dyn_$startPosition$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startPosition>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopPlayerAutoMover/VROSC.<MovePlayerFlow>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerAutoMover/VROSC.<MovePlayerFlow>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerAutoMover/VROSC.<MovePlayerFlow>d__7.System.IDisposable.Dispose
void VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerAutoMover/VROSC.<MovePlayerFlow>d__7.MoveNext
bool VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopPlayerAutoMover/VROSC.<MovePlayerFlow>d__7.System.Collections.IEnumerator.Reset
void VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationButtons
#include "VROSC/LoopStationButtons.hpp"
// Including type: VROSC.UIButton
#include "VROSC/UIButton.hpp"
// Including type: VROSC.UISlider
#include "VROSC/UISlider.hpp"
// Including type: VROSC.UIHoldButton
#include "VROSC/UIHoldButton.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.UIButton _stopAllButton
[[deprecated]] ::VROSC::UIButton*& VROSC::LoopStationButtons::dyn__stopAllButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationButtons::dyn__stopAllButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stopAllButton"))->offset;
  return *reinterpret_cast<::VROSC::UIButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIButton _playAllButton
[[deprecated]] ::VROSC::UIButton*& VROSC::LoopStationButtons::dyn__playAllButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationButtons::dyn__playAllButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playAllButton"))->offset;
  return *reinterpret_cast<::VROSC::UIButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UISlider _volumeSlider
[[deprecated]] ::VROSC::UISlider*& VROSC::LoopStationButtons::dyn__volumeSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationButtons::dyn__volumeSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volumeSlider"))->offset;
  return *reinterpret_cast<::VROSC::UISlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIHoldButton _deleteAllButton
[[deprecated]] ::VROSC::UIHoldButton*& VROSC::LoopStationButtons::dyn__deleteAllButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationButtons::dyn__deleteAllButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deleteAllButton"))->offset;
  return *reinterpret_cast<::VROSC::UIHoldButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnPlayAllPressed
[[deprecated]] ::System::Action*& VROSC::LoopStationButtons::dyn_OnPlayAllPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationButtons::dyn_OnPlayAllPressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPlayAllPressed"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnStopAllPressed
[[deprecated]] ::System::Action*& VROSC::LoopStationButtons::dyn_OnStopAllPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationButtons::dyn_OnStopAllPressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStopAllPressed"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnDeleteAllPressed
[[deprecated]] ::System::Action*& VROSC::LoopStationButtons::dyn_OnDeleteAllPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationButtons::dyn_OnDeleteAllPressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnDeleteAllPressed"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Single> OnGlobalVolumeChanged
[[deprecated]] ::System::Action_1<float>*& VROSC::LoopStationButtons::dyn_OnGlobalVolumeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationButtons::dyn_OnGlobalVolumeChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnGlobalVolumeChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationButtons.Awake
void VROSC::LoopStationButtons::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationButtons::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationButtons.OnDestroy
void VROSC::LoopStationButtons::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationButtons::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationButtons.SetVolume
void VROSC::LoopStationButtons::SetVolume(float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationButtons::SetVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume);
}
// Autogenerated method: VROSC.LoopStationButtons.PlayAllPressed
void VROSC::LoopStationButtons::PlayAllPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationButtons::PlayAllPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayAllPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationButtons.StopAllPressed
void VROSC::LoopStationButtons::StopAllPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationButtons::StopAllPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopAllPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationButtons.DeleteAll
void VROSC::LoopStationButtons::DeleteAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationButtons::DeleteAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationButtons.VolumeChanged
void VROSC::LoopStationButtons::VolumeChanged(float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationButtons::VolumeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VolumeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationLoopHandler
#include "VROSC/LoopStationLoopHandler.hpp"
// Including type: VROSC.LoopStationLoopHandler/VROSC.LooperState
#include "VROSC/LoopStationLoopHandler_LooperState.hpp"
// Including type: VROSC.LoopPlayer
#include "VROSC/LoopPlayer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VROSC.LoopStation
#include "VROSC/LoopStation.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: VROSC.LoopStationDataController
#include "VROSC/LoopStationDataController.hpp"
// Including type: VROSC.LoopStationRecorder/VROSC.RecordingState
#include "VROSC/LoopStationRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxActiveLoops
int VROSC::LoopStationLoopHandler::_get_MaxActiveLoops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::_get_MaxActiveLoops");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("VROSC", "LoopStationLoopHandler", "MaxActiveLoops"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxActiveLoops
void VROSC::LoopStationLoopHandler::_set_MaxActiveLoops(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::_set_MaxActiveLoops");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopStationLoopHandler", "MaxActiveLoops", value));
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayer _loopPrefab
[[deprecated]] ::VROSC::LoopPlayer*& VROSC::LoopStationLoopHandler::dyn__loopPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::dyn__loopPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopPrefab"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _loopLocation
[[deprecated]] ::UnityEngine::Transform*& VROSC::LoopStationLoopHandler::dyn__loopLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::dyn__loopLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopLocation"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.LoopPlayer> _activeLoops
[[deprecated]] ::System::Collections::Generic::List_1<::VROSC::LoopPlayer*>*& VROSC::LoopStationLoopHandler::dyn__activeLoops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::dyn__activeLoops");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeLoops"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::LoopPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayer _currentlyRecordingLoop
[[deprecated]] ::VROSC::LoopPlayer*& VROSC::LoopStationLoopHandler::dyn__currentlyRecordingLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::dyn__currentlyRecordingLoop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentlyRecordingLoop"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayer _lastRecordedLoop
[[deprecated]] ::VROSC::LoopPlayer*& VROSC::LoopStationLoopHandler::dyn__lastRecordedLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::dyn__lastRecordedLoop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastRecordedLoop"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopStation _loopStation
[[deprecated]] ::VROSC::LoopStation*& VROSC::LoopStationLoopHandler::dyn__loopStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::dyn__loopStation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopStation"))->offset;
  return *reinterpret_cast<::VROSC::LoopStation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<VROSC.LoopPlayer,System.Boolean> OnLoopDeleted
[[deprecated]] ::System::Action_2<::VROSC::LoopPlayer*, bool>*& VROSC::LoopStationLoopHandler::dyn_OnLoopDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::dyn_OnLoopDeleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnLoopDeleted"))->offset;
  return *reinterpret_cast<::System::Action_2<::VROSC::LoopPlayer*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.LoopPlayer> OnLoopRecorded
[[deprecated]] ::System::Action_1<::VROSC::LoopPlayer*>*& VROSC::LoopStationLoopHandler::dyn_OnLoopRecorded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::dyn_OnLoopRecorded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnLoopRecorded"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::LoopPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnRerecord
[[deprecated]] ::System::Action*& VROSC::LoopStationLoopHandler::dyn_OnRerecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::dyn_OnRerecord");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnRerecord"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.get_ActiveLoops
::System::Collections::Generic::List_1<::VROSC::LoopPlayer*>* VROSC::LoopStationLoopHandler::get_ActiveLoops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::get_ActiveLoops");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActiveLoops", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::VROSC::LoopPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.get_LoopCount
int VROSC::LoopStationLoopHandler::get_LoopCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::get_LoopCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoopCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.get_IsMaxLoopsReached
bool VROSC::LoopStationLoopHandler::get_IsMaxLoopsReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::get_IsMaxLoopsReached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMaxLoopsReached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.Setup
void VROSC::LoopStationLoopHandler::Setup(::VROSC::LoopStation* loopStation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopStation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopStation);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.OnEnable
void VROSC::LoopStationLoopHandler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.PlayAll
void VROSC::LoopStationLoopHandler::PlayAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::PlayAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.StopAll
void VROSC::LoopStationLoopHandler::StopAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::StopAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.IsEmpty
bool VROSC::LoopStationLoopHandler::IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.GetState
::VROSC::LoopStationLoopHandler::LooperState VROSC::LoopStationLoopHandler::GetState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::GetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopStationLoopHandler::LooperState, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.GetIsAnyLoopGrabbed
bool VROSC::LoopStationLoopHandler::GetIsAnyLoopGrabbed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::GetIsAnyLoopGrabbed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsAnyLoopGrabbed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.CreateLoop
::VROSC::LoopPlayer* VROSC::LoopStationLoopHandler::CreateLoop(::StringW trackId, bool byRecorder, bool overdub) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::CreateLoop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackId), ::il2cpp_utils::ExtractType(byRecorder), ::il2cpp_utils::ExtractType(overdub)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlayer*, false>(this, ___internal__method, trackId, byRecorder, overdub);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.RecordingOfLoopComplete
void VROSC::LoopStationLoopHandler::RecordingOfLoopComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::RecordingOfLoopComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordingOfLoopComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.AbortRecording
void VROSC::LoopStationLoopHandler::AbortRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::AbortRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbortRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.RemoveLastLoop
void VROSC::LoopStationLoopHandler::RemoveLastLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::RemoveLastLoop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveLastLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.Rerecord
void VROSC::LoopStationLoopHandler::Rerecord(::VROSC::LoopStationRecorder::RecordingState recorderState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::Rerecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rerecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recorderState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recorderState);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.CreateLoops
void VROSC::LoopStationLoopHandler::CreateLoops(::VROSC::LoopStationDataController* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::CreateLoops");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateLoops", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.RemoveLoop
void VROSC::LoopStationLoopHandler::RemoveLoop(::VROSC::LoopPlayer* loopPlayer, bool fromReset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::RemoveLoop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopPlayer), ::il2cpp_utils::ExtractType(fromReset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopPlayer, fromReset);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.RemoveAllLoops
void VROSC::LoopStationLoopHandler::RemoveAllLoops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::RemoveAllLoops");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAllLoops", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.SetRecordingText
void VROSC::LoopStationLoopHandler::SetRecordingText(::StringW recordingText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::SetRecordingText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRecordingText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordingText);
}
// Autogenerated method: VROSC.LoopStationLoopHandler.GetLoopByID
::VROSC::LoopPlayer* VROSC::LoopStationLoopHandler::GetLoopByID(::StringW loopID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::GetLoopByID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLoopByID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopID)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::LoopPlayer*, false>(this, ___internal__method, loopID);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoopStationLoopHandler/VROSC.LooperState
#include "VROSC/LoopStationLoopHandler_LooperState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.LoopStationLoopHandler/VROSC.LooperState NoLoops
::VROSC::LoopStationLoopHandler::LooperState VROSC::LoopStationLoopHandler::LooperState::_get_NoLoops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::LooperState::_get_NoLoops");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopStationLoopHandler::LooperState>("VROSC", "LoopStationLoopHandler/LooperState", "NoLoops"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopStationLoopHandler/VROSC.LooperState NoLoops
void VROSC::LoopStationLoopHandler::LooperState::_set_NoLoops(::VROSC::LoopStationLoopHandler::LooperState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::LooperState::_set_NoLoops");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopStationLoopHandler/LooperState", "NoLoops", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopStationLoopHandler/VROSC.LooperState GotLoops
::VROSC::LoopStationLoopHandler::LooperState VROSC::LoopStationLoopHandler::LooperState::_get_GotLoops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::LooperState::_get_GotLoops");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopStationLoopHandler::LooperState>("VROSC", "LoopStationLoopHandler/LooperState", "GotLoops"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopStationLoopHandler/VROSC.LooperState GotLoops
void VROSC::LoopStationLoopHandler::LooperState::_set_GotLoops(::VROSC::LoopStationLoopHandler::LooperState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::LooperState::_set_GotLoops");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopStationLoopHandler/LooperState", "GotLoops", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.LoopStationLoopHandler/VROSC.LooperState IsAtMaxNumber
::VROSC::LoopStationLoopHandler::LooperState VROSC::LoopStationLoopHandler::LooperState::_get_IsAtMaxNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::LooperState::_get_IsAtMaxNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::LoopStationLoopHandler::LooperState>("VROSC", "LoopStationLoopHandler/LooperState", "IsAtMaxNumber"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.LoopStationLoopHandler/VROSC.LooperState IsAtMaxNumber
void VROSC::LoopStationLoopHandler::LooperState::_set_IsAtMaxNumber(::VROSC::LoopStationLoopHandler::LooperState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::LooperState::_set_IsAtMaxNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "LoopStationLoopHandler/LooperState", "IsAtMaxNumber", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& VROSC::LoopStationLoopHandler::LooperState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLoopHandler::LooperState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.Metronome
#include "VROSC/Metronome.hpp"
// Including type: VROSC.UserDataControllers
#include "VROSC/UserDataControllers.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: VROSC.UserPreferencesDataController
#include "VROSC/UserPreferencesDataController.hpp"
// Including type: VROSC.LoopStationRecorder/VROSC.RecordingState
#include "VROSC/LoopStationRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _hapticMetronome
[[deprecated]] ::UnityEngine::GameObject*& VROSC::Metronome::dyn__hapticMetronome() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::dyn__hapticMetronome");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hapticMetronome"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _soundMetronome
[[deprecated]] ::UnityEngine::GameObject*& VROSC::Metronome::dyn__soundMetronome() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::dyn__soundMetronome");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_soundMetronome"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UserPreferencesDataController _preferencesController
[[deprecated]] ::VROSC::UserPreferencesDataController*& VROSC::Metronome::dyn__preferencesController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::dyn__preferencesController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_preferencesController"))->offset;
  return *reinterpret_cast<::VROSC::UserPreferencesDataController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.Metronome/VROSC.Mode _mode
[[deprecated]] ::VROSC::Metronome::Mode& VROSC::Metronome::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::VROSC::Metronome::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.Metronome/VROSC.Medium _medium
[[deprecated]] ::VROSC::Metronome::Medium& VROSC::Metronome::dyn__medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::dyn__medium");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_medium"))->offset;
  return *reinterpret_cast<::VROSC::Metronome::Medium*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.Metronome.Awake
void VROSC::Metronome::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Metronome.OnDestroy
void VROSC::Metronome::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Metronome.DataLoaded
void VROSC::Metronome::DataLoaded(::VROSC::UserDataControllers* user) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::DataLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DataLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, user);
}
// Autogenerated method: VROSC.Metronome.SetMode
void VROSC::Metronome::SetMode(::VROSC::Metronome::Mode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::SetMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mode);
}
// Autogenerated method: VROSC.Metronome.SetMedium
void VROSC::Metronome::SetMedium(::VROSC::Metronome::Medium medium) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::SetMedium");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMedium", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(medium)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, medium);
}
// Autogenerated method: VROSC.Metronome.LoopStationRecorderStateChanged
void VROSC::Metronome::LoopStationRecorderStateChanged(::VROSC::LoopStationRecorder::RecordingState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::LoopStationRecorderStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoopStationRecorderStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: VROSC.Metronome.LoopStationTrackRemoved
void VROSC::Metronome::LoopStationTrackRemoved(int newTrackCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::LoopStationTrackRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoopStationTrackRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newTrackCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newTrackCount);
}
// Autogenerated method: VROSC.Metronome.UpdateMetronome
void VROSC::Metronome::UpdateMetronome(float bpm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::UpdateMetronome");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMetronome", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bpm)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bpm);
}
// Autogenerated method: VROSC.Metronome.UpdateMetronome
void VROSC::Metronome::UpdateMetronome(float bpm, int trackCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::UpdateMetronome");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMetronome", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bpm), ::il2cpp_utils::ExtractType(trackCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bpm, trackCount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.Metronome/VROSC.Mode
#include "VROSC/Metronome.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.Metronome/VROSC.Mode Auto
::VROSC::Metronome::Mode VROSC::Metronome::Mode::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::Mode::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::Metronome::Mode>("VROSC", "Metronome/Mode", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.Metronome/VROSC.Mode Auto
void VROSC::Metronome::Mode::_set_Auto(::VROSC::Metronome::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::Mode::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Metronome/Mode", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.Metronome/VROSC.Mode On
::VROSC::Metronome::Mode VROSC::Metronome::Mode::_get_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::Mode::_get_On");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::Metronome::Mode>("VROSC", "Metronome/Mode", "On"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.Metronome/VROSC.Mode On
void VROSC::Metronome::Mode::_set_On(::VROSC::Metronome::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::Mode::_set_On");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Metronome/Mode", "On", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.Metronome/VROSC.Mode Off
::VROSC::Metronome::Mode VROSC::Metronome::Mode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::Mode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::Metronome::Mode>("VROSC", "Metronome/Mode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.Metronome/VROSC.Mode Off
void VROSC::Metronome::Mode::_set_Off(::VROSC::Metronome::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::Mode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Metronome/Mode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& VROSC::Metronome::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.Metronome/VROSC.Medium
#include "VROSC/Metronome.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.Metronome/VROSC.Medium Haptic
::VROSC::Metronome::Medium VROSC::Metronome::Medium::_get_Haptic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::Medium::_get_Haptic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::Metronome::Medium>("VROSC", "Metronome/Medium", "Haptic"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.Metronome/VROSC.Medium Haptic
void VROSC::Metronome::Medium::_set_Haptic(::VROSC::Metronome::Medium value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::Medium::_set_Haptic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Metronome/Medium", "Haptic", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.Metronome/VROSC.Medium Sound
::VROSC::Metronome::Medium VROSC::Metronome::Medium::_get_Sound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::Medium::_get_Sound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::Metronome::Medium>("VROSC", "Metronome/Medium", "Sound"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.Metronome/VROSC.Medium Sound
void VROSC::Metronome::Medium::_set_Sound(::VROSC::Metronome::Medium value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::Medium::_set_Sound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Metronome/Medium", "Sound", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.Metronome/VROSC.Medium Both
::VROSC::Metronome::Medium VROSC::Metronome::Medium::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::Medium::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::Metronome::Medium>("VROSC", "Metronome/Medium", "Both"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.Metronome/VROSC.Medium Both
void VROSC::Metronome::Medium::_set_Both(::VROSC::Metronome::Medium value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::Medium::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Metronome/Medium", "Both", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& VROSC::Metronome::Medium::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Metronome::Medium::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MicrophoneDeviceManager
#include "VROSC/MicrophoneDeviceManager.hpp"
// Including type: VROSC.MicrophoneDeviceManager/VROSC.<Setup>d__41
#include "VROSC/MicrophoneDeviceManager_-Setup-d__41.hpp"
// Including type: VROSC.MicrophoneDeviceManager/VROSC.<InitializeNativeMicrophone>d__42
#include "VROSC/MicrophoneDeviceManager_-InitializeNativeMicrophone-d__42.hpp"
// Including type: VROSC.MicrophoneDeviceManager/VROSC.<InitiateInputAfterBufferReceived>d__51
#include "VROSC/MicrophoneDeviceManager_-InitiateInputAfterBufferReceived-d__51.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: VROSC.MicrophoneEffectsManager
#include "VROSC/MicrophoneEffectsManager.hpp"
// Including type: NatSuite.Devices.AudioDevice
#include "NatSuite/Devices/AudioDevice.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: VROSC.LoopStationRecorder/VROSC.RecordingState
#include "VROSC/LoopStationRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Double <Latency>k__BackingField
double VROSC::MicrophoneDeviceManager::_get_$Latency$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::_get_$Latency$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<double>("VROSC", "MicrophoneDeviceManager", "<Latency>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Double <Latency>k__BackingField
void VROSC::MicrophoneDeviceManager::_set_$Latency$k__BackingField(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::_set_$Latency$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "MicrophoneDeviceManager", "<Latency>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean <HasWorkingMicrophone>k__BackingField
bool VROSC::MicrophoneDeviceManager::_get_$HasWorkingMicrophone$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::_get_$HasWorkingMicrophone$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("VROSC", "MicrophoneDeviceManager", "<HasWorkingMicrophone>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean <HasWorkingMicrophone>k__BackingField
void VROSC::MicrophoneDeviceManager::_set_$HasWorkingMicrophone$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::_set_$HasWorkingMicrophone$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "MicrophoneDeviceManager", "<HasWorkingMicrophone>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action OnPeakReach
::System::Action* VROSC::MicrophoneDeviceManager::_get_OnPeakReach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::_get_OnPeakReach");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("VROSC", "MicrophoneDeviceManager", "OnPeakReach"));
}
// Autogenerated static field setter
// Set static field: static public System.Action OnPeakReach
void VROSC::MicrophoneDeviceManager::_set_OnPeakReach(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::_set_OnPeakReach");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "MicrophoneDeviceManager", "OnPeakReach", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action OnPeakLeft
::System::Action* VROSC::MicrophoneDeviceManager::_get_OnPeakLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::_get_OnPeakLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("VROSC", "MicrophoneDeviceManager", "OnPeakLeft"));
}
// Autogenerated static field setter
// Set static field: static public System.Action OnPeakLeft
void VROSC::MicrophoneDeviceManager::_set_OnPeakLeft(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::_set_OnPeakLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "MicrophoneDeviceManager", "OnPeakLeft", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Single> OnInputMeasurementChanged
::System::Action_1<float>* VROSC::MicrophoneDeviceManager::_get_OnInputMeasurementChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::_get_OnInputMeasurementChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<float>*>("VROSC", "MicrophoneDeviceManager", "OnInputMeasurementChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Single> OnInputMeasurementChanged
void VROSC::MicrophoneDeviceManager::_set_OnInputMeasurementChanged(::System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::_set_OnInputMeasurementChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "MicrophoneDeviceManager", "OnInputMeasurementChanged", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action OnSignal
::System::Action* VROSC::MicrophoneDeviceManager::_get_OnSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::_get_OnSignal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("VROSC", "MicrophoneDeviceManager", "OnSignal"));
}
// Autogenerated static field setter
// Set static field: static public System.Action OnSignal
void VROSC::MicrophoneDeviceManager::_set_OnSignal(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::_set_OnSignal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "MicrophoneDeviceManager", "OnSignal", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated]] ::UnityEngine::AudioSource*& VROSC::MicrophoneDeviceManager::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.MicrophoneEffectsManager _microphoneEffectsManager
[[deprecated]] ::VROSC::MicrophoneEffectsManager*& VROSC::MicrophoneDeviceManager::dyn__microphoneEffectsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn__microphoneEffectsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_microphoneEffectsManager"))->offset;
  return *reinterpret_cast<::VROSC::MicrophoneEffectsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _nativeMicrophoneBufferSize
[[deprecated]] int& VROSC::MicrophoneDeviceManager::dyn__nativeMicrophoneBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn__nativeMicrophoneBufferSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nativeMicrophoneBufferSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NatSuite.Devices.AudioDevice _microphoneDevice
[[deprecated]] ::NatSuite::Devices::AudioDevice*& VROSC::MicrophoneDeviceManager::dyn__microphoneDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn__microphoneDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_microphoneDevice"))->offset;
  return *reinterpret_cast<::NatSuite::Devices::AudioDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _ringBuffer
[[deprecated]] ::ArrayW<float>& VROSC::MicrophoneDeviceManager::dyn__ringBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn__ringBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _ringBufferWriteIndex
[[deprecated]] int& VROSC::MicrophoneDeviceManager::dyn__ringBufferWriteIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn__ringBufferWriteIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringBufferWriteIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _ringBufferReadIndex
[[deprecated]] int& VROSC::MicrophoneDeviceManager::dyn__ringBufferReadIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn__ringBufferReadIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringBufferReadIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _takingInput
[[deprecated]] bool& VROSC::MicrophoneDeviceManager::dyn__takingInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn__takingInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_takingInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _microphoneEnabled
[[deprecated]] bool& VROSC::MicrophoneDeviceManager::dyn__microphoneEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn__microphoneEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_microphoneEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _microphoneTakingInput
[[deprecated]] bool& VROSC::MicrophoneDeviceManager::dyn__microphoneTakingInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn__microphoneTakingInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_microphoneTakingInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useProximity
[[deprecated]] bool& VROSC::MicrophoneDeviceManager::dyn__useProximity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn__useProximity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useProximity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _microphoneProximity
[[deprecated]] float& VROSC::MicrophoneDeviceManager::dyn__microphoneProximity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn__microphoneProximity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_microphoneProximity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <StopFadeTime>k__BackingField
[[deprecated]] float& VROSC::MicrophoneDeviceManager::dyn_$StopFadeTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn_$StopFadeTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StopFadeTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsInitialized>k__BackingField
[[deprecated]] bool& VROSC::MicrophoneDeviceManager::dyn_$IsInitialized$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn_$IsInitialized$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsInitialized>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _preampVolume
[[deprecated]] float& VROSC::MicrophoneDeviceManager::dyn__preampVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn__preampVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_preampVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _peakDisplayDuration
[[deprecated]] float& VROSC::MicrophoneDeviceManager::dyn__peakDisplayDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn__peakDisplayDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_peakDisplayDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _peakValue
[[deprecated]] float& VROSC::MicrophoneDeviceManager::dyn__peakValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn__peakValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_peakValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _peakTimer
[[deprecated]] float& VROSC::MicrophoneDeviceManager::dyn__peakTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn__peakTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_peakTimer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInPeak
[[deprecated]] bool& VROSC::MicrophoneDeviceManager::dyn__isInPeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn__isInPeak");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInPeak"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _writeAheadBuffers
[[deprecated]] int& VROSC::MicrophoneDeviceManager::dyn__writeAheadBuffers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn__writeAheadBuffers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeAheadBuffers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _receivedBuffers
[[deprecated]] int& VROSC::MicrophoneDeviceManager::dyn__receivedBuffers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::dyn__receivedBuffers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_receivedBuffers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.get_MicrophoneDevice
::NatSuite::Devices::AudioDevice* VROSC::MicrophoneDeviceManager::get_MicrophoneDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::get_MicrophoneDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MicrophoneDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NatSuite::Devices::AudioDevice*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.get_Latency
double VROSC::MicrophoneDeviceManager::get_Latency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::get_Latency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "MicrophoneDeviceManager", "get_Latency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.set_Latency
void VROSC::MicrophoneDeviceManager::set_Latency(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::set_Latency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "MicrophoneDeviceManager", "set_Latency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.get_StopFadeTime
float VROSC::MicrophoneDeviceManager::get_StopFadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::get_StopFadeTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StopFadeTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.set_StopFadeTime
void VROSC::MicrophoneDeviceManager::set_StopFadeTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::set_StopFadeTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StopFadeTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.get_IsInitialized
bool VROSC::MicrophoneDeviceManager::get_IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::get_IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.set_IsInitialized
void VROSC::MicrophoneDeviceManager::set_IsInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::set_IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.get_HasWorkingMicrophone
bool VROSC::MicrophoneDeviceManager::get_HasWorkingMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::get_HasWorkingMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "MicrophoneDeviceManager", "get_HasWorkingMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.set_HasWorkingMicrophone
void VROSC::MicrophoneDeviceManager::set_HasWorkingMicrophone(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::set_HasWorkingMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "MicrophoneDeviceManager", "set_HasWorkingMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.Setup
void VROSC::MicrophoneDeviceManager::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.InitializeNativeMicrophone
::System::Threading::Tasks::Task* VROSC::MicrophoneDeviceManager::InitializeNativeMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::InitializeNativeMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeNativeMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.SetMicrophoneDevice
void VROSC::MicrophoneDeviceManager::SetMicrophoneDevice(::NatSuite::Devices::AudioDevice* device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::SetMicrophoneDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMicrophoneDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.Update
void VROSC::MicrophoneDeviceManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.SetUseProximity
void VROSC::MicrophoneDeviceManager::SetUseProximity(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::SetUseProximity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUseProximity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.SetMicrophoneProximity
void VROSC::MicrophoneDeviceManager::SetMicrophoneProximity(float proximity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::SetMicrophoneProximity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMicrophoneProximity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proximity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, proximity);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.SetLatencyCompensation
void VROSC::MicrophoneDeviceManager::SetLatencyCompensation(float latency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::SetLatencyCompensation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLatencyCompensation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(latency)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, latency);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.ResetLatency
void VROSC::MicrophoneDeviceManager::ResetLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::ResetLatency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.MicrophoneEnabled
void VROSC::MicrophoneDeviceManager::MicrophoneEnabled(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::MicrophoneEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MicrophoneEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.LoopStationStateChanged
void VROSC::MicrophoneDeviceManager::LoopStationStateChanged(::VROSC::LoopStationRecorder::RecordingState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::LoopStationStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoopStationStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.InitiateInputAfterBufferReceived
void VROSC::MicrophoneDeviceManager::InitiateInputAfterBufferReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::InitiateInputAfterBufferReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitiateInputAfterBufferReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.InitiateInput
void VROSC::MicrophoneDeviceManager::InitiateInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::InitiateInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitiateInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.MicrophoneTakingInput
void VROSC::MicrophoneDeviceManager::MicrophoneTakingInput(bool takingInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::MicrophoneTakingInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MicrophoneTakingInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(takingInput)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, takingInput);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.ReceiveMicrophoneSamples
void VROSC::MicrophoneDeviceManager::ReceiveMicrophoneSamples(::ArrayW<float> sampleBuffer, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::ReceiveMicrophoneSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveMicrophoneSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleBuffer), ::il2cpp_utils::ExtractType(timestamp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sampleBuffer, timestamp);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.ResetReadIndex
void VROSC::MicrophoneDeviceManager::ResetReadIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::ResetReadIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetReadIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.SetPreampVolume
void VROSC::MicrophoneDeviceManager::SetPreampVolume(float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::SetPreampVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPreampVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.SetPreampReverb
void VROSC::MicrophoneDeviceManager::SetPreampReverb(float reverb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::SetPreampReverb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPreampReverb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reverb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reverb);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.SetPreviewReverb
void VROSC::MicrophoneDeviceManager::SetPreviewReverb(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::SetPreviewReverb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPreviewReverb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager.OnAudioFilterRead
void VROSC::MicrophoneDeviceManager::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager..cctor
void VROSC::MicrophoneDeviceManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "MicrophoneDeviceManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MicrophoneDeviceManager/VROSC.<Setup>d__41
#include "VROSC/MicrophoneDeviceManager_-Setup-d__41.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated]] int& VROSC::MicrophoneDeviceManager::$Setup$d__41::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::$Setup$d__41::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& VROSC::MicrophoneDeviceManager::$Setup$d__41::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::$Setup$d__41::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.MicrophoneDeviceManager <>4__this
[[deprecated]] ::VROSC::MicrophoneDeviceManager*& VROSC::MicrophoneDeviceManager::$Setup$d__41::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::$Setup$d__41::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::MicrophoneDeviceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated]] ::System::Runtime::CompilerServices::TaskAwaiter& VROSC::MicrophoneDeviceManager::$Setup$d__41::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::$Setup$d__41::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager/VROSC.<Setup>d__41.MoveNext
void VROSC::MicrophoneDeviceManager::$Setup$d__41::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::$Setup$d__41::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::MicrophoneDeviceManager::$Setup$d__41), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager/VROSC.<Setup>d__41.SetStateMachine
void VROSC::MicrophoneDeviceManager::$Setup$d__41::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::$Setup$d__41::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::MicrophoneDeviceManager::$Setup$d__41), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MicrophoneDeviceManager/VROSC.<InitializeNativeMicrophone>d__42
#include "VROSC/MicrophoneDeviceManager_-InitializeNativeMicrophone-d__42.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated]] int& VROSC::MicrophoneDeviceManager::$InitializeNativeMicrophone$d__42::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::$InitializeNativeMicrophone$d__42::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& VROSC::MicrophoneDeviceManager::$InitializeNativeMicrophone$d__42::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::$InitializeNativeMicrophone$d__42::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.MicrophoneDeviceManager <>4__this
[[deprecated]] ::VROSC::MicrophoneDeviceManager*& VROSC::MicrophoneDeviceManager::$InitializeNativeMicrophone$d__42::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::$InitializeNativeMicrophone$d__42::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::MicrophoneDeviceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
[[deprecated]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& VROSC::MicrophoneDeviceManager::$InitializeNativeMicrophone$d__42::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::$InitializeNativeMicrophone$d__42::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager/VROSC.<InitializeNativeMicrophone>d__42.MoveNext
void VROSC::MicrophoneDeviceManager::$InitializeNativeMicrophone$d__42::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::$InitializeNativeMicrophone$d__42::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::MicrophoneDeviceManager::$InitializeNativeMicrophone$d__42), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager/VROSC.<InitializeNativeMicrophone>d__42.SetStateMachine
void VROSC::MicrophoneDeviceManager::$InitializeNativeMicrophone$d__42::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::$InitializeNativeMicrophone$d__42::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::MicrophoneDeviceManager::$InitializeNativeMicrophone$d__42), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MicrophoneDeviceManager/VROSC.<InitiateInputAfterBufferReceived>d__51
#include "VROSC/MicrophoneDeviceManager_-InitiateInputAfterBufferReceived-d__51.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated]] int& VROSC::MicrophoneDeviceManager::$InitiateInputAfterBufferReceived$d__51::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::$InitiateInputAfterBufferReceived$d__51::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& VROSC::MicrophoneDeviceManager::$InitiateInputAfterBufferReceived$d__51::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::$InitiateInputAfterBufferReceived$d__51::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.MicrophoneDeviceManager <>4__this
[[deprecated]] ::VROSC::MicrophoneDeviceManager*& VROSC::MicrophoneDeviceManager::$InitiateInputAfterBufferReceived$d__51::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::$InitiateInputAfterBufferReceived$d__51::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::MicrophoneDeviceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated]] ::System::Runtime::CompilerServices::TaskAwaiter& VROSC::MicrophoneDeviceManager::$InitiateInputAfterBufferReceived$d__51::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::$InitiateInputAfterBufferReceived$d__51::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager/VROSC.<InitiateInputAfterBufferReceived>d__51.MoveNext
void VROSC::MicrophoneDeviceManager::$InitiateInputAfterBufferReceived$d__51::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::$InitiateInputAfterBufferReceived$d__51::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::MicrophoneDeviceManager::$InitiateInputAfterBufferReceived$d__51), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MicrophoneDeviceManager/VROSC.<InitiateInputAfterBufferReceived>d__51.SetStateMachine
void VROSC::MicrophoneDeviceManager::$InitiateInputAfterBufferReceived$d__51::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDeviceManager::$InitiateInputAfterBufferReceived$d__51::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::MicrophoneDeviceManager::$InitiateInputAfterBufferReceived$d__51), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MicrophoneEffectsManager
#include "VROSC/MicrophoneEffectsManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _active
[[deprecated]] bool& VROSC::MicrophoneEffectsManager::dyn__active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneEffectsManager::dyn__active");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_active"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _reverbVolumeAdjustment
[[deprecated]] float& VROSC::MicrophoneEffectsManager::dyn__reverbVolumeAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneEffectsManager::dyn__reverbVolumeAdjustment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reverbVolumeAdjustment"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _preampReverb
[[deprecated]] float& VROSC::MicrophoneEffectsManager::dyn__preampReverb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneEffectsManager::dyn__preampReverb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_preampReverb"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _proximityReverbMultiplier
[[deprecated]] float& VROSC::MicrophoneEffectsManager::dyn__proximityReverbMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneEffectsManager::dyn__proximityReverbMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proximityReverbMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useProximity
[[deprecated]] bool& VROSC::MicrophoneEffectsManager::dyn__useProximity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneEffectsManager::dyn__useProximity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useProximity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.MicrophoneEffectsManager.Activate
void VROSC::MicrophoneEffectsManager::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneEffectsManager::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MicrophoneEffectsManager.Deactivate
void VROSC::MicrophoneEffectsManager::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneEffectsManager::Deactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MicrophoneEffectsManager.SetProximity
void VROSC::MicrophoneEffectsManager::SetProximity(float proximity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneEffectsManager::SetProximity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetProximity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proximity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, proximity);
}
// Autogenerated method: VROSC.MicrophoneEffectsManager.SetPreampReverb
void VROSC::MicrophoneEffectsManager::SetPreampReverb(float preampReverb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneEffectsManager::SetPreampReverb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPreampReverb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(preampReverb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, preampReverb);
}
// Autogenerated method: VROSC.MicrophoneEffectsManager.SetPreviewReverb
void VROSC::MicrophoneEffectsManager::SetPreviewReverb(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneEffectsManager::SetPreviewReverb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPreviewReverb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated method: VROSC.MicrophoneEffectsManager.SetUseProximity
void VROSC::MicrophoneEffectsManager::SetUseProximity(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneEffectsManager::SetUseProximity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUseProximity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MidiInterface
#include "VROSC/MidiInterface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VROSC.MidiInterface.Setup
void VROSC::MidiInterface::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiInterface::Setup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::MidiInterface*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MidiInterface.PlayNote
void VROSC::MidiInterface::PlayNote(int note, int channel, float velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiInterface::PlayNote");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::MidiInterface*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, channel, velocity);
}
// Autogenerated method: VROSC.MidiInterface.StopNote
void VROSC::MidiInterface::StopNote(int note, int channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiInterface::StopNote");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::MidiInterface*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, channel);
}
// Autogenerated method: VROSC.MidiInterface.SetMidiCC
void VROSC::MidiInterface::SetMidiCC(float midiCCValue, int midiCC, int channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiInterface::SetMidiCC");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::MidiInterface*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, midiCCValue, midiCC, channel);
}
// Autogenerated method: VROSC.MidiInterface.SetPitchBend
void VROSC::MidiInterface::SetPitchBend(float pitchBendValue, int channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiInterface::SetPitchBend");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::MidiInterface*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pitchBendValue, channel);
}
// Autogenerated method: VROSC.MidiInterface.AllNotesOff
void VROSC::MidiInterface::AllNotesOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiInterface::AllNotesOff");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::MidiInterface*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.MidiManager
#include "VROSC/MidiManager.hpp"
// Including type: VROSC.MidiManager/VROSC.ActiveNote
#include "VROSC/MidiManager_ActiveNote.hpp"
// Including type: VROSC.MidiManager/VROSC.<Setup>d__17
#include "VROSC/MidiManager_-Setup-d__17.hpp"
// Including type: VROSC.MidiManager/VROSC.<>c__DisplayClass19_0
#include "VROSC/MidiManager_--c__DisplayClass19_0.hpp"
// Including type: VROSC.MidiManager/VROSC.<>c__DisplayClass20_0
#include "VROSC/MidiManager_--c__DisplayClass20_0.hpp"
// Including type: VROSC.MidiManager/VROSC.<>c__DisplayClass23_0
#include "VROSC/MidiManager_--c__DisplayClass23_0.hpp"
// Including type: VROSC.MidiManager/VROSC.<>c__DisplayClass26_0
#include "VROSC/MidiManager_--c__DisplayClass26_0.hpp"
// Including type: VROSC.ExternalSynthesizer
#include "VROSC/ExternalSynthesizer.hpp"
// Including type: VROSC.InternalSynthesizer
#include "VROSC/InternalSynthesizer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: VROSC.PatchSettings
#include "VROSC/PatchSettings.hpp"
// Including type: VROSC.HandType
#include "VROSC/HandType.hpp"
// Including type: VROSC.UserDataControllers
#include "VROSC/UserDataControllers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Boolean> OnUseExternalSynthesizerChanged
::System::Action_1<bool>* VROSC::MidiManager::_get_OnUseExternalSynthesizerChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::_get_OnUseExternalSynthesizerChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<bool>*>("VROSC", "MidiManager", "OnUseExternalSynthesizerChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Boolean> OnUseExternalSynthesizerChanged
void VROSC::MidiManager::_set_OnUseExternalSynthesizerChanged(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::_set_OnUseExternalSynthesizerChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "MidiManager", "OnUseExternalSynthesizerChanged", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action OnReset
::System::Action* VROSC::MidiManager::_get_OnReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::_get_OnReset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("VROSC", "MidiManager", "OnReset"));
}
// Autogenerated static field setter
// Set static field: static public System.Action OnReset
void VROSC::MidiManager::_set_OnReset(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::_set_OnReset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "MidiManager", "OnReset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<VROSC.WidgetSettings/VROSC.Identifier,VROSC.PatchSettings> OnAnyNotePlayed
::System::Action_2<::VROSC::WidgetSettings::Identifier, ::VROSC::PatchSettings*>* VROSC::MidiManager::_get_OnAnyNotePlayed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::_get_OnAnyNotePlayed");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::VROSC::WidgetSettings::Identifier, ::VROSC::PatchSettings*>*>("VROSC", "MidiManager", "OnAnyNotePlayed")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<VROSC.WidgetSettings/VROSC.Identifier,VROSC.PatchSettings> OnAnyNotePlayed
void VROSC::MidiManager::_set_OnAnyNotePlayed(::System::Action_2<::VROSC::WidgetSettings::Identifier, ::VROSC::PatchSettings*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::_set_OnAnyNotePlayed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "MidiManager", "OnAnyNotePlayed", value));
}
// Autogenerated instance field getter
// Get instance field: private VROSC.ExternalSynthesizer _externalSynthesizer
[[deprecated]] ::VROSC::ExternalSynthesizer*& VROSC::MidiManager::dyn__externalSynthesizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::dyn__externalSynthesizer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_externalSynthesizer"))->offset;
  return *reinterpret_cast<::VROSC::ExternalSynthesizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.InternalSynthesizer _internalSynthesizer
[[deprecated]] ::VROSC::InternalSynthesizer*& VROSC::MidiManager::dyn__internalSynthesizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::dyn__internalSynthesizer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_internalSynthesizer"))->offset;
  return *reinterpret_cast<::VROSC::InternalSynthesizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.MidiManager/VROSC.ActiveNote> _activeNotes
[[deprecated]] ::System::Collections::Generic::List_1<::VROSC::MidiManager::ActiveNote*>*& VROSC::MidiManager::dyn__activeNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::dyn__activeNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeNotes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::MidiManager::ActiveNote*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _retriggerExternalNotes
[[deprecated]] bool& VROSC::MidiManager::dyn__retriggerExternalNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::dyn__retriggerExternalNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_retriggerExternalNotes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsReady>k__BackingField
[[deprecated]] bool& VROSC::MidiManager::dyn_$IsReady$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::dyn_$IsReady$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsReady>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.MidiManager.get_ExternalSynthesizer
::VROSC::ExternalSynthesizer* VROSC::MidiManager::get_ExternalSynthesizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::get_ExternalSynthesizer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExternalSynthesizer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::ExternalSynthesizer*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MidiManager.get_InternalSynthesizer
::VROSC::InternalSynthesizer* VROSC::MidiManager::get_InternalSynthesizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::get_InternalSynthesizer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalSynthesizer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::InternalSynthesizer*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MidiManager.get_IsReady
bool VROSC::MidiManager::get_IsReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::get_IsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MidiManager.set_IsReady
void VROSC::MidiManager::set_IsReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::set_IsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.MidiManager.Awake
void VROSC::MidiManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MidiManager.Setup
void VROSC::MidiManager::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MidiManager.OnDestroy
void VROSC::MidiManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MidiManager.PlayNote
void VROSC::MidiManager::PlayNote(::VROSC::WidgetSettings::Identifier instrumentId, int note, float velocity, ::VROSC::PatchSettings* patchSettings, int channel, ::Il2CppObject* source, double predictedDspTime, ::VROSC::HandType handType, float pitch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::PlayNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instrumentId), ::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(patchSettings), ::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(predictedDspTime), ::il2cpp_utils::ExtractType(handType), ::il2cpp_utils::ExtractType(pitch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instrumentId, note, velocity, patchSettings, channel, source, predictedDspTime, handType, pitch);
}
// Autogenerated method: VROSC.MidiManager.StopNote
void VROSC::MidiManager::StopNote(int note, ::VROSC::PatchSettings* patchSettings, int channel, ::Il2CppObject* source, ::VROSC::HandType handType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::StopNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(patchSettings), ::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(handType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, patchSettings, channel, source, handType);
}
// Autogenerated method: VROSC.MidiManager.GetActiveNote
::VROSC::MidiManager::ActiveNote* VROSC::MidiManager::GetActiveNote(int note, ::Il2CppObject* patch, int channel, ::Il2CppObject* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::GetActiveNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActiveNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(patch), ::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::MidiManager::ActiveNote*, false>(this, ___internal__method, note, patch, channel, source);
}
// Autogenerated method: VROSC.MidiManager.IsPlaying
bool VROSC::MidiManager::IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MidiManager.IsPlaying
bool VROSC::MidiManager::IsPlaying(::Il2CppObject* patch, int channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(patch), ::il2cpp_utils::ExtractType(channel)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, patch, channel);
}
// Autogenerated method: VROSC.MidiManager.SetMidiCC
void VROSC::MidiManager::SetMidiCC(float midiCCValue, int midiCC, ::VROSC::PatchSettings* patchSettings, int channel, bool sendToExternal, ::VROSC::HandType handType, bool saveToPatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::SetMidiCC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMidiCC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(midiCCValue), ::il2cpp_utils::ExtractType(midiCC), ::il2cpp_utils::ExtractType(patchSettings), ::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(sendToExternal), ::il2cpp_utils::ExtractType(handType), ::il2cpp_utils::ExtractType(saveToPatch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, midiCCValue, midiCC, patchSettings, channel, sendToExternal, handType, saveToPatch);
}
// Autogenerated method: VROSC.MidiManager.SetMidiPitchBend
void VROSC::MidiManager::SetMidiPitchBend(float pitchBendValue, ::VROSC::PatchSettings* patchSettings, int channel, bool sendToExternal, ::VROSC::HandType handType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::SetMidiPitchBend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMidiPitchBend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pitchBendValue), ::il2cpp_utils::ExtractType(patchSettings), ::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(sendToExternal), ::il2cpp_utils::ExtractType(handType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pitchBendValue, patchSettings, channel, sendToExternal, handType);
}
// Autogenerated method: VROSC.MidiManager.AllNotesOff
void VROSC::MidiManager::AllNotesOff(::Il2CppObject* patch, int channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::AllNotesOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllNotesOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(patch), ::il2cpp_utils::ExtractType(channel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, patch, channel);
}
// Autogenerated method: VROSC.MidiManager.AllNotesOff
void VROSC::MidiManager::AllNotesOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::AllNotesOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllNotesOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MidiManager.ToggleInternalExternalSynthesizer
void VROSC::MidiManager::ToggleInternalExternalSynthesizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::ToggleInternalExternalSynthesizer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleInternalExternalSynthesizer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MidiManager.SetUseExternalSynthesizer
void VROSC::MidiManager::SetUseExternalSynthesizer(bool useExternal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::SetUseExternalSynthesizer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUseExternalSynthesizer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useExternal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, useExternal);
}
// Autogenerated method: VROSC.MidiManager.UserDataLoaded
void VROSC::MidiManager::UserDataLoaded(::VROSC::UserDataControllers* user) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::UserDataLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UserDataLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, user);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.MidiManager/VROSC.ActiveNote
#include "VROSC/MidiManager_ActiveNote.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Note
[[deprecated]] int& VROSC::MidiManager::ActiveNote::dyn_Note() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::ActiveNote::dyn_Note");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Note"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object Patch
[[deprecated]] ::Il2CppObject*& VROSC::MidiManager::ActiveNote::dyn_Patch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::ActiveNote::dyn_Patch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Patch"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Channel
[[deprecated]] int& VROSC::MidiManager::ActiveNote::dyn_Channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::ActiveNote::dyn_Channel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Channel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object Source
[[deprecated]] ::Il2CppObject*& VROSC::MidiManager::ActiveNote::dyn_Source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::ActiveNote::dyn_Source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Source"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MidiManager/VROSC.<Setup>d__17
#include "VROSC/MidiManager_-Setup-d__17.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated]] int& VROSC::MidiManager::$Setup$d__17::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$Setup$d__17::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& VROSC::MidiManager::$Setup$d__17::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$Setup$d__17::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.MidiManager <>4__this
[[deprecated]] ::VROSC::MidiManager*& VROSC::MidiManager::$Setup$d__17::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$Setup$d__17::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::MidiManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated]] ::System::Runtime::CompilerServices::TaskAwaiter& VROSC::MidiManager::$Setup$d__17::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$Setup$d__17::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.MidiManager/VROSC.<Setup>d__17.MoveNext
void VROSC::MidiManager::$Setup$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$Setup$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::MidiManager::$Setup$d__17), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MidiManager/VROSC.<Setup>d__17.SetStateMachine
void VROSC::MidiManager::$Setup$d__17::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$Setup$d__17::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::MidiManager::$Setup$d__17), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MidiManager/VROSC.<>c__DisplayClass19_0
#include "VROSC/MidiManager_--c__DisplayClass19_0.hpp"
// Including type: VROSC.MidiManager/VROSC.ActiveNote
#include "VROSC/MidiManager_ActiveNote.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 channel
[[deprecated]] int& VROSC::MidiManager::$$c__DisplayClass19_0::dyn_channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$$c__DisplayClass19_0::dyn_channel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 note
[[deprecated]] int& VROSC::MidiManager::$$c__DisplayClass19_0::dyn_note() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$$c__DisplayClass19_0::dyn_note");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "note"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.MidiManager/VROSC.<>c__DisplayClass19_0.<PlayNote>b__0
bool VROSC::MidiManager::$$c__DisplayClass19_0::$PlayNote$b__0(::VROSC::MidiManager::ActiveNote* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$$c__DisplayClass19_0::<PlayNote>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PlayNote>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a);
}
// Autogenerated method: VROSC.MidiManager/VROSC.<>c__DisplayClass19_0.<PlayNote>b__1
bool VROSC::MidiManager::$$c__DisplayClass19_0::$PlayNote$b__1(::VROSC::MidiManager::ActiveNote* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$$c__DisplayClass19_0::<PlayNote>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PlayNote>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MidiManager/VROSC.<>c__DisplayClass20_0
#include "VROSC/MidiManager_--c__DisplayClass20_0.hpp"
// Including type: VROSC.MidiManager/VROSC.ActiveNote
#include "VROSC/MidiManager_ActiveNote.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 channel
[[deprecated]] int& VROSC::MidiManager::$$c__DisplayClass20_0::dyn_channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$$c__DisplayClass20_0::dyn_channel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 note
[[deprecated]] int& VROSC::MidiManager::$$c__DisplayClass20_0::dyn_note() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$$c__DisplayClass20_0::dyn_note");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "note"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.MidiManager/VROSC.<>c__DisplayClass20_0.<StopNote>b__0
bool VROSC::MidiManager::$$c__DisplayClass20_0::$StopNote$b__0(::VROSC::MidiManager::ActiveNote* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$$c__DisplayClass20_0::<StopNote>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StopNote>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a);
}
// Autogenerated method: VROSC.MidiManager/VROSC.<>c__DisplayClass20_0.<StopNote>b__1
bool VROSC::MidiManager::$$c__DisplayClass20_0::$StopNote$b__1(::VROSC::MidiManager::ActiveNote* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$$c__DisplayClass20_0::<StopNote>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StopNote>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.MidiManager/VROSC.<>c__DisplayClass23_0
#include "VROSC/MidiManager_--c__DisplayClass23_0.hpp"
// Including type: VROSC.MidiManager/VROSC.ActiveNote
#include "VROSC/MidiManager_ActiveNote.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object patch
[[deprecated]] ::Il2CppObject*& VROSC::MidiManager::$$c__DisplayClass23_0::dyn_patch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$$c__DisplayClass23_0::dyn_patch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "patch"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 channel
[[deprecated]] int& VROSC::MidiManager::$$c__DisplayClass23_0::dyn_channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$$c__DisplayClass23_0::dyn_channel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.MidiManager/VROSC.<>c__DisplayClass23_0.<IsPlaying>b__0
bool VROSC::MidiManager::$$c__DisplayClass23_0::$IsPlaying$b__0(::VROSC::MidiManager::ActiveNote* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$$c__DisplayClass23_0::<IsPlaying>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<IsPlaying>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.MidiManager/VROSC.<>c__DisplayClass26_0
#include "VROSC/MidiManager_--c__DisplayClass26_0.hpp"
// Including type: VROSC.MidiManager/VROSC.ActiveNote
#include "VROSC/MidiManager_ActiveNote.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object patch
[[deprecated]] ::Il2CppObject*& VROSC::MidiManager::$$c__DisplayClass26_0::dyn_patch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$$c__DisplayClass26_0::dyn_patch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "patch"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 channel
[[deprecated]] int& VROSC::MidiManager::$$c__DisplayClass26_0::dyn_channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$$c__DisplayClass26_0::dyn_channel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.MidiManager/VROSC.<>c__DisplayClass26_0.<AllNotesOff>b__0
bool VROSC::MidiManager::$$c__DisplayClass26_0::$AllNotesOff$b__0(::VROSC::MidiManager::ActiveNote* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$$c__DisplayClass26_0::<AllNotesOff>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AllNotesOff>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.OscMessage
#include "VROSC/OscMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.OscMessage None
::VROSC::OscMessage VROSC::OscMessage::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OscMessage::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::OscMessage>("VROSC", "OscMessage", "None"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.OscMessage None
void VROSC::OscMessage::_set_None(::VROSC::OscMessage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OscMessage::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "OscMessage", "None", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.OscMessage PlayMidiNote
::VROSC::OscMessage VROSC::OscMessage::_get_PlayMidiNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OscMessage::_get_PlayMidiNote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::OscMessage>("VROSC", "OscMessage", "PlayMidiNote"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.OscMessage PlayMidiNote
void VROSC::OscMessage::_set_PlayMidiNote(::VROSC::OscMessage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OscMessage::_set_PlayMidiNote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "OscMessage", "PlayMidiNote", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.OscMessage MidiPitchBend
::VROSC::OscMessage VROSC::OscMessage::_get_MidiPitchBend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OscMessage::_get_MidiPitchBend");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::OscMessage>("VROSC", "OscMessage", "MidiPitchBend"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.OscMessage MidiPitchBend
void VROSC::OscMessage::_set_MidiPitchBend(::VROSC::OscMessage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OscMessage::_set_MidiPitchBend");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "OscMessage", "MidiPitchBend", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.OscMessage MidiCC
::VROSC::OscMessage VROSC::OscMessage::_get_MidiCC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OscMessage::_get_MidiCC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::OscMessage>("VROSC", "OscMessage", "MidiCC"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.OscMessage MidiCC
void VROSC::OscMessage::_set_MidiCC(::VROSC::OscMessage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OscMessage::_set_MidiCC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "OscMessage", "MidiCC", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& VROSC::OscMessage::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OscMessage::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.OscMessages
#include "VROSC/OscMessages.hpp"
// Including type: VROSC.OscMessage
#include "VROSC/OscMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VROSC.OscMessages.GetOSCMessageString
::StringW VROSC::OscMessages::GetOSCMessageString(::VROSC::OscMessage message, ::ArrayW<::Il2CppObject*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OscMessages::GetOSCMessageString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "OscMessages", "GetOSCMessageString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, arguments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.PassthroughEnabler
#include "VROSC/PassthroughEnabler.hpp"
// Including type: VROSC.Environment
#include "VROSC/Environment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.Environment _environment
[[deprecated]] ::VROSC::Environment*& VROSC::PassthroughEnabler::dyn__environment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PassthroughEnabler::dyn__environment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environment"))->offset;
  return *reinterpret_cast<::VROSC::Environment**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.PassthroughEnabler.Awake
void VROSC::PassthroughEnabler::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PassthroughEnabler::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.PassthroughEnabler.NewEnvironmentSelected
void VROSC::PassthroughEnabler::NewEnvironmentSelected(::VROSC::Environment* environment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PassthroughEnabler::NewEnvironmentSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NewEnvironmentSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, environment);
}
