// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlElementEventHandler
#include "System/Xml/Serialization/XmlElementEventHandler.hpp"
// Including type: System.Xml.Serialization.XmlElementEventArgs
#include "System/Xml/Serialization/XmlElementEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Serialization.XmlElementEventHandler.Invoke
void System::Xml::Serialization::XmlElementEventHandler::Invoke(::Il2CppObject* sender, ::System::Xml::Serialization::XmlElementEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlElementEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Xml.Serialization.XmlElementEventHandler.BeginInvoke
::System::IAsyncResult* System::Xml::Serialization::XmlElementEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::Xml::Serialization::XmlElementEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlElementEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.Xml.Serialization.XmlElementEventHandler.EndInvoke
void System::Xml::Serialization::XmlElementEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlElementEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlElementEventArgs
#include "System/Xml/Serialization/XmlElementEventArgs.hpp"
// Including type: System.Xml.XmlElement
#include "System/Xml/XmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object o
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Serialization::XmlElementEventArgs::dyn_o() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementEventArgs::dyn_o");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "o"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlElement elem
[[deprecated("Use field access instead!")]] ::System::Xml::XmlElement*& System::Xml::Serialization::XmlElementEventArgs::dyn_elem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementEventArgs::dyn_elem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elem"))->offset;
  return *reinterpret_cast<::System::Xml::XmlElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String qnames
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlElementEventArgs::dyn_qnames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementEventArgs::dyn_qnames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qnames"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lineNumber
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlElementEventArgs::dyn_lineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementEventArgs::dyn_lineNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 linePosition
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlElementEventArgs::dyn_linePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementEventArgs::dyn_linePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlNodeEventHandler
#include "System/Xml/Serialization/XmlNodeEventHandler.hpp"
// Including type: System.Xml.Serialization.XmlNodeEventArgs
#include "System/Xml/Serialization/XmlNodeEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Serialization.XmlNodeEventHandler.Invoke
void System::Xml::Serialization::XmlNodeEventHandler::Invoke(::Il2CppObject* sender, ::System::Xml::Serialization::XmlNodeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlNodeEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlNodeEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Xml.Serialization.XmlNodeEventHandler.BeginInvoke
::System::IAsyncResult* System::Xml::Serialization::XmlNodeEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::Xml::Serialization::XmlNodeEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlNodeEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlNodeEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.Xml.Serialization.XmlNodeEventHandler.EndInvoke
void System::Xml::Serialization::XmlNodeEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlNodeEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlNodeEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlNodeEventArgs
#include "System/Xml/Serialization/XmlNodeEventArgs.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object o
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Serialization::XmlNodeEventArgs::dyn_o() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlNodeEventArgs::dyn_o");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "o"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNode xmlNode
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNode*& System::Xml::Serialization::XmlNodeEventArgs::dyn_xmlNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlNodeEventArgs::dyn_xmlNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlNode"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lineNumber
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlNodeEventArgs::dyn_lineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlNodeEventArgs::dyn_lineNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 linePosition
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlNodeEventArgs::dyn_linePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlNodeEventArgs::dyn_linePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.UnreferencedObjectEventHandler
#include "System/Xml/Serialization/UnreferencedObjectEventHandler.hpp"
// Including type: System.Xml.Serialization.UnreferencedObjectEventArgs
#include "System/Xml/Serialization/UnreferencedObjectEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Serialization.UnreferencedObjectEventHandler.Invoke
void System::Xml::Serialization::UnreferencedObjectEventHandler::Invoke(::Il2CppObject* sender, ::System::Xml::Serialization::UnreferencedObjectEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::UnreferencedObjectEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::UnreferencedObjectEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Xml.Serialization.UnreferencedObjectEventHandler.BeginInvoke
::System::IAsyncResult* System::Xml::Serialization::UnreferencedObjectEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::Xml::Serialization::UnreferencedObjectEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::UnreferencedObjectEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::UnreferencedObjectEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.Xml.Serialization.UnreferencedObjectEventHandler.EndInvoke
void System::Xml::Serialization::UnreferencedObjectEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::UnreferencedObjectEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::UnreferencedObjectEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.UnreferencedObjectEventArgs
#include "System/Xml/Serialization/UnreferencedObjectEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object o
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Serialization::UnreferencedObjectEventArgs::dyn_o() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::UnreferencedObjectEventArgs::dyn_o");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "o"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String id
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::UnreferencedObjectEventArgs::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::UnreferencedObjectEventArgs::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.IXmlSerializable
#include "System/Xml/Serialization/IXmlSerializable.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Serialization.IXmlSerializable.GetSchema
::System::Xml::Schema::XmlSchema* System::Xml::Serialization::IXmlSerializable::GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::IXmlSerializable::GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::IXmlSerializable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.IXmlSerializable.ReadXml
void System::Xml::Serialization::IXmlSerializable::ReadXml(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::IXmlSerializable::ReadXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::IXmlSerializable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Xml.Serialization.IXmlSerializable.WriteXml
void System::Xml::Serialization::IXmlSerializable::WriteXml(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::IXmlSerializable::WriteXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::IXmlSerializable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.IXmlTextParser
#include "System/Xml/Serialization/IXmlTextParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Serialization.IXmlTextParser.get_Normalized
bool System::Xml::Serialization::IXmlTextParser::get_Normalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::IXmlTextParser::get_Normalized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::IXmlTextParser*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.IXmlTextParser.set_Normalized
void System::Xml::Serialization::IXmlTextParser::set_Normalized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::IXmlTextParser::set_Normalized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::IXmlTextParser*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.KeyHelper
#include "System/Xml/Serialization/KeyHelper.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Serialization.KeyHelper.AddField
void System::Xml::Serialization::KeyHelper::AddField(::System::Text::StringBuilder* sb, int n, ::StringW val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::KeyHelper::AddField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "KeyHelper", "AddField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, n, val);
}
// Autogenerated method: System.Xml.Serialization.KeyHelper.AddField
void System::Xml::Serialization::KeyHelper::AddField(::System::Text::StringBuilder* sb, int n, ::StringW val, ::StringW def) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::KeyHelper::AddField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "KeyHelper", "AddField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractType(def)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, n, val, def);
}
// Autogenerated method: System.Xml.Serialization.KeyHelper.AddField
void System::Xml::Serialization::KeyHelper::AddField(::System::Text::StringBuilder* sb, int n, bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::KeyHelper::AddField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "KeyHelper", "AddField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, n, val);
}
// Autogenerated method: System.Xml.Serialization.KeyHelper.AddField
void System::Xml::Serialization::KeyHelper::AddField(::System::Text::StringBuilder* sb, int n, bool val, bool def) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::KeyHelper::AddField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "KeyHelper", "AddField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractType(def)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, n, val, def);
}
// Autogenerated method: System.Xml.Serialization.KeyHelper.AddField
void System::Xml::Serialization::KeyHelper::AddField(::System::Text::StringBuilder* sb, int n, int val, int def) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::KeyHelper::AddField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "KeyHelper", "AddField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractType(def)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, n, val, def);
}
// Autogenerated method: System.Xml.Serialization.KeyHelper.AddField
void System::Xml::Serialization::KeyHelper::AddField(::System::Text::StringBuilder* sb, int n, ::System::Type* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::KeyHelper::AddField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "KeyHelper", "AddField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, n, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.ReflectionHelper
#include "System/Xml/Serialization/ReflectionHelper.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapping
#include "System/Xml/Serialization/XmlTypeMapping.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Reflection.ParameterModifier[] empty_modifiers
::ArrayW<::System::Reflection::ParameterModifier> System::Xml::Serialization::ReflectionHelper::_get_empty_modifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ReflectionHelper::_get_empty_modifiers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Reflection::ParameterModifier>>("System.Xml.Serialization", "ReflectionHelper", "empty_modifiers"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Reflection.ParameterModifier[] empty_modifiers
void System::Xml::Serialization::ReflectionHelper::_set_empty_modifiers(::ArrayW<::System::Reflection::ParameterModifier> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ReflectionHelper::_set_empty_modifiers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "ReflectionHelper", "empty_modifiers", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _clrTypes
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Serialization::ReflectionHelper::dyn__clrTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ReflectionHelper::dyn__clrTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clrTypes"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _schemaTypes
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Serialization::ReflectionHelper::dyn__schemaTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ReflectionHelper::dyn__schemaTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_schemaTypes"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.ReflectionHelper..cctor
void System::Xml::Serialization::ReflectionHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ReflectionHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "ReflectionHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.ReflectionHelper.RegisterSchemaType
void System::Xml::Serialization::ReflectionHelper::RegisterSchemaType(::System::Xml::Serialization::XmlTypeMapping* map, ::StringW xmlType, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ReflectionHelper::RegisterSchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterSchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(map), ::il2cpp_utils::ExtractType(xmlType), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, map, xmlType, ns);
}
// Autogenerated method: System.Xml.Serialization.ReflectionHelper.GetRegisteredSchemaType
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::ReflectionHelper::GetRegisteredSchemaType(::StringW xmlType, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ReflectionHelper::GetRegisteredSchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRegisteredSchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlType), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method, xmlType, ns);
}
// Autogenerated method: System.Xml.Serialization.ReflectionHelper.RegisterClrType
void System::Xml::Serialization::ReflectionHelper::RegisterClrType(::System::Xml::Serialization::XmlTypeMapping* map, ::System::Type* type, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ReflectionHelper::RegisterClrType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterClrType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(map), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, map, type, ns);
}
// Autogenerated method: System.Xml.Serialization.ReflectionHelper.GetRegisteredClrType
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::ReflectionHelper::GetRegisteredClrType(::System::Type* type, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ReflectionHelper::GetRegisteredClrType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRegisteredClrType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method, type, ns);
}
// Autogenerated method: System.Xml.Serialization.ReflectionHelper.CheckSerializableType
void System::Xml::Serialization::ReflectionHelper::CheckSerializableType(::System::Type* type, bool allowPrivateConstructors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ReflectionHelper::CheckSerializableType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "ReflectionHelper", "CheckSerializableType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(allowPrivateConstructors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, allowPrivateConstructors);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.SchemaTypes
#include "System/Xml/Serialization/SchemaTypes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Serialization.SchemaTypes NotSet
::System::Xml::Serialization::SchemaTypes System::Xml::Serialization::SchemaTypes::_get_NotSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SchemaTypes::_get_NotSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Serialization::SchemaTypes>("System.Xml.Serialization", "SchemaTypes", "NotSet"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Serialization.SchemaTypes NotSet
void System::Xml::Serialization::SchemaTypes::_set_NotSet(::System::Xml::Serialization::SchemaTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SchemaTypes::_set_NotSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "SchemaTypes", "NotSet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Serialization.SchemaTypes Primitive
::System::Xml::Serialization::SchemaTypes System::Xml::Serialization::SchemaTypes::_get_Primitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SchemaTypes::_get_Primitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Serialization::SchemaTypes>("System.Xml.Serialization", "SchemaTypes", "Primitive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Serialization.SchemaTypes Primitive
void System::Xml::Serialization::SchemaTypes::_set_Primitive(::System::Xml::Serialization::SchemaTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SchemaTypes::_set_Primitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "SchemaTypes", "Primitive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Serialization.SchemaTypes Enum
::System::Xml::Serialization::SchemaTypes System::Xml::Serialization::SchemaTypes::_get_Enum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SchemaTypes::_get_Enum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Serialization::SchemaTypes>("System.Xml.Serialization", "SchemaTypes", "Enum"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Serialization.SchemaTypes Enum
void System::Xml::Serialization::SchemaTypes::_set_Enum(::System::Xml::Serialization::SchemaTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SchemaTypes::_set_Enum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "SchemaTypes", "Enum", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Serialization.SchemaTypes Array
::System::Xml::Serialization::SchemaTypes System::Xml::Serialization::SchemaTypes::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SchemaTypes::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Serialization::SchemaTypes>("System.Xml.Serialization", "SchemaTypes", "Array"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Serialization.SchemaTypes Array
void System::Xml::Serialization::SchemaTypes::_set_Array(::System::Xml::Serialization::SchemaTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SchemaTypes::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "SchemaTypes", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Serialization.SchemaTypes Class
::System::Xml::Serialization::SchemaTypes System::Xml::Serialization::SchemaTypes::_get_Class() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SchemaTypes::_get_Class");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Serialization::SchemaTypes>("System.Xml.Serialization", "SchemaTypes", "Class"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Serialization.SchemaTypes Class
void System::Xml::Serialization::SchemaTypes::_set_Class(::System::Xml::Serialization::SchemaTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SchemaTypes::_set_Class");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "SchemaTypes", "Class", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Serialization.SchemaTypes XmlSerializable
::System::Xml::Serialization::SchemaTypes System::Xml::Serialization::SchemaTypes::_get_XmlSerializable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SchemaTypes::_get_XmlSerializable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Serialization::SchemaTypes>("System.Xml.Serialization", "SchemaTypes", "XmlSerializable"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Serialization.SchemaTypes XmlSerializable
void System::Xml::Serialization::SchemaTypes::_set_XmlSerializable(::System::Xml::Serialization::SchemaTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SchemaTypes::_set_XmlSerializable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "SchemaTypes", "XmlSerializable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Serialization.SchemaTypes XmlNode
::System::Xml::Serialization::SchemaTypes System::Xml::Serialization::SchemaTypes::_get_XmlNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SchemaTypes::_get_XmlNode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Serialization::SchemaTypes>("System.Xml.Serialization", "SchemaTypes", "XmlNode"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Serialization.SchemaTypes XmlNode
void System::Xml::Serialization::SchemaTypes::_set_XmlNode(::System::Xml::Serialization::SchemaTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SchemaTypes::_set_XmlNode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "SchemaTypes", "XmlNode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Serialization.SchemaTypes Void
::System::Xml::Serialization::SchemaTypes System::Xml::Serialization::SchemaTypes::_get_Void() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SchemaTypes::_get_Void");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Serialization::SchemaTypes>("System.Xml.Serialization", "SchemaTypes", "Void"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Serialization.SchemaTypes Void
void System::Xml::Serialization::SchemaTypes::_set_Void(::System::Xml::Serialization::SchemaTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SchemaTypes::_set_Void");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "SchemaTypes", "Void", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::SchemaTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SchemaTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.SerializationSource
#include "System/Xml/Serialization/SerializationSource.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type[] includedTypes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& System::Xml::Serialization::SerializationSource::dyn_includedTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SerializationSource::dyn_includedTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includedTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Type*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String namspace
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::SerializationSource::dyn_namspace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SerializationSource::dyn_namspace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namspace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean canBeGenerated
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::SerializationSource::dyn_canBeGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SerializationSource::dyn_canBeGenerated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canBeGenerated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.SerializationSource.BaseEquals
bool System::Xml::Serialization::SerializationSource::BaseEquals(::System::Xml::Serialization::SerializationSource* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SerializationSource::BaseEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlTypeSerializationSource
#include "System/Xml/Serialization/XmlTypeSerializationSource.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Serialization.XmlRootAttribute
#include "System/Xml/Serialization/XmlRootAttribute.hpp"
// Including type: System.Xml.Serialization.XmlAttributeOverrides
#include "System/Xml/Serialization/XmlAttributeOverrides.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String attributeOverridesHash
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlTypeSerializationSource::dyn_attributeOverridesHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeSerializationSource::dyn_attributeOverridesHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeOverridesHash"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::Serialization::XmlTypeSerializationSource::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeSerializationSource::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String rootHash
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlTypeSerializationSource::dyn_rootHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeSerializationSource::dyn_rootHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootHash"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeSerializationSource.Equals
bool System::Xml::Serialization::XmlTypeSerializationSource::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeSerializationSource::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeSerializationSource.GetHashCode
int System::Xml::Serialization::XmlTypeSerializationSource::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeSerializationSource::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlTypeConvertorAttribute
#include "System/Xml/Serialization/XmlTypeConvertorAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Method>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlTypeConvertorAttribute::dyn_$Method$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeConvertorAttribute::dyn_$Method$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Method>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeConvertorAttribute.get_Method
::StringW System::Xml::Serialization::XmlTypeConvertorAttribute::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeConvertorAttribute::get_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeConvertorAttribute.set_Method
void System::Xml::Serialization::XmlTypeConvertorAttribute::set_Method(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeConvertorAttribute::set_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.TypeData
#include "System/Xml/Serialization/TypeData.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.XmlSchemaPatternFacet
#include "System/Xml/Schema/XmlSchemaPatternFacet.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.InvalidOperationException
#include "System/InvalidOperationException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] keywords
::ArrayW<::StringW> System::Xml::Serialization::TypeData::_get_keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::_get_keywords");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Xml.Serialization", "TypeData", "keywords"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] keywords
void System::Xml::Serialization::TypeData::_set_keywords(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::_set_keywords");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "TypeData", "keywords", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::Serialization::TypeData::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String elementName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::TypeData::dyn_elementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::dyn_elementName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.SchemaTypes sType
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::SchemaTypes& System::Xml::Serialization::TypeData::dyn_sType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::dyn_sType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sType"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::SchemaTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type listItemType
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::Serialization::TypeData::dyn_listItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::dyn_listItemType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listItemType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String typeName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::TypeData::dyn_typeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::dyn_typeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String fullTypeName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::TypeData::dyn_fullTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::dyn_fullTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.TypeData listItemTypeData
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::TypeData*& System::Xml::Serialization::TypeData::dyn_listItemTypeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::dyn_listItemTypeData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listItemTypeData"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::TypeData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.TypeData mappedType
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::TypeData*& System::Xml::Serialization::TypeData::dyn_mappedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::dyn_mappedType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mappedType"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::TypeData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaPatternFacet facet
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaPatternFacet*& System::Xml::Serialization::TypeData::dyn_facet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::dyn_facet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "facet"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaPatternFacet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MethodInfo typeConvertor
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& System::Xml::Serialization::TypeData::dyn_typeConvertor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::dyn_typeConvertor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeConvertor"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasPublicConstructor
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::TypeData::dyn_hasPublicConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::dyn_hasPublicConstructor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasPublicConstructor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean nullableOverride
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::TypeData::dyn_nullableOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::dyn_nullableOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nullableOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.TypeData.get_TypeName
::StringW System::Xml::Serialization::TypeData::get_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::get_TypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.TypeData.get_XmlType
::StringW System::Xml::Serialization::TypeData::get_XmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::get_XmlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.TypeData.get_Type
::System::Type* System::Xml::Serialization::TypeData::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.TypeData.get_FullTypeName
::StringW System::Xml::Serialization::TypeData::get_FullTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::get_FullTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.TypeData.get_SchemaType
::System::Xml::Serialization::SchemaTypes System::Xml::Serialization::TypeData::get_SchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::get_SchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::SchemaTypes, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.TypeData.get_IsListType
bool System::Xml::Serialization::TypeData::get_IsListType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::get_IsListType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsListType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.TypeData.get_IsComplexType
bool System::Xml::Serialization::TypeData::get_IsComplexType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::get_IsComplexType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsComplexType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.TypeData.get_IsValueType
bool System::Xml::Serialization::TypeData::get_IsValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::get_IsValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.TypeData.get_IsNullable
bool System::Xml::Serialization::TypeData::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::get_IsNullable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.TypeData.set_IsNullable
void System::Xml::Serialization::TypeData::set_IsNullable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::set_IsNullable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.TypeData.get_ListItemTypeData
::System::Xml::Serialization::TypeData* System::Xml::Serialization::TypeData::get_ListItemTypeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::get_ListItemTypeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListItemTypeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::TypeData*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.TypeData.get_ListItemType
::System::Type* System::Xml::Serialization::TypeData::get_ListItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::get_ListItemType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.TypeData.get_IsXsdType
bool System::Xml::Serialization::TypeData::get_IsXsdType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::get_IsXsdType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsXsdType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.TypeData.get_HasPublicConstructor
bool System::Xml::Serialization::TypeData::get_HasPublicConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::get_HasPublicConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasPublicConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.TypeData..cctor
void System::Xml::Serialization::TypeData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "TypeData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.TypeData.LookupTypeConvertor
void System::Xml::Serialization::TypeData::LookupTypeConvertor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::LookupTypeConvertor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupTypeConvertor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.TypeData.ConvertForAssignment
void System::Xml::Serialization::TypeData::ConvertForAssignment(ByRef<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::ConvertForAssignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertForAssignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: System.Xml.Serialization.TypeData.GetIndexerProperty
::System::Reflection::PropertyInfo* System::Xml::Serialization::TypeData::GetIndexerProperty(::System::Type* collectionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::GetIndexerProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "TypeData", "GetIndexerProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collectionType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::PropertyInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, collectionType);
}
// Autogenerated method: System.Xml.Serialization.TypeData.CreateMissingAddMethodException
::System::InvalidOperationException* System::Xml::Serialization::TypeData::CreateMissingAddMethodException(::System::Type* type, ::StringW inheritFrom, ::System::Type* argumentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::CreateMissingAddMethodException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "TypeData", "CreateMissingAddMethodException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(inheritFrom), ::il2cpp_utils::ExtractType(argumentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::InvalidOperationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, inheritFrom, argumentType);
}
// Autogenerated method: System.Xml.Serialization.TypeData.GetGenericListItemType
::System::Type* System::Xml::Serialization::TypeData::GetGenericListItemType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeData::GetGenericListItemType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "TypeData", "GetGenericListItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.TypeMember
#include "System/Xml/Serialization/TypeMember.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::Serialization::TypeMember::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeMember::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String member
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::TypeMember::dyn_member() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeMember::dyn_member");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "member"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.TypeMember.Equals
bool System::Xml::Serialization::TypeMember::Equals(::System::Xml::Serialization::TypeMember* tm1, ::System::Xml::Serialization::TypeMember* tm2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeMember::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "TypeMember", "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tm1), ::il2cpp_utils::ExtractType(tm2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tm1, tm2);
}
// Autogenerated method: System.Xml.Serialization.TypeMember.GetHashCode
int System::Xml::Serialization::TypeMember::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeMember::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.TypeMember.Equals
bool System::Xml::Serialization::TypeMember::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeMember::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Xml.Serialization.TypeMember.ToString
::StringW System::Xml::Serialization::TypeMember::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeMember::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.TypeTranslator
#include "System/Xml/Serialization/TypeTranslator.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.Serialization.TypeData
#include "System/Xml/Serialization/TypeData.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable nameCache
::System::Collections::Hashtable* System::Xml::Serialization::TypeTranslator::_get_nameCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeTranslator::_get_nameCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Xml.Serialization", "TypeTranslator", "nameCache"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable nameCache
void System::Xml::Serialization::TypeTranslator::_set_nameCache(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeTranslator::_set_nameCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "TypeTranslator", "nameCache", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable primitiveTypes
::System::Collections::Hashtable* System::Xml::Serialization::TypeTranslator::_get_primitiveTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeTranslator::_get_primitiveTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Xml.Serialization", "TypeTranslator", "primitiveTypes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable primitiveTypes
void System::Xml::Serialization::TypeTranslator::_set_primitiveTypes(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeTranslator::_set_primitiveTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "TypeTranslator", "primitiveTypes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable primitiveArrayTypes
::System::Collections::Hashtable* System::Xml::Serialization::TypeTranslator::_get_primitiveArrayTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeTranslator::_get_primitiveArrayTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Xml.Serialization", "TypeTranslator", "primitiveArrayTypes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable primitiveArrayTypes
void System::Xml::Serialization::TypeTranslator::_set_primitiveArrayTypes(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeTranslator::_set_primitiveArrayTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "TypeTranslator", "primitiveArrayTypes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable nullableTypes
::System::Collections::Hashtable* System::Xml::Serialization::TypeTranslator::_get_nullableTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeTranslator::_get_nullableTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Xml.Serialization", "TypeTranslator", "nullableTypes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable nullableTypes
void System::Xml::Serialization::TypeTranslator::_set_nullableTypes(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeTranslator::_set_nullableTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "TypeTranslator", "nullableTypes", value));
}
// Autogenerated method: System.Xml.Serialization.TypeTranslator..cctor
void System::Xml::Serialization::TypeTranslator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeTranslator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "TypeTranslator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.TypeTranslator.GetTypeData
::System::Xml::Serialization::TypeData* System::Xml::Serialization::TypeTranslator::GetTypeData(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeTranslator::GetTypeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "TypeTranslator", "GetTypeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::TypeData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Xml.Serialization.TypeTranslator.GetTypeData
::System::Xml::Serialization::TypeData* System::Xml::Serialization::TypeTranslator::GetTypeData(::System::Type* runtimeType, ::StringW xmlDataType, bool underlyingEnumType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeTranslator::GetTypeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "TypeTranslator", "GetTypeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runtimeType), ::il2cpp_utils::ExtractType(xmlDataType), ::il2cpp_utils::ExtractType(underlyingEnumType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::TypeData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, runtimeType, xmlDataType, underlyingEnumType);
}
// Autogenerated method: System.Xml.Serialization.TypeTranslator.GetPrimitiveTypeData
::System::Xml::Serialization::TypeData* System::Xml::Serialization::TypeTranslator::GetPrimitiveTypeData(::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeTranslator::GetPrimitiveTypeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "TypeTranslator", "GetPrimitiveTypeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::TypeData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeName);
}
// Autogenerated method: System.Xml.Serialization.TypeTranslator.GetPrimitiveTypeData
::System::Xml::Serialization::TypeData* System::Xml::Serialization::TypeTranslator::GetPrimitiveTypeData(::StringW typeName, bool nullable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeTranslator::GetPrimitiveTypeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "TypeTranslator", "GetPrimitiveTypeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName), ::il2cpp_utils::ExtractType(nullable)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::TypeData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeName, nullable);
}
// Autogenerated method: System.Xml.Serialization.TypeTranslator.FindPrimitiveTypeData
::System::Xml::Serialization::TypeData* System::Xml::Serialization::TypeTranslator::FindPrimitiveTypeData(::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeTranslator::FindPrimitiveTypeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "TypeTranslator", "FindPrimitiveTypeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::TypeData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeName);
}
// Autogenerated method: System.Xml.Serialization.TypeTranslator.GetArrayName
::StringW System::Xml::Serialization::TypeTranslator::GetArrayName(::StringW elemName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeTranslator::GetArrayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "TypeTranslator", "GetArrayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elemName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, elemName);
}
// Autogenerated method: System.Xml.Serialization.TypeTranslator.ParseArrayType
void System::Xml::Serialization::TypeTranslator::ParseArrayType(::StringW arrayType, ByRef<::StringW> type, ByRef<::StringW> ns, ByRef<::StringW> dimensions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeTranslator::ParseArrayType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "TypeTranslator", "ParseArrayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arrayType), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arrayType, byref(type), byref(ns), byref(dimensions));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlAnyAttributeAttribute
#include "System/Xml/Serialization/XmlAnyAttributeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlAnyElementAttribute
#include "System/Xml/Serialization/XmlAnyElementAttribute.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String elementName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlAnyElementAttribute::dyn_elementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAnyElementAttribute::dyn_elementName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String ns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlAnyElementAttribute::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAnyElementAttribute::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 order
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlAnyElementAttribute::dyn_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAnyElementAttribute::dyn_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlAnyElementAttribute.get_Name
::StringW System::Xml::Serialization::XmlAnyElementAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAnyElementAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAnyElementAttribute.get_Namespace
::StringW System::Xml::Serialization::XmlAnyElementAttribute::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAnyElementAttribute::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAnyElementAttribute.get_Order
int System::Xml::Serialization::XmlAnyElementAttribute::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAnyElementAttribute::get_Order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAnyElementAttribute.AddKeyHash
void System::Xml::Serialization::XmlAnyElementAttribute::AddKeyHash(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAnyElementAttribute::AddKeyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlAnyElementAttributes
#include "System/Xml/Serialization/XmlAnyElementAttributes.hpp"
// Including type: System.Xml.Serialization.XmlAnyElementAttribute
#include "System/Xml/Serialization/XmlAnyElementAttribute.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Serialization.XmlAnyElementAttributes.get_Item
::System::Xml::Serialization::XmlAnyElementAttribute* System::Xml::Serialization::XmlAnyElementAttributes::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAnyElementAttributes::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlAnyElementAttribute*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.Serialization.XmlAnyElementAttributes.get_Order
int System::Xml::Serialization::XmlAnyElementAttributes::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAnyElementAttributes::get_Order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAnyElementAttributes.Add
int System::Xml::Serialization::XmlAnyElementAttributes::Add(::System::Xml::Serialization::XmlAnyElementAttribute* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAnyElementAttributes::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, attribute);
}
// Autogenerated method: System.Xml.Serialization.XmlAnyElementAttributes.AddKeyHash
void System::Xml::Serialization::XmlAnyElementAttributes::AddKeyHash(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAnyElementAttributes::AddKeyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlArrayAttribute
#include "System/Xml/Serialization/XmlArrayAttribute.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String elementName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlArrayAttribute::dyn_elementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayAttribute::dyn_elementName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaForm form
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaForm& System::Xml::Serialization::XmlArrayAttribute::dyn_form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayAttribute::dyn_form");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "form"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaForm*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isNullable
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlArrayAttribute::dyn_isNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayAttribute::dyn_isNullable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isNullable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String ns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlArrayAttribute::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayAttribute::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 order
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlArrayAttribute::dyn_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayAttribute::dyn_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlArrayAttribute.get_ElementName
::StringW System::Xml::Serialization::XmlArrayAttribute::get_ElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayAttribute::get_ElementName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlArrayAttribute.get_Form
::System::Xml::Schema::XmlSchemaForm System::Xml::Serialization::XmlArrayAttribute::get_Form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayAttribute::get_Form");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Form", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaForm, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlArrayAttribute.get_IsNullable
bool System::Xml::Serialization::XmlArrayAttribute::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayAttribute::get_IsNullable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlArrayAttribute.get_Namespace
::StringW System::Xml::Serialization::XmlArrayAttribute::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayAttribute::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlArrayAttribute.get_Order
int System::Xml::Serialization::XmlArrayAttribute::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayAttribute::get_Order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlArrayAttribute.AddKeyHash
void System::Xml::Serialization::XmlArrayAttribute::AddKeyHash(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayAttribute::AddKeyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlArrayItemAttribute
#include "System/Xml/Serialization/XmlArrayItemAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String dataType
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlArrayItemAttribute::dyn_dataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttribute::dyn_dataType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String elementName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlArrayItemAttribute::dyn_elementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttribute::dyn_elementName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaForm form
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaForm& System::Xml::Serialization::XmlArrayItemAttribute::dyn_form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttribute::dyn_form");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "form"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaForm*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String ns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlArrayItemAttribute::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttribute::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isNullable
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlArrayItemAttribute::dyn_isNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttribute::dyn_isNullable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isNullable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isNullableSpecified
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlArrayItemAttribute::dyn_isNullableSpecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttribute::dyn_isNullableSpecified");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isNullableSpecified"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nestingLevel
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlArrayItemAttribute::dyn_nestingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttribute::dyn_nestingLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nestingLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::Serialization::XmlArrayItemAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlArrayItemAttribute.get_DataType
::StringW System::Xml::Serialization::XmlArrayItemAttribute::get_DataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttribute::get_DataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlArrayItemAttribute.get_ElementName
::StringW System::Xml::Serialization::XmlArrayItemAttribute::get_ElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttribute::get_ElementName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlArrayItemAttribute.get_Form
::System::Xml::Schema::XmlSchemaForm System::Xml::Serialization::XmlArrayItemAttribute::get_Form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttribute::get_Form");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Form", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaForm, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlArrayItemAttribute.get_Namespace
::StringW System::Xml::Serialization::XmlArrayItemAttribute::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttribute::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlArrayItemAttribute.get_IsNullable
bool System::Xml::Serialization::XmlArrayItemAttribute::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttribute::get_IsNullable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlArrayItemAttribute.get_IsNullableSpecified
bool System::Xml::Serialization::XmlArrayItemAttribute::get_IsNullableSpecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttribute::get_IsNullableSpecified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullableSpecified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlArrayItemAttribute.get_Type
::System::Type* System::Xml::Serialization::XmlArrayItemAttribute::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttribute::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlArrayItemAttribute.get_NestingLevel
int System::Xml::Serialization::XmlArrayItemAttribute::get_NestingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttribute::get_NestingLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NestingLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlArrayItemAttribute.AddKeyHash
void System::Xml::Serialization::XmlArrayItemAttribute::AddKeyHash(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttribute::AddKeyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlArrayItemAttributes
#include "System/Xml/Serialization/XmlArrayItemAttributes.hpp"
// Including type: System.Xml.Serialization.XmlArrayItemAttribute
#include "System/Xml/Serialization/XmlArrayItemAttribute.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Serialization.XmlArrayItemAttributes.get_Item
::System::Xml::Serialization::XmlArrayItemAttribute* System::Xml::Serialization::XmlArrayItemAttributes::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttributes::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlArrayItemAttribute*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.Serialization.XmlArrayItemAttributes.Add
int System::Xml::Serialization::XmlArrayItemAttributes::Add(::System::Xml::Serialization::XmlArrayItemAttribute* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttributes::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, attribute);
}
// Autogenerated method: System.Xml.Serialization.XmlArrayItemAttributes.AddKeyHash
void System::Xml::Serialization::XmlArrayItemAttributes::AddKeyHash(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlArrayItemAttributes::AddKeyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlAttributeAttribute
#include "System/Xml/Serialization/XmlAttributeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String attributeName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlAttributeAttribute::dyn_attributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributeAttribute::dyn_attributeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String dataType
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlAttributeAttribute::dyn_dataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributeAttribute::dyn_dataType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::Serialization::XmlAttributeAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributeAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaForm form
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaForm& System::Xml::Serialization::XmlAttributeAttribute::dyn_form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributeAttribute::dyn_form");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "form"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaForm*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String ns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlAttributeAttribute::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributeAttribute::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributeAttribute.get_AttributeName
::StringW System::Xml::Serialization::XmlAttributeAttribute::get_AttributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributeAttribute::get_AttributeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AttributeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributeAttribute.get_DataType
::StringW System::Xml::Serialization::XmlAttributeAttribute::get_DataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributeAttribute::get_DataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributeAttribute.set_DataType
void System::Xml::Serialization::XmlAttributeAttribute::set_DataType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributeAttribute::set_DataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributeAttribute.get_Form
::System::Xml::Schema::XmlSchemaForm System::Xml::Serialization::XmlAttributeAttribute::get_Form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributeAttribute::get_Form");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Form", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaForm, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributeAttribute.get_Namespace
::StringW System::Xml::Serialization::XmlAttributeAttribute::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributeAttribute::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributeAttribute.AddKeyHash
void System::Xml::Serialization::XmlAttributeAttribute::AddKeyHash(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributeAttribute::AddKeyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlAttributeOverrides
#include "System/Xml/Serialization/XmlAttributeOverrides.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.Serialization.XmlAttributes
#include "System/Xml/Serialization/XmlAttributes.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Serialization.TypeMember
#include "System/Xml/Serialization/TypeMember.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable overrides
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Serialization::XmlAttributeOverrides::dyn_overrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributeOverrides::dyn_overrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrides"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributeOverrides.get_Item
::System::Xml::Serialization::XmlAttributes* System::Xml::Serialization::XmlAttributeOverrides::get_Item(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributeOverrides::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlAttributes*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributeOverrides.get_Item
::System::Xml::Serialization::XmlAttributes* System::Xml::Serialization::XmlAttributeOverrides::get_Item(::System::Type* type, ::StringW member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributeOverrides::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlAttributes*, false>(this, ___internal__method, type, member);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributeOverrides.GetKey
::System::Xml::Serialization::TypeMember* System::Xml::Serialization::XmlAttributeOverrides::GetKey(::System::Type* type, ::StringW member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributeOverrides::GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::TypeMember*, false>(this, ___internal__method, type, member);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributeOverrides.AddKeyHash
void System::Xml::Serialization::XmlAttributeOverrides::AddKeyHash(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributeOverrides::AddKeyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlAttributes
#include "System/Xml/Serialization/XmlAttributes.hpp"
// Including type: System.Xml.Serialization.XmlAnyAttributeAttribute
#include "System/Xml/Serialization/XmlAnyAttributeAttribute.hpp"
// Including type: System.Xml.Serialization.XmlAnyElementAttributes
#include "System/Xml/Serialization/XmlAnyElementAttributes.hpp"
// Including type: System.Xml.Serialization.XmlArrayAttribute
#include "System/Xml/Serialization/XmlArrayAttribute.hpp"
// Including type: System.Xml.Serialization.XmlArrayItemAttributes
#include "System/Xml/Serialization/XmlArrayItemAttributes.hpp"
// Including type: System.Xml.Serialization.XmlAttributeAttribute
#include "System/Xml/Serialization/XmlAttributeAttribute.hpp"
// Including type: System.Xml.Serialization.XmlChoiceIdentifierAttribute
#include "System/Xml/Serialization/XmlChoiceIdentifierAttribute.hpp"
// Including type: System.Xml.Serialization.XmlElementAttributes
#include "System/Xml/Serialization/XmlElementAttributes.hpp"
// Including type: System.Xml.Serialization.XmlEnumAttribute
#include "System/Xml/Serialization/XmlEnumAttribute.hpp"
// Including type: System.Xml.Serialization.XmlRootAttribute
#include "System/Xml/Serialization/XmlRootAttribute.hpp"
// Including type: System.Xml.Serialization.XmlTextAttribute
#include "System/Xml/Serialization/XmlTextAttribute.hpp"
// Including type: System.Xml.Serialization.XmlTypeAttribute
#include "System/Xml/Serialization/XmlTypeAttribute.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Reflection.ICustomAttributeProvider
#include "System/Reflection/ICustomAttributeProvider.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlAnyAttributeAttribute xmlAnyAttribute
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlAnyAttributeAttribute*& System::Xml::Serialization::XmlAttributes::dyn_xmlAnyAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::dyn_xmlAnyAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlAnyAttribute"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlAnyAttributeAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlAnyElementAttributes xmlAnyElements
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlAnyElementAttributes*& System::Xml::Serialization::XmlAttributes::dyn_xmlAnyElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::dyn_xmlAnyElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlAnyElements"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlAnyElementAttributes**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlArrayAttribute xmlArray
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlArrayAttribute*& System::Xml::Serialization::XmlAttributes::dyn_xmlArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::dyn_xmlArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlArray"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlArrayAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlArrayItemAttributes xmlArrayItems
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlArrayItemAttributes*& System::Xml::Serialization::XmlAttributes::dyn_xmlArrayItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::dyn_xmlArrayItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlArrayItems"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlArrayItemAttributes**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlAttributeAttribute xmlAttribute
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlAttributeAttribute*& System::Xml::Serialization::XmlAttributes::dyn_xmlAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::dyn_xmlAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlAttribute"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlAttributeAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlChoiceIdentifierAttribute xmlChoiceIdentifier
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlChoiceIdentifierAttribute*& System::Xml::Serialization::XmlAttributes::dyn_xmlChoiceIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::dyn_xmlChoiceIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlChoiceIdentifier"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlChoiceIdentifierAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object xmlDefaultValue
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Serialization::XmlAttributes::dyn_xmlDefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::dyn_xmlDefaultValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlDefaultValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlElementAttributes xmlElements
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlElementAttributes*& System::Xml::Serialization::XmlAttributes::dyn_xmlElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::dyn_xmlElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlElements"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlElementAttributes**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlEnumAttribute xmlEnum
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlEnumAttribute*& System::Xml::Serialization::XmlAttributes::dyn_xmlEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::dyn_xmlEnum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlEnum"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlEnumAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean xmlIgnore
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlAttributes::dyn_xmlIgnore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::dyn_xmlIgnore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlIgnore"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean xmlns
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlAttributes::dyn_xmlns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::dyn_xmlns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlns"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlRootAttribute xmlRoot
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlRootAttribute*& System::Xml::Serialization::XmlAttributes::dyn_xmlRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::dyn_xmlRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlRoot"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlRootAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlTextAttribute xmlText
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlTextAttribute*& System::Xml::Serialization::XmlAttributes::dyn_xmlText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::dyn_xmlText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlText"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlTextAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlTypeAttribute xmlType
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlTypeAttribute*& System::Xml::Serialization::XmlAttributes::dyn_xmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::dyn_xmlType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlType"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlTypeAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributes.get_XmlAnyAttribute
::System::Xml::Serialization::XmlAnyAttributeAttribute* System::Xml::Serialization::XmlAttributes::get_XmlAnyAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::get_XmlAnyAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlAnyAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlAnyAttributeAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributes.get_XmlAnyElements
::System::Xml::Serialization::XmlAnyElementAttributes* System::Xml::Serialization::XmlAttributes::get_XmlAnyElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::get_XmlAnyElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlAnyElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlAnyElementAttributes*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributes.get_XmlArray
::System::Xml::Serialization::XmlArrayAttribute* System::Xml::Serialization::XmlAttributes::get_XmlArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::get_XmlArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlArrayAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributes.get_XmlArrayItems
::System::Xml::Serialization::XmlArrayItemAttributes* System::Xml::Serialization::XmlAttributes::get_XmlArrayItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::get_XmlArrayItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlArrayItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlArrayItemAttributes*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributes.get_XmlAttribute
::System::Xml::Serialization::XmlAttributeAttribute* System::Xml::Serialization::XmlAttributes::get_XmlAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::get_XmlAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlAttributeAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributes.get_XmlChoiceIdentifier
::System::Xml::Serialization::XmlChoiceIdentifierAttribute* System::Xml::Serialization::XmlAttributes::get_XmlChoiceIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::get_XmlChoiceIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlChoiceIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlChoiceIdentifierAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributes.get_XmlDefaultValue
::Il2CppObject* System::Xml::Serialization::XmlAttributes::get_XmlDefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::get_XmlDefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlDefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributes.get_XmlElements
::System::Xml::Serialization::XmlElementAttributes* System::Xml::Serialization::XmlAttributes::get_XmlElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::get_XmlElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlElementAttributes*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributes.get_XmlIgnore
bool System::Xml::Serialization::XmlAttributes::get_XmlIgnore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::get_XmlIgnore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlIgnore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributes.get_Xmlns
bool System::Xml::Serialization::XmlAttributes::get_Xmlns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::get_Xmlns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Xmlns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributes.get_XmlRoot
::System::Xml::Serialization::XmlRootAttribute* System::Xml::Serialization::XmlAttributes::get_XmlRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::get_XmlRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlRootAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributes.get_XmlText
::System::Xml::Serialization::XmlTextAttribute* System::Xml::Serialization::XmlAttributes::get_XmlText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::get_XmlText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTextAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributes.get_XmlType
::System::Xml::Serialization::XmlTypeAttribute* System::Xml::Serialization::XmlAttributes::get_XmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::get_XmlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributes.get_Order
::System::Nullable_1<int> System::Xml::Serialization::XmlAttributes::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::get_Order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributes.get_SortableOrder
int System::Xml::Serialization::XmlAttributes::get_SortableOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::get_SortableOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SortableOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlAttributes.AddKeyHash
void System::Xml::Serialization::XmlAttributes::AddKeyHash(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributes::AddKeyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlChoiceIdentifierAttribute
#include "System/Xml/Serialization/XmlChoiceIdentifierAttribute.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String memberName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlChoiceIdentifierAttribute::dyn_memberName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlChoiceIdentifierAttribute::dyn_memberName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "memberName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlChoiceIdentifierAttribute.get_MemberName
::StringW System::Xml::Serialization::XmlChoiceIdentifierAttribute::get_MemberName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlChoiceIdentifierAttribute::get_MemberName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlChoiceIdentifierAttribute.AddKeyHash
void System::Xml::Serialization::XmlChoiceIdentifierAttribute::AddKeyHash(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlChoiceIdentifierAttribute::AddKeyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlCustomFormatter
#include "System/Xml/Serialization/XmlCustomFormatter.hpp"
// Including type: System.Xml.Serialization.TypeData
#include "System/Xml/Serialization/TypeData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] allTimeFormats
::ArrayW<::StringW> System::Xml::Serialization::XmlCustomFormatter::_get_allTimeFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlCustomFormatter::_get_allTimeFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Xml.Serialization", "XmlCustomFormatter", "allTimeFormats"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] allTimeFormats
void System::Xml::Serialization::XmlCustomFormatter::_set_allTimeFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlCustomFormatter::_set_allTimeFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "XmlCustomFormatter", "allTimeFormats", value));
}
// Autogenerated method: System.Xml.Serialization.XmlCustomFormatter..cctor
void System::Xml::Serialization::XmlCustomFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlCustomFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "XmlCustomFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlCustomFormatter.FromEnum
::StringW System::Xml::Serialization::XmlCustomFormatter::FromEnum(int64_t value, ::ArrayW<::StringW> values, ::ArrayW<int64_t> ids, ::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlCustomFormatter::FromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "XmlCustomFormatter", "FromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(ids), ::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, values, ids, typeName);
}
// Autogenerated method: System.Xml.Serialization.XmlCustomFormatter.FromXmlName
::StringW System::Xml::Serialization::XmlCustomFormatter::FromXmlName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlCustomFormatter::FromXmlName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "XmlCustomFormatter", "FromXmlName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.Serialization.XmlCustomFormatter.FromXmlNCName
::StringW System::Xml::Serialization::XmlCustomFormatter::FromXmlNCName(::StringW ncName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlCustomFormatter::FromXmlNCName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "XmlCustomFormatter", "FromXmlNCName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ncName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ncName);
}
// Autogenerated method: System.Xml.Serialization.XmlCustomFormatter.ToXmlString
::StringW System::Xml::Serialization::XmlCustomFormatter::ToXmlString(::System::Xml::Serialization::TypeData* type, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlCustomFormatter::ToXmlString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "XmlCustomFormatter", "ToXmlString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, value);
}
// Autogenerated method: System.Xml.Serialization.XmlCustomFormatter.FromXmlString
::Il2CppObject* System::Xml::Serialization::XmlCustomFormatter::FromXmlString(::System::Xml::Serialization::TypeData* type, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlCustomFormatter::FromXmlString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "XmlCustomFormatter", "FromXmlString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlElementAttribute
#include "System/Xml/Serialization/XmlElementAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String dataType
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlElementAttribute::dyn_dataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::dyn_dataType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String elementName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlElementAttribute::dyn_elementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::dyn_elementName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaForm form
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaForm& System::Xml::Serialization::XmlElementAttribute::dyn_form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::dyn_form");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "form"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaForm*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String ns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlElementAttribute::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isNullable
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlElementAttribute::dyn_isNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::dyn_isNullable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isNullable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::Serialization::XmlElementAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 order
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlElementAttribute::dyn_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::dyn_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlElementAttribute.get_DataType
::StringW System::Xml::Serialization::XmlElementAttribute::get_DataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::get_DataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlElementAttribute.get_ElementName
::StringW System::Xml::Serialization::XmlElementAttribute::get_ElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::get_ElementName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlElementAttribute.get_Form
::System::Xml::Schema::XmlSchemaForm System::Xml::Serialization::XmlElementAttribute::get_Form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::get_Form");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Form", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaForm, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlElementAttribute.get_Namespace
::StringW System::Xml::Serialization::XmlElementAttribute::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlElementAttribute.get_IsNullable
bool System::Xml::Serialization::XmlElementAttribute::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::get_IsNullable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlElementAttribute.get_Order
int System::Xml::Serialization::XmlElementAttribute::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::get_Order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlElementAttribute.get_Type
::System::Type* System::Xml::Serialization::XmlElementAttribute::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlElementAttribute.AddKeyHash
void System::Xml::Serialization::XmlElementAttribute::AddKeyHash(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::AddKeyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlElementAttributes
#include "System/Xml/Serialization/XmlElementAttributes.hpp"
// Including type: System.Xml.Serialization.XmlElementAttribute
#include "System/Xml/Serialization/XmlElementAttribute.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Serialization.XmlElementAttributes.get_Item
::System::Xml::Serialization::XmlElementAttribute* System::Xml::Serialization::XmlElementAttributes::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttributes::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlElementAttribute*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.Serialization.XmlElementAttributes.get_Order
int System::Xml::Serialization::XmlElementAttributes::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttributes::get_Order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlElementAttributes.Add
int System::Xml::Serialization::XmlElementAttributes::Add(::System::Xml::Serialization::XmlElementAttribute* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttributes::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, attribute);
}
// Autogenerated method: System.Xml.Serialization.XmlElementAttributes.AddKeyHash
void System::Xml::Serialization::XmlElementAttributes::AddKeyHash(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttributes::AddKeyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlEnumAttribute
#include "System/Xml/Serialization/XmlEnumAttribute.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlEnumAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlEnumAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlEnumAttribute.get_Name
::StringW System::Xml::Serialization::XmlEnumAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlEnumAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlEnumAttribute.AddKeyHash
void System::Xml::Serialization::XmlEnumAttribute::AddKeyHash(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlEnumAttribute::AddKeyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlIgnoreAttribute
#include "System/Xml/Serialization/XmlIgnoreAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlIncludeAttribute
#include "System/Xml/Serialization/XmlIncludeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::Serialization::XmlIncludeAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlIncludeAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlIncludeAttribute.get_Type
::System::Type* System::Xml::Serialization::XmlIncludeAttribute::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlIncludeAttribute::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlMapping
#include "System/Xml/Serialization/XmlMapping.hpp"
// Including type: System.Xml.Serialization.ObjectMap
#include "System/Xml/Serialization/ObjectMap.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Serialization.SerializationSource
#include "System/Xml/Serialization/SerializationSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.ObjectMap map
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::ObjectMap*& System::Xml::Serialization::XmlMapping::dyn_map() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMapping::dyn_map");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "map"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::ObjectMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList relatedMaps
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Serialization::XmlMapping::dyn_relatedMaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMapping::dyn_relatedMaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "relatedMaps"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.SerializationFormat format
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::SerializationFormat& System::Xml::Serialization::XmlMapping::dyn_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMapping::dyn_format");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "format"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::SerializationFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.SerializationSource source
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::SerializationSource*& System::Xml::Serialization::XmlMapping::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMapping::dyn_source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::SerializationSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _elementName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlMapping::dyn__elementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMapping::dyn__elementName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _namespace
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlMapping::dyn__namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMapping::dyn__namespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_namespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String key
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlMapping::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMapping::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlMapping.get_ElementName
::StringW System::Xml::Serialization::XmlMapping::get_ElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMapping::get_ElementName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlMapping.get_Namespace
::StringW System::Xml::Serialization::XmlMapping::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMapping::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlMapping.get_ObjectMap
::System::Xml::Serialization::ObjectMap* System::Xml::Serialization::XmlMapping::get_ObjectMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMapping::get_ObjectMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::ObjectMap*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlMapping.set_ObjectMap
void System::Xml::Serialization::XmlMapping::set_ObjectMap(::System::Xml::Serialization::ObjectMap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMapping::set_ObjectMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ObjectMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlMapping.get_RelatedMaps
::System::Collections::ArrayList* System::Xml::Serialization::XmlMapping::get_RelatedMaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMapping::get_RelatedMaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RelatedMaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlMapping.set_RelatedMaps
void System::Xml::Serialization::XmlMapping::set_RelatedMaps(::System::Collections::ArrayList* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMapping::set_RelatedMaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RelatedMaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlMapping.get_Format
::System::Xml::Serialization::SerializationFormat System::Xml::Serialization::XmlMapping::get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMapping::get_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::SerializationFormat, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlMapping.set_Format
void System::Xml::Serialization::XmlMapping::set_Format(::System::Xml::Serialization::SerializationFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMapping::set_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlMapping.get_Source
::System::Xml::Serialization::SerializationSource* System::Xml::Serialization::XmlMapping::get_Source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMapping::get_Source");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Source", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::SerializationSource*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlMapping.SetKey
void System::Xml::Serialization::XmlMapping::SetKey(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMapping::SetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.ObjectMap
#include "System/Xml/Serialization/ObjectMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.SerializationFormat
#include "System/Xml/Serialization/SerializationFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Serialization.SerializationFormat Encoded
::System::Xml::Serialization::SerializationFormat System::Xml::Serialization::SerializationFormat::_get_Encoded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SerializationFormat::_get_Encoded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Serialization::SerializationFormat>("System.Xml.Serialization", "SerializationFormat", "Encoded"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Serialization.SerializationFormat Encoded
void System::Xml::Serialization::SerializationFormat::_set_Encoded(::System::Xml::Serialization::SerializationFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SerializationFormat::_set_Encoded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "SerializationFormat", "Encoded", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Serialization.SerializationFormat Literal
::System::Xml::Serialization::SerializationFormat System::Xml::Serialization::SerializationFormat::_get_Literal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SerializationFormat::_get_Literal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Serialization::SerializationFormat>("System.Xml.Serialization", "SerializationFormat", "Literal"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Serialization.SerializationFormat Literal
void System::Xml::Serialization::SerializationFormat::_set_Literal(::System::Xml::Serialization::SerializationFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SerializationFormat::_set_Literal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "SerializationFormat", "Literal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::SerializationFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::SerializationFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlMembersMapping
#include "System/Xml/Serialization/XmlMembersMapping.hpp"
// Including type: System.Xml.Serialization.XmlMemberMapping
#include "System/Xml/Serialization/XmlMemberMapping.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasWrapperElement
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlMembersMapping::dyn__hasWrapperElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMembersMapping::dyn__hasWrapperElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasWrapperElement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlMemberMapping[] _mapping
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Serialization::XmlMemberMapping*>& System::Xml::Serialization::XmlMembersMapping::dyn__mapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMembersMapping::dyn__mapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mapping"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Serialization::XmlMemberMapping*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlMembersMapping.get_Count
int System::Xml::Serialization::XmlMembersMapping::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMembersMapping::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlMembersMapping.get_HasWrapperElement
bool System::Xml::Serialization::XmlMembersMapping::get_HasWrapperElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlMembersMapping::get_HasWrapperElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasWrapperElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlNamespaceDeclarationsAttribute
#include "System/Xml/Serialization/XmlNamespaceDeclarationsAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlReflectionImporter
#include "System/Xml/Serialization/XmlReflectionImporter.hpp"
// Including type: System.Xml.Serialization.XmlReflectionImporter/System.Xml.Serialization.<>c
#include "System/Xml/Serialization/XmlReflectionImporter_--c.hpp"
// Including type: System.Xml.Serialization.XmlAttributeOverrides
#include "System/Xml/Serialization/XmlAttributeOverrides.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Serialization.ReflectionHelper
#include "System/Xml/Serialization/ReflectionHelper.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapping
#include "System/Xml/Serialization/XmlTypeMapping.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Serialization.XmlRootAttribute
#include "System/Xml/Serialization/XmlRootAttribute.hpp"
// Including type: System.Xml.Serialization.TypeData
#include "System/Xml/Serialization/TypeData.hpp"
// Including type: System.Xml.Serialization.XmlAttributes
#include "System/Xml/Serialization/XmlAttributes.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.Serialization.XmlReflectionMember
#include "System/Xml/Serialization/XmlReflectionMember.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapMember
#include "System/Xml/Serialization/XmlTypeMapMember.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapElementInfoList
#include "System/Xml/Serialization/XmlTypeMapElementInfoList.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapMemberElement
#include "System/Xml/Serialization/XmlTypeMapMemberElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String errSimple
::StringW System::Xml::Serialization::XmlReflectionImporter::_get_errSimple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::_get_errSimple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Xml.Serialization", "XmlReflectionImporter", "errSimple"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String errSimple
void System::Xml::Serialization::XmlReflectionImporter::_set_errSimple(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::_set_errSimple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "XmlReflectionImporter", "errSimple", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String errSimple2
::StringW System::Xml::Serialization::XmlReflectionImporter::_get_errSimple2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::_get_errSimple2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Xml.Serialization", "XmlReflectionImporter", "errSimple2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String errSimple2
void System::Xml::Serialization::XmlReflectionImporter::_set_errSimple2(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::_set_errSimple2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "XmlReflectionImporter", "errSimple2", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String initialDefaultNamespace
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlReflectionImporter::dyn_initialDefaultNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::dyn_initialDefaultNamespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialDefaultNamespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlAttributeOverrides attributeOverrides
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlAttributeOverrides*& System::Xml::Serialization::XmlReflectionImporter::dyn_attributeOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::dyn_attributeOverrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeOverrides"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlAttributeOverrides**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList includedTypes
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Serialization::XmlReflectionImporter::dyn_includedTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::dyn_includedTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includedTypes"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.ReflectionHelper helper
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::ReflectionHelper*& System::Xml::Serialization::XmlReflectionImporter::dyn_helper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::dyn_helper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "helper"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::ReflectionHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 arrayChoiceCount
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlReflectionImporter::dyn_arrayChoiceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::dyn_arrayChoiceCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayChoiceCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList relatedMaps
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Serialization::XmlReflectionImporter::dyn_relatedMaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::dyn_relatedMaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "relatedMaps"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean allowPrivateTypes
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlReflectionImporter::dyn_allowPrivateTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::dyn_allowPrivateTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowPrivateTypes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter..cctor
void System::Xml::Serialization::XmlReflectionImporter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "XmlReflectionImporter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::XmlReflectionImporter::ImportTypeMapping(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::ImportTypeMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportTypeMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::XmlReflectionImporter::ImportTypeMapping(::System::Type* type, ::StringW defaultNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::ImportTypeMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportTypeMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(defaultNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method, type, defaultNamespace);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::XmlReflectionImporter::ImportTypeMapping(::System::Type* type, ::System::Xml::Serialization::XmlRootAttribute* root, ::StringW defaultNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::ImportTypeMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportTypeMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(defaultNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method, type, root, defaultNamespace);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::XmlReflectionImporter::ImportTypeMapping(::System::Xml::Serialization::TypeData* typeData, ::System::Xml::Serialization::XmlRootAttribute* root, ::StringW defaultNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::ImportTypeMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportTypeMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeData), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(defaultNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method, typeData, root, defaultNamespace);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.CreateTypeMapping
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::XmlReflectionImporter::CreateTypeMapping(::System::Xml::Serialization::TypeData* typeData, ::System::Xml::Serialization::XmlRootAttribute* root, ::StringW defaultXmlType, ::StringW defaultNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::CreateTypeMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTypeMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeData), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(defaultXmlType), ::il2cpp_utils::ExtractType(defaultNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method, typeData, root, defaultXmlType, defaultNamespace);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.ImportClassMapping
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::XmlReflectionImporter::ImportClassMapping(::System::Type* type, ::System::Xml::Serialization::XmlRootAttribute* root, ::StringW defaultNamespace, bool isBaseType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::ImportClassMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportClassMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(defaultNamespace), ::il2cpp_utils::ExtractType(isBaseType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method, type, root, defaultNamespace, isBaseType);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.ImportClassMapping
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::XmlReflectionImporter::ImportClassMapping(::System::Xml::Serialization::TypeData* typeData, ::System::Xml::Serialization::XmlRootAttribute* root, ::StringW defaultNamespace, bool isBaseType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::ImportClassMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportClassMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeData), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(defaultNamespace), ::il2cpp_utils::ExtractType(isBaseType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method, typeData, root, defaultNamespace, isBaseType);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.RegisterDerivedMap
void System::Xml::Serialization::XmlReflectionImporter::RegisterDerivedMap(::System::Xml::Serialization::XmlTypeMapping* map, ::System::Xml::Serialization::XmlTypeMapping* derivedMap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::RegisterDerivedMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterDerivedMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(map), ::il2cpp_utils::ExtractType(derivedMap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, map, derivedMap);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.GetTypeNamespace
::StringW System::Xml::Serialization::XmlReflectionImporter::GetTypeNamespace(::System::Xml::Serialization::TypeData* typeData, ::System::Xml::Serialization::XmlRootAttribute* root, ::StringW defaultNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::GetTypeNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeData), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(defaultNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, typeData, root, defaultNamespace);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.ImportListMapping
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::XmlReflectionImporter::ImportListMapping(::System::Type* type, ::System::Xml::Serialization::XmlRootAttribute* root, ::StringW defaultNamespace, ::System::Xml::Serialization::XmlAttributes* atts, int nestingLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::ImportListMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportListMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(defaultNamespace), ::il2cpp_utils::ExtractType(atts), ::il2cpp_utils::ExtractType(nestingLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method, type, root, defaultNamespace, atts, nestingLevel);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.ImportListMapping
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::XmlReflectionImporter::ImportListMapping(::System::Xml::Serialization::TypeData* typeData, ::System::Xml::Serialization::XmlRootAttribute* root, ::StringW defaultNamespace, ::System::Xml::Serialization::XmlAttributes* atts, int nestingLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::ImportListMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportListMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeData), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(defaultNamespace), ::il2cpp_utils::ExtractType(atts), ::il2cpp_utils::ExtractType(nestingLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method, typeData, root, defaultNamespace, atts, nestingLevel);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.ImportXmlNodeMapping
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::XmlReflectionImporter::ImportXmlNodeMapping(::System::Xml::Serialization::TypeData* typeData, ::System::Xml::Serialization::XmlRootAttribute* root, ::StringW defaultNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::ImportXmlNodeMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportXmlNodeMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeData), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(defaultNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method, typeData, root, defaultNamespace);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.ImportPrimitiveMapping
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::XmlReflectionImporter::ImportPrimitiveMapping(::System::Xml::Serialization::TypeData* typeData, ::System::Xml::Serialization::XmlRootAttribute* root, ::StringW defaultNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::ImportPrimitiveMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportPrimitiveMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeData), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(defaultNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method, typeData, root, defaultNamespace);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.ImportEnumMapping
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::XmlReflectionImporter::ImportEnumMapping(::System::Xml::Serialization::TypeData* typeData, ::System::Xml::Serialization::XmlRootAttribute* root, ::StringW defaultNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::ImportEnumMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportEnumMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeData), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(defaultNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method, typeData, root, defaultNamespace);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.ImportXmlSerializableMapping
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::XmlReflectionImporter::ImportXmlSerializableMapping(::System::Xml::Serialization::TypeData* typeData, ::System::Xml::Serialization::XmlRootAttribute* root, ::StringW defaultNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::ImportXmlSerializableMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportXmlSerializableMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeData), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(defaultNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method, typeData, root, defaultNamespace);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.ImportIncludedTypes
void System::Xml::Serialization::XmlReflectionImporter::ImportIncludedTypes(::System::Type* type, ::StringW defaultNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::ImportIncludedTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportIncludedTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(defaultNamespace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, defaultNamespace);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.GetReflectionMembers
::System::Collections::Generic::List_1<::System::Xml::Serialization::XmlReflectionMember*>* System::Xml::Serialization::XmlReflectionImporter::GetReflectionMembers(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::GetReflectionMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReflectionMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Xml::Serialization::XmlReflectionMember*>*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.CreateMapMember
::System::Xml::Serialization::XmlTypeMapMember* System::Xml::Serialization::XmlReflectionImporter::CreateMapMember(::System::Type* declaringType, ::System::Xml::Serialization::XmlReflectionMember* rmember, ::StringW defaultNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::CreateMapMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMapMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(declaringType), ::il2cpp_utils::ExtractType(rmember), ::il2cpp_utils::ExtractType(defaultNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapMember*, false>(this, ___internal__method, declaringType, rmember, defaultNamespace);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.ImportElementInfo
::System::Xml::Serialization::XmlTypeMapElementInfoList* System::Xml::Serialization::XmlReflectionImporter::ImportElementInfo(::System::Type* cls, ::StringW defaultName, ::StringW defaultNamespace, ::System::Type* defaultType, ::System::Xml::Serialization::XmlTypeMapMemberElement* member, ::System::Xml::Serialization::XmlAttributes* atts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::ImportElementInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportElementInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cls), ::il2cpp_utils::ExtractType(defaultName), ::il2cpp_utils::ExtractType(defaultNamespace), ::il2cpp_utils::ExtractType(defaultType), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(atts)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapElementInfoList*, false>(this, ___internal__method, cls, defaultName, defaultNamespace, defaultType, member, atts);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.ImportAnyElementInfo
::System::Xml::Serialization::XmlTypeMapElementInfoList* System::Xml::Serialization::XmlReflectionImporter::ImportAnyElementInfo(::StringW defaultNamespace, ::System::Xml::Serialization::XmlReflectionMember* rmember, ::System::Xml::Serialization::XmlTypeMapMemberElement* member, ::System::Xml::Serialization::XmlAttributes* atts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::ImportAnyElementInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportAnyElementInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultNamespace), ::il2cpp_utils::ExtractType(rmember), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(atts)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapElementInfoList*, false>(this, ___internal__method, defaultNamespace, rmember, member, atts);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.ImportTextElementInfo
void System::Xml::Serialization::XmlReflectionImporter::ImportTextElementInfo(::System::Xml::Serialization::XmlTypeMapElementInfoList* list, ::System::Type* defaultType, ::System::Xml::Serialization::XmlTypeMapMemberElement* member, ::System::Xml::Serialization::XmlAttributes* atts, ::StringW defaultNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::ImportTextElementInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportTextElementInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(defaultType), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(atts), ::il2cpp_utils::ExtractType(defaultNamespace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, list, defaultType, member, atts, defaultNamespace);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.CanBeNull
bool System::Xml::Serialization::XmlReflectionImporter::CanBeNull(::System::Xml::Serialization::TypeData* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::CanBeNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanBeNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.IncludeType
void System::Xml::Serialization::XmlReflectionImporter::IncludeType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::IncludeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncludeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter.GetDefaultValue
::Il2CppObject* System::Xml::Serialization::XmlReflectionImporter::GetDefaultValue(::System::Xml::Serialization::TypeData* typeData, ::Il2CppObject* defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::GetDefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeData), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, typeData, defaultValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlReflectionImporter/System.Xml.Serialization.<>c
#include "System/Xml/Serialization/XmlReflectionImporter_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: System.Xml.Serialization.XmlReflectionMember
#include "System/Xml/Serialization/XmlReflectionMember.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Serialization.XmlReflectionImporter/System.Xml.Serialization.<>c <>9
::System::Xml::Serialization::XmlReflectionImporter::$$c* System::Xml::Serialization::XmlReflectionImporter::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Xml::Serialization::XmlReflectionImporter::$$c*>("System.Xml.Serialization", "XmlReflectionImporter/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Serialization.XmlReflectionImporter/System.Xml.Serialization.<>c <>9
void System::Xml::Serialization::XmlReflectionImporter::$$c::_set_$$9(::System::Xml::Serialization::XmlReflectionImporter::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Xml.Serialization", "XmlReflectionImporter/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<System.Xml.Serialization.XmlReflectionMember> <>9__28_0
::System::Comparison_1<::System::Xml::Serialization::XmlReflectionMember*>* System::Xml::Serialization::XmlReflectionImporter::$$c::_get_$$9__28_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::$$c::_get_$$9__28_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::System::Xml::Serialization::XmlReflectionMember*>*>("System.Xml.Serialization", "XmlReflectionImporter/<>c", "<>9__28_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<System.Xml.Serialization.XmlReflectionMember> <>9__28_0
void System::Xml::Serialization::XmlReflectionImporter::$$c::_set_$$9__28_0(::System::Comparison_1<::System::Xml::Serialization::XmlReflectionMember*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::$$c::_set_$$9__28_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Xml.Serialization", "XmlReflectionImporter/<>c", "<>9__28_0", value)));
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter/System.Xml.Serialization.<>c..cctor
void System::Xml::Serialization::XmlReflectionImporter::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "XmlReflectionImporter/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionImporter/System.Xml.Serialization.<>c.<ImportClassMapping>b__28_0
int System::Xml::Serialization::XmlReflectionImporter::$$c::$ImportClassMapping$b__28_0(::System::Xml::Serialization::XmlReflectionMember* m1, ::System::Xml::Serialization::XmlReflectionMember* m2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::$$c::<ImportClassMapping>b__28_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ImportClassMapping>b__28_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m1), ::il2cpp_utils::ExtractType(m2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, m1, m2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlReflectionMember
#include "System/Xml/Serialization/XmlReflectionMember.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Serialization.XmlAttributes
#include "System/Xml/Serialization/XmlAttributes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean isReturnValue
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlReflectionMember::dyn_isReturnValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionMember::dyn_isReturnValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isReturnValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String memberName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlReflectionMember::dyn_memberName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionMember::dyn_memberName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "memberName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type memberType
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::Serialization::XmlReflectionMember::dyn_memberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionMember::dyn_memberType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "memberType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlAttributes xmlAttributes
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlAttributes*& System::Xml::Serialization::XmlReflectionMember::dyn_xmlAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionMember::dyn_xmlAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlAttributes"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlAttributes**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type declaringType
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::Serialization::XmlReflectionMember::dyn_declaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionMember::dyn_declaringType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "declaringType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionMember.get_IsReturnValue
bool System::Xml::Serialization::XmlReflectionMember::get_IsReturnValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionMember::get_IsReturnValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReturnValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionMember.get_MemberName
::StringW System::Xml::Serialization::XmlReflectionMember::get_MemberName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionMember::get_MemberName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionMember.get_MemberType
::System::Type* System::Xml::Serialization::XmlReflectionMember::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionMember::get_MemberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionMember.get_XmlAttributes
::System::Xml::Serialization::XmlAttributes* System::Xml::Serialization::XmlReflectionMember::get_XmlAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionMember::get_XmlAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlAttributes*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionMember.get_DeclaringType
::System::Type* System::Xml::Serialization::XmlReflectionMember::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionMember::get_DeclaringType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlReflectionMember.set_DeclaringType
void System::Xml::Serialization::XmlReflectionMember::set_DeclaringType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionMember::set_DeclaringType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlRootAttribute
#include "System/Xml/Serialization/XmlRootAttribute.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String dataType
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlRootAttribute::dyn_dataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlRootAttribute::dyn_dataType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String elementName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlRootAttribute::dyn_elementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlRootAttribute::dyn_elementName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isNullable
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlRootAttribute::dyn_isNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlRootAttribute::dyn_isNullable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isNullable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String ns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlRootAttribute::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlRootAttribute::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlRootAttribute.get_DataType
::StringW System::Xml::Serialization::XmlRootAttribute::get_DataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlRootAttribute::get_DataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlRootAttribute.set_DataType
void System::Xml::Serialization::XmlRootAttribute::set_DataType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlRootAttribute::set_DataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlRootAttribute.get_ElementName
::StringW System::Xml::Serialization::XmlRootAttribute::get_ElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlRootAttribute::get_ElementName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlRootAttribute.set_ElementName
void System::Xml::Serialization::XmlRootAttribute::set_ElementName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlRootAttribute::set_ElementName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlRootAttribute.get_IsNullable
bool System::Xml::Serialization::XmlRootAttribute::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlRootAttribute::get_IsNullable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlRootAttribute.set_IsNullable
void System::Xml::Serialization::XmlRootAttribute::set_IsNullable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlRootAttribute::set_IsNullable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlRootAttribute.get_Namespace
::StringW System::Xml::Serialization::XmlRootAttribute::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlRootAttribute::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlRootAttribute.set_Namespace
void System::Xml::Serialization::XmlRootAttribute::set_Namespace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlRootAttribute::set_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlRootAttribute.AddKeyHash
void System::Xml::Serialization::XmlRootAttribute::AddKeyHash(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlRootAttribute::AddKeyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlSchemaProviderAttribute
#include "System/Xml/Serialization/XmlSchemaProviderAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _methodName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlSchemaProviderAttribute::dyn__methodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSchemaProviderAttribute::dyn__methodName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_methodName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isAny
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlSchemaProviderAttribute::dyn__isAny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSchemaProviderAttribute::dyn__isAny");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isAny"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlSchemaProviderAttribute.get_MethodName
::StringW System::Xml::Serialization::XmlSchemaProviderAttribute::get_MethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSchemaProviderAttribute::get_MethodName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSchemaProviderAttribute.get_IsAny
bool System::Xml::Serialization::XmlSchemaProviderAttribute::get_IsAny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSchemaProviderAttribute::get_IsAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSchemaProviderAttribute.set_IsAny
void System::Xml::Serialization::XmlSchemaProviderAttribute::set_IsAny(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSchemaProviderAttribute::set_IsAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlSerializationCollectionFixupCallback
#include "System/Xml/Serialization/XmlSerializationCollectionFixupCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Serialization.XmlSerializationCollectionFixupCallback.Invoke
void System::Xml::Serialization::XmlSerializationCollectionFixupCallback::Invoke(::Il2CppObject* collection, ::Il2CppObject* collectionItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationCollectionFixupCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationCollectionFixupCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collection, collectionItems);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationCollectionFixupCallback.BeginInvoke
::System::IAsyncResult* System::Xml::Serialization::XmlSerializationCollectionFixupCallback::BeginInvoke(::Il2CppObject* collection, ::Il2CppObject* collectionItems, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationCollectionFixupCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationCollectionFixupCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, collection, collectionItems, callback, object);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationCollectionFixupCallback.EndInvoke
void System::Xml::Serialization::XmlSerializationCollectionFixupCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationCollectionFixupCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationCollectionFixupCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlSerializationFixupCallback
#include "System/Xml/Serialization/XmlSerializationFixupCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Serialization.XmlSerializationFixupCallback.Invoke
void System::Xml::Serialization::XmlSerializationFixupCallback::Invoke(::Il2CppObject* fixup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationFixupCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationFixupCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fixup);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationFixupCallback.BeginInvoke
::System::IAsyncResult* System::Xml::Serialization::XmlSerializationFixupCallback::BeginInvoke(::Il2CppObject* fixup, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationFixupCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationFixupCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, fixup, callback, object);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationFixupCallback.EndInvoke
void System::Xml::Serialization::XmlSerializationFixupCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationFixupCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationFixupCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlSerializationGeneratedCode
#include "System/Xml/Serialization/XmlSerializationGeneratedCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlSerializationReadCallback
#include "System/Xml/Serialization/XmlSerializationReadCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Serialization.XmlSerializationReadCallback.Invoke
::Il2CppObject* System::Xml::Serialization::XmlSerializationReadCallback::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReadCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationReadCallback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReadCallback.BeginInvoke
::System::IAsyncResult* System::Xml::Serialization::XmlSerializationReadCallback::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReadCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationReadCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReadCallback.EndInvoke
::Il2CppObject* System::Xml::Serialization::XmlSerializationReadCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReadCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationReadCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlSerializationReader
#include "System/Xml/Serialization/XmlSerializationReader.hpp"
// Including type: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.WriteCallbackInfo
#include "System/Xml/Serialization/XmlSerializationReader_WriteCallbackInfo.hpp"
// Including type: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.CollectionFixup
#include "System/Xml/Serialization/XmlSerializationReader_CollectionFixup.hpp"
// Including type: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.Fixup
#include "System/Xml/Serialization/XmlSerializationReader_Fixup.hpp"
// Including type: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.CollectionItemFixup
#include "System/Xml/Serialization/XmlSerializationReader_CollectionItemFixup.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.Serialization.XmlSerializer
#include "System/Xml/Serialization/XmlSerializer.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Serialization.XmlSerializationReadCallback
#include "System/Xml/Serialization/XmlSerializationReadCallback.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Xml.XmlAttribute
#include "System/Xml/XmlAttribute.hpp"
// Including type: System.Xml.Serialization.IXmlSerializable
#include "System/Xml/Serialization/IXmlSerializable.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Xml.XmlElement
#include "System/Xml/XmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlDocument document
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDocument*& System::Xml::Serialization::XmlSerializationReader::dyn_document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_document");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "document"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlReader reader
[[deprecated("Use field access instead!")]] ::System::Xml::XmlReader*& System::Xml::Serialization::XmlSerializationReader::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::Xml::XmlReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList fixups
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Serialization::XmlSerializationReader::dyn_fixups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_fixups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixups"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable collFixups
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Serialization::XmlSerializationReader::dyn_collFixups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_collFixups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collFixups"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList collItemFixups
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Serialization::XmlSerializationReader::dyn_collItemFixups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_collItemFixups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collItemFixups"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable typesCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Serialization::XmlSerializationReader::dyn_typesCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_typesCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typesCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList noIDTargets
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Serialization::XmlSerializationReader::dyn_noIDTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_noIDTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noIDTargets"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable targets
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Serialization::XmlSerializationReader::dyn_targets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_targets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targets"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable delayedListFixups
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Serialization::XmlSerializationReader::dyn_delayedListFixups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_delayedListFixups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delayedListFixups"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlSerializer eventSource
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlSerializer*& System::Xml::Serialization::XmlSerializationReader::dyn_eventSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_eventSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventSource"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlSerializer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 delayedFixupId
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlSerializationReader::dyn_delayedFixupId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_delayedFixupId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delayedFixupId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable referencedObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Serialization::XmlSerializationReader::dyn_referencedObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_referencedObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referencedObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 readCount
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlSerializationReader::dyn_readCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_readCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 whileIterationCount
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlSerializationReader::dyn_whileIterationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_whileIterationCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "whileIterationCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String w3SchemaNS
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlSerializationReader::dyn_w3SchemaNS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_w3SchemaNS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w3SchemaNS"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String w3InstanceNS
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlSerializationReader::dyn_w3InstanceNS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_w3InstanceNS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w3InstanceNS"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String w3InstanceNS2000
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlSerializationReader::dyn_w3InstanceNS2000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_w3InstanceNS2000");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w3InstanceNS2000"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String w3InstanceNS1999
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlSerializationReader::dyn_w3InstanceNS1999() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_w3InstanceNS1999");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w3InstanceNS1999"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String soapNS
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlSerializationReader::dyn_soapNS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_soapNS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soapNS"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String wsdlNS
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlSerializationReader::dyn_wsdlNS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_wsdlNS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wsdlNS"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String nullX
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlSerializationReader::dyn_nullX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_nullX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nullX"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String nil
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlSerializationReader::dyn_nil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_nil");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nil"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String typeX
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlSerializationReader::dyn_typeX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_typeX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeX"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String arrayType
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlSerializationReader::dyn_arrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_arrayType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName arrayQName
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Serialization::XmlSerializationReader::dyn_arrayQName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::dyn_arrayQName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayQName"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.get_Document
::System::Xml::XmlDocument* System::Xml::Serialization::XmlSerializationReader::get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::get_Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDocument*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.get_Reader
::System::Xml::XmlReader* System::Xml::Serialization::XmlSerializationReader::get_Reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::get_Reader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Reader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlReader*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.Initialize
void System::Xml::Serialization::XmlSerializationReader::Initialize(::System::Xml::XmlReader* reader, ::System::Xml::Serialization::XmlSerializer* eventSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(eventSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, eventSource);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.EnsureArrayList
::System::Collections::ArrayList* System::Xml::Serialization::XmlSerializationReader::EnsureArrayList(::System::Collections::ArrayList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::EnsureArrayList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureArrayList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method, list);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.EnsureHashtable
::System::Collections::Hashtable* System::Xml::Serialization::XmlSerializationReader::EnsureHashtable(::System::Collections::Hashtable* hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::EnsureHashtable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureHashtable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(this, ___internal__method, hash);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.AddFixup
void System::Xml::Serialization::XmlSerializationReader::AddFixup(::System::Xml::Serialization::XmlSerializationReader::CollectionFixup* fixup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::AddFixup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFixup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fixup);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.AddFixup
void System::Xml::Serialization::XmlSerializationReader::AddFixup(::System::Xml::Serialization::XmlSerializationReader::Fixup* fixup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::AddFixup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFixup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fixup);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.AddFixup
void System::Xml::Serialization::XmlSerializationReader::AddFixup(::System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup* fixup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::AddFixup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFixup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fixup);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.AddReadCallback
void System::Xml::Serialization::XmlSerializationReader::AddReadCallback(::StringW name, ::StringW ns, ::System::Type* type, ::System::Xml::Serialization::XmlSerializationReadCallback* read) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::AddReadCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddReadCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(read)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, ns, type, read);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.AddTarget
void System::Xml::Serialization::XmlSerializationReader::AddTarget(::StringW id, ::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::AddTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, o);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.CurrentTag
::StringW System::Xml::Serialization::XmlSerializationReader::CurrentTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CurrentTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CurrentTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException
::System::Exception* System::Xml::Serialization::XmlSerializationReader::CreateReadOnlyCollectionException(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CreateReadOnlyCollectionException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateReadOnlyCollectionException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException
::System::Exception* System::Xml::Serialization::XmlSerializationReader::CreateUnknownConstantException(::StringW value, ::System::Type* enumType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CreateUnknownConstantException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUnknownConstantException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, enumType);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException
::System::Exception* System::Xml::Serialization::XmlSerializationReader::CreateUnknownNodeException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CreateUnknownNodeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUnknownNodeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException
::System::Exception* System::Xml::Serialization::XmlSerializationReader::CreateUnknownTypeException(::System::Xml::XmlQualifiedName* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CreateUnknownTypeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUnknownTypeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex
::System::Array* System::Xml::Serialization::XmlSerializationReader::EnsureArrayIndex(::System::Array* a, int index, ::System::Type* elementType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::EnsureArrayIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureArrayIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(elementType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(this, ___internal__method, a, index, elementType);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.GetNullAttr
bool System::Xml::Serialization::XmlSerializationReader::GetNullAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::GetNullAttr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNullAttr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.GetTarget
::Il2CppObject* System::Xml::Serialization::XmlSerializationReader::GetTarget(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::GetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, id);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.TargetReady
bool System::Xml::Serialization::XmlSerializationReader::TargetReady(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::TargetReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TargetReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.GetXsiType
::System::Xml::XmlQualifiedName* System::Xml::Serialization::XmlSerializationReader::GetXsiType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::GetXsiType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetXsiType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.InitCallbacks
void System::Xml::Serialization::XmlSerializationReader::InitCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::InitCallbacks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationReader*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.InitIDs
void System::Xml::Serialization::XmlSerializationReader::InitIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::InitIDs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationReader*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute
bool System::Xml::Serialization::XmlSerializationReader::IsXmlnsAttribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::IsXmlnsAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsXmlnsAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType
void System::Xml::Serialization::XmlSerializationReader::ParseWsdlArrayType(::System::Xml::XmlAttribute* attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ParseWsdlArrayType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseWsdlArrayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attr);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName
::System::Xml::XmlQualifiedName* System::Xml::Serialization::XmlSerializationReader::ReadElementQualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ReadElementQualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadElementQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ReadEndElement
void System::Xml::Serialization::XmlSerializationReader::ReadEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ReadEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ReadNull
bool System::Xml::Serialization::XmlSerializationReader::ReadNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ReadNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName
::System::Xml::XmlQualifiedName* System::Xml::Serialization::XmlSerializationReader::ReadNullableQualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ReadNullableQualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNullableQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ReadNullableString
::StringW System::Xml::Serialization::XmlSerializationReader::ReadNullableString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ReadNullableString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNullableString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement
::Il2CppObject* System::Xml::Serialization::XmlSerializationReader::ReadReferencedElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ReadReferencedElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadReferencedElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.GetCallbackInfo
::System::Xml::Serialization::XmlSerializationReader::WriteCallbackInfo* System::Xml::Serialization::XmlSerializationReader::GetCallbackInfo(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::GetCallbackInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCallbackInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlSerializationReader::WriteCallbackInfo*, false>(this, ___internal__method, qname);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement
::Il2CppObject* System::Xml::Serialization::XmlSerializationReader::ReadReferencedElement(::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ReadReferencedElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadReferencedElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, ns);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ReadList
bool System::Xml::Serialization::XmlSerializationReader::ReadList(ByRef<::Il2CppObject*> resultList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ReadList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(resultList));
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements
void System::Xml::Serialization::XmlSerializationReader::ReadReferencedElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ReadReferencedElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadReferencedElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement
::Il2CppObject* System::Xml::Serialization::XmlSerializationReader::ReadReferencingElement(ByRef<::StringW> fixupReference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ReadReferencingElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadReferencingElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, byref(fixupReference));
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement
::Il2CppObject* System::Xml::Serialization::XmlSerializationReader::ReadReferencingElement(::StringW name, ::StringW ns, ByRef<::StringW> fixupReference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ReadReferencingElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadReferencingElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, ns, byref(fixupReference));
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement
::Il2CppObject* System::Xml::Serialization::XmlSerializationReader::ReadReferencingElement(::StringW name, ::StringW ns, bool elementCanBeType, ByRef<::StringW> fixupReference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ReadReferencingElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadReferencingElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(elementCanBeType), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, ns, elementCanBeType, byref(fixupReference));
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ReadSerializable
::System::Xml::Serialization::IXmlSerializable* System::Xml::Serialization::XmlSerializationReader::ReadSerializable(::System::Xml::Serialization::IXmlSerializable* serializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ReadSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializable)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::IXmlSerializable*, false>(this, ___internal__method, serializable);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive
::Il2CppObject* System::Xml::Serialization::XmlSerializationReader::ReadTypedPrimitive(::System::Xml::XmlQualifiedName* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ReadTypedPrimitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadTypedPrimitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive
::Il2CppObject* System::Xml::Serialization::XmlSerializationReader::ReadTypedPrimitive(::System::Xml::XmlQualifiedName* qname, bool reportUnknown) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ReadTypedPrimitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadTypedPrimitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname), ::il2cpp_utils::ExtractType(reportUnknown)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, qname, reportUnknown);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode
::System::Xml::XmlNode* System::Xml::Serialization::XmlSerializationReader::ReadXmlNode(bool wrapped) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ReadXmlNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadXmlNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wrapped)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, wrapped);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument
::System::Xml::XmlDocument* System::Xml::Serialization::XmlSerializationReader::ReadXmlDocument(bool wrapped) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ReadXmlDocument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadXmlDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wrapped)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDocument*, false>(this, ___internal__method, wrapped);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ShrinkArray
::System::Array* System::Xml::Serialization::XmlSerializationReader::ShrinkArray(::System::Array* a, int length, ::System::Type* elementType, bool isNullable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ShrinkArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShrinkArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(isNullable)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(this, ___internal__method, a, length, elementType, isNullable);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName
::System::Xml::XmlQualifiedName* System::Xml::Serialization::XmlSerializationReader::ToXmlQualifiedName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::ToXmlQualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXmlQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute
void System::Xml::Serialization::XmlSerializationReader::UnknownAttribute(::Il2CppObject* o, ::System::Xml::XmlAttribute* attr, ::StringW qnames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::UnknownAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnknownAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(attr), ::il2cpp_utils::ExtractType(qnames)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, attr, qnames);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.UnknownElement
void System::Xml::Serialization::XmlSerializationReader::UnknownElement(::Il2CppObject* o, ::System::Xml::XmlElement* elem, ::StringW qnames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::UnknownElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnknownElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(elem), ::il2cpp_utils::ExtractType(qnames)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, elem, qnames);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.UnknownNode
void System::Xml::Serialization::XmlSerializationReader::UnknownNode(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::UnknownNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnknownNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.UnknownNode
void System::Xml::Serialization::XmlSerializationReader::UnknownNode(::Il2CppObject* o, ::StringW qnames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::UnknownNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnknownNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(qnames)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, qnames);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.OnUnknownNode
void System::Xml::Serialization::XmlSerializationReader::OnUnknownNode(::System::Xml::XmlNode* node, ::Il2CppObject* o, ::StringW qnames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::OnUnknownNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUnknownNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(qnames)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, o, qnames);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject
void System::Xml::Serialization::XmlSerializationReader::UnreferencedObject(::StringW id, ::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::UnreferencedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnreferencedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, o);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.WriteCallbackInfo
#include "System/Xml/Serialization/XmlSerializationReader_WriteCallbackInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Serialization.XmlSerializationReadCallback
#include "System/Xml/Serialization/XmlSerializationReadCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type Type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::Serialization::XmlSerializationReader::WriteCallbackInfo::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::WriteCallbackInfo::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TypeName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlSerializationReader::WriteCallbackInfo::dyn_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::WriteCallbackInfo::dyn_TypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TypeNs
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlSerializationReader::WriteCallbackInfo::dyn_TypeNs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::WriteCallbackInfo::dyn_TypeNs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TypeNs"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Serialization.XmlSerializationReadCallback Callback
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlSerializationReadCallback*& System::Xml::Serialization::XmlSerializationReader::WriteCallbackInfo::dyn_Callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::WriteCallbackInfo::dyn_Callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Callback"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlSerializationReadCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.CollectionFixup
#include "System/Xml/Serialization/XmlSerializationReader_CollectionFixup.hpp"
// Including type: System.Xml.Serialization.XmlSerializationCollectionFixupCallback
#include "System/Xml/Serialization/XmlSerializationCollectionFixupCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlSerializationCollectionFixupCallback callback
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlSerializationCollectionFixupCallback*& System::Xml::Serialization::XmlSerializationReader::CollectionFixup::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CollectionFixup::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlSerializationCollectionFixupCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object collection
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Serialization::XmlSerializationReader::CollectionFixup::dyn_collection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CollectionFixup::dyn_collection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collection"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object collectionItems
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Serialization::XmlSerializationReader::CollectionFixup::dyn_collectionItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CollectionFixup::dyn_collectionItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collectionItems"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String id
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlSerializationReader::CollectionFixup::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CollectionFixup::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.CollectionFixup.get_Callback
::System::Xml::Serialization::XmlSerializationCollectionFixupCallback* System::Xml::Serialization::XmlSerializationReader::CollectionFixup::get_Callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CollectionFixup::get_Callback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Callback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlSerializationCollectionFixupCallback*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.CollectionFixup.get_Collection
::Il2CppObject* System::Xml::Serialization::XmlSerializationReader::CollectionFixup::get_Collection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CollectionFixup::get_Collection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Collection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.CollectionFixup.get_Id
::Il2CppObject* System::Xml::Serialization::XmlSerializationReader::CollectionFixup::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CollectionFixup::get_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.CollectionFixup.get_CollectionItems
::Il2CppObject* System::Xml::Serialization::XmlSerializationReader::CollectionFixup::get_CollectionItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CollectionFixup::get_CollectionItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CollectionItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.CollectionFixup.set_CollectionItems
void System::Xml::Serialization::XmlSerializationReader::CollectionFixup::set_CollectionItems(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CollectionFixup::set_CollectionItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CollectionItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.Fixup
#include "System/Xml/Serialization/XmlSerializationReader_Fixup.hpp"
// Including type: System.Xml.Serialization.XmlSerializationFixupCallback
#include "System/Xml/Serialization/XmlSerializationFixupCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object source
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Serialization::XmlSerializationReader::Fixup::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::Fixup::dyn_source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] ids
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Xml::Serialization::XmlSerializationReader::Fixup::dyn_ids() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::Fixup::dyn_ids");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ids"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlSerializationFixupCallback callback
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlSerializationFixupCallback*& System::Xml::Serialization::XmlSerializationReader::Fixup::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::Fixup::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlSerializationFixupCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.Fixup.get_Callback
::System::Xml::Serialization::XmlSerializationFixupCallback* System::Xml::Serialization::XmlSerializationReader::Fixup::get_Callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::Fixup::get_Callback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Callback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlSerializationFixupCallback*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.Fixup.get_Ids
::ArrayW<::StringW> System::Xml::Serialization::XmlSerializationReader::Fixup::get_Ids() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::Fixup::get_Ids");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Ids", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.Fixup.get_Source
::Il2CppObject* System::Xml::Serialization::XmlSerializationReader::Fixup::get_Source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::Fixup::get_Source");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Source", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.CollectionItemFixup
#include "System/Xml/Serialization/XmlSerializationReader_CollectionItemFixup.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Array list
[[deprecated("Use field access instead!")]] ::System::Array*& System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Array**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String id
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.CollectionItemFixup.get_Collection
::System::Array* System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::get_Collection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::get_Collection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Collection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.CollectionItemFixup.get_Index
int System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::get_Index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.CollectionItemFixup.get_Id
::StringW System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::get_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlSerializationReaderInterpreter
#include "System/Xml/Serialization/XmlSerializationReaderInterpreter.hpp"
// Including type: System.Xml.Serialization.XmlSerializationReaderInterpreter/System.Xml.Serialization.FixupCallbackInfo
#include "System/Xml/Serialization/XmlSerializationReaderInterpreter_FixupCallbackInfo.hpp"
// Including type: System.Xml.Serialization.XmlSerializationReaderInterpreter/System.Xml.Serialization.ReaderCallbackInfo
#include "System/Xml/Serialization/XmlSerializationReaderInterpreter_ReaderCallbackInfo.hpp"
// Including type: System.Xml.Serialization.XmlMapping
#include "System/Xml/Serialization/XmlMapping.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapping
#include "System/Xml/Serialization/XmlTypeMapping.hpp"
// Including type: System.Xml.Serialization.XmlMembersMapping
#include "System/Xml/Serialization/XmlMembersMapping.hpp"
// Including type: System.Xml.Serialization.ClassMap
#include "System/Xml/Serialization/ClassMap.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapMember
#include "System/Xml/Serialization/XmlTypeMapMember.hpp"
// Including type: System.Xml.Serialization.TypeData
#include "System/Xml/Serialization/TypeData.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapElementInfo
#include "System/Xml/Serialization/XmlTypeMapElementInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XmlQualifiedName AnyType
::System::Xml::XmlQualifiedName* System::Xml::Serialization::XmlSerializationReaderInterpreter::_get_AnyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::_get_AnyType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Serialization", "XmlSerializationReaderInterpreter", "AnyType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XmlQualifiedName AnyType
void System::Xml::Serialization::XmlSerializationReaderInterpreter::_set_AnyType(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::_set_AnyType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "XmlSerializationReaderInterpreter", "AnyType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] empty_array
::ArrayW<::Il2CppObject*> System::Xml::Serialization::XmlSerializationReaderInterpreter::_get_empty_array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::_get_empty_array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("System.Xml.Serialization", "XmlSerializationReaderInterpreter", "empty_array"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] empty_array
void System::Xml::Serialization::XmlSerializationReaderInterpreter::_set_empty_array(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::_set_empty_array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "XmlSerializationReaderInterpreter", "empty_array", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlMapping _typeMap
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlMapping*& System::Xml::Serialization::XmlSerializationReaderInterpreter::dyn__typeMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::dyn__typeMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeMap"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlMapping**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.SerializationFormat _format
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::SerializationFormat& System::Xml::Serialization::XmlSerializationReaderInterpreter::dyn__format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::dyn__format");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_format"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::SerializationFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter..cctor
void System::Xml::Serialization::XmlSerializationReaderInterpreter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "XmlSerializationReaderInterpreter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ReadRoot
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ReadEncodedObject
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadEncodedObject(::System::Xml::Serialization::XmlTypeMapping* typeMap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadEncodedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadEncodedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeMap)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, typeMap);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ReadMessage
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadMessage(::System::Xml::Serialization::XmlMembersMapping* typeMap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationReaderInterpreter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, typeMap);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ReadRoot
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadRoot(::System::Xml::Serialization::XmlTypeMapping* rootMap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootMap)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, rootMap);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ReadObject
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadObject(::System::Xml::Serialization::XmlTypeMapping* typeMap, bool isNullable, bool checkType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationReaderInterpreter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, typeMap, isNullable, checkType);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ReadClassInstance
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadClassInstance(::System::Xml::Serialization::XmlTypeMapping* typeMap, bool isNullable, bool checkType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadClassInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationReaderInterpreter*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, typeMap, isNullable, checkType);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ReadClassInstanceMembers
void System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadClassInstanceMembers(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::Il2CppObject* ob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadClassInstanceMembers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationReaderInterpreter*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, typeMap, ob);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ReadAttributeMembers
void System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadAttributeMembers(::System::Xml::Serialization::ClassMap* map, ::Il2CppObject* ob, bool isValueList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadAttributeMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAttributeMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(map), ::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(isValueList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, map, ob, isValueList);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ReadMembers
void System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadMembers(::System::Xml::Serialization::ClassMap* map, ::Il2CppObject* ob, bool isValueList, bool readBySoapOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(map), ::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(isValueList), ::il2cpp_utils::ExtractType(readBySoapOrder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, map, ob, isValueList, readBySoapOrder);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.SetListMembersDefaults
void System::Xml::Serialization::XmlSerializationReaderInterpreter::SetListMembersDefaults(::System::Xml::Serialization::ClassMap* map, ::Il2CppObject* ob, bool isValueList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::SetListMembersDefaults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetListMembersDefaults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(map), ::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(isValueList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, map, ob, isValueList);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.FixupMembers
void System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupMembers(::System::Xml::Serialization::ClassMap* map, ::Il2CppObject* obfixup, bool isValueList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixupMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(map), ::il2cpp_utils::ExtractType(obfixup), ::il2cpp_utils::ExtractType(isValueList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, map, obfixup, isValueList);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ProcessUnknownAttribute
void System::Xml::Serialization::XmlSerializationReaderInterpreter::ProcessUnknownAttribute(::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ProcessUnknownAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationReaderInterpreter*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ProcessUnknownElement
void System::Xml::Serialization::XmlSerializationReaderInterpreter::ProcessUnknownElement(::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ProcessUnknownElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationReaderInterpreter*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.IsReadOnly
bool System::Xml::Serialization::XmlSerializationReaderInterpreter::IsReadOnly(::System::Xml::Serialization::XmlTypeMapMember* member, ::System::Xml::Serialization::TypeData* memType, ::Il2CppObject* ob, bool isValueList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(memType), ::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(isValueList)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, member, memType, ob, isValueList);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.SetMemberValue
void System::Xml::Serialization::XmlSerializationReaderInterpreter::SetMemberValue(::System::Xml::Serialization::XmlTypeMapMember* member, ::Il2CppObject* ob, ::Il2CppObject* value, bool isValueList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::SetMemberValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMemberValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(isValueList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, member, ob, value, isValueList);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.SetMemberValueFromAttr
void System::Xml::Serialization::XmlSerializationReaderInterpreter::SetMemberValueFromAttr(::System::Xml::Serialization::XmlTypeMapMember* member, ::Il2CppObject* ob, ::Il2CppObject* value, bool isValueList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::SetMemberValueFromAttr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMemberValueFromAttr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(isValueList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, member, ob, value, isValueList);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.GetMemberValue
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::GetMemberValue(::System::Xml::Serialization::XmlTypeMapMember* member, ::Il2CppObject* ob, bool isValueList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::GetMemberValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMemberValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(isValueList)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, member, ob, isValueList);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ReadObjectElement
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadObjectElement(::System::Xml::Serialization::XmlTypeMapElementInfo* elem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadObjectElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadObjectElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elem)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, elem);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ReadPrimitiveValue
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadPrimitiveValue(::System::Xml::Serialization::XmlTypeMapElementInfo* elem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadPrimitiveValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPrimitiveValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elem)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, elem);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.GetValueFromXmlString
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::GetValueFromXmlString(::StringW value, ::System::Xml::Serialization::TypeData* typeData, ::System::Xml::Serialization::XmlTypeMapping* typeMap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::GetValueFromXmlString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValueFromXmlString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(typeData), ::il2cpp_utils::ExtractType(typeMap)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, typeData, typeMap);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ReadListElement
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadListElement(::System::Xml::Serialization::XmlTypeMapping* typeMap, bool isNullable, ::Il2CppObject* list, bool canCreateInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadListElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadListElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeMap), ::il2cpp_utils::ExtractType(isNullable), ::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(canCreateInstance)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, typeMap, isNullable, list, canCreateInstance);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ReadListString
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadListString(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::StringW values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadListString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadListString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeMap), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, typeMap, values);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.AddListValue
void System::Xml::Serialization::XmlSerializationReaderInterpreter::AddListValue(::System::Xml::Serialization::TypeData* listType, ByRef<::Il2CppObject*> list, int index, ::Il2CppObject* value, bool canCreateInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::AddListValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddListValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listType), ::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(canCreateInstance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listType, byref(list), index, value, canCreateInstance);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.CreateInstance
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::CreateInstance(::System::Type* type, bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "XmlSerializationReaderInterpreter", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, nonPublic);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.CreateInstance
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::CreateInstance(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.CreateList
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::CreateList(::System::Type* listType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::CreateList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, listType);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.InitializeList
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::InitializeList(::System::Xml::Serialization::TypeData* listType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::InitializeList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, listType);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.FillList
void System::Xml::Serialization::XmlSerializationReaderInterpreter::FillList(::Il2CppObject* list, ::Il2CppObject* items) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::FillList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(items)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, list, items);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.CopyEnumerableList
void System::Xml::Serialization::XmlSerializationReaderInterpreter::CopyEnumerableList(::Il2CppObject* source, ::Il2CppObject* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::CopyEnumerableList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyEnumerableList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, dest);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ReadXmlNodeElement
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadXmlNodeElement(::System::Xml::Serialization::XmlTypeMapping* typeMap, bool isNullable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadXmlNodeElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadXmlNodeElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeMap), ::il2cpp_utils::ExtractType(isNullable)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, typeMap, isNullable);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ReadXmlNode
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadXmlNode(::System::Xml::Serialization::TypeData* type, bool wrapped) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadXmlNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadXmlNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(wrapped)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, wrapped);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ReadPrimitiveElement
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadPrimitiveElement(::System::Xml::Serialization::XmlTypeMapping* typeMap, bool isNullable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadPrimitiveElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPrimitiveElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeMap), ::il2cpp_utils::ExtractType(isNullable)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, typeMap, isNullable);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ReadEnumElement
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadEnumElement(::System::Xml::Serialization::XmlTypeMapping* typeMap, bool isNullable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadEnumElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadEnumElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeMap), ::il2cpp_utils::ExtractType(isNullable)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, typeMap, isNullable);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.GetEnumValue
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::GetEnumValue(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::StringW val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::GetEnumValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeMap), ::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, typeMap, val);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.ReadXmlSerializableElement
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadXmlSerializableElement(::System::Xml::Serialization::XmlTypeMapping* typeMap, bool isNullable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadXmlSerializableElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadXmlSerializableElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeMap), ::il2cpp_utils::ExtractType(isNullable)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, typeMap, isNullable);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.InitCallbacks
void System::Xml::Serialization::XmlSerializationReaderInterpreter::InitCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::InitCallbacks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationReader*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter.InitIDs
void System::Xml::Serialization::XmlSerializationReaderInterpreter::InitIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::InitIDs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationReader*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlSerializationReaderInterpreter/System.Xml.Serialization.FixupCallbackInfo
#include "System/Xml/Serialization/XmlSerializationReaderInterpreter_FixupCallbackInfo.hpp"
// Including type: System.Xml.Serialization.ClassMap
#include "System/Xml/Serialization/ClassMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlSerializationReaderInterpreter _sri
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlSerializationReaderInterpreter*& System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupCallbackInfo::dyn__sri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupCallbackInfo::dyn__sri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sri"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlSerializationReaderInterpreter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.ClassMap _map
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::ClassMap*& System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupCallbackInfo::dyn__map() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupCallbackInfo::dyn__map");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_map"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::ClassMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isValueList
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupCallbackInfo::dyn__isValueList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupCallbackInfo::dyn__isValueList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isValueList"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter/System.Xml.Serialization.FixupCallbackInfo.FixupMembers
void System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupCallbackInfo::FixupMembers(::Il2CppObject* fixup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupCallbackInfo::FixupMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixupMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fixup);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlSerializationReaderInterpreter/System.Xml.Serialization.ReaderCallbackInfo
#include "System/Xml/Serialization/XmlSerializationReaderInterpreter_ReaderCallbackInfo.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapping
#include "System/Xml/Serialization/XmlTypeMapping.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlSerializationReaderInterpreter _sri
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlSerializationReaderInterpreter*& System::Xml::Serialization::XmlSerializationReaderInterpreter::ReaderCallbackInfo::dyn__sri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReaderCallbackInfo::dyn__sri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sri"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlSerializationReaderInterpreter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlTypeMapping _typeMap
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlTypeMapping*& System::Xml::Serialization::XmlSerializationReaderInterpreter::ReaderCallbackInfo::dyn__typeMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReaderCallbackInfo::dyn__typeMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeMap"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlTypeMapping**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationReaderInterpreter/System.Xml.Serialization.ReaderCallbackInfo.ReadObject
::Il2CppObject* System::Xml::Serialization::XmlSerializationReaderInterpreter::ReaderCallbackInfo::ReadObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReaderCallbackInfo::ReadObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlSerializationWriteCallback
#include "System/Xml/Serialization/XmlSerializationWriteCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriteCallback.Invoke
void System::Xml::Serialization::XmlSerializationWriteCallback::Invoke(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriteCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationWriteCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriteCallback.BeginInvoke
::System::IAsyncResult* System::Xml::Serialization::XmlSerializationWriteCallback::BeginInvoke(::Il2CppObject* o, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriteCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationWriteCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, o, callback, object);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriteCallback.EndInvoke
void System::Xml::Serialization::XmlSerializationWriteCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriteCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationWriteCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlSerializationWriter
#include "System/Xml/Serialization/XmlSerializationWriter.hpp"
// Including type: System.Xml.Serialization.XmlSerializationWriter/System.Xml.Serialization.WriteCallbackInfo
#include "System/Xml/Serialization/XmlSerializationWriter_WriteCallbackInfo.hpp"
// Including type: System.Runtime.Serialization.ObjectIDGenerator
#include "System/Runtime/Serialization/ObjectIDGenerator.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Collections.Queue
#include "System/Collections/Queue.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.Serialization.XmlSerializerNamespaces
#include "System/Xml/Serialization/XmlSerializerNamespaces.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Serialization.XmlSerializationWriteCallback
#include "System/Xml/Serialization/XmlSerializationWriteCallback.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Xml.Serialization.TypeData
#include "System/Xml/Serialization/TypeData.hpp"
// Including type: System.Xml.Serialization.IXmlSerializable
#include "System/Xml/Serialization/IXmlSerializable.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Serialization.ObjectIDGenerator idGenerator
[[deprecated("Use field access instead!")]] ::System::Runtime::Serialization::ObjectIDGenerator*& System::Xml::Serialization::XmlSerializationWriter::dyn_idGenerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::dyn_idGenerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idGenerator"))->offset;
  return *reinterpret_cast<::System::Runtime::Serialization::ObjectIDGenerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 qnameCount
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlSerializationWriter::dyn_qnameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::dyn_qnameCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qnameCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean topLevelElement
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlSerializationWriter::dyn_topLevelElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::dyn_topLevelElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "topLevelElement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList namespaces
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Serialization::XmlSerializationWriter::dyn_namespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::dyn_namespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaces"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlWriter writer
[[deprecated("Use field access instead!")]] ::System::Xml::XmlWriter*& System::Xml::Serialization::XmlSerializationWriter::dyn_writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::dyn_writer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writer"))->offset;
  return *reinterpret_cast<::System::Xml::XmlWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Queue referencedElements
[[deprecated("Use field access instead!")]] ::System::Collections::Queue*& System::Xml::Serialization::XmlSerializationWriter::dyn_referencedElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::dyn_referencedElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referencedElements"))->offset;
  return *reinterpret_cast<::System::Collections::Queue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable callbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Serialization::XmlSerializationWriter::dyn_callbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::dyn_callbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable serializedObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Serialization::XmlSerializationWriter::dyn_serializedObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::dyn_serializedObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializedObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.get_Writer
::System::Xml::XmlWriter* System::Xml::Serialization::XmlSerializationWriter::get_Writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::get_Writer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Writer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlWriter*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.Initialize
void System::Xml::Serialization::XmlSerializationWriter::Initialize(::System::Xml::XmlWriter* writer, ::System::Xml::Serialization::XmlSerializerNamespaces* nss) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(nss)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, nss);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback
void System::Xml::Serialization::XmlSerializationWriter::AddWriteCallback(::System::Type* type, ::StringW typeName, ::StringW typeNs, ::System::Xml::Serialization::XmlSerializationWriteCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::AddWriteCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddWriteCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(typeName), ::il2cpp_utils::ExtractType(typeNs), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, typeName, typeNs, callback);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException
::System::Exception* System::Xml::Serialization::XmlSerializationWriter::CreateUnknownAnyElementException(::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::CreateUnknownAnyElementException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUnknownAnyElementException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, name, ns);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException
::System::Exception* System::Xml::Serialization::XmlSerializationWriter::CreateUnknownTypeException(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::CreateUnknownTypeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUnknownTypeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException
::System::Exception* System::Xml::Serialization::XmlSerializationWriter::CreateUnknownTypeException(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::CreateUnknownTypeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUnknownTypeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName
::StringW System::Xml::Serialization::XmlSerializationWriter::FromXmlQualifiedName(::System::Xml::XmlQualifiedName* xmlQualifiedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::FromXmlQualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromXmlQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlQualifiedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, xmlQualifiedName);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.GetId
::StringW System::Xml::Serialization::XmlSerializationWriter::GetId(::Il2CppObject* o, bool addToReferencesList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::GetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(addToReferencesList)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, o, addToReferencesList);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.AlreadyQueued
bool System::Xml::Serialization::XmlSerializationWriter::AlreadyQueued(::Il2CppObject* ob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::AlreadyQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AlreadyQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ob);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.GetNamespacePrefix
::StringW System::Xml::Serialization::XmlSerializationWriter::GetNamespacePrefix(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::GetNamespacePrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNamespacePrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ns);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.GetQualifiedName
::StringW System::Xml::Serialization::XmlSerializationWriter::GetQualifiedName(::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::GetQualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name, ns);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks
void System::Xml::Serialization::XmlSerializationWriter::InitCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::InitCallbacks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationWriter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement
void System::Xml::Serialization::XmlSerializationWriter::TopLevelElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::TopLevelElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TopLevelElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute
void System::Xml::Serialization::XmlSerializationWriter::WriteAttribute(::StringW localName, ::StringW ns, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localName, ns, value);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute
void System::Xml::Serialization::XmlSerializationWriter::WriteAttribute(::StringW prefix, ::StringW localName, ::StringW ns, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns, value);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteXmlNode
void System::Xml::Serialization::XmlSerializationWriter::WriteXmlNode(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteXmlNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded
void System::Xml::Serialization::XmlSerializationWriter::WriteElementEncoded(::System::Xml::XmlNode* node, ::StringW name, ::StringW ns, bool isNullable, bool any) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteElementEncoded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteElementEncoded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(isNullable), ::il2cpp_utils::ExtractType(any)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, name, ns, isNullable, any);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral
void System::Xml::Serialization::XmlSerializationWriter::WriteElementLiteral(::System::Xml::XmlNode* node, ::StringW name, ::StringW ns, bool isNullable, bool any) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteElementLiteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteElementLiteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(isNullable), ::il2cpp_utils::ExtractType(any)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, name, ns, isNullable, any);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName
void System::Xml::Serialization::XmlSerializationWriter::WriteElementQualifiedName(::StringW localName, ::StringW ns, ::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteElementQualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteElementQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localName, ns, value);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName
void System::Xml::Serialization::XmlSerializationWriter::WriteElementQualifiedName(::StringW localName, ::StringW ns, ::System::Xml::XmlQualifiedName* value, ::System::Xml::XmlQualifiedName* xsiType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteElementQualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteElementQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(xsiType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localName, ns, value, xsiType);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteElementString
void System::Xml::Serialization::XmlSerializationWriter::WriteElementString(::StringW localName, ::StringW ns, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteElementString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteElementString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localName, ns, value);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteElementString
void System::Xml::Serialization::XmlSerializationWriter::WriteElementString(::StringW localName, ::StringW ns, ::StringW value, ::System::Xml::XmlQualifiedName* xsiType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteElementString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteElementString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(xsiType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localName, ns, value, xsiType);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement
void System::Xml::Serialization::XmlSerializationWriter::WriteEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement
void System::Xml::Serialization::XmlSerializationWriter::WriteEndElement(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations
void System::Xml::Serialization::XmlSerializationWriter::WriteNamespaceDeclarations(::System::Xml::Serialization::XmlSerializerNamespaces* xmlns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteNamespaceDeclarations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNamespaceDeclarations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmlns);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded
void System::Xml::Serialization::XmlSerializationWriter::WriteNullableQualifiedNameEncoded(::StringW name, ::StringW ns, ::System::Xml::XmlQualifiedName* value, ::System::Xml::XmlQualifiedName* xsiType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteNullableQualifiedNameEncoded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNullableQualifiedNameEncoded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(xsiType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, ns, value, xsiType);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral
void System::Xml::Serialization::XmlSerializationWriter::WriteNullableQualifiedNameLiteral(::StringW name, ::StringW ns, ::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteNullableQualifiedNameLiteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNullableQualifiedNameLiteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, ns, value);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded
void System::Xml::Serialization::XmlSerializationWriter::WriteNullableStringEncoded(::StringW name, ::StringW ns, ::StringW value, ::System::Xml::XmlQualifiedName* xsiType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteNullableStringEncoded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNullableStringEncoded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(xsiType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, ns, value, xsiType);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral
void System::Xml::Serialization::XmlSerializationWriter::WriteNullableStringLiteral(::StringW name, ::StringW ns, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteNullableStringLiteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNullableStringLiteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, ns, value);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded
void System::Xml::Serialization::XmlSerializationWriter::WriteNullTagEncoded(::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteNullTagEncoded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNullTagEncoded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, ns);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral
void System::Xml::Serialization::XmlSerializationWriter::WriteNullTagLiteral(::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteNullTagLiteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNullTagLiteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, ns);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement
void System::Xml::Serialization::XmlSerializationWriter::WritePotentiallyReferencingElement(::StringW n, ::StringW ns, ::Il2CppObject* o, ::System::Type* ambientType, bool suppressReference, bool isNullable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WritePotentiallyReferencingElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePotentiallyReferencingElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(ambientType), ::il2cpp_utils::ExtractType(suppressReference), ::il2cpp_utils::ExtractType(isNullable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n, ns, o, ambientType, suppressReference, isNullable);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements
void System::Xml::Serialization::XmlSerializationWriter::WriteReferencedElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteReferencedElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteReferencedElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.IsPrimitiveArray
bool System::Xml::Serialization::XmlSerializationWriter::IsPrimitiveArray(::System::Xml::Serialization::TypeData* td) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::IsPrimitiveArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrimitiveArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(td)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, td);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteArray
void System::Xml::Serialization::XmlSerializationWriter::WriteArray(::Il2CppObject* o, ::System::Xml::Serialization::TypeData* td) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(td)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, td);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement
void System::Xml::Serialization::XmlSerializationWriter::WriteReferencingElement(::StringW n, ::StringW ns, ::Il2CppObject* o, bool isNullable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteReferencingElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteReferencingElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(isNullable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n, ns, o, isNullable);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.CheckReferenceQueue
void System::Xml::Serialization::XmlSerializationWriter::CheckReferenceQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::CheckReferenceQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckReferenceQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable
void System::Xml::Serialization::XmlSerializationWriter::WriteSerializable(::System::Xml::Serialization::IXmlSerializable* serializable, ::StringW name, ::StringW ns, bool isNullable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializable), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(isNullable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializable, name, ns, isNullable);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable
void System::Xml::Serialization::XmlSerializationWriter::WriteSerializable(::System::Xml::Serialization::IXmlSerializable* serializable, ::StringW name, ::StringW ns, bool isNullable, bool wrapped) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializable), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(isNullable), ::il2cpp_utils::ExtractType(wrapped)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializable, name, ns, isNullable, wrapped);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument
void System::Xml::Serialization::XmlSerializationWriter::WriteStartDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteStartDocument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement
void System::Xml::Serialization::XmlSerializationWriter::WriteStartElement(::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteStartElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, ns);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement
void System::Xml::Serialization::XmlSerializationWriter::WriteStartElement(::StringW name, ::StringW ns, bool writePrefixed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteStartElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(writePrefixed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, ns, writePrefixed);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement
void System::Xml::Serialization::XmlSerializationWriter::WriteStartElement(::StringW name, ::StringW ns, ::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteStartElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, ns, o);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement
void System::Xml::Serialization::XmlSerializationWriter::WriteStartElement(::StringW name, ::StringW ns, ::Il2CppObject* o, bool writePrefixed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteStartElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(writePrefixed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, ns, o, writePrefixed);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement
void System::Xml::Serialization::XmlSerializationWriter::WriteStartElement(::StringW name, ::StringW ns, ::Il2CppObject* o, bool writePrefixed, ::System::Collections::ICollection* namespaces) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteStartElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(writePrefixed), ::il2cpp_utils::ExtractType(namespaces)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, ns, o, writePrefixed, namespaces);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive
void System::Xml::Serialization::XmlSerializationWriter::WriteTypedPrimitive(::StringW name, ::StringW ns, ::Il2CppObject* o, bool xsiType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteTypedPrimitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteTypedPrimitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(xsiType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, ns, o, xsiType);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteValue
void System::Xml::Serialization::XmlSerializationWriter::WriteValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute
void System::Xml::Serialization::XmlSerializationWriter::WriteXmlAttribute(::System::Xml::XmlNode* node, ::Il2CppObject* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteXmlAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, container);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType
void System::Xml::Serialization::XmlSerializationWriter::WriteXsiType(::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteXsiType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXsiType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, ns);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlSerializationWriter/System.Xml.Serialization.WriteCallbackInfo
#include "System/Xml/Serialization/XmlSerializationWriter_WriteCallbackInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Serialization.XmlSerializationWriteCallback
#include "System/Xml/Serialization/XmlSerializationWriteCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type Type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::Serialization::XmlSerializationWriter::WriteCallbackInfo::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteCallbackInfo::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TypeName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlSerializationWriter::WriteCallbackInfo::dyn_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteCallbackInfo::dyn_TypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TypeNs
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlSerializationWriter::WriteCallbackInfo::dyn_TypeNs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteCallbackInfo::dyn_TypeNs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TypeNs"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Serialization.XmlSerializationWriteCallback Callback
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlSerializationWriteCallback*& System::Xml::Serialization::XmlSerializationWriter::WriteCallbackInfo::dyn_Callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriter::WriteCallbackInfo::dyn_Callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Callback"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlSerializationWriteCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlSerializationWriterInterpreter
#include "System/Xml/Serialization/XmlSerializationWriterInterpreter.hpp"
// Including type: System.Xml.Serialization.XmlSerializationWriterInterpreter/System.Xml.Serialization.CallbackInfo
#include "System/Xml/Serialization/XmlSerializationWriterInterpreter_CallbackInfo.hpp"
// Including type: System.Xml.Serialization.XmlMapping
#include "System/Xml/Serialization/XmlMapping.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapping
#include "System/Xml/Serialization/XmlTypeMapping.hpp"
// Including type: System.Xml.Serialization.XmlMembersMapping
#include "System/Xml/Serialization/XmlMembersMapping.hpp"
// Including type: System.Xml.Serialization.ClassMap
#include "System/Xml/Serialization/ClassMap.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapMember
#include "System/Xml/Serialization/XmlTypeMapMember.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapElementInfo
#include "System/Xml/Serialization/XmlTypeMapElementInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Serialization.TypeData
#include "System/Xml/Serialization/TypeData.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Serialization.ListMap
#include "System/Xml/Serialization/ListMap.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapMemberAnyElement
#include "System/Xml/Serialization/XmlTypeMapMemberAnyElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlMapping _typeMap
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlMapping*& System::Xml::Serialization::XmlSerializationWriterInterpreter::dyn__typeMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::dyn__typeMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeMap"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlMapping**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.SerializationFormat _format
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::SerializationFormat& System::Xml::Serialization::XmlSerializationWriterInterpreter::dyn__format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::dyn__format");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_format"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::SerializationFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.WriteRoot
void System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteRoot(::Il2CppObject* ob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ob);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.WriteObject
void System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteObject(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::Il2CppObject* ob, ::StringW element, ::StringW namesp, bool isNullable, bool needType, bool writeWrappingElem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationWriterInterpreter*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, typeMap, ob, element, namesp, isNullable, needType, writeWrappingElem);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.WriteMessage
void System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteMessage(::System::Xml::Serialization::XmlMembersMapping* membersMap, ::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationWriterInterpreter*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, membersMap, parameters);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.WriteObjectElement
void System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteObjectElement(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::Il2CppObject* ob, ::StringW element, ::StringW namesp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteObjectElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationWriterInterpreter*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, typeMap, ob, element, namesp);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.WriteObjectElementAttributes
void System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteObjectElementAttributes(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::Il2CppObject* ob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteObjectElementAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationWriterInterpreter*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, typeMap, ob);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.WriteObjectElementElements
void System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteObjectElementElements(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::Il2CppObject* ob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteObjectElementElements");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationWriterInterpreter*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, typeMap, ob);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.WriteMembers
void System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteMembers(::System::Xml::Serialization::ClassMap* map, ::Il2CppObject* ob, bool isValueList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(map), ::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(isValueList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, map, ob, isValueList);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.WriteAttributeMembers
void System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteAttributeMembers(::System::Xml::Serialization::ClassMap* map, ::Il2CppObject* ob, bool isValueList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteAttributeMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAttributeMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(map), ::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(isValueList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, map, ob, isValueList);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.WriteElementMembers
void System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteElementMembers(::System::Xml::Serialization::ClassMap* map, ::Il2CppObject* ob, bool isValueList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteElementMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteElementMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(map), ::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(isValueList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, map, ob, isValueList);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.GetMemberValue
::Il2CppObject* System::Xml::Serialization::XmlSerializationWriterInterpreter::GetMemberValue(::System::Xml::Serialization::XmlTypeMapMember* member, ::Il2CppObject* ob, bool isValueList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::GetMemberValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMemberValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(isValueList)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, member, ob, isValueList);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.MemberHasValue
bool System::Xml::Serialization::XmlSerializationWriterInterpreter::MemberHasValue(::System::Xml::Serialization::XmlTypeMapMember* member, ::Il2CppObject* ob, bool isValueList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::MemberHasValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MemberHasValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(isValueList)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, member, ob, isValueList);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.WriteMemberElement
void System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteMemberElement(::System::Xml::Serialization::XmlTypeMapElementInfo* elem, ::Il2CppObject* memberValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteMemberElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMemberElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elem), ::il2cpp_utils::ExtractType(memberValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, elem, memberValue);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.ImplicitConvert
::Il2CppObject* System::Xml::Serialization::XmlSerializationWriterInterpreter::ImplicitConvert(::Il2CppObject* obj, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::ImplicitConvert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "XmlSerializationWriterInterpreter", "ImplicitConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, type);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.WritePrimitiveValueLiteral
void System::Xml::Serialization::XmlSerializationWriterInterpreter::WritePrimitiveValueLiteral(::Il2CppObject* memberValue, ::StringW name, ::StringW ns, ::System::Xml::Serialization::XmlTypeMapping* mappedType, ::System::Xml::Serialization::TypeData* typeData, bool wrapped, bool isNullable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::WritePrimitiveValueLiteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePrimitiveValueLiteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberValue), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(mappedType), ::il2cpp_utils::ExtractType(typeData), ::il2cpp_utils::ExtractType(wrapped), ::il2cpp_utils::ExtractType(isNullable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, memberValue, name, ns, mappedType, typeData, wrapped, isNullable);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.WritePrimitiveValueEncoded
void System::Xml::Serialization::XmlSerializationWriterInterpreter::WritePrimitiveValueEncoded(::Il2CppObject* memberValue, ::StringW name, ::StringW ns, ::System::Xml::XmlQualifiedName* xsiType, ::System::Xml::Serialization::XmlTypeMapping* mappedType, ::System::Xml::Serialization::TypeData* typeData, bool wrapped, bool isNullable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::WritePrimitiveValueEncoded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePrimitiveValueEncoded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberValue), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(xsiType), ::il2cpp_utils::ExtractType(mappedType), ::il2cpp_utils::ExtractType(typeData), ::il2cpp_utils::ExtractType(wrapped), ::il2cpp_utils::ExtractType(isNullable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, memberValue, name, ns, xsiType, mappedType, typeData, wrapped, isNullable);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.WriteListElement
void System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteListElement(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::Il2CppObject* ob, ::StringW element, ::StringW namesp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteListElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationWriterInterpreter*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, typeMap, ob, element, namesp);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.WriteListContent
void System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteListContent(::Il2CppObject* container, ::System::Xml::Serialization::TypeData* listType, ::System::Xml::Serialization::ListMap* map, ::Il2CppObject* ob, ::System::Text::StringBuilder* targetString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteListContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteListContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(listType), ::il2cpp_utils::ExtractType(map), ::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(targetString)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, listType, map, ob, targetString);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.GetListCount
int System::Xml::Serialization::XmlSerializationWriterInterpreter::GetListCount(::System::Xml::Serialization::TypeData* listType, ::Il2CppObject* ob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::GetListCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetListCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listType), ::il2cpp_utils::ExtractType(ob)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, listType, ob);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.WriteAnyElementContent
void System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteAnyElementContent(::System::Xml::Serialization::XmlTypeMapMemberAnyElement* member, ::Il2CppObject* memberValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteAnyElementContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAnyElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(memberValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, member, memberValue);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.WritePrimitiveElement
void System::Xml::Serialization::XmlSerializationWriterInterpreter::WritePrimitiveElement(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::Il2CppObject* ob, ::StringW element, ::StringW namesp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::WritePrimitiveElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationWriterInterpreter*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, typeMap, ob, element, namesp);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.WriteEnumElement
void System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteEnumElement(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::Il2CppObject* ob, ::StringW element, ::StringW namesp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteEnumElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationWriterInterpreter*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, typeMap, ob, element, namesp);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.GetStringValue
::StringW System::Xml::Serialization::XmlSerializationWriterInterpreter::GetStringValue(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::System::Xml::Serialization::TypeData* type, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::GetStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeMap), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, typeMap, type, value);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.GetEnumXmlValue
::StringW System::Xml::Serialization::XmlSerializationWriterInterpreter::GetEnumXmlValue(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::Il2CppObject* ob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::GetEnumXmlValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumXmlValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeMap), ::il2cpp_utils::ExtractType(ob)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, typeMap, ob);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter.InitCallbacks
void System::Xml::Serialization::XmlSerializationWriterInterpreter::InitCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::InitCallbacks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializationWriter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlSerializationWriterInterpreter/System.Xml.Serialization.CallbackInfo
#include "System/Xml/Serialization/XmlSerializationWriterInterpreter_CallbackInfo.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapping
#include "System/Xml/Serialization/XmlTypeMapping.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlSerializationWriterInterpreter _swi
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlSerializationWriterInterpreter*& System::Xml::Serialization::XmlSerializationWriterInterpreter::CallbackInfo::dyn__swi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::CallbackInfo::dyn__swi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_swi"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlSerializationWriterInterpreter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlTypeMapping _typeMap
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlTypeMapping*& System::Xml::Serialization::XmlSerializationWriterInterpreter::CallbackInfo::dyn__typeMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::CallbackInfo::dyn__typeMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeMap"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlTypeMapping**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter/System.Xml.Serialization.CallbackInfo.WriteObject
void System::Xml::Serialization::XmlSerializationWriterInterpreter::CallbackInfo::WriteObject(::Il2CppObject* ob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::CallbackInfo::WriteObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ob);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializationWriterInterpreter/System.Xml.Serialization.CallbackInfo.WriteEnum
void System::Xml::Serialization::XmlSerializationWriterInterpreter::CallbackInfo::WriteEnum(::Il2CppObject* ob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::CallbackInfo::WriteEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ob);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlSerializer
#include "System/Xml/Serialization/XmlSerializer.hpp"
// Including type: System.Xml.Serialization.XmlSerializer/System.Xml.Serialization.SerializerData
#include "System/Xml/Serialization/XmlSerializer_SerializerData.hpp"
// Including type: System.Xml.Serialization.XmlMapping
#include "System/Xml/Serialization/XmlMapping.hpp"
// Including type: System.Xml.Serialization.UnreferencedObjectEventHandler
#include "System/Xml/Serialization/UnreferencedObjectEventHandler.hpp"
// Including type: System.Xml.Serialization.XmlAttributeEventHandler
#include "System/Xml/Serialization/XmlAttributeEventHandler.hpp"
// Including type: System.Xml.Serialization.XmlElementEventHandler
#include "System/Xml/Serialization/XmlElementEventHandler.hpp"
// Including type: System.Xml.Serialization.XmlNodeEventHandler
#include "System/Xml/Serialization/XmlNodeEventHandler.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Serialization.XmlAttributeOverrides
#include "System/Xml/Serialization/XmlAttributeOverrides.hpp"
// Including type: System.Xml.Serialization.XmlRootAttribute
#include "System/Xml/Serialization/XmlRootAttribute.hpp"
// Including type: System.Xml.Serialization.XmlAttributeEventArgs
#include "System/Xml/Serialization/XmlAttributeEventArgs.hpp"
// Including type: System.Xml.Serialization.XmlElementEventArgs
#include "System/Xml/Serialization/XmlElementEventArgs.hpp"
// Including type: System.Xml.Serialization.XmlNodeEventArgs
#include "System/Xml/Serialization/XmlNodeEventArgs.hpp"
// Including type: System.Xml.Serialization.UnreferencedObjectEventArgs
#include "System/Xml/Serialization/UnreferencedObjectEventArgs.hpp"
// Including type: System.Xml.Serialization.XmlSerializationReader
#include "System/Xml/Serialization/XmlSerializationReader.hpp"
// Including type: System.Xml.Serialization.XmlSerializationWriter
#include "System/Xml/Serialization/XmlSerializationWriter.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.Serialization.XmlSerializerNamespaces
#include "System/Xml/Serialization/XmlSerializerNamespaces.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 generationThreshold
int System::Xml::Serialization::XmlSerializer::_get_generationThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::_get_generationThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Serialization", "XmlSerializer", "generationThreshold"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 generationThreshold
void System::Xml::Serialization::XmlSerializer::_set_generationThreshold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::_set_generationThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "XmlSerializer", "generationThreshold", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean backgroundGeneration
bool System::Xml::Serialization::XmlSerializer::_get_backgroundGeneration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::_get_backgroundGeneration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Xml.Serialization", "XmlSerializer", "backgroundGeneration"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean backgroundGeneration
void System::Xml::Serialization::XmlSerializer::_set_backgroundGeneration(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::_set_backgroundGeneration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "XmlSerializer", "backgroundGeneration", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean deleteTempFiles
bool System::Xml::Serialization::XmlSerializer::_get_deleteTempFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::_get_deleteTempFiles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Xml.Serialization", "XmlSerializer", "deleteTempFiles"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean deleteTempFiles
void System::Xml::Serialization::XmlSerializer::_set_deleteTempFiles(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::_set_deleteTempFiles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "XmlSerializer", "deleteTempFiles", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean generatorFallback
bool System::Xml::Serialization::XmlSerializer::_get_generatorFallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::_get_generatorFallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Xml.Serialization", "XmlSerializer", "generatorFallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean generatorFallback
void System::Xml::Serialization::XmlSerializer::_set_generatorFallback(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::_set_generatorFallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "XmlSerializer", "generatorFallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable serializerTypes
::System::Collections::Hashtable* System::Xml::Serialization::XmlSerializer::_get_serializerTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::_get_serializerTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Xml.Serialization", "XmlSerializer", "serializerTypes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable serializerTypes
void System::Xml::Serialization::XmlSerializer::_set_serializerTypes(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::_set_serializerTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "XmlSerializer", "serializerTypes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding DefaultEncoding
::System::Text::Encoding* System::Xml::Serialization::XmlSerializer::_get_DefaultEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::_get_DefaultEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("System.Xml.Serialization", "XmlSerializer", "DefaultEncoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding DefaultEncoding
void System::Xml::Serialization::XmlSerializer::_set_DefaultEncoding(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::_set_DefaultEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "XmlSerializer", "DefaultEncoding", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean customSerializer
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlSerializer::dyn_customSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::dyn_customSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "customSerializer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlMapping typeMapping
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlMapping*& System::Xml::Serialization::XmlSerializer::dyn_typeMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::dyn_typeMapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeMapping"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlMapping**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlSerializer/System.Xml.Serialization.SerializerData serializerData
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlSerializer::SerializerData*& System::Xml::Serialization::XmlSerializer::dyn_serializerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::dyn_serializerData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializerData"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlSerializer::SerializerData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.UnreferencedObjectEventHandler onUnreferencedObject
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::UnreferencedObjectEventHandler*& System::Xml::Serialization::XmlSerializer::dyn_onUnreferencedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::dyn_onUnreferencedObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onUnreferencedObject"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::UnreferencedObjectEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlAttributeEventHandler onUnknownAttribute
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlAttributeEventHandler*& System::Xml::Serialization::XmlSerializer::dyn_onUnknownAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::dyn_onUnknownAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onUnknownAttribute"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlAttributeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlElementEventHandler onUnknownElement
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlElementEventHandler*& System::Xml::Serialization::XmlSerializer::dyn_onUnknownElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::dyn_onUnknownElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onUnknownElement"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlElementEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlNodeEventHandler onUnknownNode
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlNodeEventHandler*& System::Xml::Serialization::XmlSerializer::dyn_onUnknownNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::dyn_onUnknownNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onUnknownNode"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlNodeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializer.get_Mapping
::System::Xml::Serialization::XmlMapping* System::Xml::Serialization::XmlSerializer::get_Mapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::get_Mapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlMapping*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializer..cctor
void System::Xml::Serialization::XmlSerializer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "XmlSerializer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializer.OnUnknownAttribute
void System::Xml::Serialization::XmlSerializer::OnUnknownAttribute(::System::Xml::Serialization::XmlAttributeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::OnUnknownAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializer*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializer.OnUnknownElement
void System::Xml::Serialization::XmlSerializer::OnUnknownElement(::System::Xml::Serialization::XmlElementEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::OnUnknownElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializer.OnUnknownNode
void System::Xml::Serialization::XmlSerializer::OnUnknownNode(::System::Xml::Serialization::XmlNodeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::OnUnknownNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializer.OnUnreferencedObject
void System::Xml::Serialization::XmlSerializer::OnUnreferencedObject(::System::Xml::Serialization::UnreferencedObjectEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::OnUnreferencedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializer*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializer.CreateReader
::System::Xml::Serialization::XmlSerializationReader* System::Xml::Serialization::XmlSerializer::CreateReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::CreateReader");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializer*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlSerializationReader*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializer.CreateWriter
::System::Xml::Serialization::XmlSerializationWriter* System::Xml::Serialization::XmlSerializer::CreateWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::CreateWriter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializer*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlSerializationWriter*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializer.Deserialize
::Il2CppObject* System::Xml::Serialization::XmlSerializer::Deserialize(::System::IO::TextReader* textReader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textReader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, textReader);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializer.Deserialize
::Il2CppObject* System::Xml::Serialization::XmlSerializer::Deserialize(::System::Xml::XmlReader* xmlReader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlReader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, xmlReader);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializer.Deserialize
::Il2CppObject* System::Xml::Serialization::XmlSerializer::Deserialize(::System::Xml::Serialization::XmlSerializationReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializer*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializer.Serialize
void System::Xml::Serialization::XmlSerializer::Serialize(::Il2CppObject* o, ::System::Xml::Serialization::XmlSerializationWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializer*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, writer);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializer.Serialize
void System::Xml::Serialization::XmlSerializer::Serialize(::System::IO::TextWriter* textWriter, ::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textWriter), ::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textWriter, o);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializer.Serialize
void System::Xml::Serialization::XmlSerializer::Serialize(::System::Xml::XmlWriter* xmlWriter, ::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlWriter), ::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmlWriter, o);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializer.Serialize
void System::Xml::Serialization::XmlSerializer::Serialize(::System::Xml::XmlWriter* xmlWriter, ::Il2CppObject* o, ::System::Xml::Serialization::XmlSerializerNamespaces* namespaces) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlWriter), ::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(namespaces)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmlWriter, o, namespaces);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializer.CreateWriter
::System::Xml::Serialization::XmlSerializationWriter* System::Xml::Serialization::XmlSerializer::CreateWriter(::System::Xml::Serialization::XmlMapping* typeMapping) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::CreateWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeMapping)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlSerializationWriter*, false>(this, ___internal__method, typeMapping);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializer.CreateReader
::System::Xml::Serialization::XmlSerializationReader* System::Xml::Serialization::XmlSerializer::CreateReader(::System::Xml::Serialization::XmlMapping* typeMapping) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::CreateReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeMapping)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlSerializationReader*, false>(this, ___internal__method, typeMapping);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlSerializer/System.Xml.Serialization.SerializerData
#include "System/Xml/Serialization/XmlSerializer_SerializerData.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Serialization.XmlSerializerImplementation
#include "System/Xml/Serialization/XmlSerializerImplementation.hpp"
// Including type: System.Xml.Serialization.XmlSerializationWriter
#include "System/Xml/Serialization/XmlSerializationWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MethodInfo ReaderMethod
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& System::Xml::Serialization::XmlSerializer::SerializerData::dyn_ReaderMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::SerializerData::dyn_ReaderMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReaderMethod"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type WriterType
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::Serialization::XmlSerializer::SerializerData::dyn_WriterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::SerializerData::dyn_WriterType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WriterType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MethodInfo WriterMethod
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& System::Xml::Serialization::XmlSerializer::SerializerData::dyn_WriterMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::SerializerData::dyn_WriterMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WriterMethod"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Serialization.XmlSerializerImplementation Implementation
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlSerializerImplementation*& System::Xml::Serialization::XmlSerializer::SerializerData::dyn_Implementation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::SerializerData::dyn_Implementation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Implementation"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlSerializerImplementation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializer/System.Xml.Serialization.SerializerData.CreateWriter
::System::Xml::Serialization::XmlSerializationWriter* System::Xml::Serialization::XmlSerializer::SerializerData::CreateWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializer::SerializerData::CreateWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlSerializationWriter*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlSerializerFactory
#include "System/Xml/Serialization/XmlSerializerFactory.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.Serialization.XmlSerializer
#include "System/Xml/Serialization/XmlSerializer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Serialization.XmlRootAttribute
#include "System/Xml/Serialization/XmlRootAttribute.hpp"
// Including type: System.Xml.Serialization.XmlAttributeOverrides
#include "System/Xml/Serialization/XmlAttributeOverrides.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable serializersBySource
::System::Collections::Hashtable* System::Xml::Serialization::XmlSerializerFactory::_get_serializersBySource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializerFactory::_get_serializersBySource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Xml.Serialization", "XmlSerializerFactory", "serializersBySource"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable serializersBySource
void System::Xml::Serialization::XmlSerializerFactory::_set_serializersBySource(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializerFactory::_set_serializersBySource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Serialization", "XmlSerializerFactory", "serializersBySource", value));
}
// Autogenerated method: System.Xml.Serialization.XmlSerializerFactory..cctor
void System::Xml::Serialization::XmlSerializerFactory::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializerFactory::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "XmlSerializerFactory", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer
::System::Xml::Serialization::XmlSerializer* System::Xml::Serialization::XmlSerializerFactory::CreateSerializer(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializerFactory::CreateSerializer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlSerializer*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer
::System::Xml::Serialization::XmlSerializer* System::Xml::Serialization::XmlSerializerFactory::CreateSerializer(::System::Type* type, ::System::Xml::Serialization::XmlRootAttribute* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializerFactory::CreateSerializer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlSerializer*, false>(this, ___internal__method, type, root);
}
// Autogenerated method: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer
::System::Xml::Serialization::XmlSerializer* System::Xml::Serialization::XmlSerializerFactory::CreateSerializer(::System::Type* type, ::System::Xml::Serialization::XmlAttributeOverrides* overrides, ::ArrayW<::System::Type*> extraTypes, ::System::Xml::Serialization::XmlRootAttribute* root, ::StringW defaultNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializerFactory::CreateSerializer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(overrides), ::il2cpp_utils::ExtractType(extraTypes), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(defaultNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlSerializer*, false>(this, ___internal__method, type, overrides, extraTypes, root, defaultNamespace);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlSerializerImplementation
#include "System/Xml/Serialization/XmlSerializerImplementation.hpp"
// Including type: System.Xml.Serialization.XmlSerializationWriter
#include "System/Xml/Serialization/XmlSerializationWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Serialization.XmlSerializerImplementation.get_Writer
::System::Xml::Serialization::XmlSerializationWriter* System::Xml::Serialization::XmlSerializerImplementation::get_Writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializerImplementation::get_Writer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Serialization::XmlSerializerImplementation*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlSerializationWriter*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlTextAttribute
#include "System/Xml/Serialization/XmlTextAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String dataType
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlTextAttribute::dyn_dataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTextAttribute::dyn_dataType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::Serialization::XmlTextAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTextAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlTextAttribute.get_DataType
::StringW System::Xml::Serialization::XmlTextAttribute::get_DataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTextAttribute::get_DataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTextAttribute.get_Type
::System::Type* System::Xml::Serialization::XmlTextAttribute::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTextAttribute::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTextAttribute.AddKeyHash
void System::Xml::Serialization::XmlTextAttribute::AddKeyHash(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTextAttribute::AddKeyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlTypeAttribute
#include "System/Xml/Serialization/XmlTypeAttribute.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean includeInSchema
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlTypeAttribute::dyn_includeInSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeAttribute::dyn_includeInSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeInSchema"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String ns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlTypeAttribute::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeAttribute::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String typeName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlTypeAttribute::dyn_typeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeAttribute::dyn_typeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeAttribute.get_IncludeInSchema
bool System::Xml::Serialization::XmlTypeAttribute::get_IncludeInSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeAttribute::get_IncludeInSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IncludeInSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeAttribute.get_Namespace
::StringW System::Xml::Serialization::XmlTypeAttribute::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeAttribute::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeAttribute.get_TypeName
::StringW System::Xml::Serialization::XmlTypeAttribute::get_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeAttribute::get_TypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeAttribute.AddKeyHash
void System::Xml::Serialization::XmlTypeAttribute::AddKeyHash(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeAttribute::AddKeyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlTypeMapElementInfo
#include "System/Xml/Serialization/XmlTypeMapElementInfo.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapMember
#include "System/Xml/Serialization/XmlTypeMapMember.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapping
#include "System/Xml/Serialization/XmlTypeMapping.hpp"
// Including type: System.Xml.Serialization.TypeData
#include "System/Xml/Serialization/TypeData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _elementName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlTypeMapElementInfo::dyn__elementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::dyn__elementName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _namespace
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlTypeMapElementInfo::dyn__namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::dyn__namespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_namespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaForm _form
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaForm& System::Xml::Serialization::XmlTypeMapElementInfo::dyn__form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::dyn__form");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_form"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaForm*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlTypeMapMember _member
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlTypeMapMember*& System::Xml::Serialization::XmlTypeMapElementInfo::dyn__member() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::dyn__member");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_member"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlTypeMapMember**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _choiceValue
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Serialization::XmlTypeMapElementInfo::dyn__choiceValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::dyn__choiceValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_choiceValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isNullable
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlTypeMapElementInfo::dyn__isNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::dyn__isNullable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isNullable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _nestingLevel
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlTypeMapElementInfo::dyn__nestingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::dyn__nestingLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nestingLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlTypeMapping _mappedType
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlTypeMapping*& System::Xml::Serialization::XmlTypeMapElementInfo::dyn__mappedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::dyn__mappedType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mappedType"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlTypeMapping**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.TypeData _type
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::TypeData*& System::Xml::Serialization::XmlTypeMapElementInfo::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::TypeData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _wrappedElement
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlTypeMapElementInfo::dyn__wrappedElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::dyn__wrappedElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wrappedElement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _explicitOrder
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlTypeMapElementInfo::dyn__explicitOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::dyn__explicitOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_explicitOrder"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.get_TypeData
::System::Xml::Serialization::TypeData* System::Xml::Serialization::XmlTypeMapElementInfo::get_TypeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::get_TypeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::TypeData*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.get_ChoiceValue
::Il2CppObject* System::Xml::Serialization::XmlTypeMapElementInfo::get_ChoiceValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::get_ChoiceValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChoiceValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.set_ChoiceValue
void System::Xml::Serialization::XmlTypeMapElementInfo::set_ChoiceValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::set_ChoiceValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChoiceValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.get_ElementName
::StringW System::Xml::Serialization::XmlTypeMapElementInfo::get_ElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::get_ElementName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.set_ElementName
void System::Xml::Serialization::XmlTypeMapElementInfo::set_ElementName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::set_ElementName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.get_Namespace
::StringW System::Xml::Serialization::XmlTypeMapElementInfo::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.set_Namespace
void System::Xml::Serialization::XmlTypeMapElementInfo::set_Namespace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::set_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.get_DataTypeNamespace
::StringW System::Xml::Serialization::XmlTypeMapElementInfo::get_DataTypeNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::get_DataTypeNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataTypeNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.get_DataTypeName
::StringW System::Xml::Serialization::XmlTypeMapElementInfo::get_DataTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::get_DataTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.get_Form
::System::Xml::Schema::XmlSchemaForm System::Xml::Serialization::XmlTypeMapElementInfo::get_Form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::get_Form");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Form", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaForm, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.set_Form
void System::Xml::Serialization::XmlTypeMapElementInfo::set_Form(::System::Xml::Schema::XmlSchemaForm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::set_Form");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Form", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.get_MappedType
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::XmlTypeMapElementInfo::get_MappedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::get_MappedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MappedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.set_MappedType
void System::Xml::Serialization::XmlTypeMapElementInfo::set_MappedType(::System::Xml::Serialization::XmlTypeMapping* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::set_MappedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MappedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.get_IsNullable
bool System::Xml::Serialization::XmlTypeMapElementInfo::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::get_IsNullable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.set_IsNullable
void System::Xml::Serialization::XmlTypeMapElementInfo::set_IsNullable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::set_IsNullable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.get_Member
::System::Xml::Serialization::XmlTypeMapMember* System::Xml::Serialization::XmlTypeMapElementInfo::get_Member() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::get_Member");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Member", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapMember*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.set_NestingLevel
void System::Xml::Serialization::XmlTypeMapElementInfo::set_NestingLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::set_NestingLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NestingLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.get_MultiReferenceType
bool System::Xml::Serialization::XmlTypeMapElementInfo::get_MultiReferenceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::get_MultiReferenceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MultiReferenceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.get_WrappedElement
bool System::Xml::Serialization::XmlTypeMapElementInfo::get_WrappedElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::get_WrappedElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WrappedElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.set_WrappedElement
void System::Xml::Serialization::XmlTypeMapElementInfo::set_WrappedElement(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::set_WrappedElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WrappedElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.get_IsTextElement
bool System::Xml::Serialization::XmlTypeMapElementInfo::get_IsTextElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::get_IsTextElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsTextElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.set_IsTextElement
void System::Xml::Serialization::XmlTypeMapElementInfo::set_IsTextElement(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::set_IsTextElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsTextElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.get_IsUnnamedAnyElement
bool System::Xml::Serialization::XmlTypeMapElementInfo::get_IsUnnamedAnyElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::get_IsUnnamedAnyElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUnnamedAnyElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.set_IsUnnamedAnyElement
void System::Xml::Serialization::XmlTypeMapElementInfo::set_IsUnnamedAnyElement(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::set_IsUnnamedAnyElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsUnnamedAnyElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.get_ExplicitOrder
int System::Xml::Serialization::XmlTypeMapElementInfo::get_ExplicitOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::get_ExplicitOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExplicitOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.set_ExplicitOrder
void System::Xml::Serialization::XmlTypeMapElementInfo::set_ExplicitOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::set_ExplicitOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExplicitOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.Equals
bool System::Xml::Serialization::XmlTypeMapElementInfo::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapElementInfo.GetHashCode
int System::Xml::Serialization::XmlTypeMapElementInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapElementInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlTypeMapElementInfoList
#include "System/Xml/Serialization/XmlTypeMapElementInfoList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlTypeMapMember
#include "System/Xml/Serialization/XmlTypeMapMember.hpp"
// Including type: System.Xml.Serialization.TypeData
#include "System/Xml/Serialization/TypeData.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlTypeMapMember::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlTypeMapMember::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _globalIndex
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlTypeMapMember::dyn__globalIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::dyn__globalIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_globalIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _specifiedGlobalIndex
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlTypeMapMember::dyn__specifiedGlobalIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::dyn__specifiedGlobalIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_specifiedGlobalIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.TypeData _typeData
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::TypeData*& System::Xml::Serialization::XmlTypeMapMember::dyn__typeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::dyn__typeData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeData"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::TypeData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MemberInfo _member
[[deprecated("Use field access instead!")]] ::System::Reflection::MemberInfo*& System::Xml::Serialization::XmlTypeMapMember::dyn__member() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::dyn__member");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_member"))->offset;
  return *reinterpret_cast<::System::Reflection::MemberInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MemberInfo _specifiedMember
[[deprecated("Use field access instead!")]] ::System::Reflection::MemberInfo*& System::Xml::Serialization::XmlTypeMapMember::dyn__specifiedMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::dyn__specifiedMember");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_specifiedMember"))->offset;
  return *reinterpret_cast<::System::Reflection::MemberInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MethodInfo _shouldSerialize
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& System::Xml::Serialization::XmlTypeMapMember::dyn__shouldSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::dyn__shouldSerialize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shouldSerialize"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _defaultValue
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Serialization::XmlTypeMapMember::dyn__defaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::dyn__defaultValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _flags
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlTypeMapMember::dyn__flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::dyn__flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flags"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.get_Name
::StringW System::Xml::Serialization::XmlTypeMapMember::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.set_Name
void System::Xml::Serialization::XmlTypeMapMember::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.get_DefaultValue
::Il2CppObject* System::Xml::Serialization::XmlTypeMapMember::get_DefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::get_DefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.set_DefaultValue
void System::Xml::Serialization::XmlTypeMapMember::set_DefaultValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::set_DefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.get_TypeData
::System::Xml::Serialization::TypeData* System::Xml::Serialization::XmlTypeMapMember::get_TypeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::get_TypeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::TypeData*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.set_TypeData
void System::Xml::Serialization::XmlTypeMapMember::set_TypeData(::System::Xml::Serialization::TypeData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::set_TypeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TypeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.get_Index
int System::Xml::Serialization::XmlTypeMapMember::get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::get_Index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.set_Index
void System::Xml::Serialization::XmlTypeMapMember::set_Index(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::set_Index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.get_GlobalIndex
int System::Xml::Serialization::XmlTypeMapMember::get_GlobalIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::get_GlobalIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlobalIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.set_GlobalIndex
void System::Xml::Serialization::XmlTypeMapMember::set_GlobalIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::set_GlobalIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GlobalIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.get_IsOptionalValueType
bool System::Xml::Serialization::XmlTypeMapMember::get_IsOptionalValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::get_IsOptionalValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOptionalValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.set_IsOptionalValueType
void System::Xml::Serialization::XmlTypeMapMember::set_IsOptionalValueType(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::set_IsOptionalValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsOptionalValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.get_IsReturnValue
bool System::Xml::Serialization::XmlTypeMapMember::get_IsReturnValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::get_IsReturnValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReturnValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.set_IsReturnValue
void System::Xml::Serialization::XmlTypeMapMember::set_IsReturnValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::set_IsReturnValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsReturnValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.IsReadOnly
bool System::Xml::Serialization::XmlTypeMapMember::IsReadOnly(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.GetValue
::Il2CppObject* System::Xml::Serialization::XmlTypeMapMember::GetValue(::Il2CppObject* ob, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "XmlTypeMapMember", "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ob, name);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.GetValue
::Il2CppObject* System::Xml::Serialization::XmlTypeMapMember::GetValue(::Il2CppObject* ob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, ob);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.SetValue
void System::Xml::Serialization::XmlTypeMapMember::SetValue(::Il2CppObject* ob, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ob, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.SetValue
void System::Xml::Serialization::XmlTypeMapMember::SetValue(::Il2CppObject* ob, ::StringW name, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Serialization", "XmlTypeMapMember", "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ob, name, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.InitMember
void System::Xml::Serialization::XmlTypeMapMember::InitMember(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::InitMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.CheckOptionalValueType
void System::Xml::Serialization::XmlTypeMapMember::CheckOptionalValueType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::CheckOptionalValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckOptionalValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.GetValueSpecified
bool System::Xml::Serialization::XmlTypeMapMember::GetValueSpecified(::Il2CppObject* ob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::GetValueSpecified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValueSpecified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ob);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMember.SetValueSpecified
void System::Xml::Serialization::XmlTypeMapMember::SetValueSpecified(::Il2CppObject* ob, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::SetValueSpecified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValueSpecified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ob, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlTypeMapMemberAttribute
#include "System/Xml/Serialization/XmlTypeMapMemberAttribute.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapping
#include "System/Xml/Serialization/XmlTypeMapping.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _attributeName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlTypeMapMemberAttribute::dyn__attributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberAttribute::dyn__attributeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _namespace
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlTypeMapMemberAttribute::dyn__namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberAttribute::dyn__namespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_namespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaForm _form
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaForm& System::Xml::Serialization::XmlTypeMapMemberAttribute::dyn__form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberAttribute::dyn__form");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_form"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaForm*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlTypeMapping _mappedType
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlTypeMapping*& System::Xml::Serialization::XmlTypeMapMemberAttribute::dyn__mappedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberAttribute::dyn__mappedType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mappedType"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlTypeMapping**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberAttribute.get_AttributeName
::StringW System::Xml::Serialization::XmlTypeMapMemberAttribute::get_AttributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberAttribute::get_AttributeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AttributeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberAttribute.set_AttributeName
void System::Xml::Serialization::XmlTypeMapMemberAttribute::set_AttributeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberAttribute::set_AttributeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AttributeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberAttribute.get_Namespace
::StringW System::Xml::Serialization::XmlTypeMapMemberAttribute::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberAttribute::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberAttribute.set_Namespace
void System::Xml::Serialization::XmlTypeMapMemberAttribute::set_Namespace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberAttribute::set_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberAttribute.set_Form
void System::Xml::Serialization::XmlTypeMapMemberAttribute::set_Form(::System::Xml::Schema::XmlSchemaForm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberAttribute::set_Form");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Form", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberAttribute.get_MappedType
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::XmlTypeMapMemberAttribute::get_MappedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberAttribute::get_MappedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MappedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberAttribute.set_MappedType
void System::Xml::Serialization::XmlTypeMapMemberAttribute::set_MappedType(::System::Xml::Serialization::XmlTypeMapping* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberAttribute::set_MappedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MappedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.XmlTypeMapMemberElement
#include "System/Xml/Serialization/XmlTypeMapMemberElement.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapElementInfoList
#include "System/Xml/Serialization/XmlTypeMapElementInfoList.hpp"
// Including type: System.Xml.Serialization.TypeData
#include "System/Xml/Serialization/TypeData.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapElementInfo
#include "System/Xml/Serialization/XmlTypeMapElementInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlTypeMapElementInfoList _elementInfo
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlTypeMapElementInfoList*& System::Xml::Serialization::XmlTypeMapMemberElement::dyn__elementInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberElement::dyn__elementInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementInfo"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlTypeMapElementInfoList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _choiceMember
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlTypeMapMemberElement::dyn__choiceMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberElement::dyn__choiceMember");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_choiceMember"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isTextCollector
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlTypeMapMemberElement::dyn__isTextCollector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberElement::dyn__isTextCollector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isTextCollector"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.TypeData _choiceTypeData
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::TypeData*& System::Xml::Serialization::XmlTypeMapMemberElement::dyn__choiceTypeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberElement::dyn__choiceTypeData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_choiceTypeData"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::TypeData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberElement.get_ElementInfo
::System::Xml::Serialization::XmlTypeMapElementInfoList* System::Xml::Serialization::XmlTypeMapMemberElement::get_ElementInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberElement::get_ElementInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapElementInfoList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberElement.set_ElementInfo
void System::Xml::Serialization::XmlTypeMapMemberElement::set_ElementInfo(::System::Xml::Serialization::XmlTypeMapElementInfoList* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberElement::set_ElementInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ElementInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberElement.get_ChoiceMember
::StringW System::Xml::Serialization::XmlTypeMapMemberElement::get_ChoiceMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberElement::get_ChoiceMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChoiceMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberElement.set_ChoiceMember
void System::Xml::Serialization::XmlTypeMapMemberElement::set_ChoiceMember(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberElement::set_ChoiceMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChoiceMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberElement.get_ChoiceTypeData
::System::Xml::Serialization::TypeData* System::Xml::Serialization::XmlTypeMapMemberElement::get_ChoiceTypeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberElement::get_ChoiceTypeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChoiceTypeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::TypeData*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberElement.set_ChoiceTypeData
void System::Xml::Serialization::XmlTypeMapMemberElement::set_ChoiceTypeData(::System::Xml::Serialization::TypeData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberElement::set_ChoiceTypeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChoiceTypeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberElement.get_IsXmlTextCollector
bool System::Xml::Serialization::XmlTypeMapMemberElement::get_IsXmlTextCollector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberElement::get_IsXmlTextCollector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsXmlTextCollector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberElement.set_IsXmlTextCollector
void System::Xml::Serialization::XmlTypeMapMemberElement::set_IsXmlTextCollector(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberElement::set_IsXmlTextCollector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsXmlTextCollector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberElement.FindElement
::System::Xml::Serialization::XmlTypeMapElementInfo* System::Xml::Serialization::XmlTypeMapMemberElement::FindElement(::Il2CppObject* ob, ::Il2CppObject* memberValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberElement::FindElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(memberValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapElementInfo*, false>(this, ___internal__method, ob, memberValue);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberElement.SetChoice
void System::Xml::Serialization::XmlTypeMapMemberElement::SetChoice(::Il2CppObject* ob, ::Il2CppObject* choice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberElement::SetChoice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChoice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(choice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ob, choice);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlTypeMapMemberList
#include "System/Xml/Serialization/XmlTypeMapMemberList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlTypeMapMemberExpandable
#include "System/Xml/Serialization/XmlTypeMapMemberExpandable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _flatArrayIndex
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlTypeMapMemberExpandable::dyn__flatArrayIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberExpandable::dyn__flatArrayIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flatArrayIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberExpandable.get_FlatArrayIndex
int System::Xml::Serialization::XmlTypeMapMemberExpandable::get_FlatArrayIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberExpandable::get_FlatArrayIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FlatArrayIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberExpandable.set_FlatArrayIndex
void System::Xml::Serialization::XmlTypeMapMemberExpandable::set_FlatArrayIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberExpandable::set_FlatArrayIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FlatArrayIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlTypeMapMemberFlatList
#include "System/Xml/Serialization/XmlTypeMapMemberFlatList.hpp"
// Including type: System.Xml.Serialization.ListMap
#include "System/Xml/Serialization/ListMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.ListMap _listMap
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::ListMap*& System::Xml::Serialization::XmlTypeMapMemberFlatList::dyn__listMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberFlatList::dyn__listMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_listMap"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::ListMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberFlatList.get_ListMap
::System::Xml::Serialization::ListMap* System::Xml::Serialization::XmlTypeMapMemberFlatList::get_ListMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberFlatList::get_ListMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::ListMap*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberFlatList.set_ListMap
void System::Xml::Serialization::XmlTypeMapMemberFlatList::set_ListMap(::System::Xml::Serialization::ListMap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberFlatList::set_ListMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ListMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlTypeMapMemberAnyElement
#include "System/Xml/Serialization/XmlTypeMapMemberAnyElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberAnyElement.get_IsDefaultAny
bool System::Xml::Serialization::XmlTypeMapMemberAnyElement::get_IsDefaultAny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberAnyElement::get_IsDefaultAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDefaultAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapMemberAnyElement.IsElementDefined
bool System::Xml::Serialization::XmlTypeMapMemberAnyElement::IsElementDefined(::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberAnyElement::IsElementDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsElementDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, ns);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlTypeMapMemberAnyAttribute
#include "System/Xml/Serialization/XmlTypeMapMemberAnyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlTypeMapMemberNamespaces
#include "System/Xml/Serialization/XmlTypeMapMemberNamespaces.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlTypeMapping
#include "System/Xml/Serialization/XmlTypeMapping.hpp"
// Including type: System.Xml.Serialization.TypeData
#include "System/Xml/Serialization/TypeData.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String xmlType
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlTypeMapping::dyn_xmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::dyn_xmlType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String xmlTypeNamespace
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlTypeMapping::dyn_xmlTypeNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::dyn_xmlTypeNamespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlTypeNamespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.TypeData type
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::TypeData*& System::Xml::Serialization::XmlTypeMapping::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::TypeData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlTypeMapping baseMap
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlTypeMapping*& System::Xml::Serialization::XmlTypeMapping::dyn_baseMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::dyn_baseMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseMap"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlTypeMapping**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean multiReferenceType
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlTypeMapping::dyn_multiReferenceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::dyn_multiReferenceType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "multiReferenceType"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean includeInSchema
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlTypeMapping::dyn_includeInSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::dyn_includeInSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeInSchema"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isNullable
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlTypeMapping::dyn_isNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::dyn_isNullable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isNullable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isAny
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlTypeMapping::dyn_isAny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::dyn_isAny");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isAny"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _derivedTypes
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Serialization::XmlTypeMapping::dyn__derivedTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::dyn__derivedTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_derivedTypes"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapping.get_TypeFullName
::StringW System::Xml::Serialization::XmlTypeMapping::get_TypeFullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::get_TypeFullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeFullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapping.get_TypeData
::System::Xml::Serialization::TypeData* System::Xml::Serialization::XmlTypeMapping::get_TypeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::get_TypeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::TypeData*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapping.get_XmlType
::StringW System::Xml::Serialization::XmlTypeMapping::get_XmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::get_XmlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapping.set_XmlType
void System::Xml::Serialization::XmlTypeMapping::set_XmlType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::set_XmlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XmlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapping.get_XmlTypeNamespace
::StringW System::Xml::Serialization::XmlTypeMapping::get_XmlTypeNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::get_XmlTypeNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlTypeNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapping.set_XmlTypeNamespace
void System::Xml::Serialization::XmlTypeMapping::set_XmlTypeNamespace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::set_XmlTypeNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XmlTypeNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapping.get_HasXmlTypeNamespace
bool System::Xml::Serialization::XmlTypeMapping::get_HasXmlTypeNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::get_HasXmlTypeNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasXmlTypeNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapping.get_DerivedTypes
::System::Collections::ArrayList* System::Xml::Serialization::XmlTypeMapping::get_DerivedTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::get_DerivedTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DerivedTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapping.get_MultiReferenceType
bool System::Xml::Serialization::XmlTypeMapping::get_MultiReferenceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::get_MultiReferenceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MultiReferenceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapping.get_BaseMap
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::XmlTypeMapping::get_BaseMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::get_BaseMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapping.set_BaseMap
void System::Xml::Serialization::XmlTypeMapping::set_BaseMap(::System::Xml::Serialization::XmlTypeMapping* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::set_BaseMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BaseMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapping.set_IncludeInSchema
void System::Xml::Serialization::XmlTypeMapping::set_IncludeInSchema(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::set_IncludeInSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IncludeInSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapping.get_IsNullable
bool System::Xml::Serialization::XmlTypeMapping::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::get_IsNullable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapping.set_IsNullable
void System::Xml::Serialization::XmlTypeMapping::set_IsNullable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::set_IsNullable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapping.get_IsAny
bool System::Xml::Serialization::XmlTypeMapping::get_IsAny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::get_IsAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapping.set_IsAny
void System::Xml::Serialization::XmlTypeMapping::set_IsAny(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::set_IsAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapping.GetRealTypeMap
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::XmlTypeMapping::GetRealTypeMap(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::GetRealTypeMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRealTypeMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapping.GetRealElementMap
::System::Xml::Serialization::XmlTypeMapping* System::Xml::Serialization::XmlTypeMapping::GetRealElementMap(::StringW name, ::StringW ens) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::GetRealElementMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRealElementMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ens)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapping*, false>(this, ___internal__method, name, ens);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeMapping.UpdateRoot
void System::Xml::Serialization::XmlTypeMapping::UpdateRoot(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapping::UpdateRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, qname);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlSerializableMapping
#include "System/Xml/Serialization/XmlSerializableMapping.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexType
#include "System/Xml/Schema/XmlSchemaComplexType.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Serialization.XmlRootAttribute
#include "System/Xml/Serialization/XmlRootAttribute.hpp"
// Including type: System.Xml.Serialization.TypeData
#include "System/Xml/Serialization/TypeData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchema _schema
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchema*& System::Xml::Serialization::XmlSerializableMapping::dyn__schema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializableMapping::dyn__schema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_schema"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchema**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaComplexType _schemaType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaComplexType*& System::Xml::Serialization::XmlSerializableMapping::dyn__schemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializableMapping::dyn__schemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_schemaType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaComplexType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName _schemaTypeName
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Serialization::XmlSerializableMapping::dyn__schemaTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializableMapping::dyn__schemaTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_schemaTypeName"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.ClassMap
#include "System/Xml/Serialization/ClassMap.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapMemberAttribute
#include "System/Xml/Serialization/XmlTypeMapMemberAttribute.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapMemberAnyElement
#include "System/Xml/Serialization/XmlTypeMapMemberAnyElement.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapMemberAnyAttribute
#include "System/Xml/Serialization/XmlTypeMapMemberAnyAttribute.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapMemberNamespaces
#include "System/Xml/Serialization/XmlTypeMapMemberNamespaces.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapMember
#include "System/Xml/Serialization/XmlTypeMapMember.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapMemberExpandable
#include "System/Xml/Serialization/XmlTypeMapMemberExpandable.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapElementInfo
#include "System/Xml/Serialization/XmlTypeMapElementInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _elements
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Serialization::ClassMap::dyn__elements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::dyn__elements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elements"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _elementMembers
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Serialization::ClassMap::dyn__elementMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::dyn__elementMembers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementMembers"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _attributeMembers
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Serialization::ClassMap::dyn__attributeMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::dyn__attributeMembers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributeMembers"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlTypeMapMemberAttribute[] _attributeMembersArray
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Serialization::XmlTypeMapMemberAttribute*>& System::Xml::Serialization::ClassMap::dyn__attributeMembersArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::dyn__attributeMembersArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributeMembersArray"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Serialization::XmlTypeMapMemberAttribute*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _flatLists
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Serialization::ClassMap::dyn__flatLists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::dyn__flatLists");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flatLists"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _allMembers
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Serialization::ClassMap::dyn__allMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::dyn__allMembers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allMembers"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _membersWithDefault
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Serialization::ClassMap::dyn__membersWithDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::dyn__membersWithDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_membersWithDefault"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _listMembers
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Serialization::ClassMap::dyn__listMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::dyn__listMembers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_listMembers"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlTypeMapMemberAnyElement _defaultAnyElement
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlTypeMapMemberAnyElement*& System::Xml::Serialization::ClassMap::dyn__defaultAnyElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::dyn__defaultAnyElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultAnyElement"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlTypeMapMemberAnyElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlTypeMapMemberAnyAttribute _defaultAnyAttribute
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlTypeMapMemberAnyAttribute*& System::Xml::Serialization::ClassMap::dyn__defaultAnyAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::dyn__defaultAnyAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultAnyAttribute"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlTypeMapMemberAnyAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlTypeMapMemberNamespaces _namespaceDeclarations
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlTypeMapMemberNamespaces*& System::Xml::Serialization::ClassMap::dyn__namespaceDeclarations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::dyn__namespaceDeclarations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_namespaceDeclarations"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlTypeMapMemberNamespaces**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlTypeMapMember _xmlTextCollector
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlTypeMapMember*& System::Xml::Serialization::ClassMap::dyn__xmlTextCollector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::dyn__xmlTextCollector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xmlTextCollector"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlTypeMapMember**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlTypeMapMember _returnMember
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlTypeMapMember*& System::Xml::Serialization::ClassMap::dyn__returnMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::dyn__returnMember");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_returnMember"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlTypeMapMember**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _ignoreMemberNamespace
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::ClassMap::dyn__ignoreMemberNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::dyn__ignoreMemberNamespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoreMemberNamespace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canBeSimpleType
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::ClassMap::dyn__canBeSimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::dyn__canBeSimpleType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canBeSimpleType"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> _isOrderDependentMap
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& System::Xml::Serialization::ClassMap::dyn__isOrderDependentMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::dyn__isOrderDependentMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isOrderDependentMap"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.get_IsOrderDependentMap
bool System::Xml::Serialization::ClassMap::get_IsOrderDependentMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::get_IsOrderDependentMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOrderDependentMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.get_DefaultAnyElementMember
::System::Xml::Serialization::XmlTypeMapMemberAnyElement* System::Xml::Serialization::ClassMap::get_DefaultAnyElementMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::get_DefaultAnyElementMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultAnyElementMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapMemberAnyElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.get_DefaultAnyAttributeMember
::System::Xml::Serialization::XmlTypeMapMemberAnyAttribute* System::Xml::Serialization::ClassMap::get_DefaultAnyAttributeMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::get_DefaultAnyAttributeMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultAnyAttributeMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapMemberAnyAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.get_NamespaceDeclarations
::System::Xml::Serialization::XmlTypeMapMemberNamespaces* System::Xml::Serialization::ClassMap::get_NamespaceDeclarations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::get_NamespaceDeclarations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceDeclarations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapMemberNamespaces*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.get_AttributeMembers
::System::Collections::ICollection* System::Xml::Serialization::ClassMap::get_AttributeMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::get_AttributeMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AttributeMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.get_ElementMembers
::System::Collections::ICollection* System::Xml::Serialization::ClassMap::get_ElementMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::get_ElementMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.get_AllMembers
::System::Collections::ArrayList* System::Xml::Serialization::ClassMap::get_AllMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::get_AllMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.get_FlatLists
::System::Collections::ArrayList* System::Xml::Serialization::ClassMap::get_FlatLists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::get_FlatLists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FlatLists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.get_ListMembers
::System::Collections::ArrayList* System::Xml::Serialization::ClassMap::get_ListMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::get_ListMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.get_XmlTextCollector
::System::Xml::Serialization::XmlTypeMapMember* System::Xml::Serialization::ClassMap::get_XmlTextCollector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::get_XmlTextCollector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlTextCollector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapMember*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.get_ReturnMember
::System::Xml::Serialization::XmlTypeMapMember* System::Xml::Serialization::ClassMap::get_ReturnMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::get_ReturnMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapMember*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.get_SimpleContentBaseType
::System::Xml::XmlQualifiedName* System::Xml::Serialization::ClassMap::get_SimpleContentBaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::get_SimpleContentBaseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SimpleContentBaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.get_HasSimpleContent
bool System::Xml::Serialization::ClassMap::get_HasSimpleContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::get_HasSimpleContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasSimpleContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.AddMember
void System::Xml::Serialization::ClassMap::AddMember(::System::Xml::Serialization::XmlTypeMapMember* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::AddMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, member);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.RegisterFlatList
void System::Xml::Serialization::ClassMap::RegisterFlatList(::System::Xml::Serialization::XmlTypeMapMemberExpandable* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::RegisterFlatList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterFlatList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, member);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.GetAttribute
::System::Xml::Serialization::XmlTypeMapMemberAttribute* System::Xml::Serialization::ClassMap::GetAttribute(::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::GetAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapMemberAttribute*, false>(this, ___internal__method, name, ns);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.GetElement
::System::Xml::Serialization::XmlTypeMapElementInfo* System::Xml::Serialization::ClassMap::GetElement(::StringW name, ::StringW ns, int minimalOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(minimalOrder)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapElementInfo*, false>(this, ___internal__method, name, ns, minimalOrder);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.GetElement
::System::Xml::Serialization::XmlTypeMapElementInfo* System::Xml::Serialization::ClassMap::GetElement(::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapElementInfo*, false>(this, ___internal__method, name, ns);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.BuildKey
::StringW System::Xml::Serialization::ClassMap::BuildKey(::StringW name, ::StringW ns, int explicitOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::BuildKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(explicitOrder)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name, ns, explicitOrder);
}
// Autogenerated method: System.Xml.Serialization.ClassMap.SetCanBeSimpleType
void System::Xml::Serialization::ClassMap::SetCanBeSimpleType(bool can) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ClassMap::SetCanBeSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCanBeSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(can)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, can);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.ListMap
#include "System/Xml/Serialization/ListMap.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapElementInfoList
#include "System/Xml/Serialization/XmlTypeMapElementInfoList.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapElementInfo
#include "System/Xml/Serialization/XmlTypeMapElementInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlTypeMapElementInfoList _itemInfo
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlTypeMapElementInfoList*& System::Xml::Serialization::ListMap::dyn__itemInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ListMap::dyn__itemInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemInfo"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlTypeMapElementInfoList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _choiceMember
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::ListMap::dyn__choiceMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ListMap::dyn__choiceMember");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_choiceMember"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.ListMap.set_ChoiceMember
void System::Xml::Serialization::ListMap::set_ChoiceMember(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ListMap::set_ChoiceMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChoiceMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.ListMap.get_ItemInfo
::System::Xml::Serialization::XmlTypeMapElementInfoList* System::Xml::Serialization::ListMap::get_ItemInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ListMap::get_ItemInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapElementInfoList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.ListMap.set_ItemInfo
void System::Xml::Serialization::ListMap::set_ItemInfo(::System::Xml::Serialization::XmlTypeMapElementInfoList* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ListMap::set_ItemInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Serialization.ListMap.FindElement
::System::Xml::Serialization::XmlTypeMapElementInfo* System::Xml::Serialization::ListMap::FindElement(::Il2CppObject* ob, int index, ::Il2CppObject* memberValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ListMap::FindElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(memberValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapElementInfo*, false>(this, ___internal__method, ob, index, memberValue);
}
// Autogenerated method: System.Xml.Serialization.ListMap.FindElement
::System::Xml::Serialization::XmlTypeMapElementInfo* System::Xml::Serialization::ListMap::FindElement(::StringW elementName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ListMap::FindElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementName), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapElementInfo*, false>(this, ___internal__method, elementName, ns);
}
// Autogenerated method: System.Xml.Serialization.ListMap.FindTextElement
::System::Xml::Serialization::XmlTypeMapElementInfo* System::Xml::Serialization::ListMap::FindTextElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ListMap::FindTextElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTextElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlTypeMapElementInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.ListMap.GetArrayType
void System::Xml::Serialization::ListMap::GetArrayType(int itemCount, ByRef<::StringW> localName, ByRef<::StringW> ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ListMap::GetArrayType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArrayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(itemCount), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, itemCount, byref(localName), byref(ns));
}
// Autogenerated method: System.Xml.Serialization.ListMap.Equals
bool System::Xml::Serialization::ListMap::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ListMap::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Serialization.ListMap.GetHashCode
int System::Xml::Serialization::ListMap::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::ListMap::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Serialization.EnumMap
#include "System/Xml/Serialization/EnumMap.hpp"
// Including type: System.Xml.Serialization.EnumMap/System.Xml.Serialization.EnumMapMember
#include "System/Xml/Serialization/EnumMap_EnumMapMember.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.Serialization.EnumMap/System.Xml.Serialization.EnumMapMember[] _members
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Serialization::EnumMap::EnumMapMember*>& System::Xml::Serialization::EnumMap::dyn__members() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::EnumMap::dyn__members");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_members"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Serialization::EnumMap::EnumMapMember*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isFlags
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::EnumMap::dyn__isFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::EnumMap::dyn__isFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isFlags"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String[] _enumNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Xml::Serialization::EnumMap::dyn__enumNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::EnumMap::dyn__enumNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enumNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String[] _xmlNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Xml::Serialization::EnumMap::dyn__xmlNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::EnumMap::dyn__xmlNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xmlNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<int64_t>& System::Xml::Serialization::EnumMap::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::EnumMap::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.EnumMap.get_IsFlags
bool System::Xml::Serialization::EnumMap::get_IsFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::EnumMap::get_IsFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.EnumMap.get_EnumNames
::ArrayW<::StringW> System::Xml::Serialization::EnumMap::get_EnumNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::EnumMap::get_EnumNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnumNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.EnumMap.get_XmlNames
::ArrayW<::StringW> System::Xml::Serialization::EnumMap::get_XmlNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::EnumMap::get_XmlNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.EnumMap.get_Values
::ArrayW<int64_t> System::Xml::Serialization::EnumMap::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::EnumMap::get_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.EnumMap.GetXmlName
::StringW System::Xml::Serialization::EnumMap::GetXmlName(::StringW typeName, ::Il2CppObject* enumValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::EnumMap::GetXmlName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetXmlName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName), ::il2cpp_utils::ExtractType(enumValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, typeName, enumValue);
}
// Autogenerated method: System.Xml.Serialization.EnumMap.GetEnumName
::StringW System::Xml::Serialization::EnumMap::GetEnumName(::StringW typeName, ::StringW xmlName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::EnumMap::GetEnumName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName), ::il2cpp_utils::ExtractType(xmlName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, typeName, xmlName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.EnumMap/System.Xml.Serialization.EnumMapMember
#include "System/Xml/Serialization/EnumMap_EnumMapMember.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String _xmlName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::EnumMap::EnumMapMember::dyn__xmlName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::EnumMap::EnumMapMember::dyn__xmlName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xmlName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _enumName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::EnumMap::EnumMapMember::dyn__enumName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::EnumMap::EnumMapMember::dyn__enumName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enumName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 _value
[[deprecated("Use field access instead!")]] int64_t& System::Xml::Serialization::EnumMap::EnumMapMember::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::EnumMap::EnumMapMember::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.EnumMap/System.Xml.Serialization.EnumMapMember.get_XmlName
::StringW System::Xml::Serialization::EnumMap::EnumMapMember::get_XmlName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::EnumMap::EnumMapMember::get_XmlName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.EnumMap/System.Xml.Serialization.EnumMapMember.get_EnumName
::StringW System::Xml::Serialization::EnumMap::EnumMapMember::get_EnumName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::EnumMap::EnumMapMember::get_EnumName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnumName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Serialization.EnumMap/System.Xml.Serialization.EnumMapMember.get_Value
int64_t System::Xml::Serialization::EnumMap::EnumMapMember::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::EnumMap::EnumMapMember::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.AxisElement
#include "System/Xml/Schema/AxisElement.hpp"
// Including type: System.Xml.Schema.DoubleLinkAxis
#include "System/Xml/Schema/DoubleLinkAxis.hpp"
// Including type: System.Xml.Schema.ForwardAxis
#include "System/Xml/Schema/ForwardAxis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.DoubleLinkAxis curNode
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::DoubleLinkAxis*& System::Xml::Schema::AxisElement::dyn_curNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AxisElement::dyn_curNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curNode"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::DoubleLinkAxis**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 rootDepth
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::AxisElement::dyn_rootDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AxisElement::dyn_rootDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 curDepth
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::AxisElement::dyn_curDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AxisElement::dyn_curDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean isMatch
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::AxisElement::dyn_isMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AxisElement::dyn_isMatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isMatch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.AxisElement.get_CurNode
::System::Xml::Schema::DoubleLinkAxis* System::Xml::Schema::AxisElement::get_CurNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AxisElement::get_CurNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::DoubleLinkAxis*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.AxisElement.SetDepth
void System::Xml::Schema::AxisElement::SetDepth(int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AxisElement::SetDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(depth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, depth);
}
// Autogenerated method: System.Xml.Schema.AxisElement.MoveToParent
void System::Xml::Schema::AxisElement::MoveToParent(int depth, ::System::Xml::Schema::ForwardAxis* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AxisElement::MoveToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(depth), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, depth, parent);
}
// Autogenerated method: System.Xml.Schema.AxisElement.MoveToChild
bool System::Xml::Schema::AxisElement::MoveToChild(::StringW name, ::StringW URN, int depth, ::System::Xml::Schema::ForwardAxis* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AxisElement::MoveToChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(URN), ::il2cpp_utils::ExtractType(depth), ::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, URN, depth, parent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.AxisStack
#include "System/Xml/Schema/AxisStack.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.ForwardAxis
#include "System/Xml/Schema/ForwardAxis.hpp"
// Including type: System.Xml.Schema.ActiveAxis
#include "System/Xml/Schema/ActiveAxis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList stack
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Schema::AxisStack::dyn_stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AxisStack::dyn_stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stack"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ForwardAxis subtree
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::ForwardAxis*& System::Xml::Schema::AxisStack::dyn_subtree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AxisStack::dyn_subtree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subtree"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::ForwardAxis**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ActiveAxis parent
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::ActiveAxis*& System::Xml::Schema::AxisStack::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AxisStack::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::ActiveAxis**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.AxisStack.get_Subtree
::System::Xml::Schema::ForwardAxis* System::Xml::Schema::AxisStack::get_Subtree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AxisStack::get_Subtree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Subtree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::ForwardAxis*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.AxisStack.get_Length
int System::Xml::Schema::AxisStack::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AxisStack::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.AxisStack.Push
void System::Xml::Schema::AxisStack::Push(int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AxisStack::Push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(depth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, depth);
}
// Autogenerated method: System.Xml.Schema.AxisStack.Pop
void System::Xml::Schema::AxisStack::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AxisStack::Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.AxisStack.Equal
bool System::Xml::Schema::AxisStack::Equal(::StringW thisname, ::StringW thisURN, ::StringW name, ::StringW URN) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AxisStack::Equal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "AxisStack", "Equal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisname), ::il2cpp_utils::ExtractType(thisURN), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(URN)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisname, thisURN, name, URN);
}
// Autogenerated method: System.Xml.Schema.AxisStack.MoveToParent
void System::Xml::Schema::AxisStack::MoveToParent(::StringW name, ::StringW URN, int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AxisStack::MoveToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(URN), ::il2cpp_utils::ExtractType(depth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, URN, depth);
}
// Autogenerated method: System.Xml.Schema.AxisStack.MoveToChild
bool System::Xml::Schema::AxisStack::MoveToChild(::StringW name, ::StringW URN, int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AxisStack::MoveToChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(URN), ::il2cpp_utils::ExtractType(depth)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, URN, depth);
}
// Autogenerated method: System.Xml.Schema.AxisStack.MoveToAttribute
bool System::Xml::Schema::AxisStack::MoveToAttribute(::StringW name, ::StringW URN, int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AxisStack::MoveToAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(URN), ::il2cpp_utils::ExtractType(depth)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, URN, depth);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.ActiveAxis
#include "System/Xml/Schema/ActiveAxis.hpp"
// Including type: System.Xml.Schema.Asttree
#include "System/Xml/Schema/Asttree.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentDepth
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::ActiveAxis::dyn_currentDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ActiveAxis::dyn_currentDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isActive
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::ActiveAxis::dyn_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ActiveAxis::dyn_isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Asttree axisTree
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::Asttree*& System::Xml::Schema::ActiveAxis::dyn_axisTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ActiveAxis::dyn_axisTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axisTree"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::Asttree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList axisStack
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Schema::ActiveAxis::dyn_axisStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ActiveAxis::dyn_axisStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axisStack"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.ActiveAxis.get_CurrentDepth
int System::Xml::Schema::ActiveAxis::get_CurrentDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ActiveAxis::get_CurrentDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ActiveAxis.Reactivate
void System::Xml::Schema::ActiveAxis::Reactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ActiveAxis::Reactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ActiveAxis.MoveToStartElement
bool System::Xml::Schema::ActiveAxis::MoveToStartElement(::StringW localname, ::StringW URN) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ActiveAxis::MoveToStartElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localname), ::il2cpp_utils::ExtractType(URN)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, localname, URN);
}
// Autogenerated method: System.Xml.Schema.ActiveAxis.EndElement
bool System::Xml::Schema::ActiveAxis::EndElement(::StringW localname, ::StringW URN) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ActiveAxis::EndElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::ActiveAxis*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, localname, URN);
}
// Autogenerated method: System.Xml.Schema.ActiveAxis.MoveToAttribute
bool System::Xml::Schema::ActiveAxis::MoveToAttribute(::StringW localname, ::StringW URN) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ActiveAxis::MoveToAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localname), ::il2cpp_utils::ExtractType(URN)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, localname, URN);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.DoubleLinkAxis
#include "System/Xml/Schema/DoubleLinkAxis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: MS.Internal.Xml.XPath.Axis next
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::XPath::Axis*& System::Xml::Schema::DoubleLinkAxis::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DoubleLinkAxis::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::Axis**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.DoubleLinkAxis.get_Next
::MS::Internal::Xml::XPath::Axis* System::Xml::Schema::DoubleLinkAxis::get_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DoubleLinkAxis::get_Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::Axis*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DoubleLinkAxis.set_Next
void System::Xml::Schema::DoubleLinkAxis::set_Next(::MS::Internal::Xml::XPath::Axis* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DoubleLinkAxis::set_Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.DoubleLinkAxis.ConvertTree
::System::Xml::Schema::DoubleLinkAxis* System::Xml::Schema::DoubleLinkAxis::ConvertTree(::MS::Internal::Xml::XPath::Axis* axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DoubleLinkAxis::ConvertTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DoubleLinkAxis", "ConvertTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::DoubleLinkAxis*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, axis);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.ForwardAxis
#include "System/Xml/Schema/ForwardAxis.hpp"
// Including type: System.Xml.Schema.DoubleLinkAxis
#include "System/Xml/Schema/DoubleLinkAxis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.DoubleLinkAxis topNode
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::DoubleLinkAxis*& System::Xml::Schema::ForwardAxis::dyn_topNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ForwardAxis::dyn_topNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "topNode"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::DoubleLinkAxis**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.DoubleLinkAxis rootNode
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::DoubleLinkAxis*& System::Xml::Schema::ForwardAxis::dyn_rootNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ForwardAxis::dyn_rootNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootNode"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::DoubleLinkAxis**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isAttribute
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::ForwardAxis::dyn_isAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ForwardAxis::dyn_isAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isAttribute"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isDss
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::ForwardAxis::dyn_isDss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ForwardAxis::dyn_isDss");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDss"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isSelfAxis
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::ForwardAxis::dyn_isSelfAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ForwardAxis::dyn_isSelfAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isSelfAxis"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.ForwardAxis.get_RootNode
::System::Xml::Schema::DoubleLinkAxis* System::Xml::Schema::ForwardAxis::get_RootNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ForwardAxis::get_RootNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RootNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::DoubleLinkAxis*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ForwardAxis.get_TopNode
::System::Xml::Schema::DoubleLinkAxis* System::Xml::Schema::ForwardAxis::get_TopNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ForwardAxis::get_TopNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TopNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::DoubleLinkAxis*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ForwardAxis.get_IsAttribute
bool System::Xml::Schema::ForwardAxis::get_IsAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ForwardAxis::get_IsAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ForwardAxis.get_IsDss
bool System::Xml::Schema::ForwardAxis::get_IsDss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ForwardAxis::get_IsDss");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDss", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ForwardAxis.get_IsSelfAxis
bool System::Xml::Schema::ForwardAxis::get_IsSelfAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ForwardAxis::get_IsSelfAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSelfAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Asttree
#include "System/Xml/Schema/Asttree.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
// Including type: MS.Internal.Xml.XPath.Axis
#include "MS/Internal/Xml/XPath/Axis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList fAxisArray
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Schema::Asttree::dyn_fAxisArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Asttree::dyn_fAxisArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fAxisArray"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String xpathexpr
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::Asttree::dyn_xpathexpr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Asttree::dyn_xpathexpr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xpathexpr"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isField
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::Asttree::dyn_isField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Asttree::dyn_isField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNamespaceManager nsmgr
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNamespaceManager*& System::Xml::Schema::Asttree::dyn_nsmgr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Asttree::dyn_nsmgr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nsmgr"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNamespaceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Asttree.get_SubtreeArray
::System::Collections::ArrayList* System::Xml::Schema::Asttree::get_SubtreeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Asttree::get_SubtreeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SubtreeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Asttree.IsNameTest
bool System::Xml::Schema::Asttree::IsNameTest(::MS::Internal::Xml::XPath::Axis* ast) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Asttree::IsNameTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Asttree", "IsNameTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ast)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ast);
}
// Autogenerated method: System.Xml.Schema.Asttree.IsAttribute
bool System::Xml::Schema::Asttree::IsAttribute(::MS::Internal::Xml::XPath::Axis* ast) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Asttree::IsAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Asttree", "IsAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ast)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ast);
}
// Autogenerated method: System.Xml.Schema.Asttree.IsDescendantOrSelf
bool System::Xml::Schema::Asttree::IsDescendantOrSelf(::MS::Internal::Xml::XPath::Axis* ast) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Asttree::IsDescendantOrSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Asttree", "IsDescendantOrSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ast)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ast);
}
// Autogenerated method: System.Xml.Schema.Asttree.IsSelf
bool System::Xml::Schema::Asttree::IsSelf(::MS::Internal::Xml::XPath::Axis* ast) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Asttree::IsSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Asttree", "IsSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ast)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ast);
}
// Autogenerated method: System.Xml.Schema.Asttree.CompileXPath
void System::Xml::Schema::Asttree::CompileXPath(::StringW xPath, bool isField, ::System::Xml::XmlNamespaceManager* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Asttree::CompileXPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileXPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xPath), ::il2cpp_utils::ExtractType(isField), ::il2cpp_utils::ExtractType(nsmgr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xPath, isField, nsmgr);
}
// Autogenerated method: System.Xml.Schema.Asttree.SetURN
void System::Xml::Schema::Asttree::SetURN(::MS::Internal::Xml::XPath::Axis* axis, ::System::Xml::XmlNamespaceManager* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Asttree::SetURN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetURN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(nsmgr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis, nsmgr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.AutoValidator
#include "System/Xml/Schema/AutoValidator.hpp"
// Including type: System.Xml.ValidationType
#include "System/Xml/ValidationType.hpp"
// Including type: System.Xml.XmlValidatingReaderImpl
#include "System/Xml/XmlValidatingReaderImpl.hpp"
// Including type: System.Xml.Schema.XmlSchemaCollection
#include "System/Xml/Schema/XmlSchemaCollection.hpp"
// Including type: System.Xml.IValidationEventHandling
#include "System/Xml/IValidationEventHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.AutoValidator.DetectValidationType
::System::Xml::ValidationType System::Xml::Schema::AutoValidator::DetectValidationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AutoValidator::DetectValidationType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectValidationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::ValidationType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.AutoValidator.get_PreserveWhitespace
bool System::Xml::Schema::AutoValidator::get_PreserveWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AutoValidator::get_PreserveWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.AutoValidator.Validate
void System::Xml::Schema::AutoValidator::Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AutoValidator::Validate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.AutoValidator.CompleteValidation
void System::Xml::Schema::AutoValidator::CompleteValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AutoValidator::CompleteValidation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.AutoValidator.FindId
::Il2CppObject* System::Xml::Schema::AutoValidator::FindId(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AutoValidator::FindId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.BaseProcessor
#include "System/Xml/Schema/BaseProcessor.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.Schema.SchemaNames
#include "System/Xml/Schema/SchemaNames.hpp"
// Including type: System.Xml.Schema.ValidationEventHandler
#include "System/Xml/Schema/ValidationEventHandler.hpp"
// Including type: System.Xml.Schema.XmlSchemaCompilationSettings
#include "System/Xml/Schema/XmlSchemaCompilationSettings.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectTable
#include "System/Xml/Schema/XmlSchemaObjectTable.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSeverityType
#include "System/Xml/Schema/XmlSeverityType.hpp"
// Including type: System.Xml.Schema.XmlSchemaException
#include "System/Xml/Schema/XmlSchemaException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& System::Xml::Schema::BaseProcessor::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaNames schemaNames
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaNames*& System::Xml::Schema::BaseProcessor::dyn_schemaNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::dyn_schemaNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaNames"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaNames**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ValidationEventHandler eventHandler
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::ValidationEventHandler*& System::Xml::Schema::BaseProcessor::dyn_eventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::dyn_eventHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventHandler"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::ValidationEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaCompilationSettings compilationSettings
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaCompilationSettings*& System::Xml::Schema::BaseProcessor::dyn_compilationSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::dyn_compilationSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compilationSettings"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaCompilationSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 errorCount
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::BaseProcessor::dyn_errorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::dyn_errorCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "errorCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String NsXml
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::BaseProcessor::dyn_NsXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::dyn_NsXml");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NsXml"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.get_NameTable
::System::Xml::XmlNameTable* System::Xml::Schema::BaseProcessor::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::get_NameTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.get_SchemaNames
::System::Xml::Schema::SchemaNames* System::Xml::Schema::BaseProcessor::get_SchemaNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::get_SchemaNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaNames*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.get_EventHandler
::System::Xml::Schema::ValidationEventHandler* System::Xml::Schema::BaseProcessor::get_EventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::get_EventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::ValidationEventHandler*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.get_CompilationSettings
::System::Xml::Schema::XmlSchemaCompilationSettings* System::Xml::Schema::BaseProcessor::get_CompilationSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::get_CompilationSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompilationSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaCompilationSettings*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.get_HasErrors
bool System::Xml::Schema::BaseProcessor::get_HasErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::get_HasErrors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasErrors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.AddToTable
void System::Xml::Schema::BaseProcessor::AddToTable(::System::Xml::Schema::XmlSchemaObjectTable* table, ::System::Xml::XmlQualifiedName* qname, ::System::Xml::Schema::XmlSchemaObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::AddToTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(qname), ::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table, qname, item);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.IsValidAttributeGroupRedefine
bool System::Xml::Schema::BaseProcessor::IsValidAttributeGroupRedefine(::System::Xml::Schema::XmlSchemaObject* existingObject, ::System::Xml::Schema::XmlSchemaObject* item, ::System::Xml::Schema::XmlSchemaObjectTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::IsValidAttributeGroupRedefine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidAttributeGroupRedefine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(existingObject), ::il2cpp_utils::ExtractType(item), ::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, existingObject, item, table);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.IsValidGroupRedefine
bool System::Xml::Schema::BaseProcessor::IsValidGroupRedefine(::System::Xml::Schema::XmlSchemaObject* existingObject, ::System::Xml::Schema::XmlSchemaObject* item, ::System::Xml::Schema::XmlSchemaObjectTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::IsValidGroupRedefine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidGroupRedefine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(existingObject), ::il2cpp_utils::ExtractType(item), ::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, existingObject, item, table);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.IsValidTypeRedefine
bool System::Xml::Schema::BaseProcessor::IsValidTypeRedefine(::System::Xml::Schema::XmlSchemaObject* existingObject, ::System::Xml::Schema::XmlSchemaObject* item, ::System::Xml::Schema::XmlSchemaObjectTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::IsValidTypeRedefine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidTypeRedefine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(existingObject), ::il2cpp_utils::ExtractType(item), ::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, existingObject, item, table);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEvent
void System::Xml::Schema::BaseProcessor::SendValidationEvent(::StringW code, ::System::Xml::Schema::XmlSchemaObject* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, source);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEvent
void System::Xml::Schema::BaseProcessor::SendValidationEvent(::StringW code, ::StringW msg, ::System::Xml::Schema::XmlSchemaObject* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, msg, source);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEvent
void System::Xml::Schema::BaseProcessor::SendValidationEvent(::StringW code, ::StringW msg1, ::StringW msg2, ::System::Xml::Schema::XmlSchemaObject* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(msg1), ::il2cpp_utils::ExtractType(msg2), ::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, msg1, msg2, source);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEvent
void System::Xml::Schema::BaseProcessor::SendValidationEvent(::StringW code, ::ArrayW<::StringW> args, ::System::Exception* innerException, ::System::Xml::Schema::XmlSchemaObject* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(innerException), ::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, args, innerException, source);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEvent
void System::Xml::Schema::BaseProcessor::SendValidationEvent(::StringW code, ::StringW msg1, ::StringW msg2, ::StringW sourceUri, int lineNumber, int linePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(msg1), ::il2cpp_utils::ExtractType(msg2), ::il2cpp_utils::ExtractType(sourceUri), ::il2cpp_utils::ExtractType(lineNumber), ::il2cpp_utils::ExtractType(linePosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, msg1, msg2, sourceUri, lineNumber, linePosition);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEvent
void System::Xml::Schema::BaseProcessor::SendValidationEvent(::StringW code, ::System::Xml::Schema::XmlSchemaObject* source, ::System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, source, severity);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEvent
void System::Xml::Schema::BaseProcessor::SendValidationEvent(::System::Xml::Schema::XmlSchemaException* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEvent
void System::Xml::Schema::BaseProcessor::SendValidationEvent(::StringW code, ::StringW msg, ::System::Xml::Schema::XmlSchemaObject* source, ::System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, msg, source, severity);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEvent
void System::Xml::Schema::BaseProcessor::SendValidationEvent(::System::Xml::Schema::XmlSchemaException* e, ::System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, severity);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEventNoThrow
void System::Xml::Schema::BaseProcessor::SendValidationEventNoThrow(::System::Xml::Schema::XmlSchemaException* e, ::System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseProcessor::SendValidationEventNoThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEventNoThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, severity);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.BaseValidator
#include "System/Xml/Schema/BaseValidator.hpp"
// Including type: System.Xml.Schema.XmlSchemaCollection
#include "System/Xml/Schema/XmlSchemaCollection.hpp"
// Including type: System.Xml.IValidationEventHandling
#include "System/Xml/IValidationEventHandling.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.Schema.SchemaNames
#include "System/Xml/Schema/SchemaNames.hpp"
// Including type: System.Xml.PositionInfo
#include "System/Xml/PositionInfo.hpp"
// Including type: System.Xml.XmlResolver
#include "System/Xml/XmlResolver.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Xml.Schema.SchemaInfo
#include "System/Xml/Schema/SchemaInfo.hpp"
// Including type: System.Xml.XmlValidatingReaderImpl
#include "System/Xml/XmlValidatingReaderImpl.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.ValidationState
#include "System/Xml/Schema/ValidationState.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Xml.Schema.ValidationEventHandler
#include "System/Xml/Schema/ValidationEventHandler.hpp"
// Including type: System.Xml.IDtdInfo
#include "System/Xml/IDtdInfo.hpp"
// Including type: System.Xml.Schema.XmlSchemaException
#include "System/Xml/Schema/XmlSchemaException.hpp"
// Including type: System.Xml.Schema.XmlSeverityType
#include "System/Xml/Schema/XmlSeverityType.hpp"
// Including type: System.Xml.ValidationType
#include "System/Xml/ValidationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaCollection schemaCollection
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaCollection*& System::Xml::Schema::BaseValidator::dyn_schemaCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::dyn_schemaCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaCollection"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.IValidationEventHandling eventHandling
[[deprecated("Use field access instead!")]] ::System::Xml::IValidationEventHandling*& System::Xml::Schema::BaseValidator::dyn_eventHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::dyn_eventHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventHandling"))->offset;
  return *reinterpret_cast<::System::Xml::IValidationEventHandling**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& System::Xml::Schema::BaseValidator::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaNames schemaNames
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaNames*& System::Xml::Schema::BaseValidator::dyn_schemaNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::dyn_schemaNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaNames"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaNames**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.PositionInfo positionInfo
[[deprecated("Use field access instead!")]] ::System::Xml::PositionInfo*& System::Xml::Schema::BaseValidator::dyn_positionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::dyn_positionInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionInfo"))->offset;
  return *reinterpret_cast<::System::Xml::PositionInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlResolver xmlResolver
[[deprecated("Use field access instead!")]] ::System::Xml::XmlResolver*& System::Xml::Schema::BaseValidator::dyn_xmlResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::dyn_xmlResolver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlResolver"))->offset;
  return *reinterpret_cast<::System::Xml::XmlResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri baseUri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Xml::Schema::BaseValidator::dyn_baseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::dyn_baseUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseUri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.Schema.SchemaInfo schemaInfo
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaInfo*& System::Xml::Schema::BaseValidator::dyn_schemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::dyn_schemaInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaInfo"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.XmlValidatingReaderImpl reader
[[deprecated("Use field access instead!")]] ::System::Xml::XmlValidatingReaderImpl*& System::Xml::Schema::BaseValidator::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::Xml::XmlValidatingReaderImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.XmlQualifiedName elementName
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::BaseValidator::dyn_elementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::dyn_elementName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementName"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.Schema.ValidationState context
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::ValidationState*& System::Xml::Schema::BaseValidator::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::ValidationState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Text.StringBuilder textValue
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::Xml::Schema::BaseValidator::dyn_textValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::dyn_textValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textValue"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String textString
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::BaseValidator::dyn_textString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::dyn_textString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean hasSibling
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::BaseValidator::dyn_hasSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::dyn_hasSibling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasSibling"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean checkDatatype
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::BaseValidator::dyn_checkDatatype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::dyn_checkDatatype");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkDatatype"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_Reader
::System::Xml::XmlValidatingReaderImpl* System::Xml::Schema::BaseValidator::get_Reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::get_Reader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Reader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlValidatingReaderImpl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_SchemaCollection
::System::Xml::Schema::XmlSchemaCollection* System::Xml::Schema::BaseValidator::get_SchemaCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::get_SchemaCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_NameTable
::System::Xml::XmlNameTable* System::Xml::Schema::BaseValidator::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::get_NameTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_SchemaNames
::System::Xml::Schema::SchemaNames* System::Xml::Schema::BaseValidator::get_SchemaNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::get_SchemaNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaNames*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_PositionInfo
::System::Xml::PositionInfo* System::Xml::Schema::BaseValidator::get_PositionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::get_PositionInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PositionInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::PositionInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_XmlResolver
::System::Xml::XmlResolver* System::Xml::Schema::BaseValidator::get_XmlResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::get_XmlResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlResolver*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.set_XmlResolver
void System::Xml::Schema::BaseValidator::set_XmlResolver(::System::Xml::XmlResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::set_XmlResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XmlResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_BaseUri
::System::Uri* System::Xml::Schema::BaseValidator::get_BaseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::get_BaseUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.set_BaseUri
void System::Xml::Schema::BaseValidator::set_BaseUri(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::set_BaseUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BaseUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_EventHandler
::System::Xml::Schema::ValidationEventHandler* System::Xml::Schema::BaseValidator::get_EventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::get_EventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::ValidationEventHandler*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_SchemaInfo
::System::Xml::Schema::SchemaInfo* System::Xml::Schema::BaseValidator::get_SchemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::get_SchemaInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.set_DtdInfo
void System::Xml::Schema::BaseValidator::set_DtdInfo(::System::Xml::IDtdInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::set_DtdInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DtdInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_PreserveWhitespace
bool System::Xml::Schema::BaseValidator::get_PreserveWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::get_PreserveWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.Validate
void System::Xml::Schema::BaseValidator::Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::Validate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.CompleteValidation
void System::Xml::Schema::BaseValidator::CompleteValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::CompleteValidation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.FindId
::Il2CppObject* System::Xml::Schema::BaseValidator::FindId(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::FindId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.ValidateText
void System::Xml::Schema::BaseValidator::ValidateText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::ValidateText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.ValidateWhitespace
void System::Xml::Schema::BaseValidator::ValidateWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::ValidateWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.SaveTextValue
void System::Xml::Schema::BaseValidator::SaveTextValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::SaveTextValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveTextValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.SendValidationEvent
void System::Xml::Schema::BaseValidator::SendValidationEvent(::StringW code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.SendValidationEvent
void System::Xml::Schema::BaseValidator::SendValidationEvent(::StringW code, ::ArrayW<::StringW> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, args);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.SendValidationEvent
void System::Xml::Schema::BaseValidator::SendValidationEvent(::StringW code, ::StringW arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, arg);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.SendValidationEvent
void System::Xml::Schema::BaseValidator::SendValidationEvent(::System::Xml::Schema::XmlSchemaException* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.SendValidationEvent
void System::Xml::Schema::BaseValidator::SendValidationEvent(::StringW code, ::StringW msg, ::System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, msg, severity);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.SendValidationEvent
void System::Xml::Schema::BaseValidator::SendValidationEvent(::StringW code, ::ArrayW<::StringW> args, ::System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, args, severity);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.SendValidationEvent
void System::Xml::Schema::BaseValidator::SendValidationEvent(::System::Xml::Schema::XmlSchemaException* e, ::System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, severity);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.ProcessEntity
void System::Xml::Schema::BaseValidator::ProcessEntity(::System::Xml::Schema::SchemaInfo* sinfo, ::StringW name, ::Il2CppObject* sender, ::System::Xml::Schema::ValidationEventHandler* eventhandler, ::StringW baseUri, int lineNumber, int linePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::ProcessEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "BaseValidator", "ProcessEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sinfo), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(eventhandler), ::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(lineNumber), ::il2cpp_utils::ExtractType(linePosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sinfo, name, sender, eventhandler, baseUri, lineNumber, linePosition);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.ProcessEntity
void System::Xml::Schema::BaseValidator::ProcessEntity(::System::Xml::Schema::SchemaInfo* sinfo, ::StringW name, ::System::Xml::IValidationEventHandling* eventHandling, ::StringW baseUriStr, int lineNumber, int linePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::ProcessEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "BaseValidator", "ProcessEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sinfo), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(eventHandling), ::il2cpp_utils::ExtractType(baseUriStr), ::il2cpp_utils::ExtractType(lineNumber), ::il2cpp_utils::ExtractType(linePosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sinfo, name, eventHandling, baseUriStr, lineNumber, linePosition);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.CreateInstance
::System::Xml::Schema::BaseValidator* System::Xml::Schema::BaseValidator::CreateInstance(::System::Xml::ValidationType valType, ::System::Xml::XmlValidatingReaderImpl* reader, ::System::Xml::Schema::XmlSchemaCollection* schemaCollection, ::System::Xml::IValidationEventHandling* eventHandling, bool processIdentityConstraints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BaseValidator::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "BaseValidator", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valType), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(schemaCollection), ::il2cpp_utils::ExtractType(eventHandling), ::il2cpp_utils::ExtractType(processIdentityConstraints)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::BaseValidator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, valType, reader, schemaCollection, eventHandling, processIdentityConstraints);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::BitSet::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] bits
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Xml::Schema::BitSet::dyn_bits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::dyn_bits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bits"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.BitSet.get_Count
int System::Xml::Schema::BitSet::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BitSet.get_Item
bool System::Xml::Schema::BitSet::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.Schema.BitSet.get_IsEmpty
bool System::Xml::Schema::BitSet::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::get_IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BitSet.Clear
void System::Xml::Schema::BitSet::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BitSet.Set
void System::Xml::Schema::BitSet::Set(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.Schema.BitSet.Get
bool System::Xml::Schema::BitSet::Get(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.Schema.BitSet.NextSet
int System::Xml::Schema::BitSet::NextSet(int startFrom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::NextSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startFrom)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startFrom);
}
// Autogenerated method: System.Xml.Schema.BitSet.And
void System::Xml::Schema::BitSet::And(::System::Xml::Schema::BitSet* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::And");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "And", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Schema.BitSet.Or
void System::Xml::Schema::BitSet::Or(::System::Xml::Schema::BitSet* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Or");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Or", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Schema.BitSet.Clone
::System::Xml::Schema::BitSet* System::Xml::Schema::BitSet::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::BitSet*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BitSet.Intersects
bool System::Xml::Schema::BitSet::Intersects(::System::Xml::Schema::BitSet* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Intersects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Intersects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Schema.BitSet.Subscript
int System::Xml::Schema::BitSet::Subscript(int bitIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Subscript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Subscript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bitIndex);
}
// Autogenerated method: System.Xml.Schema.BitSet.EnsureLength
void System::Xml::Schema::BitSet::EnsureLength(int nRequiredLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::EnsureLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nRequiredLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nRequiredLength);
}
// Autogenerated method: System.Xml.Schema.BitSet.GetHashCode
int System::Xml::Schema::BitSet::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BitSet.Equals
bool System::Xml::Schema::BitSet::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.ChameleonKey
#include "System/Xml/Schema/ChameleonKey.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String targetNS
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::ChameleonKey::dyn_targetNS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ChameleonKey::dyn_targetNS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetNS"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Uri chameleonLocation
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Xml::Schema::ChameleonKey::dyn_chameleonLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ChameleonKey::dyn_chameleonLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chameleonLocation"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.XmlSchema originalSchema
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchema*& System::Xml::Schema::ChameleonKey::dyn_originalSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ChameleonKey::dyn_originalSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalSchema"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchema**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hashCode
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::ChameleonKey::dyn_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ChameleonKey::dyn_hashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.ChameleonKey.GetHashCode
int System::Xml::Schema::ChameleonKey::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ChameleonKey::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ChameleonKey.Equals
bool System::Xml::Schema::ChameleonKey::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ChameleonKey::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.CompiledIdentityConstraint
#include "System/Xml/Schema/CompiledIdentityConstraint.hpp"
// Including type: System.Xml.Schema.Asttree
#include "System/Xml/Schema/Asttree.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaIdentityConstraint
#include "System/Xml/Schema/XmlSchemaIdentityConstraint.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.CompiledIdentityConstraint Empty
::System::Xml::Schema::CompiledIdentityConstraint* System::Xml::Schema::CompiledIdentityConstraint::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::CompiledIdentityConstraint::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::CompiledIdentityConstraint*>("System.Xml.Schema", "CompiledIdentityConstraint", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.CompiledIdentityConstraint Empty
void System::Xml::Schema::CompiledIdentityConstraint::_set_Empty(::System::Xml::Schema::CompiledIdentityConstraint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::CompiledIdentityConstraint::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "CompiledIdentityConstraint", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlQualifiedName name
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::CompiledIdentityConstraint::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::CompiledIdentityConstraint::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.CompiledIdentityConstraint/System.Xml.Schema.ConstraintRole role
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole& System::Xml::Schema::CompiledIdentityConstraint::dyn_role() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::CompiledIdentityConstraint::dyn_role");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "role"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Asttree selector
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::Asttree*& System::Xml::Schema::CompiledIdentityConstraint::dyn_selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::CompiledIdentityConstraint::dyn_selector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selector"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::Asttree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Asttree[] fields
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Schema::Asttree*>& System::Xml::Schema::CompiledIdentityConstraint::dyn_fields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::CompiledIdentityConstraint::dyn_fields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fields"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::Asttree*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlQualifiedName refer
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::CompiledIdentityConstraint::dyn_refer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::CompiledIdentityConstraint::dyn_refer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "refer"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.CompiledIdentityConstraint.get_Role
::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole System::Xml::Schema::CompiledIdentityConstraint::get_Role() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::CompiledIdentityConstraint::get_Role");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Role", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.CompiledIdentityConstraint.get_Selector
::System::Xml::Schema::Asttree* System::Xml::Schema::CompiledIdentityConstraint::get_Selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::CompiledIdentityConstraint::get_Selector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Selector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::Asttree*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.CompiledIdentityConstraint.get_Fields
::ArrayW<::System::Xml::Schema::Asttree*> System::Xml::Schema::CompiledIdentityConstraint::get_Fields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::CompiledIdentityConstraint::get_Fields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Fields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Xml::Schema::Asttree*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.CompiledIdentityConstraint..cctor
void System::Xml::Schema::CompiledIdentityConstraint::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::CompiledIdentityConstraint::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "CompiledIdentityConstraint", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.CompiledIdentityConstraint/System.Xml.Schema.ConstraintRole
#include "System/Xml/Schema/CompiledIdentityConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.CompiledIdentityConstraint/System.Xml.Schema.ConstraintRole Unique
::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_get_Unique() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_get_Unique");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole>("System.Xml.Schema", "CompiledIdentityConstraint/ConstraintRole", "Unique"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.CompiledIdentityConstraint/System.Xml.Schema.ConstraintRole Unique
void System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_set_Unique(::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_set_Unique");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "CompiledIdentityConstraint/ConstraintRole", "Unique", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.CompiledIdentityConstraint/System.Xml.Schema.ConstraintRole Key
::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_get_Key");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole>("System.Xml.Schema", "CompiledIdentityConstraint/ConstraintRole", "Key"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.CompiledIdentityConstraint/System.Xml.Schema.ConstraintRole Key
void System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_set_Key(::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_set_Key");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "CompiledIdentityConstraint/ConstraintRole", "Key", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.CompiledIdentityConstraint/System.Xml.Schema.ConstraintRole Keyref
::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_get_Keyref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_get_Keyref");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole>("System.Xml.Schema", "CompiledIdentityConstraint/ConstraintRole", "Keyref"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.CompiledIdentityConstraint/System.Xml.Schema.ConstraintRole Keyref
void System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_set_Keyref(::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_set_Keyref");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "CompiledIdentityConstraint/ConstraintRole", "Keyref", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.ConstraintStruct
#include "System/Xml/Schema/ConstraintStruct.hpp"
// Including type: System.Xml.Schema.CompiledIdentityConstraint
#include "System/Xml/Schema/CompiledIdentityConstraint.hpp"
// Including type: System.Xml.Schema.SelectorActiveAxis
#include "System/Xml/Schema/SelectorActiveAxis.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.CompiledIdentityConstraint constraint
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::CompiledIdentityConstraint*& System::Xml::Schema::ConstraintStruct::dyn_constraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ConstraintStruct::dyn_constraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constraint"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::CompiledIdentityConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.SelectorActiveAxis axisSelector
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SelectorActiveAxis*& System::Xml::Schema::ConstraintStruct::dyn_axisSelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ConstraintStruct::dyn_axisSelector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axisSelector"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SelectorActiveAxis**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.ArrayList axisFields
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Schema::ConstraintStruct::dyn_axisFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ConstraintStruct::dyn_axisFields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axisFields"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable qualifiedTable
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::ConstraintStruct::dyn_qualifiedTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ConstraintStruct::dyn_qualifiedTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qualifiedTable"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable keyrefTable
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::ConstraintStruct::dyn_keyrefTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ConstraintStruct::dyn_keyrefTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyrefTable"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 tableDim
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::ConstraintStruct::dyn_tableDim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ConstraintStruct::dyn_tableDim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tableDim"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.ConstraintStruct.get_TableDim
int System::Xml::Schema::ConstraintStruct::get_TableDim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ConstraintStruct::get_TableDim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TableDim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.LocatedActiveAxis
#include "System/Xml/Schema/LocatedActiveAxis.hpp"
// Including type: System.Xml.Schema.KeySequence
#include "System/Xml/Schema/KeySequence.hpp"
// Including type: System.Xml.Schema.Asttree
#include "System/Xml/Schema/Asttree.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 column
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::LocatedActiveAxis::dyn_column() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LocatedActiveAxis::dyn_column");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "column"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean isMatched
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::LocatedActiveAxis::dyn_isMatched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LocatedActiveAxis::dyn_isMatched");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isMatched"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.KeySequence Ks
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::KeySequence*& System::Xml::Schema::LocatedActiveAxis::dyn_Ks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LocatedActiveAxis::dyn_Ks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ks"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::KeySequence**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.LocatedActiveAxis.get_Column
int System::Xml::Schema::LocatedActiveAxis::get_Column() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LocatedActiveAxis::get_Column");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Column", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LocatedActiveAxis.Reactivate
void System::Xml::Schema::LocatedActiveAxis::Reactivate(::System::Xml::Schema::KeySequence* ks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LocatedActiveAxis::Reactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ks);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SelectorActiveAxis
#include "System/Xml/Schema/SelectorActiveAxis.hpp"
// Including type: System.Xml.Schema.ConstraintStruct
#include "System/Xml/Schema/ConstraintStruct.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.Asttree
#include "System/Xml/Schema/Asttree.hpp"
// Including type: System.Xml.Schema.KeySequence
#include "System/Xml/Schema/KeySequence.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ConstraintStruct cs
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::ConstraintStruct*& System::Xml::Schema::SelectorActiveAxis::dyn_cs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SelectorActiveAxis::dyn_cs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cs"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::ConstraintStruct**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList KSs
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Schema::SelectorActiveAxis::dyn_KSs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SelectorActiveAxis::dyn_KSs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KSs"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 KSpointer
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::SelectorActiveAxis::dyn_KSpointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SelectorActiveAxis::dyn_KSpointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KSpointer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SelectorActiveAxis.get_lastDepth
int System::Xml::Schema::SelectorActiveAxis::get_lastDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SelectorActiveAxis::get_lastDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SelectorActiveAxis.PushKS
int System::Xml::Schema::SelectorActiveAxis::PushKS(int errline, int errcol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SelectorActiveAxis::PushKS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushKS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errline), ::il2cpp_utils::ExtractType(errcol)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, errline, errcol);
}
// Autogenerated method: System.Xml.Schema.SelectorActiveAxis.PopKS
::System::Xml::Schema::KeySequence* System::Xml::Schema::SelectorActiveAxis::PopKS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SelectorActiveAxis::PopKS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopKS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::KeySequence*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SelectorActiveAxis.EndElement
bool System::Xml::Schema::SelectorActiveAxis::EndElement(::StringW localname, ::StringW URN) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SelectorActiveAxis::EndElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::ActiveAxis*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, localname, URN);
}
