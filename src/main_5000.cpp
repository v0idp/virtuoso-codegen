// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ShowMirrorWindow
#include "OVR/OpenVR/IVRCompositor__ShowMirrorWindow.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ShowMirrorWindow.Invoke
void OVR::OpenVR::IVRCompositor::_ShowMirrorWindow::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ShowMirrorWindow::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ShowMirrorWindow*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ShowMirrorWindow.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_ShowMirrorWindow::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ShowMirrorWindow::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ShowMirrorWindow*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ShowMirrorWindow.EndInvoke
void OVR::OpenVR::IVRCompositor::_ShowMirrorWindow::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ShowMirrorWindow::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ShowMirrorWindow*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/OVR.OpenVR._HideMirrorWindow
#include "OVR/OpenVR/IVRCompositor__HideMirrorWindow.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._HideMirrorWindow.Invoke
void OVR::OpenVR::IVRCompositor::_HideMirrorWindow::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_HideMirrorWindow::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_HideMirrorWindow*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._HideMirrorWindow.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_HideMirrorWindow::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_HideMirrorWindow::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_HideMirrorWindow*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._HideMirrorWindow.EndInvoke
void OVR::OpenVR::IVRCompositor::_HideMirrorWindow::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_HideMirrorWindow::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_HideMirrorWindow*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/OVR.OpenVR._IsMirrorWindowVisible
#include "OVR/OpenVR/IVRCompositor__IsMirrorWindowVisible.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._IsMirrorWindowVisible.Invoke
bool OVR::OpenVR::IVRCompositor::_IsMirrorWindowVisible::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_IsMirrorWindowVisible::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_IsMirrorWindowVisible*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._IsMirrorWindowVisible.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_IsMirrorWindowVisible::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_IsMirrorWindowVisible::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_IsMirrorWindowVisible*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._IsMirrorWindowVisible.EndInvoke
bool OVR::OpenVR::IVRCompositor::_IsMirrorWindowVisible::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_IsMirrorWindowVisible::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_IsMirrorWindowVisible*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/OVR.OpenVR._CompositorDumpImages
#include "OVR/OpenVR/IVRCompositor__CompositorDumpImages.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._CompositorDumpImages.Invoke
void OVR::OpenVR::IVRCompositor::_CompositorDumpImages::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_CompositorDumpImages::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_CompositorDumpImages*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._CompositorDumpImages.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_CompositorDumpImages::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_CompositorDumpImages::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_CompositorDumpImages*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._CompositorDumpImages.EndInvoke
void OVR::OpenVR::IVRCompositor::_CompositorDumpImages::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_CompositorDumpImages::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_CompositorDumpImages*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ShouldAppRenderWithLowResources
#include "OVR/OpenVR/IVRCompositor__ShouldAppRenderWithLowResources.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ShouldAppRenderWithLowResources.Invoke
bool OVR::OpenVR::IVRCompositor::_ShouldAppRenderWithLowResources::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ShouldAppRenderWithLowResources::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ShouldAppRenderWithLowResources*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ShouldAppRenderWithLowResources.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_ShouldAppRenderWithLowResources::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ShouldAppRenderWithLowResources::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ShouldAppRenderWithLowResources*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ShouldAppRenderWithLowResources.EndInvoke
bool OVR::OpenVR::IVRCompositor::_ShouldAppRenderWithLowResources::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ShouldAppRenderWithLowResources::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ShouldAppRenderWithLowResources*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ForceInterleavedReprojectionOn
#include "OVR/OpenVR/IVRCompositor__ForceInterleavedReprojectionOn.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ForceInterleavedReprojectionOn.Invoke
void OVR::OpenVR::IVRCompositor::_ForceInterleavedReprojectionOn::Invoke(bool bOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ForceInterleavedReprojectionOn::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ForceInterleavedReprojectionOn*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bOverride);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ForceInterleavedReprojectionOn.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_ForceInterleavedReprojectionOn::BeginInvoke(bool bOverride, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ForceInterleavedReprojectionOn::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ForceInterleavedReprojectionOn*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, bOverride, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ForceInterleavedReprojectionOn.EndInvoke
void OVR::OpenVR::IVRCompositor::_ForceInterleavedReprojectionOn::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ForceInterleavedReprojectionOn::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ForceInterleavedReprojectionOn*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ForceReconnectProcess
#include "OVR/OpenVR/IVRCompositor__ForceReconnectProcess.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ForceReconnectProcess.Invoke
void OVR::OpenVR::IVRCompositor::_ForceReconnectProcess::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ForceReconnectProcess::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ForceReconnectProcess*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ForceReconnectProcess.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_ForceReconnectProcess::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ForceReconnectProcess::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ForceReconnectProcess*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ForceReconnectProcess.EndInvoke
void OVR::OpenVR::IVRCompositor::_ForceReconnectProcess::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ForceReconnectProcess::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ForceReconnectProcess*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/OVR.OpenVR._SuspendRendering
#include "OVR/OpenVR/IVRCompositor__SuspendRendering.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._SuspendRendering.Invoke
void OVR::OpenVR::IVRCompositor::_SuspendRendering::Invoke(bool bSuspend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SuspendRendering::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SuspendRendering*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bSuspend);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._SuspendRendering.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_SuspendRendering::BeginInvoke(bool bSuspend, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SuspendRendering::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SuspendRendering*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, bSuspend, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._SuspendRendering.EndInvoke
void OVR::OpenVR::IVRCompositor::_SuspendRendering::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SuspendRendering::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SuspendRendering*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/OVR.OpenVR._GetMirrorTextureD3D11
#include "OVR/OpenVR/IVRCompositor__GetMirrorTextureD3D11.hpp"
// Including type: OVR.OpenVR.EVRCompositorError
#include "OVR/OpenVR/EVRCompositorError.hpp"
// Including type: OVR.OpenVR.EVREye
#include "OVR/OpenVR/EVREye.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._GetMirrorTextureD3D11.Invoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_GetMirrorTextureD3D11::Invoke(::OVR::OpenVR::EVREye eEye, ::System::IntPtr pD3D11DeviceOrResource, ByRef<::System::IntPtr> ppD3D11ShaderResourceView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetMirrorTextureD3D11::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetMirrorTextureD3D11*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, eEye, pD3D11DeviceOrResource, byref(ppD3D11ShaderResourceView));
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._GetMirrorTextureD3D11.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_GetMirrorTextureD3D11::BeginInvoke(::OVR::OpenVR::EVREye eEye, ::System::IntPtr pD3D11DeviceOrResource, ByRef<::System::IntPtr> ppD3D11ShaderResourceView, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetMirrorTextureD3D11::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetMirrorTextureD3D11*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eEye, pD3D11DeviceOrResource, byref(ppD3D11ShaderResourceView), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._GetMirrorTextureD3D11.EndInvoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_GetMirrorTextureD3D11::EndInvoke(ByRef<::System::IntPtr> ppD3D11ShaderResourceView, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetMirrorTextureD3D11::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetMirrorTextureD3D11*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, byref(ppD3D11ShaderResourceView), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ReleaseMirrorTextureD3D11
#include "OVR/OpenVR/IVRCompositor__ReleaseMirrorTextureD3D11.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ReleaseMirrorTextureD3D11.Invoke
void OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11::Invoke(::System::IntPtr pD3D11ShaderResourceView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pD3D11ShaderResourceView);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ReleaseMirrorTextureD3D11.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11::BeginInvoke(::System::IntPtr pD3D11ShaderResourceView, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pD3D11ShaderResourceView, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ReleaseMirrorTextureD3D11.EndInvoke
void OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/OVR.OpenVR._GetMirrorTextureGL
#include "OVR/OpenVR/IVRCompositor__GetMirrorTextureGL.hpp"
// Including type: OVR.OpenVR.EVRCompositorError
#include "OVR/OpenVR/EVRCompositorError.hpp"
// Including type: OVR.OpenVR.EVREye
#include "OVR/OpenVR/EVREye.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._GetMirrorTextureGL.Invoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_GetMirrorTextureGL::Invoke(::OVR::OpenVR::EVREye eEye, ByRef<uint> pglTextureId, ::System::IntPtr pglSharedTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetMirrorTextureGL::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetMirrorTextureGL*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, eEye, byref(pglTextureId), pglSharedTextureHandle);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._GetMirrorTextureGL.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_GetMirrorTextureGL::BeginInvoke(::OVR::OpenVR::EVREye eEye, ByRef<uint> pglTextureId, ::System::IntPtr pglSharedTextureHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetMirrorTextureGL::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetMirrorTextureGL*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eEye, byref(pglTextureId), pglSharedTextureHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._GetMirrorTextureGL.EndInvoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_GetMirrorTextureGL::EndInvoke(ByRef<uint> pglTextureId, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetMirrorTextureGL::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetMirrorTextureGL*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, byref(pglTextureId), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ReleaseSharedGLTexture
#include "OVR/OpenVR/IVRCompositor__ReleaseSharedGLTexture.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ReleaseSharedGLTexture.Invoke
bool OVR::OpenVR::IVRCompositor::_ReleaseSharedGLTexture::Invoke(uint glTextureId, ::System::IntPtr glSharedTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ReleaseSharedGLTexture::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ReleaseSharedGLTexture*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, glTextureId, glSharedTextureHandle);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ReleaseSharedGLTexture.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_ReleaseSharedGLTexture::BeginInvoke(uint glTextureId, ::System::IntPtr glSharedTextureHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ReleaseSharedGLTexture::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ReleaseSharedGLTexture*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, glTextureId, glSharedTextureHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._ReleaseSharedGLTexture.EndInvoke
bool OVR::OpenVR::IVRCompositor::_ReleaseSharedGLTexture::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ReleaseSharedGLTexture::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ReleaseSharedGLTexture*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/OVR.OpenVR._LockGLSharedTextureForAccess
#include "OVR/OpenVR/IVRCompositor__LockGLSharedTextureForAccess.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._LockGLSharedTextureForAccess.Invoke
void OVR::OpenVR::IVRCompositor::_LockGLSharedTextureForAccess::Invoke(::System::IntPtr glSharedTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_LockGLSharedTextureForAccess::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_LockGLSharedTextureForAccess*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, glSharedTextureHandle);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._LockGLSharedTextureForAccess.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_LockGLSharedTextureForAccess::BeginInvoke(::System::IntPtr glSharedTextureHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_LockGLSharedTextureForAccess::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_LockGLSharedTextureForAccess*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, glSharedTextureHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._LockGLSharedTextureForAccess.EndInvoke
void OVR::OpenVR::IVRCompositor::_LockGLSharedTextureForAccess::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_LockGLSharedTextureForAccess::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_LockGLSharedTextureForAccess*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/OVR.OpenVR._UnlockGLSharedTextureForAccess
#include "OVR/OpenVR/IVRCompositor__UnlockGLSharedTextureForAccess.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._UnlockGLSharedTextureForAccess.Invoke
void OVR::OpenVR::IVRCompositor::_UnlockGLSharedTextureForAccess::Invoke(::System::IntPtr glSharedTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_UnlockGLSharedTextureForAccess::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_UnlockGLSharedTextureForAccess*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, glSharedTextureHandle);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._UnlockGLSharedTextureForAccess.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_UnlockGLSharedTextureForAccess::BeginInvoke(::System::IntPtr glSharedTextureHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_UnlockGLSharedTextureForAccess::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_UnlockGLSharedTextureForAccess*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, glSharedTextureHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._UnlockGLSharedTextureForAccess.EndInvoke
void OVR::OpenVR::IVRCompositor::_UnlockGLSharedTextureForAccess::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_UnlockGLSharedTextureForAccess::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_UnlockGLSharedTextureForAccess*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/OVR.OpenVR._GetVulkanInstanceExtensionsRequired
#include "OVR/OpenVR/IVRCompositor__GetVulkanInstanceExtensionsRequired.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._GetVulkanInstanceExtensionsRequired.Invoke
uint OVR::OpenVR::IVRCompositor::_GetVulkanInstanceExtensionsRequired::Invoke(::System::Text::StringBuilder* pchValue, uint unBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetVulkanInstanceExtensionsRequired::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetVulkanInstanceExtensionsRequired*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchValue, unBufferSize);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._GetVulkanInstanceExtensionsRequired.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_GetVulkanInstanceExtensionsRequired::BeginInvoke(::System::Text::StringBuilder* pchValue, uint unBufferSize, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetVulkanInstanceExtensionsRequired::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetVulkanInstanceExtensionsRequired*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchValue, unBufferSize, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._GetVulkanInstanceExtensionsRequired.EndInvoke
uint OVR::OpenVR::IVRCompositor::_GetVulkanInstanceExtensionsRequired::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetVulkanInstanceExtensionsRequired::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetVulkanInstanceExtensionsRequired*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/OVR.OpenVR._GetVulkanDeviceExtensionsRequired
#include "OVR/OpenVR/IVRCompositor__GetVulkanDeviceExtensionsRequired.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._GetVulkanDeviceExtensionsRequired.Invoke
uint OVR::OpenVR::IVRCompositor::_GetVulkanDeviceExtensionsRequired::Invoke(::System::IntPtr pPhysicalDevice, ::System::Text::StringBuilder* pchValue, uint unBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetVulkanDeviceExtensionsRequired::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetVulkanDeviceExtensionsRequired*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pPhysicalDevice, pchValue, unBufferSize);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._GetVulkanDeviceExtensionsRequired.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_GetVulkanDeviceExtensionsRequired::BeginInvoke(::System::IntPtr pPhysicalDevice, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetVulkanDeviceExtensionsRequired::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetVulkanDeviceExtensionsRequired*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pPhysicalDevice, pchValue, unBufferSize, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._GetVulkanDeviceExtensionsRequired.EndInvoke
uint OVR::OpenVR::IVRCompositor::_GetVulkanDeviceExtensionsRequired::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetVulkanDeviceExtensionsRequired::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetVulkanDeviceExtensionsRequired*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/OVR.OpenVR._SetExplicitTimingMode
#include "OVR/OpenVR/IVRCompositor__SetExplicitTimingMode.hpp"
// Including type: OVR.OpenVR.EVRCompositorTimingMode
#include "OVR/OpenVR/EVRCompositorTimingMode.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._SetExplicitTimingMode.Invoke
void OVR::OpenVR::IVRCompositor::_SetExplicitTimingMode::Invoke(::OVR::OpenVR::EVRCompositorTimingMode eTimingMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SetExplicitTimingMode::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SetExplicitTimingMode*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eTimingMode);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._SetExplicitTimingMode.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_SetExplicitTimingMode::BeginInvoke(::OVR::OpenVR::EVRCompositorTimingMode eTimingMode, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SetExplicitTimingMode::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SetExplicitTimingMode*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eTimingMode, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._SetExplicitTimingMode.EndInvoke
void OVR::OpenVR::IVRCompositor::_SetExplicitTimingMode::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SetExplicitTimingMode::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SetExplicitTimingMode*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/OVR.OpenVR._SubmitExplicitTimingData
#include "OVR/OpenVR/IVRCompositor__SubmitExplicitTimingData.hpp"
// Including type: OVR.OpenVR.EVRCompositorError
#include "OVR/OpenVR/EVRCompositorError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._SubmitExplicitTimingData.Invoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_SubmitExplicitTimingData::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SubmitExplicitTimingData::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SubmitExplicitTimingData*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._SubmitExplicitTimingData.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_SubmitExplicitTimingData::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SubmitExplicitTimingData::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SubmitExplicitTimingData*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/OVR.OpenVR._SubmitExplicitTimingData.EndInvoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_SubmitExplicitTimingData::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SubmitExplicitTimingData::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SubmitExplicitTimingData*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._FindOverlay
#include "OVR/OpenVR/IVROverlay__FindOverlay.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._FindOverlay.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_FindOverlay::Invoke(::StringW pchOverlayKey, ByRef<uint64_t> pOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_FindOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_FindOverlay*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, pchOverlayKey, byref(pOverlayHandle));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._FindOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_FindOverlay::BeginInvoke(::StringW pchOverlayKey, ByRef<uint64_t> pOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_FindOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_FindOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchOverlayKey, byref(pOverlayHandle), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._FindOverlay.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_FindOverlay::EndInvoke(ByRef<uint64_t> pOverlayHandle, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_FindOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_FindOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pOverlayHandle), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._CreateOverlay
#include "OVR/OpenVR/IVROverlay__CreateOverlay.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._CreateOverlay.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_CreateOverlay::Invoke(::StringW pchOverlayKey, ::StringW pchOverlayName, ByRef<uint64_t> pOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_CreateOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_CreateOverlay*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, pchOverlayKey, pchOverlayName, byref(pOverlayHandle));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._CreateOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_CreateOverlay::BeginInvoke(::StringW pchOverlayKey, ::StringW pchOverlayName, ByRef<uint64_t> pOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_CreateOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_CreateOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchOverlayKey, pchOverlayName, byref(pOverlayHandle), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._CreateOverlay.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_CreateOverlay::EndInvoke(ByRef<uint64_t> pOverlayHandle, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_CreateOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_CreateOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pOverlayHandle), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._DestroyOverlay
#include "OVR/OpenVR/IVROverlay__DestroyOverlay.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._DestroyOverlay.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_DestroyOverlay::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_DestroyOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_DestroyOverlay*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._DestroyOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_DestroyOverlay::BeginInvoke(uint64_t ulOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_DestroyOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_DestroyOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._DestroyOverlay.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_DestroyOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_DestroyOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_DestroyOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetHighQualityOverlay
#include "OVR/OpenVR/IVROverlay__SetHighQualityOverlay.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetHighQualityOverlay.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetHighQualityOverlay::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetHighQualityOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetHighQualityOverlay*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetHighQualityOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetHighQualityOverlay::BeginInvoke(uint64_t ulOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetHighQualityOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetHighQualityOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetHighQualityOverlay.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetHighQualityOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetHighQualityOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetHighQualityOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetHighQualityOverlay
#include "OVR/OpenVR/IVROverlay__GetHighQualityOverlay.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetHighQualityOverlay.Invoke
uint64_t OVR::OpenVR::IVROverlay::_GetHighQualityOverlay::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetHighQualityOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetHighQualityOverlay*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetHighQualityOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetHighQualityOverlay::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetHighQualityOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetHighQualityOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetHighQualityOverlay.EndInvoke
uint64_t OVR::OpenVR::IVROverlay::_GetHighQualityOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetHighQualityOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetHighQualityOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayKey
#include "OVR/OpenVR/IVROverlay__GetOverlayKey.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayKey.Invoke
uint OVR::OpenVR::IVROverlay::_GetOverlayKey::Invoke(uint64_t ulOverlayHandle, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<::OVR::OpenVR::EVROverlayError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayKey::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayKey*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, ulOverlayHandle, pchValue, unBufferSize, byref(pError));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayKey.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayKey::BeginInvoke(uint64_t ulOverlayHandle, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<::OVR::OpenVR::EVROverlayError> pError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayKey::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayKey*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pchValue, unBufferSize, byref(pError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayKey.EndInvoke
uint OVR::OpenVR::IVROverlay::_GetOverlayKey::EndInvoke(ByRef<::OVR::OpenVR::EVROverlayError> pError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayKey::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayKey*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(pError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayName
#include "OVR/OpenVR/IVROverlay__GetOverlayName.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayName.Invoke
uint OVR::OpenVR::IVROverlay::_GetOverlayName::Invoke(uint64_t ulOverlayHandle, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<::OVR::OpenVR::EVROverlayError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayName::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayName*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, ulOverlayHandle, pchValue, unBufferSize, byref(pError));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayName.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayName::BeginInvoke(uint64_t ulOverlayHandle, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<::OVR::OpenVR::EVROverlayError> pError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayName::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayName*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pchValue, unBufferSize, byref(pError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayName.EndInvoke
uint OVR::OpenVR::IVROverlay::_GetOverlayName::EndInvoke(ByRef<::OVR::OpenVR::EVROverlayError> pError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayName::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayName*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(pError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayName
#include "OVR/OpenVR/IVROverlay__SetOverlayName.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayName.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayName::Invoke(uint64_t ulOverlayHandle, ::StringW pchName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayName::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayName*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pchName);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayName.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayName::BeginInvoke(uint64_t ulOverlayHandle, ::StringW pchName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayName::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayName*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pchName, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayName.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayName::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayName::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayName*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayImageData
#include "OVR/OpenVR/IVROverlay__GetOverlayImageData.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayImageData.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayImageData::Invoke(uint64_t ulOverlayHandle, ::System::IntPtr pvBuffer, uint unBufferSize, ByRef<uint> punWidth, ByRef<uint> punHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayImageData::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayImageData*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pvBuffer, unBufferSize, byref(punWidth), byref(punHeight));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayImageData.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayImageData::BeginInvoke(uint64_t ulOverlayHandle, ::System::IntPtr pvBuffer, uint unBufferSize, ByRef<uint> punWidth, ByRef<uint> punHeight, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayImageData::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayImageData*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pvBuffer, unBufferSize, byref(punWidth), byref(punHeight), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayImageData.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayImageData::EndInvoke(ByRef<uint> punWidth, ByRef<uint> punHeight, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayImageData::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayImageData*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(punWidth), byref(punHeight), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayErrorNameFromEnum
#include "OVR/OpenVR/IVROverlay__GetOverlayErrorNameFromEnum.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayErrorNameFromEnum.Invoke
::System::IntPtr OVR::OpenVR::IVROverlay::_GetOverlayErrorNameFromEnum::Invoke(::OVR::OpenVR::EVROverlayError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayErrorNameFromEnum::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayErrorNameFromEnum*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, error);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayErrorNameFromEnum.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayErrorNameFromEnum::BeginInvoke(::OVR::OpenVR::EVROverlayError error, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayErrorNameFromEnum::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayErrorNameFromEnum*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, error, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayErrorNameFromEnum.EndInvoke
::System::IntPtr OVR::OpenVR::IVROverlay::_GetOverlayErrorNameFromEnum::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayErrorNameFromEnum::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayErrorNameFromEnum*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayRenderingPid
#include "OVR/OpenVR/IVROverlay__SetOverlayRenderingPid.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayRenderingPid.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayRenderingPid::Invoke(uint64_t ulOverlayHandle, uint unPID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayRenderingPid::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayRenderingPid*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unPID);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayRenderingPid.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayRenderingPid::BeginInvoke(uint64_t ulOverlayHandle, uint unPID, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayRenderingPid::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayRenderingPid*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, unPID, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayRenderingPid.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayRenderingPid::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayRenderingPid::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayRenderingPid*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayRenderingPid
#include "OVR/OpenVR/IVROverlay__GetOverlayRenderingPid.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayRenderingPid.Invoke
uint OVR::OpenVR::IVROverlay::_GetOverlayRenderingPid::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayRenderingPid::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayRenderingPid*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayRenderingPid.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayRenderingPid::BeginInvoke(uint64_t ulOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayRenderingPid::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayRenderingPid*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayRenderingPid.EndInvoke
uint OVR::OpenVR::IVROverlay::_GetOverlayRenderingPid::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayRenderingPid::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayRenderingPid*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayFlag
#include "OVR/OpenVR/IVROverlay__SetOverlayFlag.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.VROverlayFlags
#include "OVR/OpenVR/VROverlayFlags.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayFlag.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayFlag::Invoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::VROverlayFlags eOverlayFlag, bool bEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayFlag::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayFlag*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eOverlayFlag, bEnabled);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayFlag.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayFlag::BeginInvoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::VROverlayFlags eOverlayFlag, bool bEnabled, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayFlag::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayFlag*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, eOverlayFlag, bEnabled, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayFlag.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayFlag::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayFlag::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayFlag*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayFlag
#include "OVR/OpenVR/IVROverlay__GetOverlayFlag.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.VROverlayFlags
#include "OVR/OpenVR/VROverlayFlags.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayFlag.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayFlag::Invoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::VROverlayFlags eOverlayFlag, ByRef<bool> pbEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayFlag::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayFlag*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eOverlayFlag, byref(pbEnabled));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayFlag.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayFlag::BeginInvoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::VROverlayFlags eOverlayFlag, ByRef<bool> pbEnabled, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayFlag::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayFlag*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, eOverlayFlag, byref(pbEnabled), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayFlag.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayFlag::EndInvoke(ByRef<bool> pbEnabled, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayFlag::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayFlag*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pbEnabled), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayColor
#include "OVR/OpenVR/IVROverlay__SetOverlayColor.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayColor.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayColor::Invoke(uint64_t ulOverlayHandle, float fRed, float fGreen, float fBlue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayColor::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayColor*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fRed, fGreen, fBlue);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayColor.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayColor::BeginInvoke(uint64_t ulOverlayHandle, float fRed, float fGreen, float fBlue, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayColor::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayColor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, fRed, fGreen, fBlue, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayColor.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayColor::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayColor::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayColor*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayColor
#include "OVR/OpenVR/IVROverlay__GetOverlayColor.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayColor.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayColor::Invoke(uint64_t ulOverlayHandle, ByRef<float> pfRed, ByRef<float> pfGreen, ByRef<float> pfBlue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayColor::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayColor*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfRed), byref(pfGreen), byref(pfBlue));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayColor.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayColor::BeginInvoke(uint64_t ulOverlayHandle, ByRef<float> pfRed, ByRef<float> pfGreen, ByRef<float> pfBlue, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayColor::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayColor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pfRed), byref(pfGreen), byref(pfBlue), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayColor.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayColor::EndInvoke(ByRef<float> pfRed, ByRef<float> pfGreen, ByRef<float> pfBlue, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayColor::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayColor*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pfRed), byref(pfGreen), byref(pfBlue), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayAlpha
#include "OVR/OpenVR/IVROverlay__SetOverlayAlpha.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayAlpha.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayAlpha::Invoke(uint64_t ulOverlayHandle, float fAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayAlpha::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayAlpha*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fAlpha);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayAlpha.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayAlpha::BeginInvoke(uint64_t ulOverlayHandle, float fAlpha, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayAlpha::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayAlpha*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, fAlpha, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayAlpha.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayAlpha::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayAlpha::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayAlpha*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayAlpha
#include "OVR/OpenVR/IVROverlay__GetOverlayAlpha.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayAlpha.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayAlpha::Invoke(uint64_t ulOverlayHandle, ByRef<float> pfAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayAlpha::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayAlpha*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfAlpha));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayAlpha.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayAlpha::BeginInvoke(uint64_t ulOverlayHandle, ByRef<float> pfAlpha, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayAlpha::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayAlpha*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pfAlpha), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayAlpha.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayAlpha::EndInvoke(ByRef<float> pfAlpha, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayAlpha::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayAlpha*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pfAlpha), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTexelAspect
#include "OVR/OpenVR/IVROverlay__SetOverlayTexelAspect.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTexelAspect.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTexelAspect::Invoke(uint64_t ulOverlayHandle, float fTexelAspect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTexelAspect::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTexelAspect*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fTexelAspect);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTexelAspect.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayTexelAspect::BeginInvoke(uint64_t ulOverlayHandle, float fTexelAspect, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTexelAspect::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTexelAspect*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, fTexelAspect, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTexelAspect.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTexelAspect::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTexelAspect::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTexelAspect*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTexelAspect
#include "OVR/OpenVR/IVROverlay__GetOverlayTexelAspect.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTexelAspect.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTexelAspect::Invoke(uint64_t ulOverlayHandle, ByRef<float> pfTexelAspect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTexelAspect::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTexelAspect*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfTexelAspect));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTexelAspect.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTexelAspect::BeginInvoke(uint64_t ulOverlayHandle, ByRef<float> pfTexelAspect, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTexelAspect::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTexelAspect*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pfTexelAspect), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTexelAspect.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTexelAspect::EndInvoke(ByRef<float> pfTexelAspect, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTexelAspect::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTexelAspect*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pfTexelAspect), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlaySortOrder
#include "OVR/OpenVR/IVROverlay__SetOverlaySortOrder.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlaySortOrder.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlaySortOrder::Invoke(uint64_t ulOverlayHandle, uint unSortOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlaySortOrder::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlaySortOrder*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unSortOrder);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlaySortOrder.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlaySortOrder::BeginInvoke(uint64_t ulOverlayHandle, uint unSortOrder, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlaySortOrder::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlaySortOrder*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, unSortOrder, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlaySortOrder.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlaySortOrder::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlaySortOrder::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlaySortOrder*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlaySortOrder
#include "OVR/OpenVR/IVROverlay__GetOverlaySortOrder.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlaySortOrder.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlaySortOrder::Invoke(uint64_t ulOverlayHandle, ByRef<uint> punSortOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlaySortOrder::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlaySortOrder*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(punSortOrder));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlaySortOrder.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlaySortOrder::BeginInvoke(uint64_t ulOverlayHandle, ByRef<uint> punSortOrder, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlaySortOrder::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlaySortOrder*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(punSortOrder), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlaySortOrder.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlaySortOrder::EndInvoke(ByRef<uint> punSortOrder, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlaySortOrder::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlaySortOrder*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(punSortOrder), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayWidthInMeters
#include "OVR/OpenVR/IVROverlay__SetOverlayWidthInMeters.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayWidthInMeters.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayWidthInMeters::Invoke(uint64_t ulOverlayHandle, float fWidthInMeters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayWidthInMeters::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayWidthInMeters*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fWidthInMeters);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayWidthInMeters.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayWidthInMeters::BeginInvoke(uint64_t ulOverlayHandle, float fWidthInMeters, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayWidthInMeters::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayWidthInMeters*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, fWidthInMeters, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayWidthInMeters.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayWidthInMeters::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayWidthInMeters::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayWidthInMeters*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayWidthInMeters
#include "OVR/OpenVR/IVROverlay__GetOverlayWidthInMeters.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayWidthInMeters.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayWidthInMeters::Invoke(uint64_t ulOverlayHandle, ByRef<float> pfWidthInMeters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayWidthInMeters::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayWidthInMeters*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfWidthInMeters));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayWidthInMeters.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayWidthInMeters::BeginInvoke(uint64_t ulOverlayHandle, ByRef<float> pfWidthInMeters, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayWidthInMeters::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayWidthInMeters*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pfWidthInMeters), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayWidthInMeters.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayWidthInMeters::EndInvoke(ByRef<float> pfWidthInMeters, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayWidthInMeters::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayWidthInMeters*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pfWidthInMeters), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayAutoCurveDistanceRangeInMeters
#include "OVR/OpenVR/IVROverlay__SetOverlayAutoCurveDistanceRangeInMeters.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayAutoCurveDistanceRangeInMeters.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters::Invoke(uint64_t ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fMinDistanceInMeters, fMaxDistanceInMeters);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayAutoCurveDistanceRangeInMeters.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters::BeginInvoke(uint64_t ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, fMinDistanceInMeters, fMaxDistanceInMeters, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayAutoCurveDistanceRangeInMeters.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayAutoCurveDistanceRangeInMeters
#include "OVR/OpenVR/IVROverlay__GetOverlayAutoCurveDistanceRangeInMeters.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayAutoCurveDistanceRangeInMeters.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters::Invoke(uint64_t ulOverlayHandle, ByRef<float> pfMinDistanceInMeters, ByRef<float> pfMaxDistanceInMeters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfMinDistanceInMeters), byref(pfMaxDistanceInMeters));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayAutoCurveDistanceRangeInMeters.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters::BeginInvoke(uint64_t ulOverlayHandle, ByRef<float> pfMinDistanceInMeters, ByRef<float> pfMaxDistanceInMeters, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pfMinDistanceInMeters), byref(pfMaxDistanceInMeters), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayAutoCurveDistanceRangeInMeters.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters::EndInvoke(ByRef<float> pfMinDistanceInMeters, ByRef<float> pfMaxDistanceInMeters, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pfMinDistanceInMeters), byref(pfMaxDistanceInMeters), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTextureColorSpace
#include "OVR/OpenVR/IVROverlay__SetOverlayTextureColorSpace.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.EColorSpace
#include "OVR/OpenVR/EColorSpace.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTextureColorSpace.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTextureColorSpace::Invoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::EColorSpace eTextureColorSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTextureColorSpace::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTextureColorSpace*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eTextureColorSpace);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTextureColorSpace.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayTextureColorSpace::BeginInvoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::EColorSpace eTextureColorSpace, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTextureColorSpace::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTextureColorSpace*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, eTextureColorSpace, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTextureColorSpace.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTextureColorSpace::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTextureColorSpace::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTextureColorSpace*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTextureColorSpace
#include "OVR/OpenVR/IVROverlay__GetOverlayTextureColorSpace.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.EColorSpace
#include "OVR/OpenVR/EColorSpace.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTextureColorSpace.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTextureColorSpace::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::EColorSpace> peTextureColorSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTextureColorSpace::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTextureColorSpace*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(peTextureColorSpace));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTextureColorSpace.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTextureColorSpace::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::EColorSpace> peTextureColorSpace, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTextureColorSpace::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTextureColorSpace*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(peTextureColorSpace), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTextureColorSpace.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTextureColorSpace::EndInvoke(ByRef<::OVR::OpenVR::EColorSpace> peTextureColorSpace, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTextureColorSpace::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTextureColorSpace*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(peTextureColorSpace), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTextureBounds
#include "OVR/OpenVR/IVROverlay__SetOverlayTextureBounds.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.VRTextureBounds_t
#include "OVR/OpenVR/VRTextureBounds_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTextureBounds.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTextureBounds::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VRTextureBounds_t> pOverlayTextureBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTextureBounds::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTextureBounds*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pOverlayTextureBounds));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTextureBounds.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayTextureBounds::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VRTextureBounds_t> pOverlayTextureBounds, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTextureBounds::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTextureBounds*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pOverlayTextureBounds), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTextureBounds.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTextureBounds::EndInvoke(ByRef<::OVR::OpenVR::VRTextureBounds_t> pOverlayTextureBounds, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTextureBounds::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTextureBounds*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pOverlayTextureBounds), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTextureBounds
#include "OVR/OpenVR/IVROverlay__GetOverlayTextureBounds.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.VRTextureBounds_t
#include "OVR/OpenVR/VRTextureBounds_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTextureBounds.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTextureBounds::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VRTextureBounds_t> pOverlayTextureBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTextureBounds::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTextureBounds*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pOverlayTextureBounds));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTextureBounds.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTextureBounds::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VRTextureBounds_t> pOverlayTextureBounds, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTextureBounds::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTextureBounds*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pOverlayTextureBounds), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTextureBounds.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTextureBounds::EndInvoke(ByRef<::OVR::OpenVR::VRTextureBounds_t> pOverlayTextureBounds, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTextureBounds::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTextureBounds*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pOverlayTextureBounds), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayRenderModel
#include "OVR/OpenVR/IVROverlay__GetOverlayRenderModel.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVR.OpenVR.HmdColor_t
#include "OVR/OpenVR/HmdColor_t.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayRenderModel.Invoke
uint OVR::OpenVR::IVROverlay::_GetOverlayRenderModel::Invoke(uint64_t ulOverlayHandle, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<::OVR::OpenVR::HmdColor_t> pColor, ByRef<::OVR::OpenVR::EVROverlayError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayRenderModel::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayRenderModel*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, ulOverlayHandle, pchValue, unBufferSize, byref(pColor), byref(pError));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayRenderModel.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayRenderModel::BeginInvoke(uint64_t ulOverlayHandle, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<::OVR::OpenVR::HmdColor_t> pColor, ByRef<::OVR::OpenVR::EVROverlayError> pError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayRenderModel::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayRenderModel*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pchValue, unBufferSize, byref(pColor), byref(pError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayRenderModel.EndInvoke
uint OVR::OpenVR::IVROverlay::_GetOverlayRenderModel::EndInvoke(ByRef<::OVR::OpenVR::HmdColor_t> pColor, ByRef<::OVR::OpenVR::EVROverlayError> pError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayRenderModel::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayRenderModel*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(pColor), byref(pError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayRenderModel
#include "OVR/OpenVR/IVROverlay__SetOverlayRenderModel.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.HmdColor_t
#include "OVR/OpenVR/HmdColor_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayRenderModel.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayRenderModel::Invoke(uint64_t ulOverlayHandle, ::StringW pchRenderModel, ByRef<::OVR::OpenVR::HmdColor_t> pColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayRenderModel::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayRenderModel*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pchRenderModel, byref(pColor));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayRenderModel.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayRenderModel::BeginInvoke(uint64_t ulOverlayHandle, ::StringW pchRenderModel, ByRef<::OVR::OpenVR::HmdColor_t> pColor, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayRenderModel::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayRenderModel*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pchRenderModel, byref(pColor), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayRenderModel.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayRenderModel::EndInvoke(ByRef<::OVR::OpenVR::HmdColor_t> pColor, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayRenderModel::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayRenderModel*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pColor), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformType
#include "OVR/OpenVR/IVROverlay__GetOverlayTransformType.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.VROverlayTransformType
#include "OVR/OpenVR/VROverlayTransformType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformType.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformType::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayTransformType> peTransformType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformType::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformType*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(peTransformType));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformType.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTransformType::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayTransformType> peTransformType, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformType::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(peTransformType), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformType.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformType::EndInvoke(ByRef<::OVR::OpenVR::VROverlayTransformType> peTransformType, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformType::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(peTransformType), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTransformAbsolute
#include "OVR/OpenVR/IVROverlay__SetOverlayTransformAbsolute.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTransformAbsolute.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTransformAbsolute::Invoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::ETrackingUniverseOrigin eTrackingOrigin, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformAbsolute::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformAbsolute*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eTrackingOrigin, byref(pmatTrackingOriginToOverlayTransform));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTransformAbsolute.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayTransformAbsolute::BeginInvoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::ETrackingUniverseOrigin eTrackingOrigin, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToOverlayTransform, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformAbsolute::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformAbsolute*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, eTrackingOrigin, byref(pmatTrackingOriginToOverlayTransform), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTransformAbsolute.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTransformAbsolute::EndInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToOverlayTransform, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformAbsolute::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformAbsolute*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pmatTrackingOriginToOverlayTransform), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformAbsolute
#include "OVR/OpenVR/IVROverlay__GetOverlayTransformAbsolute.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformAbsolute.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformAbsolute::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::ETrackingUniverseOrigin> peTrackingOrigin, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformAbsolute::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformAbsolute*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(peTrackingOrigin), byref(pmatTrackingOriginToOverlayTransform));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformAbsolute.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTransformAbsolute::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::ETrackingUniverseOrigin> peTrackingOrigin, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToOverlayTransform, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformAbsolute::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformAbsolute*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(peTrackingOrigin), byref(pmatTrackingOriginToOverlayTransform), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformAbsolute.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformAbsolute::EndInvoke(ByRef<::OVR::OpenVR::ETrackingUniverseOrigin> peTrackingOrigin, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToOverlayTransform, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformAbsolute::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformAbsolute*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(peTrackingOrigin), byref(pmatTrackingOriginToOverlayTransform), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTransformTrackedDeviceRelative
#include "OVR/OpenVR/IVROverlay__SetOverlayTransformTrackedDeviceRelative.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTransformTrackedDeviceRelative.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative::Invoke(uint64_t ulOverlayHandle, uint unTrackedDevice, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackedDeviceToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unTrackedDevice, byref(pmatTrackedDeviceToOverlayTransform));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTransformTrackedDeviceRelative.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative::BeginInvoke(uint64_t ulOverlayHandle, uint unTrackedDevice, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackedDeviceToOverlayTransform, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, unTrackedDevice, byref(pmatTrackedDeviceToOverlayTransform), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTransformTrackedDeviceRelative.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative::EndInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackedDeviceToOverlayTransform, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pmatTrackedDeviceToOverlayTransform), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformTrackedDeviceRelative
#include "OVR/OpenVR/IVROverlay__GetOverlayTransformTrackedDeviceRelative.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformTrackedDeviceRelative.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative::Invoke(uint64_t ulOverlayHandle, ByRef<uint> punTrackedDevice, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackedDeviceToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(punTrackedDevice), byref(pmatTrackedDeviceToOverlayTransform));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformTrackedDeviceRelative.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative::BeginInvoke(uint64_t ulOverlayHandle, ByRef<uint> punTrackedDevice, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackedDeviceToOverlayTransform, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(punTrackedDevice), byref(pmatTrackedDeviceToOverlayTransform), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformTrackedDeviceRelative.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative::EndInvoke(ByRef<uint> punTrackedDevice, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackedDeviceToOverlayTransform, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(punTrackedDevice), byref(pmatTrackedDeviceToOverlayTransform), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTransformTrackedDeviceComponent
#include "OVR/OpenVR/IVROverlay__SetOverlayTransformTrackedDeviceComponent.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTransformTrackedDeviceComponent.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent::Invoke(uint64_t ulOverlayHandle, uint unDeviceIndex, ::StringW pchComponentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unDeviceIndex, pchComponentName);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTransformTrackedDeviceComponent.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent::BeginInvoke(uint64_t ulOverlayHandle, uint unDeviceIndex, ::StringW pchComponentName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, unDeviceIndex, pchComponentName, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTransformTrackedDeviceComponent.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformTrackedDeviceComponent
#include "OVR/OpenVR/IVROverlay__GetOverlayTransformTrackedDeviceComponent.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformTrackedDeviceComponent.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent::Invoke(uint64_t ulOverlayHandle, ByRef<uint> punDeviceIndex, ::System::Text::StringBuilder* pchComponentName, uint unComponentNameSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(punDeviceIndex), pchComponentName, unComponentNameSize);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformTrackedDeviceComponent.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent::BeginInvoke(uint64_t ulOverlayHandle, ByRef<uint> punDeviceIndex, ::System::Text::StringBuilder* pchComponentName, uint unComponentNameSize, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(punDeviceIndex), pchComponentName, unComponentNameSize, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformTrackedDeviceComponent.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent::EndInvoke(ByRef<uint> punDeviceIndex, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(punDeviceIndex), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformOverlayRelative
#include "OVR/OpenVR/IVROverlay__GetOverlayTransformOverlayRelative.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformOverlayRelative.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformOverlayRelative::Invoke(uint64_t ulOverlayHandle, ByRef<uint64_t> ulOverlayHandleParent, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformOverlayRelative::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformOverlayRelative*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(ulOverlayHandleParent), byref(pmatParentOverlayToOverlayTransform));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformOverlayRelative.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTransformOverlayRelative::BeginInvoke(uint64_t ulOverlayHandle, ByRef<uint64_t> ulOverlayHandleParent, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformOverlayRelative::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformOverlayRelative*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(ulOverlayHandleParent), byref(pmatParentOverlayToOverlayTransform), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTransformOverlayRelative.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformOverlayRelative::EndInvoke(ByRef<uint64_t> ulOverlayHandleParent, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformOverlayRelative::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformOverlayRelative*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(ulOverlayHandleParent), byref(pmatParentOverlayToOverlayTransform), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTransformOverlayRelative
#include "OVR/OpenVR/IVROverlay__SetOverlayTransformOverlayRelative.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTransformOverlayRelative.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTransformOverlayRelative::Invoke(uint64_t ulOverlayHandle, uint64_t ulOverlayHandleParent, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformOverlayRelative::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformOverlayRelative*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, ulOverlayHandleParent, byref(pmatParentOverlayToOverlayTransform));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTransformOverlayRelative.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayTransformOverlayRelative::BeginInvoke(uint64_t ulOverlayHandle, uint64_t ulOverlayHandleParent, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformOverlayRelative::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformOverlayRelative*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, ulOverlayHandleParent, byref(pmatParentOverlayToOverlayTransform), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTransformOverlayRelative.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTransformOverlayRelative::EndInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformOverlayRelative::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformOverlayRelative*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pmatParentOverlayToOverlayTransform), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowOverlay
#include "OVR/OpenVR/IVROverlay__ShowOverlay.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowOverlay.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ShowOverlay::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowOverlay*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_ShowOverlay::BeginInvoke(uint64_t ulOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowOverlay.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ShowOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._HideOverlay
#include "OVR/OpenVR/IVROverlay__HideOverlay.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._HideOverlay.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_HideOverlay::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_HideOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_HideOverlay*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._HideOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_HideOverlay::BeginInvoke(uint64_t ulOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_HideOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_HideOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._HideOverlay.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_HideOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_HideOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_HideOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._IsOverlayVisible
#include "OVR/OpenVR/IVROverlay__IsOverlayVisible.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._IsOverlayVisible.Invoke
bool OVR::OpenVR::IVROverlay::_IsOverlayVisible::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsOverlayVisible::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsOverlayVisible*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._IsOverlayVisible.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_IsOverlayVisible::BeginInvoke(uint64_t ulOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsOverlayVisible::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsOverlayVisible*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._IsOverlayVisible.EndInvoke
bool OVR::OpenVR::IVROverlay::_IsOverlayVisible::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsOverlayVisible::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsOverlayVisible*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetTransformForOverlayCoordinates
#include "OVR/OpenVR/IVROverlay__GetTransformForOverlayCoordinates.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: OVR.OpenVR.HmdVector2_t
#include "OVR/OpenVR/HmdVector2_t.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetTransformForOverlayCoordinates.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetTransformForOverlayCoordinates::Invoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::ETrackingUniverseOrigin eTrackingOrigin, ::OVR::OpenVR::HmdVector2_t coordinatesInOverlay, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetTransformForOverlayCoordinates::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetTransformForOverlayCoordinates*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eTrackingOrigin, coordinatesInOverlay, byref(pmatTransform));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetTransformForOverlayCoordinates.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetTransformForOverlayCoordinates::BeginInvoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::ETrackingUniverseOrigin eTrackingOrigin, ::OVR::OpenVR::HmdVector2_t coordinatesInOverlay, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTransform, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetTransformForOverlayCoordinates::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetTransformForOverlayCoordinates*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, eTrackingOrigin, coordinatesInOverlay, byref(pmatTransform), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetTransformForOverlayCoordinates.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetTransformForOverlayCoordinates::EndInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTransform, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetTransformForOverlayCoordinates::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetTransformForOverlayCoordinates*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pmatTransform), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._PollNextOverlayEvent
#include "OVR/OpenVR/IVROverlay__PollNextOverlayEvent.hpp"
// Including type: OVR.OpenVR.VREvent_t
#include "OVR/OpenVR/VREvent_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._PollNextOverlayEvent.Invoke
bool OVR::OpenVR::IVROverlay::_PollNextOverlayEvent::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VREvent_t> pEvent, uint uncbVREvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_PollNextOverlayEvent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_PollNextOverlayEvent*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle, byref(pEvent), uncbVREvent);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._PollNextOverlayEvent.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_PollNextOverlayEvent::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VREvent_t> pEvent, uint uncbVREvent, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_PollNextOverlayEvent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_PollNextOverlayEvent*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pEvent), uncbVREvent, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._PollNextOverlayEvent.EndInvoke
bool OVR::OpenVR::IVROverlay::_PollNextOverlayEvent::EndInvoke(ByRef<::OVR::OpenVR::VREvent_t> pEvent, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_PollNextOverlayEvent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_PollNextOverlayEvent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pEvent), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayInputMethod
#include "OVR/OpenVR/IVROverlay__GetOverlayInputMethod.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.VROverlayInputMethod
#include "OVR/OpenVR/VROverlayInputMethod.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayInputMethod.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayInputMethod::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayInputMethod> peInputMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayInputMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayInputMethod*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(peInputMethod));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayInputMethod.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayInputMethod::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayInputMethod> peInputMethod, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayInputMethod::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayInputMethod*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(peInputMethod), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayInputMethod.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayInputMethod::EndInvoke(ByRef<::OVR::OpenVR::VROverlayInputMethod> peInputMethod, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayInputMethod::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayInputMethod*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(peInputMethod), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayInputMethod
#include "OVR/OpenVR/IVROverlay__SetOverlayInputMethod.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.VROverlayInputMethod
#include "OVR/OpenVR/VROverlayInputMethod.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayInputMethod.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayInputMethod::Invoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::VROverlayInputMethod eInputMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayInputMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayInputMethod*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eInputMethod);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayInputMethod.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayInputMethod::BeginInvoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::VROverlayInputMethod eInputMethod, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayInputMethod::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayInputMethod*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, eInputMethod, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayInputMethod.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayInputMethod::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayInputMethod::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayInputMethod*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayMouseScale
#include "OVR/OpenVR/IVROverlay__GetOverlayMouseScale.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.HmdVector2_t
#include "OVR/OpenVR/HmdVector2_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayMouseScale.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayMouseScale::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::HmdVector2_t> pvecMouseScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayMouseScale::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayMouseScale*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pvecMouseScale));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayMouseScale.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayMouseScale::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::HmdVector2_t> pvecMouseScale, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayMouseScale::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayMouseScale*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pvecMouseScale), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayMouseScale.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayMouseScale::EndInvoke(ByRef<::OVR::OpenVR::HmdVector2_t> pvecMouseScale, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayMouseScale::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayMouseScale*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pvecMouseScale), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayMouseScale
#include "OVR/OpenVR/IVROverlay__SetOverlayMouseScale.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.HmdVector2_t
#include "OVR/OpenVR/HmdVector2_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayMouseScale.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayMouseScale::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::HmdVector2_t> pvecMouseScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayMouseScale::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayMouseScale*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pvecMouseScale));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayMouseScale.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayMouseScale::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::HmdVector2_t> pvecMouseScale, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayMouseScale::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayMouseScale*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pvecMouseScale), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayMouseScale.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayMouseScale::EndInvoke(ByRef<::OVR::OpenVR::HmdVector2_t> pvecMouseScale, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayMouseScale::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayMouseScale*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pvecMouseScale), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._ComputeOverlayIntersection
#include "OVR/OpenVR/IVROverlay__ComputeOverlayIntersection.hpp"
// Including type: OVR.OpenVR.VROverlayIntersectionParams_t
#include "OVR/OpenVR/VROverlayIntersectionParams_t.hpp"
// Including type: OVR.OpenVR.VROverlayIntersectionResults_t
#include "OVR/OpenVR/VROverlayIntersectionResults_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ComputeOverlayIntersection.Invoke
bool OVR::OpenVR::IVROverlay::_ComputeOverlayIntersection::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayIntersectionParams_t> pParams, ByRef<::OVR::OpenVR::VROverlayIntersectionResults_t> pResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ComputeOverlayIntersection::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ComputeOverlayIntersection*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle, byref(pParams), byref(pResults));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ComputeOverlayIntersection.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_ComputeOverlayIntersection::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayIntersectionParams_t> pParams, ByRef<::OVR::OpenVR::VROverlayIntersectionResults_t> pResults, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ComputeOverlayIntersection::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ComputeOverlayIntersection*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pParams), byref(pResults), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ComputeOverlayIntersection.EndInvoke
bool OVR::OpenVR::IVROverlay::_ComputeOverlayIntersection::EndInvoke(ByRef<::OVR::OpenVR::VROverlayIntersectionParams_t> pParams, ByRef<::OVR::OpenVR::VROverlayIntersectionResults_t> pResults, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ComputeOverlayIntersection::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ComputeOverlayIntersection*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pParams), byref(pResults), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._IsHoverTargetOverlay
#include "OVR/OpenVR/IVROverlay__IsHoverTargetOverlay.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._IsHoverTargetOverlay.Invoke
bool OVR::OpenVR::IVROverlay::_IsHoverTargetOverlay::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsHoverTargetOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsHoverTargetOverlay*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._IsHoverTargetOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_IsHoverTargetOverlay::BeginInvoke(uint64_t ulOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsHoverTargetOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsHoverTargetOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._IsHoverTargetOverlay.EndInvoke
bool OVR::OpenVR::IVROverlay::_IsHoverTargetOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsHoverTargetOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsHoverTargetOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetGamepadFocusOverlay
#include "OVR/OpenVR/IVROverlay__GetGamepadFocusOverlay.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetGamepadFocusOverlay.Invoke
uint64_t OVR::OpenVR::IVROverlay::_GetGamepadFocusOverlay::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetGamepadFocusOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetGamepadFocusOverlay*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetGamepadFocusOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetGamepadFocusOverlay::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetGamepadFocusOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetGamepadFocusOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetGamepadFocusOverlay.EndInvoke
uint64_t OVR::OpenVR::IVROverlay::_GetGamepadFocusOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetGamepadFocusOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetGamepadFocusOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetGamepadFocusOverlay
#include "OVR/OpenVR/IVROverlay__SetGamepadFocusOverlay.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetGamepadFocusOverlay.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetGamepadFocusOverlay::Invoke(uint64_t ulNewFocusOverlay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetGamepadFocusOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetGamepadFocusOverlay*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulNewFocusOverlay);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetGamepadFocusOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetGamepadFocusOverlay::BeginInvoke(uint64_t ulNewFocusOverlay, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetGamepadFocusOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetGamepadFocusOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulNewFocusOverlay, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetGamepadFocusOverlay.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetGamepadFocusOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetGamepadFocusOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetGamepadFocusOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayNeighbor
#include "OVR/OpenVR/IVROverlay__SetOverlayNeighbor.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.EOverlayDirection
#include "OVR/OpenVR/EOverlayDirection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayNeighbor.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayNeighbor::Invoke(::OVR::OpenVR::EOverlayDirection eDirection, uint64_t ulFrom, uint64_t ulTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayNeighbor::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayNeighbor*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, eDirection, ulFrom, ulTo);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayNeighbor.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayNeighbor::BeginInvoke(::OVR::OpenVR::EOverlayDirection eDirection, uint64_t ulFrom, uint64_t ulTo, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayNeighbor::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayNeighbor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eDirection, ulFrom, ulTo, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayNeighbor.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayNeighbor::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayNeighbor::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayNeighbor*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._MoveGamepadFocusToNeighbor
#include "OVR/OpenVR/IVROverlay__MoveGamepadFocusToNeighbor.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.EOverlayDirection
#include "OVR/OpenVR/EOverlayDirection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._MoveGamepadFocusToNeighbor.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_MoveGamepadFocusToNeighbor::Invoke(::OVR::OpenVR::EOverlayDirection eDirection, uint64_t ulFrom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_MoveGamepadFocusToNeighbor::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_MoveGamepadFocusToNeighbor*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, eDirection, ulFrom);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._MoveGamepadFocusToNeighbor.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_MoveGamepadFocusToNeighbor::BeginInvoke(::OVR::OpenVR::EOverlayDirection eDirection, uint64_t ulFrom, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_MoveGamepadFocusToNeighbor::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_MoveGamepadFocusToNeighbor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eDirection, ulFrom, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._MoveGamepadFocusToNeighbor.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_MoveGamepadFocusToNeighbor::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_MoveGamepadFocusToNeighbor::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_MoveGamepadFocusToNeighbor*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayDualAnalogTransform
#include "OVR/OpenVR/IVROverlay__SetOverlayDualAnalogTransform.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.EDualAnalogWhich
#include "OVR/OpenVR/EDualAnalogWhich.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayDualAnalogTransform.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayDualAnalogTransform::Invoke(uint64_t ulOverlay, ::OVR::OpenVR::EDualAnalogWhich eWhich, ::System::IntPtr vCenter, float fRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayDualAnalogTransform::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayDualAnalogTransform*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlay, eWhich, vCenter, fRadius);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayDualAnalogTransform.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayDualAnalogTransform::BeginInvoke(uint64_t ulOverlay, ::OVR::OpenVR::EDualAnalogWhich eWhich, ::System::IntPtr vCenter, float fRadius, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayDualAnalogTransform::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayDualAnalogTransform*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlay, eWhich, vCenter, fRadius, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayDualAnalogTransform.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayDualAnalogTransform::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayDualAnalogTransform::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayDualAnalogTransform*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayDualAnalogTransform
#include "OVR/OpenVR/IVROverlay__GetOverlayDualAnalogTransform.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.EDualAnalogWhich
#include "OVR/OpenVR/EDualAnalogWhich.hpp"
// Including type: OVR.OpenVR.HmdVector2_t
#include "OVR/OpenVR/HmdVector2_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayDualAnalogTransform.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayDualAnalogTransform::Invoke(uint64_t ulOverlay, ::OVR::OpenVR::EDualAnalogWhich eWhich, ByRef<::OVR::OpenVR::HmdVector2_t> pvCenter, ByRef<float> pfRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayDualAnalogTransform::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayDualAnalogTransform*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlay, eWhich, byref(pvCenter), byref(pfRadius));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayDualAnalogTransform.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayDualAnalogTransform::BeginInvoke(uint64_t ulOverlay, ::OVR::OpenVR::EDualAnalogWhich eWhich, ByRef<::OVR::OpenVR::HmdVector2_t> pvCenter, ByRef<float> pfRadius, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayDualAnalogTransform::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayDualAnalogTransform*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlay, eWhich, byref(pvCenter), byref(pfRadius), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayDualAnalogTransform.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayDualAnalogTransform::EndInvoke(ByRef<::OVR::OpenVR::HmdVector2_t> pvCenter, ByRef<float> pfRadius, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayDualAnalogTransform::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayDualAnalogTransform*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pvCenter), byref(pfRadius), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTexture
#include "OVR/OpenVR/IVROverlay__SetOverlayTexture.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.Texture_t
#include "OVR/OpenVR/Texture_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTexture.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTexture::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::Texture_t> pTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTexture::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTexture*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pTexture));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTexture.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayTexture::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::Texture_t> pTexture, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTexture::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTexture*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pTexture), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayTexture.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTexture::EndInvoke(ByRef<::OVR::OpenVR::Texture_t> pTexture, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTexture::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTexture*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pTexture), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._ClearOverlayTexture
#include "OVR/OpenVR/IVROverlay__ClearOverlayTexture.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ClearOverlayTexture.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ClearOverlayTexture::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ClearOverlayTexture::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ClearOverlayTexture*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ClearOverlayTexture.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_ClearOverlayTexture::BeginInvoke(uint64_t ulOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ClearOverlayTexture::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ClearOverlayTexture*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ClearOverlayTexture.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ClearOverlayTexture::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ClearOverlayTexture::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ClearOverlayTexture*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayRaw
#include "OVR/OpenVR/IVROverlay__SetOverlayRaw.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayRaw.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayRaw::Invoke(uint64_t ulOverlayHandle, ::System::IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayRaw::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayRaw*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pvBuffer, unWidth, unHeight, unDepth);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayRaw.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayRaw::BeginInvoke(uint64_t ulOverlayHandle, ::System::IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayRaw::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayRaw*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pvBuffer, unWidth, unHeight, unDepth, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayRaw.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayRaw::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayRaw::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayRaw*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayFromFile
#include "OVR/OpenVR/IVROverlay__SetOverlayFromFile.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayFromFile.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayFromFile::Invoke(uint64_t ulOverlayHandle, ::StringW pchFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayFromFile::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayFromFile*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pchFilePath);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayFromFile.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayFromFile::BeginInvoke(uint64_t ulOverlayHandle, ::StringW pchFilePath, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayFromFile::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayFromFile*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pchFilePath, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayFromFile.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayFromFile::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayFromFile::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayFromFile*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTexture
#include "OVR/OpenVR/IVROverlay__GetOverlayTexture.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.ETextureType
#include "OVR/OpenVR/ETextureType.hpp"
// Including type: OVR.OpenVR.EColorSpace
#include "OVR/OpenVR/EColorSpace.hpp"
// Including type: OVR.OpenVR.VRTextureBounds_t
#include "OVR/OpenVR/VRTextureBounds_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTexture.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTexture::Invoke(uint64_t ulOverlayHandle, ByRef<::System::IntPtr> pNativeTextureHandle, ::System::IntPtr pNativeTextureRef, ByRef<uint> pWidth, ByRef<uint> pHeight, ByRef<uint> pNativeFormat, ByRef<::OVR::OpenVR::ETextureType> pAPIType, ByRef<::OVR::OpenVR::EColorSpace> pColorSpace, ByRef<::OVR::OpenVR::VRTextureBounds_t> pTextureBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTexture::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTexture*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pNativeTextureHandle), pNativeTextureRef, byref(pWidth), byref(pHeight), byref(pNativeFormat), byref(pAPIType), byref(pColorSpace), byref(pTextureBounds));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTexture.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTexture::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::System::IntPtr> pNativeTextureHandle, ::System::IntPtr pNativeTextureRef, ByRef<uint> pWidth, ByRef<uint> pHeight, ByRef<uint> pNativeFormat, ByRef<::OVR::OpenVR::ETextureType> pAPIType, ByRef<::OVR::OpenVR::EColorSpace> pColorSpace, ByRef<::OVR::OpenVR::VRTextureBounds_t> pTextureBounds, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTexture::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTexture*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pNativeTextureHandle), pNativeTextureRef, byref(pWidth), byref(pHeight), byref(pNativeFormat), byref(pAPIType), byref(pColorSpace), byref(pTextureBounds), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTexture.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTexture::EndInvoke(ByRef<::System::IntPtr> pNativeTextureHandle, ByRef<uint> pWidth, ByRef<uint> pHeight, ByRef<uint> pNativeFormat, ByRef<::OVR::OpenVR::ETextureType> pAPIType, ByRef<::OVR::OpenVR::EColorSpace> pColorSpace, ByRef<::OVR::OpenVR::VRTextureBounds_t> pTextureBounds, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTexture::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTexture*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pNativeTextureHandle), byref(pWidth), byref(pHeight), byref(pNativeFormat), byref(pAPIType), byref(pColorSpace), byref(pTextureBounds), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._ReleaseNativeOverlayHandle
#include "OVR/OpenVR/IVROverlay__ReleaseNativeOverlayHandle.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ReleaseNativeOverlayHandle.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ReleaseNativeOverlayHandle::Invoke(uint64_t ulOverlayHandle, ::System::IntPtr pNativeTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ReleaseNativeOverlayHandle::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ReleaseNativeOverlayHandle*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pNativeTextureHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ReleaseNativeOverlayHandle.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_ReleaseNativeOverlayHandle::BeginInvoke(uint64_t ulOverlayHandle, ::System::IntPtr pNativeTextureHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ReleaseNativeOverlayHandle::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ReleaseNativeOverlayHandle*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pNativeTextureHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ReleaseNativeOverlayHandle.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ReleaseNativeOverlayHandle::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ReleaseNativeOverlayHandle::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ReleaseNativeOverlayHandle*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTextureSize
#include "OVR/OpenVR/IVROverlay__GetOverlayTextureSize.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTextureSize.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTextureSize::Invoke(uint64_t ulOverlayHandle, ByRef<uint> pWidth, ByRef<uint> pHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTextureSize::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTextureSize*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pWidth), byref(pHeight));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTextureSize.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTextureSize::BeginInvoke(uint64_t ulOverlayHandle, ByRef<uint> pWidth, ByRef<uint> pHeight, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTextureSize::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTextureSize*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pWidth), byref(pHeight), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayTextureSize.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTextureSize::EndInvoke(ByRef<uint> pWidth, ByRef<uint> pHeight, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTextureSize::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTextureSize*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pWidth), byref(pHeight), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._CreateDashboardOverlay
#include "OVR/OpenVR/IVROverlay__CreateDashboardOverlay.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._CreateDashboardOverlay.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_CreateDashboardOverlay::Invoke(::StringW pchOverlayKey, ::StringW pchOverlayFriendlyName, ByRef<uint64_t> pMainHandle, ByRef<uint64_t> pThumbnailHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_CreateDashboardOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_CreateDashboardOverlay*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, pchOverlayKey, pchOverlayFriendlyName, byref(pMainHandle), byref(pThumbnailHandle));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._CreateDashboardOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_CreateDashboardOverlay::BeginInvoke(::StringW pchOverlayKey, ::StringW pchOverlayFriendlyName, ByRef<uint64_t> pMainHandle, ByRef<uint64_t> pThumbnailHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_CreateDashboardOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_CreateDashboardOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchOverlayKey, pchOverlayFriendlyName, byref(pMainHandle), byref(pThumbnailHandle), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._CreateDashboardOverlay.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_CreateDashboardOverlay::EndInvoke(ByRef<uint64_t> pMainHandle, ByRef<uint64_t> pThumbnailHandle, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_CreateDashboardOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_CreateDashboardOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pMainHandle), byref(pThumbnailHandle), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._IsDashboardVisible
#include "OVR/OpenVR/IVROverlay__IsDashboardVisible.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._IsDashboardVisible.Invoke
bool OVR::OpenVR::IVROverlay::_IsDashboardVisible::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsDashboardVisible::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsDashboardVisible*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._IsDashboardVisible.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_IsDashboardVisible::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsDashboardVisible::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsDashboardVisible*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._IsDashboardVisible.EndInvoke
bool OVR::OpenVR::IVROverlay::_IsDashboardVisible::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsDashboardVisible::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsDashboardVisible*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._IsActiveDashboardOverlay
#include "OVR/OpenVR/IVROverlay__IsActiveDashboardOverlay.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._IsActiveDashboardOverlay.Invoke
bool OVR::OpenVR::IVROverlay::_IsActiveDashboardOverlay::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsActiveDashboardOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsActiveDashboardOverlay*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._IsActiveDashboardOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_IsActiveDashboardOverlay::BeginInvoke(uint64_t ulOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsActiveDashboardOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsActiveDashboardOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._IsActiveDashboardOverlay.EndInvoke
bool OVR::OpenVR::IVROverlay::_IsActiveDashboardOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsActiveDashboardOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsActiveDashboardOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetDashboardOverlaySceneProcess
#include "OVR/OpenVR/IVROverlay__SetDashboardOverlaySceneProcess.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetDashboardOverlaySceneProcess.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetDashboardOverlaySceneProcess::Invoke(uint64_t ulOverlayHandle, uint unProcessId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetDashboardOverlaySceneProcess::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetDashboardOverlaySceneProcess*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unProcessId);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetDashboardOverlaySceneProcess.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetDashboardOverlaySceneProcess::BeginInvoke(uint64_t ulOverlayHandle, uint unProcessId, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetDashboardOverlaySceneProcess::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetDashboardOverlaySceneProcess*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, unProcessId, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetDashboardOverlaySceneProcess.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetDashboardOverlaySceneProcess::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetDashboardOverlaySceneProcess::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetDashboardOverlaySceneProcess*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetDashboardOverlaySceneProcess
#include "OVR/OpenVR/IVROverlay__GetDashboardOverlaySceneProcess.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetDashboardOverlaySceneProcess.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetDashboardOverlaySceneProcess::Invoke(uint64_t ulOverlayHandle, ByRef<uint> punProcessId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetDashboardOverlaySceneProcess::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetDashboardOverlaySceneProcess*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(punProcessId));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetDashboardOverlaySceneProcess.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetDashboardOverlaySceneProcess::BeginInvoke(uint64_t ulOverlayHandle, ByRef<uint> punProcessId, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetDashboardOverlaySceneProcess::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetDashboardOverlaySceneProcess*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(punProcessId), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetDashboardOverlaySceneProcess.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetDashboardOverlaySceneProcess::EndInvoke(ByRef<uint> punProcessId, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetDashboardOverlaySceneProcess::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetDashboardOverlaySceneProcess*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(punProcessId), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowDashboard
#include "OVR/OpenVR/IVROverlay__ShowDashboard.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowDashboard.Invoke
void OVR::OpenVR::IVROverlay::_ShowDashboard::Invoke(::StringW pchOverlayToShow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowDashboard::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowDashboard*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchOverlayToShow);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowDashboard.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_ShowDashboard::BeginInvoke(::StringW pchOverlayToShow, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowDashboard::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowDashboard*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchOverlayToShow, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowDashboard.EndInvoke
void OVR::OpenVR::IVROverlay::_ShowDashboard::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowDashboard::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowDashboard*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetPrimaryDashboardDevice
#include "OVR/OpenVR/IVROverlay__GetPrimaryDashboardDevice.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetPrimaryDashboardDevice.Invoke
uint OVR::OpenVR::IVROverlay::_GetPrimaryDashboardDevice::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetPrimaryDashboardDevice::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetPrimaryDashboardDevice*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetPrimaryDashboardDevice.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetPrimaryDashboardDevice::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetPrimaryDashboardDevice::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetPrimaryDashboardDevice*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetPrimaryDashboardDevice.EndInvoke
uint OVR::OpenVR::IVROverlay::_GetPrimaryDashboardDevice::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetPrimaryDashboardDevice::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetPrimaryDashboardDevice*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowKeyboard
#include "OVR/OpenVR/IVROverlay__ShowKeyboard.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowKeyboard.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ShowKeyboard::Invoke(int eInputMode, int eLineInputMode, ::StringW pchDescription, uint unCharMax, ::StringW pchExistingText, bool bUseMinimalMode, uint64_t uUserValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowKeyboard::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowKeyboard*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowKeyboard.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_ShowKeyboard::BeginInvoke(int eInputMode, int eLineInputMode, ::StringW pchDescription, uint unCharMax, ::StringW pchExistingText, bool bUseMinimalMode, uint64_t uUserValue, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowKeyboard::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowKeyboard*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowKeyboard.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ShowKeyboard::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowKeyboard::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowKeyboard*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowKeyboardForOverlay
#include "OVR/OpenVR/IVROverlay__ShowKeyboardForOverlay.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowKeyboardForOverlay.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ShowKeyboardForOverlay::Invoke(uint64_t ulOverlayHandle, int eInputMode, int eLineInputMode, ::StringW pchDescription, uint unCharMax, ::StringW pchExistingText, bool bUseMinimalMode, uint64_t uUserValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowKeyboardForOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowKeyboardForOverlay*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowKeyboardForOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_ShowKeyboardForOverlay::BeginInvoke(uint64_t ulOverlayHandle, int eInputMode, int eLineInputMode, ::StringW pchDescription, uint unCharMax, ::StringW pchExistingText, bool bUseMinimalMode, uint64_t uUserValue, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowKeyboardForOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowKeyboardForOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowKeyboardForOverlay.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ShowKeyboardForOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowKeyboardForOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowKeyboardForOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetKeyboardText
#include "OVR/OpenVR/IVROverlay__GetKeyboardText.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetKeyboardText.Invoke
uint OVR::OpenVR::IVROverlay::_GetKeyboardText::Invoke(::System::Text::StringBuilder* pchText, uint cchText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetKeyboardText::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetKeyboardText*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchText, cchText);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetKeyboardText.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetKeyboardText::BeginInvoke(::System::Text::StringBuilder* pchText, uint cchText, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetKeyboardText::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetKeyboardText*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchText, cchText, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetKeyboardText.EndInvoke
uint OVR::OpenVR::IVROverlay::_GetKeyboardText::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetKeyboardText::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetKeyboardText*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._HideKeyboard
#include "OVR/OpenVR/IVROverlay__HideKeyboard.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._HideKeyboard.Invoke
void OVR::OpenVR::IVROverlay::_HideKeyboard::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_HideKeyboard::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_HideKeyboard*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._HideKeyboard.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_HideKeyboard::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_HideKeyboard::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_HideKeyboard*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._HideKeyboard.EndInvoke
void OVR::OpenVR::IVROverlay::_HideKeyboard::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_HideKeyboard::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_HideKeyboard*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetKeyboardTransformAbsolute
#include "OVR/OpenVR/IVROverlay__SetKeyboardTransformAbsolute.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetKeyboardTransformAbsolute.Invoke
void OVR::OpenVR::IVROverlay::_SetKeyboardTransformAbsolute::Invoke(::OVR::OpenVR::ETrackingUniverseOrigin eTrackingOrigin, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToKeyboardTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetKeyboardTransformAbsolute::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetKeyboardTransformAbsolute*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eTrackingOrigin, byref(pmatTrackingOriginToKeyboardTransform));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetKeyboardTransformAbsolute.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetKeyboardTransformAbsolute::BeginInvoke(::OVR::OpenVR::ETrackingUniverseOrigin eTrackingOrigin, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToKeyboardTransform, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetKeyboardTransformAbsolute::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetKeyboardTransformAbsolute*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eTrackingOrigin, byref(pmatTrackingOriginToKeyboardTransform), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetKeyboardTransformAbsolute.EndInvoke
void OVR::OpenVR::IVROverlay::_SetKeyboardTransformAbsolute::EndInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToKeyboardTransform, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetKeyboardTransformAbsolute::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetKeyboardTransformAbsolute*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pmatTrackingOriginToKeyboardTransform), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetKeyboardPositionForOverlay
#include "OVR/OpenVR/IVROverlay__SetKeyboardPositionForOverlay.hpp"
// Including type: OVR.OpenVR.HmdRect2_t
#include "OVR/OpenVR/HmdRect2_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetKeyboardPositionForOverlay.Invoke
void OVR::OpenVR::IVROverlay::_SetKeyboardPositionForOverlay::Invoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::HmdRect2_t avoidRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetKeyboardPositionForOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetKeyboardPositionForOverlay*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ulOverlayHandle, avoidRect);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetKeyboardPositionForOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetKeyboardPositionForOverlay::BeginInvoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::HmdRect2_t avoidRect, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetKeyboardPositionForOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetKeyboardPositionForOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, avoidRect, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetKeyboardPositionForOverlay.EndInvoke
void OVR::OpenVR::IVROverlay::_SetKeyboardPositionForOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetKeyboardPositionForOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetKeyboardPositionForOverlay*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayIntersectionMask
#include "OVR/OpenVR/IVROverlay__SetOverlayIntersectionMask.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.VROverlayIntersectionMaskPrimitive_t
#include "OVR/OpenVR/VROverlayIntersectionMaskPrimitive_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayIntersectionMask.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayIntersectionMask::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayIntersectionMaskPrimitive_t> pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayIntersectionMask::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayIntersectionMask*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pMaskPrimitives), unNumMaskPrimitives, unPrimitiveSize);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayIntersectionMask.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayIntersectionMask::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayIntersectionMaskPrimitive_t> pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayIntersectionMask::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayIntersectionMask*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pMaskPrimitives), unNumMaskPrimitives, unPrimitiveSize, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._SetOverlayIntersectionMask.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayIntersectionMask::EndInvoke(ByRef<::OVR::OpenVR::VROverlayIntersectionMaskPrimitive_t> pMaskPrimitives, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayIntersectionMask::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayIntersectionMask*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pMaskPrimitives), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayFlags
#include "OVR/OpenVR/IVROverlay__GetOverlayFlags.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayFlags.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayFlags::Invoke(uint64_t ulOverlayHandle, ByRef<uint> pFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayFlags::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayFlags*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pFlags));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayFlags.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayFlags::BeginInvoke(uint64_t ulOverlayHandle, ByRef<uint> pFlags, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayFlags::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayFlags*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pFlags), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._GetOverlayFlags.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayFlags::EndInvoke(ByRef<uint> pFlags, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayFlags::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayFlags*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pFlags), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowMessageOverlay
#include "OVR/OpenVR/IVROverlay__ShowMessageOverlay.hpp"
// Including type: OVR.OpenVR.VRMessageOverlayResponse
#include "OVR/OpenVR/VRMessageOverlayResponse.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowMessageOverlay.Invoke
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::IVROverlay::_ShowMessageOverlay::Invoke(::StringW pchText, ::StringW pchCaption, ::StringW pchButton0Text, ::StringW pchButton1Text, ::StringW pchButton2Text, ::StringW pchButton3Text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowMessageOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowMessageOverlay*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::VRMessageOverlayResponse, false>(this, ___internal__method, pchText, pchCaption, pchButton0Text, pchButton1Text, pchButton2Text, pchButton3Text);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowMessageOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_ShowMessageOverlay::BeginInvoke(::StringW pchText, ::StringW pchCaption, ::StringW pchButton0Text, ::StringW pchButton1Text, ::StringW pchButton2Text, ::StringW pchButton3Text, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowMessageOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowMessageOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchText, pchCaption, pchButton0Text, pchButton1Text, pchButton2Text, pchButton3Text, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._ShowMessageOverlay.EndInvoke
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::IVROverlay::_ShowMessageOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowMessageOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowMessageOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::VRMessageOverlayResponse, false>(this, ___internal__method, result);
}
