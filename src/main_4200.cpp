// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageMetadataUnderLocal
#include "Oculus/Platform/MessageWithCloudStorageMetadataUnderLocal.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadata
#include "Oculus/Platform/Models/CloudStorageMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageMetadataUnderLocal.GetDataFromMessage
::Oculus::Platform::Models::CloudStorageMetadata* Oculus::Platform::MessageWithCloudStorageMetadataUnderLocal::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCloudStorageMetadataUnderLocal::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithCloudStorageMetadataUnderLocal*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageMetadata*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageMetadataUnderLocal.GetCloudStorageMetadata
::Oculus::Platform::Models::CloudStorageMetadata* Oculus::Platform::MessageWithCloudStorageMetadataUnderLocal::GetCloudStorageMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCloudStorageMetadataUnderLocal::GetCloudStorageMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageMetadata*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageMetadataList
#include "Oculus/Platform/MessageWithCloudStorageMetadataList.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadataList
#include "Oculus/Platform/Models/CloudStorageMetadataList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageMetadataList.GetDataFromMessage
::Oculus::Platform::Models::CloudStorageMetadataList* Oculus::Platform::MessageWithCloudStorageMetadataList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCloudStorageMetadataList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithCloudStorageMetadataList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageMetadataList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageMetadataList.GetCloudStorageMetadataList
::Oculus::Platform::Models::CloudStorageMetadataList* Oculus::Platform::MessageWithCloudStorageMetadataList::GetCloudStorageMetadataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCloudStorageMetadataList::GetCloudStorageMetadataList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageMetadataList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageUpdateResponse
#include "Oculus/Platform/MessageWithCloudStorageUpdateResponse.hpp"
// Including type: Oculus.Platform.Models.CloudStorageUpdateResponse
#include "Oculus/Platform/Models/CloudStorageUpdateResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageUpdateResponse.GetDataFromMessage
::Oculus::Platform::Models::CloudStorageUpdateResponse* Oculus::Platform::MessageWithCloudStorageUpdateResponse::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCloudStorageUpdateResponse::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithCloudStorageUpdateResponse*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageUpdateResponse*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageUpdateResponse.GetCloudStorageUpdateResponse
::Oculus::Platform::Models::CloudStorageUpdateResponse* Oculus::Platform::MessageWithCloudStorageUpdateResponse::GetCloudStorageUpdateResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCloudStorageUpdateResponse::GetCloudStorageUpdateResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageUpdateResponse*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithDataStoreUnderPrivateUserDataStore
#include "Oculus/Platform/MessageWithDataStoreUnderPrivateUserDataStore.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithDataStoreUnderPrivateUserDataStore.GetDataFromMessage
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Oculus::Platform::MessageWithDataStoreUnderPrivateUserDataStore::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithDataStoreUnderPrivateUserDataStore::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithDataStoreUnderPrivateUserDataStore*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithDataStoreUnderPrivateUserDataStore.GetDataStore
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Oculus::Platform::MessageWithDataStoreUnderPrivateUserDataStore::GetDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithDataStoreUnderPrivateUserDataStore::GetDataStore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithDataStoreUnderPublicUserDataStore
#include "Oculus/Platform/MessageWithDataStoreUnderPublicUserDataStore.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithDataStoreUnderPublicUserDataStore.GetDataFromMessage
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Oculus::Platform::MessageWithDataStoreUnderPublicUserDataStore::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithDataStoreUnderPublicUserDataStore::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithDataStoreUnderPublicUserDataStore*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithDataStoreUnderPublicUserDataStore.GetDataStore
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Oculus::Platform::MessageWithDataStoreUnderPublicUserDataStore::GetDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithDataStoreUnderPublicUserDataStore::GetDataStore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithDestinationList
#include "Oculus/Platform/MessageWithDestinationList.hpp"
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithDestinationList.GetDataFromMessage
::Oculus::Platform::Models::DestinationList* Oculus::Platform::MessageWithDestinationList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithDestinationList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithDestinationList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::DestinationList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithDestinationList.GetDestinationList
::Oculus::Platform::Models::DestinationList* Oculus::Platform::MessageWithDestinationList::GetDestinationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithDestinationList::GetDestinationList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::DestinationList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithGroupPresenceJoinIntent
#include "Oculus/Platform/MessageWithGroupPresenceJoinIntent.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceJoinIntent
#include "Oculus/Platform/Models/GroupPresenceJoinIntent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithGroupPresenceJoinIntent.GetDataFromMessage
::Oculus::Platform::Models::GroupPresenceJoinIntent* Oculus::Platform::MessageWithGroupPresenceJoinIntent::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithGroupPresenceJoinIntent::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithGroupPresenceJoinIntent*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::GroupPresenceJoinIntent*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithGroupPresenceJoinIntent.GetGroupPresenceJoinIntent
::Oculus::Platform::Models::GroupPresenceJoinIntent* Oculus::Platform::MessageWithGroupPresenceJoinIntent::GetGroupPresenceJoinIntent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithGroupPresenceJoinIntent::GetGroupPresenceJoinIntent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::GroupPresenceJoinIntent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithGroupPresenceLeaveIntent
#include "Oculus/Platform/MessageWithGroupPresenceLeaveIntent.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceLeaveIntent
#include "Oculus/Platform/Models/GroupPresenceLeaveIntent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithGroupPresenceLeaveIntent.GetDataFromMessage
::Oculus::Platform::Models::GroupPresenceLeaveIntent* Oculus::Platform::MessageWithGroupPresenceLeaveIntent::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithGroupPresenceLeaveIntent::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithGroupPresenceLeaveIntent*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::GroupPresenceLeaveIntent*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithGroupPresenceLeaveIntent.GetGroupPresenceLeaveIntent
::Oculus::Platform::Models::GroupPresenceLeaveIntent* Oculus::Platform::MessageWithGroupPresenceLeaveIntent::GetGroupPresenceLeaveIntent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithGroupPresenceLeaveIntent::GetGroupPresenceLeaveIntent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::GroupPresenceLeaveIntent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithInstalledApplicationList
#include "Oculus/Platform/MessageWithInstalledApplicationList.hpp"
// Including type: Oculus.Platform.Models.InstalledApplicationList
#include "Oculus/Platform/Models/InstalledApplicationList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithInstalledApplicationList.GetDataFromMessage
::Oculus::Platform::Models::InstalledApplicationList* Oculus::Platform::MessageWithInstalledApplicationList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithInstalledApplicationList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithInstalledApplicationList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::InstalledApplicationList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithInstalledApplicationList.GetInstalledApplicationList
::Oculus::Platform::Models::InstalledApplicationList* Oculus::Platform::MessageWithInstalledApplicationList::GetInstalledApplicationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithInstalledApplicationList::GetInstalledApplicationList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::InstalledApplicationList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithInvitePanelResultInfo
#include "Oculus/Platform/MessageWithInvitePanelResultInfo.hpp"
// Including type: Oculus.Platform.Models.InvitePanelResultInfo
#include "Oculus/Platform/Models/InvitePanelResultInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithInvitePanelResultInfo.GetDataFromMessage
::Oculus::Platform::Models::InvitePanelResultInfo* Oculus::Platform::MessageWithInvitePanelResultInfo::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithInvitePanelResultInfo::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithInvitePanelResultInfo*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::InvitePanelResultInfo*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithInvitePanelResultInfo.GetInvitePanelResultInfo
::Oculus::Platform::Models::InvitePanelResultInfo* Oculus::Platform::MessageWithInvitePanelResultInfo::GetInvitePanelResultInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithInvitePanelResultInfo::GetInvitePanelResultInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::InvitePanelResultInfo*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchBlockFlowResult
#include "Oculus/Platform/MessageWithLaunchBlockFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchBlockFlowResult
#include "Oculus/Platform/Models/LaunchBlockFlowResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchBlockFlowResult.GetDataFromMessage
::Oculus::Platform::Models::LaunchBlockFlowResult* Oculus::Platform::MessageWithLaunchBlockFlowResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchBlockFlowResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLaunchBlockFlowResult*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchBlockFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchBlockFlowResult.GetLaunchBlockFlowResult
::Oculus::Platform::Models::LaunchBlockFlowResult* Oculus::Platform::MessageWithLaunchBlockFlowResult::GetLaunchBlockFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchBlockFlowResult::GetLaunchBlockFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchBlockFlowResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchFriendRequestFlowResult
#include "Oculus/Platform/MessageWithLaunchFriendRequestFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchFriendRequestFlowResult
#include "Oculus/Platform/Models/LaunchFriendRequestFlowResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchFriendRequestFlowResult.GetDataFromMessage
::Oculus::Platform::Models::LaunchFriendRequestFlowResult* Oculus::Platform::MessageWithLaunchFriendRequestFlowResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchFriendRequestFlowResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLaunchFriendRequestFlowResult*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchFriendRequestFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchFriendRequestFlowResult.GetLaunchFriendRequestFlowResult
::Oculus::Platform::Models::LaunchFriendRequestFlowResult* Oculus::Platform::MessageWithLaunchFriendRequestFlowResult::GetLaunchFriendRequestFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchFriendRequestFlowResult::GetLaunchFriendRequestFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchFriendRequestFlowResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchInvitePanelFlowResult
#include "Oculus/Platform/MessageWithLaunchInvitePanelFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchInvitePanelFlowResult
#include "Oculus/Platform/Models/LaunchInvitePanelFlowResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchInvitePanelFlowResult.GetDataFromMessage
::Oculus::Platform::Models::LaunchInvitePanelFlowResult* Oculus::Platform::MessageWithLaunchInvitePanelFlowResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchInvitePanelFlowResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLaunchInvitePanelFlowResult*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchInvitePanelFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchInvitePanelFlowResult.GetLaunchInvitePanelFlowResult
::Oculus::Platform::Models::LaunchInvitePanelFlowResult* Oculus::Platform::MessageWithLaunchInvitePanelFlowResult::GetLaunchInvitePanelFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchInvitePanelFlowResult::GetLaunchInvitePanelFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchInvitePanelFlowResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchReportFlowResult
#include "Oculus/Platform/MessageWithLaunchReportFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchReportFlowResult
#include "Oculus/Platform/Models/LaunchReportFlowResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchReportFlowResult.GetDataFromMessage
::Oculus::Platform::Models::LaunchReportFlowResult* Oculus::Platform::MessageWithLaunchReportFlowResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchReportFlowResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLaunchReportFlowResult*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchReportFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchReportFlowResult.GetLaunchReportFlowResult
::Oculus::Platform::Models::LaunchReportFlowResult* Oculus::Platform::MessageWithLaunchReportFlowResult::GetLaunchReportFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchReportFlowResult::GetLaunchReportFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 41));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchReportFlowResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchUnblockFlowResult
#include "Oculus/Platform/MessageWithLaunchUnblockFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchUnblockFlowResult
#include "Oculus/Platform/Models/LaunchUnblockFlowResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchUnblockFlowResult.GetDataFromMessage
::Oculus::Platform::Models::LaunchUnblockFlowResult* Oculus::Platform::MessageWithLaunchUnblockFlowResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchUnblockFlowResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLaunchUnblockFlowResult*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchUnblockFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchUnblockFlowResult.GetLaunchUnblockFlowResult
::Oculus::Platform::Models::LaunchUnblockFlowResult* Oculus::Platform::MessageWithLaunchUnblockFlowResult::GetLaunchUnblockFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchUnblockFlowResult::GetLaunchUnblockFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 42));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchUnblockFlowResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLeaderboardList
#include "Oculus/Platform/MessageWithLeaderboardList.hpp"
// Including type: Oculus.Platform.Models.LeaderboardList
#include "Oculus/Platform/Models/LeaderboardList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardList.GetDataFromMessage
::Oculus::Platform::Models::LeaderboardList* Oculus::Platform::MessageWithLeaderboardList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLeaderboardList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLeaderboardList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LeaderboardList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardList.GetLeaderboardList
::Oculus::Platform::Models::LeaderboardList* Oculus::Platform::MessageWithLeaderboardList::GetLeaderboardList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLeaderboardList::GetLeaderboardList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LeaderboardList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLeaderboardEntryList
#include "Oculus/Platform/MessageWithLeaderboardEntryList.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardEntryList.GetDataFromMessage
::Oculus::Platform::Models::LeaderboardEntryList* Oculus::Platform::MessageWithLeaderboardEntryList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLeaderboardEntryList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLeaderboardEntryList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LeaderboardEntryList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardEntryList.GetLeaderboardEntryList
::Oculus::Platform::Models::LeaderboardEntryList* Oculus::Platform::MessageWithLeaderboardEntryList::GetLeaderboardEntryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLeaderboardEntryList::GetLeaderboardEntryList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 44));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LeaderboardEntryList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLinkedAccountList
#include "Oculus/Platform/MessageWithLinkedAccountList.hpp"
// Including type: Oculus.Platform.Models.LinkedAccountList
#include "Oculus/Platform/Models/LinkedAccountList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLinkedAccountList.GetDataFromMessage
::Oculus::Platform::Models::LinkedAccountList* Oculus::Platform::MessageWithLinkedAccountList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLinkedAccountList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLinkedAccountList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LinkedAccountList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLinkedAccountList.GetLinkedAccountList
::Oculus::Platform::Models::LinkedAccountList* Oculus::Platform::MessageWithLinkedAccountList::GetLinkedAccountList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLinkedAccountList::GetLinkedAccountList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LinkedAccountList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLivestreamingApplicationStatus
#include "Oculus/Platform/MessageWithLivestreamingApplicationStatus.hpp"
// Including type: Oculus.Platform.Models.LivestreamingApplicationStatus
#include "Oculus/Platform/Models/LivestreamingApplicationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingApplicationStatus.GetDataFromMessage
::Oculus::Platform::Models::LivestreamingApplicationStatus* Oculus::Platform::MessageWithLivestreamingApplicationStatus::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLivestreamingApplicationStatus::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLivestreamingApplicationStatus*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingApplicationStatus*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingApplicationStatus.GetLivestreamingApplicationStatus
::Oculus::Platform::Models::LivestreamingApplicationStatus* Oculus::Platform::MessageWithLivestreamingApplicationStatus::GetLivestreamingApplicationStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLivestreamingApplicationStatus::GetLivestreamingApplicationStatus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingApplicationStatus*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLivestreamingStartResult
#include "Oculus/Platform/MessageWithLivestreamingStartResult.hpp"
// Including type: Oculus.Platform.Models.LivestreamingStartResult
#include "Oculus/Platform/Models/LivestreamingStartResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingStartResult.GetDataFromMessage
::Oculus::Platform::Models::LivestreamingStartResult* Oculus::Platform::MessageWithLivestreamingStartResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLivestreamingStartResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLivestreamingStartResult*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingStartResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingStartResult.GetLivestreamingStartResult
::Oculus::Platform::Models::LivestreamingStartResult* Oculus::Platform::MessageWithLivestreamingStartResult::GetLivestreamingStartResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLivestreamingStartResult::GetLivestreamingStartResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 48));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingStartResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLivestreamingStatus
#include "Oculus/Platform/MessageWithLivestreamingStatus.hpp"
// Including type: Oculus.Platform.Models.LivestreamingStatus
#include "Oculus/Platform/Models/LivestreamingStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingStatus.GetDataFromMessage
::Oculus::Platform::Models::LivestreamingStatus* Oculus::Platform::MessageWithLivestreamingStatus::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLivestreamingStatus::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLivestreamingStatus*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingStatus*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingStatus.GetLivestreamingStatus
::Oculus::Platform::Models::LivestreamingStatus* Oculus::Platform::MessageWithLivestreamingStatus::GetLivestreamingStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLivestreamingStatus::GetLivestreamingStatus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 49));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingStatus*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLivestreamingVideoStats
#include "Oculus/Platform/MessageWithLivestreamingVideoStats.hpp"
// Including type: Oculus.Platform.Models.LivestreamingVideoStats
#include "Oculus/Platform/Models/LivestreamingVideoStats.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingVideoStats.GetDataFromMessage
::Oculus::Platform::Models::LivestreamingVideoStats* Oculus::Platform::MessageWithLivestreamingVideoStats::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLivestreamingVideoStats::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLivestreamingVideoStats*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingVideoStats*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingVideoStats.GetLivestreamingVideoStats
::Oculus::Platform::Models::LivestreamingVideoStats* Oculus::Platform::MessageWithLivestreamingVideoStats::GetLivestreamingVideoStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLivestreamingVideoStats::GetLivestreamingVideoStats");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 50));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingVideoStats*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingAdminSnapshot
#include "Oculus/Platform/MessageWithMatchmakingAdminSnapshot.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingAdminSnapshot.GetDataFromMessage
::Oculus::Platform::Models::MatchmakingAdminSnapshot* Oculus::Platform::MessageWithMatchmakingAdminSnapshot::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithMatchmakingAdminSnapshot::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithMatchmakingAdminSnapshot*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingAdminSnapshot*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingAdminSnapshot.GetMatchmakingAdminSnapshot
::Oculus::Platform::Models::MatchmakingAdminSnapshot* Oculus::Platform::MessageWithMatchmakingAdminSnapshot::GetMatchmakingAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithMatchmakingAdminSnapshot::GetMatchmakingAdminSnapshot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 51));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingAdminSnapshot*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingEnqueueResult
#include "Oculus/Platform/MessageWithMatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingEnqueueResult.GetDataFromMessage
::Oculus::Platform::Models::MatchmakingEnqueueResult* Oculus::Platform::MessageWithMatchmakingEnqueueResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithMatchmakingEnqueueResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithMatchmakingEnqueueResult*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingEnqueueResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingEnqueueResult.GetMatchmakingEnqueueResult
::Oculus::Platform::Models::MatchmakingEnqueueResult* Oculus::Platform::MessageWithMatchmakingEnqueueResult::GetMatchmakingEnqueueResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithMatchmakingEnqueueResult::GetMatchmakingEnqueueResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 53));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingEnqueueResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/MessageWithMatchmakingEnqueueResultAndRoom.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingEnqueueResultAndRoom.GetDataFromMessage
::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom* Oculus::Platform::MessageWithMatchmakingEnqueueResultAndRoom::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithMatchmakingEnqueueResultAndRoom::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithMatchmakingEnqueueResultAndRoom*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingEnqueueResultAndRoom.GetMatchmakingEnqueueResultAndRoom
::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom* Oculus::Platform::MessageWithMatchmakingEnqueueResultAndRoom::GetMatchmakingEnqueueResultAndRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithMatchmakingEnqueueResultAndRoom::GetMatchmakingEnqueueResultAndRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 54));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingStatsUnderMatchmakingStats
#include "Oculus/Platform/MessageWithMatchmakingStatsUnderMatchmakingStats.hpp"
// Including type: Oculus.Platform.Models.MatchmakingStats
#include "Oculus/Platform/Models/MatchmakingStats.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingStatsUnderMatchmakingStats.GetDataFromMessage
::Oculus::Platform::Models::MatchmakingStats* Oculus::Platform::MessageWithMatchmakingStatsUnderMatchmakingStats::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithMatchmakingStatsUnderMatchmakingStats::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithMatchmakingStatsUnderMatchmakingStats*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingStats*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingStatsUnderMatchmakingStats.GetMatchmakingStats
::Oculus::Platform::Models::MatchmakingStats* Oculus::Platform::MessageWithMatchmakingStatsUnderMatchmakingStats::GetMatchmakingStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithMatchmakingStatsUnderMatchmakingStats::GetMatchmakingStats");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 55));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingStats*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMicrophoneAvailabilityState
#include "Oculus/Platform/MessageWithMicrophoneAvailabilityState.hpp"
// Including type: Oculus.Platform.Models.MicrophoneAvailabilityState
#include "Oculus/Platform/Models/MicrophoneAvailabilityState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMicrophoneAvailabilityState.GetDataFromMessage
::Oculus::Platform::Models::MicrophoneAvailabilityState* Oculus::Platform::MessageWithMicrophoneAvailabilityState::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithMicrophoneAvailabilityState::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithMicrophoneAvailabilityState*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MicrophoneAvailabilityState*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMicrophoneAvailabilityState.GetMicrophoneAvailabilityState
::Oculus::Platform::Models::MicrophoneAvailabilityState* Oculus::Platform::MessageWithMicrophoneAvailabilityState::GetMicrophoneAvailabilityState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithMicrophoneAvailabilityState::GetMicrophoneAvailabilityState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 56));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MicrophoneAvailabilityState*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetSyncConnection
#include "Oculus/Platform/MessageWithNetSyncConnection.hpp"
// Including type: Oculus.Platform.Models.NetSyncConnection
#include "Oculus/Platform/Models/NetSyncConnection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetSyncConnection.GetDataFromMessage
::Oculus::Platform::Models::NetSyncConnection* Oculus::Platform::MessageWithNetSyncConnection::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithNetSyncConnection::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithNetSyncConnection*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncConnection*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetSyncConnection.GetNetSyncConnection
::Oculus::Platform::Models::NetSyncConnection* Oculus::Platform::MessageWithNetSyncConnection::GetNetSyncConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithNetSyncConnection::GetNetSyncConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 57));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncConnection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetSyncSessionList
#include "Oculus/Platform/MessageWithNetSyncSessionList.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSessionList.GetDataFromMessage
::Oculus::Platform::Models::NetSyncSessionList* Oculus::Platform::MessageWithNetSyncSessionList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithNetSyncSessionList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithNetSyncSessionList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncSessionList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSessionList.GetNetSyncSessionList
::Oculus::Platform::Models::NetSyncSessionList* Oculus::Platform::MessageWithNetSyncSessionList::GetNetSyncSessionList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithNetSyncSessionList::GetNetSyncSessionList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 58));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncSessionList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetSyncSessionsChangedNotification
#include "Oculus/Platform/MessageWithNetSyncSessionsChangedNotification.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionsChangedNotification
#include "Oculus/Platform/Models/NetSyncSessionsChangedNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSessionsChangedNotification.GetDataFromMessage
::Oculus::Platform::Models::NetSyncSessionsChangedNotification* Oculus::Platform::MessageWithNetSyncSessionsChangedNotification::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithNetSyncSessionsChangedNotification::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithNetSyncSessionsChangedNotification*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncSessionsChangedNotification*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSessionsChangedNotification.GetNetSyncSessionsChangedNotification
::Oculus::Platform::Models::NetSyncSessionsChangedNotification* Oculus::Platform::MessageWithNetSyncSessionsChangedNotification::GetNetSyncSessionsChangedNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithNetSyncSessionsChangedNotification::GetNetSyncSessionsChangedNotification");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncSessionsChangedNotification*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetSyncSetSessionPropertyResult
#include "Oculus/Platform/MessageWithNetSyncSetSessionPropertyResult.hpp"
// Including type: Oculus.Platform.Models.NetSyncSetSessionPropertyResult
#include "Oculus/Platform/Models/NetSyncSetSessionPropertyResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSetSessionPropertyResult.GetDataFromMessage
::Oculus::Platform::Models::NetSyncSetSessionPropertyResult* Oculus::Platform::MessageWithNetSyncSetSessionPropertyResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithNetSyncSetSessionPropertyResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithNetSyncSetSessionPropertyResult*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncSetSessionPropertyResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSetSessionPropertyResult.GetNetSyncSetSessionPropertyResult
::Oculus::Platform::Models::NetSyncSetSessionPropertyResult* Oculus::Platform::MessageWithNetSyncSetSessionPropertyResult::GetNetSyncSetSessionPropertyResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithNetSyncSetSessionPropertyResult::GetNetSyncSetSessionPropertyResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 60));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncSetSessionPropertyResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetSyncVoipAttenuationValueList
#include "Oculus/Platform/MessageWithNetSyncVoipAttenuationValueList.hpp"
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValueList
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValueList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetSyncVoipAttenuationValueList.GetDataFromMessage
::Oculus::Platform::Models::NetSyncVoipAttenuationValueList* Oculus::Platform::MessageWithNetSyncVoipAttenuationValueList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithNetSyncVoipAttenuationValueList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithNetSyncVoipAttenuationValueList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncVoipAttenuationValueList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetSyncVoipAttenuationValueList.GetNetSyncVoipAttenuationValueList
::Oculus::Platform::Models::NetSyncVoipAttenuationValueList* Oculus::Platform::MessageWithNetSyncVoipAttenuationValueList::GetNetSyncVoipAttenuationValueList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithNetSyncVoipAttenuationValueList::GetNetSyncVoipAttenuationValueList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncVoipAttenuationValueList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithOrgScopedID
#include "Oculus/Platform/MessageWithOrgScopedID.hpp"
// Including type: Oculus.Platform.Models.OrgScopedID
#include "Oculus/Platform/Models/OrgScopedID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithOrgScopedID.GetDataFromMessage
::Oculus::Platform::Models::OrgScopedID* Oculus::Platform::MessageWithOrgScopedID::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithOrgScopedID::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithOrgScopedID*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::OrgScopedID*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithOrgScopedID.GetOrgScopedID
::Oculus::Platform::Models::OrgScopedID* Oculus::Platform::MessageWithOrgScopedID::GetOrgScopedID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithOrgScopedID::GetOrgScopedID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 62));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::OrgScopedID*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithParty
#include "Oculus/Platform/MessageWithParty.hpp"
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithParty.GetDataFromMessage
::Oculus::Platform::Models::Party* Oculus::Platform::MessageWithParty::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithParty::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithParty*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Party*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithParty.GetParty
::Oculus::Platform::Models::Party* Oculus::Platform::MessageWithParty::GetParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithParty::GetParty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 63));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Party*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPartyUnderCurrentParty
#include "Oculus/Platform/MessageWithPartyUnderCurrentParty.hpp"
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPartyUnderCurrentParty.GetDataFromMessage
::Oculus::Platform::Models::Party* Oculus::Platform::MessageWithPartyUnderCurrentParty::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithPartyUnderCurrentParty::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithPartyUnderCurrentParty*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Party*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPartyUnderCurrentParty.GetParty
::Oculus::Platform::Models::Party* Oculus::Platform::MessageWithPartyUnderCurrentParty::GetParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithPartyUnderCurrentParty::GetParty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 63));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Party*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPartyID
#include "Oculus/Platform/MessageWithPartyID.hpp"
// Including type: Oculus.Platform.Models.PartyID
#include "Oculus/Platform/Models/PartyID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPartyID.GetDataFromMessage
::Oculus::Platform::Models::PartyID* Oculus::Platform::MessageWithPartyID::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithPartyID::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithPartyID*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PartyID*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPartyID.GetPartyID
::Oculus::Platform::Models::PartyID* Oculus::Platform::MessageWithPartyID::GetPartyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithPartyID::GetPartyID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 64));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PartyID*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPartyUpdateNotification
#include "Oculus/Platform/MessageWithPartyUpdateNotification.hpp"
// Including type: Oculus.Platform.Models.PartyUpdateNotification
#include "Oculus/Platform/Models/PartyUpdateNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPartyUpdateNotification.GetDataFromMessage
::Oculus::Platform::Models::PartyUpdateNotification* Oculus::Platform::MessageWithPartyUpdateNotification::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithPartyUpdateNotification::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithPartyUpdateNotification*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PartyUpdateNotification*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPartyUpdateNotification.GetPartyUpdateNotification
::Oculus::Platform::Models::PartyUpdateNotification* Oculus::Platform::MessageWithPartyUpdateNotification::GetPartyUpdateNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithPartyUpdateNotification::GetPartyUpdateNotification");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 65));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PartyUpdateNotification*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPidList
#include "Oculus/Platform/MessageWithPidList.hpp"
// Including type: Oculus.Platform.Models.PidList
#include "Oculus/Platform/Models/PidList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPidList.GetDataFromMessage
::Oculus::Platform::Models::PidList* Oculus::Platform::MessageWithPidList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithPidList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithPidList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PidList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPidList.GetPidList
::Oculus::Platform::Models::PidList* Oculus::Platform::MessageWithPidList::GetPidList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithPidList::GetPidList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 66));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PidList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithProductList
#include "Oculus/Platform/MessageWithProductList.hpp"
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithProductList.GetDataFromMessage
::Oculus::Platform::Models::ProductList* Oculus::Platform::MessageWithProductList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithProductList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithProductList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ProductList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithProductList.GetProductList
::Oculus::Platform::Models::ProductList* Oculus::Platform::MessageWithProductList::GetProductList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithProductList::GetProductList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 67));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ProductList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPurchase
#include "Oculus/Platform/MessageWithPurchase.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPurchase.GetDataFromMessage
::Oculus::Platform::Models::Purchase* Oculus::Platform::MessageWithPurchase::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithPurchase::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithPurchase*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Purchase*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPurchase.GetPurchase
::Oculus::Platform::Models::Purchase* Oculus::Platform::MessageWithPurchase::GetPurchase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithPurchase::GetPurchase");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 68));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Purchase*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPurchaseList
#include "Oculus/Platform/MessageWithPurchaseList.hpp"
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPurchaseList.GetDataFromMessage
::Oculus::Platform::Models::PurchaseList* Oculus::Platform::MessageWithPurchaseList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithPurchaseList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithPurchaseList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PurchaseList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPurchaseList.GetPurchaseList
::Oculus::Platform::Models::PurchaseList* Oculus::Platform::MessageWithPurchaseList::GetPurchaseList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithPurchaseList::GetPurchaseList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 69));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PurchaseList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRejoinDialogResult
#include "Oculus/Platform/MessageWithRejoinDialogResult.hpp"
// Including type: Oculus.Platform.Models.RejoinDialogResult
#include "Oculus/Platform/Models/RejoinDialogResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRejoinDialogResult.GetDataFromMessage
::Oculus::Platform::Models::RejoinDialogResult* Oculus::Platform::MessageWithRejoinDialogResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithRejoinDialogResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithRejoinDialogResult*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::RejoinDialogResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRejoinDialogResult.GetRejoinDialogResult
::Oculus::Platform::Models::RejoinDialogResult* Oculus::Platform::MessageWithRejoinDialogResult::GetRejoinDialogResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithRejoinDialogResult::GetRejoinDialogResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 70));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::RejoinDialogResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoom
#include "Oculus/Platform/MessageWithRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoom.GetDataFromMessage
::Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoom::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithRoom::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithRoom*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Room*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoom.GetRoom
::Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoom::GetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithRoom::GetRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 71));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomUnderCurrentRoom
#include "Oculus/Platform/MessageWithRoomUnderCurrentRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomUnderCurrentRoom.GetDataFromMessage
::Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoomUnderCurrentRoom::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithRoomUnderCurrentRoom::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithRoomUnderCurrentRoom*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Room*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomUnderCurrentRoom.GetRoom
::Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoomUnderCurrentRoom::GetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithRoomUnderCurrentRoom::GetRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 71));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomUnderViewerRoom
#include "Oculus/Platform/MessageWithRoomUnderViewerRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomUnderViewerRoom.GetDataFromMessage
::Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoomUnderViewerRoom::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithRoomUnderViewerRoom::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithRoomUnderViewerRoom*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Room*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomUnderViewerRoom.GetRoom
::Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoomUnderViewerRoom::GetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithRoomUnderViewerRoom::GetRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 71));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomList
#include "Oculus/Platform/MessageWithRoomList.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomList.GetDataFromMessage
::Oculus::Platform::Models::RoomList* Oculus::Platform::MessageWithRoomList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithRoomList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithRoomList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::RoomList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomList.GetRoomList
::Oculus::Platform::Models::RoomList* Oculus::Platform::MessageWithRoomList::GetRoomList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithRoomList::GetRoomList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 74));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::RoomList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomInviteNotification
#include "Oculus/Platform/MessageWithRoomInviteNotification.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomInviteNotification.GetDataFromMessage
::Oculus::Platform::Models::RoomInviteNotification* Oculus::Platform::MessageWithRoomInviteNotification::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithRoomInviteNotification::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithRoomInviteNotification*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::RoomInviteNotification*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomInviteNotification.GetRoomInviteNotification
::Oculus::Platform::Models::RoomInviteNotification* Oculus::Platform::MessageWithRoomInviteNotification::GetRoomInviteNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithRoomInviteNotification::GetRoomInviteNotification");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::RoomInviteNotification*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomInviteNotificationList
#include "Oculus/Platform/MessageWithRoomInviteNotificationList.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotificationList
#include "Oculus/Platform/Models/RoomInviteNotificationList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomInviteNotificationList.GetDataFromMessage
::Oculus::Platform::Models::RoomInviteNotificationList* Oculus::Platform::MessageWithRoomInviteNotificationList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithRoomInviteNotificationList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithRoomInviteNotificationList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::RoomInviteNotificationList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomInviteNotificationList.GetRoomInviteNotificationList
::Oculus::Platform::Models::RoomInviteNotificationList* Oculus::Platform::MessageWithRoomInviteNotificationList::GetRoomInviteNotificationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithRoomInviteNotificationList::GetRoomInviteNotificationList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 73));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::RoomInviteNotificationList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithSdkAccountList
#include "Oculus/Platform/MessageWithSdkAccountList.hpp"
// Including type: Oculus.Platform.Models.SdkAccountList
#include "Oculus/Platform/Models/SdkAccountList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithSdkAccountList.GetDataFromMessage
::Oculus::Platform::Models::SdkAccountList* Oculus::Platform::MessageWithSdkAccountList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithSdkAccountList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithSdkAccountList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::SdkAccountList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithSdkAccountList.GetSdkAccountList
::Oculus::Platform::Models::SdkAccountList* Oculus::Platform::MessageWithSdkAccountList::GetSdkAccountList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithSdkAccountList::GetSdkAccountList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 75));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::SdkAccountList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithSendInvitesResult
#include "Oculus/Platform/MessageWithSendInvitesResult.hpp"
// Including type: Oculus.Platform.Models.SendInvitesResult
#include "Oculus/Platform/Models/SendInvitesResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithSendInvitesResult.GetDataFromMessage
::Oculus::Platform::Models::SendInvitesResult* Oculus::Platform::MessageWithSendInvitesResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithSendInvitesResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithSendInvitesResult*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::SendInvitesResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithSendInvitesResult.GetSendInvitesResult
::Oculus::Platform::Models::SendInvitesResult* Oculus::Platform::MessageWithSendInvitesResult::GetSendInvitesResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithSendInvitesResult::GetSendInvitesResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 76));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::SendInvitesResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithShareMediaResult
#include "Oculus/Platform/MessageWithShareMediaResult.hpp"
// Including type: Oculus.Platform.Models.ShareMediaResult
#include "Oculus/Platform/Models/ShareMediaResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithShareMediaResult.GetDataFromMessage
::Oculus::Platform::Models::ShareMediaResult* Oculus::Platform::MessageWithShareMediaResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithShareMediaResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithShareMediaResult*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ShareMediaResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithShareMediaResult.GetShareMediaResult
::Oculus::Platform::Models::ShareMediaResult* Oculus::Platform::MessageWithShareMediaResult::GetShareMediaResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithShareMediaResult::GetShareMediaResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 77));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ShareMediaResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithString
#include "Oculus/Platform/MessageWithString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithString.GetDataFromMessage
::StringW Oculus::Platform::MessageWithString::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithString::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithString*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithString.GetString
::StringW Oculus::Platform::MessageWithString::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithString::GetString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 78));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithSystemVoipState
#include "Oculus/Platform/MessageWithSystemVoipState.hpp"
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithSystemVoipState.GetDataFromMessage
::Oculus::Platform::Models::SystemVoipState* Oculus::Platform::MessageWithSystemVoipState::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithSystemVoipState::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithSystemVoipState*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::SystemVoipState*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithSystemVoipState.GetSystemVoipState
::Oculus::Platform::Models::SystemVoipState* Oculus::Platform::MessageWithSystemVoipState::GetSystemVoipState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithSystemVoipState::GetSystemVoipState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 79));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::SystemVoipState*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUser
#include "Oculus/Platform/MessageWithUser.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUser.GetDataFromMessage
::Oculus::Platform::Models::User* Oculus::Platform::MessageWithUser::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithUser::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithUser*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::User*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUser.GetUser
::Oculus::Platform::Models::User* Oculus::Platform::MessageWithUser::GetUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithUser::GetUser");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 80));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::User*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUserAndRoomList
#include "Oculus/Platform/MessageWithUserAndRoomList.hpp"
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUserAndRoomList.GetDataFromMessage
::Oculus::Platform::Models::UserAndRoomList* Oculus::Platform::MessageWithUserAndRoomList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithUserAndRoomList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithUserAndRoomList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserAndRoomList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUserAndRoomList.GetUserAndRoomList
::Oculus::Platform::Models::UserAndRoomList* Oculus::Platform::MessageWithUserAndRoomList::GetUserAndRoomList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithUserAndRoomList::GetUserAndRoomList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 81));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserAndRoomList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUserList
#include "Oculus/Platform/MessageWithUserList.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUserList.GetDataFromMessage
::Oculus::Platform::Models::UserList* Oculus::Platform::MessageWithUserList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithUserList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithUserList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUserList.GetUserList
::Oculus::Platform::Models::UserList* Oculus::Platform::MessageWithUserList::GetUserList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithUserList::GetUserList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 83));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUserDataStoreUpdateResponse
#include "Oculus/Platform/MessageWithUserDataStoreUpdateResponse.hpp"
// Including type: Oculus.Platform.Models.UserDataStoreUpdateResponse
#include "Oculus/Platform/Models/UserDataStoreUpdateResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUserDataStoreUpdateResponse.GetDataFromMessage
::Oculus::Platform::Models::UserDataStoreUpdateResponse* Oculus::Platform::MessageWithUserDataStoreUpdateResponse::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithUserDataStoreUpdateResponse::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithUserDataStoreUpdateResponse*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserDataStoreUpdateResponse*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUserDataStoreUpdateResponse.GetUserDataStoreUpdateResponse
::Oculus::Platform::Models::UserDataStoreUpdateResponse* Oculus::Platform::MessageWithUserDataStoreUpdateResponse::GetUserDataStoreUpdateResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithUserDataStoreUpdateResponse::GetUserDataStoreUpdateResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 82));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserDataStoreUpdateResponse*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUserProof
#include "Oculus/Platform/MessageWithUserProof.hpp"
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUserProof.GetDataFromMessage
::Oculus::Platform::Models::UserProof* Oculus::Platform::MessageWithUserProof::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithUserProof::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithUserProof*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserProof*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUserProof.GetUserProof
::Oculus::Platform::Models::UserProof* Oculus::Platform::MessageWithUserProof::GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithUserProof::GetUserProof");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 84));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserProof*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUserReportID
#include "Oculus/Platform/MessageWithUserReportID.hpp"
// Including type: Oculus.Platform.Models.UserReportID
#include "Oculus/Platform/Models/UserReportID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUserReportID.GetDataFromMessage
::Oculus::Platform::Models::UserReportID* Oculus::Platform::MessageWithUserReportID::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithUserReportID::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithUserReportID*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserReportID*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUserReportID.GetUserReportID
::Oculus::Platform::Models::UserReportID* Oculus::Platform::MessageWithUserReportID::GetUserReportID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithUserReportID::GetUserReportID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 85));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserReportID*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetworkingPeer
#include "Oculus/Platform/MessageWithNetworkingPeer.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetworkingPeer.GetDataFromMessage
::Oculus::Platform::Models::NetworkingPeer* Oculus::Platform::MessageWithNetworkingPeer::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithNetworkingPeer::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithNetworkingPeer*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetworkingPeer*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetworkingPeer.GetNetworkingPeer
::Oculus::Platform::Models::NetworkingPeer* Oculus::Platform::MessageWithNetworkingPeer::GetNetworkingPeer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithNetworkingPeer::GetNetworkingPeer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetworkingPeer*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPingResult
#include "Oculus/Platform/MessageWithPingResult.hpp"
// Including type: Oculus.Platform.Models.PingResult
#include "Oculus/Platform/Models/PingResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPingResult.GetDataFromMessage
::Oculus::Platform::Models::PingResult* Oculus::Platform::MessageWithPingResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithPingResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithPingResult*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PingResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPingResult.GetPingResult
::Oculus::Platform::Models::PingResult* Oculus::Platform::MessageWithPingResult::GetPingResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithPingResult::GetPingResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PingResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLeaderboardDidUpdate
#include "Oculus/Platform/MessageWithLeaderboardDidUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardDidUpdate.GetDataFromMessage
bool Oculus::Platform::MessageWithLeaderboardDidUpdate::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLeaderboardDidUpdate::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLeaderboardDidUpdate*), 86));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardDidUpdate.GetLeaderboardDidUpdate
bool Oculus::Platform::MessageWithLeaderboardDidUpdate::GetLeaderboardDidUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLeaderboardDidUpdate::GetLeaderboardDidUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 43));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingNotification
#include "Oculus/Platform/MessageWithMatchmakingNotification.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingNotification.GetDataFromMessage
::Oculus::Platform::Models::Room* Oculus::Platform::MessageWithMatchmakingNotification::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithMatchmakingNotification::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithMatchmakingNotification*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Room*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingNotification.GetRoom
::Oculus::Platform::Models::Room* Oculus::Platform::MessageWithMatchmakingNotification::GetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithMatchmakingNotification::GetRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 71));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingBrowseResult
#include "Oculus/Platform/MessageWithMatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingBrowseResult
#include "Oculus/Platform/Models/MatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingBrowseResult.GetDataFromMessage
::Oculus::Platform::Models::MatchmakingBrowseResult* Oculus::Platform::MessageWithMatchmakingBrowseResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithMatchmakingBrowseResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithMatchmakingBrowseResult*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingBrowseResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingBrowseResult.GetMatchmakingEnqueueResult
::Oculus::Platform::Models::MatchmakingEnqueueResult* Oculus::Platform::MessageWithMatchmakingBrowseResult::GetMatchmakingEnqueueResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithMatchmakingBrowseResult::GetMatchmakingEnqueueResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 53));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingEnqueueResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingBrowseResult.GetRoomList
::Oculus::Platform::Models::RoomList* Oculus::Platform::MessageWithMatchmakingBrowseResult::GetRoomList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithMatchmakingBrowseResult::GetRoomList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 74));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::RoomList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithHttpTransferUpdate
#include "Oculus/Platform/MessageWithHttpTransferUpdate.hpp"
// Including type: Oculus.Platform.Models.HttpTransferUpdate
#include "Oculus/Platform/Models/HttpTransferUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithHttpTransferUpdate.GetDataFromMessage
::Oculus::Platform::Models::HttpTransferUpdate* Oculus::Platform::MessageWithHttpTransferUpdate::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithHttpTransferUpdate::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithHttpTransferUpdate*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::HttpTransferUpdate*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithHttpTransferUpdate.GetHttpTransferUpdate
::Oculus::Platform::Models::HttpTransferUpdate* Oculus::Platform::MessageWithHttpTransferUpdate::GetHttpTransferUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithHttpTransferUpdate::GetHttpTransferUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::HttpTransferUpdate*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPlatformInitialize
#include "Oculus/Platform/MessageWithPlatformInitialize.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPlatformInitialize.GetDataFromMessage
::Oculus::Platform::Models::PlatformInitialize* Oculus::Platform::MessageWithPlatformInitialize::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithPlatformInitialize::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithPlatformInitialize*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PlatformInitialize*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPlatformInitialize.GetPlatformInitialize
::Oculus::Platform::Models::PlatformInitialize* Oculus::Platform::MessageWithPlatformInitialize::GetPlatformInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithPlatformInitialize::GetPlatformInitialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PlatformInitialize*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MultiplayerErrorErrorKey
#include "Oculus/Platform/MultiplayerErrorErrorKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B7610
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MultiplayerErrorErrorKey Unknown
::Oculus::Platform::MultiplayerErrorErrorKey Oculus::Platform::MultiplayerErrorErrorKey::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MultiplayerErrorErrorKey>("Oculus.Platform", "MultiplayerErrorErrorKey", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MultiplayerErrorErrorKey Unknown
void Oculus::Platform::MultiplayerErrorErrorKey::_set_Unknown(::Oculus::Platform::MultiplayerErrorErrorKey value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MultiplayerErrorErrorKey", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B7648
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MultiplayerErrorErrorKey DestinationUnavailable
::Oculus::Platform::MultiplayerErrorErrorKey Oculus::Platform::MultiplayerErrorErrorKey::_get_DestinationUnavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_get_DestinationUnavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MultiplayerErrorErrorKey>("Oculus.Platform", "MultiplayerErrorErrorKey", "DestinationUnavailable"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MultiplayerErrorErrorKey DestinationUnavailable
void Oculus::Platform::MultiplayerErrorErrorKey::_set_DestinationUnavailable(::Oculus::Platform::MultiplayerErrorErrorKey value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_set_DestinationUnavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MultiplayerErrorErrorKey", "DestinationUnavailable", value));
}
// [DescriptionAttribute] Offset: 0x6B7680
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MultiplayerErrorErrorKey DlcRequired
::Oculus::Platform::MultiplayerErrorErrorKey Oculus::Platform::MultiplayerErrorErrorKey::_get_DlcRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_get_DlcRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MultiplayerErrorErrorKey>("Oculus.Platform", "MultiplayerErrorErrorKey", "DlcRequired"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MultiplayerErrorErrorKey DlcRequired
void Oculus::Platform::MultiplayerErrorErrorKey::_set_DlcRequired(::Oculus::Platform::MultiplayerErrorErrorKey value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_set_DlcRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MultiplayerErrorErrorKey", "DlcRequired", value));
}
// [DescriptionAttribute] Offset: 0x6B76B8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MultiplayerErrorErrorKey General
::Oculus::Platform::MultiplayerErrorErrorKey Oculus::Platform::MultiplayerErrorErrorKey::_get_General() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_get_General");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MultiplayerErrorErrorKey>("Oculus.Platform", "MultiplayerErrorErrorKey", "General"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MultiplayerErrorErrorKey General
void Oculus::Platform::MultiplayerErrorErrorKey::_set_General(::Oculus::Platform::MultiplayerErrorErrorKey value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_set_General");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MultiplayerErrorErrorKey", "General", value));
}
// [DescriptionAttribute] Offset: 0x6B76F0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MultiplayerErrorErrorKey GroupFull
::Oculus::Platform::MultiplayerErrorErrorKey Oculus::Platform::MultiplayerErrorErrorKey::_get_GroupFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_get_GroupFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MultiplayerErrorErrorKey>("Oculus.Platform", "MultiplayerErrorErrorKey", "GroupFull"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MultiplayerErrorErrorKey GroupFull
void Oculus::Platform::MultiplayerErrorErrorKey::_set_GroupFull(::Oculus::Platform::MultiplayerErrorErrorKey value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_set_GroupFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MultiplayerErrorErrorKey", "GroupFull", value));
}
// [DescriptionAttribute] Offset: 0x6B7728
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MultiplayerErrorErrorKey InviterNotJoinable
::Oculus::Platform::MultiplayerErrorErrorKey Oculus::Platform::MultiplayerErrorErrorKey::_get_InviterNotJoinable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_get_InviterNotJoinable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MultiplayerErrorErrorKey>("Oculus.Platform", "MultiplayerErrorErrorKey", "InviterNotJoinable"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MultiplayerErrorErrorKey InviterNotJoinable
void Oculus::Platform::MultiplayerErrorErrorKey::_set_InviterNotJoinable(::Oculus::Platform::MultiplayerErrorErrorKey value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_set_InviterNotJoinable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MultiplayerErrorErrorKey", "InviterNotJoinable", value));
}
// [DescriptionAttribute] Offset: 0x6B7760
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MultiplayerErrorErrorKey LevelNotHighEnough
::Oculus::Platform::MultiplayerErrorErrorKey Oculus::Platform::MultiplayerErrorErrorKey::_get_LevelNotHighEnough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_get_LevelNotHighEnough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MultiplayerErrorErrorKey>("Oculus.Platform", "MultiplayerErrorErrorKey", "LevelNotHighEnough"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MultiplayerErrorErrorKey LevelNotHighEnough
void Oculus::Platform::MultiplayerErrorErrorKey::_set_LevelNotHighEnough(::Oculus::Platform::MultiplayerErrorErrorKey value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_set_LevelNotHighEnough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MultiplayerErrorErrorKey", "LevelNotHighEnough", value));
}
// [DescriptionAttribute] Offset: 0x6B7798
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MultiplayerErrorErrorKey LevelNotUnlocked
::Oculus::Platform::MultiplayerErrorErrorKey Oculus::Platform::MultiplayerErrorErrorKey::_get_LevelNotUnlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_get_LevelNotUnlocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MultiplayerErrorErrorKey>("Oculus.Platform", "MultiplayerErrorErrorKey", "LevelNotUnlocked"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MultiplayerErrorErrorKey LevelNotUnlocked
void Oculus::Platform::MultiplayerErrorErrorKey::_set_LevelNotUnlocked(::Oculus::Platform::MultiplayerErrorErrorKey value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_set_LevelNotUnlocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MultiplayerErrorErrorKey", "LevelNotUnlocked", value));
}
// [DescriptionAttribute] Offset: 0x6B77D0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MultiplayerErrorErrorKey NetworkTimeout
::Oculus::Platform::MultiplayerErrorErrorKey Oculus::Platform::MultiplayerErrorErrorKey::_get_NetworkTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_get_NetworkTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MultiplayerErrorErrorKey>("Oculus.Platform", "MultiplayerErrorErrorKey", "NetworkTimeout"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MultiplayerErrorErrorKey NetworkTimeout
void Oculus::Platform::MultiplayerErrorErrorKey::_set_NetworkTimeout(::Oculus::Platform::MultiplayerErrorErrorKey value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_set_NetworkTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MultiplayerErrorErrorKey", "NetworkTimeout", value));
}
// [DescriptionAttribute] Offset: 0x6B7808
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MultiplayerErrorErrorKey NoLongerAvailable
::Oculus::Platform::MultiplayerErrorErrorKey Oculus::Platform::MultiplayerErrorErrorKey::_get_NoLongerAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_get_NoLongerAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MultiplayerErrorErrorKey>("Oculus.Platform", "MultiplayerErrorErrorKey", "NoLongerAvailable"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MultiplayerErrorErrorKey NoLongerAvailable
void Oculus::Platform::MultiplayerErrorErrorKey::_set_NoLongerAvailable(::Oculus::Platform::MultiplayerErrorErrorKey value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_set_NoLongerAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MultiplayerErrorErrorKey", "NoLongerAvailable", value));
}
// [DescriptionAttribute] Offset: 0x6B7840
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MultiplayerErrorErrorKey UpdateRequired
::Oculus::Platform::MultiplayerErrorErrorKey Oculus::Platform::MultiplayerErrorErrorKey::_get_UpdateRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_get_UpdateRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MultiplayerErrorErrorKey>("Oculus.Platform", "MultiplayerErrorErrorKey", "UpdateRequired"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MultiplayerErrorErrorKey UpdateRequired
void Oculus::Platform::MultiplayerErrorErrorKey::_set_UpdateRequired(::Oculus::Platform::MultiplayerErrorErrorKey value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_set_UpdateRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MultiplayerErrorErrorKey", "UpdateRequired", value));
}
// [DescriptionAttribute] Offset: 0x6B7878
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MultiplayerErrorErrorKey TutorialRequired
::Oculus::Platform::MultiplayerErrorErrorKey Oculus::Platform::MultiplayerErrorErrorKey::_get_TutorialRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_get_TutorialRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MultiplayerErrorErrorKey>("Oculus.Platform", "MultiplayerErrorErrorKey", "TutorialRequired"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MultiplayerErrorErrorKey TutorialRequired
void Oculus::Platform::MultiplayerErrorErrorKey::_set_TutorialRequired(::Oculus::Platform::MultiplayerErrorErrorKey value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::_set_TutorialRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MultiplayerErrorErrorKey", "TutorialRequired", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::MultiplayerErrorErrorKey::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorErrorKey::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.MultiplayerErrorOptions
#include "Oculus/Platform/MultiplayerErrorOptions.hpp"
// Including type: Oculus.Platform.MultiplayerErrorErrorKey
#include "Oculus/Platform/MultiplayerErrorErrorKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::MultiplayerErrorOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.MultiplayerErrorOptions.SetErrorKey
void Oculus::Platform::MultiplayerErrorOptions::SetErrorKey(::Oculus::Platform::MultiplayerErrorErrorKey value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorOptions::SetErrorKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetErrorKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.MultiplayerErrorOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::MultiplayerErrorOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.MultiplayerErrorOptions.Finalize
void Oculus::Platform::MultiplayerErrorOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MultiplayerErrorOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.NetSyncConnectionStatus
#include "Oculus/Platform/NetSyncConnectionStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B78B0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncConnectionStatus Unknown
::Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::NetSyncConnectionStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncConnectionStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::NetSyncConnectionStatus>("Oculus.Platform", "NetSyncConnectionStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncConnectionStatus Unknown
void Oculus::Platform::NetSyncConnectionStatus::_set_Unknown(::Oculus::Platform::NetSyncConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncConnectionStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncConnectionStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B78E8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncConnectionStatus Connecting
::Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::NetSyncConnectionStatus::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncConnectionStatus::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::NetSyncConnectionStatus>("Oculus.Platform", "NetSyncConnectionStatus", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncConnectionStatus Connecting
void Oculus::Platform::NetSyncConnectionStatus::_set_Connecting(::Oculus::Platform::NetSyncConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncConnectionStatus::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncConnectionStatus", "Connecting", value));
}
// [DescriptionAttribute] Offset: 0x6B7920
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncConnectionStatus Disconnected
::Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::NetSyncConnectionStatus::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncConnectionStatus::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::NetSyncConnectionStatus>("Oculus.Platform", "NetSyncConnectionStatus", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncConnectionStatus Disconnected
void Oculus::Platform::NetSyncConnectionStatus::_set_Disconnected(::Oculus::Platform::NetSyncConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncConnectionStatus::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncConnectionStatus", "Disconnected", value));
}
// [DescriptionAttribute] Offset: 0x6B7958
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncConnectionStatus Connected
::Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::NetSyncConnectionStatus::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncConnectionStatus::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::NetSyncConnectionStatus>("Oculus.Platform", "NetSyncConnectionStatus", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncConnectionStatus Connected
void Oculus::Platform::NetSyncConnectionStatus::_set_Connected(::Oculus::Platform::NetSyncConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncConnectionStatus::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncConnectionStatus", "Connected", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::NetSyncConnectionStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncConnectionStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.NetSyncDisconnectReason
#include "Oculus/Platform/NetSyncDisconnectReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B7990
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason Unknown
::Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncDisconnectReason::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason Unknown
void Oculus::Platform::NetSyncDisconnectReason::_set_Unknown(::Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncDisconnectReason::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B79C8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason LocalTerminated
::Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_LocalTerminated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncDisconnectReason::_get_LocalTerminated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "LocalTerminated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason LocalTerminated
void Oculus::Platform::NetSyncDisconnectReason::_set_LocalTerminated(::Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncDisconnectReason::_set_LocalTerminated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "LocalTerminated", value));
}
// [DescriptionAttribute] Offset: 0x6B7A00
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason ServerTerminated
::Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_ServerTerminated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncDisconnectReason::_get_ServerTerminated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "ServerTerminated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason ServerTerminated
void Oculus::Platform::NetSyncDisconnectReason::_set_ServerTerminated(::Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncDisconnectReason::_set_ServerTerminated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "ServerTerminated", value));
}
// [DescriptionAttribute] Offset: 0x6B7A38
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason Failed
::Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncDisconnectReason::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason Failed
void Oculus::Platform::NetSyncDisconnectReason::_set_Failed(::Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncDisconnectReason::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "Failed", value));
}
// [DescriptionAttribute] Offset: 0x6B7A70
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason Lost
::Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_Lost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncDisconnectReason::_get_Lost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "Lost"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason Lost
void Oculus::Platform::NetSyncDisconnectReason::_set_Lost(::Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncDisconnectReason::_set_Lost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "Lost", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::NetSyncDisconnectReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncDisconnectReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.NetSyncOptions
#include "Oculus/Platform/NetSyncOptions.hpp"
// Including type: Oculus.Platform.NetSyncVoipStreamMode
#include "Oculus/Platform/NetSyncVoipStreamMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::NetSyncOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.NetSyncOptions.SetVoipGroup
void Oculus::Platform::NetSyncOptions::SetVoipGroup(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncOptions::SetVoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.NetSyncOptions.SetVoipStreamDefault
void Oculus::Platform::NetSyncOptions::SetVoipStreamDefault(::Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncOptions::SetVoipStreamDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVoipStreamDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.NetSyncOptions.SetZoneId
void Oculus::Platform::NetSyncOptions::SetZoneId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncOptions::SetZoneId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetZoneId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.NetSyncOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::NetSyncOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.NetSyncOptions.Finalize
void Oculus::Platform::NetSyncOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.NetSyncVoipMicSource
#include "Oculus/Platform/NetSyncVoipMicSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B7AA8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipMicSource Unknown
::Oculus::Platform::NetSyncVoipMicSource Oculus::Platform::NetSyncVoipMicSource::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncVoipMicSource::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::NetSyncVoipMicSource>("Oculus.Platform", "NetSyncVoipMicSource", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipMicSource Unknown
void Oculus::Platform::NetSyncVoipMicSource::_set_Unknown(::Oculus::Platform::NetSyncVoipMicSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncVoipMicSource::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipMicSource", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B7AE0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipMicSource None
::Oculus::Platform::NetSyncVoipMicSource Oculus::Platform::NetSyncVoipMicSource::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncVoipMicSource::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::NetSyncVoipMicSource>("Oculus.Platform", "NetSyncVoipMicSource", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipMicSource None
void Oculus::Platform::NetSyncVoipMicSource::_set_None(::Oculus::Platform::NetSyncVoipMicSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncVoipMicSource::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipMicSource", "None", value));
}
// [DescriptionAttribute] Offset: 0x6B7B18
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipMicSource Internal
::Oculus::Platform::NetSyncVoipMicSource Oculus::Platform::NetSyncVoipMicSource::_get_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncVoipMicSource::_get_Internal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::NetSyncVoipMicSource>("Oculus.Platform", "NetSyncVoipMicSource", "Internal"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipMicSource Internal
void Oculus::Platform::NetSyncVoipMicSource::_set_Internal(::Oculus::Platform::NetSyncVoipMicSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncVoipMicSource::_set_Internal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipMicSource", "Internal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::NetSyncVoipMicSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncVoipMicSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.NetSyncVoipStreamMode
#include "Oculus/Platform/NetSyncVoipStreamMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B7B50
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipStreamMode Unknown
::Oculus::Platform::NetSyncVoipStreamMode Oculus::Platform::NetSyncVoipStreamMode::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncVoipStreamMode::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::NetSyncVoipStreamMode>("Oculus.Platform", "NetSyncVoipStreamMode", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipStreamMode Unknown
void Oculus::Platform::NetSyncVoipStreamMode::_set_Unknown(::Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncVoipStreamMode::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipStreamMode", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B7B88
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipStreamMode Ambisonic
::Oculus::Platform::NetSyncVoipStreamMode Oculus::Platform::NetSyncVoipStreamMode::_get_Ambisonic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncVoipStreamMode::_get_Ambisonic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::NetSyncVoipStreamMode>("Oculus.Platform", "NetSyncVoipStreamMode", "Ambisonic"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipStreamMode Ambisonic
void Oculus::Platform::NetSyncVoipStreamMode::_set_Ambisonic(::Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncVoipStreamMode::_set_Ambisonic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipStreamMode", "Ambisonic", value));
}
// [DescriptionAttribute] Offset: 0x6B7BC0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipStreamMode Mono
::Oculus::Platform::NetSyncVoipStreamMode Oculus::Platform::NetSyncVoipStreamMode::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncVoipStreamMode::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::NetSyncVoipStreamMode>("Oculus.Platform", "NetSyncVoipStreamMode", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipStreamMode Mono
void Oculus::Platform::NetSyncVoipStreamMode::_set_Mono(::Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncVoipStreamMode::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipStreamMode", "Mono", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::NetSyncVoipStreamMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSyncVoipStreamMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Packet
#include "Oculus/Platform/Packet.hpp"
// Including type: Oculus.Platform.SendPolicy
#include "Oculus/Platform/SendPolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 size
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Packet::dyn_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Packet::dyn_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "size"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IntPtr packetHandle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::Packet::dyn_packetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Packet::dyn_packetHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetHandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Packet.get_SenderID
uint64_t Oculus::Platform::Packet::get_SenderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Packet::get_SenderID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SenderID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.get_Size
uint64_t Oculus::Platform::Packet::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Packet::get_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.get_Policy
::Oculus::Platform::SendPolicy Oculus::Platform::Packet::get_Policy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Packet::get_Policy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Policy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SendPolicy, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.ReadBytes
uint64_t Oculus::Platform::Packet::ReadBytes(::ArrayW<uint8_t> destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Packet::ReadBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, destination);
}
// Autogenerated method: Oculus.Platform.Packet.Dispose
void Oculus::Platform::Packet::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Packet::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Packet*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.Finalize
void Oculus::Platform::Packet::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Packet::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PartyUpdateAction
#include "Oculus/Platform/PartyUpdateAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B7BF8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Unknown
::Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PartyUpdateAction::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Unknown
void Oculus::Platform::PartyUpdateAction::_set_Unknown(::Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PartyUpdateAction::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B7C30
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Join
::Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PartyUpdateAction::_get_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Join"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Join
void Oculus::Platform::PartyUpdateAction::_set_Join(::Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PartyUpdateAction::_set_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Join", value));
}
// [DescriptionAttribute] Offset: 0x6B7C68
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Leave
::Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PartyUpdateAction::_get_Leave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Leave"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Leave
void Oculus::Platform::PartyUpdateAction::_set_Leave(::Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PartyUpdateAction::_set_Leave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Leave", value));
}
// [DescriptionAttribute] Offset: 0x6B7CA0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Invite
::Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PartyUpdateAction::_get_Invite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Invite"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Invite
void Oculus::Platform::PartyUpdateAction::_set_Invite(::Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PartyUpdateAction::_set_Invite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Invite", value));
}
// [DescriptionAttribute] Offset: 0x6B7CD8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Uninvite
::Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Uninvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PartyUpdateAction::_get_Uninvite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Uninvite"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Uninvite
void Oculus::Platform::PartyUpdateAction::_set_Uninvite(::Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PartyUpdateAction::_set_Uninvite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Uninvite", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::PartyUpdateAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PartyUpdateAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PeerConnectionState
#include "Oculus/Platform/PeerConnectionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B7D10
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PeerConnectionState Unknown
::Oculus::Platform::PeerConnectionState Oculus::Platform::PeerConnectionState::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PeerConnectionState::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PeerConnectionState>("Oculus.Platform", "PeerConnectionState", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PeerConnectionState Unknown
void Oculus::Platform::PeerConnectionState::_set_Unknown(::Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PeerConnectionState::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PeerConnectionState", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B7D48
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PeerConnectionState Connected
::Oculus::Platform::PeerConnectionState Oculus::Platform::PeerConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PeerConnectionState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PeerConnectionState>("Oculus.Platform", "PeerConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PeerConnectionState Connected
void Oculus::Platform::PeerConnectionState::_set_Connected(::Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PeerConnectionState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PeerConnectionState", "Connected", value));
}
// [DescriptionAttribute] Offset: 0x6B7D80
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PeerConnectionState Timeout
::Oculus::Platform::PeerConnectionState Oculus::Platform::PeerConnectionState::_get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PeerConnectionState::_get_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PeerConnectionState>("Oculus.Platform", "PeerConnectionState", "Timeout"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PeerConnectionState Timeout
void Oculus::Platform::PeerConnectionState::_set_Timeout(::Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PeerConnectionState::_set_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PeerConnectionState", "Timeout", value));
}
// [DescriptionAttribute] Offset: 0x6B7DB8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PeerConnectionState Closed
::Oculus::Platform::PeerConnectionState Oculus::Platform::PeerConnectionState::_get_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PeerConnectionState::_get_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PeerConnectionState>("Oculus.Platform", "PeerConnectionState", "Closed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PeerConnectionState Closed
void Oculus::Platform::PeerConnectionState::_set_Closed(::Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PeerConnectionState::_set_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PeerConnectionState", "Closed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::PeerConnectionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PeerConnectionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PermissionGrantStatus
#include "Oculus/Platform/PermissionGrantStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B7DF0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionGrantStatus Unknown
::Oculus::Platform::PermissionGrantStatus Oculus::Platform::PermissionGrantStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionGrantStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PermissionGrantStatus>("Oculus.Platform", "PermissionGrantStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionGrantStatus Unknown
void Oculus::Platform::PermissionGrantStatus::_set_Unknown(::Oculus::Platform::PermissionGrantStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionGrantStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionGrantStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B7E28
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionGrantStatus Granted
::Oculus::Platform::PermissionGrantStatus Oculus::Platform::PermissionGrantStatus::_get_Granted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionGrantStatus::_get_Granted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PermissionGrantStatus>("Oculus.Platform", "PermissionGrantStatus", "Granted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionGrantStatus Granted
void Oculus::Platform::PermissionGrantStatus::_set_Granted(::Oculus::Platform::PermissionGrantStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionGrantStatus::_set_Granted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionGrantStatus", "Granted", value));
}
// [DescriptionAttribute] Offset: 0x6B7E60
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionGrantStatus Denied
::Oculus::Platform::PermissionGrantStatus Oculus::Platform::PermissionGrantStatus::_get_Denied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionGrantStatus::_get_Denied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PermissionGrantStatus>("Oculus.Platform", "PermissionGrantStatus", "Denied"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionGrantStatus Denied
void Oculus::Platform::PermissionGrantStatus::_set_Denied(::Oculus::Platform::PermissionGrantStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionGrantStatus::_set_Denied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionGrantStatus", "Denied", value));
}
// [DescriptionAttribute] Offset: 0x6B7E98
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionGrantStatus Blocked
::Oculus::Platform::PermissionGrantStatus Oculus::Platform::PermissionGrantStatus::_get_Blocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionGrantStatus::_get_Blocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PermissionGrantStatus>("Oculus.Platform", "PermissionGrantStatus", "Blocked"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionGrantStatus Blocked
void Oculus::Platform::PermissionGrantStatus::_set_Blocked(::Oculus::Platform::PermissionGrantStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionGrantStatus::_set_Blocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionGrantStatus", "Blocked", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::PermissionGrantStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionGrantStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PermissionType
#include "Oculus/Platform/PermissionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B7ED0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionType Unknown
::Oculus::Platform::PermissionType Oculus::Platform::PermissionType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PermissionType>("Oculus.Platform", "PermissionType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionType Unknown
void Oculus::Platform::PermissionType::_set_Unknown(::Oculus::Platform::PermissionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B7F08
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionType Microphone
::Oculus::Platform::PermissionType Oculus::Platform::PermissionType::_get_Microphone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionType::_get_Microphone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PermissionType>("Oculus.Platform", "PermissionType", "Microphone"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionType Microphone
void Oculus::Platform::PermissionType::_set_Microphone(::Oculus::Platform::PermissionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionType::_set_Microphone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionType", "Microphone", value));
}
// [DescriptionAttribute] Offset: 0x6B7F40
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionType WriteExternalStorage
::Oculus::Platform::PermissionType Oculus::Platform::PermissionType::_get_WriteExternalStorage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionType::_get_WriteExternalStorage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PermissionType>("Oculus.Platform", "PermissionType", "WriteExternalStorage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionType WriteExternalStorage
void Oculus::Platform::PermissionType::_set_WriteExternalStorage(::Oculus::Platform::PermissionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionType::_set_WriteExternalStorage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionType", "WriteExternalStorage", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::PermissionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Core
#include "Oculus/Platform/Core.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean IsPlatformInitialized
bool Oculus::Platform::Core::_get_IsPlatformInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::_get_IsPlatformInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Platform", "Core", "IsPlatformInitialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean IsPlatformInitialized
void Oculus::Platform::Core::_set_IsPlatformInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::_set_IsPlatformInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Core", "IsPlatformInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean LogMessages
bool Oculus::Platform::Core::_get_LogMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::_get_LogMessages");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Platform", "Core", "LogMessages"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean LogMessages
void Oculus::Platform::Core::_set_LogMessages(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::_set_LogMessages");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Core", "LogMessages", value));
}
// Autogenerated static field getter
// Get static field: static public System.String PlatformUninitializedError
::StringW Oculus::Platform::Core::_get_PlatformUninitializedError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::_get_PlatformUninitializedError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform", "Core", "PlatformUninitializedError"));
}
// Autogenerated static field setter
// Set static field: static public System.String PlatformUninitializedError
void Oculus::Platform::Core::_set_PlatformUninitializedError(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::_set_PlatformUninitializedError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Core", "PlatformUninitializedError", value));
}
// Autogenerated method: Oculus.Platform.Core..cctor
void Oculus::Platform::Core::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Core.IsInitialized
bool Oculus::Platform::Core::IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Core.ForceInitialized
void Oculus::Platform::Core::ForceInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::ForceInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "ForceInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Core.getAppID
::StringW Oculus::Platform::Core::getAppID(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::getAppID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "getAppID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.Core.AsyncInitialize
::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::Core::AsyncInitialize(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::AsyncInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "AsyncInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.Core.Initialize
void Oculus::Platform::Core::Initialize(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.Core.GetAppIDFromConfig
::StringW Oculus::Platform::Core::GetAppIDFromConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::GetAppIDFromConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "GetAppIDFromConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ApplicationLifecycle
#include "Oculus/Platform/ApplicationLifecycle.hpp"
// Including type: Oculus.Platform.Models.LaunchDetails
#include "Oculus/Platform/Models/LaunchDetails.hpp"
// Including type: Oculus.Platform.LaunchResult
#include "Oculus/Platform/LaunchResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.ApplicationLifecycle.GetLaunchDetails
::Oculus::Platform::Models::LaunchDetails* Oculus::Platform::ApplicationLifecycle::GetLaunchDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationLifecycle::GetLaunchDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "ApplicationLifecycle", "GetLaunchDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchDetails*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.ApplicationLifecycle.LogDeeplinkResult
void Oculus::Platform::ApplicationLifecycle::LogDeeplinkResult(::StringW trackingID, ::Oculus::Platform::LaunchResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationLifecycle::LogDeeplinkResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "ApplicationLifecycle", "LogDeeplinkResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingID), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingID, result);
}
// Autogenerated method: Oculus.Platform.ApplicationLifecycle.SetLaunchIntentChangedNotificationCallback
void Oculus::Platform::ApplicationLifecycle::SetLaunchIntentChangedNotificationCallback(typename ::Oculus::Platform::Message_1<::StringW>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationLifecycle::SetLaunchIntentChangedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "ApplicationLifecycle", "SetLaunchIntentChangedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Rooms
#include "Oculus/Platform/Rooms.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.RoomJoinPolicy
#include "Oculus/Platform/RoomJoinPolicy.hpp"
// Including type: Oculus.Platform.RoomOptions
#include "Oculus/Platform/RoomOptions.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: Oculus.Platform.RoomMembershipLockStatus
#include "Oculus/Platform/RoomMembershipLockStatus.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Rooms.UpdateDataStore
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::UpdateDataStore(uint64_t roomID, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::UpdateDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdateDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, data);
}
// Autogenerated method: Oculus.Platform.Rooms.SetRoomInviteNotificationCallback
void Oculus::Platform::Rooms::SetRoomInviteNotificationCallback(typename ::Oculus::Platform::Message_1<::StringW>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::SetRoomInviteNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetRoomInviteNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.CreateAndJoinPrivate
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::CreateAndJoinPrivate(::Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::CreateAndJoinPrivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "CreateAndJoinPrivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinPolicy), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, joinPolicy, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Rooms.CreateAndJoinPrivate2
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::CreateAndJoinPrivate2(::Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, ::Oculus::Platform::RoomOptions* roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::CreateAndJoinPrivate2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "CreateAndJoinPrivate2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinPolicy), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, joinPolicy, maxUsers, roomOptions);
}
// Autogenerated method: Oculus.Platform.Rooms.Get
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Get(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Rooms.GetCurrent
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Rooms.GetCurrentForUser
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::GetCurrentForUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::GetCurrentForUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetCurrentForUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Rooms.GetInvitableUsers
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserList*>* Oculus::Platform::Rooms::GetInvitableUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::GetInvitableUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetInvitableUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Rooms.GetInvitableUsers2
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserList*>* Oculus::Platform::Rooms::GetInvitableUsers2(::Oculus::Platform::RoomOptions* roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::GetInvitableUsers2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetInvitableUsers2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomOptions);
}
// Autogenerated method: Oculus.Platform.Rooms.GetModeratedRooms
::Oculus::Platform::Request_1<::Oculus::Platform::Models::RoomList*>* Oculus::Platform::Rooms::GetModeratedRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::GetModeratedRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetModeratedRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::RoomList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Rooms.InviteUser
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::InviteUser(uint64_t roomID, ::StringW inviteToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::InviteUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "InviteUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(inviteToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, inviteToken);
}
// Autogenerated method: Oculus.Platform.Rooms.Join
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Join(uint64_t roomID, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Rooms.Join2
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Join2(uint64_t roomID, ::Oculus::Platform::RoomOptions* roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::Join2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Join2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, roomOptions);
}
// Autogenerated method: Oculus.Platform.Rooms.KickUser
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::KickUser(uint64_t roomID, uint64_t userID, int kickDurationSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::KickUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "KickUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(kickDurationSeconds)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, userID, kickDurationSeconds);
}
// Autogenerated method: Oculus.Platform.Rooms.LaunchInvitableUserFlow
::Oculus::Platform::Request* Oculus::Platform::Rooms::LaunchInvitableUserFlow(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::LaunchInvitableUserFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "LaunchInvitableUserFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Rooms.Leave
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Leave(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Rooms.SetDescription
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::SetDescription(uint64_t roomID, ::StringW description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::SetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(description)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, description);
}
// Autogenerated method: Oculus.Platform.Rooms.UpdateMembershipLockStatus
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::UpdateMembershipLockStatus(uint64_t roomID, ::Oculus::Platform::RoomMembershipLockStatus membershipLockStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::UpdateMembershipLockStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdateMembershipLockStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(membershipLockStatus)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, membershipLockStatus);
}
// Autogenerated method: Oculus.Platform.Rooms.UpdateOwner
::Oculus::Platform::Request* Oculus::Platform::Rooms::UpdateOwner(uint64_t roomID, uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::UpdateOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdateOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, userID);
}
// Autogenerated method: Oculus.Platform.Rooms.UpdatePrivateRoomJoinPolicy
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::UpdatePrivateRoomJoinPolicy(uint64_t roomID, ::Oculus::Platform::RoomJoinPolicy newJoinPolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::UpdatePrivateRoomJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdatePrivateRoomJoinPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(newJoinPolicy)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, newJoinPolicy);
}
// Autogenerated method: Oculus.Platform.Rooms.SetRoomInviteAcceptedNotificationCallback
void Oculus::Platform::Rooms::SetRoomInviteAcceptedNotificationCallback(typename ::Oculus::Platform::Message_1<::StringW>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::SetRoomInviteAcceptedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetRoomInviteAcceptedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.SetRoomInviteReceivedNotificationCallback
void Oculus::Platform::Rooms::SetRoomInviteReceivedNotificationCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::RoomInviteNotification*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::SetRoomInviteReceivedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetRoomInviteReceivedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.SetUpdateNotificationCallback
void Oculus::Platform::Rooms::SetUpdateNotificationCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::SetUpdateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetUpdateNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.GetNextRoomListPage
::Oculus::Platform::Request_1<::Oculus::Platform::Models::RoomList*>* Oculus::Platform::Rooms::GetNextRoomListPage(::Oculus::Platform::Models::RoomList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::GetNextRoomListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetNextRoomListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::RoomList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Matchmaking
#include "Oculus/Platform/Matchmaking.hpp"
// Including type: Oculus.Platform.Matchmaking/Oculus.Platform.CustomQuery
#include "Oculus/Platform/Matchmaking_CustomQuery.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.MatchmakingStats
#include "Oculus/Platform/Models/MatchmakingStats.hpp"
// Including type: Oculus.Platform.MatchmakingStatApproach
#include "Oculus/Platform/MatchmakingStatApproach.hpp"
// Including type: Oculus.Platform.Models.MatchmakingBrowseResult
#include "Oculus/Platform/Models/MatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.MatchmakingOptions
#include "Oculus/Platform/MatchmakingOptions.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Matchmaking.ReportResultsInsecure
::Oculus::Platform::Request* Oculus::Platform::Matchmaking::ReportResultsInsecure(uint64_t roomID, ::System::Collections::Generic::Dictionary_2<::StringW, int>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::ReportResultsInsecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "ReportResultsInsecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, data);
}
// Autogenerated method: Oculus.Platform.Matchmaking.GetStats
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingStats*>* Oculus::Platform::Matchmaking::GetStats(::StringW pool, uint maxLevel, ::Oculus::Platform::MatchmakingStatApproach approach) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::GetStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "GetStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxLevel), ::il2cpp_utils::ExtractType(approach)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingStats*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxLevel, approach);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Browse
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingBrowseResult*>* Oculus::Platform::Matchmaking::Browse(::StringW pool, ::Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::Browse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Browse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingBrowseResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Browse2
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingBrowseResult*>* Oculus::Platform::Matchmaking::Browse2(::StringW pool, ::Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::Browse2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Browse2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingBrowseResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Cancel
::Oculus::Platform::Request* Oculus::Platform::Matchmaking::Cancel(::StringW pool, ::StringW requestHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(requestHash)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, requestHash);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Cancel
::Oculus::Platform::Request* Oculus::Platform::Matchmaking::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateAndEnqueueRoom
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>* Oculus::Platform::Matchmaking::CreateAndEnqueueRoom(::StringW pool, uint maxUsers, bool subscribeToUpdates, ::Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CreateAndEnqueueRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateAndEnqueueRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateAndEnqueueRoom2
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>* Oculus::Platform::Matchmaking::CreateAndEnqueueRoom2(::StringW pool, ::Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CreateAndEnqueueRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateAndEnqueueRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateRoom
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Matchmaking::CreateRoom(::StringW pool, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateRoom2
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Matchmaking::CreateRoom2(::StringW pool, ::Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CreateRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Enqueue
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::Enqueue(::StringW pool, ::Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::Enqueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Enqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Enqueue2
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::Enqueue2(::StringW pool, ::Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::Enqueue2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Enqueue2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.EnqueueRoom
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::EnqueueRoom(uint64_t roomID, ::Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::EnqueueRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "EnqueueRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.EnqueueRoom2
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::EnqueueRoom2(uint64_t roomID, ::Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::EnqueueRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "EnqueueRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.GetAdminSnapshot
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingAdminSnapshot*>* Oculus::Platform::Matchmaking::GetAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::GetAdminSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "GetAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingAdminSnapshot*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Matchmaking.JoinRoom
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Matchmaking::JoinRoom(uint64_t roomID, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::JoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "JoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Matchmaking.StartMatch
::Oculus::Platform::Request* Oculus::Platform::Matchmaking::StartMatch(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::StartMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "StartMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Matchmaking.SetMatchFoundNotificationCallback
void Oculus::Platform::Matchmaking::SetMatchFoundNotificationCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::SetMatchFoundNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "SetMatchFoundNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Matchmaking/Oculus.Platform.CustomQuery
#include "Oculus/Platform/Matchmaking_CustomQuery.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.Object> data
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*& Oculus::Platform::Matchmaking::CustomQuery::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CustomQuery::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Matchmaking/Oculus.Platform.CustomQuery/Oculus.Platform.Criterion[] criteria
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Platform::Matchmaking::CustomQuery::Criterion>& Oculus::Platform::Matchmaking::CustomQuery::dyn_criteria() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CustomQuery::dyn_criteria");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "criteria"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Platform::Matchmaking::CustomQuery::Criterion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Matchmaking/Oculus.Platform.CustomQuery.ToUnmanaged
::System::IntPtr Oculus::Platform::Matchmaking::CustomQuery::ToUnmanaged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CustomQuery::ToUnmanaged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUnmanaged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Matchmaking/Oculus.Platform.CustomQuery/Oculus.Platform.Criterion
#include "Oculus/Platform/Matchmaking_CustomQuery.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String key
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Matchmaking::CustomQuery::Criterion::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CustomQuery::Criterion::dyn_key");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.MatchmakingCriterionImportance importance
[[deprecated("Use field access instead!")]] ::Oculus::Platform::MatchmakingCriterionImportance& Oculus::Platform::Matchmaking::CustomQuery::Criterion::dyn_importance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CustomQuery::Criterion::dyn_importance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "importance"))->offset;
  return *reinterpret_cast<::Oculus::Platform::MatchmakingCriterionImportance*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.Object> parameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*& Oculus::Platform::Matchmaking::CustomQuery::Criterion::dyn_parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CustomQuery::Criterion::dyn_parameters");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Matchmaking/Oculus.Platform.CustomQuery/Oculus.Platform.Criterion..ctor
Oculus::Platform::Matchmaking::CustomQuery::Criterion::Criterion(::StringW key_, ::Oculus::Platform::MatchmakingCriterionImportance importance_) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CustomQuery::Criterion::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key_), ::il2cpp_utils::ExtractType(importance_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key_, importance_);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Net
#include "Oculus/Platform/Net.hpp"
// Including type: Oculus.Platform.Packet
#include "Oculus/Platform/Packet.hpp"
// Including type: Oculus.Platform.SendPolicy
#include "Oculus/Platform/SendPolicy.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PingResult
#include "Oculus/Platform/Models/PingResult.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Net.ReadPacket
::Oculus::Platform::Packet* Oculus::Platform::Net::ReadPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::ReadPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "ReadPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Packet*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Net.SendPacket
bool Oculus::Platform::Net::SendPacket(uint64_t userID, ::ArrayW<uint8_t> bytes, ::Oculus::Platform::SendPolicy policy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::SendPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SendPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(policy)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, bytes, policy);
}
// Autogenerated method: Oculus.Platform.Net.Connect
void Oculus::Platform::Net::Connect(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.Accept
void Oculus::Platform::Net::Accept(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.Close
void Oculus::Platform::Net::Close(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.IsConnected
bool Oculus::Platform::Net::IsConnected(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::IsConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.SendPacketToCurrentRoom
bool Oculus::Platform::Net::SendPacketToCurrentRoom(::ArrayW<uint8_t> bytes, ::Oculus::Platform::SendPolicy policy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::SendPacketToCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SendPacketToCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(policy)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, policy);
}
// Autogenerated method: Oculus.Platform.Net.AcceptForCurrentRoom
bool Oculus::Platform::Net::AcceptForCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::AcceptForCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "AcceptForCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Net.CloseForCurrentRoom
void Oculus::Platform::Net::CloseForCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::CloseForCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "CloseForCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Net.Ping
::Oculus::Platform::Request_1<::Oculus::Platform::Models::PingResult*>* Oculus::Platform::Net::Ping(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::Ping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Ping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::PingResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.SetConnectionStateChangedCallback
void Oculus::Platform::Net::SetConnectionStateChangedCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::SetConnectionStateChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SetConnectionStateChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Net.SetPeerConnectRequestCallback
void Oculus::Platform::Net::SetPeerConnectRequestCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::SetPeerConnectRequestCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SetPeerConnectRequestCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Net.SetPingResultNotificationCallback
void Oculus::Platform::Net::SetPingResultNotificationCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::PingResult*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::SetPingResultNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SetPingResultNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Leaderboards
#include "Oculus/Platform/Leaderboards.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
// Including type: Oculus.Platform.Models.LeaderboardList
#include "Oculus/Platform/Models/LeaderboardList.hpp"
// Including type: Oculus.Platform.LeaderboardFilterType
#include "Oculus/Platform/LeaderboardFilterType.hpp"
// Including type: Oculus.Platform.LeaderboardStartAt
#include "Oculus/Platform/LeaderboardStartAt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Leaderboards.GetNextEntries
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetNextEntries(::Oculus::Platform::Models::LeaderboardEntryList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Leaderboards::GetNextEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetNextEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetPreviousEntries
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetPreviousEntries(::Oculus::Platform::Models::LeaderboardEntryList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Leaderboards::GetPreviousEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetPreviousEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Leaderboards.Get
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardList*>* Oculus::Platform::Leaderboards::Get(::StringW leaderboardName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Leaderboards::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetEntries
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetEntries(::StringW leaderboardName, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Leaderboards::GetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetEntriesAfterRank
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetEntriesAfterRank(::StringW leaderboardName, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Leaderboards::GetEntriesAfterRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetEntriesAfterRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetEntriesByIds
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetEntriesByIds(::StringW leaderboardName, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Leaderboards::GetEntriesByIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetEntriesByIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, startAt, userIDs);
}
// Autogenerated method: Oculus.Platform.Leaderboards.WriteEntry
::Oculus::Platform::Request_1<bool>* Oculus::Platform::Leaderboards::WriteEntry(::StringW leaderboardName, int64_t score, ::ArrayW<uint8_t> extraData, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Leaderboards::WriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "WriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<bool>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, score, extraData, forceUpdate);
}
// Autogenerated method: Oculus.Platform.Leaderboards.WriteEntryWithSupplementaryMetric
::Oculus::Platform::Request_1<bool>* Oculus::Platform::Leaderboards::WriteEntryWithSupplementaryMetric(::StringW leaderboardName, int64_t score, int64_t supplementaryMetric, ::ArrayW<uint8_t> extraData, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Leaderboards::WriteEntryWithSupplementaryMetric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "WriteEntryWithSupplementaryMetric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(supplementaryMetric), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<bool>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, score, supplementaryMetric, extraData, forceUpdate);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetNextLeaderboardListPage
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardList*>* Oculus::Platform::Leaderboards::GetNextLeaderboardListPage(::Oculus::Platform::Models::LeaderboardList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Leaderboards::GetNextLeaderboardListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetNextLeaderboardListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Challenges
#include "Oculus/Platform/Challenges.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.ChallengeEntryList
#include "Oculus/Platform/Models/ChallengeEntryList.hpp"
// Including type: Oculus.Platform.Models.ChallengeList
#include "Oculus/Platform/Models/ChallengeList.hpp"
// Including type: Oculus.Platform.Models.Challenge
#include "Oculus/Platform/Models/Challenge.hpp"
// Including type: Oculus.Platform.ChallengeOptions
#include "Oculus/Platform/ChallengeOptions.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: Oculus.Platform.LeaderboardFilterType
#include "Oculus/Platform/LeaderboardFilterType.hpp"
// Including type: Oculus.Platform.LeaderboardStartAt
#include "Oculus/Platform/LeaderboardStartAt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Challenges.GetNextEntries
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetNextEntries(::Oculus::Platform::Models::ChallengeEntryList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::GetNextEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetNextEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Challenges.GetPreviousEntries
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetPreviousEntries(::Oculus::Platform::Models::ChallengeEntryList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::GetPreviousEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetPreviousEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Challenges.GetNextChallenges
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeList*>* Oculus::Platform::Challenges::GetNextChallenges(::Oculus::Platform::Models::ChallengeList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::GetNextChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetNextChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Challenges.GetPreviousChallenges
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeList*>* Oculus::Platform::Challenges::GetPreviousChallenges(::Oculus::Platform::Models::ChallengeList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::GetPreviousChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetPreviousChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Challenges.Create
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::Create(::StringW leaderboardName, ::Oculus::Platform::ChallengeOptions* challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, challengeOptions);
}
// Autogenerated method: Oculus.Platform.Challenges.DeclineInvite
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::DeclineInvite(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::DeclineInvite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "DeclineInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.Delete
::Oculus::Platform::Request* Oculus::Platform::Challenges::Delete(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.Get
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::Get(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.GetEntries
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetEntries(uint64_t challengeID, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::GetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.Challenges.GetEntriesAfterRank
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetEntriesAfterRank(uint64_t challengeID, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::GetEntriesAfterRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetEntriesAfterRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.Challenges.GetEntriesByIds
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetEntriesByIds(uint64_t challengeID, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::GetEntriesByIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetEntriesByIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, limit, startAt, userIDs);
}
// Autogenerated method: Oculus.Platform.Challenges.GetList
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeList*>* Oculus::Platform::Challenges::GetList(::Oculus::Platform::ChallengeOptions* challengeOptions, int limit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::GetList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeOptions), ::il2cpp_utils::ExtractType(limit)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeOptions, limit);
}
// Autogenerated method: Oculus.Platform.Challenges.Join
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::Join(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.Leave
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::Leave(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.UpdateInfo
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::UpdateInfo(uint64_t challengeID, ::Oculus::Platform::ChallengeOptions* challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::UpdateInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "UpdateInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, challengeOptions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Voip
#include "Oculus/Platform/Voip.hpp"
// Including type: Oculus.Platform.VoipMuteState
#include "Oculus/Platform/VoipMuteState.hpp"
// Including type: Oculus.Platform.SystemVoipStatus
#include "Oculus/Platform/SystemVoipStatus.hpp"
// Including type: Oculus.Platform.VoipDtxState
#include "Oculus/Platform/VoipDtxState.hpp"
// Including type: Oculus.Platform.VoipBitrate
#include "Oculus/Platform/VoipBitrate.hpp"
// Including type: Oculus.Platform.VoipOptions
#include "Oculus/Platform/VoipOptions.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.MicrophoneAvailabilityState
#include "Oculus/Platform/Models/MicrophoneAvailabilityState.hpp"
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
// Including type: Oculus.Platform.CAPI/Oculus.Platform.FilterCallback
#include "Oculus/Platform/CAPI_FilterCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Voip.Start
void Oculus::Platform::Voip::Start(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Voip.Accept
void Oculus::Platform::Voip::Accept(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Voip.Stop
void Oculus::Platform::Voip::Stop(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Voip.SetMicrophoneFilterCallback
void Oculus::Platform::Voip::SetMicrophoneFilterCallback(::Oculus::Platform::CAPI::FilterCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::SetMicrophoneFilterCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetMicrophoneFilterCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Voip.SetMicrophoneMuted
void Oculus::Platform::Voip::SetMicrophoneMuted(::Oculus::Platform::VoipMuteState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::SetMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated method: Oculus.Platform.Voip.GetSystemVoipMicrophoneMuted
::Oculus::Platform::VoipMuteState Oculus::Platform::Voip::GetSystemVoipMicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::GetSystemVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Voip.GetSystemVoipStatus
::Oculus::Platform::SystemVoipStatus Oculus::Platform::Voip::GetSystemVoipStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::GetSystemVoipStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetSystemVoipStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Voip.GetIsConnectionUsingDtx
::Oculus::Platform::VoipDtxState Oculus::Platform::Voip::GetIsConnectionUsingDtx(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::GetIsConnectionUsingDtx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetIsConnectionUsingDtx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipDtxState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.Voip.GetLocalBitrate
::Oculus::Platform::VoipBitrate Oculus::Platform::Voip::GetLocalBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::GetLocalBitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetLocalBitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.Voip.GetRemoteBitrate
::Oculus::Platform::VoipBitrate Oculus::Platform::Voip::GetRemoteBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::GetRemoteBitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetRemoteBitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.Voip.SetNewConnectionOptions
void Oculus::Platform::Voip::SetNewConnectionOptions(::Oculus::Platform::VoipOptions* voipOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::SetNewConnectionOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetNewConnectionOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voipOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, voipOptions);
}
// Autogenerated method: Oculus.Platform.Voip.GetMicrophoneAvailability
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MicrophoneAvailabilityState*>* Oculus::Platform::Voip::GetMicrophoneAvailability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::GetMicrophoneAvailability");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetMicrophoneAvailability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MicrophoneAvailabilityState*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Voip.SetSystemVoipSuppressed
::Oculus::Platform::Request_1<::Oculus::Platform::Models::SystemVoipState*>* Oculus::Platform::Voip::SetSystemVoipSuppressed(bool suppressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::SetSystemVoipSuppressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetSystemVoipSuppressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(suppressed)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::SystemVoipState*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, suppressed);
}
// Autogenerated method: Oculus.Platform.Voip.SetVoipConnectRequestCallback
void Oculus::Platform::Voip::SetVoipConnectRequestCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::SetVoipConnectRequestCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetVoipConnectRequestCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Voip.SetMicrophoneAvailabilityStateUpdateNotificationCallback
void Oculus::Platform::Voip::SetMicrophoneAvailabilityStateUpdateNotificationCallback(typename ::Oculus::Platform::Message_1<::StringW>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::SetMicrophoneAvailabilityStateUpdateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetMicrophoneAvailabilityStateUpdateNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Voip.SetVoipStateChangeCallback
void Oculus::Platform::Voip::SetVoipStateChangeCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::SetVoipStateChangeCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetVoipStateChangeCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Voip.SetSystemVoipStateNotificationCallback
void Oculus::Platform::Voip::SetSystemVoipStateNotificationCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::SystemVoipState*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::SetSystemVoipStateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetSystemVoipStateNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Users
#include "Oculus/Platform/Users.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
// Including type: Oculus.Platform.UserOptions
#include "Oculus/Platform/UserOptions.hpp"
// Including type: Oculus.Platform.Models.OrgScopedID
#include "Oculus/Platform/Models/OrgScopedID.hpp"
// Including type: Oculus.Platform.Models.SdkAccountList
#include "Oculus/Platform/Models/SdkAccountList.hpp"
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
// Including type: Oculus.Platform.Models.LaunchFriendRequestFlowResult
#include "Oculus/Platform/Models/LaunchFriendRequestFlowResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Users.GetLoggedInUserLocale
::StringW Oculus::Platform::Users::GetLoggedInUserLocale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetLoggedInUserLocale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetLoggedInUserLocale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.Get
::Oculus::Platform::Request_1<::Oculus::Platform::Models::User*>* Oculus::Platform::Users::Get(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::User*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Users.GetAccessToken
::Oculus::Platform::Request_1<::StringW>* Oculus::Platform::Users::GetAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.GetLoggedInUser
::Oculus::Platform::Request_1<::Oculus::Platform::Models::User*>* Oculus::Platform::Users::GetLoggedInUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetLoggedInUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetLoggedInUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::User*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.GetLoggedInUserFriends
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserList*>* Oculus::Platform::Users::GetLoggedInUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetLoggedInUserFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetLoggedInUserFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.GetLoggedInUserFriendsAndRooms
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserAndRoomList*>* Oculus::Platform::Users::GetLoggedInUserFriendsAndRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetLoggedInUserFriendsAndRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetLoggedInUserFriendsAndRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserAndRoomList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.GetLoggedInUserRecentlyMetUsersAndRooms
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserAndRoomList*>* Oculus::Platform::Users::GetLoggedInUserRecentlyMetUsersAndRooms(::Oculus::Platform::UserOptions* userOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetLoggedInUserRecentlyMetUsersAndRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetLoggedInUserRecentlyMetUsersAndRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserAndRoomList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userOptions);
}
// Autogenerated method: Oculus.Platform.Users.GetOrgScopedID
::Oculus::Platform::Request_1<::Oculus::Platform::Models::OrgScopedID*>* Oculus::Platform::Users::GetOrgScopedID(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetOrgScopedID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetOrgScopedID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::OrgScopedID*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Users.GetSdkAccounts
::Oculus::Platform::Request_1<::Oculus::Platform::Models::SdkAccountList*>* Oculus::Platform::Users::GetSdkAccounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetSdkAccounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetSdkAccounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::SdkAccountList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.GetUserProof
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserProof*>* Oculus::Platform::Users::GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetUserProof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetUserProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserProof*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.LaunchFriendRequestFlow
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LaunchFriendRequestFlowResult*>* Oculus::Platform::Users::LaunchFriendRequestFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::LaunchFriendRequestFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "LaunchFriendRequestFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LaunchFriendRequestFlowResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Users.GetNextUserAndRoomListPage
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserAndRoomList*>* Oculus::Platform::Users::GetNextUserAndRoomListPage(::Oculus::Platform::Models::UserAndRoomList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetNextUserAndRoomListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetNextUserAndRoomListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserAndRoomList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Users.GetNextUserListPage
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserList*>* Oculus::Platform::Users::GetNextUserListPage(::Oculus::Platform::Models::UserList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetNextUserListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetNextUserListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Achievements
#include "Oculus/Platform/Achievements.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.AchievementUpdate
#include "Oculus/Platform/Models/AchievementUpdate.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Achievements.AddCount
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementUpdate*>* Oculus::Platform::Achievements::AddCount(::StringW name, uint64_t count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Achievements::AddCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "AddCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementUpdate*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, count);
}
// Autogenerated method: Oculus.Platform.Achievements.AddFields
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementUpdate*>* Oculus::Platform::Achievements::AddFields(::StringW name, ::StringW fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Achievements::AddFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "AddFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementUpdate*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, fields);
}
// Autogenerated method: Oculus.Platform.Achievements.GetAllDefinitions
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementDefinitionList*>* Oculus::Platform::Achievements::GetAllDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Achievements::GetAllDefinitions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetAllDefinitions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementDefinitionList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Achievements.GetAllProgress
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementProgressList*>* Oculus::Platform::Achievements::GetAllProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Achievements::GetAllProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetAllProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementProgressList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Achievements.GetDefinitionsByName
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementDefinitionList*>* Oculus::Platform::Achievements::GetDefinitionsByName(::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Achievements::GetDefinitionsByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetDefinitionsByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementDefinitionList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, names);
}
// Autogenerated method: Oculus.Platform.Achievements.GetProgressByName
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementProgressList*>* Oculus::Platform::Achievements::GetProgressByName(::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Achievements::GetProgressByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetProgressByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementProgressList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, names);
}
// Autogenerated method: Oculus.Platform.Achievements.Unlock
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementUpdate*>* Oculus::Platform::Achievements::Unlock(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Achievements::Unlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "Unlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementUpdate*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Oculus.Platform.Achievements.GetNextAchievementDefinitionListPage
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementDefinitionList*>* Oculus::Platform::Achievements::GetNextAchievementDefinitionListPage(::Oculus::Platform::Models::AchievementDefinitionList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Achievements::GetNextAchievementDefinitionListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetNextAchievementDefinitionListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementDefinitionList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Achievements.GetNextAchievementProgressListPage
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementProgressList*>* Oculus::Platform::Achievements::GetNextAchievementProgressListPage(::Oculus::Platform::Models::AchievementProgressList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Achievements::GetNextAchievementProgressListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetNextAchievementProgressListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementProgressList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Application
#include "Oculus/Platform/Application.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.ApplicationVersion
#include "Oculus/Platform/Models/ApplicationVersion.hpp"
// Including type: Oculus.Platform.ApplicationOptions
#include "Oculus/Platform/ApplicationOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Application.GetVersion
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ApplicationVersion*>* Oculus::Platform::Application::GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Application::GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Application", "GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ApplicationVersion*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Application.LaunchOtherApp
::Oculus::Platform::Request_1<::StringW>* Oculus::Platform::Application::LaunchOtherApp(uint64_t appID, ::Oculus::Platform::ApplicationOptions* deeplink_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Application::LaunchOtherApp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Application", "LaunchOtherApp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID), ::il2cpp_utils::ExtractType(deeplink_options)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appID, deeplink_options);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AssetFile
#include "Oculus/Platform/AssetFile.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.AssetFileDeleteResult
#include "Oculus/Platform/Models/AssetFileDeleteResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadCancelResult
#include "Oculus/Platform/Models/AssetFileDownloadCancelResult.hpp"
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadUpdate
#include "Oculus/Platform/Models/AssetFileDownloadUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.AssetFile.Delete
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDeleteResult*>* Oculus::Platform::AssetFile::Delete(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDeleteResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DeleteById
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDeleteResult*>* Oculus::Platform::AssetFile::DeleteById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::DeleteById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DeleteById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDeleteResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DeleteByName
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDeleteResult*>* Oculus::Platform::AssetFile::DeleteByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::DeleteByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DeleteByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDeleteResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.AssetFile.Download
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadResult*>* Oculus::Platform::AssetFile::Download(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::Download");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "Download", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadById
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadResult*>* Oculus::Platform::AssetFile::DownloadById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::DownloadById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadByName
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadResult*>* Oculus::Platform::AssetFile::DownloadByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::DownloadByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadCancel
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadCancelResult*>* Oculus::Platform::AssetFile::DownloadCancel(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::DownloadCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadCancelResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadCancelById
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadCancelResult*>* Oculus::Platform::AssetFile::DownloadCancelById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::DownloadCancelById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadCancelById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadCancelResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadCancelByName
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadCancelResult*>* Oculus::Platform::AssetFile::DownloadCancelByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::DownloadCancelByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadCancelByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadCancelResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.AssetFile.GetList
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetDetailsList*>* Oculus::Platform::AssetFile::GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::GetList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "GetList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetDetailsList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.AssetFile.Status
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetDetails*>* Oculus::Platform::AssetFile::Status(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::Status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetDetails*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.StatusById
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetDetails*>* Oculus::Platform::AssetFile::StatusById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::StatusById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "StatusById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetDetails*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.StatusByName
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetDetails*>* Oculus::Platform::AssetFile::StatusByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::StatusByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "StatusByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetDetails*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.AssetFile.SetDownloadUpdateNotificationCallback
void Oculus::Platform::AssetFile::SetDownloadUpdateNotificationCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::AssetFileDownloadUpdate*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::SetDownloadUpdateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "SetDownloadUpdateNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.CloudStorage
#include "Oculus/Platform/CloudStorage.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.CloudStorageUpdateResponse
#include "Oculus/Platform/Models/CloudStorageUpdateResponse.hpp"
// Including type: Oculus.Platform.Models.CloudStorageData
#include "Oculus/Platform/Models/CloudStorageData.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadataList
#include "Oculus/Platform/Models/CloudStorageMetadataList.hpp"
// Including type: Oculus.Platform.Models.CloudStorageConflictMetadata
#include "Oculus/Platform/Models/CloudStorageConflictMetadata.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadata
#include "Oculus/Platform/Models/CloudStorageMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.CloudStorage.Delete
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageUpdateResponse*>* Oculus::Platform::CloudStorage::Delete(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageUpdateResponse*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CloudStorage.Load
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageData*>* Oculus::Platform::CloudStorage::Load(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageData*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CloudStorage.LoadBucketMetadata
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageMetadataList*>* Oculus::Platform::CloudStorage::LoadBucketMetadata(::StringW bucket) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::LoadBucketMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "LoadBucketMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageMetadataList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket);
}
// Autogenerated method: Oculus.Platform.CloudStorage.LoadConflictMetadata
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageConflictMetadata*>* Oculus::Platform::CloudStorage::LoadConflictMetadata(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::LoadConflictMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "LoadConflictMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageConflictMetadata*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CloudStorage.LoadHandle
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageData*>* Oculus::Platform::CloudStorage::LoadHandle(::StringW handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::LoadHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "LoadHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageData*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CloudStorage.LoadMetadata
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageMetadata*>* Oculus::Platform::CloudStorage::LoadMetadata(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::LoadMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "LoadMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageMetadata*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CloudStorage.ResolveKeepLocal
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageUpdateResponse*>* Oculus::Platform::CloudStorage::ResolveKeepLocal(::StringW bucket, ::StringW key, ::StringW remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::ResolveKeepLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "ResolveKeepLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageUpdateResponse*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CloudStorage.ResolveKeepRemote
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageUpdateResponse*>* Oculus::Platform::CloudStorage::ResolveKeepRemote(::StringW bucket, ::StringW key, ::StringW remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::ResolveKeepRemote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "ResolveKeepRemote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageUpdateResponse*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CloudStorage.Save
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageUpdateResponse*>* Oculus::Platform::CloudStorage::Save(::StringW bucket, ::StringW key, ::ArrayW<uint8_t> data, int64_t counter, ::StringW extraData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(counter), ::il2cpp_utils::ExtractType(extraData)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageUpdateResponse*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, data, counter, extraData);
}
// Autogenerated method: Oculus.Platform.CloudStorage.GetNextCloudStorageMetadataListPage
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageMetadataList*>* Oculus::Platform::CloudStorage::GetNextCloudStorageMetadataListPage(::Oculus::Platform::Models::CloudStorageMetadataList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::GetNextCloudStorageMetadataListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "GetNextCloudStorageMetadataListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageMetadataList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.CloudStorage2
#include "Oculus/Platform/CloudStorage2.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.CloudStorage2.GetUserDirectoryPath
::Oculus::Platform::Request_1<::StringW>* Oculus::Platform::CloudStorage2::GetUserDirectoryPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage2::GetUserDirectoryPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage2", "GetUserDirectoryPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Entitlements
#include "Oculus/Platform/Entitlements.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Entitlements.IsUserEntitledToApplication
::Oculus::Platform::Request* Oculus::Platform::Entitlements::IsUserEntitledToApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Entitlements::IsUserEntitledToApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Entitlements", "IsUserEntitledToApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
