// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.EnumUtils/Newtonsoft.Json.Utilities.<>c
#include "Newtonsoft/Json/Utilities/EnumUtils_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Runtime.Serialization.EnumMemberAttribute
#include "System/Runtime/Serialization/EnumMemberAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [NullableAttribute] Offset: 0x67531C
// Autogenerated static field getter
// Get static field: static public readonly Newtonsoft.Json.Utilities.EnumUtils/Newtonsoft.Json.Utilities.<>c <>9
::Newtonsoft::Json::Utilities::EnumUtils::$$c* Newtonsoft::Json::Utilities::EnumUtils::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::EnumUtils::$$c*>("Newtonsoft.Json.Utilities", "EnumUtils/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Newtonsoft.Json.Utilities.EnumUtils/Newtonsoft.Json.Utilities.<>c <>9
void Newtonsoft::Json::Utilities::EnumUtils::$$c::_set_$$9(::Newtonsoft::Json::Utilities::EnumUtils::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "EnumUtils/<>c", "<>9", value)));
}
// [NullableAttribute] Offset: 0x675330
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Runtime.Serialization.EnumMemberAttribute,System.String> <>9__3_0
::System::Func_2<::System::Runtime::Serialization::EnumMemberAttribute*, ::StringW>* Newtonsoft::Json::Utilities::EnumUtils::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Runtime::Serialization::EnumMemberAttribute*, ::StringW>*>("Newtonsoft.Json.Utilities", "EnumUtils/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Runtime.Serialization.EnumMemberAttribute,System.String> <>9__3_0
void Newtonsoft::Json::Utilities::EnumUtils::$$c::_set_$$9__3_0(::System::Func_2<::System::Runtime::Serialization::EnumMemberAttribute*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "EnumUtils/<>c", "<>9__3_0", value)));
}
// Autogenerated method: Newtonsoft.Json.Utilities.EnumUtils/Newtonsoft.Json.Utilities.<>c..cctor
void Newtonsoft::Json::Utilities::EnumUtils::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "EnumUtils/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.EnumUtils/Newtonsoft.Json.Utilities.<>c.<InitializeValuesAndNames>b__3_0
::StringW Newtonsoft::Json::Utilities::EnumUtils::$$c::$InitializeValuesAndNames$b__3_0(::System::Runtime::Serialization::EnumMemberAttribute* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::$$c::<InitializeValuesAndNames>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitializeValuesAndNames>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, a);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.FSharpFunction
#include "Newtonsoft/Json/Utilities/FSharpFunction.hpp"
// Including type: Newtonsoft.Json.Utilities.MethodCall`2
#include "Newtonsoft/Json/Utilities/MethodCall_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _instance
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::Utilities::FSharpFunction::dyn__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpFunction::dyn__instance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_instance"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> _invoker
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::FSharpFunction::dyn__invoker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpFunction::dyn__invoker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_invoker"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpFunction.Invoke
::Il2CppObject* Newtonsoft::Json::Utilities::FSharpFunction::Invoke(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpFunction::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.FSharpUtils
#include "Newtonsoft/Json/Utilities/FSharpUtils.hpp"
// Including type: Newtonsoft.Json.Utilities.FSharpUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass52_0
#include "Newtonsoft/Json/Utilities/FSharpUtils_--c__DisplayClass52_0.hpp"
// Including type: Newtonsoft.Json.Utilities.FSharpUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass55_0`2
#include "Newtonsoft/Json/Utilities/FSharpUtils_--c__DisplayClass55_0_2.hpp"
// Including type: Newtonsoft.Json.Utilities.FSharpUtils/Newtonsoft.Json.Utilities.<>c__55`2
#include "Newtonsoft/Json/Utilities/FSharpUtils_--c__55_2.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: Newtonsoft.Json.Utilities.MethodCall`2
#include "Newtonsoft/Json/Utilities/MethodCall_2.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: Newtonsoft.Json.Serialization.ObjectConstructor`1
#include "Newtonsoft/Json/Serialization/ObjectConstructor_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Object Lock
::Il2CppObject* Newtonsoft::Json::Utilities::FSharpUtils::_get_Lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::_get_Lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Newtonsoft.Json.Utilities", "FSharpUtils", "Lock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object Lock
void Newtonsoft::Json::Utilities::FSharpUtils::_set_Lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::_set_Lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "FSharpUtils", "Lock", value));
}
// [NullableAttribute] Offset: 0x6753B4
// Autogenerated static field getter
// Get static field: static private Newtonsoft.Json.Utilities.FSharpUtils _instance
::Newtonsoft::Json::Utilities::FSharpUtils* Newtonsoft::Json::Utilities::FSharpUtils::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::FSharpUtils*>("Newtonsoft.Json.Utilities", "FSharpUtils", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Newtonsoft.Json.Utilities.FSharpUtils _instance
void Newtonsoft::Json::Utilities::FSharpUtils::_set__instance(::Newtonsoft::Json::Utilities::FSharpUtils* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "FSharpUtils", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MethodInfo _ofSeq
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& Newtonsoft::Json::Utilities::FSharpUtils::dyn__ofSeq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::dyn__ofSeq");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ofSeq"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type _mapType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Utilities::FSharpUtils::dyn__mapType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::dyn__mapType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mapType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.Assembly <FSharpCoreAssembly>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Reflection::Assembly*& Newtonsoft::Json::Utilities::FSharpUtils::dyn_$FSharpCoreAssembly$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::dyn_$FSharpCoreAssembly$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FSharpCoreAssembly>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Reflection::Assembly**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> <IsUnion>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::FSharpUtils::dyn_$IsUnion$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::dyn_$IsUnion$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsUnion>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> <GetUnionCases>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::FSharpUtils::dyn_$GetUnionCases$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::dyn_$GetUnionCases$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GetUnionCases>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> <PreComputeUnionTagReader>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::FSharpUtils::dyn_$PreComputeUnionTagReader$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::dyn_$PreComputeUnionTagReader$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PreComputeUnionTagReader>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> <PreComputeUnionReader>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::FSharpUtils::dyn_$PreComputeUnionReader$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::dyn_$PreComputeUnionReader$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PreComputeUnionReader>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> <PreComputeUnionConstructor>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::FSharpUtils::dyn_$PreComputeUnionConstructor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::dyn_$PreComputeUnionConstructor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PreComputeUnionConstructor>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`2<System.Object,System.Object> <GetUnionCaseInfoDeclaringType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Func_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::FSharpUtils::dyn_$GetUnionCaseInfoDeclaringType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::dyn_$GetUnionCaseInfoDeclaringType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GetUnionCaseInfoDeclaringType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`2<System.Object,System.Object> <GetUnionCaseInfoName>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Func_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::FSharpUtils::dyn_$GetUnionCaseInfoName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::dyn_$GetUnionCaseInfoName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GetUnionCaseInfoName>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`2<System.Object,System.Object> <GetUnionCaseInfoTag>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Func_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::FSharpUtils::dyn_$GetUnionCaseInfoTag$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::dyn_$GetUnionCaseInfoTag$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GetUnionCaseInfoTag>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> <GetUnionCaseInfoFields>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::FSharpUtils::dyn_$GetUnionCaseInfoFields$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::dyn_$GetUnionCaseInfoFields$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GetUnionCaseInfoFields>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.get_Instance
::Newtonsoft::Json::Utilities::FSharpUtils* Newtonsoft::Json::Utilities::FSharpUtils::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "FSharpUtils", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::FSharpUtils*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.set_FSharpCoreAssembly
void Newtonsoft::Json::Utilities::FSharpUtils::set_FSharpCoreAssembly(::System::Reflection::Assembly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::set_FSharpCoreAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FSharpCoreAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.get_IsUnion
::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>* Newtonsoft::Json::Utilities::FSharpUtils::get_IsUnion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::get_IsUnion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUnion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.set_IsUnion
void Newtonsoft::Json::Utilities::FSharpUtils::set_IsUnion(::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::set_IsUnion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsUnion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.get_GetUnionCases
::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>* Newtonsoft::Json::Utilities::FSharpUtils::get_GetUnionCases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::get_GetUnionCases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GetUnionCases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.set_GetUnionCases
void Newtonsoft::Json::Utilities::FSharpUtils::set_GetUnionCases(::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::set_GetUnionCases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GetUnionCases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.get_PreComputeUnionTagReader
::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>* Newtonsoft::Json::Utilities::FSharpUtils::get_PreComputeUnionTagReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::get_PreComputeUnionTagReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PreComputeUnionTagReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.set_PreComputeUnionTagReader
void Newtonsoft::Json::Utilities::FSharpUtils::set_PreComputeUnionTagReader(::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::set_PreComputeUnionTagReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PreComputeUnionTagReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.get_PreComputeUnionReader
::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>* Newtonsoft::Json::Utilities::FSharpUtils::get_PreComputeUnionReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::get_PreComputeUnionReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PreComputeUnionReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.set_PreComputeUnionReader
void Newtonsoft::Json::Utilities::FSharpUtils::set_PreComputeUnionReader(::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::set_PreComputeUnionReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PreComputeUnionReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.get_PreComputeUnionConstructor
::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>* Newtonsoft::Json::Utilities::FSharpUtils::get_PreComputeUnionConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::get_PreComputeUnionConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PreComputeUnionConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.set_PreComputeUnionConstructor
void Newtonsoft::Json::Utilities::FSharpUtils::set_PreComputeUnionConstructor(::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::set_PreComputeUnionConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PreComputeUnionConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.get_GetUnionCaseInfoDeclaringType
::System::Func_2<::Il2CppObject*, ::Il2CppObject*>* Newtonsoft::Json::Utilities::FSharpUtils::get_GetUnionCaseInfoDeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::get_GetUnionCaseInfoDeclaringType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GetUnionCaseInfoDeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::Il2CppObject*, ::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.set_GetUnionCaseInfoDeclaringType
void Newtonsoft::Json::Utilities::FSharpUtils::set_GetUnionCaseInfoDeclaringType(::System::Func_2<::Il2CppObject*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::set_GetUnionCaseInfoDeclaringType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GetUnionCaseInfoDeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.get_GetUnionCaseInfoName
::System::Func_2<::Il2CppObject*, ::Il2CppObject*>* Newtonsoft::Json::Utilities::FSharpUtils::get_GetUnionCaseInfoName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::get_GetUnionCaseInfoName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GetUnionCaseInfoName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::Il2CppObject*, ::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.set_GetUnionCaseInfoName
void Newtonsoft::Json::Utilities::FSharpUtils::set_GetUnionCaseInfoName(::System::Func_2<::Il2CppObject*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::set_GetUnionCaseInfoName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GetUnionCaseInfoName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.get_GetUnionCaseInfoTag
::System::Func_2<::Il2CppObject*, ::Il2CppObject*>* Newtonsoft::Json::Utilities::FSharpUtils::get_GetUnionCaseInfoTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::get_GetUnionCaseInfoTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GetUnionCaseInfoTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::Il2CppObject*, ::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.set_GetUnionCaseInfoTag
void Newtonsoft::Json::Utilities::FSharpUtils::set_GetUnionCaseInfoTag(::System::Func_2<::Il2CppObject*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::set_GetUnionCaseInfoTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GetUnionCaseInfoTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.get_GetUnionCaseInfoFields
::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>* Newtonsoft::Json::Utilities::FSharpUtils::get_GetUnionCaseInfoFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::get_GetUnionCaseInfoFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GetUnionCaseInfoFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.set_GetUnionCaseInfoFields
void Newtonsoft::Json::Utilities::FSharpUtils::set_GetUnionCaseInfoFields(::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::set_GetUnionCaseInfoFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GetUnionCaseInfoFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils..cctor
void Newtonsoft::Json::Utilities::FSharpUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "FSharpUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized
void Newtonsoft::Json::Utilities::FSharpUtils::EnsureInitialized(::System::Reflection::Assembly* fsharpCoreAssembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::EnsureInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "FSharpUtils", "EnsureInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fsharpCoreAssembly)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fsharpCoreAssembly);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.GetMethodWithNonPublicFallback
::System::Reflection::MethodInfo* Newtonsoft::Json::Utilities::FSharpUtils::GetMethodWithNonPublicFallback(::System::Type* type, ::StringW methodName, ::System::Reflection::BindingFlags bindingFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::GetMethodWithNonPublicFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "FSharpUtils", "GetMethodWithNonPublicFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(bindingFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, methodName, bindingFlags);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.CreateFSharpFuncCall
::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>* Newtonsoft::Json::Utilities::FSharpUtils::CreateFSharpFuncCall(::System::Type* type, ::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::CreateFSharpFuncCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "FSharpUtils", "CreateFSharpFuncCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(methodName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, methodName);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.CreateSeq
::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* Newtonsoft::Json::Utilities::FSharpUtils::CreateSeq(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::CreateSeq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSeq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*, false>(this, ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils.CreateMap
::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* Newtonsoft::Json::Utilities::FSharpUtils::CreateMap(::System::Type* keyType, ::System::Type* valueType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::CreateMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyType), ::il2cpp_utils::ExtractType(valueType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*, false>(this, ___internal__method, keyType, valueType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.FSharpUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass52_0
#include "Newtonsoft/Json/Utilities/FSharpUtils_--c__DisplayClass52_0.hpp"
// Including type: Newtonsoft.Json.Utilities.MethodCall`2
#include "Newtonsoft/Json/Utilities/MethodCall_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> call
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::FSharpUtils::$$c__DisplayClass52_0::dyn_call() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::$$c__DisplayClass52_0::dyn_call");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "call"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> invoke
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::FSharpUtils::$$c__DisplayClass52_0::dyn_invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::$$c__DisplayClass52_0::dyn_invoke");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invoke"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.FSharpUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass52_0.<CreateFSharpFuncCall>b__0
::Il2CppObject* Newtonsoft::Json::Utilities::FSharpUtils::$$c__DisplayClass52_0::$CreateFSharpFuncCall$b__0(::Il2CppObject* target, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::$$c__DisplayClass52_0::<CreateFSharpFuncCall>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFSharpFuncCall>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, target, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils
#include "Newtonsoft/Json/Utilities/ImmutableCollectionsUtils.hpp"
// Including type: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.ImmutableCollectionTypeInfo
#include "Newtonsoft/Json/Utilities/ImmutableCollectionsUtils_ImmutableCollectionTypeInfo.hpp"
// Including type: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass24_0
#include "Newtonsoft/Json/Utilities/ImmutableCollectionsUtils_--c__DisplayClass24_0.hpp"
// Including type: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.<>c
#include "Newtonsoft/Json/Utilities/ImmutableCollectionsUtils_--c.hpp"
// Including type: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass25_0
#include "Newtonsoft/Json/Utilities/ImmutableCollectionsUtils_--c__DisplayClass25_0.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.Serialization.ObjectConstructor`1
#include "Newtonsoft/Json/Serialization/ObjectConstructor_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.IList`1<Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.ImmutableCollectionTypeInfo> ArrayContractImmutableCollectionDefinitions
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo*>* Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::_get_ArrayContractImmutableCollectionDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::_get_ArrayContractImmutableCollectionDefinitions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo*>*>("Newtonsoft.Json.Utilities", "ImmutableCollectionsUtils", "ArrayContractImmutableCollectionDefinitions"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.IList`1<Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.ImmutableCollectionTypeInfo> ArrayContractImmutableCollectionDefinitions
void Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::_set_ArrayContractImmutableCollectionDefinitions(::System::Collections::Generic::IList_1<::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::_set_ArrayContractImmutableCollectionDefinitions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ImmutableCollectionsUtils", "ArrayContractImmutableCollectionDefinitions", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.IList`1<Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.ImmutableCollectionTypeInfo> DictionaryContractImmutableCollectionDefinitions
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo*>* Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::_get_DictionaryContractImmutableCollectionDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::_get_DictionaryContractImmutableCollectionDefinitions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo*>*>("Newtonsoft.Json.Utilities", "ImmutableCollectionsUtils", "DictionaryContractImmutableCollectionDefinitions"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.IList`1<Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.ImmutableCollectionTypeInfo> DictionaryContractImmutableCollectionDefinitions
void Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::_set_DictionaryContractImmutableCollectionDefinitions(::System::Collections::Generic::IList_1<::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::_set_DictionaryContractImmutableCollectionDefinitions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ImmutableCollectionsUtils", "DictionaryContractImmutableCollectionDefinitions", value));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils..cctor
void Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ImmutableCollectionsUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract
bool Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::TryBuildImmutableForArrayContract(::System::Type* underlyingType, ::System::Type* collectionItemType, ByRef<::System::Type*> createdType, ByRef<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*> parameterizedCreator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::TryBuildImmutableForArrayContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ImmutableCollectionsUtils", "TryBuildImmutableForArrayContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(underlyingType), ::il2cpp_utils::ExtractType(collectionItemType), ::il2cpp_utils::ExtractIndependentType<::System::Type*&>(), ::il2cpp_utils::ExtractIndependentType<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, underlyingType, collectionItemType, byref(createdType), byref(parameterizedCreator));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract
bool Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::TryBuildImmutableForDictionaryContract(::System::Type* underlyingType, ::System::Type* keyItemType, ::System::Type* valueItemType, ByRef<::System::Type*> createdType, ByRef<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*> parameterizedCreator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::TryBuildImmutableForDictionaryContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ImmutableCollectionsUtils", "TryBuildImmutableForDictionaryContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(underlyingType), ::il2cpp_utils::ExtractType(keyItemType), ::il2cpp_utils::ExtractType(valueItemType), ::il2cpp_utils::ExtractIndependentType<::System::Type*&>(), ::il2cpp_utils::ExtractIndependentType<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, underlyingType, keyItemType, valueItemType, byref(createdType), byref(parameterizedCreator));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.ImmutableCollectionTypeInfo
#include "Newtonsoft/Json/Utilities/ImmutableCollectionsUtils_ImmutableCollectionTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <ContractTypeName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo::dyn_$ContractTypeName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo::dyn_$ContractTypeName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ContractTypeName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <CreatedTypeName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo::dyn_$CreatedTypeName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo::dyn_$CreatedTypeName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CreatedTypeName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <BuilderTypeName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo::dyn_$BuilderTypeName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo::dyn_$BuilderTypeName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BuilderTypeName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.ImmutableCollectionTypeInfo.get_ContractTypeName
::StringW Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo::get_ContractTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo::get_ContractTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContractTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.ImmutableCollectionTypeInfo.set_ContractTypeName
void Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo::set_ContractTypeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo::set_ContractTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContractTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.ImmutableCollectionTypeInfo.get_CreatedTypeName
::StringW Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo::get_CreatedTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo::get_CreatedTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CreatedTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.ImmutableCollectionTypeInfo.set_CreatedTypeName
void Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo::set_CreatedTypeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo::set_CreatedTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CreatedTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.ImmutableCollectionTypeInfo.get_BuilderTypeName
::StringW Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo::get_BuilderTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo::get_BuilderTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuilderTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.ImmutableCollectionTypeInfo.set_BuilderTypeName
void Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo::set_BuilderTypeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo::set_BuilderTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BuilderTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass24_0
#include "Newtonsoft/Json/Utilities/ImmutableCollectionsUtils_--c__DisplayClass24_0.hpp"
// Including type: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.ImmutableCollectionTypeInfo
#include "Newtonsoft/Json/Utilities/ImmutableCollectionsUtils_ImmutableCollectionTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c__DisplayClass24_0::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c__DisplayClass24_0::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass24_0.<TryBuildImmutableForArrayContract>b__0
bool Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c__DisplayClass24_0::$TryBuildImmutableForArrayContract$b__0(::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo* d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c__DisplayClass24_0::<TryBuildImmutableForArrayContract>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryBuildImmutableForArrayContract>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, d);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.<>c
#include "Newtonsoft/Json/Utilities/ImmutableCollectionsUtils_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [NullableAttribute] Offset: 0x6758BC
// Autogenerated static field getter
// Get static field: static public readonly Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.<>c <>9
::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c* Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c*>("Newtonsoft.Json.Utilities", "ImmutableCollectionsUtils/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.<>c <>9
void Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::_set_$$9(::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ImmutableCollectionsUtils/<>c", "<>9", value)));
}
// [NullableAttribute] Offset: 0x6758D0
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.MethodInfo,System.Boolean> <>9__24_1
::System::Func_2<::System::Reflection::MethodInfo*, bool>* Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::_get_$$9__24_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::_get_$$9__24_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::MethodInfo*, bool>*>("Newtonsoft.Json.Utilities", "ImmutableCollectionsUtils/<>c", "<>9__24_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.MethodInfo,System.Boolean> <>9__24_1
void Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::_set_$$9__24_1(::System::Func_2<::System::Reflection::MethodInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::_set_$$9__24_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ImmutableCollectionsUtils/<>c", "<>9__24_1", value)));
}
// [NullableAttribute] Offset: 0x6758E4
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.MethodInfo,System.Boolean> <>9__25_1
::System::Func_2<::System::Reflection::MethodInfo*, bool>* Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::_get_$$9__25_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::_get_$$9__25_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::MethodInfo*, bool>*>("Newtonsoft.Json.Utilities", "ImmutableCollectionsUtils/<>c", "<>9__25_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.MethodInfo,System.Boolean> <>9__25_1
void Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::_set_$$9__25_1(::System::Func_2<::System::Reflection::MethodInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::_set_$$9__25_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ImmutableCollectionsUtils/<>c", "<>9__25_1", value)));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.<>c..cctor
void Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ImmutableCollectionsUtils/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.<>c.<TryBuildImmutableForArrayContract>b__24_1
bool Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::$TryBuildImmutableForArrayContract$b__24_1(::System::Reflection::MethodInfo* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::<TryBuildImmutableForArrayContract>b__24_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryBuildImmutableForArrayContract>b__24_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.<>c.<TryBuildImmutableForDictionaryContract>b__25_1
bool Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::$TryBuildImmutableForDictionaryContract$b__25_1(::System::Reflection::MethodInfo* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::<TryBuildImmutableForDictionaryContract>b__25_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryBuildImmutableForDictionaryContract>b__25_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass25_0
#include "Newtonsoft/Json/Utilities/ImmutableCollectionsUtils_--c__DisplayClass25_0.hpp"
// Including type: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.ImmutableCollectionTypeInfo
#include "Newtonsoft/Json/Utilities/ImmutableCollectionsUtils_ImmutableCollectionTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c__DisplayClass25_0::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c__DisplayClass25_0::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass25_0.<TryBuildImmutableForDictionaryContract>b__0
bool Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c__DisplayClass25_0::$TryBuildImmutableForDictionaryContract$b__0(::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::ImmutableCollectionTypeInfo* d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c__DisplayClass25_0::<TryBuildImmutableForDictionaryContract>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryBuildImmutableForDictionaryContract>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, d);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.BufferUtils
#include "Newtonsoft/Json/Utilities/BufferUtils.hpp"
// Including type: Newtonsoft.Json.IArrayPool`1
#include "Newtonsoft/Json/IArrayPool_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.BufferUtils.RentBuffer
::ArrayW<::Il2CppChar> Newtonsoft::Json::Utilities::BufferUtils::RentBuffer(::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>* bufferPool, int minSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::BufferUtils::RentBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "BufferUtils", "RentBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferPool), ::il2cpp_utils::ExtractType(minSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bufferPool, minSize);
}
// Autogenerated method: Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer
void Newtonsoft::Json::Utilities::BufferUtils::ReturnBuffer(::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>* bufferPool, ::ArrayW<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::BufferUtils::ReturnBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "BufferUtils", "ReturnBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferPool), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bufferPool, buffer);
}
// Autogenerated method: Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize
::ArrayW<::Il2CppChar> Newtonsoft::Json::Utilities::BufferUtils::EnsureBufferSize(::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>* bufferPool, int size, ::ArrayW<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::BufferUtils::EnsureBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "BufferUtils", "EnsureBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferPool), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bufferPool, size, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.JavaScriptUtils
#include "Newtonsoft/Json/Utilities/JavaScriptUtils.hpp"
// Including type: Newtonsoft.Json.StringEscapeHandling
#include "Newtonsoft/Json/StringEscapeHandling.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: Newtonsoft.Json.IArrayPool`1
#include "Newtonsoft/Json/IArrayPool_1.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Boolean[] SingleQuoteCharEscapeFlags
::ArrayW<bool> Newtonsoft::Json::Utilities::JavaScriptUtils::_get_SingleQuoteCharEscapeFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::_get_SingleQuoteCharEscapeFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<bool>>("Newtonsoft.Json.Utilities", "JavaScriptUtils", "SingleQuoteCharEscapeFlags"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean[] SingleQuoteCharEscapeFlags
void Newtonsoft::Json::Utilities::JavaScriptUtils::_set_SingleQuoteCharEscapeFlags(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::_set_SingleQuoteCharEscapeFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "JavaScriptUtils", "SingleQuoteCharEscapeFlags", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Boolean[] DoubleQuoteCharEscapeFlags
::ArrayW<bool> Newtonsoft::Json::Utilities::JavaScriptUtils::_get_DoubleQuoteCharEscapeFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::_get_DoubleQuoteCharEscapeFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<bool>>("Newtonsoft.Json.Utilities", "JavaScriptUtils", "DoubleQuoteCharEscapeFlags"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean[] DoubleQuoteCharEscapeFlags
void Newtonsoft::Json::Utilities::JavaScriptUtils::_set_DoubleQuoteCharEscapeFlags(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::_set_DoubleQuoteCharEscapeFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "JavaScriptUtils", "DoubleQuoteCharEscapeFlags", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Boolean[] HtmlCharEscapeFlags
::ArrayW<bool> Newtonsoft::Json::Utilities::JavaScriptUtils::_get_HtmlCharEscapeFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::_get_HtmlCharEscapeFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<bool>>("Newtonsoft.Json.Utilities", "JavaScriptUtils", "HtmlCharEscapeFlags"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean[] HtmlCharEscapeFlags
void Newtonsoft::Json::Utilities::JavaScriptUtils::_set_HtmlCharEscapeFlags(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::_set_HtmlCharEscapeFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "JavaScriptUtils", "HtmlCharEscapeFlags", value));
}
// Autogenerated method: Newtonsoft.Json.Utilities.JavaScriptUtils..cctor
void Newtonsoft::Json::Utilities::JavaScriptUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "JavaScriptUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags
::ArrayW<bool> Newtonsoft::Json::Utilities::JavaScriptUtils::GetCharEscapeFlags(::Newtonsoft::Json::StringEscapeHandling stringEscapeHandling, ::Il2CppChar quoteChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::GetCharEscapeFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "JavaScriptUtils", "GetCharEscapeFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringEscapeHandling), ::il2cpp_utils::ExtractType(quoteChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<bool>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringEscapeHandling, quoteChar);
}
// Autogenerated method: Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString
bool Newtonsoft::Json::Utilities::JavaScriptUtils::ShouldEscapeJavaScriptString(::StringW s, ::ArrayW<bool> charEscapeFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::ShouldEscapeJavaScriptString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "JavaScriptUtils", "ShouldEscapeJavaScriptString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(charEscapeFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, charEscapeFlags);
}
// Autogenerated method: Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString
void Newtonsoft::Json::Utilities::JavaScriptUtils::WriteEscapedJavaScriptString(::System::IO::TextWriter* writer, ::StringW s, ::Il2CppChar delimiter, bool appendDelimiters, ::ArrayW<bool> charEscapeFlags, ::Newtonsoft::Json::StringEscapeHandling stringEscapeHandling, ::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>* bufferPool, ByRef<::ArrayW<::Il2CppChar>> writeBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::WriteEscapedJavaScriptString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "JavaScriptUtils", "WriteEscapedJavaScriptString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(delimiter), ::il2cpp_utils::ExtractType(appendDelimiters), ::il2cpp_utils::ExtractType(charEscapeFlags), ::il2cpp_utils::ExtractType(stringEscapeHandling), ::il2cpp_utils::ExtractType(bufferPool), ::il2cpp_utils::ExtractType(writeBuffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer, s, delimiter, appendDelimiters, charEscapeFlags, stringEscapeHandling, bufferPool, byref(writeBuffer));
}
// Autogenerated method: Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString
::StringW Newtonsoft::Json::Utilities::JavaScriptUtils::ToEscapedJavaScriptString(::StringW value, ::Il2CppChar delimiter, bool appendDelimiters, ::Newtonsoft::Json::StringEscapeHandling stringEscapeHandling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::ToEscapedJavaScriptString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "JavaScriptUtils", "ToEscapedJavaScriptString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(delimiter), ::il2cpp_utils::ExtractType(appendDelimiters), ::il2cpp_utils::ExtractType(stringEscapeHandling)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, delimiter, appendDelimiters, stringEscapeHandling);
}
// Autogenerated method: Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape
int Newtonsoft::Json::Utilities::JavaScriptUtils::FirstCharToEscape(::StringW s, ::ArrayW<bool> charEscapeFlags, ::Newtonsoft::Json::StringEscapeHandling stringEscapeHandling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::FirstCharToEscape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "JavaScriptUtils", "FirstCharToEscape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(charEscapeFlags), ::il2cpp_utils::ExtractType(stringEscapeHandling)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, charEscapeFlags, stringEscapeHandling);
}
// Autogenerated method: Newtonsoft.Json.Utilities.JavaScriptUtils.TryGetDateFromConstructorJson
bool Newtonsoft::Json::Utilities::JavaScriptUtils::TryGetDateFromConstructorJson(::Newtonsoft::Json::JsonReader* reader, ByRef<::System::DateTime> dateTime, ByRef<::StringW> errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::TryGetDateFromConstructorJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "JavaScriptUtils", "TryGetDateFromConstructorJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, byref(dateTime), byref(errorMessage));
}
// Autogenerated method: Newtonsoft.Json.Utilities.JavaScriptUtils.TryGetDateConstructorValue
bool Newtonsoft::Json::Utilities::JavaScriptUtils::TryGetDateConstructorValue(::Newtonsoft::Json::JsonReader* reader, ByRef<::System::Nullable_1<int64_t>> integer, ByRef<::StringW> errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::TryGetDateConstructorValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "JavaScriptUtils", "TryGetDateConstructorValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractIndependentType<::System::Nullable_1<int64_t>&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, byref(integer), byref(errorMessage));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.JsonTokenUtils
#include "Newtonsoft/Json/Utilities/JsonTokenUtils.hpp"
// Including type: Newtonsoft.Json.JsonToken
#include "Newtonsoft/Json/JsonToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.JsonTokenUtils.IsEndToken
bool Newtonsoft::Json::Utilities::JsonTokenUtils::IsEndToken(::Newtonsoft::Json::JsonToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JsonTokenUtils::IsEndToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "JsonTokenUtils", "IsEndToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.Utilities.JsonTokenUtils.IsStartToken
bool Newtonsoft::Json::Utilities::JsonTokenUtils::IsStartToken(::Newtonsoft::Json::JsonToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JsonTokenUtils::IsStartToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "JsonTokenUtils", "IsStartToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken
bool Newtonsoft::Json::Utilities::JsonTokenUtils::IsPrimitiveToken(::Newtonsoft::Json::JsonToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JsonTokenUtils::IsPrimitiveToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "JsonTokenUtils", "IsPrimitiveToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory
#include "Newtonsoft/Json/Utilities/LateBoundReflectionDelegateFactory.hpp"
// Including type: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass3_0
#include "Newtonsoft/Json/Utilities/LateBoundReflectionDelegateFactory_--c__DisplayClass3_0.hpp"
// Including type: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass4_0`1
#include "Newtonsoft/Json/Utilities/LateBoundReflectionDelegateFactory_--c__DisplayClass4_0_1.hpp"
// Including type: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass5_0`1
#include "Newtonsoft/Json/Utilities/LateBoundReflectionDelegateFactory_--c__DisplayClass5_0_1.hpp"
// Including type: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass6_0`1
#include "Newtonsoft/Json/Utilities/LateBoundReflectionDelegateFactory_--c__DisplayClass6_0_1.hpp"
// Including type: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass7_0`1
#include "Newtonsoft/Json/Utilities/LateBoundReflectionDelegateFactory_--c__DisplayClass7_0_1.hpp"
// Including type: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass8_0`1
#include "Newtonsoft/Json/Utilities/LateBoundReflectionDelegateFactory_--c__DisplayClass8_0_1.hpp"
// Including type: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass9_0`1
#include "Newtonsoft/Json/Utilities/LateBoundReflectionDelegateFactory_--c__DisplayClass9_0_1.hpp"
// Including type: Newtonsoft.Json.Serialization.ObjectConstructor`1
#include "Newtonsoft/Json/Serialization/ObjectConstructor_1.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: Newtonsoft.Json.Utilities.MethodCall`2
#include "Newtonsoft/Json/Utilities/MethodCall_2.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory _instance
::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory* Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory*>("Newtonsoft.Json.Utilities", "LateBoundReflectionDelegateFactory", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory _instance
void Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::_set__instance(::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "LateBoundReflectionDelegateFactory", "_instance", value));
}
// Autogenerated method: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.get_Instance
::Newtonsoft::Json::Utilities::ReflectionDelegateFactory* Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "LateBoundReflectionDelegateFactory", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::ReflectionDelegateFactory*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory..cctor
void Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "LateBoundReflectionDelegateFactory", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateParameterizedConstructor
::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::CreateParameterizedConstructor(::System::Reflection::MethodBase* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::CreateParameterizedConstructor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Utilities::ReflectionDelegateFactory*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*, false>(this, ___internal__method, method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass3_0
#include "Newtonsoft/Json/Utilities/LateBoundReflectionDelegateFactory_--c__DisplayClass3_0.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.ConstructorInfo c
[[deprecated("Use field access instead!")]] ::System::Reflection::ConstructorInfo*& Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::$$c__DisplayClass3_0::dyn_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::$$c__DisplayClass3_0::dyn_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  return *reinterpret_cast<::System::Reflection::ConstructorInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MethodBase method
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodBase*& Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::$$c__DisplayClass3_0::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::$$c__DisplayClass3_0::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass3_0.<CreateParameterizedConstructor>b__0
::Il2CppObject* Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::$$c__DisplayClass3_0::$CreateParameterizedConstructor$b__0(::ArrayW<::Il2CppObject*> a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::$$c__DisplayClass3_0::<CreateParameterizedConstructor>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateParameterizedConstructor>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, a);
}
// Autogenerated method: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass3_0.<CreateParameterizedConstructor>b__1
::Il2CppObject* Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::$$c__DisplayClass3_0::$CreateParameterizedConstructor$b__1(::ArrayW<::Il2CppObject*> a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::$$c__DisplayClass3_0::<CreateParameterizedConstructor>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateParameterizedConstructor>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, a);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.MathUtils
#include "Newtonsoft/Json/Utilities/MathUtils.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.MathUtils.IntLength
int Newtonsoft::Json::Utilities::MathUtils::IntLength(uint64_t i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MathUtils::IntLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MathUtils", "IntLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: Newtonsoft.Json.Utilities.MathUtils.IntToHex
::Il2CppChar Newtonsoft::Json::Utilities::MathUtils::IntToHex(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MathUtils::IntToHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MathUtils", "IntToHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n);
}
// Autogenerated method: Newtonsoft.Json.Utilities.MathUtils.ApproxEquals
bool Newtonsoft::Json::Utilities::MathUtils::ApproxEquals(double d1, double d2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MathUtils::ApproxEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MathUtils", "ApproxEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d1), ::il2cpp_utils::ExtractType(d2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d1, d2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.MiscellaneousUtils
#include "Newtonsoft/Json/Utilities/MiscellaneousUtils.hpp"
// Including type: System.ArgumentOutOfRangeException
#include "System/ArgumentOutOfRangeException.hpp"
// Including type: System.Text.RegularExpressions.RegexOptions
#include "System/Text/RegularExpressions/RegexOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals
bool Newtonsoft::Json::Utilities::MiscellaneousUtils::ValueEquals(::Il2CppObject* objA, ::Il2CppObject* objB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MiscellaneousUtils::ValueEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MiscellaneousUtils", "ValueEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objA), ::il2cpp_utils::ExtractType(objB)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objA, objB);
}
// Autogenerated method: Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException
::System::ArgumentOutOfRangeException* Newtonsoft::Json::Utilities::MiscellaneousUtils::CreateArgumentOutOfRangeException(::StringW paramName, ::Il2CppObject* actualValue, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MiscellaneousUtils::CreateArgumentOutOfRangeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MiscellaneousUtils", "CreateArgumentOutOfRangeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(actualValue), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArgumentOutOfRangeException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName, actualValue, message);
}
// Autogenerated method: Newtonsoft.Json.Utilities.MiscellaneousUtils.ToString
::StringW Newtonsoft::Json::Utilities::MiscellaneousUtils::ToString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MiscellaneousUtils::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MiscellaneousUtils", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare
int Newtonsoft::Json::Utilities::MiscellaneousUtils::ByteArrayCompare(::ArrayW<uint8_t> a1, ::ArrayW<uint8_t> a2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MiscellaneousUtils::ByteArrayCompare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MiscellaneousUtils", "ByteArrayCompare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a1), ::il2cpp_utils::ExtractType(a2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a1, a2);
}
// Autogenerated method: Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix
::StringW Newtonsoft::Json::Utilities::MiscellaneousUtils::GetPrefix(::StringW qualifiedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MiscellaneousUtils::GetPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MiscellaneousUtils", "GetPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qualifiedName);
}
// Autogenerated method: Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName
::StringW Newtonsoft::Json::Utilities::MiscellaneousUtils::GetLocalName(::StringW qualifiedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MiscellaneousUtils::GetLocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MiscellaneousUtils", "GetLocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qualifiedName);
}
// Autogenerated method: Newtonsoft.Json.Utilities.MiscellaneousUtils.GetQualifiedNameParts
void Newtonsoft::Json::Utilities::MiscellaneousUtils::GetQualifiedNameParts(::StringW qualifiedName, ByRef<::StringW> prefix, ByRef<::StringW> localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MiscellaneousUtils::GetQualifiedNameParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MiscellaneousUtils", "GetQualifiedNameParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qualifiedName, byref(prefix), byref(localName));
}
// Autogenerated method: Newtonsoft.Json.Utilities.MiscellaneousUtils.GetRegexOptions
::System::Text::RegularExpressions::RegexOptions Newtonsoft::Json::Utilities::MiscellaneousUtils::GetRegexOptions(::StringW optionsText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MiscellaneousUtils::GetRegexOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MiscellaneousUtils", "GetRegexOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionsText)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexOptions, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionsText);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ReflectionDelegateFactory
#include "Newtonsoft/Json/Utilities/ReflectionDelegateFactory.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Newtonsoft.Json.Utilities.MethodCall`2
#include "Newtonsoft/Json/Utilities/MethodCall_2.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: Newtonsoft.Json.Serialization.ObjectConstructor`1
#include "Newtonsoft/Json/Serialization/ObjectConstructor_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor
::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* Newtonsoft::Json::Utilities::ReflectionDelegateFactory::CreateParameterizedConstructor(::System::Reflection::MethodBase* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionDelegateFactory::CreateParameterizedConstructor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Utilities::ReflectionDelegateFactory*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*, false>(this, ___internal__method, method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ReflectionMember
#include "Newtonsoft/Json/Utilities/ReflectionMember.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type <MemberType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Utilities::ReflectionMember::dyn_$MemberType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionMember::dyn_$MemberType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MemberType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`2<System.Object,System.Object> <Getter>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Func_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::ReflectionMember::dyn_$Getter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionMember::dyn_$Getter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Getter>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.Object,System.Object> <Setter>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Action_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::ReflectionMember::dyn_$Setter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionMember::dyn_$Setter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Setter>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Action_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionMember.get_MemberType
::System::Type* Newtonsoft::Json::Utilities::ReflectionMember::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionMember::get_MemberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionMember.set_MemberType
void Newtonsoft::Json::Utilities::ReflectionMember::set_MemberType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionMember::set_MemberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionMember.get_Getter
::System::Func_2<::Il2CppObject*, ::Il2CppObject*>* Newtonsoft::Json::Utilities::ReflectionMember::get_Getter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionMember::get_Getter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Getter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::Il2CppObject*, ::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionMember.set_Getter
void Newtonsoft::Json::Utilities::ReflectionMember::set_Getter(::System::Func_2<::Il2CppObject*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionMember::set_Getter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Getter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionMember.get_Setter
::System::Action_2<::Il2CppObject*, ::Il2CppObject*>* Newtonsoft::Json::Utilities::ReflectionMember::get_Setter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionMember::get_Setter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Setter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action_2<::Il2CppObject*, ::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionMember.set_Setter
void Newtonsoft::Json::Utilities::ReflectionMember::set_Setter(::System::Action_2<::Il2CppObject*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionMember::set_Setter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Setter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject
#include "Newtonsoft/Json/Utilities/ReflectionObject.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject/Newtonsoft.Json.Utilities.<>c__DisplayClass11_0
#include "Newtonsoft/Json/Utilities/ReflectionObject_--c__DisplayClass11_0.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject/Newtonsoft.Json.Utilities.<>c__DisplayClass11_1
#include "Newtonsoft/Json/Utilities/ReflectionObject_--c__DisplayClass11_1.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject/Newtonsoft.Json.Utilities.<>c__DisplayClass11_2
#include "Newtonsoft/Json/Utilities/ReflectionObject_--c__DisplayClass11_2.hpp"
// Including type: Newtonsoft.Json.Serialization.ObjectConstructor`1
#include "Newtonsoft/Json/Serialization/ObjectConstructor_1.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionMember
#include "Newtonsoft/Json/Utilities/ReflectionMember.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> <Creator>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*& Newtonsoft::Json::Utilities::ReflectionObject::dyn_$Creator$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::dyn_$Creator$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Creator>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IDictionary`2<System.String,Newtonsoft.Json.Utilities.ReflectionMember> <Members>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::Newtonsoft::Json::Utilities::ReflectionMember*>*& Newtonsoft::Json::Utilities::ReflectionObject::dyn_$Members$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::dyn_$Members$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Members>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::Newtonsoft::Json::Utilities::ReflectionMember*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject.get_Creator
::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* Newtonsoft::Json::Utilities::ReflectionObject::get_Creator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::get_Creator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Creator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject.get_Members
::System::Collections::Generic::IDictionary_2<::StringW, ::Newtonsoft::Json::Utilities::ReflectionMember*>* Newtonsoft::Json::Utilities::ReflectionObject::get_Members() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::get_Members");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Members", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IDictionary_2<::StringW, ::Newtonsoft::Json::Utilities::ReflectionMember*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject.GetValue
::Il2CppObject* Newtonsoft::Json::Utilities::ReflectionObject::GetValue(::Il2CppObject* target, ::StringW member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, target, member);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject.SetValue
void Newtonsoft::Json::Utilities::ReflectionObject::SetValue(::Il2CppObject* target, ::StringW member, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, member, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject.GetType
::System::Type* Newtonsoft::Json::Utilities::ReflectionObject::GetType(::StringW member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, member);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject.Create
::Newtonsoft::Json::Utilities::ReflectionObject* Newtonsoft::Json::Utilities::ReflectionObject::Create(::System::Type* t, ::ArrayW<::StringW> memberNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionObject", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(memberNames)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::ReflectionObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, memberNames);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject.Create
::Newtonsoft::Json::Utilities::ReflectionObject* Newtonsoft::Json::Utilities::ReflectionObject::Create(::System::Type* t, ::System::Reflection::MethodBase* creator, ::ArrayW<::StringW> memberNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionObject", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(creator), ::il2cpp_utils::ExtractType(memberNames)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::ReflectionObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, creator, memberNames);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject/Newtonsoft.Json.Utilities.<>c__DisplayClass11_0
#include "Newtonsoft/Json/Utilities/ReflectionObject_--c__DisplayClass11_0.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Func`1<System.Object> ctor
[[deprecated("Use field access instead!")]] ::System::Func_1<::Il2CppObject*>*& Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass11_0::dyn_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass11_0::dyn_ctor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ctor"))->offset;
  return *reinterpret_cast<::System::Func_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject/Newtonsoft.Json.Utilities.<>c__DisplayClass11_0.<Create>b__0
::Il2CppObject* Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass11_0::$Create$b__0(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass11_0::<Create>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Create>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject/Newtonsoft.Json.Utilities.<>c__DisplayClass11_1
#include "Newtonsoft/Json/Utilities/ReflectionObject_--c__DisplayClass11_1.hpp"
// Including type: Newtonsoft.Json.Utilities.MethodCall`2
#include "Newtonsoft/Json/Utilities/MethodCall_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> call
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass11_1::dyn_call() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass11_1::dyn_call");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "call"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject/Newtonsoft.Json.Utilities.<>c__DisplayClass11_1.<Create>b__1
::Il2CppObject* Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass11_1::$Create$b__1(::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass11_1::<Create>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Create>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, target);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject/Newtonsoft.Json.Utilities.<>c__DisplayClass11_2
#include "Newtonsoft/Json/Utilities/ReflectionObject_--c__DisplayClass11_2.hpp"
// Including type: Newtonsoft.Json.Utilities.MethodCall`2
#include "Newtonsoft/Json/Utilities/MethodCall_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> call
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass11_2::dyn_call() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass11_2::dyn_call");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "call"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject/Newtonsoft.Json.Utilities.<>c__DisplayClass11_2.<Create>b__2
void Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass11_2::$Create$b__2(::Il2CppObject* target, ::Il2CppObject* arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass11_2::<Create>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Create>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, arg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ReflectionUtils
#include "Newtonsoft/Json/Utilities/ReflectionUtils.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c
#include "Newtonsoft/Json/Utilities/ReflectionUtils_--c.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass31_0
#include "Newtonsoft/Json/Utilities/ReflectionUtils_--c__DisplayClass31_0.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass44_0
#include "Newtonsoft/Json/Utilities/ReflectionUtils_--c__DisplayClass44_0.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass44_1
#include "Newtonsoft/Json/Utilities/ReflectionUtils_--c__DisplayClass44_1.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass45_0
#include "Newtonsoft/Json/Utilities/ReflectionUtils_--c__DisplayClass45_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: Newtonsoft.Json.TypeNameAssemblyFormatHandling
#include "Newtonsoft/Json/TypeNameAssemblyFormatHandling.hpp"
// Including type: Newtonsoft.Json.Serialization.ISerializationBinder
#include "Newtonsoft/Json/Serialization/ISerializationBinder.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: Newtonsoft.Json.Utilities.StructMultiKey`2
#include "Newtonsoft/Json/Utilities/StructMultiKey_2.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Type[] EmptyTypes
::ArrayW<::System::Type*> Newtonsoft::Json::Utilities::ReflectionUtils::_get_EmptyTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::_get_EmptyTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("Newtonsoft.Json.Utilities", "ReflectionUtils", "EmptyTypes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Type[] EmptyTypes
void Newtonsoft::Json::Utilities::ReflectionUtils::_set_EmptyTypes(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::_set_EmptyTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ReflectionUtils", "EmptyTypes", value));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils..cctor
void Newtonsoft::Json::Utilities::ReflectionUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual
bool Newtonsoft::Json::Utilities::ReflectionUtils::IsVirtual(::System::Reflection::PropertyInfo* propertyInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::IsVirtual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "IsVirtual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyInfo);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition
::System::Reflection::MethodInfo* Newtonsoft::Json::Utilities::ReflectionUtils::GetBaseDefinition(::System::Reflection::PropertyInfo* propertyInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetBaseDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetBaseDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyInfo);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic
bool Newtonsoft::Json::Utilities::ReflectionUtils::IsPublic(::System::Reflection::PropertyInfo* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::IsPublic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "IsPublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, property);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType
::System::Type* Newtonsoft::Json::Utilities::ReflectionUtils::GetObjectType(::Il2CppObject* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName
::StringW Newtonsoft::Json::Utilities::ReflectionUtils::GetTypeName(::System::Type* t, ::Newtonsoft::Json::TypeNameAssemblyFormatHandling assemblyFormat, ::Newtonsoft::Json::Serialization::ISerializationBinder* binder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(assemblyFormat), ::il2cpp_utils::ExtractType(binder)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, assemblyFormat, binder);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetFullyQualifiedTypeName
::StringW Newtonsoft::Json::Utilities::ReflectionUtils::GetFullyQualifiedTypeName(::System::Type* t, ::Newtonsoft::Json::Serialization::ISerializationBinder* binder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetFullyQualifiedTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetFullyQualifiedTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(binder)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, binder);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails
::StringW Newtonsoft::Json::Utilities::ReflectionUtils::RemoveAssemblyDetails(::StringW fullyQualifiedTypeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::RemoveAssemblyDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "RemoveAssemblyDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullyQualifiedTypeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fullyQualifiedTypeName);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor
bool Newtonsoft::Json::Utilities::ReflectionUtils::HasDefaultConstructor(::System::Type* t, bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::HasDefaultConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "HasDefaultConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, nonPublic);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor
::System::Reflection::ConstructorInfo* Newtonsoft::Json::Utilities::ReflectionUtils::GetDefaultConstructor(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetDefaultConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetDefaultConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor
::System::Reflection::ConstructorInfo* Newtonsoft::Json::Utilities::ReflectionUtils::GetDefaultConstructor(::System::Type* t, bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetDefaultConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetDefaultConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, nonPublic);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable
bool Newtonsoft::Json::Utilities::ReflectionUtils::IsNullable(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::IsNullable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType
bool Newtonsoft::Json::Utilities::ReflectionUtils::IsNullableType(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::IsNullableType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "IsNullableType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType
::System::Type* Newtonsoft::Json::Utilities::ReflectionUtils::EnsureNotNullableType(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::EnsureNotNullableType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "EnsureNotNullableType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotByRefType
::System::Type* Newtonsoft::Json::Utilities::ReflectionUtils::EnsureNotByRefType(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::EnsureNotByRefType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "EnsureNotByRefType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition
bool Newtonsoft::Json::Utilities::ReflectionUtils::IsGenericDefinition(::System::Type* type, ::System::Type* genericInterfaceDefinition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::IsGenericDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "IsGenericDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(genericInterfaceDefinition)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, genericInterfaceDefinition);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition
bool Newtonsoft::Json::Utilities::ReflectionUtils::ImplementsGenericDefinition(::System::Type* type, ::System::Type* genericInterfaceDefinition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::ImplementsGenericDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "ImplementsGenericDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(genericInterfaceDefinition)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, genericInterfaceDefinition);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition
bool Newtonsoft::Json::Utilities::ReflectionUtils::ImplementsGenericDefinition(::System::Type* type, ::System::Type* genericInterfaceDefinition, ByRef<::System::Type*> implementingType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::ImplementsGenericDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "ImplementsGenericDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(genericInterfaceDefinition), ::il2cpp_utils::ExtractIndependentType<::System::Type*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, genericInterfaceDefinition, byref(implementingType));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition
bool Newtonsoft::Json::Utilities::ReflectionUtils::InheritsGenericDefinition(::System::Type* type, ::System::Type* genericClassDefinition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::InheritsGenericDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "InheritsGenericDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(genericClassDefinition)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, genericClassDefinition);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition
bool Newtonsoft::Json::Utilities::ReflectionUtils::InheritsGenericDefinition(::System::Type* type, ::System::Type* genericClassDefinition, ByRef<::System::Type*> implementingType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::InheritsGenericDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "InheritsGenericDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(genericClassDefinition), ::il2cpp_utils::ExtractIndependentType<::System::Type*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, genericClassDefinition, byref(implementingType));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal
bool Newtonsoft::Json::Utilities::ReflectionUtils::InheritsGenericDefinitionInternal(::System::Type* currentType, ::System::Type* genericClassDefinition, ByRef<::System::Type*> implementingType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::InheritsGenericDefinitionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "InheritsGenericDefinitionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentType), ::il2cpp_utils::ExtractType(genericClassDefinition), ::il2cpp_utils::ExtractIndependentType<::System::Type*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, currentType, genericClassDefinition, byref(implementingType));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType
::System::Type* Newtonsoft::Json::Utilities::ReflectionUtils::GetCollectionItemType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetCollectionItemType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetCollectionItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes
void Newtonsoft::Json::Utilities::ReflectionUtils::GetDictionaryKeyValueTypes(::System::Type* dictionaryType, ByRef<::System::Type*> keyType, ByRef<::System::Type*> valueType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetDictionaryKeyValueTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetDictionaryKeyValueTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionaryType), ::il2cpp_utils::ExtractIndependentType<::System::Type*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Type*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dictionaryType, byref(keyType), byref(valueType));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType
::System::Type* Newtonsoft::Json::Utilities::ReflectionUtils::GetMemberUnderlyingType(::System::Reflection::MemberInfo* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetMemberUnderlyingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetMemberUnderlyingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, member);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.IsByRefLikeType
bool Newtonsoft::Json::Utilities::ReflectionUtils::IsByRefLikeType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::IsByRefLikeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "IsByRefLikeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty
bool Newtonsoft::Json::Utilities::ReflectionUtils::IsIndexedProperty(::System::Reflection::PropertyInfo* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::IsIndexedProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "IsIndexedProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, property);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue
::Il2CppObject* Newtonsoft::Json::Utilities::ReflectionUtils::GetMemberValue(::System::Reflection::MemberInfo* member, ::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetMemberValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetMemberValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, member, target);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue
void Newtonsoft::Json::Utilities::ReflectionUtils::SetMemberValue(::System::Reflection::MemberInfo* member, ::Il2CppObject* target, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::SetMemberValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "SetMemberValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, member, target, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue
bool Newtonsoft::Json::Utilities::ReflectionUtils::CanReadMemberValue(::System::Reflection::MemberInfo* member, bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::CanReadMemberValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "CanReadMemberValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, member, nonPublic);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue
bool Newtonsoft::Json::Utilities::ReflectionUtils::CanSetMemberValue(::System::Reflection::MemberInfo* member, bool nonPublic, bool canSetReadOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::CanSetMemberValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "CanSetMemberValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(nonPublic), ::il2cpp_utils::ExtractType(canSetReadOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, member, nonPublic, canSetReadOnly);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties
::System::Collections::Generic::List_1<::System::Reflection::MemberInfo*>* Newtonsoft::Json::Utilities::ReflectionUtils::GetFieldsAndProperties(::System::Type* type, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetFieldsAndProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetFieldsAndProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Reflection::MemberInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, bindingAttr);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember
bool Newtonsoft::Json::Utilities::ReflectionUtils::IsOverridenGenericMember(::System::Reflection::MemberInfo* memberInfo, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::IsOverridenGenericMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "IsOverridenGenericMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberInfo), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, memberInfo, bindingAttr);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes
::ArrayW<::System::Attribute*> Newtonsoft::Json::Utilities::ReflectionUtils::GetAttributes(::Il2CppObject* attributeProvider, ::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeProvider), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, attributeProvider, attributeType, inherit);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName
::Newtonsoft::Json::Utilities::StructMultiKey_2<::StringW, ::StringW> Newtonsoft::Json::Utilities::ReflectionUtils::SplitFullyQualifiedTypeName(::StringW fullyQualifiedTypeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::SplitFullyQualifiedTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "SplitFullyQualifiedTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullyQualifiedTypeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::StructMultiKey_2<::StringW, ::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fullyQualifiedTypeName);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex
::System::Nullable_1<int> Newtonsoft::Json::Utilities::ReflectionUtils::GetAssemblyDelimiterIndex(::StringW fullyQualifiedTypeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetAssemblyDelimiterIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetAssemblyDelimiterIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullyQualifiedTypeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fullyQualifiedTypeName);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType
::System::Reflection::MemberInfo* Newtonsoft::Json::Utilities::ReflectionUtils::GetMemberInfoFromType(::System::Type* targetType, ::System::Reflection::MemberInfo* memberInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetMemberInfoFromType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetMemberInfoFromType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetType), ::il2cpp_utils::ExtractType(memberInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MemberInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetType, memberInfo);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetFields
::System::Collections::Generic::IEnumerable_1<::System::Reflection::FieldInfo*>* Newtonsoft::Json::Utilities::ReflectionUtils::GetFields(::System::Type* targetType, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetType), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Reflection::FieldInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetType, bindingAttr);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields
void Newtonsoft::Json::Utilities::ReflectionUtils::GetChildPrivateFields(::System::Collections::Generic::IList_1<::System::Reflection::MemberInfo*>* initialFields, ::System::Type* targetType, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetChildPrivateFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetChildPrivateFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialFields), ::il2cpp_utils::ExtractType(targetType), ::il2cpp_utils::ExtractType(bindingAttr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, initialFields, targetType, bindingAttr);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties
::System::Collections::Generic::IEnumerable_1<::System::Reflection::PropertyInfo*>* Newtonsoft::Json::Utilities::ReflectionUtils::GetProperties(::System::Type* targetType, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetType), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Reflection::PropertyInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetType, bindingAttr);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag
::System::Reflection::BindingFlags Newtonsoft::Json::Utilities::ReflectionUtils::RemoveFlag(::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::BindingFlags flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::RemoveFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "RemoveFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::BindingFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bindingAttr, flag);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties
void Newtonsoft::Json::Utilities::ReflectionUtils::GetChildPrivateProperties(::System::Collections::Generic::IList_1<::System::Reflection::PropertyInfo*>* initialProperties, ::System::Type* targetType, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetChildPrivateProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetChildPrivateProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialProperties), ::il2cpp_utils::ExtractType(targetType), ::il2cpp_utils::ExtractType(bindingAttr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, initialProperties, targetType, bindingAttr);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden
bool Newtonsoft::Json::Utilities::ReflectionUtils::IsMethodOverridden(::System::Type* currentType, ::System::Type* methodDeclaringType, ::StringW method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::IsMethodOverridden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "IsMethodOverridden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentType), ::il2cpp_utils::ExtractType(methodDeclaringType), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, currentType, methodDeclaringType, method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue
::Il2CppObject* Newtonsoft::Json::Utilities::ReflectionUtils::GetDefaultValue(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetDefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetDefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c
#include "Newtonsoft/Json/Utilities/ReflectionUtils_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [NullableAttribute] Offset: 0x675CB4
// Autogenerated static field getter
// Get static field: static public readonly Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c <>9
::Newtonsoft::Json::Utilities::ReflectionUtils::$$c* Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ReflectionUtils::$$c*>("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c <>9
void Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9(::Newtonsoft::Json::Utilities::ReflectionUtils::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9", value)));
}
// [NullableAttribute] Offset: 0x675CC8
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.ConstructorInfo,System.Boolean> <>9__11_0
::System::Func_2<::System::Reflection::ConstructorInfo*, bool>* Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::ConstructorInfo*, bool>*>("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.ConstructorInfo,System.Boolean> <>9__11_0
void Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9__11_0(::System::Func_2<::System::Reflection::ConstructorInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9__11_0", value)));
}
// [NullableAttribute] Offset: 0x675CDC
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.MemberInfo,System.String> <>9__31_0
::System::Func_2<::System::Reflection::MemberInfo*, ::StringW>* Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9__31_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9__31_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::MemberInfo*, ::StringW>*>("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9__31_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.MemberInfo,System.String> <>9__31_0
void Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9__31_0(::System::Func_2<::System::Reflection::MemberInfo*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9__31_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9__31_0", value)));
}
// [NullableAttribute] Offset: 0x675CF0
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.ParameterInfo,System.Type> <>9__39_0
::System::Func_2<::System::Reflection::ParameterInfo*, ::System::Type*>* Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9__39_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9__39_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::ParameterInfo*, ::System::Type*>*>("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9__39_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.ParameterInfo,System.Type> <>9__39_0
void Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9__39_0(::System::Func_2<::System::Reflection::ParameterInfo*, ::System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9__39_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9__39_0", value)));
}
// [NullableAttribute] Offset: 0x675D04
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.FieldInfo,System.Boolean> <>9__41_0
::System::Func_2<::System::Reflection::FieldInfo*, bool>* Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9__41_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9__41_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::FieldInfo*, bool>*>("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9__41_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.FieldInfo,System.Boolean> <>9__41_0
void Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9__41_0(::System::Func_2<::System::Reflection::FieldInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9__41_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9__41_0", value)));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c..cctor
void Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c.<GetDefaultConstructor>b__11_0
bool Newtonsoft::Json::Utilities::ReflectionUtils::$$c::$GetDefaultConstructor$b__11_0(::System::Reflection::ConstructorInfo* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::<GetDefaultConstructor>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetDefaultConstructor>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c.<GetFieldsAndProperties>b__31_0
::StringW Newtonsoft::Json::Utilities::ReflectionUtils::$$c::$GetFieldsAndProperties$b__31_0(::System::Reflection::MemberInfo* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::<GetFieldsAndProperties>b__31_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetFieldsAndProperties>b__31_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, m);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c.<GetMemberInfoFromType>b__39_0
::System::Type* Newtonsoft::Json::Utilities::ReflectionUtils::$$c::$GetMemberInfoFromType$b__39_0(::System::Reflection::ParameterInfo* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::<GetMemberInfoFromType>b__39_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetMemberInfoFromType>b__39_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, p);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c.<GetChildPrivateFields>b__41_0
bool Newtonsoft::Json::Utilities::ReflectionUtils::$$c::$GetChildPrivateFields$b__41_0(::System::Reflection::FieldInfo* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::<GetChildPrivateFields>b__41_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetChildPrivateFields>b__41_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, f);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass31_0
#include "Newtonsoft/Json/Utilities/ReflectionUtils_--c__DisplayClass31_0.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MemberInfo memberInfo
[[deprecated("Use field access instead!")]] ::System::Reflection::MemberInfo*& Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass31_0::dyn_memberInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass31_0::dyn_memberInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "memberInfo"))->offset;
  return *reinterpret_cast<::System::Reflection::MemberInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass31_0.<GetFieldsAndProperties>b__1
bool Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass31_0::$GetFieldsAndProperties$b__1(::System::Reflection::MemberInfo* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass31_0::<GetFieldsAndProperties>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetFieldsAndProperties>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass44_0
#include "Newtonsoft/Json/Utilities/ReflectionUtils_--c__DisplayClass44_0.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.PropertyInfo subTypeProperty
[[deprecated("Use field access instead!")]] ::System::Reflection::PropertyInfo*& Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass44_0::dyn_subTypeProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass44_0::dyn_subTypeProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subTypeProperty"))->offset;
  return *reinterpret_cast<::System::Reflection::PropertyInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass44_0.<GetChildPrivateProperties>b__0
bool Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass44_0::$GetChildPrivateProperties$b__0(::System::Reflection::PropertyInfo* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass44_0::<GetChildPrivateProperties>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetChildPrivateProperties>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass44_0.<GetChildPrivateProperties>b__1
bool Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass44_0::$GetChildPrivateProperties$b__1(::System::Reflection::PropertyInfo* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass44_0::<GetChildPrivateProperties>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetChildPrivateProperties>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass44_1
#include "Newtonsoft/Json/Utilities/ReflectionUtils_--c__DisplayClass44_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass44_0
#include "Newtonsoft/Json/Utilities/ReflectionUtils_--c__DisplayClass44_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type subTypePropertyDeclaringType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass44_1::dyn_subTypePropertyDeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass44_1::dyn_subTypePropertyDeclaringType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subTypePropertyDeclaringType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass44_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass44_0*& Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass44_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass44_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass44_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass44_1.<GetChildPrivateProperties>b__2
bool Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass44_1::$GetChildPrivateProperties$b__2(::System::Reflection::PropertyInfo* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass44_1::<GetChildPrivateProperties>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetChildPrivateProperties>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass45_0
#include "Newtonsoft/Json/Utilities/ReflectionUtils_--c__DisplayClass45_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String method
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass45_0::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass45_0::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type methodDeclaringType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass45_0::dyn_methodDeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass45_0::dyn_methodDeclaringType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "methodDeclaringType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass45_0.<IsMethodOverridden>b__0
bool Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass45_0::$IsMethodOverridden$b__0(::System::Reflection::MethodInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass45_0::<IsMethodOverridden>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<IsMethodOverridden>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.StringBuffer
#include "Newtonsoft/Json/Utilities/StringBuffer.hpp"
// Including type: Newtonsoft.Json.IArrayPool`1
#include "Newtonsoft/Json/IArrayPool_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Char[] _buffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& Newtonsoft::Json::Utilities::StringBuffer::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::dyn__buffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _position
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::StringBuffer::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::dyn__position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.get_Position
int Newtonsoft::Json::Utilities::StringBuffer::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.set_Position
void Newtonsoft::Json::Utilities::StringBuffer::set_Position(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::set_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.get_IsEmpty
bool Newtonsoft::Json::Utilities::StringBuffer::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::get_IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.get_InternalBuffer
::ArrayW<::Il2CppChar> Newtonsoft::Json::Utilities::StringBuffer::get_InternalBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::get_InternalBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_InternalBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer..ctor
Newtonsoft::Json::Utilities::StringBuffer::StringBuffer(::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>* bufferPool, int initalSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferPool), ::il2cpp_utils::ExtractType(initalSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferPool, initalSize);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer..ctor
Newtonsoft::Json::Utilities::StringBuffer::StringBuffer(::ArrayW<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.Append
void Newtonsoft::Json::Utilities::StringBuffer::Append(::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>* bufferPool, ::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferPool), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferPool, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.Append
void Newtonsoft::Json::Utilities::StringBuffer::Append(::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>* bufferPool, ::ArrayW<::Il2CppChar> buffer, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferPool), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferPool, buffer, startIndex, count);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.Clear
void Newtonsoft::Json::Utilities::StringBuffer::Clear(::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>* bufferPool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferPool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferPool);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.EnsureSize
void Newtonsoft::Json::Utilities::StringBuffer::EnsureSize(::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>* bufferPool, int appendLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::EnsureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "EnsureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferPool), ::il2cpp_utils::ExtractType(appendLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferPool, appendLength);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.ToString
::StringW Newtonsoft::Json::Utilities::StringBuffer::ToString(int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, start, length);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.ToString
::StringW Newtonsoft::Json::Utilities::StringBuffer::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.StringReference
#include "Newtonsoft/Json/Utilities/StringReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Char[] _chars
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& Newtonsoft::Json::Utilities::StringReference::dyn__chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReference::dyn__chars");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_chars"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _startIndex
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::StringReference::dyn__startIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReference::dyn__startIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _length
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::StringReference::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReference::dyn__length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringReference.get_Item
::Il2CppChar Newtonsoft::Json::Utilities::StringReference::get_Item(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReference::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, i);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringReference.get_Chars
::ArrayW<::Il2CppChar> Newtonsoft::Json::Utilities::StringReference::get_Chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReference::get_Chars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Chars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringReference.get_StartIndex
int Newtonsoft::Json::Utilities::StringReference::get_StartIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReference::get_StartIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_StartIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringReference.get_Length
int Newtonsoft::Json::Utilities::StringReference::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReference::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringReference..ctor
// ABORTED elsewhere.  Newtonsoft::Json::Utilities::StringReference::StringReference(::ArrayW<::Il2CppChar> chars, int startIndex, int length)
// Autogenerated method: Newtonsoft.Json.Utilities.StringReference.ToString
::StringW Newtonsoft::Json::Utilities::StringReference::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReference::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.StringReferenceExtensions
#include "Newtonsoft/Json/Utilities/StringReferenceExtensions.hpp"
// Including type: Newtonsoft.Json.Utilities.StringReference
#include "Newtonsoft/Json/Utilities/StringReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.StringReferenceExtensions.IndexOf
int Newtonsoft::Json::Utilities::StringReferenceExtensions::IndexOf(::Newtonsoft::Json::Utilities::StringReference s, ::Il2CppChar c, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReferenceExtensions::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringReferenceExtensions", "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, c, startIndex, length);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringReferenceExtensions.StartsWith
bool Newtonsoft::Json::Utilities::StringReferenceExtensions::StartsWith(::Newtonsoft::Json::Utilities::StringReference s, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReferenceExtensions::StartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringReferenceExtensions", "StartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, text);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringReferenceExtensions.EndsWith
bool Newtonsoft::Json::Utilities::StringReferenceExtensions::EndsWith(::Newtonsoft::Json::Utilities::StringReference s, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReferenceExtensions::EndsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringReferenceExtensions", "EndsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.StringUtils
#include "Newtonsoft/Json/Utilities/StringUtils.hpp"
// Including type: Newtonsoft.Json.Utilities.StringUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass14_0`1
#include "Newtonsoft/Json/Utilities/StringUtils_--c__DisplayClass14_0_1.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.IO.StringWriter
#include "System/IO/StringWriter.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.IsNullOrEmpty
bool Newtonsoft::Json::Utilities::StringUtils::IsNullOrEmpty(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::IsNullOrEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "IsNullOrEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.FormatWith
::StringW Newtonsoft::Json::Utilities::StringUtils::FormatWith(::StringW format, ::System::IFormatProvider* provider, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::FormatWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "FormatWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(arg0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, provider, arg0);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.FormatWith
::StringW Newtonsoft::Json::Utilities::StringUtils::FormatWith(::StringW format, ::System::IFormatProvider* provider, ::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::FormatWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "FormatWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, provider, arg0, arg1);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.FormatWith
::StringW Newtonsoft::Json::Utilities::StringUtils::FormatWith(::StringW format, ::System::IFormatProvider* provider, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::FormatWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "FormatWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, provider, arg0, arg1, arg2);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.FormatWith
::StringW Newtonsoft::Json::Utilities::StringUtils::FormatWith(::StringW format, ::System::IFormatProvider* provider, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2, ::Il2CppObject* arg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::FormatWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "FormatWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, provider, arg0, arg1, arg2, arg3);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.FormatWith
::StringW Newtonsoft::Json::Utilities::StringUtils::FormatWith(::StringW format, ::System::IFormatProvider* provider, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::FormatWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "FormatWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, provider, args);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter
::System::IO::StringWriter* Newtonsoft::Json::Utilities::StringUtils::CreateStringWriter(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::CreateStringWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "CreateStringWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::StringWriter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, capacity);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode
void Newtonsoft::Json::Utilities::StringUtils::ToCharAsUnicode(::Il2CppChar c, ::ArrayW<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::ToCharAsUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "ToCharAsUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c, buffer);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.ToCamelCase
::StringW Newtonsoft::Json::Utilities::StringUtils::ToCamelCase(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::ToCamelCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "ToCamelCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.ToLower
::Il2CppChar Newtonsoft::Json::Utilities::StringUtils::ToLower(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::ToLower");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "ToLower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate
bool Newtonsoft::Json::Utilities::StringUtils::IsHighSurrogate(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::IsHighSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "IsHighSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate
bool Newtonsoft::Json::Utilities::StringUtils::IsLowSurrogate(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::IsLowSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "IsLowSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.StartsWith
bool Newtonsoft::Json::Utilities::StringUtils::StartsWith(::StringW source, ::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::StartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "StartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.EndsWith
bool Newtonsoft::Json::Utilities::StringUtils::EndsWith(::StringW source, ::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::EndsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "EndsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.Trim
::StringW Newtonsoft::Json::Utilities::StringUtils::Trim(::StringW s, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::Trim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "Trim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, start, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.TypeExtensions
#include "Newtonsoft/Json/Utilities/TypeExtensions.hpp"
// Including type: System.Reflection.MemberTypes
#include "System/Reflection/MemberTypes.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.MemberType
::System::Reflection::MemberTypes Newtonsoft::Json::Utilities::TypeExtensions::MemberType(::System::Reflection::MemberInfo* memberInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::MemberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MemberTypes, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, memberInfo);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters
bool Newtonsoft::Json::Utilities::TypeExtensions::ContainsGenericParameters(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::ContainsGenericParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "ContainsGenericParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.IsInterface
bool Newtonsoft::Json::Utilities::TypeExtensions::IsInterface(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::IsInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "IsInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType
bool Newtonsoft::Json::Utilities::TypeExtensions::IsGenericType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::IsGenericType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "IsGenericType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition
bool Newtonsoft::Json::Utilities::TypeExtensions::IsGenericTypeDefinition(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::IsGenericTypeDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "IsGenericTypeDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.BaseType
::System::Type* Newtonsoft::Json::Utilities::TypeExtensions::BaseType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::BaseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "BaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.Assembly
::System::Reflection::Assembly* Newtonsoft::Json::Utilities::TypeExtensions::Assembly(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::Assembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "Assembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Assembly*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.IsEnum
bool Newtonsoft::Json::Utilities::TypeExtensions::IsEnum(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::IsEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "IsEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.IsClass
bool Newtonsoft::Json::Utilities::TypeExtensions::IsClass(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::IsClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "IsClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.IsSealed
bool Newtonsoft::Json::Utilities::TypeExtensions::IsSealed(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::IsSealed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "IsSealed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract
bool Newtonsoft::Json::Utilities::TypeExtensions::IsAbstract(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::IsAbstract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "IsAbstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.IsVisible
bool Newtonsoft::Json::Utilities::TypeExtensions::IsVisible(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::IsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "IsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.IsValueType
bool Newtonsoft::Json::Utilities::TypeExtensions::IsValueType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::IsValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "IsValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName
bool Newtonsoft::Json::Utilities::TypeExtensions::AssignableToTypeName(::System::Type* type, ::StringW fullTypeName, bool searchInterfaces, ByRef<::System::Type*> match) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::AssignableToTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "AssignableToTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(fullTypeName), ::il2cpp_utils::ExtractType(searchInterfaces), ::il2cpp_utils::ExtractIndependentType<::System::Type*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, fullTypeName, searchInterfaces, byref(match));
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName
bool Newtonsoft::Json::Utilities::TypeExtensions::AssignableToTypeName(::System::Type* type, ::StringW fullTypeName, bool searchInterfaces) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::AssignableToTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "AssignableToTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(fullTypeName), ::il2cpp_utils::ExtractType(searchInterfaces)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, fullTypeName, searchInterfaces);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface
bool Newtonsoft::Json::Utilities::TypeExtensions::ImplementInterface(::System::Type* type, ::System::Type* interfaceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::ImplementInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "ImplementInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(interfaceType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, interfaceType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ValidationUtils
#include "Newtonsoft/Json/Utilities/ValidationUtils.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull
void Newtonsoft::Json::Utilities::ValidationUtils::ArgumentNotNull(::Il2CppObject* value, ::StringW parameterName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ValidationUtils::ArgumentNotNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ValidationUtils", "ArgumentNotNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(parameterName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, parameterName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.CamelCaseNamingStrategy
#include "Newtonsoft/Json/Serialization/CamelCaseNamingStrategy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.CamelCaseNamingStrategy.ResolvePropertyName
::StringW Newtonsoft::Json::Serialization::CamelCaseNamingStrategy::ResolvePropertyName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::CamelCaseNamingStrategy::ResolvePropertyName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::NamingStrategy*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver
#include "Newtonsoft/Json/Serialization/DefaultContractResolver.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.EnumerableDictionaryWrapper`2
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_EnumerableDictionaryWrapper_2.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass42_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass42_0.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass45_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass45_0.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass45_1
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass45_1.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass45_2
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass45_2.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass62_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass62_0.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass67_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass67_0.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass80_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass80_0.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass81_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass81_0.hpp"
// Including type: Newtonsoft.Json.DefaultJsonNameTable
#include "Newtonsoft/Json/DefaultJsonNameTable.hpp"
// Including type: Newtonsoft.Json.Utilities.ThreadSafeStore`2
#include "Newtonsoft/Json/Utilities/ThreadSafeStore_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonContract
#include "Newtonsoft/Json/Serialization/JsonContract.hpp"
// Including type: Newtonsoft.Json.Serialization.NamingStrategy
#include "Newtonsoft/Json/Serialization/NamingStrategy.hpp"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonObjectContract
#include "Newtonsoft/Json/Serialization/JsonObjectContract.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonPropertyCollection
#include "Newtonsoft/Json/Serialization/JsonPropertyCollection.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonProperty
#include "Newtonsoft/Json/Serialization/JsonProperty.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: Newtonsoft.Json.Serialization.SerializationCallback
#include "Newtonsoft/Json/Serialization/SerializationCallback.hpp"
// Including type: Newtonsoft.Json.Serialization.SerializationErrorCallback
#include "Newtonsoft/Json/Serialization/SerializationErrorCallback.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonDictionaryContract
#include "Newtonsoft/Json/Serialization/JsonDictionaryContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonArrayContract
#include "Newtonsoft/Json/Serialization/JsonArrayContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonPrimitiveContract
#include "Newtonsoft/Json/Serialization/JsonPrimitiveContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonLinqContract
#include "Newtonsoft/Json/Serialization/JsonLinqContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonISerializableContract
#include "Newtonsoft/Json/Serialization/JsonISerializableContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonDynamicContract
#include "Newtonsoft/Json/Serialization/JsonDynamicContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonStringContract
#include "Newtonsoft/Json/Serialization/JsonStringContract.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: Newtonsoft.Json.MemberSerialization
#include "Newtonsoft/Json/MemberSerialization.hpp"
// Including type: Newtonsoft.Json.Serialization.IValueProvider
#include "Newtonsoft/Json/Serialization/IValueProvider.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Serialization.IContractResolver _instance
::Newtonsoft::Json::Serialization::IContractResolver* Newtonsoft::Json::Serialization::DefaultContractResolver::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::IContractResolver*>("Newtonsoft.Json.Serialization", "DefaultContractResolver", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Serialization.IContractResolver _instance
void Newtonsoft::Json::Serialization::DefaultContractResolver::_set__instance(::Newtonsoft::Json::Serialization::IContractResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver", "_instance", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] BlacklistedTypeNames
::ArrayW<::StringW> Newtonsoft::Json::Serialization::DefaultContractResolver::_get_BlacklistedTypeNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::_get_BlacklistedTypeNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("Newtonsoft.Json.Serialization", "DefaultContractResolver", "BlacklistedTypeNames"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] BlacklistedTypeNames
void Newtonsoft::Json::Serialization::DefaultContractResolver::_set_BlacklistedTypeNames(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::_set_BlacklistedTypeNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver", "BlacklistedTypeNames", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.JsonConverter[] BuiltInConverters
::ArrayW<::Newtonsoft::Json::JsonConverter*> Newtonsoft::Json::Serialization::DefaultContractResolver::_get_BuiltInConverters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::_get_BuiltInConverters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Newtonsoft::Json::JsonConverter*>>("Newtonsoft.Json.Serialization", "DefaultContractResolver", "BuiltInConverters"));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.JsonConverter[] BuiltInConverters
void Newtonsoft::Json::Serialization::DefaultContractResolver::_set_BuiltInConverters(::ArrayW<::Newtonsoft::Json::JsonConverter*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::_set_BuiltInConverters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver", "BuiltInConverters", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.DefaultJsonNameTable _nameTable
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::DefaultJsonNameTable*& Newtonsoft::Json::Serialization::DefaultContractResolver::dyn__nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::dyn__nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameTable"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::DefaultJsonNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,Newtonsoft.Json.Serialization.JsonContract> _contractCache
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Serialization::JsonContract*>*& Newtonsoft::Json::Serialization::DefaultContractResolver::dyn__contractCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::dyn__contractCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contractCache"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Serialization::JsonContract*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.BindingFlags <DefaultMembersSearchFlags>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Reflection::BindingFlags& Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$DefaultMembersSearchFlags$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$DefaultMembersSearchFlags$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DefaultMembersSearchFlags>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Reflection::BindingFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <SerializeCompilerGeneratedMembers>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$SerializeCompilerGeneratedMembers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$SerializeCompilerGeneratedMembers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SerializeCompilerGeneratedMembers>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IgnoreSerializableInterface>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$IgnoreSerializableInterface$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$IgnoreSerializableInterface$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IgnoreSerializableInterface>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IgnoreSerializableAttribute>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$IgnoreSerializableAttribute$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$IgnoreSerializableAttribute$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IgnoreSerializableAttribute>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IgnoreIsSpecifiedMembers>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$IgnoreIsSpecifiedMembers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$IgnoreIsSpecifiedMembers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IgnoreIsSpecifiedMembers>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IgnoreShouldSerializeMembers>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$IgnoreShouldSerializeMembers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$IgnoreShouldSerializeMembers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IgnoreShouldSerializeMembers>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.NamingStrategy <NamingStrategy>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::NamingStrategy*& Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$NamingStrategy$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$NamingStrategy$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NamingStrategy>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::NamingStrategy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.get_Instance
::Newtonsoft::Json::Serialization::IContractResolver* Newtonsoft::Json::Serialization::DefaultContractResolver::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::IContractResolver*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.get_DefaultMembersSearchFlags
::System::Reflection::BindingFlags Newtonsoft::Json::Serialization::DefaultContractResolver::get_DefaultMembersSearchFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::get_DefaultMembersSearchFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultMembersSearchFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::BindingFlags, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.set_DefaultMembersSearchFlags
void Newtonsoft::Json::Serialization::DefaultContractResolver::set_DefaultMembersSearchFlags(::System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::set_DefaultMembersSearchFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DefaultMembersSearchFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.get_SerializeCompilerGeneratedMembers
bool Newtonsoft::Json::Serialization::DefaultContractResolver::get_SerializeCompilerGeneratedMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::get_SerializeCompilerGeneratedMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SerializeCompilerGeneratedMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.get_IgnoreSerializableInterface
bool Newtonsoft::Json::Serialization::DefaultContractResolver::get_IgnoreSerializableInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::get_IgnoreSerializableInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IgnoreSerializableInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.get_IgnoreSerializableAttribute
bool Newtonsoft::Json::Serialization::DefaultContractResolver::get_IgnoreSerializableAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::get_IgnoreSerializableAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IgnoreSerializableAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.set_IgnoreSerializableAttribute
void Newtonsoft::Json::Serialization::DefaultContractResolver::set_IgnoreSerializableAttribute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::set_IgnoreSerializableAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IgnoreSerializableAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.get_IgnoreIsSpecifiedMembers
bool Newtonsoft::Json::Serialization::DefaultContractResolver::get_IgnoreIsSpecifiedMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::get_IgnoreIsSpecifiedMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IgnoreIsSpecifiedMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.get_IgnoreShouldSerializeMembers
bool Newtonsoft::Json::Serialization::DefaultContractResolver::get_IgnoreShouldSerializeMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::get_IgnoreShouldSerializeMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IgnoreShouldSerializeMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.get_NamingStrategy
::Newtonsoft::Json::Serialization::NamingStrategy* Newtonsoft::Json::Serialization::DefaultContractResolver::get_NamingStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::get_NamingStrategy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamingStrategy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::NamingStrategy*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver..cctor
void Newtonsoft::Json::Serialization::DefaultContractResolver::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract
::Newtonsoft::Json::Serialization::JsonContract* Newtonsoft::Json::Serialization::DefaultContractResolver::ResolveContract(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::ResolveContract");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonContract*, false>(this, ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.FilterMembers
bool Newtonsoft::Json::Serialization::DefaultContractResolver::FilterMembers(::System::Reflection::MemberInfo* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::FilterMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "FilterMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, member);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers
::System::Collections::Generic::List_1<::System::Reflection::MemberInfo*>* Newtonsoft::Json::Serialization::DefaultContractResolver::GetSerializableMembers(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetSerializableMembers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Reflection::MemberInfo*>*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember
bool Newtonsoft::Json::Serialization::DefaultContractResolver::ShouldSerializeEntityMember(::System::Reflection::MemberInfo* memberInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::ShouldSerializeEntityMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldSerializeEntityMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, memberInfo);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract
::Newtonsoft::Json::Serialization::JsonObjectContract* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateObjectContract(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateObjectContract");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonObjectContract*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.ThrowUnableToSerializeError
void Newtonsoft::Json::Serialization::DefaultContractResolver::ThrowUnableToSerializeError(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::ThrowUnableToSerializeError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "ThrowUnableToSerializeError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, o, context);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType
::System::Reflection::MemberInfo* Newtonsoft::Json::Serialization::DefaultContractResolver::GetExtensionDataMemberForType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetExtensionDataMemberForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtensionDataMemberForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MemberInfo*, false>(this, ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates
void Newtonsoft::Json::Serialization::DefaultContractResolver::SetExtensionDataDelegates(::Newtonsoft::Json::Serialization::JsonObjectContract* contract, ::System::Reflection::MemberInfo* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::SetExtensionDataDelegates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "SetExtensionDataDelegates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, contract, member);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor
::System::Reflection::ConstructorInfo* Newtonsoft::Json::Serialization::DefaultContractResolver::GetAttributeConstructor(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetAttributeConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributeConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor
::System::Reflection::ConstructorInfo* Newtonsoft::Json::Serialization::DefaultContractResolver::GetImmutableConstructor(::System::Type* objectType, ::Newtonsoft::Json::Serialization::JsonPropertyCollection* memberProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetImmutableConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetImmutableConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(memberProperties)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(this, ___internal__method, objectType, memberProperties);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor
::System::Reflection::ConstructorInfo* Newtonsoft::Json::Serialization::DefaultContractResolver::GetParameterizedConstructor(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetParameterizedConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameterizedConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::JsonProperty*>* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateConstructorParameters(::System::Reflection::ConstructorInfo* constructor, ::Newtonsoft::Json::Serialization::JsonPropertyCollection* memberProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateConstructorParameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::JsonProperty*>*, false>(this, ___internal__method, constructor, memberProperties);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty
::Newtonsoft::Json::Serialization::JsonProperty* Newtonsoft::Json::Serialization::DefaultContractResolver::MatchProperty(::Newtonsoft::Json::Serialization::JsonPropertyCollection* properties, ::StringW name, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::MatchProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(properties), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonProperty*, false>(this, ___internal__method, properties, name, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter
::Newtonsoft::Json::Serialization::JsonProperty* Newtonsoft::Json::Serialization::DefaultContractResolver::CreatePropertyFromConstructorParameter(::Newtonsoft::Json::Serialization::JsonProperty* matchingMemberProperty, ::System::Reflection::ParameterInfo* parameterInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreatePropertyFromConstructorParameter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonProperty*, false>(this, ___internal__method, matchingMemberProperty, parameterInfo);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter
::Newtonsoft::Json::JsonConverter* Newtonsoft::Json::Serialization::DefaultContractResolver::ResolveContractConverter(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::ResolveContractConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonConverter*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator
::System::Func_1<::Il2CppObject*>* Newtonsoft::Json::Serialization::DefaultContractResolver::GetDefaultCreator(::System::Type* createdType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetDefaultCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(createdType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_1<::Il2CppObject*>*, false>(this, ___internal__method, createdType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract
void Newtonsoft::Json::Serialization::DefaultContractResolver::InitializeContract(::Newtonsoft::Json::Serialization::JsonContract* contract) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::InitializeContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contract)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, contract);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods
void Newtonsoft::Json::Serialization::DefaultContractResolver::ResolveCallbackMethods(::Newtonsoft::Json::Serialization::JsonContract* contract, ::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::ResolveCallbackMethods");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveCallbackMethods", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, contract, t);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType
void Newtonsoft::Json::Serialization::DefaultContractResolver::GetCallbackMethodsForType(::System::Type* type, ByRef<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*> onSerializing, ByRef<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*> onSerialized, ByRef<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*> onDeserializing, ByRef<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*> onDeserialized, ByRef<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationErrorCallback*>*> onError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetCallbackMethodsForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCallbackMethodsForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationErrorCallback*>*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, byref(onSerializing), byref(onSerialized), byref(onDeserializing), byref(onDeserialized), byref(onError));
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection
bool Newtonsoft::Json::Serialization::DefaultContractResolver::IsConcurrentOrObservableCollection(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::IsConcurrentOrObservableCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "IsConcurrentOrObservableCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized
bool Newtonsoft::Json::Serialization::DefaultContractResolver::ShouldSkipDeserialized(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::ShouldSkipDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "ShouldSkipDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing
bool Newtonsoft::Json::Serialization::DefaultContractResolver::ShouldSkipSerializing(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::ShouldSkipSerializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "ShouldSkipSerializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType
::System::Collections::Generic::List_1<::System::Type*>* Newtonsoft::Json::Serialization::DefaultContractResolver::GetClassHierarchyForType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetClassHierarchyForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClassHierarchyForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Type*>*, false>(this, ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract
::Newtonsoft::Json::Serialization::JsonDictionaryContract* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateDictionaryContract(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateDictionaryContract");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonDictionaryContract*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract
::Newtonsoft::Json::Serialization::JsonArrayContract* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateArrayContract(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateArrayContract");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonArrayContract*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract
::Newtonsoft::Json::Serialization::JsonPrimitiveContract* Newtonsoft::Json::Serialization::DefaultContractResolver::CreatePrimitiveContract(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreatePrimitiveContract");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonPrimitiveContract*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract
::Newtonsoft::Json::Serialization::JsonLinqContract* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateLinqContract(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateLinqContract");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonLinqContract*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract
::Newtonsoft::Json::Serialization::JsonISerializableContract* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateISerializableContract(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateISerializableContract");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonISerializableContract*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract
::Newtonsoft::Json::Serialization::JsonDynamicContract* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateDynamicContract(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateDynamicContract");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonDynamicContract*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract
::Newtonsoft::Json::Serialization::JsonStringContract* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateStringContract(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateStringContract");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonStringContract*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract
::Newtonsoft::Json::Serialization::JsonContract* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateContract(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateContract");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonContract*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType
bool Newtonsoft::Json::Serialization::DefaultContractResolver::IsJsonPrimitiveType(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::IsJsonPrimitiveType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "IsJsonPrimitiveType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible
bool Newtonsoft::Json::Serialization::DefaultContractResolver::IsIConvertible(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::IsIConvertible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "IsIConvertible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString
bool Newtonsoft::Json::Serialization::DefaultContractResolver::CanConvertToString(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CanConvertToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "CanConvertToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback
bool Newtonsoft::Json::Serialization::DefaultContractResolver::IsValidCallback(::System::Reflection::MethodInfo* method, ::ArrayW<::System::Reflection::ParameterInfo*> parameters, ::System::Type* attributeType, ::System::Reflection::MethodInfo* currentCallback, ByRef<::System::Type*> prevAttributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::IsValidCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "IsValidCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(currentCallback), ::il2cpp_utils::ExtractType(prevAttributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, parameters, attributeType, currentCallback, byref(prevAttributeType));
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName
::StringW Newtonsoft::Json::Serialization::DefaultContractResolver::GetClrTypeFullName(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetClrTypeFullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "GetClrTypeFullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::JsonProperty*>* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateProperties(::System::Type* type, ::Newtonsoft::Json::MemberSerialization memberSerialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::JsonProperty*>*, false>(this, ___internal__method, type, memberSerialization);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable
::Newtonsoft::Json::DefaultJsonNameTable* Newtonsoft::Json::Serialization::DefaultContractResolver::GetNameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetNameTable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::DefaultJsonNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider
::Newtonsoft::Json::Serialization::IValueProvider* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateMemberValueProvider(::System::Reflection::MemberInfo* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateMemberValueProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::IValueProvider*, false>(this, ___internal__method, member);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty
::Newtonsoft::Json::Serialization::JsonProperty* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateProperty(::System::Reflection::MemberInfo* member, ::Newtonsoft::Json::MemberSerialization memberSerialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonProperty*, false>(this, ___internal__method, member, memberSerialization);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes
void Newtonsoft::Json::Serialization::DefaultContractResolver::SetPropertySettingsFromAttributes(::Newtonsoft::Json::Serialization::JsonProperty* property, ::Il2CppObject* attributeProvider, ::StringW name, ::System::Type* declaringType, ::Newtonsoft::Json::MemberSerialization memberSerialization, ByRef<bool> allowNonPublicAccess) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::SetPropertySettingsFromAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPropertySettingsFromAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(attributeProvider), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(declaringType), ::il2cpp_utils::ExtractType(memberSerialization), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, attributeProvider, name, declaringType, memberSerialization, byref(allowNonPublicAccess));
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest
::System::Predicate_1<::Il2CppObject*>* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateShouldSerializeTest(::System::Reflection::MemberInfo* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateShouldSerializeTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateShouldSerializeTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Predicate_1<::Il2CppObject*>*, false>(this, ___internal__method, member);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions
void Newtonsoft::Json::Serialization::DefaultContractResolver::SetIsSpecifiedActions(::Newtonsoft::Json::Serialization::JsonProperty* property, ::System::Reflection::MemberInfo* member, bool allowNonPublicAccess) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::SetIsSpecifiedActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsSpecifiedActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(allowNonPublicAccess)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, member, allowNonPublicAccess);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName
::StringW Newtonsoft::Json::Serialization::DefaultContractResolver::ResolvePropertyName(::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::ResolvePropertyName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, propertyName);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName
::StringW Newtonsoft::Json::Serialization::DefaultContractResolver::ResolveExtensionDataName(::StringW extensionDataName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::ResolveExtensionDataName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, extensionDataName);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey
::StringW Newtonsoft::Json::Serialization::DefaultContractResolver::ResolveDictionaryKey(::StringW dictionaryKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::ResolveDictionaryKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, dictionaryKey);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName
::StringW Newtonsoft::Json::Serialization::DefaultContractResolver::GetResolvedPropertyName(::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetResolvedPropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResolvedPropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, propertyName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonProperty
#include "Newtonsoft/Json/Serialization/JsonProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [NullableAttribute] Offset: 0x676060
// Autogenerated static field getter
// Get static field: static public readonly Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c <>9
::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c* Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c*>("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c <>9
void Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9(::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9", value)));
}
// [NullableAttribute] Offset: 0x676074
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.MemberInfo,System.Boolean> <>9__40_0
::System::Func_2<::System::Reflection::MemberInfo*, bool>* Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__40_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__40_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::MemberInfo*, bool>*>("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__40_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.MemberInfo,System.Boolean> <>9__40_0
void Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__40_0(::System::Func_2<::System::Reflection::MemberInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__40_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__40_0", value)));
}
// [NullableAttribute] Offset: 0x676088
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.MemberInfo,System.Boolean> <>9__40_1
::System::Func_2<::System::Reflection::MemberInfo*, bool>* Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__40_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__40_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::MemberInfo*, bool>*>("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__40_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.MemberInfo,System.Boolean> <>9__40_1
void Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__40_1(::System::Func_2<::System::Reflection::MemberInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__40_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__40_1", value)));
}
// [NullableAttribute] Offset: 0x67609C
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Collections.Generic.IEnumerable`1<System.Reflection.MemberInfo>> <>9__44_0
::System::Func_2<::System::Type*, ::System::Collections::Generic::IEnumerable_1<::System::Reflection::MemberInfo*>*>* Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__44_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__44_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, ::System::Collections::Generic::IEnumerable_1<::System::Reflection::MemberInfo*>*>*>("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__44_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Collections.Generic.IEnumerable`1<System.Reflection.MemberInfo>> <>9__44_0
void Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__44_0(::System::Func_2<::System::Type*, ::System::Collections::Generic::IEnumerable_1<::System::Reflection::MemberInfo*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__44_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__44_0", value)));
}
// [NullableAttribute] Offset: 0x6760B0
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.MemberInfo,System.Boolean> <>9__44_1
::System::Func_2<::System::Reflection::MemberInfo*, bool>* Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__44_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__44_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::MemberInfo*, bool>*>("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__44_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.MemberInfo,System.Boolean> <>9__44_1
void Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__44_1(::System::Func_2<::System::Reflection::MemberInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__44_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__44_1", value)));
}
// [NullableAttribute] Offset: 0x6760C4
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.ConstructorInfo,System.Boolean> <>9__47_0
::System::Func_2<::System::Reflection::ConstructorInfo*, bool>* Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__47_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__47_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::ConstructorInfo*, bool>*>("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__47_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.ConstructorInfo,System.Boolean> <>9__47_0
void Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__47_0(::System::Func_2<::System::Reflection::ConstructorInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__47_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__47_0", value)));
}
// [NullableAttribute] Offset: 0x6760D8
// Autogenerated static field getter
// Get static field: static public System.Func`2<Newtonsoft.Json.Serialization.JsonProperty,System.Int32> <>9__75_0
::System::Func_2<::Newtonsoft::Json::Serialization::JsonProperty*, int>* Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__75_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__75_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Newtonsoft::Json::Serialization::JsonProperty*, int>*>("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__75_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Newtonsoft.Json.Serialization.JsonProperty,System.Int32> <>9__75_0
void Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__75_0(::System::Func_2<::Newtonsoft::Json::Serialization::JsonProperty*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__75_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__75_0", value)));
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c..cctor
void Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c.<GetSerializableMembers>b__40_0
bool Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::$GetSerializableMembers$b__40_0(::System::Reflection::MemberInfo* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::<GetSerializableMembers>b__40_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSerializableMembers>b__40_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c.<GetSerializableMembers>b__40_1
bool Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::$GetSerializableMembers$b__40_1(::System::Reflection::MemberInfo* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::<GetSerializableMembers>b__40_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSerializableMembers>b__40_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c.<GetExtensionDataMemberForType>b__44_0
::System::Collections::Generic::IEnumerable_1<::System::Reflection::MemberInfo*>* Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::$GetExtensionDataMemberForType$b__44_0(::System::Type* baseType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::<GetExtensionDataMemberForType>b__44_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetExtensionDataMemberForType>b__44_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Reflection::MemberInfo*>*, false>(this, ___internal__method, baseType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c.<GetExtensionDataMemberForType>b__44_1
bool Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::$GetExtensionDataMemberForType$b__44_1(::System::Reflection::MemberInfo* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::<GetExtensionDataMemberForType>b__44_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetExtensionDataMemberForType>b__44_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c.<GetAttributeConstructor>b__47_0
bool Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::$GetAttributeConstructor$b__47_0(::System::Reflection::ConstructorInfo* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::<GetAttributeConstructor>b__47_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAttributeConstructor>b__47_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c.<CreateProperties>b__75_0
int Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::$CreateProperties$b__75_0(::Newtonsoft::Json::Serialization::JsonProperty* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::<CreateProperties>b__75_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateProperties>b__75_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass42_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass42_0.hpp"
// Including type: Newtonsoft.Json.Serialization.NamingStrategy
#include "Newtonsoft/Json/Serialization/NamingStrategy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Serialization.NamingStrategy namingStrategy
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::NamingStrategy*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass42_0::dyn_namingStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass42_0::dyn_namingStrategy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namingStrategy"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::NamingStrategy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass42_0.<CreateObjectContract>b__0
::StringW Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass42_0::$CreateObjectContract$b__0(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass42_0::<CreateObjectContract>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateObjectContract>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass45_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass45_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Func`2<System.Object,System.Object> getExtensionDataDictionary
[[deprecated("Use field access instead!")]] ::System::Func_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_0::dyn_getExtensionDataDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_0::dyn_getExtensionDataDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getExtensionDataDictionary"))->offset;
  return *reinterpret_cast<::System::Func_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MemberInfo member
[[deprecated("Use field access instead!")]] ::System::Reflection::MemberInfo*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_0::dyn_member() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_0::dyn_member");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "member"))->offset;
  return *reinterpret_cast<::System::Reflection::MemberInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass45_1
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass45_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: Newtonsoft.Json.Utilities.MethodCall`2
#include "Newtonsoft/Json/Utilities/MethodCall_2.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass45_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass45_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`2<System.Object,System.Object> setExtensionDataDictionary
[[deprecated("Use field access instead!")]] ::System::Action_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_1::dyn_setExtensionDataDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_1::dyn_setExtensionDataDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setExtensionDataDictionary"))->offset;
  return *reinterpret_cast<::System::Action_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`1<System.Object> createExtensionDataDictionary
[[deprecated("Use field access instead!")]] ::System::Func_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_1::dyn_createExtensionDataDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_1::dyn_createExtensionDataDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createExtensionDataDictionary"))->offset;
  return *reinterpret_cast<::System::Func_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> setExtensionDataDictionaryValue
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_1::dyn_setExtensionDataDictionaryValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_1::dyn_setExtensionDataDictionaryValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setExtensionDataDictionaryValue"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass45_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_0*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass45_1.<SetExtensionDataDelegates>b__0
void Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_1::$SetExtensionDataDelegates$b__0(::Il2CppObject* o, ::StringW key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_1::<SetExtensionDataDelegates>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetExtensionDataDelegates>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, key, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass45_2
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass45_2.hpp"
// Including type: Newtonsoft.Json.Serialization.ObjectConstructor`1
#include "Newtonsoft/Json/Serialization/ObjectConstructor_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass45_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass45_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> createEnumerableWrapper
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_2::dyn_createEnumerableWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_2::dyn_createEnumerableWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createEnumerableWrapper"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass45_0 CS$<>8__locals2
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_0*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_2::dyn_CS$$$8__locals2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_2::dyn_CS$$$8__locals2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals2"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass45_2.<SetExtensionDataDelegates>b__1
::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>* Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_2::$SetExtensionDataDelegates$b__1(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass45_2::<SetExtensionDataDelegates>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetExtensionDataDelegates>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>*, false>(this, ___internal__method, o);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass62_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass62_0.hpp"
// Including type: Newtonsoft.Json.Serialization.NamingStrategy
#include "Newtonsoft/Json/Serialization/NamingStrategy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Serialization.NamingStrategy namingStrategy
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::NamingStrategy*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass62_0::dyn_namingStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass62_0::dyn_namingStrategy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namingStrategy"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::NamingStrategy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass62_0.<CreateDictionaryContract>b__0
::StringW Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass62_0::$CreateDictionaryContract$b__0(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass62_0::<CreateDictionaryContract>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateDictionaryContract>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass67_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass67_0.hpp"
// Including type: Newtonsoft.Json.Serialization.NamingStrategy
#include "Newtonsoft/Json/Serialization/NamingStrategy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Serialization.NamingStrategy namingStrategy
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::NamingStrategy*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass67_0::dyn_namingStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass67_0::dyn_namingStrategy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namingStrategy"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::NamingStrategy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass67_0.<CreateDynamicContract>b__0
::StringW Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass67_0::$CreateDynamicContract$b__0(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass67_0::<CreateDynamicContract>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateDynamicContract>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass80_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass80_0.hpp"
// Including type: Newtonsoft.Json.Utilities.MethodCall`2
#include "Newtonsoft/Json/Utilities/MethodCall_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> shouldSerializeCall
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass80_0::dyn_shouldSerializeCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass80_0::dyn_shouldSerializeCall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shouldSerializeCall"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass80_0.<CreateShouldSerializeTest>b__0
bool Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass80_0::$CreateShouldSerializeTest$b__0(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass80_0::<CreateShouldSerializeTest>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateShouldSerializeTest>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass81_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass81_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Func`2<System.Object,System.Object> specifiedPropertyGet
[[deprecated("Use field access instead!")]] ::System::Func_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass81_0::dyn_specifiedPropertyGet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass81_0::dyn_specifiedPropertyGet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "specifiedPropertyGet"))->offset;
  return *reinterpret_cast<::System::Func_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass81_0.<SetIsSpecifiedActions>b__0
bool Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass81_0::$SetIsSpecifiedActions$b__0(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass81_0::<SetIsSpecifiedActions>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetIsSpecifiedActions>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.DefaultReferenceResolver
#include "Newtonsoft/Json/Serialization/DefaultReferenceResolver.hpp"
// Including type: Newtonsoft.Json.Utilities.BidirectionalDictionary`2
#include "Newtonsoft/Json/Utilities/BidirectionalDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _referenceCount
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Serialization::DefaultReferenceResolver::dyn__referenceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultReferenceResolver::dyn__referenceCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_referenceCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetMappings
::Newtonsoft::Json::Utilities::BidirectionalDictionary_2<::StringW, ::Il2CppObject*>* Newtonsoft::Json::Serialization::DefaultReferenceResolver::GetMappings(::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultReferenceResolver::GetMappings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMappings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::BidirectionalDictionary_2<::StringW, ::Il2CppObject*>*, false>(this, ___internal__method, context);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultReferenceResolver.ResolveReference
::Il2CppObject* Newtonsoft::Json::Serialization::DefaultReferenceResolver::ResolveReference(::Il2CppObject* context, ::StringW reference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultReferenceResolver::ResolveReference");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultReferenceResolver*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, reference);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetReference
::StringW Newtonsoft::Json::Serialization::DefaultReferenceResolver::GetReference(::Il2CppObject* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultReferenceResolver::GetReference");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultReferenceResolver*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultReferenceResolver.AddReference
void Newtonsoft::Json::Serialization::DefaultReferenceResolver::AddReference(::Il2CppObject* context, ::StringW reference, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultReferenceResolver::AddReference");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultReferenceResolver*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, reference, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultReferenceResolver.IsReferenced
bool Newtonsoft::Json::Serialization::DefaultReferenceResolver::IsReferenced(::Il2CppObject* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultReferenceResolver::IsReferenced");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultReferenceResolver*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.DefaultSerializationBinder
#include "Newtonsoft/Json/Serialization/DefaultSerializationBinder.hpp"
// Including type: Newtonsoft.Json.Utilities.ThreadSafeStore`2
#include "Newtonsoft/Json/Utilities/ThreadSafeStore_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Newtonsoft.Json.Serialization.DefaultSerializationBinder Instance
::Newtonsoft::Json::Serialization::DefaultSerializationBinder* Newtonsoft::Json::Serialization::DefaultSerializationBinder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::DefaultSerializationBinder*>("Newtonsoft.Json.Serialization", "DefaultSerializationBinder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Newtonsoft.Json.Serialization.DefaultSerializationBinder Instance
void Newtonsoft::Json::Serialization::DefaultSerializationBinder::_set_Instance(::Newtonsoft::Json::Serialization::DefaultSerializationBinder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultSerializationBinder", "Instance", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<Newtonsoft.Json.Utilities.StructMultiKey`2<System.String,System.String>,System.Type> _typeCache
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::Newtonsoft::Json::Utilities::StructMultiKey_2<::StringW, ::StringW>, ::System::Type*>*& Newtonsoft::Json::Serialization::DefaultSerializationBinder::dyn__typeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::dyn__typeCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeCache"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::Newtonsoft::Json::Utilities::StructMultiKey_2<::StringW, ::StringW>, ::System::Type*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultSerializationBinder..cctor
void Newtonsoft::Json::Serialization::DefaultSerializationBinder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultSerializationBinder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey
::System::Type* Newtonsoft::Json::Serialization::DefaultSerializationBinder::GetTypeFromTypeNameKey(::Newtonsoft::Json::Utilities::StructMultiKey_2<::StringW, ::StringW> typeNameKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::GetTypeFromTypeNameKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeFromTypeNameKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeNameKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, typeNameKey);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetGenericTypeFromTypeName
::System::Type* Newtonsoft::Json::Serialization::DefaultSerializationBinder::GetGenericTypeFromTypeName(::StringW typeName, ::System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::GetGenericTypeFromTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericTypeFromTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName), ::il2cpp_utils::ExtractType(assembly)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, typeName, assembly);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeByName
::System::Type* Newtonsoft::Json::Serialization::DefaultSerializationBinder::GetTypeByName(::Newtonsoft::Json::Utilities::StructMultiKey_2<::StringW, ::StringW> typeNameKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::GetTypeByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeNameKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, typeNameKey);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType
::System::Type* Newtonsoft::Json::Serialization::DefaultSerializationBinder::BindToType(::StringW assemblyName, ::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::BindToType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Serialization::SerializationBinder*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, assemblyName, typeName);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName
void Newtonsoft::Json::Serialization::DefaultSerializationBinder::BindToName(::System::Type* serializedType, ByRef<::StringW> assemblyName, ByRef<::StringW> typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::BindToName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Serialization::SerializationBinder*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializedType, byref(assemblyName), byref(typeName));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.ErrorContext
#include "Newtonsoft/Json/Serialization/ErrorContext.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Traced>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::ErrorContext::dyn_$Traced$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::dyn_$Traced$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Traced>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Exception <Error>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Exception*& Newtonsoft::Json::Serialization::ErrorContext::dyn_$Error$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::dyn_$Error$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Error>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object <OriginalObject>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::Serialization::ErrorContext::dyn_$OriginalObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::dyn_$OriginalObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OriginalObject>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object <Member>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::Serialization::ErrorContext::dyn_$Member$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::dyn_$Member$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Member>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Path>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Serialization::ErrorContext::dyn_$Path$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::dyn_$Path$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Path>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Handled>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::ErrorContext::dyn_$Handled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::dyn_$Handled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ErrorContext.get_Traced
bool Newtonsoft::Json::Serialization::ErrorContext::get_Traced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::get_Traced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Traced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ErrorContext.set_Traced
void Newtonsoft::Json::Serialization::ErrorContext::set_Traced(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::set_Traced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Traced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ErrorContext.get_Error
::System::Exception* Newtonsoft::Json::Serialization::ErrorContext::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::get_Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ErrorContext.get_Handled
bool Newtonsoft::Json::Serialization::ErrorContext::get_Handled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::get_Handled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.ErrorEventArgs
#include "Newtonsoft/Json/Serialization/ErrorEventArgs.hpp"
// Including type: Newtonsoft.Json.Serialization.ErrorContext
#include "Newtonsoft/Json/Serialization/ErrorContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object <CurrentObject>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::Serialization::ErrorEventArgs::dyn_$CurrentObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorEventArgs::dyn_$CurrentObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentObject>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Serialization.ErrorContext <ErrorContext>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ErrorContext*& Newtonsoft::Json::Serialization::ErrorEventArgs::dyn_$ErrorContext$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorEventArgs::dyn_$ErrorContext$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ErrorContext>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ErrorContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.IContractResolver
#include "Newtonsoft/Json/Serialization/IContractResolver.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonContract
#include "Newtonsoft/Json/Serialization/JsonContract.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.IContractResolver.ResolveContract
::Newtonsoft::Json::Serialization::JsonContract* Newtonsoft::Json::Serialization::IContractResolver::ResolveContract(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::IContractResolver::ResolveContract");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::IContractResolver*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonContract*, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.IReferenceResolver
#include "Newtonsoft/Json/Serialization/IReferenceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference
::Il2CppObject* Newtonsoft::Json::Serialization::IReferenceResolver::ResolveReference(::Il2CppObject* context, ::StringW reference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::IReferenceResolver::ResolveReference");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::IReferenceResolver*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, reference);
}
// Autogenerated method: Newtonsoft.Json.Serialization.IReferenceResolver.GetReference
::StringW Newtonsoft::Json::Serialization::IReferenceResolver::GetReference(::Il2CppObject* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::IReferenceResolver::GetReference");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::IReferenceResolver*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.IReferenceResolver.IsReferenced
bool Newtonsoft::Json::Serialization::IReferenceResolver::IsReferenced(::Il2CppObject* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::IReferenceResolver::IsReferenced");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::IReferenceResolver*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.IReferenceResolver.AddReference
void Newtonsoft::Json::Serialization::IReferenceResolver::AddReference(::Il2CppObject* context, ::StringW reference, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::IReferenceResolver::AddReference");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::IReferenceResolver*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, reference, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.ISerializationBinder
#include "Newtonsoft/Json/Serialization/ISerializationBinder.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.ISerializationBinder.BindToType
::System::Type* Newtonsoft::Json::Serialization::ISerializationBinder::BindToType(::StringW assemblyName, ::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ISerializationBinder::BindToType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::ISerializationBinder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, assemblyName, typeName);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ISerializationBinder.BindToName
void Newtonsoft::Json::Serialization::ISerializationBinder::BindToName(::System::Type* serializedType, ByRef<::StringW> assemblyName, ByRef<::StringW> typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ISerializationBinder::BindToName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::ISerializationBinder*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializedType, byref(assemblyName), byref(typeName));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.ITraceWriter
#include "Newtonsoft/Json/Serialization/ITraceWriter.hpp"
// Including type: System.Diagnostics.TraceLevel
#include "System/Diagnostics/TraceLevel.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.ITraceWriter.get_LevelFilter
::System::Diagnostics::TraceLevel Newtonsoft::Json::Serialization::ITraceWriter::get_LevelFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ITraceWriter::get_LevelFilter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::ITraceWriter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::TraceLevel, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ITraceWriter.Trace
void Newtonsoft::Json::Serialization::ITraceWriter::Trace(::System::Diagnostics::TraceLevel level, ::StringW message, ::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ITraceWriter::Trace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::ITraceWriter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, message, ex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.IValueProvider
#include "Newtonsoft/Json/Serialization/IValueProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.IValueProvider.SetValue
void Newtonsoft::Json::Serialization::IValueProvider::SetValue(::Il2CppObject* target, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::IValueProvider::SetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::IValueProvider*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.IValueProvider.GetValue
::Il2CppObject* Newtonsoft::Json::Serialization::IValueProvider::GetValue(::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::IValueProvider::GetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::IValueProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, target);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonArrayContract
#include "Newtonsoft/Json/Serialization/JsonArrayContract.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.Serialization.ObjectConstructor`1
#include "Newtonsoft/Json/Serialization/ObjectConstructor_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: Newtonsoft.Json.Utilities.IWrappedCollection
#include "Newtonsoft/Json/Utilities/IWrappedCollection.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <CollectionItemType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$CollectionItemType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$CollectionItemType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CollectionItemType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <IsMultidimensionalArray>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$IsMultidimensionalArray$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$IsMultidimensionalArray$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsMultidimensionalArray>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _genericCollectionDefinitionType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonArrayContract::dyn__genericCollectionDefinitionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn__genericCollectionDefinitionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_genericCollectionDefinitionType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type _genericWrapperType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonArrayContract::dyn__genericWrapperType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn__genericWrapperType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_genericWrapperType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> _genericWrapperCreator
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonArrayContract::dyn__genericWrapperCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn__genericWrapperCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_genericWrapperCreator"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`1<System.Object> _genericTemporaryCollectionCreator
[[deprecated("Use field access instead!")]] ::System::Func_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonArrayContract::dyn__genericTemporaryCollectionCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn__genericTemporaryCollectionCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_genericTemporaryCollectionCreator"))->offset;
  return *reinterpret_cast<::System::Func_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <IsArray>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$IsArray$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$IsArray$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsArray>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <ShouldCreateWrapper>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$ShouldCreateWrapper$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$ShouldCreateWrapper$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ShouldCreateWrapper>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <CanDeserialize>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$CanDeserialize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$CanDeserialize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CanDeserialize>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Reflection.ConstructorInfo _parameterizedConstructor
[[deprecated("Use field access instead!")]] ::System::Reflection::ConstructorInfo*& Newtonsoft::Json::Serialization::JsonArrayContract::dyn__parameterizedConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn__parameterizedConstructor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parameterizedConstructor"))->offset;
  return *reinterpret_cast<::System::Reflection::ConstructorInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> _parameterizedCreator
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonArrayContract::dyn__parameterizedCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn__parameterizedCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parameterizedCreator"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> _overrideCreator
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonArrayContract::dyn__overrideCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn__overrideCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideCreator"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <HasParameterizedCreator>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$HasParameterizedCreator$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$HasParameterizedCreator$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HasParameterizedCreator>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.get_CollectionItemType
::System::Type* Newtonsoft::Json::Serialization::JsonArrayContract::get_CollectionItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::get_CollectionItemType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CollectionItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.get_IsMultidimensionalArray
bool Newtonsoft::Json::Serialization::JsonArrayContract::get_IsMultidimensionalArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::get_IsMultidimensionalArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMultidimensionalArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.get_IsArray
bool Newtonsoft::Json::Serialization::JsonArrayContract::get_IsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::get_IsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.get_ShouldCreateWrapper
bool Newtonsoft::Json::Serialization::JsonArrayContract::get_ShouldCreateWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::get_ShouldCreateWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShouldCreateWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.get_CanDeserialize
bool Newtonsoft::Json::Serialization::JsonArrayContract::get_CanDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::get_CanDeserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.set_CanDeserialize
void Newtonsoft::Json::Serialization::JsonArrayContract::set_CanDeserialize(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::set_CanDeserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CanDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.get_ParameterizedCreator
::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* Newtonsoft::Json::Serialization::JsonArrayContract::get_ParameterizedCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::get_ParameterizedCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParameterizedCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.get_OverrideCreator
::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* Newtonsoft::Json::Serialization::JsonArrayContract::get_OverrideCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::get_OverrideCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverrideCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.set_OverrideCreator
void Newtonsoft::Json::Serialization::JsonArrayContract::set_OverrideCreator(::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::set_OverrideCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OverrideCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.get_HasParameterizedCreator
bool Newtonsoft::Json::Serialization::JsonArrayContract::get_HasParameterizedCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::get_HasParameterizedCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasParameterizedCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.set_HasParameterizedCreator
void Newtonsoft::Json::Serialization::JsonArrayContract::set_HasParameterizedCreator(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::set_HasParameterizedCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HasParameterizedCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.get_HasParameterizedCreatorInternal
bool Newtonsoft::Json::Serialization::JsonArrayContract::get_HasParameterizedCreatorInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::get_HasParameterizedCreatorInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasParameterizedCreatorInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper
::Newtonsoft::Json::Utilities::IWrappedCollection* Newtonsoft::Json::Serialization::JsonArrayContract::CreateWrapper(::Il2CppObject* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::CreateWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::IWrappedCollection*, false>(this, ___internal__method, list);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection
::System::Collections::IList* Newtonsoft::Json::Serialization::JsonArrayContract::CreateTemporaryCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::CreateTemporaryCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTemporaryCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.StoreFSharpListCreatorIfNecessary
void Newtonsoft::Json::Serialization::JsonArrayContract::StoreFSharpListCreatorIfNecessary(::System::Type* underlyingType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::StoreFSharpListCreatorIfNecessary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreFSharpListCreatorIfNecessary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(underlyingType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, underlyingType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.JsonContainerContract
#include "Newtonsoft/Json/Serialization/JsonContainerContract.hpp"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.JsonContract _itemContract
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonContract*& Newtonsoft::Json::Serialization::JsonContainerContract::dyn__itemContract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::dyn__itemContract");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemContract"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonContract**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.JsonContract _finalItemContract
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonContract*& Newtonsoft::Json::Serialization::JsonContainerContract::dyn__finalItemContract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::dyn__finalItemContract");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalItemContract"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonContract**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.JsonConverter <ItemConverter>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonConverter*& Newtonsoft::Json::Serialization::JsonContainerContract::dyn_$ItemConverter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::dyn_$ItemConverter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemConverter>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> <ItemIsReference>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& Newtonsoft::Json::Serialization::JsonContainerContract::dyn_$ItemIsReference$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::dyn_$ItemIsReference$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemIsReference>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> <ItemReferenceLoopHandling>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>& Newtonsoft::Json::Serialization::JsonContainerContract::dyn_$ItemReferenceLoopHandling$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::dyn_$ItemReferenceLoopHandling$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemReferenceLoopHandling>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<Newtonsoft.Json.TypeNameHandling> <ItemTypeNameHandling>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>& Newtonsoft::Json::Serialization::JsonContainerContract::dyn_$ItemTypeNameHandling$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::dyn_$ItemTypeNameHandling$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemTypeNameHandling>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.get_ItemContract
::Newtonsoft::Json::Serialization::JsonContract* Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemContract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonContract*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.set_ItemContract
void Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemContract(::Newtonsoft::Json::Serialization::JsonContract* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.get_FinalItemContract
::Newtonsoft::Json::Serialization::JsonContract* Newtonsoft::Json::Serialization::JsonContainerContract::get_FinalItemContract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::get_FinalItemContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FinalItemContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonContract*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.get_ItemConverter
::Newtonsoft::Json::JsonConverter* Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonConverter*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.set_ItemConverter
void Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemConverter(::Newtonsoft::Json::JsonConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.get_ItemIsReference
::System::Nullable_1<bool> Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemIsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemIsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemIsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.set_ItemIsReference
void Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemIsReference(::System::Nullable_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemIsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemIsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.get_ItemReferenceLoopHandling
::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling> Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemReferenceLoopHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemReferenceLoopHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemReferenceLoopHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.set_ItemReferenceLoopHandling
void Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemReferenceLoopHandling(::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemReferenceLoopHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemReferenceLoopHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.get_ItemTypeNameHandling
::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling> Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemTypeNameHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemTypeNameHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemTypeNameHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.set_ItemTypeNameHandling
void Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemTypeNameHandling(::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemTypeNameHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemTypeNameHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.JsonContractType
#include "Newtonsoft/Json/Serialization/JsonContractType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonContractType None
::Newtonsoft::Json::Serialization::JsonContractType Newtonsoft::Json::Serialization::JsonContractType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonContractType>("Newtonsoft.Json.Serialization", "JsonContractType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonContractType None
void Newtonsoft::Json::Serialization::JsonContractType::_set_None(::Newtonsoft::Json::Serialization::JsonContractType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonContractType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonContractType Object
::Newtonsoft::Json::Serialization::JsonContractType Newtonsoft::Json::Serialization::JsonContractType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonContractType>("Newtonsoft.Json.Serialization", "JsonContractType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonContractType Object
void Newtonsoft::Json::Serialization::JsonContractType::_set_Object(::Newtonsoft::Json::Serialization::JsonContractType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonContractType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonContractType Array
::Newtonsoft::Json::Serialization::JsonContractType Newtonsoft::Json::Serialization::JsonContractType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonContractType>("Newtonsoft.Json.Serialization", "JsonContractType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonContractType Array
void Newtonsoft::Json::Serialization::JsonContractType::_set_Array(::Newtonsoft::Json::Serialization::JsonContractType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonContractType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonContractType Primitive
::Newtonsoft::Json::Serialization::JsonContractType Newtonsoft::Json::Serialization::JsonContractType::_get_Primitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_get_Primitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonContractType>("Newtonsoft.Json.Serialization", "JsonContractType", "Primitive"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonContractType Primitive
void Newtonsoft::Json::Serialization::JsonContractType::_set_Primitive(::Newtonsoft::Json::Serialization::JsonContractType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_set_Primitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonContractType", "Primitive", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonContractType String
::Newtonsoft::Json::Serialization::JsonContractType Newtonsoft::Json::Serialization::JsonContractType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonContractType>("Newtonsoft.Json.Serialization", "JsonContractType", "String"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonContractType String
void Newtonsoft::Json::Serialization::JsonContractType::_set_String(::Newtonsoft::Json::Serialization::JsonContractType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonContractType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonContractType Dictionary
::Newtonsoft::Json::Serialization::JsonContractType Newtonsoft::Json::Serialization::JsonContractType::_get_Dictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_get_Dictionary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonContractType>("Newtonsoft.Json.Serialization", "JsonContractType", "Dictionary"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonContractType Dictionary
void Newtonsoft::Json::Serialization::JsonContractType::_set_Dictionary(::Newtonsoft::Json::Serialization::JsonContractType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_set_Dictionary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonContractType", "Dictionary", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonContractType Dynamic
::Newtonsoft::Json::Serialization::JsonContractType Newtonsoft::Json::Serialization::JsonContractType::_get_Dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_get_Dynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonContractType>("Newtonsoft.Json.Serialization", "JsonContractType", "Dynamic"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonContractType Dynamic
void Newtonsoft::Json::Serialization::JsonContractType::_set_Dynamic(::Newtonsoft::Json::Serialization::JsonContractType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_set_Dynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonContractType", "Dynamic", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonContractType Serializable
::Newtonsoft::Json::Serialization::JsonContractType Newtonsoft::Json::Serialization::JsonContractType::_get_Serializable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_get_Serializable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonContractType>("Newtonsoft.Json.Serialization", "JsonContractType", "Serializable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonContractType Serializable
void Newtonsoft::Json::Serialization::JsonContractType::_set_Serializable(::Newtonsoft::Json::Serialization::JsonContractType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_set_Serializable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonContractType", "Serializable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonContractType Linq
::Newtonsoft::Json::Serialization::JsonContractType Newtonsoft::Json::Serialization::JsonContractType::_get_Linq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_get_Linq");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonContractType>("Newtonsoft.Json.Serialization", "JsonContractType", "Linq"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonContractType Linq
void Newtonsoft::Json::Serialization::JsonContractType::_set_Linq(::Newtonsoft::Json::Serialization::JsonContractType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_set_Linq");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonContractType", "Linq", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Serialization::JsonContractType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.SerializationCallback
#include "Newtonsoft/Json/Serialization/SerializationCallback.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.SerializationCallback.Invoke
void Newtonsoft::Json::Serialization::SerializationCallback::Invoke(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::SerializationCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::SerializationCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, context);
}
// Autogenerated method: Newtonsoft.Json.Serialization.SerializationCallback.BeginInvoke
::System::IAsyncResult* Newtonsoft::Json::Serialization::SerializationCallback::BeginInvoke(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::SerializationCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::SerializationCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, o, context, callback, object);
}
// Autogenerated method: Newtonsoft.Json.Serialization.SerializationCallback.EndInvoke
void Newtonsoft::Json::Serialization::SerializationCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::SerializationCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::SerializationCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.SerializationErrorCallback
#include "Newtonsoft/Json/Serialization/SerializationErrorCallback.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: Newtonsoft.Json.Serialization.ErrorContext
#include "Newtonsoft/Json/Serialization/ErrorContext.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.SerializationErrorCallback.Invoke
void Newtonsoft::Json::Serialization::SerializationErrorCallback::Invoke(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context, ::Newtonsoft::Json::Serialization::ErrorContext* errorContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::SerializationErrorCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::SerializationErrorCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, context, errorContext);
}
// Autogenerated method: Newtonsoft.Json.Serialization.SerializationErrorCallback.BeginInvoke
::System::IAsyncResult* Newtonsoft::Json::Serialization::SerializationErrorCallback::BeginInvoke(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context, ::Newtonsoft::Json::Serialization::ErrorContext* errorContext, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::SerializationErrorCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::SerializationErrorCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, o, context, errorContext, callback, object);
}
// Autogenerated method: Newtonsoft.Json.Serialization.SerializationErrorCallback.EndInvoke
void Newtonsoft::Json::Serialization::SerializationErrorCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::SerializationErrorCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::SerializationErrorCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.ExtensionDataSetter
#include "Newtonsoft/Json/Serialization/ExtensionDataSetter.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.ExtensionDataSetter.Invoke
void Newtonsoft::Json::Serialization::ExtensionDataSetter::Invoke(::Il2CppObject* o, ::StringW key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ExtensionDataSetter::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::ExtensionDataSetter*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, key, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ExtensionDataSetter.BeginInvoke
::System::IAsyncResult* Newtonsoft::Json::Serialization::ExtensionDataSetter::BeginInvoke(::Il2CppObject* o, ::StringW key, ::Il2CppObject* value, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ExtensionDataSetter::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::ExtensionDataSetter*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, o, key, value, callback, object);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ExtensionDataSetter.EndInvoke
void Newtonsoft::Json::Serialization::ExtensionDataSetter::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ExtensionDataSetter::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::ExtensionDataSetter*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.ExtensionDataGetter
#include "Newtonsoft/Json/Serialization/ExtensionDataGetter.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.ExtensionDataGetter.Invoke
::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>* Newtonsoft::Json::Serialization::ExtensionDataGetter::Invoke(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ExtensionDataGetter::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::ExtensionDataGetter*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>*, false>(this, ___internal__method, o);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ExtensionDataGetter.BeginInvoke
::System::IAsyncResult* Newtonsoft::Json::Serialization::ExtensionDataGetter::BeginInvoke(::Il2CppObject* o, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ExtensionDataGetter::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::ExtensionDataGetter*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, o, callback, object);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ExtensionDataGetter.EndInvoke
::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>* Newtonsoft::Json::Serialization::ExtensionDataGetter::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ExtensionDataGetter::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::ExtensionDataGetter*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonContract
#include "Newtonsoft/Json/Serialization/JsonContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonContract/Newtonsoft.Json.Serialization.<>c__DisplayClass57_0
#include "Newtonsoft/Json/Serialization/JsonContract_--c__DisplayClass57_0.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonContract/Newtonsoft.Json.Serialization.<>c__DisplayClass58_0
#include "Newtonsoft/Json/Serialization/JsonContract_--c__DisplayClass58_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.Serialization.SerializationCallback
#include "Newtonsoft/Json/Serialization/SerializationCallback.hpp"
// Including type: Newtonsoft.Json.Serialization.SerializationErrorCallback
#include "Newtonsoft/Json/Serialization/SerializationErrorCallback.hpp"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: Newtonsoft.Json.Serialization.ErrorContext
#include "Newtonsoft/Json/Serialization/ErrorContext.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Boolean IsNullable
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonContract::dyn_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_IsNullable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsNullable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean IsConvertable
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonContract::dyn_IsConvertable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_IsConvertable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsConvertable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean IsEnum
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonContract::dyn_IsEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_IsEnum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsEnum"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Type NonNullableUnderlyingType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonContract::dyn_NonNullableUnderlyingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_NonNullableUnderlyingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NonNullableUnderlyingType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Newtonsoft.Json.ReadType InternalReadType
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::ReadType& Newtonsoft::Json::Serialization::JsonContract::dyn_InternalReadType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_InternalReadType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InternalReadType"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::ReadType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Newtonsoft.Json.Serialization.JsonContractType ContractType
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonContractType& Newtonsoft::Json::Serialization::JsonContract::dyn_ContractType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_ContractType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContractType"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonContractType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean IsReadOnlyOrFixedSize
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonContract::dyn_IsReadOnlyOrFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_IsReadOnlyOrFixedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsReadOnlyOrFixedSize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean IsSealed
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonContract::dyn_IsSealed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_IsSealed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsSealed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean IsInstantiable
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonContract::dyn_IsInstantiable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_IsInstantiable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsInstantiable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Serialization.SerializationCallback> _onDeserializedCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*& Newtonsoft::Json::Serialization::JsonContract::dyn__onDeserializedCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn__onDeserializedCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onDeserializedCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Serialization.SerializationCallback> _onDeserializingCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*& Newtonsoft::Json::Serialization::JsonContract::dyn__onDeserializingCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn__onDeserializingCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onDeserializingCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Serialization.SerializationCallback> _onSerializedCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*& Newtonsoft::Json::Serialization::JsonContract::dyn__onSerializedCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn__onSerializedCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onSerializedCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Serialization.SerializationCallback> _onSerializingCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*& Newtonsoft::Json::Serialization::JsonContract::dyn__onSerializingCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn__onSerializingCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onSerializingCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Serialization.SerializationErrorCallback> _onErrorCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationErrorCallback*>*& Newtonsoft::Json::Serialization::JsonContract::dyn__onErrorCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn__onErrorCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onErrorCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationErrorCallback*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type _createdType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonContract::dyn__createdType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn__createdType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_createdType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <UnderlyingType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonContract::dyn_$UnderlyingType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_$UnderlyingType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UnderlyingType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> <IsReference>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& Newtonsoft::Json::Serialization::JsonContract::dyn_$IsReference$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_$IsReference$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsReference>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.JsonConverter <Converter>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonConverter*& Newtonsoft::Json::Serialization::JsonContract::dyn_$Converter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_$Converter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Converter>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.JsonConverter <InternalConverter>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonConverter*& Newtonsoft::Json::Serialization::JsonContract::dyn_$InternalConverter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_$InternalConverter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InternalConverter>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`1<System.Object> <DefaultCreator>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Func_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonContract::dyn_$DefaultCreator$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_$DefaultCreator$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DefaultCreator>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <DefaultCreatorNonPublic>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonContract::dyn_$DefaultCreatorNonPublic$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_$DefaultCreatorNonPublic$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DefaultCreatorNonPublic>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_UnderlyingType
::System::Type* Newtonsoft::Json::Serialization::JsonContract::get_UnderlyingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_UnderlyingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_CreatedType
::System::Type* Newtonsoft::Json::Serialization::JsonContract::get_CreatedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_CreatedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CreatedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.set_CreatedType
void Newtonsoft::Json::Serialization::JsonContract::set_CreatedType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::set_CreatedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CreatedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_IsReference
::System::Nullable_1<bool> Newtonsoft::Json::Serialization::JsonContract::get_IsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_IsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.set_IsReference
void Newtonsoft::Json::Serialization::JsonContract::set_IsReference(::System::Nullable_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::set_IsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_Converter
::Newtonsoft::Json::JsonConverter* Newtonsoft::Json::Serialization::JsonContract::get_Converter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_Converter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Converter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonConverter*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.set_Converter
void Newtonsoft::Json::Serialization::JsonContract::set_Converter(::Newtonsoft::Json::JsonConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::set_Converter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Converter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_InternalConverter
::Newtonsoft::Json::JsonConverter* Newtonsoft::Json::Serialization::JsonContract::get_InternalConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_InternalConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonConverter*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.set_InternalConverter
void Newtonsoft::Json::Serialization::JsonContract::set_InternalConverter(::Newtonsoft::Json::JsonConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::set_InternalConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InternalConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_OnDeserializedCallbacks
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>* Newtonsoft::Json::Serialization::JsonContract::get_OnDeserializedCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_OnDeserializedCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnDeserializedCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_OnDeserializingCallbacks
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>* Newtonsoft::Json::Serialization::JsonContract::get_OnDeserializingCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_OnDeserializingCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnDeserializingCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_OnSerializedCallbacks
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>* Newtonsoft::Json::Serialization::JsonContract::get_OnSerializedCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_OnSerializedCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnSerializedCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_OnSerializingCallbacks
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>* Newtonsoft::Json::Serialization::JsonContract::get_OnSerializingCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_OnSerializingCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnSerializingCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_OnErrorCallbacks
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationErrorCallback*>* Newtonsoft::Json::Serialization::JsonContract::get_OnErrorCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_OnErrorCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnErrorCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationErrorCallback*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_DefaultCreator
::System::Func_1<::Il2CppObject*>* Newtonsoft::Json::Serialization::JsonContract::get_DefaultCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_DefaultCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.set_DefaultCreator
void Newtonsoft::Json::Serialization::JsonContract::set_DefaultCreator(::System::Func_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::set_DefaultCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DefaultCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_DefaultCreatorNonPublic
bool Newtonsoft::Json::Serialization::JsonContract::get_DefaultCreatorNonPublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_DefaultCreatorNonPublic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultCreatorNonPublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.set_DefaultCreatorNonPublic
void Newtonsoft::Json::Serialization::JsonContract::set_DefaultCreatorNonPublic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::set_DefaultCreatorNonPublic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DefaultCreatorNonPublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing
void Newtonsoft::Json::Serialization::JsonContract::InvokeOnSerializing(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::InvokeOnSerializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeOnSerializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, context);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerialized
void Newtonsoft::Json::Serialization::JsonContract::InvokeOnSerialized(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::InvokeOnSerialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeOnSerialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, context);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing
void Newtonsoft::Json::Serialization::JsonContract::InvokeOnDeserializing(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::InvokeOnDeserializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeOnDeserializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, context);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized
void Newtonsoft::Json::Serialization::JsonContract::InvokeOnDeserialized(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::InvokeOnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeOnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, context);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.InvokeOnError
void Newtonsoft::Json::Serialization::JsonContract::InvokeOnError(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context, ::Newtonsoft::Json::Serialization::ErrorContext* errorContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::InvokeOnError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeOnError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(errorContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, context, errorContext);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback
::Newtonsoft::Json::Serialization::SerializationCallback* Newtonsoft::Json::Serialization::JsonContract::CreateSerializationCallback(::System::Reflection::MethodInfo* callbackMethodInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::CreateSerializationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonContract", "CreateSerializationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackMethodInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::SerializationCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callbackMethodInfo);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback
::Newtonsoft::Json::Serialization::SerializationErrorCallback* Newtonsoft::Json::Serialization::JsonContract::CreateSerializationErrorCallback(::System::Reflection::MethodInfo* callbackMethodInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::CreateSerializationErrorCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonContract", "CreateSerializationErrorCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackMethodInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::SerializationErrorCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callbackMethodInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonContract/Newtonsoft.Json.Serialization.<>c__DisplayClass57_0
#include "Newtonsoft/Json/Serialization/JsonContract_--c__DisplayClass57_0.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MethodInfo callbackMethodInfo
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& Newtonsoft::Json::Serialization::JsonContract::$$c__DisplayClass57_0::dyn_callbackMethodInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::$$c__DisplayClass57_0::dyn_callbackMethodInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callbackMethodInfo"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract/Newtonsoft.Json.Serialization.<>c__DisplayClass57_0.<CreateSerializationCallback>b__0
void Newtonsoft::Json::Serialization::JsonContract::$$c__DisplayClass57_0::$CreateSerializationCallback$b__0(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::$$c__DisplayClass57_0::<CreateSerializationCallback>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateSerializationCallback>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonContract/Newtonsoft.Json.Serialization.<>c__DisplayClass58_0
#include "Newtonsoft/Json/Serialization/JsonContract_--c__DisplayClass58_0.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: Newtonsoft.Json.Serialization.ErrorContext
#include "Newtonsoft/Json/Serialization/ErrorContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MethodInfo callbackMethodInfo
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& Newtonsoft::Json::Serialization::JsonContract::$$c__DisplayClass58_0::dyn_callbackMethodInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::$$c__DisplayClass58_0::dyn_callbackMethodInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callbackMethodInfo"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract/Newtonsoft.Json.Serialization.<>c__DisplayClass58_0.<CreateSerializationErrorCallback>b__0
void Newtonsoft::Json::Serialization::JsonContract::$$c__DisplayClass58_0::$CreateSerializationErrorCallback$b__0(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context, ::Newtonsoft::Json::Serialization::ErrorContext* econtext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::$$c__DisplayClass58_0::<CreateSerializationErrorCallback>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateSerializationErrorCallback>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(econtext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, context, econtext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonDictionaryContract
#include "Newtonsoft/Json/Serialization/JsonDictionaryContract.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonContract
#include "Newtonsoft/Json/Serialization/JsonContract.hpp"
// Including type: Newtonsoft.Json.Serialization.ObjectConstructor`1
#include "Newtonsoft/Json/Serialization/ObjectConstructor_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: Newtonsoft.Json.Utilities.IWrappedDictionary
#include "Newtonsoft/Json/Utilities/IWrappedDictionary.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Func`2<System.String,System.String> <DictionaryKeyResolver>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Func_2<::StringW, ::StringW>*& Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn_$DictionaryKeyResolver$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn_$DictionaryKeyResolver$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DictionaryKeyResolver>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <DictionaryKeyType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn_$DictionaryKeyType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn_$DictionaryKeyType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DictionaryKeyType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <DictionaryValueType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn_$DictionaryValueType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn_$DictionaryValueType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DictionaryValueType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.JsonContract <KeyContract>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonContract*& Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn_$KeyContract$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn_$KeyContract$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<KeyContract>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonContract**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _genericCollectionDefinitionType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn__genericCollectionDefinitionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn__genericCollectionDefinitionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_genericCollectionDefinitionType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type _genericWrapperType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn__genericWrapperType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn__genericWrapperType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_genericWrapperType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> _genericWrapperCreator
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn__genericWrapperCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn__genericWrapperCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_genericWrapperCreator"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`1<System.Object> _genericTemporaryDictionaryCreator
[[deprecated("Use field access instead!")]] ::System::Func_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn__genericTemporaryDictionaryCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn__genericTemporaryDictionaryCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_genericTemporaryDictionaryCreator"))->offset;
  return *reinterpret_cast<::System::Func_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <ShouldCreateWrapper>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn_$ShouldCreateWrapper$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn_$ShouldCreateWrapper$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ShouldCreateWrapper>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Reflection.ConstructorInfo _parameterizedConstructor
[[deprecated("Use field access instead!")]] ::System::Reflection::ConstructorInfo*& Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn__parameterizedConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn__parameterizedConstructor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parameterizedConstructor"))->offset;
  return *reinterpret_cast<::System::Reflection::ConstructorInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> _overrideCreator
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn__overrideCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn__overrideCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideCreator"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> _parameterizedCreator
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn__parameterizedCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn__parameterizedCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parameterizedCreator"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <HasParameterizedCreator>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn_$HasParameterizedCreator$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::dyn_$HasParameterizedCreator$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HasParameterizedCreator>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDictionaryContract.get_DictionaryKeyResolver
::System::Func_2<::StringW, ::StringW>* Newtonsoft::Json::Serialization::JsonDictionaryContract::get_DictionaryKeyResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::get_DictionaryKeyResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DictionaryKeyResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDictionaryContract.set_DictionaryKeyResolver
void Newtonsoft::Json::Serialization::JsonDictionaryContract::set_DictionaryKeyResolver(::System::Func_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::set_DictionaryKeyResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DictionaryKeyResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDictionaryContract.get_DictionaryKeyType
::System::Type* Newtonsoft::Json::Serialization::JsonDictionaryContract::get_DictionaryKeyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::get_DictionaryKeyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DictionaryKeyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDictionaryContract.get_DictionaryValueType
::System::Type* Newtonsoft::Json::Serialization::JsonDictionaryContract::get_DictionaryValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::get_DictionaryValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DictionaryValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDictionaryContract.get_KeyContract
::Newtonsoft::Json::Serialization::JsonContract* Newtonsoft::Json::Serialization::JsonDictionaryContract::get_KeyContract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::get_KeyContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonContract*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDictionaryContract.set_KeyContract
void Newtonsoft::Json::Serialization::JsonDictionaryContract::set_KeyContract(::Newtonsoft::Json::Serialization::JsonContract* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::set_KeyContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_KeyContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDictionaryContract.get_ShouldCreateWrapper
bool Newtonsoft::Json::Serialization::JsonDictionaryContract::get_ShouldCreateWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::get_ShouldCreateWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShouldCreateWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDictionaryContract.get_ParameterizedCreator
::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* Newtonsoft::Json::Serialization::JsonDictionaryContract::get_ParameterizedCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::get_ParameterizedCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParameterizedCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDictionaryContract.get_OverrideCreator
::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* Newtonsoft::Json::Serialization::JsonDictionaryContract::get_OverrideCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::get_OverrideCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverrideCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDictionaryContract.set_OverrideCreator
void Newtonsoft::Json::Serialization::JsonDictionaryContract::set_OverrideCreator(::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::set_OverrideCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OverrideCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDictionaryContract.get_HasParameterizedCreator
bool Newtonsoft::Json::Serialization::JsonDictionaryContract::get_HasParameterizedCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::get_HasParameterizedCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasParameterizedCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDictionaryContract.set_HasParameterizedCreator
void Newtonsoft::Json::Serialization::JsonDictionaryContract::set_HasParameterizedCreator(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::set_HasParameterizedCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HasParameterizedCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDictionaryContract.get_HasParameterizedCreatorInternal
bool Newtonsoft::Json::Serialization::JsonDictionaryContract::get_HasParameterizedCreatorInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::get_HasParameterizedCreatorInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasParameterizedCreatorInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper
::Newtonsoft::Json::Utilities::IWrappedDictionary* Newtonsoft::Json::Serialization::JsonDictionaryContract::CreateWrapper(::Il2CppObject* dictionary) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::CreateWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionary)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::IWrappedDictionary*, false>(this, ___internal__method, dictionary);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary
::System::Collections::IDictionary* Newtonsoft::Json::Serialization::JsonDictionaryContract::CreateTemporaryDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDictionaryContract::CreateTemporaryDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTemporaryDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionary*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonDynamicContract
#include "Newtonsoft/Json/Serialization/JsonDynamicContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonPropertyCollection
#include "Newtonsoft/Json/Serialization/JsonPropertyCollection.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Newtonsoft.Json.Utilities.ThreadSafeStore`2
#include "Newtonsoft/Json/Utilities/ThreadSafeStore_2.hpp"
// Including type: System.Runtime.CompilerServices.CallSite`1
#include "System/Runtime/CompilerServices/CallSite_1.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Runtime.CompilerServices.CallSite
#include "System/Runtime/CompilerServices/CallSite.hpp"
// Including type: System.Func`4
#include "System/Func_4.hpp"
// Including type: System.Dynamic.IDynamicMetaObjectProvider
#include "System/Dynamic/IDynamicMetaObjectProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Serialization.JsonPropertyCollection <Properties>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonPropertyCollection*& Newtonsoft::Json::Serialization::JsonDynamicContract::dyn_$Properties$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDynamicContract::dyn_$Properties$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Properties>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonPropertyCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`2<System.String,System.String> <PropertyNameResolver>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Func_2<::StringW, ::StringW>*& Newtonsoft::Json::Serialization::JsonDynamicContract::dyn_$PropertyNameResolver$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDynamicContract::dyn_$PropertyNameResolver$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PropertyNameResolver>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.String,System.Runtime.CompilerServices.CallSite`1<System.Func`3<System.Runtime.CompilerServices.CallSite,System.Object,System.Object>>> _callSiteGetters
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::StringW, ::System::Runtime::CompilerServices::CallSite_1<::System::Func_3<::System::Runtime::CompilerServices::CallSite*, ::Il2CppObject*, ::Il2CppObject*>*>*>*& Newtonsoft::Json::Serialization::JsonDynamicContract::dyn__callSiteGetters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDynamicContract::dyn__callSiteGetters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_callSiteGetters"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::StringW, ::System::Runtime::CompilerServices::CallSite_1<::System::Func_3<::System::Runtime::CompilerServices::CallSite*, ::Il2CppObject*, ::Il2CppObject*>*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.String,System.Runtime.CompilerServices.CallSite`1<System.Func`4<System.Runtime.CompilerServices.CallSite,System.Object,System.Object,System.Object>>> _callSiteSetters
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::StringW, ::System::Runtime::CompilerServices::CallSite_1<::System::Func_4<::System::Runtime::CompilerServices::CallSite*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*>*>*>*& Newtonsoft::Json::Serialization::JsonDynamicContract::dyn__callSiteSetters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDynamicContract::dyn__callSiteSetters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_callSiteSetters"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::StringW, ::System::Runtime::CompilerServices::CallSite_1<::System::Func_4<::System::Runtime::CompilerServices::CallSite*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*>*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDynamicContract.get_Properties
::Newtonsoft::Json::Serialization::JsonPropertyCollection* Newtonsoft::Json::Serialization::JsonDynamicContract::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDynamicContract::get_Properties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDynamicContract.get_PropertyNameResolver
::System::Func_2<::StringW, ::StringW>* Newtonsoft::Json::Serialization::JsonDynamicContract::get_PropertyNameResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDynamicContract::get_PropertyNameResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyNameResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDynamicContract.set_PropertyNameResolver
void Newtonsoft::Json::Serialization::JsonDynamicContract::set_PropertyNameResolver(::System::Func_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDynamicContract::set_PropertyNameResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PropertyNameResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDynamicContract.CreateCallSiteGetter
::System::Runtime::CompilerServices::CallSite_1<::System::Func_3<::System::Runtime::CompilerServices::CallSite*, ::Il2CppObject*, ::Il2CppObject*>*>* Newtonsoft::Json::Serialization::JsonDynamicContract::CreateCallSiteGetter(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDynamicContract::CreateCallSiteGetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonDynamicContract", "CreateCallSiteGetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::CompilerServices::CallSite_1<::System::Func_3<::System::Runtime::CompilerServices::CallSite*, ::Il2CppObject*, ::Il2CppObject*>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDynamicContract.CreateCallSiteSetter
::System::Runtime::CompilerServices::CallSite_1<::System::Func_4<::System::Runtime::CompilerServices::CallSite*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*>*>* Newtonsoft::Json::Serialization::JsonDynamicContract::CreateCallSiteSetter(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDynamicContract::CreateCallSiteSetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonDynamicContract", "CreateCallSiteSetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::CompilerServices::CallSite_1<::System::Func_4<::System::Runtime::CompilerServices::CallSite*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDynamicContract.TryGetMember
bool Newtonsoft::Json::Serialization::JsonDynamicContract::TryGetMember(::System::Dynamic::IDynamicMetaObjectProvider* dynamicProvider, ::StringW name, ByRef<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDynamicContract::TryGetMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dynamicProvider), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dynamicProvider, name, byref(value));
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonDynamicContract.TrySetMember
bool Newtonsoft::Json::Serialization::JsonDynamicContract::TrySetMember(::System::Dynamic::IDynamicMetaObjectProvider* dynamicProvider, ::StringW name, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDynamicContract::TrySetMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySetMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dynamicProvider), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dynamicProvider, name, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonFormatterConverter
#include "Newtonsoft/Json/Serialization/JsonFormatterConverter.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerInternalReader
#include "Newtonsoft/Json/Serialization/JsonSerializerInternalReader.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonISerializableContract
#include "Newtonsoft/Json/Serialization/JsonISerializableContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonProperty
#include "Newtonsoft/Json/Serialization/JsonProperty.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Serialization.JsonSerializerInternalReader _reader
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonSerializerInternalReader*& Newtonsoft::Json::Serialization::JsonFormatterConverter::dyn__reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonFormatterConverter::dyn__reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reader"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonSerializerInternalReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Serialization.JsonISerializableContract _contract
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonISerializableContract*& Newtonsoft::Json::Serialization::JsonFormatterConverter::dyn__contract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonFormatterConverter::dyn__contract");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contract"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonISerializableContract**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Serialization.JsonProperty _member
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonProperty*& Newtonsoft::Json::Serialization::JsonFormatterConverter::dyn__member() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonFormatterConverter::dyn__member");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_member"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert
::Il2CppObject* Newtonsoft::Json::Serialization::JsonFormatterConverter::Convert(::Il2CppObject* value, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonFormatterConverter::Convert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::JsonFormatterConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonFormatterConverter.ToBoolean
bool Newtonsoft::Json::Serialization::JsonFormatterConverter::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonFormatterConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::JsonFormatterConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt32
int Newtonsoft::Json::Serialization::JsonFormatterConverter::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonFormatterConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::JsonFormatterConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt64
int64_t Newtonsoft::Json::Serialization::JsonFormatterConverter::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonFormatterConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::JsonFormatterConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSingle
float Newtonsoft::Json::Serialization::JsonFormatterConverter::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonFormatterConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::JsonFormatterConverter*), 8));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonFormatterConverter.ToString
::StringW Newtonsoft::Json::Serialization::JsonFormatterConverter::ToString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonFormatterConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::JsonFormatterConverter*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonISerializableContract
#include "Newtonsoft/Json/Serialization/JsonISerializableContract.hpp"
// Including type: Newtonsoft.Json.Serialization.ObjectConstructor`1
#include "Newtonsoft/Json/Serialization/ObjectConstructor_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> <ISerializableCreator>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonISerializableContract::dyn_$ISerializableCreator$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonISerializableContract::dyn_$ISerializableCreator$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ISerializableCreator>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonISerializableContract.get_ISerializableCreator
::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* Newtonsoft::Json::Serialization::JsonISerializableContract::get_ISerializableCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonISerializableContract::get_ISerializableCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ISerializableCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonISerializableContract.set_ISerializableCreator
void Newtonsoft::Json::Serialization::JsonISerializableContract::set_ISerializableCreator(::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonISerializableContract::set_ISerializableCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ISerializableCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.JsonLinqContract
#include "Newtonsoft/Json/Serialization/JsonLinqContract.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonObjectContract
#include "Newtonsoft/Json/Serialization/JsonObjectContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonPropertyCollection
#include "Newtonsoft/Json/Serialization/JsonPropertyCollection.hpp"
// Including type: Newtonsoft.Json.Serialization.ExtensionDataSetter
#include "Newtonsoft/Json/Serialization/ExtensionDataSetter.hpp"
// Including type: Newtonsoft.Json.Serialization.ExtensionDataGetter
#include "Newtonsoft/Json/Serialization/ExtensionDataGetter.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Newtonsoft.Json.Serialization.ObjectConstructor`1
#include "Newtonsoft/Json/Serialization/ObjectConstructor_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.MemberSerialization <MemberSerialization>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::MemberSerialization& Newtonsoft::Json::Serialization::JsonObjectContract::dyn_$MemberSerialization$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::dyn_$MemberSerialization$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MemberSerialization>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::MemberSerialization*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<Newtonsoft.Json.MissingMemberHandling> <MissingMemberHandling>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::MissingMemberHandling>& Newtonsoft::Json::Serialization::JsonObjectContract::dyn_$MissingMemberHandling$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::dyn_$MissingMemberHandling$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MissingMemberHandling>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::MissingMemberHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<Newtonsoft.Json.Required> <ItemRequired>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::Required>& Newtonsoft::Json::Serialization::JsonObjectContract::dyn_$ItemRequired$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::dyn_$ItemRequired$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemRequired>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::Required>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<Newtonsoft.Json.NullValueHandling> <ItemNullValueHandling>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::NullValueHandling>& Newtonsoft::Json::Serialization::JsonObjectContract::dyn_$ItemNullValueHandling$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::dyn_$ItemNullValueHandling$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemNullValueHandling>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::NullValueHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Serialization.JsonPropertyCollection <Properties>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonPropertyCollection*& Newtonsoft::Json::Serialization::JsonObjectContract::dyn_$Properties$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::dyn_$Properties$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Properties>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonPropertyCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.ExtensionDataSetter <ExtensionDataSetter>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ExtensionDataSetter*& Newtonsoft::Json::Serialization::JsonObjectContract::dyn_$ExtensionDataSetter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::dyn_$ExtensionDataSetter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ExtensionDataSetter>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ExtensionDataSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.ExtensionDataGetter <ExtensionDataGetter>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ExtensionDataGetter*& Newtonsoft::Json::Serialization::JsonObjectContract::dyn_$ExtensionDataGetter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::dyn_$ExtensionDataGetter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ExtensionDataGetter>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ExtensionDataGetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`2<System.String,System.String> <ExtensionDataNameResolver>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Func_2<::StringW, ::StringW>*& Newtonsoft::Json::Serialization::JsonObjectContract::dyn_$ExtensionDataNameResolver$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::dyn_$ExtensionDataNameResolver$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ExtensionDataNameResolver>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean ExtensionDataIsJToken
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonObjectContract::dyn_ExtensionDataIsJToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::dyn_ExtensionDataIsJToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtensionDataIsJToken"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> _hasRequiredOrDefaultValueProperties
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& Newtonsoft::Json::Serialization::JsonObjectContract::dyn__hasRequiredOrDefaultValueProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::dyn__hasRequiredOrDefaultValueProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasRequiredOrDefaultValueProperties"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> _overrideCreator
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonObjectContract::dyn__overrideCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::dyn__overrideCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideCreator"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> _parameterizedCreator
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonObjectContract::dyn__parameterizedCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::dyn__parameterizedCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parameterizedCreator"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.JsonPropertyCollection _creatorParameters
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonPropertyCollection*& Newtonsoft::Json::Serialization::JsonObjectContract::dyn__creatorParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::dyn__creatorParameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_creatorParameters"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonPropertyCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type _extensionDataValueType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonObjectContract::dyn__extensionDataValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::dyn__extensionDataValueType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_extensionDataValueType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.get_MemberSerialization
::Newtonsoft::Json::MemberSerialization Newtonsoft::Json::Serialization::JsonObjectContract::get_MemberSerialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::get_MemberSerialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberSerialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::MemberSerialization, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.set_MemberSerialization
void Newtonsoft::Json::Serialization::JsonObjectContract::set_MemberSerialization(::Newtonsoft::Json::MemberSerialization value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::set_MemberSerialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MemberSerialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.get_MissingMemberHandling
::System::Nullable_1<::Newtonsoft::Json::MissingMemberHandling> Newtonsoft::Json::Serialization::JsonObjectContract::get_MissingMemberHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::get_MissingMemberHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MissingMemberHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::Newtonsoft::Json::MissingMemberHandling>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.set_MissingMemberHandling
void Newtonsoft::Json::Serialization::JsonObjectContract::set_MissingMemberHandling(::System::Nullable_1<::Newtonsoft::Json::MissingMemberHandling> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::set_MissingMemberHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MissingMemberHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.get_ItemRequired
::System::Nullable_1<::Newtonsoft::Json::Required> Newtonsoft::Json::Serialization::JsonObjectContract::get_ItemRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::get_ItemRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::Newtonsoft::Json::Required>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.set_ItemRequired
void Newtonsoft::Json::Serialization::JsonObjectContract::set_ItemRequired(::System::Nullable_1<::Newtonsoft::Json::Required> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::set_ItemRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.get_ItemNullValueHandling
::System::Nullable_1<::Newtonsoft::Json::NullValueHandling> Newtonsoft::Json::Serialization::JsonObjectContract::get_ItemNullValueHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::get_ItemNullValueHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemNullValueHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::Newtonsoft::Json::NullValueHandling>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.set_ItemNullValueHandling
void Newtonsoft::Json::Serialization::JsonObjectContract::set_ItemNullValueHandling(::System::Nullable_1<::Newtonsoft::Json::NullValueHandling> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::set_ItemNullValueHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemNullValueHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.get_Properties
::Newtonsoft::Json::Serialization::JsonPropertyCollection* Newtonsoft::Json::Serialization::JsonObjectContract::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::get_Properties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.get_CreatorParameters
::Newtonsoft::Json::Serialization::JsonPropertyCollection* Newtonsoft::Json::Serialization::JsonObjectContract::get_CreatorParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::get_CreatorParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CreatorParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.get_OverrideCreator
::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* Newtonsoft::Json::Serialization::JsonObjectContract::get_OverrideCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::get_OverrideCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverrideCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.set_OverrideCreator
void Newtonsoft::Json::Serialization::JsonObjectContract::set_OverrideCreator(::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::set_OverrideCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OverrideCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.get_ParameterizedCreator
::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* Newtonsoft::Json::Serialization::JsonObjectContract::get_ParameterizedCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::get_ParameterizedCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParameterizedCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.set_ParameterizedCreator
void Newtonsoft::Json::Serialization::JsonObjectContract::set_ParameterizedCreator(::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::set_ParameterizedCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParameterizedCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.get_ExtensionDataSetter
::Newtonsoft::Json::Serialization::ExtensionDataSetter* Newtonsoft::Json::Serialization::JsonObjectContract::get_ExtensionDataSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::get_ExtensionDataSetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExtensionDataSetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ExtensionDataSetter*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.set_ExtensionDataSetter
void Newtonsoft::Json::Serialization::JsonObjectContract::set_ExtensionDataSetter(::Newtonsoft::Json::Serialization::ExtensionDataSetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::set_ExtensionDataSetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExtensionDataSetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.get_ExtensionDataGetter
::Newtonsoft::Json::Serialization::ExtensionDataGetter* Newtonsoft::Json::Serialization::JsonObjectContract::get_ExtensionDataGetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::get_ExtensionDataGetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExtensionDataGetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ExtensionDataGetter*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.set_ExtensionDataGetter
void Newtonsoft::Json::Serialization::JsonObjectContract::set_ExtensionDataGetter(::Newtonsoft::Json::Serialization::ExtensionDataGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::set_ExtensionDataGetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExtensionDataGetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.set_ExtensionDataValueType
void Newtonsoft::Json::Serialization::JsonObjectContract::set_ExtensionDataValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::set_ExtensionDataValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExtensionDataValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.get_ExtensionDataNameResolver
::System::Func_2<::StringW, ::StringW>* Newtonsoft::Json::Serialization::JsonObjectContract::get_ExtensionDataNameResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::get_ExtensionDataNameResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExtensionDataNameResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.set_ExtensionDataNameResolver
void Newtonsoft::Json::Serialization::JsonObjectContract::set_ExtensionDataNameResolver(::System::Func_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::set_ExtensionDataNameResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExtensionDataNameResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.get_HasRequiredOrDefaultValueProperties
bool Newtonsoft::Json::Serialization::JsonObjectContract::get_HasRequiredOrDefaultValueProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::get_HasRequiredOrDefaultValueProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasRequiredOrDefaultValueProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject
::Il2CppObject* Newtonsoft::Json::Serialization::JsonObjectContract::GetUninitializedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonObjectContract::GetUninitializedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUninitializedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.JsonPrimitiveContract
#include "Newtonsoft/Json/Serialization/JsonPrimitiveContract.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,Newtonsoft.Json.ReadType> ReadTypeMap
::System::Collections::Generic::Dictionary_2<::System::Type*, ::Newtonsoft::Json::ReadType>* Newtonsoft::Json::Serialization::JsonPrimitiveContract::_get_ReadTypeMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonPrimitiveContract::_get_ReadTypeMap");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::Newtonsoft::Json::ReadType>*>("Newtonsoft.Json.Serialization", "JsonPrimitiveContract", "ReadTypeMap")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,Newtonsoft.Json.ReadType> ReadTypeMap
void Newtonsoft::Json::Serialization::JsonPrimitiveContract::_set_ReadTypeMap(::System::Collections::Generic::Dictionary_2<::System::Type*, ::Newtonsoft::Json::ReadType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonPrimitiveContract::_set_ReadTypeMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonPrimitiveContract", "ReadTypeMap", value));
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Utilities.PrimitiveTypeCode <TypeCode>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::PrimitiveTypeCode& Newtonsoft::Json::Serialization::JsonPrimitiveContract::dyn_$TypeCode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonPrimitiveContract::dyn_$TypeCode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TypeCode>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::PrimitiveTypeCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonPrimitiveContract.get_TypeCode
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Serialization::JsonPrimitiveContract::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonPrimitiveContract::get_TypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::PrimitiveTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonPrimitiveContract.set_TypeCode
void Newtonsoft::Json::Serialization::JsonPrimitiveContract::set_TypeCode(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonPrimitiveContract::set_TypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonPrimitiveContract..cctor
void Newtonsoft::Json::Serialization::JsonPrimitiveContract::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonPrimitiveContract::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonPrimitiveContract", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonProperty
#include "Newtonsoft/Json/Serialization/JsonProperty.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonContract
#include "Newtonsoft/Json/Serialization/JsonContract.hpp"
// Including type: Newtonsoft.Json.Serialization.IValueProvider
#include "Newtonsoft/Json/Serialization/IValueProvider.hpp"
// Including type: Newtonsoft.Json.Serialization.IAttributeProvider
#include "Newtonsoft/Json/Serialization/IAttributeProvider.hpp"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.Required> _required
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::Required>& Newtonsoft::Json::Serialization::JsonProperty::dyn__required() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn__required");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_required"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::Required>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _hasExplicitDefaultValue
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonProperty::dyn__hasExplicitDefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn__hasExplicitDefaultValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasExplicitDefaultValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _defaultValue
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::Serialization::JsonProperty::dyn__defaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn__defaultValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasGeneratedDefaultValue
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonProperty::dyn__hasGeneratedDefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn__hasGeneratedDefaultValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasGeneratedDefaultValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _propertyName
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Serialization::JsonProperty::dyn__propertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn__propertyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propertyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _skipPropertyNameEscape
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonProperty::dyn__skipPropertyNameEscape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn__skipPropertyNameEscape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skipPropertyNameEscape"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type _propertyType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonProperty::dyn__propertyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn__propertyType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propertyType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.JsonContract <PropertyContract>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonContract*& Newtonsoft::Json::Serialization::JsonProperty::dyn_$PropertyContract$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$PropertyContract$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PropertyContract>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonContract**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type <DeclaringType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonProperty::dyn_$DeclaringType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$DeclaringType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DeclaringType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int32> <Order>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& Newtonsoft::Json::Serialization::JsonProperty::dyn_$Order$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$Order$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Order>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <UnderlyingName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Serialization::JsonProperty::dyn_$UnderlyingName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$UnderlyingName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UnderlyingName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.IValueProvider <ValueProvider>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::IValueProvider*& Newtonsoft::Json::Serialization::JsonProperty::dyn_$ValueProvider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$ValueProvider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ValueProvider>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::IValueProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.IAttributeProvider <AttributeProvider>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::IAttributeProvider*& Newtonsoft::Json::Serialization::JsonProperty::dyn_$AttributeProvider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$AttributeProvider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AttributeProvider>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::IAttributeProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.JsonConverter <Converter>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonConverter*& Newtonsoft::Json::Serialization::JsonProperty::dyn_$Converter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$Converter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Converter>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Ignored>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonProperty::dyn_$Ignored$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$Ignored$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Ignored>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Readable>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonProperty::dyn_$Readable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$Readable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Readable>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Writable>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonProperty::dyn_$Writable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$Writable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Writable>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <HasMemberAttribute>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonProperty::dyn_$HasMemberAttribute$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$HasMemberAttribute$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HasMemberAttribute>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> <IsReference>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& Newtonsoft::Json::Serialization::JsonProperty::dyn_$IsReference$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$IsReference$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsReference>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<Newtonsoft.Json.NullValueHandling> <NullValueHandling>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::NullValueHandling>& Newtonsoft::Json::Serialization::JsonProperty::dyn_$NullValueHandling$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$NullValueHandling$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NullValueHandling>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::NullValueHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<Newtonsoft.Json.DefaultValueHandling> <DefaultValueHandling>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::DefaultValueHandling>& Newtonsoft::Json::Serialization::JsonProperty::dyn_$DefaultValueHandling$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$DefaultValueHandling$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DefaultValueHandling>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::DefaultValueHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> <ReferenceLoopHandling>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>& Newtonsoft::Json::Serialization::JsonProperty::dyn_$ReferenceLoopHandling$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$ReferenceLoopHandling$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReferenceLoopHandling>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<Newtonsoft.Json.ObjectCreationHandling> <ObjectCreationHandling>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::ObjectCreationHandling>& Newtonsoft::Json::Serialization::JsonProperty::dyn_$ObjectCreationHandling$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$ObjectCreationHandling$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ObjectCreationHandling>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::ObjectCreationHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<Newtonsoft.Json.TypeNameHandling> <TypeNameHandling>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>& Newtonsoft::Json::Serialization::JsonProperty::dyn_$TypeNameHandling$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$TypeNameHandling$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TypeNameHandling>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Predicate`1<System.Object> <ShouldSerialize>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Predicate_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonProperty::dyn_$ShouldSerialize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$ShouldSerialize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ShouldSerialize>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Predicate_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Predicate`1<System.Object> <ShouldDeserialize>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Predicate_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonProperty::dyn_$ShouldDeserialize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$ShouldDeserialize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ShouldDeserialize>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Predicate_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Predicate`1<System.Object> <GetIsSpecified>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Predicate_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonProperty::dyn_$GetIsSpecified$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$GetIsSpecified$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GetIsSpecified>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Predicate_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.Object,System.Object> <SetIsSpecified>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Action_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonProperty::dyn_$SetIsSpecified$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$SetIsSpecified$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SetIsSpecified>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Action_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.JsonConverter <ItemConverter>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonConverter*& Newtonsoft::Json::Serialization::JsonProperty::dyn_$ItemConverter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$ItemConverter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemConverter>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> <ItemIsReference>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& Newtonsoft::Json::Serialization::JsonProperty::dyn_$ItemIsReference$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$ItemIsReference$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemIsReference>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<Newtonsoft.Json.TypeNameHandling> <ItemTypeNameHandling>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>& Newtonsoft::Json::Serialization::JsonProperty::dyn_$ItemTypeNameHandling$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$ItemTypeNameHandling$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemTypeNameHandling>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> <ItemReferenceLoopHandling>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>& Newtonsoft::Json::Serialization::JsonProperty::dyn_$ItemReferenceLoopHandling$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::dyn_$ItemReferenceLoopHandling$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemReferenceLoopHandling>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_PropertyContract
::Newtonsoft::Json::Serialization::JsonContract* Newtonsoft::Json::Serialization::JsonProperty::get_PropertyContract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_PropertyContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonContract*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_PropertyContract
void Newtonsoft::Json::Serialization::JsonProperty::set_PropertyContract(::Newtonsoft::Json::Serialization::JsonContract* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_PropertyContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PropertyContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_PropertyName
::StringW Newtonsoft::Json::Serialization::JsonProperty::get_PropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_PropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_PropertyName
void Newtonsoft::Json::Serialization::JsonProperty::set_PropertyName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_PropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_DeclaringType
::System::Type* Newtonsoft::Json::Serialization::JsonProperty::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_DeclaringType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_DeclaringType
void Newtonsoft::Json::Serialization::JsonProperty::set_DeclaringType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_DeclaringType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_Order
::System::Nullable_1<int> Newtonsoft::Json::Serialization::JsonProperty::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_Order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_Order
void Newtonsoft::Json::Serialization::JsonProperty::set_Order(::System::Nullable_1<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_Order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_UnderlyingName
::StringW Newtonsoft::Json::Serialization::JsonProperty::get_UnderlyingName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_UnderlyingName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_UnderlyingName
void Newtonsoft::Json::Serialization::JsonProperty::set_UnderlyingName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_UnderlyingName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UnderlyingName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_ValueProvider
::Newtonsoft::Json::Serialization::IValueProvider* Newtonsoft::Json::Serialization::JsonProperty::get_ValueProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_ValueProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::IValueProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_ValueProvider
void Newtonsoft::Json::Serialization::JsonProperty::set_ValueProvider(::Newtonsoft::Json::Serialization::IValueProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_ValueProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ValueProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_AttributeProvider
void Newtonsoft::Json::Serialization::JsonProperty::set_AttributeProvider(::Newtonsoft::Json::Serialization::IAttributeProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_AttributeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AttributeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_PropertyType
::System::Type* Newtonsoft::Json::Serialization::JsonProperty::get_PropertyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_PropertyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_PropertyType
void Newtonsoft::Json::Serialization::JsonProperty::set_PropertyType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_PropertyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PropertyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_Converter
::Newtonsoft::Json::JsonConverter* Newtonsoft::Json::Serialization::JsonProperty::get_Converter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_Converter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Converter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonConverter*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_Converter
void Newtonsoft::Json::Serialization::JsonProperty::set_Converter(::Newtonsoft::Json::JsonConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_Converter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Converter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_Ignored
bool Newtonsoft::Json::Serialization::JsonProperty::get_Ignored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_Ignored");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Ignored", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_Ignored
void Newtonsoft::Json::Serialization::JsonProperty::set_Ignored(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_Ignored");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Ignored", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_Readable
bool Newtonsoft::Json::Serialization::JsonProperty::get_Readable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_Readable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Readable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_Readable
void Newtonsoft::Json::Serialization::JsonProperty::set_Readable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_Readable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Readable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_Writable
bool Newtonsoft::Json::Serialization::JsonProperty::get_Writable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_Writable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Writable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_Writable
void Newtonsoft::Json::Serialization::JsonProperty::set_Writable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_Writable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Writable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_HasMemberAttribute
bool Newtonsoft::Json::Serialization::JsonProperty::get_HasMemberAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_HasMemberAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasMemberAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_HasMemberAttribute
void Newtonsoft::Json::Serialization::JsonProperty::set_HasMemberAttribute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_HasMemberAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HasMemberAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_DefaultValue
::Il2CppObject* Newtonsoft::Json::Serialization::JsonProperty::get_DefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_DefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_DefaultValue
void Newtonsoft::Json::Serialization::JsonProperty::set_DefaultValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_DefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_Required
::Newtonsoft::Json::Required Newtonsoft::Json::Serialization::JsonProperty::get_Required() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_Required");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Required", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Required, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_IsReference
::System::Nullable_1<bool> Newtonsoft::Json::Serialization::JsonProperty::get_IsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_IsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_IsReference
void Newtonsoft::Json::Serialization::JsonProperty::set_IsReference(::System::Nullable_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_IsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_NullValueHandling
::System::Nullable_1<::Newtonsoft::Json::NullValueHandling> Newtonsoft::Json::Serialization::JsonProperty::get_NullValueHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_NullValueHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NullValueHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::Newtonsoft::Json::NullValueHandling>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_NullValueHandling
void Newtonsoft::Json::Serialization::JsonProperty::set_NullValueHandling(::System::Nullable_1<::Newtonsoft::Json::NullValueHandling> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_NullValueHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NullValueHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_DefaultValueHandling
::System::Nullable_1<::Newtonsoft::Json::DefaultValueHandling> Newtonsoft::Json::Serialization::JsonProperty::get_DefaultValueHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_DefaultValueHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultValueHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::Newtonsoft::Json::DefaultValueHandling>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_DefaultValueHandling
void Newtonsoft::Json::Serialization::JsonProperty::set_DefaultValueHandling(::System::Nullable_1<::Newtonsoft::Json::DefaultValueHandling> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_DefaultValueHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DefaultValueHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_ReferenceLoopHandling
::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling> Newtonsoft::Json::Serialization::JsonProperty::get_ReferenceLoopHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_ReferenceLoopHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReferenceLoopHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_ReferenceLoopHandling
void Newtonsoft::Json::Serialization::JsonProperty::set_ReferenceLoopHandling(::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_ReferenceLoopHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReferenceLoopHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_ObjectCreationHandling
::System::Nullable_1<::Newtonsoft::Json::ObjectCreationHandling> Newtonsoft::Json::Serialization::JsonProperty::get_ObjectCreationHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_ObjectCreationHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectCreationHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::Newtonsoft::Json::ObjectCreationHandling>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_ObjectCreationHandling
void Newtonsoft::Json::Serialization::JsonProperty::set_ObjectCreationHandling(::System::Nullable_1<::Newtonsoft::Json::ObjectCreationHandling> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_ObjectCreationHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ObjectCreationHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_TypeNameHandling
::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling> Newtonsoft::Json::Serialization::JsonProperty::get_TypeNameHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_TypeNameHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeNameHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_TypeNameHandling
void Newtonsoft::Json::Serialization::JsonProperty::set_TypeNameHandling(::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_TypeNameHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TypeNameHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_ShouldSerialize
::System::Predicate_1<::Il2CppObject*>* Newtonsoft::Json::Serialization::JsonProperty::get_ShouldSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_ShouldSerialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShouldSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Predicate_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_ShouldSerialize
void Newtonsoft::Json::Serialization::JsonProperty::set_ShouldSerialize(::System::Predicate_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_ShouldSerialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ShouldSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_ShouldDeserialize
::System::Predicate_1<::Il2CppObject*>* Newtonsoft::Json::Serialization::JsonProperty::get_ShouldDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_ShouldDeserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShouldDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Predicate_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_GetIsSpecified
::System::Predicate_1<::Il2CppObject*>* Newtonsoft::Json::Serialization::JsonProperty::get_GetIsSpecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_GetIsSpecified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GetIsSpecified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Predicate_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_GetIsSpecified
void Newtonsoft::Json::Serialization::JsonProperty::set_GetIsSpecified(::System::Predicate_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_GetIsSpecified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GetIsSpecified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_SetIsSpecified
::System::Action_2<::Il2CppObject*, ::Il2CppObject*>* Newtonsoft::Json::Serialization::JsonProperty::get_SetIsSpecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_SetIsSpecified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SetIsSpecified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action_2<::Il2CppObject*, ::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_SetIsSpecified
void Newtonsoft::Json::Serialization::JsonProperty::set_SetIsSpecified(::System::Action_2<::Il2CppObject*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_SetIsSpecified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SetIsSpecified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_ItemConverter
::Newtonsoft::Json::JsonConverter* Newtonsoft::Json::Serialization::JsonProperty::get_ItemConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_ItemConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonConverter*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_ItemConverter
void Newtonsoft::Json::Serialization::JsonProperty::set_ItemConverter(::Newtonsoft::Json::JsonConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_ItemConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_ItemIsReference
::System::Nullable_1<bool> Newtonsoft::Json::Serialization::JsonProperty::get_ItemIsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_ItemIsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemIsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_ItemIsReference
void Newtonsoft::Json::Serialization::JsonProperty::set_ItemIsReference(::System::Nullable_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_ItemIsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemIsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_ItemTypeNameHandling
::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling> Newtonsoft::Json::Serialization::JsonProperty::get_ItemTypeNameHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_ItemTypeNameHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemTypeNameHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_ItemTypeNameHandling
void Newtonsoft::Json::Serialization::JsonProperty::set_ItemTypeNameHandling(::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_ItemTypeNameHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemTypeNameHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.get_ItemReferenceLoopHandling
::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling> Newtonsoft::Json::Serialization::JsonProperty::get_ItemReferenceLoopHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::get_ItemReferenceLoopHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemReferenceLoopHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.set_ItemReferenceLoopHandling
void Newtonsoft::Json::Serialization::JsonProperty::set_ItemReferenceLoopHandling(::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::set_ItemReferenceLoopHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemReferenceLoopHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue
::Il2CppObject* Newtonsoft::Json::Serialization::JsonProperty::GetResolvedDefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::GetResolvedDefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResolvedDefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName
void Newtonsoft::Json::Serialization::JsonProperty::WritePropertyName(::Newtonsoft::Json::JsonWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::WritePropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonProperty.ToString
::StringW Newtonsoft::Json::Serialization::JsonProperty::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.JsonPropertyCollection
#include "Newtonsoft/Json/Serialization/JsonPropertyCollection.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonProperty
#include "Newtonsoft/Json/Serialization/JsonProperty.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.StringComparison
#include "System/StringComparison.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _type
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonPropertyCollection::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonPropertyCollection::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Newtonsoft.Json.Serialization.JsonProperty> _list
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::JsonProperty*>*& Newtonsoft::Json::Serialization::JsonPropertyCollection::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonPropertyCollection::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::JsonProperty*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonPropertyCollection.GetKeyForItem
::StringW Newtonsoft::Json::Serialization::JsonPropertyCollection::GetKeyForItem(::Newtonsoft::Json::Serialization::JsonProperty* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonPropertyCollection::GetKeyForItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::JsonPropertyCollection*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty
void Newtonsoft::Json::Serialization::JsonPropertyCollection::AddProperty(::Newtonsoft::Json::Serialization::JsonProperty* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonPropertyCollection::AddProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty
::Newtonsoft::Json::Serialization::JsonProperty* Newtonsoft::Json::Serialization::JsonPropertyCollection::GetClosestMatchProperty(::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonPropertyCollection::GetClosestMatchProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClosestMatchProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonProperty*, false>(this, ___internal__method, propertyName);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue
bool Newtonsoft::Json::Serialization::JsonPropertyCollection::TryGetValue(::StringW key, ByRef<::Newtonsoft::Json::Serialization::JsonProperty*> item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonPropertyCollection::TryGetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractIndependentType<::Newtonsoft::Json::Serialization::JsonProperty*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, byref(item));
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty
::Newtonsoft::Json::Serialization::JsonProperty* Newtonsoft::Json::Serialization::JsonPropertyCollection::GetProperty(::StringW propertyName, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonPropertyCollection::GetProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonProperty*, false>(this, ___internal__method, propertyName, comparisonType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerInternalBase
#include "Newtonsoft/Json/Serialization/JsonSerializerInternalBase.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerInternalBase/Newtonsoft.Json.Serialization.ReferenceEqualsEqualityComparer
#include "Newtonsoft/Json/Serialization/JsonSerializerInternalBase_ReferenceEqualsEqualityComparer.hpp"
// Including type: Newtonsoft.Json.Serialization.ErrorContext
#include "Newtonsoft/Json/Serialization/ErrorContext.hpp"
// Including type: Newtonsoft.Json.Utilities.BidirectionalDictionary`2
#include "Newtonsoft/Json/Utilities/BidirectionalDictionary_2.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.Serialization.ITraceWriter
#include "Newtonsoft/Json/Serialization/ITraceWriter.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerProxy
#include "Newtonsoft/Json/Serialization/JsonSerializerProxy.hpp"
// Including type: Newtonsoft.Json.NullValueHandling
#include "Newtonsoft/Json/NullValueHandling.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonObjectContract
#include "Newtonsoft/Json/Serialization/JsonObjectContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonProperty
#include "Newtonsoft/Json/Serialization/JsonProperty.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonContract
#include "Newtonsoft/Json/Serialization/JsonContract.hpp"
// Including type: Newtonsoft.Json.IJsonLineInfo
#include "Newtonsoft/Json/IJsonLineInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.ErrorContext _currentErrorContext
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ErrorContext*& Newtonsoft::Json::Serialization::JsonSerializerInternalBase::dyn__currentErrorContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalBase::dyn__currentErrorContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentErrorContext"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ErrorContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Utilities.BidirectionalDictionary`2<System.String,System.Object> _mappings
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::BidirectionalDictionary_2<::StringW, ::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonSerializerInternalBase::dyn__mappings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalBase::dyn__mappings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mappings"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::BidirectionalDictionary_2<::StringW, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly Newtonsoft.Json.JsonSerializer Serializer
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonSerializer*& Newtonsoft::Json::Serialization::JsonSerializerInternalBase::dyn_Serializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalBase::dyn_Serializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Serializer"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonSerializer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly Newtonsoft.Json.Serialization.ITraceWriter TraceWriter
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ITraceWriter*& Newtonsoft::Json::Serialization::JsonSerializerInternalBase::dyn_TraceWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalBase::dyn_TraceWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TraceWriter"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ITraceWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Newtonsoft.Json.Serialization.JsonSerializerProxy InternalSerializer
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonSerializerProxy*& Newtonsoft::Json::Serialization::JsonSerializerInternalBase::dyn_InternalSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalBase::dyn_InternalSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InternalSerializer"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonSerializerProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalBase.get_DefaultReferenceMappings
::Newtonsoft::Json::Utilities::BidirectionalDictionary_2<::StringW, ::Il2CppObject*>* Newtonsoft::Json::Serialization::JsonSerializerInternalBase::get_DefaultReferenceMappings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalBase::get_DefaultReferenceMappings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultReferenceMappings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::BidirectionalDictionary_2<::StringW, ::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ResolvedNullValueHandling
::Newtonsoft::Json::NullValueHandling Newtonsoft::Json::Serialization::JsonSerializerInternalBase::ResolvedNullValueHandling(::Newtonsoft::Json::Serialization::JsonObjectContract* containerContract, ::Newtonsoft::Json::Serialization::JsonProperty* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalBase::ResolvedNullValueHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolvedNullValueHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(containerContract), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::NullValueHandling, false>(this, ___internal__method, containerContract, property);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalBase.GetErrorContext
::Newtonsoft::Json::Serialization::ErrorContext* Newtonsoft::Json::Serialization::JsonSerializerInternalBase::GetErrorContext(::Il2CppObject* currentObject, ::Il2CppObject* member, ::StringW path, ::System::Exception* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalBase::GetErrorContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetErrorContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentObject), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ErrorContext*, false>(this, ___internal__method, currentObject, member, path, error);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext
void Newtonsoft::Json::Serialization::JsonSerializerInternalBase::ClearErrorContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalBase::ClearErrorContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearErrorContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled
bool Newtonsoft::Json::Serialization::JsonSerializerInternalBase::IsErrorHandled(::Il2CppObject* currentObject, ::Newtonsoft::Json::Serialization::JsonContract* contract, ::Il2CppObject* keyValue, ::Newtonsoft::Json::IJsonLineInfo* lineInfo, ::StringW path, ::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalBase::IsErrorHandled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsErrorHandled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentObject), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(keyValue), ::il2cpp_utils::ExtractType(lineInfo), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(ex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, currentObject, contract, keyValue, lineInfo, path, ex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerInternalBase/Newtonsoft.Json.Serialization.ReferenceEqualsEqualityComparer
#include "Newtonsoft/Json/Serialization/JsonSerializerInternalBase_ReferenceEqualsEqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalBase/Newtonsoft.Json.Serialization.ReferenceEqualsEqualityComparer.System.Collections.Generic.IEqualityComparer<System.Object>.Equals
bool Newtonsoft::Json::Serialization::JsonSerializerInternalBase::ReferenceEqualsEqualityComparer::System_Collections_Generic_IEqualityComparer$System_Object$_Equals(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalBase::ReferenceEqualsEqualityComparer::System.Collections.Generic.IEqualityComparer<System.Object>.Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::JsonSerializerInternalBase::ReferenceEqualsEqualityComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalBase/Newtonsoft.Json.Serialization.ReferenceEqualsEqualityComparer.System.Collections.Generic.IEqualityComparer<System.Object>.GetHashCode
int Newtonsoft::Json::Serialization::JsonSerializerInternalBase::ReferenceEqualsEqualityComparer::System_Collections_Generic_IEqualityComparer$System_Object$_GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalBase::ReferenceEqualsEqualityComparer::System.Collections.Generic.IEqualityComparer<System.Object>.GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::JsonSerializerInternalBase::ReferenceEqualsEqualityComparer*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerInternalReader
#include "Newtonsoft/Json/Serialization/JsonSerializerInternalReader.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.CreatorPropertyContext
#include "Newtonsoft/Json/Serialization/JsonSerializerInternalReader_CreatorPropertyContext.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.<>c__DisplayClass38_0
#include "Newtonsoft/Json/Serialization/JsonSerializerInternalReader_--c__DisplayClass38_0.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.<>c
#include "Newtonsoft/Json/Serialization/JsonSerializerInternalReader_--c.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonContract
#include "Newtonsoft/Json/Serialization/JsonContract.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerProxy
#include "Newtonsoft/Json/Serialization/JsonSerializerProxy.hpp"
// Including type: Newtonsoft.Json.Linq.JToken
#include "Newtonsoft/Json/Linq/JToken.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonProperty
#include "Newtonsoft/Json/Serialization/JsonProperty.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonContainerContract
#include "Newtonsoft/Json/Serialization/JsonContainerContract.hpp"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
// Including type: Newtonsoft.Json.Linq.JTokenReader
#include "Newtonsoft/Json/Linq/JTokenReader.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonArrayContract
#include "Newtonsoft/Json/Serialization/JsonArrayContract.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: Newtonsoft.Json.DefaultValueHandling
#include "Newtonsoft/Json/DefaultValueHandling.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonObjectContract
#include "Newtonsoft/Json/Serialization/JsonObjectContract.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonDictionaryContract
#include "Newtonsoft/Json/Serialization/JsonDictionaryContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonISerializableContract
#include "Newtonsoft/Json/Serialization/JsonISerializableContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonDynamicContract
#include "Newtonsoft/Json/Serialization/JsonDynamicContract.hpp"
// Including type: Newtonsoft.Json.Serialization.ObjectConstructor`1
#include "Newtonsoft/Json/Serialization/ObjectConstructor_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe
::Newtonsoft::Json::Serialization::JsonContract* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::GetContractSafe(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::GetContractSafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContractSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonContract*, false>(this, ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContract
::Newtonsoft::Json::Serialization::JsonContract* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::GetContract(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::GetContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonContract*, false>(this, ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize
::Il2CppObject* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::Deserialize(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, bool checkAdditionalContent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(checkAdditionalContent)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, checkAdditionalContent);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer
::Newtonsoft::Json::Serialization::JsonSerializerProxy* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::GetInternalSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::GetInternalSerializer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInternalSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonSerializerProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateJToken(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Serialization::JsonContract* contract) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateJToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateJToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(contract)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method, reader, contract);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateJObject(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateJObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateJObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal
::Il2CppObject* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateValueInternal(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Newtonsoft::Json::Serialization::JsonContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Newtonsoft::Json::Serialization::JsonContainerContract* containerContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerMember, ::Il2CppObject* existingValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateValueInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(containerContract), ::il2cpp_utils::ExtractType(containerMember), ::il2cpp_utils::ExtractType(existingValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, contract, member, containerContract, containerMember, existingValue);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull
bool Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CoerceEmptyStringToNull(::System::Type* objectType, ::Newtonsoft::Json::Serialization::JsonContract* contract, ::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CoerceEmptyStringToNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonSerializerInternalReader", "CoerceEmptyStringToNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectType, contract, s);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription
::StringW Newtonsoft::Json::Serialization::JsonSerializerInternalReader::GetExpectedDescription(::Newtonsoft::Json::Serialization::JsonContract* contract) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::GetExpectedDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExpectedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contract)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, contract);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter
::Newtonsoft::Json::JsonConverter* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::GetConverter(::Newtonsoft::Json::Serialization::JsonContract* contract, ::Newtonsoft::Json::JsonConverter* memberConverter, ::Newtonsoft::Json::Serialization::JsonContainerContract* containerContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::GetConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(memberConverter), ::il2cpp_utils::ExtractType(containerContract), ::il2cpp_utils::ExtractType(containerProperty)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonConverter*, false>(this, ___internal__method, contract, memberConverter, containerContract, containerProperty);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject
::Il2CppObject* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateObject(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Newtonsoft::Json::Serialization::JsonContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Newtonsoft::Json::Serialization::JsonContainerContract* containerContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerMember, ::Il2CppObject* existingValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(containerContract), ::il2cpp_utils::ExtractType(containerMember), ::il2cpp_utils::ExtractType(existingValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, contract, member, containerContract, containerMember, existingValue);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken
bool Newtonsoft::Json::Serialization::JsonSerializerInternalReader::ReadMetadataPropertiesToken(::Newtonsoft::Json::Linq::JTokenReader* reader, ByRef<::System::Type*> objectType, ByRef<::Newtonsoft::Json::Serialization::JsonContract*> contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Newtonsoft::Json::Serialization::JsonContainerContract* containerContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerMember, ::Il2CppObject* existingValue, ByRef<::Il2CppObject*> newValue, ByRef<::StringW> id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::ReadMetadataPropertiesToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadMetadataPropertiesToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(containerContract), ::il2cpp_utils::ExtractType(containerMember), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reader, byref(objectType), byref(contract), member, containerContract, containerMember, existingValue, byref(newValue), byref(id));
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties
bool Newtonsoft::Json::Serialization::JsonSerializerInternalReader::ReadMetadataProperties(::Newtonsoft::Json::JsonReader* reader, ByRef<::System::Type*> objectType, ByRef<::Newtonsoft::Json::Serialization::JsonContract*> contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Newtonsoft::Json::Serialization::JsonContainerContract* containerContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerMember, ::Il2CppObject* existingValue, ByRef<::Il2CppObject*> newValue, ByRef<::StringW> id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::ReadMetadataProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadMetadataProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(containerContract), ::il2cpp_utils::ExtractType(containerMember), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reader, byref(objectType), byref(contract), member, containerContract, containerMember, existingValue, byref(newValue), byref(id));
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName
void Newtonsoft::Json::Serialization::JsonSerializerInternalReader::ResolveTypeName(::Newtonsoft::Json::JsonReader* reader, ByRef<::System::Type*> objectType, ByRef<::Newtonsoft::Json::Serialization::JsonContract*> contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Newtonsoft::Json::Serialization::JsonContainerContract* containerContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerMember, ::StringW qualifiedTypeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::ResolveTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(containerContract), ::il2cpp_utils::ExtractType(containerMember), ::il2cpp_utils::ExtractType(qualifiedTypeName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, byref(objectType), byref(contract), member, containerContract, containerMember, qualifiedTypeName);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract
::Newtonsoft::Json::Serialization::JsonArrayContract* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::EnsureArrayContract(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Newtonsoft::Json::Serialization::JsonContract* contract) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::EnsureArrayContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureArrayContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(contract)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonArrayContract*, false>(this, ___internal__method, reader, objectType, contract);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList
::Il2CppObject* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateList(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Newtonsoft::Json::Serialization::JsonContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Il2CppObject* existingValue, ::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, contract, member, existingValue, id);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType
bool Newtonsoft::Json::Serialization::JsonSerializerInternalReader::HasNoDefinedType(::Newtonsoft::Json::Serialization::JsonContract* contract) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::HasNoDefinedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasNoDefinedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contract)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, contract);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType
::Il2CppObject* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::EnsureType(::Newtonsoft::Json::JsonReader* reader, ::Il2CppObject* value, ::System::Globalization::CultureInfo* culture, ::Newtonsoft::Json::Serialization::JsonContract* contract, ::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::EnsureType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, value, culture, contract, targetType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue
bool Newtonsoft::Json::Serialization::JsonSerializerInternalReader::SetPropertyValue(::Newtonsoft::Json::Serialization::JsonProperty* property, ::Newtonsoft::Json::JsonConverter* propertyConverter, ::Newtonsoft::Json::Serialization::JsonContainerContract* containerContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty, ::Newtonsoft::Json::JsonReader* reader, ::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::SetPropertyValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPropertyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(propertyConverter), ::il2cpp_utils::ExtractType(containerContract), ::il2cpp_utils::ExtractType(containerProperty), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property, propertyConverter, containerContract, containerProperty, reader, target);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails
bool Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CalculatePropertyDetails(::Newtonsoft::Json::Serialization::JsonProperty* property, ByRef<::Newtonsoft::Json::JsonConverter*> propertyConverter, ::Newtonsoft::Json::Serialization::JsonContainerContract* containerContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty, ::Newtonsoft::Json::JsonReader* reader, ::Il2CppObject* target, ByRef<bool> useExistingValue, ByRef<::Il2CppObject*> currentValue, ByRef<::Newtonsoft::Json::Serialization::JsonContract*> propertyContract, ByRef<bool> gottenCurrentValue, ByRef<bool> ignoredValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CalculatePropertyDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculatePropertyDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(propertyConverter), ::il2cpp_utils::ExtractType(containerContract), ::il2cpp_utils::ExtractType(containerProperty), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>(), ::il2cpp_utils::ExtractIndependentType<::Newtonsoft::Json::Serialization::JsonContract*&>(), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property, byref(propertyConverter), containerContract, containerProperty, reader, target, byref(useExistingValue), byref(currentValue), byref(propertyContract), byref(gottenCurrentValue), byref(ignoredValue));
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference
void Newtonsoft::Json::Serialization::JsonSerializerInternalReader::AddReference(::Newtonsoft::Json::JsonReader* reader, ::StringW id, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::AddReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, id, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag
bool Newtonsoft::Json::Serialization::JsonSerializerInternalReader::HasFlag(::Newtonsoft::Json::DefaultValueHandling value, ::Newtonsoft::Json::DefaultValueHandling flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::HasFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, flag);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue
bool Newtonsoft::Json::Serialization::JsonSerializerInternalReader::ShouldSetPropertyValue(::Newtonsoft::Json::Serialization::JsonProperty* property, ::Newtonsoft::Json::Serialization::JsonObjectContract* contract, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::ShouldSetPropertyValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldSetPropertyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property, contract, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList
::System::Collections::IList* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateNewList(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Serialization::JsonArrayContract* contract, ByRef<bool> createdFromNonDefaultCreator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateNewList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNewList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method, reader, contract, byref(createdFromNonDefaultCreator));
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary
::System::Collections::IDictionary* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateNewDictionary(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Serialization::JsonDictionaryContract* contract, ByRef<bool> createdFromNonDefaultCreator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateNewDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNewDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionary*, false>(this, ___internal__method, reader, contract, byref(createdFromNonDefaultCreator));
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing
void Newtonsoft::Json::Serialization::JsonSerializerInternalReader::OnDeserializing(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Serialization::JsonContract* contract, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::OnDeserializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, contract, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized
void Newtonsoft::Json::Serialization::JsonSerializerInternalReader::OnDeserialized(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Serialization::JsonContract* contract, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, contract, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary
::Il2CppObject* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PopulateDictionary(::System::Collections::IDictionary* dictionary, ::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Serialization::JsonDictionaryContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty, ::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PopulateDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionary), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(containerProperty), ::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, dictionary, reader, contract, containerProperty, id);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray
::Il2CppObject* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PopulateMultidimensionalArray(::System::Collections::IList* list, ::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Serialization::JsonArrayContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty, ::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PopulateMultidimensionalArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateMultidimensionalArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(containerProperty), ::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, list, reader, contract, containerProperty, id);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException
void Newtonsoft::Json::Serialization::JsonSerializerInternalReader::ThrowUnexpectedEndException(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Serialization::JsonContract* contract, ::Il2CppObject* currentObject, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::ThrowUnexpectedEndException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowUnexpectedEndException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(currentObject), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, contract, currentObject, message);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList
::Il2CppObject* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PopulateList(::System::Collections::IList* list, ::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Serialization::JsonArrayContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty, ::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PopulateList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(containerProperty), ::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, list, reader, contract, containerProperty, id);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable
::Il2CppObject* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateISerializable(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Serialization::JsonISerializableContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateISerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateISerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, contract, member, id);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem
::Il2CppObject* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateISerializableItem(::Newtonsoft::Json::Linq::JToken* token, ::System::Type* type, ::Newtonsoft::Json::Serialization::JsonISerializableContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateISerializableItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateISerializableItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, token, type, contract, member);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic
::Il2CppObject* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateDynamic(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Serialization::JsonDynamicContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateDynamic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDynamic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, contract, member, id);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters
::Il2CppObject* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateObjectUsingCreatorWithParameters(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Serialization::JsonObjectContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty, ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* creator, ::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateObjectUsingCreatorWithParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateObjectUsingCreatorWithParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(containerProperty), ::il2cpp_utils::ExtractType(creator), ::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, contract, containerProperty, creator, id);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable
::Il2CppObject* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::DeserializeConvertable(::Newtonsoft::Json::JsonConverter* converter, ::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::DeserializeConvertable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeConvertable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(converter), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, converter, reader, objectType, existingValue);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues
::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreatorPropertyContext*>* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::ResolvePropertyAndCreatorValues(::Newtonsoft::Json::Serialization::JsonObjectContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty, ::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::ResolvePropertyAndCreatorValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolvePropertyAndCreatorValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(containerProperty), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreatorPropertyContext*>*, false>(this, ___internal__method, contract, containerProperty, reader, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject
::Il2CppObject* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateNewObject(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Serialization::JsonObjectContract* objectContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerMember, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty, ::StringW id, ByRef<bool> createdFromNonDefaultCreator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreateNewObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNewObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectContract), ::il2cpp_utils::ExtractType(containerMember), ::il2cpp_utils::ExtractType(containerProperty), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectContract, containerMember, containerProperty, id, byref(createdFromNonDefaultCreator));
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject
::Il2CppObject* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PopulateObject(::Il2CppObject* newObject, ::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Serialization::JsonObjectContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PopulateObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newObject), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, newObject, reader, contract, member, id);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize
bool Newtonsoft::Json::Serialization::JsonSerializerInternalReader::ShouldDeserialize(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Serialization::JsonProperty* property, ::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::ShouldDeserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reader, property, target);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName
bool Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CheckPropertyName(::Newtonsoft::Json::JsonReader* reader, ::StringW memberName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CheckPropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckPropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(memberName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reader, memberName);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData
void Newtonsoft::Json::Serialization::JsonSerializerInternalReader::SetExtensionData(::Newtonsoft::Json::Serialization::JsonObjectContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Newtonsoft::Json::JsonReader* reader, ::StringW memberName, ::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::SetExtensionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExtensionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(memberName), ::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, contract, member, reader, memberName, o);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue
::Il2CppObject* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::ReadExtensionDataValue(::Newtonsoft::Json::Serialization::JsonObjectContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::ReadExtensionDataValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadExtensionDataValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, contract, member, reader);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty
void Newtonsoft::Json::Serialization::JsonSerializerInternalReader::EndProcessProperty(::Il2CppObject* newObject, ::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Serialization::JsonObjectContract* contract, int initialDepth, ::Newtonsoft::Json::Serialization::JsonProperty* property, ::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence presence, bool setDefaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::EndProcessProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndProcessProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newObject), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(initialDepth), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(presence), ::il2cpp_utils::ExtractType(setDefaultValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newObject, reader, contract, initialDepth, property, presence, setDefaultValue);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence
void Newtonsoft::Json::Serialization::JsonSerializerInternalReader::SetPropertyPresence(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Serialization::JsonProperty* property, ::System::Collections::Generic::Dictionary_2<::Newtonsoft::Json::Serialization::JsonProperty*, ::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence>* requiredProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::SetPropertyPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPropertyPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(requiredProperties)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, property, requiredProperties);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError
void Newtonsoft::Json::Serialization::JsonSerializerInternalReader::HandleError(::Newtonsoft::Json::JsonReader* reader, bool readPastError, int initialDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::HandleError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(readPastError), ::il2cpp_utils::ExtractType(initialDepth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, readPastError, initialDepth);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.PropertyPresence
#include "Newtonsoft/Json/Serialization/JsonSerializerInternalReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.PropertyPresence None
::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence>("Newtonsoft.Json.Serialization", "JsonSerializerInternalReader/PropertyPresence", "None"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.PropertyPresence None
void Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence::_set_None(::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonSerializerInternalReader/PropertyPresence", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.PropertyPresence Null
::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence>("Newtonsoft.Json.Serialization", "JsonSerializerInternalReader/PropertyPresence", "Null"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.PropertyPresence Null
void Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence::_set_Null(::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonSerializerInternalReader/PropertyPresence", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.PropertyPresence Value
::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence::_get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence::_get_Value");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence>("Newtonsoft.Json.Serialization", "JsonSerializerInternalReader/PropertyPresence", "Value"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.PropertyPresence Value
void Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence::_set_Value(::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence::_set_Value");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonSerializerInternalReader/PropertyPresence", "Value", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.CreatorPropertyContext
#include "Newtonsoft/Json/Serialization/JsonSerializerInternalReader_CreatorPropertyContext.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonProperty
#include "Newtonsoft/Json/Serialization/JsonProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreatorPropertyContext::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreatorPropertyContext::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Serialization.JsonProperty Property
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonProperty*& Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreatorPropertyContext::dyn_Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreatorPropertyContext::dyn_Property");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Property"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Serialization.JsonProperty ConstructorProperty
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonProperty*& Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreatorPropertyContext::dyn_ConstructorProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreatorPropertyContext::dyn_ConstructorProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConstructorProperty"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.PropertyPresence> Presence
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence>& Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreatorPropertyContext::dyn_Presence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreatorPropertyContext::dyn_Presence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Presence"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object Value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreatorPropertyContext::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreatorPropertyContext::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Used
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreatorPropertyContext::dyn_Used() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreatorPropertyContext::dyn_Used");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Used"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.<>c__DisplayClass38_0
#include "Newtonsoft/Json/Serialization/JsonSerializerInternalReader_--c__DisplayClass38_0.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonProperty
#include "Newtonsoft/Json/Serialization/JsonProperty.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.CreatorPropertyContext
#include "Newtonsoft/Json/Serialization/JsonSerializerInternalReader_CreatorPropertyContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Serialization.JsonProperty property
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonProperty*& Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c__DisplayClass38_0::dyn_property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c__DisplayClass38_0::dyn_property");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "property"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.<>c__DisplayClass38_0.<CreateObjectUsingCreatorWithParameters>b__1
bool Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c__DisplayClass38_0::$CreateObjectUsingCreatorWithParameters$b__1(::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreatorPropertyContext* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c__DisplayClass38_0::<CreateObjectUsingCreatorWithParameters>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateObjectUsingCreatorWithParameters>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.<>c
#include "Newtonsoft/Json/Serialization/JsonSerializerInternalReader_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonProperty
#include "Newtonsoft/Json/Serialization/JsonProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [NullableAttribute] Offset: 0x67757C
// Autogenerated static field getter
// Get static field: static public readonly Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.<>c <>9
::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c*>("Newtonsoft.Json.Serialization", "JsonSerializerInternalReader/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.<>c <>9
void Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_set_$$9(::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonSerializerInternalReader/<>c", "<>9", value)));
}
// [NullableAttribute] Offset: 0x677590
// Autogenerated static field getter
// Get static field: static public System.Func`2<Newtonsoft.Json.Serialization.JsonProperty,System.String> <>9__38_0
::System::Func_2<::Newtonsoft::Json::Serialization::JsonProperty*, ::StringW>* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_get_$$9__38_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_get_$$9__38_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Newtonsoft::Json::Serialization::JsonProperty*, ::StringW>*>("Newtonsoft.Json.Serialization", "JsonSerializerInternalReader/<>c", "<>9__38_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Newtonsoft.Json.Serialization.JsonProperty,System.String> <>9__38_0
void Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_set_$$9__38_0(::System::Func_2<::Newtonsoft::Json::Serialization::JsonProperty*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_set_$$9__38_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonSerializerInternalReader/<>c", "<>9__38_0", value)));
}
// [NullableAttribute] Offset: 0x6775A4
// Autogenerated static field getter
// Get static field: static public System.Func`2<Newtonsoft.Json.Serialization.JsonProperty,System.String> <>9__38_2
::System::Func_2<::Newtonsoft::Json::Serialization::JsonProperty*, ::StringW>* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_get_$$9__38_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_get_$$9__38_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Newtonsoft::Json::Serialization::JsonProperty*, ::StringW>*>("Newtonsoft.Json.Serialization", "JsonSerializerInternalReader/<>c", "<>9__38_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Newtonsoft.Json.Serialization.JsonProperty,System.String> <>9__38_2
void Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_set_$$9__38_2(::System::Func_2<::Newtonsoft::Json::Serialization::JsonProperty*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_set_$$9__38_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonSerializerInternalReader/<>c", "<>9__38_2", value)));
}
// [NullableAttribute] Offset: 0x677610
// Autogenerated static field getter
// Get static field: static public System.Func`2<Newtonsoft.Json.Serialization.JsonProperty,Newtonsoft.Json.Serialization.JsonProperty> <>9__42_0
::System::Func_2<::Newtonsoft::Json::Serialization::JsonProperty*, ::Newtonsoft::Json::Serialization::JsonProperty*>* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_get_$$9__42_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_get_$$9__42_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Newtonsoft::Json::Serialization::JsonProperty*, ::Newtonsoft::Json::Serialization::JsonProperty*>*>("Newtonsoft.Json.Serialization", "JsonSerializerInternalReader/<>c", "<>9__42_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Newtonsoft.Json.Serialization.JsonProperty,Newtonsoft.Json.Serialization.JsonProperty> <>9__42_0
void Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_set_$$9__42_0(::System::Func_2<::Newtonsoft::Json::Serialization::JsonProperty*, ::Newtonsoft::Json::Serialization::JsonProperty*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_set_$$9__42_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonSerializerInternalReader/<>c", "<>9__42_0", value)));
}
// [NullableAttribute] Offset: 0x677624
// Autogenerated static field getter
// Get static field: static public System.Func`2<Newtonsoft.Json.Serialization.JsonProperty,Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.PropertyPresence> <>9__42_1
::System::Func_2<::Newtonsoft::Json::Serialization::JsonProperty*, ::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence>* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_get_$$9__42_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_get_$$9__42_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Newtonsoft::Json::Serialization::JsonProperty*, ::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence>*>("Newtonsoft.Json.Serialization", "JsonSerializerInternalReader/<>c", "<>9__42_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Newtonsoft.Json.Serialization.JsonProperty,Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.PropertyPresence> <>9__42_1
void Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_set_$$9__42_1(::System::Func_2<::Newtonsoft::Json::Serialization::JsonProperty*, ::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_set_$$9__42_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonSerializerInternalReader/<>c", "<>9__42_1", value)));
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.<>c..cctor
void Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonSerializerInternalReader/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.<>c.<CreateObjectUsingCreatorWithParameters>b__38_0
::StringW Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::$CreateObjectUsingCreatorWithParameters$b__38_0(::Newtonsoft::Json::Serialization::JsonProperty* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::<CreateObjectUsingCreatorWithParameters>b__38_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateObjectUsingCreatorWithParameters>b__38_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, p);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.<>c.<CreateObjectUsingCreatorWithParameters>b__38_2
::StringW Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::$CreateObjectUsingCreatorWithParameters$b__38_2(::Newtonsoft::Json::Serialization::JsonProperty* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::<CreateObjectUsingCreatorWithParameters>b__38_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateObjectUsingCreatorWithParameters>b__38_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, p);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.<>c.<PopulateObject>b__42_0
::Newtonsoft::Json::Serialization::JsonProperty* Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::$PopulateObject$b__42_0(::Newtonsoft::Json::Serialization::JsonProperty* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::<PopulateObject>b__42_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PopulateObject>b__42_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonProperty*, false>(this, ___internal__method, m);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.<>c.<PopulateObject>b__42_1
::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::$PopulateObject$b__42_1(::Newtonsoft::Json::Serialization::JsonProperty* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c::<PopulateObject>b__42_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PopulateObject>b__42_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::PropertyPresence, false>(this, ___internal__method, m);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter
#include "Newtonsoft/Json/Serialization/JsonSerializerInternalWriter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerProxy
#include "Newtonsoft/Json/Serialization/JsonSerializerProxy.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonContract
#include "Newtonsoft/Json/Serialization/JsonContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonPrimitiveContract
#include "Newtonsoft/Json/Serialization/JsonPrimitiveContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonProperty
#include "Newtonsoft/Json/Serialization/JsonProperty.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonContainerContract
#include "Newtonsoft/Json/Serialization/JsonContainerContract.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonObjectContract
#include "Newtonsoft/Json/Serialization/JsonObjectContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonStringContract
#include "Newtonsoft/Json/Serialization/JsonStringContract.hpp"
// Including type: Newtonsoft.Json.DefaultValueHandling
#include "Newtonsoft/Json/DefaultValueHandling.hpp"
// Including type: Newtonsoft.Json.PreserveReferencesHandling
#include "Newtonsoft/Json/PreserveReferencesHandling.hpp"
// Including type: Newtonsoft.Json.TypeNameHandling
#include "Newtonsoft/Json/TypeNameHandling.hpp"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonArrayContract
#include "Newtonsoft/Json/Serialization/JsonArrayContract.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Runtime.Serialization.ISerializable
#include "System/Runtime/Serialization/ISerializable.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonISerializableContract
#include "Newtonsoft/Json/Serialization/JsonISerializableContract.hpp"
// Including type: System.Dynamic.IDynamicMetaObjectProvider
#include "System/Dynamic/IDynamicMetaObjectProvider.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonDynamicContract
#include "Newtonsoft/Json/Serialization/JsonDynamicContract.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonDictionaryContract
#include "Newtonsoft/Json/Serialization/JsonDictionaryContract.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type _rootType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::dyn__rootType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::dyn__rootType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _rootLevel
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::dyn__rootLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::dyn__rootLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Object> _serializeStack
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::dyn__serializeStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::dyn__serializeStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serializeStack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize
void Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::Serialize(::Newtonsoft::Json::JsonWriter* jsonWriter, ::Il2CppObject* value, ::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonWriter), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(objectType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jsonWriter, value, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer
::Newtonsoft::Json::Serialization::JsonSerializerProxy* Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::GetInternalSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::GetInternalSerializer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInternalSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonSerializerProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe
::Newtonsoft::Json::Serialization::JsonContract* Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::GetContractSafe(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::GetContractSafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContractSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonContract*, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContract
::Newtonsoft::Json::Serialization::JsonContract* Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::GetContract(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::GetContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonContract*, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive
void Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializePrimitive(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::Serialization::JsonPrimitiveContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Newtonsoft::Json::Serialization::JsonContainerContract* containerContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializePrimitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializePrimitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(containerContract), ::il2cpp_utils::ExtractType(containerProperty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, contract, member, containerContract, containerProperty);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue
void Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeValue(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::Serialization::JsonContract* valueContract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Newtonsoft::Json::Serialization::JsonContainerContract* containerContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(valueContract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(containerContract), ::il2cpp_utils::ExtractType(containerProperty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, valueContract, member, containerContract, containerProperty);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference
::System::Nullable_1<bool> Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::ResolveIsReference(::Newtonsoft::Json::Serialization::JsonContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* property, ::Newtonsoft::Json::Serialization::JsonContainerContract* collectionContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::ResolveIsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveIsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(collectionContract), ::il2cpp_utils::ExtractType(containerProperty)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method, contract, property, collectionContract, containerProperty);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference
bool Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::ShouldWriteReference(::Il2CppObject* value, ::Newtonsoft::Json::Serialization::JsonProperty* property, ::Newtonsoft::Json::Serialization::JsonContract* valueContract, ::Newtonsoft::Json::Serialization::JsonContainerContract* collectionContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::ShouldWriteReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldWriteReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(valueContract), ::il2cpp_utils::ExtractType(collectionContract), ::il2cpp_utils::ExtractType(containerProperty)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, property, valueContract, collectionContract, containerProperty);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty
bool Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::ShouldWriteProperty(::Il2CppObject* memberValue, ::Newtonsoft::Json::Serialization::JsonObjectContract* containerContract, ::Newtonsoft::Json::Serialization::JsonProperty* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::ShouldWriteProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldWriteProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberValue), ::il2cpp_utils::ExtractType(containerContract), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, memberValue, containerContract, property);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference
bool Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::CheckForCircularReference(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::Serialization::JsonProperty* property, ::Newtonsoft::Json::Serialization::JsonContract* contract, ::Newtonsoft::Json::Serialization::JsonContainerContract* containerContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::CheckForCircularReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForCircularReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(containerContract), ::il2cpp_utils::ExtractType(containerProperty)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, writer, value, property, contract, containerContract, containerProperty);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference
void Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::WriteReference(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::WriteReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference
::StringW Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::GetReference(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::GetReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, writer, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString
bool Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::TryConvertToString(::Il2CppObject* value, ::System::Type* type, ByRef<::StringW> s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::TryConvertToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonSerializerInternalWriter", "TryConvertToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, type, byref(s));
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString
void Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeString(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::Serialization::JsonStringContract* contract) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(contract)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, contract);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing
void Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::OnSerializing(::Newtonsoft::Json::JsonWriter* writer, ::Newtonsoft::Json::Serialization::JsonContract* contract, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::OnSerializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSerializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, contract, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized
void Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::OnSerialized(::Newtonsoft::Json::JsonWriter* writer, ::Newtonsoft::Json::Serialization::JsonContract* contract, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::OnSerialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSerialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, contract, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject
void Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeObject(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::Serialization::JsonObjectContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Newtonsoft::Json::Serialization::JsonContainerContract* collectionContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(collectionContract), ::il2cpp_utils::ExtractType(containerProperty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, contract, member, collectionContract, containerProperty);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues
bool Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::CalculatePropertyValues(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::Serialization::JsonContainerContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Newtonsoft::Json::Serialization::JsonProperty* property, ByRef<::Newtonsoft::Json::Serialization::JsonContract*> memberContract, ByRef<::Il2CppObject*> memberValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::CalculatePropertyValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculatePropertyValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractIndependentType<::Newtonsoft::Json::Serialization::JsonContract*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, writer, value, contract, member, property, byref(memberContract), byref(memberValue));
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart
void Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::WriteObjectStart(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::Serialization::JsonContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Newtonsoft::Json::Serialization::JsonContainerContract* collectionContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::WriteObjectStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteObjectStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(collectionContract), ::il2cpp_utils::ExtractType(containerProperty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, contract, member, collectionContract, containerProperty);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter
bool Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::HasCreatorParameter(::Newtonsoft::Json::Serialization::JsonContainerContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::HasCreatorParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasCreatorParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, contract, property);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty
void Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::WriteReferenceIdProperty(::Newtonsoft::Json::JsonWriter* writer, ::System::Type* type, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::WriteReferenceIdProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteReferenceIdProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, type, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty
void Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::WriteTypeProperty(::Newtonsoft::Json::JsonWriter* writer, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::WriteTypeProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteTypeProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag
bool Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::HasFlag(::Newtonsoft::Json::DefaultValueHandling value, ::Newtonsoft::Json::DefaultValueHandling flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::HasFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, flag);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag
bool Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::HasFlag(::Newtonsoft::Json::PreserveReferencesHandling value, ::Newtonsoft::Json::PreserveReferencesHandling flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::HasFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, flag);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag
bool Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::HasFlag(::Newtonsoft::Json::TypeNameHandling value, ::Newtonsoft::Json::TypeNameHandling flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::HasFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, flag);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable
void Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeConvertable(::Newtonsoft::Json::JsonWriter* writer, ::Newtonsoft::Json::JsonConverter* converter, ::Il2CppObject* value, ::Newtonsoft::Json::Serialization::JsonContract* contract, ::Newtonsoft::Json::Serialization::JsonContainerContract* collectionContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeConvertable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeConvertable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(converter), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(collectionContract), ::il2cpp_utils::ExtractType(containerProperty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, converter, value, contract, collectionContract, containerProperty);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList
void Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeList(::Newtonsoft::Json::JsonWriter* writer, ::System::Collections::IEnumerable* values, ::Newtonsoft::Json::Serialization::JsonArrayContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Newtonsoft::Json::Serialization::JsonContainerContract* collectionContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(collectionContract), ::il2cpp_utils::ExtractType(containerProperty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, values, contract, member, collectionContract, containerProperty);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray
void Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeMultidimensionalArray(::Newtonsoft::Json::JsonWriter* writer, ::System::Array* values, ::Newtonsoft::Json::Serialization::JsonArrayContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Newtonsoft::Json::Serialization::JsonContainerContract* collectionContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeMultidimensionalArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeMultidimensionalArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(collectionContract), ::il2cpp_utils::ExtractType(containerProperty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, values, contract, member, collectionContract, containerProperty);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray
void Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeMultidimensionalArray(::Newtonsoft::Json::JsonWriter* writer, ::System::Array* values, ::Newtonsoft::Json::Serialization::JsonArrayContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, int initialDepth, ::ArrayW<int> indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeMultidimensionalArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeMultidimensionalArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(initialDepth), ::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, values, contract, member, initialDepth, indices);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray
bool Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::WriteStartArray(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* values, ::Newtonsoft::Json::Serialization::JsonArrayContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Newtonsoft::Json::Serialization::JsonContainerContract* containerContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::WriteStartArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(containerContract), ::il2cpp_utils::ExtractType(containerProperty)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, writer, values, contract, member, containerContract, containerProperty);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable
void Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeISerializable(::Newtonsoft::Json::JsonWriter* writer, ::System::Runtime::Serialization::ISerializable* value, ::Newtonsoft::Json::Serialization::JsonISerializableContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Newtonsoft::Json::Serialization::JsonContainerContract* collectionContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeISerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeISerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(collectionContract), ::il2cpp_utils::ExtractType(containerProperty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, contract, member, collectionContract, containerProperty);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic
void Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeDynamic(::Newtonsoft::Json::JsonWriter* writer, ::System::Dynamic::IDynamicMetaObjectProvider* value, ::Newtonsoft::Json::Serialization::JsonDynamicContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Newtonsoft::Json::Serialization::JsonContainerContract* collectionContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeDynamic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeDynamic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(collectionContract), ::il2cpp_utils::ExtractType(containerProperty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, contract, member, collectionContract, containerProperty);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty
bool Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::ShouldWriteDynamicProperty(::Il2CppObject* memberValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::ShouldWriteDynamicProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldWriteDynamicProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberValue)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, memberValue);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType
bool Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::ShouldWriteType(::Newtonsoft::Json::TypeNameHandling typeNameHandlingFlag, ::Newtonsoft::Json::Serialization::JsonContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Newtonsoft::Json::Serialization::JsonContainerContract* containerContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::ShouldWriteType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldWriteType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeNameHandlingFlag), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(containerContract), ::il2cpp_utils::ExtractType(containerProperty)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, typeNameHandlingFlag, contract, member, containerContract, containerProperty);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary
void Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeDictionary(::Newtonsoft::Json::JsonWriter* writer, ::System::Collections::IDictionary* values, ::Newtonsoft::Json::Serialization::JsonDictionaryContract* contract, ::Newtonsoft::Json::Serialization::JsonProperty* member, ::Newtonsoft::Json::Serialization::JsonContainerContract* collectionContract, ::Newtonsoft::Json::Serialization::JsonProperty* containerProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::SerializeDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(collectionContract), ::il2cpp_utils::ExtractType(containerProperty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, values, contract, member, collectionContract, containerProperty);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName
::StringW Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::GetPropertyName(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* name, ::Newtonsoft::Json::Serialization::JsonContract* contract, ByRef<bool> escape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::GetPropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, writer, name, contract, byref(escape));
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError
void Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::HandleError(::Newtonsoft::Json::JsonWriter* writer, int initialDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::HandleError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(initialDepth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, initialDepth);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize
bool Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::ShouldSerialize(::Newtonsoft::Json::JsonWriter* writer, ::Newtonsoft::Json::Serialization::JsonProperty* property, ::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::ShouldSerialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, writer, property, target);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified
bool Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::IsSpecified(::Newtonsoft::Json::JsonWriter* writer, ::Newtonsoft::Json::Serialization::JsonProperty* property, ::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter::IsSpecified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSpecified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, writer, property, target);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerProxy
#include "Newtonsoft/Json/Serialization/JsonSerializerProxy.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerInternalReader
#include "Newtonsoft/Json/Serialization/JsonSerializerInternalReader.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter
#include "Newtonsoft/Json/Serialization/JsonSerializerInternalWriter.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerInternalBase
#include "Newtonsoft/Json/Serialization/JsonSerializerInternalBase.hpp"
// Including type: Newtonsoft.Json.Serialization.IReferenceResolver
#include "Newtonsoft/Json/Serialization/IReferenceResolver.hpp"
// Including type: Newtonsoft.Json.Serialization.ITraceWriter
#include "Newtonsoft/Json/Serialization/ITraceWriter.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: Newtonsoft.Json.JsonConverterCollection
#include "Newtonsoft/Json/JsonConverterCollection.hpp"
// Including type: Newtonsoft.Json.DefaultValueHandling
#include "Newtonsoft/Json/DefaultValueHandling.hpp"
// Including type: Newtonsoft.Json.Serialization.IContractResolver
#include "Newtonsoft/Json/Serialization/IContractResolver.hpp"
// Including type: Newtonsoft.Json.MissingMemberHandling
#include "Newtonsoft/Json/MissingMemberHandling.hpp"
// Including type: Newtonsoft.Json.NullValueHandling
#include "Newtonsoft/Json/NullValueHandling.hpp"
// Including type: Newtonsoft.Json.ObjectCreationHandling
#include "Newtonsoft/Json/ObjectCreationHandling.hpp"
// Including type: Newtonsoft.Json.ReferenceLoopHandling
#include "Newtonsoft/Json/ReferenceLoopHandling.hpp"
// Including type: Newtonsoft.Json.PreserveReferencesHandling
#include "Newtonsoft/Json/PreserveReferencesHandling.hpp"
// Including type: Newtonsoft.Json.TypeNameHandling
#include "Newtonsoft/Json/TypeNameHandling.hpp"
// Including type: Newtonsoft.Json.MetadataPropertyHandling
#include "Newtonsoft/Json/MetadataPropertyHandling.hpp"
// Including type: Newtonsoft.Json.TypeNameAssemblyFormatHandling
#include "Newtonsoft/Json/TypeNameAssemblyFormatHandling.hpp"
// Including type: Newtonsoft.Json.ConstructorHandling
#include "Newtonsoft/Json/ConstructorHandling.hpp"
// Including type: Newtonsoft.Json.Serialization.ISerializationBinder
#include "Newtonsoft/Json/Serialization/ISerializationBinder.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: Newtonsoft.Json.Formatting
#include "Newtonsoft/Json/Formatting.hpp"
// Including type: System.EventHandler`1
#include "System/EventHandler_1.hpp"
// Including type: Newtonsoft.Json.Serialization.ErrorEventArgs
#include "Newtonsoft/Json/Serialization/ErrorEventArgs.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Serialization.JsonSerializerInternalReader _serializerReader
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonSerializerInternalReader*& Newtonsoft::Json::Serialization::JsonSerializerProxy::dyn__serializerReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::dyn__serializerReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serializerReader"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonSerializerInternalReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Serialization.JsonSerializerInternalWriter _serializerWriter
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter*& Newtonsoft::Json::Serialization::JsonSerializerProxy::dyn__serializerWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::dyn__serializerWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serializerWriter"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.JsonSerializer _serializer
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonSerializer*& Newtonsoft::Json::Serialization::JsonSerializerProxy::dyn__serializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::dyn__serializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serializer"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonSerializer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.GetInternalSerializer
::Newtonsoft::Json::Serialization::JsonSerializerInternalBase* Newtonsoft::Json::Serialization::JsonSerializerProxy::GetInternalSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::GetInternalSerializer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInternalSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonSerializerInternalBase*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.set_ReferenceResolver
void Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ReferenceResolver(::Newtonsoft::Json::Serialization::IReferenceResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ReferenceResolver");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.get_TraceWriter
::Newtonsoft::Json::Serialization::ITraceWriter* Newtonsoft::Json::Serialization::JsonSerializerProxy::get_TraceWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::get_TraceWriter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ITraceWriter*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.set_TraceWriter
void Newtonsoft::Json::Serialization::JsonSerializerProxy::set_TraceWriter(::Newtonsoft::Json::Serialization::ITraceWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::set_TraceWriter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.set_EqualityComparer
void Newtonsoft::Json::Serialization::JsonSerializerProxy::set_EqualityComparer(::System::Collections::IEqualityComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::set_EqualityComparer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.get_Converters
::Newtonsoft::Json::JsonConverterCollection* Newtonsoft::Json::Serialization::JsonSerializerProxy::get_Converters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::get_Converters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonConverterCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.set_DefaultValueHandling
void Newtonsoft::Json::Serialization::JsonSerializerProxy::set_DefaultValueHandling(::Newtonsoft::Json::DefaultValueHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::set_DefaultValueHandling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.get_ContractResolver
::Newtonsoft::Json::Serialization::IContractResolver* Newtonsoft::Json::Serialization::JsonSerializerProxy::get_ContractResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::get_ContractResolver");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::IContractResolver*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.set_ContractResolver
void Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ContractResolver(::Newtonsoft::Json::Serialization::IContractResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ContractResolver");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.set_MissingMemberHandling
void Newtonsoft::Json::Serialization::JsonSerializerProxy::set_MissingMemberHandling(::Newtonsoft::Json::MissingMemberHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::set_MissingMemberHandling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.get_NullValueHandling
::Newtonsoft::Json::NullValueHandling Newtonsoft::Json::Serialization::JsonSerializerProxy::get_NullValueHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::get_NullValueHandling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::NullValueHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.set_NullValueHandling
void Newtonsoft::Json::Serialization::JsonSerializerProxy::set_NullValueHandling(::Newtonsoft::Json::NullValueHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::set_NullValueHandling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.set_ObjectCreationHandling
void Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ObjectCreationHandling(::Newtonsoft::Json::ObjectCreationHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ObjectCreationHandling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.set_ReferenceLoopHandling
void Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ReferenceLoopHandling(::Newtonsoft::Json::ReferenceLoopHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ReferenceLoopHandling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.set_PreserveReferencesHandling
void Newtonsoft::Json::Serialization::JsonSerializerProxy::set_PreserveReferencesHandling(::Newtonsoft::Json::PreserveReferencesHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::set_PreserveReferencesHandling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.set_TypeNameHandling
void Newtonsoft::Json::Serialization::JsonSerializerProxy::set_TypeNameHandling(::Newtonsoft::Json::TypeNameHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::set_TypeNameHandling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.get_MetadataPropertyHandling
::Newtonsoft::Json::MetadataPropertyHandling Newtonsoft::Json::Serialization::JsonSerializerProxy::get_MetadataPropertyHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::get_MetadataPropertyHandling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::MetadataPropertyHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.set_MetadataPropertyHandling
void Newtonsoft::Json::Serialization::JsonSerializerProxy::set_MetadataPropertyHandling(::Newtonsoft::Json::MetadataPropertyHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::set_MetadataPropertyHandling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.set_TypeNameAssemblyFormatHandling
void Newtonsoft::Json::Serialization::JsonSerializerProxy::set_TypeNameAssemblyFormatHandling(::Newtonsoft::Json::TypeNameAssemblyFormatHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::set_TypeNameAssemblyFormatHandling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.set_ConstructorHandling
void Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ConstructorHandling(::Newtonsoft::Json::ConstructorHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ConstructorHandling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.set_SerializationBinder
void Newtonsoft::Json::Serialization::JsonSerializerProxy::set_SerializationBinder(::Newtonsoft::Json::Serialization::ISerializationBinder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::set_SerializationBinder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.get_Context
::System::Runtime::Serialization::StreamingContext Newtonsoft::Json::Serialization::JsonSerializerProxy::get_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::get_Context");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Serialization::StreamingContext, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.set_Context
void Newtonsoft::Json::Serialization::JsonSerializerProxy::set_Context(::System::Runtime::Serialization::StreamingContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::set_Context");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.get_Formatting
::Newtonsoft::Json::Formatting Newtonsoft::Json::Serialization::JsonSerializerProxy::get_Formatting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::get_Formatting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Formatting, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.get_CheckAdditionalContent
bool Newtonsoft::Json::Serialization::JsonSerializerProxy::get_CheckAdditionalContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::get_CheckAdditionalContent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 29));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.set_CheckAdditionalContent
void Newtonsoft::Json::Serialization::JsonSerializerProxy::set_CheckAdditionalContent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::set_CheckAdditionalContent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.add_Error
void Newtonsoft::Json::Serialization::JsonSerializerProxy::add_Error(::System::EventHandler_1<::Newtonsoft::Json::Serialization::ErrorEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::add_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.remove_Error
void Newtonsoft::Json::Serialization::JsonSerializerProxy::remove_Error(::System::EventHandler_1<::Newtonsoft::Json::Serialization::ErrorEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::remove_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.DeserializeInternal
::Il2CppObject* Newtonsoft::Json::Serialization::JsonSerializerProxy::DeserializeInternal(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::DeserializeInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonSerializerProxy.SerializeInternal
void Newtonsoft::Json::Serialization::JsonSerializerProxy::SerializeInternal(::Newtonsoft::Json::JsonWriter* jsonWriter, ::Il2CppObject* value, ::System::Type* rootType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::SerializeInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonSerializer*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jsonWriter, value, rootType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.JsonStringContract
#include "Newtonsoft/Json/Serialization/JsonStringContract.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonTypeReflector
#include "Newtonsoft/Json/Serialization/JsonTypeReflector.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonTypeReflector/Newtonsoft.Json.Serialization.<>c__DisplayClass22_0
#include "Newtonsoft/Json/Serialization/JsonTypeReflector_--c__DisplayClass22_0.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonTypeReflector/Newtonsoft.Json.Serialization.<>c
#include "Newtonsoft/Json/Serialization/JsonTypeReflector_--c.hpp"
// Including type: Newtonsoft.Json.Utilities.ThreadSafeStore`2
#include "Newtonsoft/Json/Utilities/ThreadSafeStore_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject
#include "Newtonsoft/Json/Utilities/ReflectionObject.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionDelegateFactory
#include "Newtonsoft/Json/Utilities/ReflectionDelegateFactory.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.Runtime.Serialization.DataContractAttribute
#include "System/Runtime/Serialization/DataContractAttribute.hpp"
// Including type: System.Runtime.Serialization.DataMemberAttribute
#include "System/Runtime/Serialization/DataMemberAttribute.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: Newtonsoft.Json.MemberSerialization
#include "Newtonsoft/Json/MemberSerialization.hpp"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
// Including type: Newtonsoft.Json.Serialization.NamingStrategy
#include "Newtonsoft/Json/Serialization/NamingStrategy.hpp"
// Including type: Newtonsoft.Json.JsonContainerAttribute
#include "Newtonsoft/Json/JsonContainerAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Nullable`1<System.Boolean> _fullyTrusted
::System::Nullable_1<bool> Newtonsoft::Json::Serialization::JsonTypeReflector::_get__fullyTrusted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::_get__fullyTrusted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Nullable_1<bool>>("Newtonsoft.Json.Serialization", "JsonTypeReflector", "_fullyTrusted"));
}
// Autogenerated static field setter
// Set static field: static private System.Nullable`1<System.Boolean> _fullyTrusted
void Newtonsoft::Json::Serialization::JsonTypeReflector::_set__fullyTrusted(::System::Nullable_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::_set__fullyTrusted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonTypeReflector", "_fullyTrusted", value));
}
// [NullableAttribute] Offset: 0x677674
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,System.Func`2<System.Object[],System.Object>> CreatorCache
::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::System::Func_2<::ArrayW<::Il2CppObject*>, ::Il2CppObject*>*>* Newtonsoft::Json::Serialization::JsonTypeReflector::_get_CreatorCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::_get_CreatorCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::System::Func_2<::ArrayW<::Il2CppObject*>, ::Il2CppObject*>*>*>("Newtonsoft.Json.Serialization", "JsonTypeReflector", "CreatorCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,System.Func`2<System.Object[],System.Object>> CreatorCache
void Newtonsoft::Json::Serialization::JsonTypeReflector::_set_CreatorCache(::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::System::Func_2<::ArrayW<::Il2CppObject*>, ::Il2CppObject*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::_set_CreatorCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonTypeReflector", "CreatorCache", value));
}
// [NullableAttribute] Offset: 0x6776E8
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,System.Type> AssociatedMetadataTypesCache
::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::System::Type*>* Newtonsoft::Json::Serialization::JsonTypeReflector::_get_AssociatedMetadataTypesCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::_get_AssociatedMetadataTypesCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::System::Type*>*>("Newtonsoft.Json.Serialization", "JsonTypeReflector", "AssociatedMetadataTypesCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,System.Type> AssociatedMetadataTypesCache
void Newtonsoft::Json::Serialization::JsonTypeReflector::_set_AssociatedMetadataTypesCache(::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::_set_AssociatedMetadataTypesCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonTypeReflector", "AssociatedMetadataTypesCache", value));
}
// [NullableAttribute] Offset: 0x677758
// Autogenerated static field getter
// Get static field: static private Newtonsoft.Json.Utilities.ReflectionObject _metadataTypeAttributeReflectionObject
::Newtonsoft::Json::Utilities::ReflectionObject* Newtonsoft::Json::Serialization::JsonTypeReflector::_get__metadataTypeAttributeReflectionObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::_get__metadataTypeAttributeReflectionObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ReflectionObject*>("Newtonsoft.Json.Serialization", "JsonTypeReflector", "_metadataTypeAttributeReflectionObject"));
}
// Autogenerated static field setter
// Set static field: static private Newtonsoft.Json.Utilities.ReflectionObject _metadataTypeAttributeReflectionObject
void Newtonsoft::Json::Serialization::JsonTypeReflector::_set__metadataTypeAttributeReflectionObject(::Newtonsoft::Json::Utilities::ReflectionObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::_set__metadataTypeAttributeReflectionObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonTypeReflector", "_metadataTypeAttributeReflectionObject", value));
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonTypeReflector.get_FullyTrusted
bool Newtonsoft::Json::Serialization::JsonTypeReflector::get_FullyTrusted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::get_FullyTrusted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonTypeReflector", "get_FullyTrusted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonTypeReflector.get_ReflectionDelegateFactory
::Newtonsoft::Json::Utilities::ReflectionDelegateFactory* Newtonsoft::Json::Serialization::JsonTypeReflector::get_ReflectionDelegateFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::get_ReflectionDelegateFactory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonTypeReflector", "get_ReflectionDelegateFactory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::ReflectionDelegateFactory*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonTypeReflector..cctor
void Newtonsoft::Json::Serialization::JsonTypeReflector::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonTypeReflector", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonTypeReflector.CanTypeDescriptorConvertString
bool Newtonsoft::Json::Serialization::JsonTypeReflector::CanTypeDescriptorConvertString(::System::Type* type, ByRef<::System::ComponentModel::TypeConverter*> typeConverter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::CanTypeDescriptorConvertString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonTypeReflector", "CanTypeDescriptorConvertString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::TypeConverter*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, byref(typeConverter));
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute
::System::Runtime::Serialization::DataContractAttribute* Newtonsoft::Json::Serialization::JsonTypeReflector::GetDataContractAttribute(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::GetDataContractAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonTypeReflector", "GetDataContractAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Serialization::DataContractAttribute*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute
::System::Runtime::Serialization::DataMemberAttribute* Newtonsoft::Json::Serialization::JsonTypeReflector::GetDataMemberAttribute(::System::Reflection::MemberInfo* memberInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::GetDataMemberAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonTypeReflector", "GetDataMemberAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Serialization::DataMemberAttribute*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, memberInfo);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization
::Newtonsoft::Json::MemberSerialization Newtonsoft::Json::Serialization::JsonTypeReflector::GetObjectMemberSerialization(::System::Type* objectType, bool ignoreSerializableAttribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::GetObjectMemberSerialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonTypeReflector", "GetObjectMemberSerialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(ignoreSerializableAttribute)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::MemberSerialization, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectType, ignoreSerializableAttribute);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter
::Newtonsoft::Json::JsonConverter* Newtonsoft::Json::Serialization::JsonTypeReflector::GetJsonConverter(::Il2CppObject* attributeProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::GetJsonConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonTypeReflector", "GetJsonConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, attributeProvider);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance
::Newtonsoft::Json::JsonConverter* Newtonsoft::Json::Serialization::JsonTypeReflector::CreateJsonConverterInstance(::System::Type* converterType, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::CreateJsonConverterInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonTypeReflector", "CreateJsonConverterInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(converterType), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, converterType, args);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance
::Newtonsoft::Json::Serialization::NamingStrategy* Newtonsoft::Json::Serialization::JsonTypeReflector::CreateNamingStrategyInstance(::System::Type* namingStrategyType, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::CreateNamingStrategyInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonTypeReflector", "CreateNamingStrategyInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namingStrategyType), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::NamingStrategy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, namingStrategyType, args);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy
::Newtonsoft::Json::Serialization::NamingStrategy* Newtonsoft::Json::Serialization::JsonTypeReflector::GetContainerNamingStrategy(::Newtonsoft::Json::JsonContainerAttribute* containerAttribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::GetContainerNamingStrategy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonTypeReflector", "GetContainerNamingStrategy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(containerAttribute)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::NamingStrategy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, containerAttribute);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonTypeReflector.GetCreator
::System::Func_2<::ArrayW<::Il2CppObject*>, ::Il2CppObject*>* Newtonsoft::Json::Serialization::JsonTypeReflector::GetCreator(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::GetCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonTypeReflector", "GetCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::ArrayW<::Il2CppObject*>, ::Il2CppObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType
::System::Type* Newtonsoft::Json::Serialization::JsonTypeReflector::GetAssociatedMetadataType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::GetAssociatedMetadataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonTypeReflector", "GetAssociatedMetadataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute
::System::Type* Newtonsoft::Json::Serialization::JsonTypeReflector::GetAssociateMetadataTypeFromAttribute(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::GetAssociateMetadataTypeFromAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonTypeReflector", "GetAssociateMetadataTypeFromAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonTypeReflector.IsNonSerializable
bool Newtonsoft::Json::Serialization::JsonTypeReflector::IsNonSerializable(::Il2CppObject* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::IsNonSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonTypeReflector", "IsNonSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonTypeReflector.IsSerializable
bool Newtonsoft::Json::Serialization::JsonTypeReflector::IsSerializable(::Il2CppObject* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::IsSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonTypeReflector", "IsSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider);
}
