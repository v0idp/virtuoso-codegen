// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonTypeReflector/Newtonsoft.Json.Serialization.<>c__DisplayClass22_0
#include "Newtonsoft/Json/Serialization/JsonTypeReflector_--c__DisplayClass22_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonTypeReflector::$$c__DisplayClass22_0::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::$$c__DisplayClass22_0::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`1<System.Object> defaultConstructor
[[deprecated("Use field access instead!")]] ::System::Func_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonTypeReflector::$$c__DisplayClass22_0::dyn_defaultConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::$$c__DisplayClass22_0::dyn_defaultConstructor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultConstructor"))->offset;
  return *reinterpret_cast<::System::Func_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonTypeReflector/Newtonsoft.Json.Serialization.<>c__DisplayClass22_0.<GetCreator>b__0
::Il2CppObject* Newtonsoft::Json::Serialization::JsonTypeReflector::$$c__DisplayClass22_0::$GetCreator$b__0(::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::$$c__DisplayClass22_0::<GetCreator>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetCreator>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, parameters);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonTypeReflector/Newtonsoft.Json.Serialization.<>c
#include "Newtonsoft/Json/Serialization/JsonTypeReflector_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [NullableAttribute] Offset: 0x6777E8
// Autogenerated static field getter
// Get static field: static public readonly Newtonsoft.Json.Serialization.JsonTypeReflector/Newtonsoft.Json.Serialization.<>c <>9
::Newtonsoft::Json::Serialization::JsonTypeReflector::$$c* Newtonsoft::Json::Serialization::JsonTypeReflector::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonTypeReflector::$$c*>("Newtonsoft.Json.Serialization", "JsonTypeReflector/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Newtonsoft.Json.Serialization.JsonTypeReflector/Newtonsoft.Json.Serialization.<>c <>9
void Newtonsoft::Json::Serialization::JsonTypeReflector::$$c::_set_$$9(::Newtonsoft::Json::Serialization::JsonTypeReflector::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonTypeReflector/<>c", "<>9", value)));
}
// [NullableAttribute] Offset: 0x6777FC
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Object,System.Type> <>9__22_1
::System::Func_2<::Il2CppObject*, ::System::Type*>* Newtonsoft::Json::Serialization::JsonTypeReflector::$$c::_get_$$9__22_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::$$c::_get_$$9__22_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppObject*, ::System::Type*>*>("Newtonsoft.Json.Serialization", "JsonTypeReflector/<>c", "<>9__22_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Object,System.Type> <>9__22_1
void Newtonsoft::Json::Serialization::JsonTypeReflector::$$c::_set_$$9__22_1(::System::Func_2<::Il2CppObject*, ::System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::$$c::_set_$$9__22_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonTypeReflector/<>c", "<>9__22_1", value)));
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonTypeReflector/Newtonsoft.Json.Serialization.<>c..cctor
void Newtonsoft::Json::Serialization::JsonTypeReflector::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonTypeReflector/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonTypeReflector/Newtonsoft.Json.Serialization.<>c.<GetCreator>b__22_1
::System::Type* Newtonsoft::Json::Serialization::JsonTypeReflector::$$c::$GetCreator$b__22_1(::Il2CppObject* param) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonTypeReflector::$$c::<GetCreator>b__22_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetCreator>b__22_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(param)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, param);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.NamingStrategy
#include "Newtonsoft/Json/Serialization/NamingStrategy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ProcessDictionaryKeys>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::NamingStrategy::dyn_$ProcessDictionaryKeys$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::NamingStrategy::dyn_$ProcessDictionaryKeys$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ProcessDictionaryKeys>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ProcessExtensionDataNames>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::NamingStrategy::dyn_$ProcessExtensionDataNames$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::NamingStrategy::dyn_$ProcessExtensionDataNames$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ProcessExtensionDataNames>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <OverrideSpecifiedNames>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::NamingStrategy::dyn_$OverrideSpecifiedNames$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::NamingStrategy::dyn_$OverrideSpecifiedNames$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OverrideSpecifiedNames>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.NamingStrategy.get_ProcessDictionaryKeys
bool Newtonsoft::Json::Serialization::NamingStrategy::get_ProcessDictionaryKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::NamingStrategy::get_ProcessDictionaryKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessDictionaryKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.NamingStrategy.get_ProcessExtensionDataNames
bool Newtonsoft::Json::Serialization::NamingStrategy::get_ProcessExtensionDataNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::NamingStrategy::get_ProcessExtensionDataNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessExtensionDataNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.NamingStrategy.get_OverrideSpecifiedNames
bool Newtonsoft::Json::Serialization::NamingStrategy::get_OverrideSpecifiedNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::NamingStrategy::get_OverrideSpecifiedNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverrideSpecifiedNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName
::StringW Newtonsoft::Json::Serialization::NamingStrategy::GetPropertyName(::StringW name, bool hasSpecifiedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::NamingStrategy::GetPropertyName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::NamingStrategy*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name, hasSpecifiedName);
}
// Autogenerated method: Newtonsoft.Json.Serialization.NamingStrategy.GetExtensionDataName
::StringW Newtonsoft::Json::Serialization::NamingStrategy::GetExtensionDataName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::NamingStrategy::GetExtensionDataName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::NamingStrategy*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey
::StringW Newtonsoft::Json::Serialization::NamingStrategy::GetDictionaryKey(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::NamingStrategy::GetDictionaryKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::NamingStrategy*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, key);
}
// Autogenerated method: Newtonsoft.Json.Serialization.NamingStrategy.ResolvePropertyName
::StringW Newtonsoft::Json::Serialization::NamingStrategy::ResolvePropertyName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::NamingStrategy::ResolvePropertyName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::NamingStrategy*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: Newtonsoft.Json.Serialization.NamingStrategy.Equals
bool Newtonsoft::Json::Serialization::NamingStrategy::Equals(::Newtonsoft::Json::Serialization::NamingStrategy* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::NamingStrategy::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Newtonsoft.Json.Serialization.NamingStrategy.GetHashCode
int Newtonsoft::Json::Serialization::NamingStrategy::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::NamingStrategy::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.NamingStrategy.Equals
bool Newtonsoft::Json::Serialization::NamingStrategy::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::NamingStrategy::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.ReflectionAttributeProvider
#include "Newtonsoft/Json/Serialization/ReflectionAttributeProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _attributeProvider
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::Serialization::ReflectionAttributeProvider::dyn__attributeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ReflectionAttributeProvider::dyn__attributeProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributeProvider"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.ReflectionValueProvider
#include "Newtonsoft/Json/Serialization/ReflectionValueProvider.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Reflection.MemberInfo _memberInfo
[[deprecated("Use field access instead!")]] ::System::Reflection::MemberInfo*& Newtonsoft::Json::Serialization::ReflectionValueProvider::dyn__memberInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ReflectionValueProvider::dyn__memberInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_memberInfo"))->offset;
  return *reinterpret_cast<::System::Reflection::MemberInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ReflectionValueProvider.SetValue
void Newtonsoft::Json::Serialization::ReflectionValueProvider::SetValue(::Il2CppObject* target, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ReflectionValueProvider::SetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::ReflectionValueProvider*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ReflectionValueProvider.GetValue
::Il2CppObject* Newtonsoft::Json::Serialization::ReflectionValueProvider::GetValue(::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ReflectionValueProvider::GetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::ReflectionValueProvider*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, target);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.TraceJsonReader
#include "Newtonsoft/Json/Serialization/TraceJsonReader.hpp"
// Including type: Newtonsoft.Json.JsonTextWriter
#include "Newtonsoft/Json/JsonTextWriter.hpp"
// Including type: System.IO.StringWriter
#include "System/IO/StringWriter.hpp"
// Including type: Newtonsoft.Json.JsonToken
#include "Newtonsoft/Json/JsonToken.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.JsonReader _innerReader
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonReader*& Newtonsoft::Json::Serialization::TraceJsonReader::dyn__innerReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::dyn__innerReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerReader"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.JsonTextWriter _textWriter
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonTextWriter*& Newtonsoft::Json::Serialization::TraceJsonReader::dyn__textWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::dyn__textWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textWriter"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonTextWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.StringWriter _sw
[[deprecated("Use field access instead!")]] ::System::IO::StringWriter*& Newtonsoft::Json::Serialization::TraceJsonReader::dyn__sw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::dyn__sw");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sw"))->offset;
  return *reinterpret_cast<::System::IO::StringWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.Newtonsoft.Json.IJsonLineInfo.get_LineNumber
int Newtonsoft::Json::Serialization::TraceJsonReader::Newtonsoft_Json_IJsonLineInfo_get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::Newtonsoft.Json.IJsonLineInfo.get_LineNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::TraceJsonReader*), 22));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.Newtonsoft.Json.IJsonLineInfo.get_LinePosition
int Newtonsoft::Json::Serialization::TraceJsonReader::Newtonsoft_Json_IJsonLineInfo_get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::Newtonsoft.Json.IJsonLineInfo.get_LinePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::TraceJsonReader*), 23));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.GetDeserializedJsonMessage
::StringW Newtonsoft::Json::Serialization::TraceJsonReader::GetDeserializedJsonMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::GetDeserializedJsonMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDeserializedJsonMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.WriteCurrentToken
void Newtonsoft::Json::Serialization::TraceJsonReader::WriteCurrentToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::WriteCurrentToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCurrentToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo
bool Newtonsoft::Json::Serialization::TraceJsonReader::Newtonsoft_Json_IJsonLineInfo_HasLineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::Newtonsoft.Json.IJsonLineInfo.HasLineInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::TraceJsonReader*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.get_Depth
int Newtonsoft::Json::Serialization::TraceJsonReader::get_Depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::get_Depth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.get_Path
::StringW Newtonsoft::Json::Serialization::TraceJsonReader::get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::get_Path");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.get_TokenType
::Newtonsoft::Json::JsonToken Newtonsoft::Json::Serialization::TraceJsonReader::get_TokenType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::get_TokenType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonToken, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.get_Value
::Il2CppObject* Newtonsoft::Json::Serialization::TraceJsonReader::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.get_ValueType
::System::Type* Newtonsoft::Json::Serialization::TraceJsonReader::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.Read
bool Newtonsoft::Json::Serialization::TraceJsonReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsInt32
::System::Nullable_1<int> Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsString
::StringW Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsBytes
::ArrayW<uint8_t> Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDecimal
::System::Nullable_1<::System::Decimal> Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::Decimal>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDouble
::System::Nullable_1<double> Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<double>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsBoolean
::System::Nullable_1<bool> Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDateTime
::System::Nullable_1<::System::DateTime> Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTime>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDateTimeOffset
::System::Nullable_1<::System::DateTimeOffset> Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsDateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTimeOffset>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.Close
void Newtonsoft::Json::Serialization::TraceJsonReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.TraceJsonWriter
#include "Newtonsoft/Json/Serialization/TraceJsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonTextWriter
#include "Newtonsoft/Json/JsonTextWriter.hpp"
// Including type: System.IO.StringWriter
#include "System/IO/StringWriter.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.JsonWriter _innerWriter
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonWriter*& Newtonsoft::Json::Serialization::TraceJsonWriter::dyn__innerWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::dyn__innerWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerWriter"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.JsonTextWriter _textWriter
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonTextWriter*& Newtonsoft::Json::Serialization::TraceJsonWriter::dyn__textWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::dyn__textWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textWriter"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonTextWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.StringWriter _sw
[[deprecated("Use field access instead!")]] ::System::IO::StringWriter*& Newtonsoft::Json::Serialization::TraceJsonWriter::dyn__sw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::dyn__sw");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sw"))->offset;
  return *reinterpret_cast<::System::IO::StringWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.GetSerializedJsonMessage
::StringW Newtonsoft::Json::Serialization::TraceJsonWriter::GetSerializedJsonMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::GetSerializedJsonMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSerializedJsonMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Nullable_1<::System::Decimal> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 55));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Nullable_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Nullable_1<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Nullable_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 52));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 60));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Nullable_1<::System::DateTime> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 56));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Nullable_1<::System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Nullable_1<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteUndefined
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteUndefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteUndefined");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteNull
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Nullable_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Nullable_1<::System::Guid> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 58));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Nullable_1<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 62));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Nullable_1<int8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 54));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Nullable_1<int16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 50));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Nullable_1<::System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 59));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Nullable_1<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Nullable_1<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 46));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 61));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Nullable_1<uint16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteComment
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 63));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartArray
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteStartArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteStartArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndArray
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteEndArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteEndArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartConstructor
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteStartConstructor(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteStartConstructor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndConstructor
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteEndConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteEndConstructor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName
void Newtonsoft::Json::Serialization::TraceJsonWriter::WritePropertyName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WritePropertyName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName
void Newtonsoft::Json::Serialization::TraceJsonWriter::WritePropertyName(::StringW name, bool escape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WritePropertyName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, escape);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartObject
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteStartObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteStartObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndObject
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteEndObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteEndObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRawValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteRawValue(::StringW json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteRawValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, json);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRaw
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteRaw(::StringW json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, json);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.Close
void Newtonsoft::Json::Serialization::TraceJsonWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.CommentHandling
#include "Newtonsoft/Json/Linq/CommentHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.CommentHandling Ignore
::Newtonsoft::Json::Linq::CommentHandling Newtonsoft::Json::Linq::CommentHandling::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::CommentHandling::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::CommentHandling>("Newtonsoft.Json.Linq", "CommentHandling", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.CommentHandling Ignore
void Newtonsoft::Json::Linq::CommentHandling::_set_Ignore(::Newtonsoft::Json::Linq::CommentHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::CommentHandling::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "CommentHandling", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.CommentHandling Load
::Newtonsoft::Json::Linq::CommentHandling Newtonsoft::Json::Linq::CommentHandling::_get_Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::CommentHandling::_get_Load");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::CommentHandling>("Newtonsoft.Json.Linq", "CommentHandling", "Load"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.CommentHandling Load
void Newtonsoft::Json::Linq::CommentHandling::_set_Load(::Newtonsoft::Json::Linq::CommentHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::CommentHandling::_set_Load");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "CommentHandling", "Load", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Linq::CommentHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::CommentHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.DuplicatePropertyNameHandling
#include "Newtonsoft/Json/Linq/DuplicatePropertyNameHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.DuplicatePropertyNameHandling Replace
::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling Newtonsoft::Json::Linq::DuplicatePropertyNameHandling::_get_Replace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling::_get_Replace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling>("Newtonsoft.Json.Linq", "DuplicatePropertyNameHandling", "Replace"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.DuplicatePropertyNameHandling Replace
void Newtonsoft::Json::Linq::DuplicatePropertyNameHandling::_set_Replace(::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling::_set_Replace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "DuplicatePropertyNameHandling", "Replace", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.DuplicatePropertyNameHandling Ignore
::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling Newtonsoft::Json::Linq::DuplicatePropertyNameHandling::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling>("Newtonsoft.Json.Linq", "DuplicatePropertyNameHandling", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.DuplicatePropertyNameHandling Ignore
void Newtonsoft::Json::Linq::DuplicatePropertyNameHandling::_set_Ignore(::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "DuplicatePropertyNameHandling", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.DuplicatePropertyNameHandling Error
::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling Newtonsoft::Json::Linq::DuplicatePropertyNameHandling::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling>("Newtonsoft.Json.Linq", "DuplicatePropertyNameHandling", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.DuplicatePropertyNameHandling Error
void Newtonsoft::Json::Linq::DuplicatePropertyNameHandling::_set_Error(::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "DuplicatePropertyNameHandling", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Linq::DuplicatePropertyNameHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.Extensions
#include "Newtonsoft/Json/Linq/Extensions.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Newtonsoft.Json.Linq.JToken
#include "Newtonsoft/Json/Linq/JToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Linq.JArray
#include "Newtonsoft/Json/Linq/JArray.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.Linq.JsonLoadSettings
#include "Newtonsoft/Json/Linq/JsonLoadSettings.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Newtonsoft.Json.Linq.JToken> _values
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Linq::JToken*>*& Newtonsoft::Json::Linq::JArray::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JArray::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Linq::JToken*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Linq.JArray.get_Item
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JArray::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JArray::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JArray*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method, index);
}
// Autogenerated method: Newtonsoft.Json.Linq.JArray.set_Item
void Newtonsoft::Json::Linq::JArray::set_Item(int index, ::Newtonsoft::Json::Linq::JToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JArray::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JArray*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JArray.get_IsReadOnly
bool Newtonsoft::Json::Linq::JArray::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JArray::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JArray*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JArray.Load
::Newtonsoft::Json::Linq::JArray* Newtonsoft::Json::Linq::JArray::Load(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Linq::JsonLoadSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JArray::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JArray", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JArray*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, settings);
}
// Autogenerated method: Newtonsoft.Json.Linq.JArray.IndexOf
int Newtonsoft::Json::Linq::JArray::IndexOf(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JArray::IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JArray*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JArray.Insert
void Newtonsoft::Json::Linq::JArray::Insert(int index, ::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JArray::Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JArray*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JArray.RemoveAt
void Newtonsoft::Json::Linq::JArray::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JArray::RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JArray*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: Newtonsoft.Json.Linq.JArray.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::Linq::JToken*>* Newtonsoft::Json::Linq::JArray::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JArray::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JArray*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::Linq::JToken*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JArray.Add
void Newtonsoft::Json::Linq::JArray::Add(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JArray::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JArray*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JArray.Clear
void Newtonsoft::Json::Linq::JArray::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JArray::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JArray*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JArray.Contains
bool Newtonsoft::Json::Linq::JArray::Contains(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JArray::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JArray*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JArray.CopyTo
void Newtonsoft::Json::Linq::JArray::CopyTo(::ArrayW<::Newtonsoft::Json::Linq::JToken*> array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JArray::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JArray*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: Newtonsoft.Json.Linq.JArray.Remove
bool Newtonsoft::Json::Linq::JArray::Remove(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JArray::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JArray*), 30));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JArray.get_ChildrenTokens
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Linq::JToken*>* Newtonsoft::Json::Linq::JArray::get_ChildrenTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JArray::get_ChildrenTokens");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Linq::JToken*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JArray.get_Type
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JArray::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JArray::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JTokenType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JArray.CloneToken
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JArray::CloneToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JArray::CloneToken");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JArray.WriteTo
void Newtonsoft::Json::Linq::JArray::WriteTo(::Newtonsoft::Json::JsonWriter* writer, ::ArrayW<::Newtonsoft::Json::JsonConverter*> converters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JArray::WriteTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, converters);
}
// Autogenerated method: Newtonsoft.Json.Linq.JArray.IndexOfItem
int Newtonsoft::Json::Linq::JArray::IndexOfItem(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JArray::IndexOfItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 48));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JConstructor
#include "Newtonsoft/Json/Linq/JConstructor.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.Linq.JsonLoadSettings
#include "Newtonsoft/Json/Linq/JsonLoadSettings.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _name
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Linq::JConstructor::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JConstructor::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Newtonsoft.Json.Linq.JToken> _values
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Linq::JToken*>*& Newtonsoft::Json::Linq::JConstructor::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JConstructor::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Linq::JToken*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Linq.JConstructor.get_Name
::StringW Newtonsoft::Json::Linq::JConstructor::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JConstructor::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JConstructor.Load
::Newtonsoft::Json::Linq::JConstructor* Newtonsoft::Json::Linq::JConstructor::Load(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Linq::JsonLoadSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JConstructor::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JConstructor", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JConstructor*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, settings);
}
// Autogenerated method: Newtonsoft.Json.Linq.JConstructor.get_ChildrenTokens
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Linq::JToken*>* Newtonsoft::Json::Linq::JConstructor::get_ChildrenTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JConstructor::get_ChildrenTokens");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Linq::JToken*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JConstructor.get_Type
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JConstructor::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JConstructor::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JTokenType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JConstructor.IndexOfItem
int Newtonsoft::Json::Linq::JConstructor::IndexOfItem(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JConstructor::IndexOfItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 48));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JConstructor.CloneToken
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JConstructor::CloneToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JConstructor::CloneToken");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JConstructor.WriteTo
void Newtonsoft::Json::Linq::JConstructor::WriteTo(::Newtonsoft::Json::JsonWriter* writer, ::ArrayW<::Newtonsoft::Json::JsonConverter*> converters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JConstructor::WriteTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, converters);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Linq.JContainer
#include "Newtonsoft/Json/Linq/JContainer.hpp"
// Including type: System.ComponentModel.ListChangedEventHandler
#include "System/ComponentModel/ListChangedEventHandler.hpp"
// Including type: System.Collections.Specialized.NotifyCollectionChangedEventHandler
#include "System/Collections/Specialized/NotifyCollectionChangedEventHandler.hpp"
// Including type: System.ComponentModel.ListChangedEventArgs
#include "System/ComponentModel/ListChangedEventArgs.hpp"
// Including type: System.Collections.Specialized.NotifyCollectionChangedEventArgs
#include "System/Collections/Specialized/NotifyCollectionChangedEventArgs.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.Linq.JsonLoadSettings
#include "Newtonsoft/Json/Linq/JsonLoadSettings.hpp"
// Including type: Newtonsoft.Json.Linq.JProperty
#include "Newtonsoft/Json/Linq/JProperty.hpp"
// Including type: Newtonsoft.Json.IJsonLineInfo
#include "Newtonsoft/Json/IJsonLineInfo.hpp"
// Including type: Newtonsoft.Json.Linq.JEnumerable`1
#include "Newtonsoft/Json/Linq/JEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.ComponentModel.ListChangedEventHandler _listChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ListChangedEventHandler*& Newtonsoft::Json::Linq::JContainer::dyn__listChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::dyn__listChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_listChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ListChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Specialized.NotifyCollectionChangedEventHandler _collectionChanged
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::NotifyCollectionChangedEventHandler*& Newtonsoft::Json::Linq::JContainer::dyn__collectionChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::dyn__collectionChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collectionChanged"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::NotifyCollectionChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::Linq::JContainer::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _busy
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Linq::JContainer::dyn__busy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::dyn__busy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_busy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.get_ChildrenTokens
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Linq::JToken*>* Newtonsoft::Json::Linq::JContainer::get_ChildrenTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::get_ChildrenTokens");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Linq::JToken*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.get_Item
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method, index);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.set_Item
void Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_set_Item(int index, ::Newtonsoft::Json::Linq::JToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.get_IsReadOnly
bool Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.IList.get_IsFixedSize
bool Newtonsoft::Json::Linq::JContainer::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 37));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.IList.get_IsReadOnly
bool Newtonsoft::Json::Linq::JContainer::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 36));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.IList.get_Item
::Il2CppObject* Newtonsoft::Json::Linq::JContainer::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.IList.set_Item
void Newtonsoft::Json::Linq::JContainer::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.get_Count
int Newtonsoft::Json::Linq::JContainer::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 43));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* Newtonsoft::Json::Linq::JContainer::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 44));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.CheckReentrancy
void Newtonsoft::Json::Linq::JContainer::CheckReentrancy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::CheckReentrancy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckReentrancy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.OnListChanged
void Newtonsoft::Json::Linq::JContainer::OnListChanged(::System::ComponentModel::ListChangedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::OnListChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 46));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.OnCollectionChanged
void Newtonsoft::Json::Linq::JContainer::OnCollectionChanged(::System::Collections::Specialized::NotifyCollectionChangedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::OnCollectionChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.IsMultiContent
bool Newtonsoft::Json::Linq::JContainer::IsMultiContent(::Il2CppObject* content) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::IsMultiContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMultiContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(content)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, content);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.EnsureParentToken
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JContainer::EnsureParentToken(::Newtonsoft::Json::Linq::JToken* item, bool skipParentCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::EnsureParentToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureParentToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item), ::il2cpp_utils::ExtractType(skipParentCheck)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method, item, skipParentCheck);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.IndexOfItem
int Newtonsoft::Json::Linq::JContainer::IndexOfItem(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::IndexOfItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.InsertItem
void Newtonsoft::Json::Linq::JContainer::InsertItem(int index, ::Newtonsoft::Json::Linq::JToken* item, bool skipParentCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::InsertItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item, skipParentCheck);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.RemoveItemAt
void Newtonsoft::Json::Linq::JContainer::RemoveItemAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::RemoveItemAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 50));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.RemoveItem
bool Newtonsoft::Json::Linq::JContainer::RemoveItem(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::RemoveItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 51));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.GetItem
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JContainer::GetItem(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::GetItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method, index);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.SetItem
void Newtonsoft::Json::Linq::JContainer::SetItem(int index, ::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::SetItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.ClearItems
void Newtonsoft::Json::Linq::JContainer::ClearItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::ClearItems");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 54));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.ReplaceItem
void Newtonsoft::Json::Linq::JContainer::ReplaceItem(::Newtonsoft::Json::Linq::JToken* existing, ::Newtonsoft::Json::Linq::JToken* replacement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::ReplaceItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 55));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, existing, replacement);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.ContainsItem
bool Newtonsoft::Json::Linq::JContainer::ContainsItem(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::ContainsItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 56));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.CopyItemsTo
void Newtonsoft::Json::Linq::JContainer::CopyItemsTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::CopyItemsTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.IsTokenUnchanged
bool Newtonsoft::Json::Linq::JContainer::IsTokenUnchanged(::Newtonsoft::Json::Linq::JToken* currentValue, ::Newtonsoft::Json::Linq::JToken* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::IsTokenUnchanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JContainer", "IsTokenUnchanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentValue), ::il2cpp_utils::ExtractType(newValue)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, currentValue, newValue);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.ValidateToken
void Newtonsoft::Json::Linq::JContainer::ValidateToken(::Newtonsoft::Json::Linq::JToken* o, ::Newtonsoft::Json::Linq::JToken* existing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::ValidateToken");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 58));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, existing);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.Add
void Newtonsoft::Json::Linq::JContainer::Add(::Il2CppObject* content) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 59));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, content);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.AddAndSkipParentCheck
void Newtonsoft::Json::Linq::JContainer::AddAndSkipParentCheck(::Newtonsoft::Json::Linq::JToken* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::AddAndSkipParentCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAndSkipParentCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.AddInternal
void Newtonsoft::Json::Linq::JContainer::AddInternal(int index, ::Il2CppObject* content, bool skipParentCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::AddInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(content), ::il2cpp_utils::ExtractType(skipParentCheck)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, content, skipParentCheck);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.CreateFromContent
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JContainer::CreateFromContent(::Il2CppObject* content) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::CreateFromContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JContainer", "CreateFromContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(content)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, content);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.RemoveAll
void Newtonsoft::Json::Linq::JContainer::RemoveAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::RemoveAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.ReadTokenFrom
void Newtonsoft::Json::Linq::JContainer::ReadTokenFrom(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Linq::JsonLoadSettings* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::ReadTokenFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadTokenFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, options);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.ReadContentFrom
void Newtonsoft::Json::Linq::JContainer::ReadContentFrom(::Newtonsoft::Json::JsonReader* r, ::Newtonsoft::Json::Linq::JsonLoadSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::ReadContentFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadContentFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, r, settings);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.ReadProperty
::Newtonsoft::Json::Linq::JProperty* Newtonsoft::Json::Linq::JContainer::ReadProperty(::Newtonsoft::Json::JsonReader* r, ::Newtonsoft::Json::Linq::JsonLoadSettings* settings, ::Newtonsoft::Json::IJsonLineInfo* lineInfo, ::Newtonsoft::Json::Linq::JContainer* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::ReadProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JContainer", "ReadProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(settings), ::il2cpp_utils::ExtractType(lineInfo), ::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, r, settings, lineInfo, parent);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.IndexOf
int Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_IndexOf(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.Insert
void Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_Insert(int index, ::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.RemoveAt
void Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Add
void Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_Add(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Clear
void Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Contains
bool Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_Contains(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.CopyTo
void Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_CopyTo(::ArrayW<::Newtonsoft::Json::Linq::JToken*> array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Remove
bool Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_Remove(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 30));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.EnsureValue
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JContainer::EnsureValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::EnsureValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Add
int Newtonsoft::Json::Linq::JContainer::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 33));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Clear
void Newtonsoft::Json::Linq::JContainer::System_Collections_IList_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.IList.Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Contains
bool Newtonsoft::Json::Linq::JContainer::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 34));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.IList.IndexOf
int Newtonsoft::Json::Linq::JContainer::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 38));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Insert
void Newtonsoft::Json::Linq::JContainer::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Remove
void Newtonsoft::Json::Linq::JContainer::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.IList.RemoveAt
void Newtonsoft::Json::Linq::JContainer::System_Collections_IList_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.IList.RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.System.Collections.ICollection.CopyTo
void Newtonsoft::Json::Linq::JContainer::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.get_HasValues
bool Newtonsoft::Json::Linq::JContainer::get_HasValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::get_HasValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.get_First
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JContainer::get_First() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::get_First");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.get_Last
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JContainer::get_Last() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::get_Last");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JContainer.Children
::Newtonsoft::Json::Linq::JEnumerable_1<::Newtonsoft::Json::Linq::JToken*> Newtonsoft::Json::Linq::JContainer::Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::Children");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JEnumerable_1<::Newtonsoft::Json::Linq::JToken*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: Newtonsoft.Json.Linq.JObject
#include "Newtonsoft/Json/Linq/JObject.hpp"
// Including type: Newtonsoft.Json.Linq.JObject/Newtonsoft.Json.Linq.JObjectDynamicProxy
#include "Newtonsoft/Json/Linq/JObject_JObjectDynamicProxy.hpp"
// Including type: Newtonsoft.Json.Linq.JObject/Newtonsoft.Json.Linq.<GetEnumerator>d__63
#include "Newtonsoft/Json/Linq/JObject_-GetEnumerator-d__63.hpp"
// Including type: Newtonsoft.Json.Linq.JPropertyKeyedCollection
#include "Newtonsoft/Json/Linq/JPropertyKeyedCollection.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: System.ComponentModel.PropertyChangingEventHandler
#include "System/ComponentModel/PropertyChangingEventHandler.hpp"
// Including type: Newtonsoft.Json.Linq.JProperty
#include "Newtonsoft/Json/Linq/JProperty.hpp"
// Including type: System.StringComparison
#include "System/StringComparison.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.Linq.JsonLoadSettings
#include "Newtonsoft/Json/Linq/JsonLoadSettings.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
// Including type: System.Dynamic.DynamicMetaObject
#include "System/Dynamic/DynamicMetaObject.hpp"
// Including type: System.Linq.Expressions.Expression
#include "System/Linq/Expressions/Expression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Linq.JPropertyKeyedCollection _properties
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JPropertyKeyedCollection*& Newtonsoft::Json::Linq::JObject::dyn__properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::dyn__properties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_properties"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JPropertyKeyedCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& Newtonsoft::Json::Linq::JObject::dyn_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::dyn_PropertyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangingEventHandler PropertyChanging
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangingEventHandler*& Newtonsoft::Json::Linq::JObject::dyn_PropertyChanging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::dyn_PropertyChanging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanging"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangingEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.get_Item
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JObject::get_Item(::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 60));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method, propertyName);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.set_Item
void Newtonsoft::Json::Linq::JObject::set_Item(::StringW propertyName, ::Newtonsoft::Json::Linq::JToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 61));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyName, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.System.Collections.Generic.IDictionary<System.String,Newtonsoft.Json.Linq.JToken>.get_Values
::System::Collections::Generic::ICollection_1<::Newtonsoft::Json::Linq::JToken*>* Newtonsoft::Json::Linq::JObject::System_Collections_Generic_IDictionary$System_String_Newtonsoft_Json_Linq_JToken$_get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::System.Collections.Generic.IDictionary<System.String,Newtonsoft.Json.Linq.JToken>.get_Values");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 62));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::Newtonsoft::Json::Linq::JToken*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.get_IsReadOnly
bool Newtonsoft::Json::Linq::JObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 67));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.InternalPropertyChanged
void Newtonsoft::Json::Linq::JObject::InternalPropertyChanged(::Newtonsoft::Json::Linq::JProperty* childProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::InternalPropertyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalPropertyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(childProperty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, childProperty);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.InternalPropertyChanging
void Newtonsoft::Json::Linq::JObject::InternalPropertyChanging(::Newtonsoft::Json::Linq::JProperty* childProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::InternalPropertyChanging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalPropertyChanging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(childProperty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, childProperty);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.Properties
::System::Collections::Generic::IEnumerable_1<::Newtonsoft::Json::Linq::JProperty*>* Newtonsoft::Json::Linq::JObject::Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::Properties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Newtonsoft::Json::Linq::JProperty*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.Property
::Newtonsoft::Json::Linq::JProperty* Newtonsoft::Json::Linq::JObject::Property(::StringW name, ::System::StringComparison comparison) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::Property");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Property", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(comparison)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JProperty*, false>(this, ___internal__method, name, comparison);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.Load
::Newtonsoft::Json::Linq::JObject* Newtonsoft::Json::Linq::JObject::Load(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Linq::JsonLoadSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JObject", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, settings);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.Parse
::Newtonsoft::Json::Linq::JObject* Newtonsoft::Json::Linq::JObject::Parse(::StringW json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JObject", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.Parse
::Newtonsoft::Json::Linq::JObject* Newtonsoft::Json::Linq::JObject::Parse(::StringW json, ::Newtonsoft::Json::Linq::JsonLoadSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JObject", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json, settings);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.FromObject
::Newtonsoft::Json::Linq::JObject* Newtonsoft::Json::Linq::JObject::FromObject(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::FromObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JObject", "FromObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, o);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.FromObject
::Newtonsoft::Json::Linq::JObject* Newtonsoft::Json::Linq::JObject::FromObject(::Il2CppObject* o, ::Newtonsoft::Json::JsonSerializer* jsonSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::FromObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JObject", "FromObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(jsonSerializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, o, jsonSerializer);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.Add
void Newtonsoft::Json::Linq::JObject::Add(::StringW propertyName, ::Newtonsoft::Json::Linq::JToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 63));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyName, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.Remove
bool Newtonsoft::Json::Linq::JObject::Remove(::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 64));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, propertyName);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.TryGetValue
bool Newtonsoft::Json::Linq::JObject::TryGetValue(::StringW propertyName, ByRef<::Newtonsoft::Json::Linq::JToken*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::TryGetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 65));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, propertyName, byref(value));
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Add
void Newtonsoft::Json::Linq::JObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_Add(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*> item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 68));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Clear
void Newtonsoft::Json::Linq::JObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 69));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Contains
bool Newtonsoft::Json::Linq::JObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_Contains(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*> item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 70));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.CopyTo
void Newtonsoft::Json::Linq::JObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*>> array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 71));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Remove
bool Newtonsoft::Json::Linq::JObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_Remove(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*> item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 72));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*>>* Newtonsoft::Json::Linq::JObject::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 73));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*>>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.OnPropertyChanged
void Newtonsoft::Json::Linq::JObject::OnPropertyChanged(::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::OnPropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 79));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyName);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.OnPropertyChanging
void Newtonsoft::Json::Linq::JObject::OnPropertyChanging(::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::OnPropertyChanging");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 80));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyName);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* Newtonsoft::Json::Linq::JObject::System_ComponentModel_ICustomTypeDescriptor_GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::System.ComponentModel.ICustomTypeDescriptor.GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 76));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* Newtonsoft::Json::Linq::JObject::System_ComponentModel_ICustomTypeDescriptor_GetProperties(::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::System.ComponentModel.ICustomTypeDescriptor.GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 77));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, attributes);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetAttributes
::System::ComponentModel::AttributeCollection* Newtonsoft::Json::Linq::JObject::System_ComponentModel_ICustomTypeDescriptor_GetAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::System.ComponentModel.ICustomTypeDescriptor.GetAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 74));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetConverter
::System::ComponentModel::TypeConverter* Newtonsoft::Json::Linq::JObject::System_ComponentModel_ICustomTypeDescriptor_GetConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::System.ComponentModel.ICustomTypeDescriptor.GetConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 75));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner
::Il2CppObject* Newtonsoft::Json::Linq::JObject::System_ComponentModel_ICustomTypeDescriptor_GetPropertyOwner(::System::ComponentModel::PropertyDescriptor* pd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject*), 78));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, pd);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.get_ChildrenTokens
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Linq::JToken*>* Newtonsoft::Json::Linq::JObject::get_ChildrenTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::get_ChildrenTokens");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Linq::JToken*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.get_Type
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JObject::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JTokenType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.IndexOfItem
int Newtonsoft::Json::Linq::JObject::IndexOfItem(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::IndexOfItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 48));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.InsertItem
void Newtonsoft::Json::Linq::JObject::InsertItem(int index, ::Newtonsoft::Json::Linq::JToken* item, bool skipParentCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::InsertItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item, skipParentCheck);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.ValidateToken
void Newtonsoft::Json::Linq::JObject::ValidateToken(::Newtonsoft::Json::Linq::JToken* o, ::Newtonsoft::Json::Linq::JToken* existing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::ValidateToken");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 58));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, existing);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.CloneToken
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JObject::CloneToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::CloneToken");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.WriteTo
void Newtonsoft::Json::Linq::JObject::WriteTo(::Newtonsoft::Json::JsonWriter* writer, ::ArrayW<::Newtonsoft::Json::JsonConverter*> converters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::WriteTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, converters);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject.GetMetaObject
::System::Dynamic::DynamicMetaObject* Newtonsoft::Json::Linq::JObject::GetMetaObject(::System::Linq::Expressions::Expression* parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::GetMetaObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Dynamic::DynamicMetaObject*, false>(this, ___internal__method, parameter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JObject/Newtonsoft.Json.Linq.JObjectDynamicProxy
#include "Newtonsoft/Json/Linq/JObject_JObjectDynamicProxy.hpp"
// Including type: Newtonsoft.Json.Linq.JObject/Newtonsoft.Json.Linq.JObjectDynamicProxy/Newtonsoft.Json.Linq.<>c
#include "Newtonsoft/Json/Linq/JObject_JObjectDynamicProxy_--c.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Linq.JObject/Newtonsoft.Json.Linq.JObjectDynamicProxy.GetDynamicMemberNames
::System::Collections::Generic::IEnumerable_1<::StringW>* Newtonsoft::Json::Linq::JObject::JObjectDynamicProxy::GetDynamicMemberNames(::Newtonsoft::Json::Linq::JObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::JObjectDynamicProxy::GetDynamicMemberNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject::JObjectDynamicProxy*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method, instance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JObject/Newtonsoft.Json.Linq.JObjectDynamicProxy/Newtonsoft.Json.Linq.<>c
#include "Newtonsoft/Json/Linq/JObject_JObjectDynamicProxy_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Newtonsoft.Json.Linq.JProperty
#include "Newtonsoft/Json/Linq/JProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [NullableAttribute] Offset: 0x677970
// Autogenerated static field getter
// Get static field: static public readonly Newtonsoft.Json.Linq.JObject/Newtonsoft.Json.Linq.JObjectDynamicProxy/Newtonsoft.Json.Linq.<>c <>9
::Newtonsoft::Json::Linq::JObject::JObjectDynamicProxy::$$c* Newtonsoft::Json::Linq::JObject::JObjectDynamicProxy::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::JObjectDynamicProxy::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JObject::JObjectDynamicProxy::$$c*>("Newtonsoft.Json.Linq", "JObject/JObjectDynamicProxy/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Newtonsoft.Json.Linq.JObject/Newtonsoft.Json.Linq.JObjectDynamicProxy/Newtonsoft.Json.Linq.<>c <>9
void Newtonsoft::Json::Linq::JObject::JObjectDynamicProxy::$$c::_set_$$9(::Newtonsoft::Json::Linq::JObject::JObjectDynamicProxy::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::JObjectDynamicProxy::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JObject/JObjectDynamicProxy/<>c", "<>9", value)));
}
// [NullableAttribute] Offset: 0x677984
// Autogenerated static field getter
// Get static field: static public System.Func`2<Newtonsoft.Json.Linq.JProperty,System.String> <>9__2_0
::System::Func_2<::Newtonsoft::Json::Linq::JProperty*, ::StringW>* Newtonsoft::Json::Linq::JObject::JObjectDynamicProxy::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::JObjectDynamicProxy::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Newtonsoft::Json::Linq::JProperty*, ::StringW>*>("Newtonsoft.Json.Linq", "JObject/JObjectDynamicProxy/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Newtonsoft.Json.Linq.JProperty,System.String> <>9__2_0
void Newtonsoft::Json::Linq::JObject::JObjectDynamicProxy::$$c::_set_$$9__2_0(::System::Func_2<::Newtonsoft::Json::Linq::JProperty*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::JObjectDynamicProxy::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JObject/JObjectDynamicProxy/<>c", "<>9__2_0", value)));
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject/Newtonsoft.Json.Linq.JObjectDynamicProxy/Newtonsoft.Json.Linq.<>c..cctor
void Newtonsoft::Json::Linq::JObject::JObjectDynamicProxy::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::JObjectDynamicProxy::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JObject/JObjectDynamicProxy/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject/Newtonsoft.Json.Linq.JObjectDynamicProxy/Newtonsoft.Json.Linq.<>c.<GetDynamicMemberNames>b__2_0
::StringW Newtonsoft::Json::Linq::JObject::JObjectDynamicProxy::$$c::$GetDynamicMemberNames$b__2_0(::Newtonsoft::Json::Linq::JProperty* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::JObjectDynamicProxy::$$c::<GetDynamicMemberNames>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetDynamicMemberNames>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Linq.JObject/Newtonsoft.Json.Linq.<GetEnumerator>d__63
#include "Newtonsoft/Json/Linq/JObject_-GetEnumerator-d__63.hpp"
// Including type: Newtonsoft.Json.Linq.JToken
#include "Newtonsoft/Json/Linq/JToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.KeyValuePair`2<System.String,Newtonsoft.Json.Linq.JToken> <>2__current
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*>& Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Linq.JObject <>4__this
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JObject*& Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<Newtonsoft.Json.Linq.JToken> <>7__wrap1
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::Linq::JToken*>*& Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::Linq::JToken*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject/Newtonsoft.Json.Linq.<GetEnumerator>d__63.System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.get_Current
::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*> Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::System_Collections_Generic_IEnumerator$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject/Newtonsoft.Json.Linq.<GetEnumerator>d__63.System.Collections.IEnumerator.get_Current
::Il2CppObject* Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject/Newtonsoft.Json.Linq.<GetEnumerator>d__63.System.IDisposable.Dispose
void Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject/Newtonsoft.Json.Linq.<GetEnumerator>d__63.MoveNext
bool Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject/Newtonsoft.Json.Linq.<GetEnumerator>d__63.<>m__Finally1
void Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JObject/Newtonsoft.Json.Linq.<GetEnumerator>d__63.System.Collections.IEnumerator.Reset
void Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Linq.JProperty
#include "Newtonsoft/Json/Linq/JProperty.hpp"
// Including type: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList
#include "Newtonsoft/Json/Linq/JProperty_JPropertyList.hpp"
// Including type: Newtonsoft.Json.Linq.JTokenType
#include "Newtonsoft/Json/Linq/JTokenType.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.Linq.JsonLoadSettings
#include "Newtonsoft/Json/Linq/JsonLoadSettings.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList _content
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JProperty::JPropertyList*& Newtonsoft::Json::Linq::JProperty::dyn__content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::dyn__content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_content"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JProperty::JPropertyList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _name
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Linq::JProperty::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty.get_Name
::StringW Newtonsoft::Json::Linq::JProperty::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty.get_Value
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JProperty::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty.set_Value
void Newtonsoft::Json::Linq::JProperty::set_Value(::Newtonsoft::Json::Linq::JToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty.Load
::Newtonsoft::Json::Linq::JProperty* Newtonsoft::Json::Linq::JProperty::Load(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Linq::JsonLoadSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JProperty", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, settings);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty.get_ChildrenTokens
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Linq::JToken*>* Newtonsoft::Json::Linq::JProperty::get_ChildrenTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::get_ChildrenTokens");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Linq::JToken*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty.get_Type
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JProperty::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JTokenType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty.GetItem
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JProperty::GetItem(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::GetItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method, index);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty.SetItem
void Newtonsoft::Json::Linq::JProperty::SetItem(int index, ::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::SetItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty.RemoveItem
bool Newtonsoft::Json::Linq::JProperty::RemoveItem(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::RemoveItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 51));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty.RemoveItemAt
void Newtonsoft::Json::Linq::JProperty::RemoveItemAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::RemoveItemAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 50));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty.IndexOfItem
int Newtonsoft::Json::Linq::JProperty::IndexOfItem(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::IndexOfItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 48));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty.InsertItem
void Newtonsoft::Json::Linq::JProperty::InsertItem(int index, ::Newtonsoft::Json::Linq::JToken* item, bool skipParentCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::InsertItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item, skipParentCheck);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty.ContainsItem
bool Newtonsoft::Json::Linq::JProperty::ContainsItem(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::ContainsItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 56));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty.ClearItems
void Newtonsoft::Json::Linq::JProperty::ClearItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::ClearItems");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JContainer*), 54));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty.CloneToken
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JProperty::CloneToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::CloneToken");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty.WriteTo
void Newtonsoft::Json::Linq::JProperty::WriteTo(::Newtonsoft::Json::JsonWriter* writer, ::ArrayW<::Newtonsoft::Json::JsonConverter*> converters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::WriteTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, converters);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList
#include "Newtonsoft/Json/Linq/JProperty_JPropertyList.hpp"
// Including type: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList/Newtonsoft.Json.Linq.<GetEnumerator>d__1
#include "Newtonsoft/Json/Linq/JProperty_JPropertyList_-GetEnumerator-d__1.hpp"
// Including type: Newtonsoft.Json.Linq.JToken
#include "Newtonsoft/Json/Linq/JToken.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Newtonsoft.Json.Linq.JToken _token
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JToken*& Newtonsoft::Json::Linq::JProperty::JPropertyList::dyn__token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::dyn__token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_token"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList.get_Count
int Newtonsoft::Json::Linq::JProperty::JPropertyList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JProperty::JPropertyList*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList.get_IsReadOnly
bool Newtonsoft::Json::Linq::JProperty::JPropertyList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JProperty::JPropertyList*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList.get_Item
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JProperty::JPropertyList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JProperty::JPropertyList*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method, index);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList.set_Item
void Newtonsoft::Json::Linq::JProperty::JPropertyList::set_Item(int index, ::Newtonsoft::Json::Linq::JToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JProperty::JPropertyList*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::Linq::JToken*>* Newtonsoft::Json::Linq::JProperty::JPropertyList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JProperty::JPropertyList*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::Linq::JToken*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Newtonsoft::Json::Linq::JProperty::JPropertyList::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JProperty::JPropertyList*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList.Add
void Newtonsoft::Json::Linq::JProperty::JPropertyList::Add(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JProperty::JPropertyList*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList.Clear
void Newtonsoft::Json::Linq::JProperty::JPropertyList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JProperty::JPropertyList*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList.Contains
bool Newtonsoft::Json::Linq::JProperty::JPropertyList::Contains(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JProperty::JPropertyList*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList.CopyTo
void Newtonsoft::Json::Linq::JProperty::JPropertyList::CopyTo(::ArrayW<::Newtonsoft::Json::Linq::JToken*> array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JProperty::JPropertyList*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList.Remove
bool Newtonsoft::Json::Linq::JProperty::JPropertyList::Remove(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JProperty::JPropertyList*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList.IndexOf
int Newtonsoft::Json::Linq::JProperty::JPropertyList::IndexOf(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JProperty::JPropertyList*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList.Insert
void Newtonsoft::Json::Linq::JProperty::JPropertyList::Insert(int index, ::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JProperty::JPropertyList*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList.RemoveAt
void Newtonsoft::Json::Linq::JProperty::JPropertyList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JProperty::JPropertyList*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList/Newtonsoft.Json.Linq.<GetEnumerator>d__1
#include "Newtonsoft/Json/Linq/JProperty_JPropertyList_-GetEnumerator-d__1.hpp"
// Including type: Newtonsoft.Json.Linq.JToken
#include "Newtonsoft/Json/Linq/JToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Linq.JToken <>2__current
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JToken*& Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList <>4__this
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JProperty::JPropertyList*& Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JProperty::JPropertyList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList/Newtonsoft.Json.Linq.<GetEnumerator>d__1.System.Collections.Generic.IEnumerator<Newtonsoft.Json.Linq.JToken>.get_Current
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::System_Collections_Generic_IEnumerator$Newtonsoft_Json_Linq_JToken$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::System.Collections.Generic.IEnumerator<Newtonsoft.Json.Linq.JToken>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList/Newtonsoft.Json.Linq.<GetEnumerator>d__1.System.Collections.IEnumerator.get_Current
::Il2CppObject* Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList/Newtonsoft.Json.Linq.<GetEnumerator>d__1.System.IDisposable.Dispose
void Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList/Newtonsoft.Json.Linq.<GetEnumerator>d__1.MoveNext
bool Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList/Newtonsoft.Json.Linq.<GetEnumerator>d__1.System.Collections.IEnumerator.Reset
void Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Linq.JPropertyDescriptor
#include "Newtonsoft/Json/Linq/JPropertyDescriptor.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Linq.JPropertyDescriptor.get_ComponentType
::System::Type* Newtonsoft::Json::Linq::JPropertyDescriptor::get_ComponentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyDescriptor::get_ComponentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JPropertyDescriptor.get_IsReadOnly
bool Newtonsoft::Json::Linq::JPropertyDescriptor::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyDescriptor::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JPropertyDescriptor.get_PropertyType
::System::Type* Newtonsoft::Json::Linq::JPropertyDescriptor::get_PropertyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyDescriptor::get_PropertyType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JPropertyDescriptor.get_NameHashCode
int Newtonsoft::Json::Linq::JPropertyDescriptor::get_NameHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyDescriptor::get_NameHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JPropertyDescriptor.GetValue
::Il2CppObject* Newtonsoft::Json::Linq::JPropertyDescriptor::GetValue(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyDescriptor::GetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, component);
}
// Autogenerated method: Newtonsoft.Json.Linq.JPropertyDescriptor.SetValue
void Newtonsoft::Json::Linq::JPropertyDescriptor::SetValue(::Il2CppObject* component, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyDescriptor::SetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JPropertyDescriptor.ShouldSerializeValue
bool Newtonsoft::Json::Linq::JPropertyDescriptor::ShouldSerializeValue(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyDescriptor::ShouldSerializeValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, component);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JPropertyKeyedCollection
#include "Newtonsoft/Json/Linq/JPropertyKeyedCollection.hpp"
// Including type: Newtonsoft.Json.Linq.JToken
#include "Newtonsoft/Json/Linq/JToken.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.IEqualityComparer`1
#include "System/Collections/Generic/IEqualityComparer_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.IEqualityComparer`1<System.String> Comparer
::System::Collections::Generic::IEqualityComparer_1<::StringW>* Newtonsoft::Json::Linq::JPropertyKeyedCollection::_get_Comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyKeyedCollection::_get_Comparer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::IEqualityComparer_1<::StringW>*>("Newtonsoft.Json.Linq", "JPropertyKeyedCollection", "Comparer"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.IEqualityComparer`1<System.String> Comparer
void Newtonsoft::Json::Linq::JPropertyKeyedCollection::_set_Comparer(::System::Collections::Generic::IEqualityComparer_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyKeyedCollection::_set_Comparer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JPropertyKeyedCollection", "Comparer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,Newtonsoft.Json.Linq.JToken> _dictionary
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Newtonsoft::Json::Linq::JToken*>*& Newtonsoft::Json::Linq::JPropertyKeyedCollection::dyn__dictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyKeyedCollection::dyn__dictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Newtonsoft::Json::Linq::JToken*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Linq.JPropertyKeyedCollection..cctor
void Newtonsoft::Json::Linq::JPropertyKeyedCollection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyKeyedCollection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JPropertyKeyedCollection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JPropertyKeyedCollection.AddKey
void Newtonsoft::Json::Linq::JPropertyKeyedCollection::AddKey(::StringW key, ::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyKeyedCollection::AddKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JPropertyKeyedCollection.EnsureDictionary
void Newtonsoft::Json::Linq::JPropertyKeyedCollection::EnsureDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyKeyedCollection::EnsureDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JPropertyKeyedCollection.GetKeyForItem
::StringW Newtonsoft::Json::Linq::JPropertyKeyedCollection::GetKeyForItem(::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyKeyedCollection::GetKeyForItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKeyForItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JPropertyKeyedCollection.InsertItem
void Newtonsoft::Json::Linq::JPropertyKeyedCollection::InsertItem(int index, ::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyKeyedCollection::InsertItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JPropertyKeyedCollection*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveKey
void Newtonsoft::Json::Linq::JPropertyKeyedCollection::RemoveKey(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyKeyedCollection::RemoveKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem
void Newtonsoft::Json::Linq::JPropertyKeyedCollection::SetItem(int index, ::Newtonsoft::Json::Linq::JToken* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyKeyedCollection::SetItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JPropertyKeyedCollection*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item);
}
// Autogenerated method: Newtonsoft.Json.Linq.JPropertyKeyedCollection.TryGetValue
bool Newtonsoft::Json::Linq::JPropertyKeyedCollection::TryGetValue(::StringW key, ByRef<::Newtonsoft::Json::Linq::JToken*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyKeyedCollection::TryGetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractIndependentType<::Newtonsoft::Json::Linq::JToken*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, byref(value));
}
// Autogenerated method: Newtonsoft.Json.Linq.JPropertyKeyedCollection.IndexOfReference
int Newtonsoft::Json::Linq::JPropertyKeyedCollection::IndexOfReference(::Newtonsoft::Json::Linq::JToken* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyKeyedCollection::IndexOfReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Linq.JPropertyKeyedCollection.ClearItems
void Newtonsoft::Json::Linq::JPropertyKeyedCollection::ClearItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyKeyedCollection::ClearItems");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ObjectModel::Collection_1<T>*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveItem
void Newtonsoft::Json::Linq::JPropertyKeyedCollection::RemoveItem(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JPropertyKeyedCollection::RemoveItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ObjectModel::Collection_1<T>*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Linq.JRaw
#include "Newtonsoft/Json/Linq/JRaw.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Linq.JRaw.Create
::Newtonsoft::Json::Linq::JRaw* Newtonsoft::Json::Linq::JRaw::Create(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JRaw::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JRaw", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JRaw*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Linq.JRaw.CloneToken
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JRaw::CloneToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JRaw::CloneToken");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JsonLoadSettings
#include "Newtonsoft/Json/Linq/JsonLoadSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Linq.CommentHandling _commentHandling
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::CommentHandling& Newtonsoft::Json::Linq::JsonLoadSettings::dyn__commentHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonLoadSettings::dyn__commentHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_commentHandling"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::CommentHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Linq.LineInfoHandling _lineInfoHandling
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::LineInfoHandling& Newtonsoft::Json::Linq::JsonLoadSettings::dyn__lineInfoHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonLoadSettings::dyn__lineInfoHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineInfoHandling"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::LineInfoHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Linq.DuplicatePropertyNameHandling _duplicatePropertyNameHandling
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling& Newtonsoft::Json::Linq::JsonLoadSettings::dyn__duplicatePropertyNameHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonLoadSettings::dyn__duplicatePropertyNameHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duplicatePropertyNameHandling"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Linq.JsonLoadSettings.get_CommentHandling
::Newtonsoft::Json::Linq::CommentHandling Newtonsoft::Json::Linq::JsonLoadSettings::get_CommentHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonLoadSettings::get_CommentHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CommentHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::CommentHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JsonLoadSettings.get_LineInfoHandling
::Newtonsoft::Json::Linq::LineInfoHandling Newtonsoft::Json::Linq::JsonLoadSettings::get_LineInfoHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonLoadSettings::get_LineInfoHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineInfoHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::LineInfoHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JsonLoadSettings.get_DuplicatePropertyNameHandling
::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling Newtonsoft::Json::Linq::JsonLoadSettings::get_DuplicatePropertyNameHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonLoadSettings::get_DuplicatePropertyNameHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DuplicatePropertyNameHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::DuplicatePropertyNameHandling, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Linq.JToken
#include "Newtonsoft/Json/Linq/JToken.hpp"
// Including type: Newtonsoft.Json.Linq.JToken/Newtonsoft.Json.Linq.LineInfoAnnotation
#include "Newtonsoft/Json/Linq/JToken_LineInfoAnnotation.hpp"
// Including type: Newtonsoft.Json.Linq.JContainer
#include "Newtonsoft/Json/Linq/JContainer.hpp"
// Including type: Newtonsoft.Json.Linq.JEnumerable`1
#include "Newtonsoft/Json/Linq/JEnumerable_1.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
// Including type: Newtonsoft.Json.Linq.JValue
#include "Newtonsoft/Json/Linq/JValue.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.Linq.JsonLoadSettings
#include "Newtonsoft/Json/Linq/JsonLoadSettings.hpp"
// Including type: System.Dynamic.DynamicMetaObject
#include "System/Dynamic/DynamicMetaObject.hpp"
// Including type: System.Linq.Expressions.Expression
#include "System/Linq/Expressions/Expression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] BooleanTypes
::ArrayW<::Newtonsoft::Json::Linq::JTokenType> Newtonsoft::Json::Linq::JToken::_get_BooleanTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_get_BooleanTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Newtonsoft::Json::Linq::JTokenType>>("Newtonsoft.Json.Linq", "JToken", "BooleanTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] BooleanTypes
void Newtonsoft::Json::Linq::JToken::_set_BooleanTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_set_BooleanTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JToken", "BooleanTypes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] NumberTypes
::ArrayW<::Newtonsoft::Json::Linq::JTokenType> Newtonsoft::Json::Linq::JToken::_get_NumberTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_get_NumberTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Newtonsoft::Json::Linq::JTokenType>>("Newtonsoft.Json.Linq", "JToken", "NumberTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] NumberTypes
void Newtonsoft::Json::Linq::JToken::_set_NumberTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_set_NumberTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JToken", "NumberTypes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] BigIntegerTypes
::ArrayW<::Newtonsoft::Json::Linq::JTokenType> Newtonsoft::Json::Linq::JToken::_get_BigIntegerTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_get_BigIntegerTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Newtonsoft::Json::Linq::JTokenType>>("Newtonsoft.Json.Linq", "JToken", "BigIntegerTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] BigIntegerTypes
void Newtonsoft::Json::Linq::JToken::_set_BigIntegerTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_set_BigIntegerTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JToken", "BigIntegerTypes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] StringTypes
::ArrayW<::Newtonsoft::Json::Linq::JTokenType> Newtonsoft::Json::Linq::JToken::_get_StringTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_get_StringTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Newtonsoft::Json::Linq::JTokenType>>("Newtonsoft.Json.Linq", "JToken", "StringTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] StringTypes
void Newtonsoft::Json::Linq::JToken::_set_StringTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_set_StringTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JToken", "StringTypes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] GuidTypes
::ArrayW<::Newtonsoft::Json::Linq::JTokenType> Newtonsoft::Json::Linq::JToken::_get_GuidTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_get_GuidTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Newtonsoft::Json::Linq::JTokenType>>("Newtonsoft.Json.Linq", "JToken", "GuidTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] GuidTypes
void Newtonsoft::Json::Linq::JToken::_set_GuidTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_set_GuidTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JToken", "GuidTypes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] TimeSpanTypes
::ArrayW<::Newtonsoft::Json::Linq::JTokenType> Newtonsoft::Json::Linq::JToken::_get_TimeSpanTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_get_TimeSpanTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Newtonsoft::Json::Linq::JTokenType>>("Newtonsoft.Json.Linq", "JToken", "TimeSpanTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] TimeSpanTypes
void Newtonsoft::Json::Linq::JToken::_set_TimeSpanTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_set_TimeSpanTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JToken", "TimeSpanTypes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] UriTypes
::ArrayW<::Newtonsoft::Json::Linq::JTokenType> Newtonsoft::Json::Linq::JToken::_get_UriTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_get_UriTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Newtonsoft::Json::Linq::JTokenType>>("Newtonsoft.Json.Linq", "JToken", "UriTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] UriTypes
void Newtonsoft::Json::Linq::JToken::_set_UriTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_set_UriTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JToken", "UriTypes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] CharTypes
::ArrayW<::Newtonsoft::Json::Linq::JTokenType> Newtonsoft::Json::Linq::JToken::_get_CharTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_get_CharTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Newtonsoft::Json::Linq::JTokenType>>("Newtonsoft.Json.Linq", "JToken", "CharTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] CharTypes
void Newtonsoft::Json::Linq::JToken::_set_CharTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_set_CharTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JToken", "CharTypes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] DateTimeTypes
::ArrayW<::Newtonsoft::Json::Linq::JTokenType> Newtonsoft::Json::Linq::JToken::_get_DateTimeTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_get_DateTimeTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Newtonsoft::Json::Linq::JTokenType>>("Newtonsoft.Json.Linq", "JToken", "DateTimeTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] DateTimeTypes
void Newtonsoft::Json::Linq::JToken::_set_DateTimeTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_set_DateTimeTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JToken", "DateTimeTypes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] BytesTypes
::ArrayW<::Newtonsoft::Json::Linq::JTokenType> Newtonsoft::Json::Linq::JToken::_get_BytesTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_get_BytesTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Newtonsoft::Json::Linq::JTokenType>>("Newtonsoft.Json.Linq", "JToken", "BytesTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] BytesTypes
void Newtonsoft::Json::Linq::JToken::_set_BytesTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::_set_BytesTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JToken", "BytesTypes", value));
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Linq.JContainer _parent
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JContainer*& Newtonsoft::Json::Linq::JToken::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Linq.JToken _previous
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JToken*& Newtonsoft::Json::Linq::JToken::dyn__previous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::dyn__previous");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previous"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Linq.JToken _next
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JToken*& Newtonsoft::Json::Linq::JToken::dyn__next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::dyn__next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_next"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _annotations
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::Linq::JToken::dyn__annotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::dyn__annotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_annotations"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.get_Parent
::Newtonsoft::Json::Linq::JContainer* Newtonsoft::Json::Linq::JToken::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::get_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.set_Parent
void Newtonsoft::Json::Linq::JToken::set_Parent(::Newtonsoft::Json::Linq::JContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::set_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.get_Root
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JToken::get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::get_Root");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Root", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.get_Type
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JToken::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JTokenType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.get_HasValues
bool Newtonsoft::Json::Linq::JToken::get_HasValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::get_HasValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.get_Next
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JToken::get_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::get_Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.set_Next
void Newtonsoft::Json::Linq::JToken::set_Next(::Newtonsoft::Json::Linq::JToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::set_Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.get_Previous
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JToken::get_Previous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::get_Previous");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Previous", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.set_Previous
void Newtonsoft::Json::Linq::JToken::set_Previous(::Newtonsoft::Json::Linq::JToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::set_Previous");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Previous", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.get_Path
::StringW Newtonsoft::Json::Linq::JToken::get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::get_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.get_First
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JToken::get_First() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::get_First");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.get_Last
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JToken::get_Last() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::get_Last");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.IJsonLineInfo.get_LineNumber
int Newtonsoft::Json::Linq::JToken::Newtonsoft_Json_IJsonLineInfo_get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::Newtonsoft.Json.IJsonLineInfo.get_LineNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.IJsonLineInfo.get_LinePosition
int Newtonsoft::Json::Linq::JToken::Newtonsoft_Json_IJsonLineInfo_get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::Newtonsoft.Json.IJsonLineInfo.get_LinePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken..cctor
void Newtonsoft::Json::Linq::JToken::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.CloneToken
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JToken::CloneToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::CloneToken");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.Children
::Newtonsoft::Json::Linq::JEnumerable_1<::Newtonsoft::Json::Linq::JToken*> Newtonsoft::Json::Linq::JToken::Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::Children");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JEnumerable_1<::Newtonsoft::Json::Linq::JToken*>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.Remove
void Newtonsoft::Json::Linq::JToken::Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.Replace
void Newtonsoft::Json::Linq::JToken::Replace(::Newtonsoft::Json::Linq::JToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.WriteTo
void Newtonsoft::Json::Linq::JToken::WriteTo(::Newtonsoft::Json::JsonWriter* writer, ::ArrayW<::Newtonsoft::Json::JsonConverter*> converters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::WriteTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, converters);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.ToString
::StringW Newtonsoft::Json::Linq::JToken::ToString(::Newtonsoft::Json::Formatting formatting, ::ArrayW<::Newtonsoft::Json::JsonConverter*> converters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formatting), ::il2cpp_utils::ExtractType(converters)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, formatting, converters);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.EnsureValue
::Newtonsoft::Json::Linq::JValue* Newtonsoft::Json::Linq::JToken::EnsureValue(::Newtonsoft::Json::Linq::JToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::EnsureValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "EnsureValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JValue*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.GetType
::StringW Newtonsoft::Json::Linq::JToken::GetType(::Newtonsoft::Json::Linq::JToken* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.ValidateToken
bool Newtonsoft::Json::Linq::JToken::ValidateToken(::Newtonsoft::Json::Linq::JToken* o, ::ArrayW<::Newtonsoft::Json::Linq::JTokenType> validTypes, bool nullable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::ValidateToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "ValidateToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(validTypes), ::il2cpp_utils::ExtractType(nullable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, o, validTypes, nullable);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::DateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<bool>() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator int64_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<::System::DateTime>() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTime>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<::System::DateTimeOffset>() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTimeOffset>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<::System::Decimal>() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::Decimal>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<double>() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<double>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<::Il2CppChar>() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator int16_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator uint16_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::Il2CppChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator uint8_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator int8_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<int>() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<int16_t>() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int16_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<uint16_t>() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<uint16_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<uint8_t>() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<int8_t>() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<int64_t>() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<float>() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<float>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<uint>() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<uint64_t>() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<uint64_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::StringW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator uint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator uint64_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<::System::Guid>() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::Guid>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::TimeSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<::System::TimeSpan>() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::TimeSpan>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.op_Explicit
Newtonsoft::Json::Linq::JToken::operator ::System::Uri*() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.ToBigInteger
::System::Numerics::BigInteger Newtonsoft::Json::Linq::JToken::ToBigInteger(::Newtonsoft::Json::Linq::JToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::ToBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "ToBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable
::System::Nullable_1<::System::Numerics::BigInteger> Newtonsoft::Json::Linq::JToken::ToBigIntegerNullable(::Newtonsoft::Json::Linq::JToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::ToBigIntegerNullable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "ToBigIntegerNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::Numerics::BigInteger>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Newtonsoft::Json::Linq::JToken::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::Linq::JToken*>* Newtonsoft::Json::Linq::JToken::System_Collections_Generic_IEnumerable$Newtonsoft_Json_Linq_JToken$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::Linq::JToken*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.CreateReader
::Newtonsoft::Json::JsonReader* Newtonsoft::Json::Linq::JToken::CreateReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::CreateReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonReader*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.FromObjectInternal
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JToken::FromObjectInternal(::Il2CppObject* o, ::Newtonsoft::Json::JsonSerializer* jsonSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::FromObjectInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "FromObjectInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(jsonSerializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, o, jsonSerializer);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.ToObject
::Il2CppObject* Newtonsoft::Json::Linq::JToken::ToObject(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::ToObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.ToObject
::Il2CppObject* Newtonsoft::Json::Linq::JToken::ToObject(::System::Type* objectType, ::Newtonsoft::Json::JsonSerializer* jsonSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::ToObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(jsonSerializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, objectType, jsonSerializer);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.ReadFrom
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JToken::ReadFrom(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::ReadFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "ReadFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.ReadFrom
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JToken::ReadFrom(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Linq::JsonLoadSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::ReadFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JToken", "ReadFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, settings);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.SetLineInfo
void Newtonsoft::Json::Linq::JToken::SetLineInfo(::Newtonsoft::Json::IJsonLineInfo* lineInfo, ::Newtonsoft::Json::Linq::JsonLoadSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::SetLineInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLineInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineInfo), ::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineInfo, settings);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.SetLineInfo
void Newtonsoft::Json::Linq::JToken::SetLineInfo(int lineNumber, int linePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::SetLineInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLineInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineNumber), ::il2cpp_utils::ExtractType(linePosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineNumber, linePosition);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.IJsonLineInfo.HasLineInfo
bool Newtonsoft::Json::Linq::JToken::Newtonsoft_Json_IJsonLineInfo_HasLineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::Newtonsoft.Json.IJsonLineInfo.HasLineInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.GetMetaObject
::System::Dynamic::DynamicMetaObject* Newtonsoft::Json::Linq::JToken::GetMetaObject(::System::Linq::Expressions::Expression* parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::GetMetaObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Dynamic::DynamicMetaObject*, false>(this, ___internal__method, parameter);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
::System::Dynamic::DynamicMetaObject* Newtonsoft::Json::Linq::JToken::System_Dynamic_IDynamicMetaObjectProvider_GetMetaObject(::System::Linq::Expressions::Expression* parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Dynamic::DynamicMetaObject*, false>(this, ___internal__method, parameter);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.System.ICloneable.Clone
::Il2CppObject* Newtonsoft::Json::Linq::JToken::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.DeepClone
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JToken::DeepClone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::DeepClone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeepClone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.AddAnnotation
void Newtonsoft::Json::Linq::JToken::AddAnnotation(::Il2CppObject* annotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::AddAnnotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAnnotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(annotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, annotation);
}
// Autogenerated method: Newtonsoft.Json.Linq.JToken.ToString
::StringW Newtonsoft::Json::Linq::JToken::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JToken/Newtonsoft.Json.Linq.LineInfoAnnotation
#include "Newtonsoft/Json/Linq/JToken_LineInfoAnnotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 LineNumber
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Linq::JToken::LineInfoAnnotation::dyn_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::LineInfoAnnotation::dyn_LineNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LineNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 LinePosition
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Linq::JToken::LineInfoAnnotation::dyn_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::LineInfoAnnotation::dyn_LinePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LinePosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Linq.JTokenReader
#include "Newtonsoft/Json/Linq/JTokenReader.hpp"
// Including type: Newtonsoft.Json.Linq.JToken
#include "Newtonsoft/Json/Linq/JToken.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: Newtonsoft.Json.Linq.JContainer
#include "Newtonsoft/Json/Linq/JContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Linq.JToken _root
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JToken*& Newtonsoft::Json::Linq::JTokenReader::dyn__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenReader::dyn__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_root"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _initialPath
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Linq::JTokenReader::dyn__initialPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenReader::dyn__initialPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Linq.JToken _parent
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JToken*& Newtonsoft::Json::Linq::JTokenReader::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenReader::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Linq.JToken _current
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JToken*& Newtonsoft::Json::Linq::JTokenReader::dyn__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenReader::dyn__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_current"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenReader.get_CurrentToken
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JTokenReader::get_CurrentToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenReader::get_CurrentToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.get_LineNumber
int Newtonsoft::Json::Linq::JTokenReader::Newtonsoft_Json_IJsonLineInfo_get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenReader::Newtonsoft.Json.IJsonLineInfo.get_LineNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JTokenReader*), 22));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.get_LinePosition
int Newtonsoft::Json::Linq::JTokenReader::Newtonsoft_Json_IJsonLineInfo_get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenReader::Newtonsoft.Json.IJsonLineInfo.get_LinePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JTokenReader*), 23));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenReader.ReadOver
bool Newtonsoft::Json::Linq::JTokenReader::ReadOver(::Newtonsoft::Json::Linq::JToken* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenReader::ReadOver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadOver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenReader.ReadToEnd
bool Newtonsoft::Json::Linq::JTokenReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenReader::ReadToEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenReader.GetEndToken
::System::Nullable_1<::Newtonsoft::Json::JsonToken> Newtonsoft::Json::Linq::JTokenReader::GetEndToken(::Newtonsoft::Json::Linq::JContainer* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenReader::GetEndToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEndToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::Newtonsoft::Json::JsonToken>, false>(this, ___internal__method, c);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenReader.ReadInto
bool Newtonsoft::Json::Linq::JTokenReader::ReadInto(::Newtonsoft::Json::Linq::JContainer* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenReader::ReadInto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenReader.SetEnd
bool Newtonsoft::Json::Linq::JTokenReader::SetEnd(::Newtonsoft::Json::Linq::JContainer* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenReader::SetEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenReader.SetToken
void Newtonsoft::Json::Linq::JTokenReader::SetToken(::Newtonsoft::Json::Linq::JToken* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenReader::SetToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenReader.SafeToString
::StringW Newtonsoft::Json::Linq::JTokenReader::SafeToString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenReader::SafeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo
bool Newtonsoft::Json::Linq::JTokenReader::Newtonsoft_Json_IJsonLineInfo_HasLineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenReader::Newtonsoft.Json.IJsonLineInfo.HasLineInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JTokenReader*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenReader.get_Path
::StringW Newtonsoft::Json::Linq::JTokenReader::get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenReader::get_Path");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenReader.Read
bool Newtonsoft::Json::Linq::JTokenReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JTokenType
#include "Newtonsoft/Json/Linq/JTokenType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType None
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType None
void Newtonsoft::Json::Linq::JTokenType::_set_None(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Object
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Object
void Newtonsoft::Json::Linq::JTokenType::_set_Object(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Array
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Array
void Newtonsoft::Json::Linq::JTokenType::_set_Array(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Constructor
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Constructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Constructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Constructor"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Constructor
void Newtonsoft::Json::Linq::JTokenType::_set_Constructor(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Constructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Constructor", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Property
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Property");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Property"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Property
void Newtonsoft::Json::Linq::JTokenType::_set_Property(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Property");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Property", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Comment
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Comment
void Newtonsoft::Json::Linq::JTokenType::_set_Comment(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Integer
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Integer"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Integer
void Newtonsoft::Json::Linq::JTokenType::_set_Integer(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Integer", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Float
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Float"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Float
void Newtonsoft::Json::Linq::JTokenType::_set_Float(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType String
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "String"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType String
void Newtonsoft::Json::Linq::JTokenType::_set_String(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Boolean
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Boolean
void Newtonsoft::Json::Linq::JTokenType::_set_Boolean(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Null
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Null"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Null
void Newtonsoft::Json::Linq::JTokenType::_set_Null(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Undefined
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Undefined
void Newtonsoft::Json::Linq::JTokenType::_set_Undefined(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Undefined", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Date
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Date"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Date
void Newtonsoft::Json::Linq::JTokenType::_set_Date(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Date", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Raw
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Raw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Raw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Raw"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Raw
void Newtonsoft::Json::Linq::JTokenType::_set_Raw(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Raw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Raw", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Bytes
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Bytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Bytes"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Bytes
void Newtonsoft::Json::Linq::JTokenType::_set_Bytes(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Bytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Bytes", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Guid
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Guid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Guid"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Guid
void Newtonsoft::Json::Linq::JTokenType::_set_Guid(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Guid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Guid", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Uri
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Uri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Uri"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Uri
void Newtonsoft::Json::Linq::JTokenType::_set_Uri(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Uri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Uri", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType TimeSpan
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_TimeSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_TimeSpan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "TimeSpan"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType TimeSpan
void Newtonsoft::Json::Linq::JTokenType::_set_TimeSpan(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_TimeSpan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "TimeSpan", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Linq::JTokenType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Linq.JTokenWriter
#include "Newtonsoft/Json/Linq/JTokenWriter.hpp"
// Including type: Newtonsoft.Json.Linq.JContainer
#include "Newtonsoft/Json/Linq/JContainer.hpp"
// Including type: Newtonsoft.Json.Linq.JValue
#include "Newtonsoft/Json/Linq/JValue.hpp"
// Including type: Newtonsoft.Json.Linq.JToken
#include "Newtonsoft/Json/Linq/JToken.hpp"
// Including type: Newtonsoft.Json.JsonToken
#include "Newtonsoft/Json/JsonToken.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Linq.JContainer _token
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JContainer*& Newtonsoft::Json::Linq::JTokenWriter::dyn__token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::dyn__token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_token"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Linq.JContainer _parent
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JContainer*& Newtonsoft::Json::Linq::JTokenWriter::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Linq.JValue _value
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JValue*& Newtonsoft::Json::Linq::JTokenWriter::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JValue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Linq.JToken _current
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JToken*& Newtonsoft::Json::Linq::JTokenWriter::dyn__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::dyn__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_current"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.get_Token
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JTokenWriter::get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::get_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.AddParent
void Newtonsoft::Json::Linq::JTokenWriter::AddParent(::Newtonsoft::Json::Linq::JContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::AddParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.RemoveParent
void Newtonsoft::Json::Linq::JTokenWriter::RemoveParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::RemoveParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.AddValue
void Newtonsoft::Json::Linq::JTokenWriter::AddValue(::Il2CppObject* value, ::Newtonsoft::Json::JsonToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, token);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.AddValue
void Newtonsoft::Json::Linq::JTokenWriter::AddValue(::Newtonsoft::Json::Linq::JValue* value, ::Newtonsoft::Json::JsonToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, token);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.Close
void Newtonsoft::Json::Linq::JTokenWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject
void Newtonsoft::Json::Linq::JTokenWriter::WriteStartObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteStartObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray
void Newtonsoft::Json::Linq::JTokenWriter::WriteStartArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteStartArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteStartConstructor
void Newtonsoft::Json::Linq::JTokenWriter::WriteStartConstructor(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteStartConstructor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteEnd
void Newtonsoft::Json::Linq::JTokenWriter::WriteEnd(::Newtonsoft::Json::JsonToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName
void Newtonsoft::Json::Linq::JTokenWriter::WritePropertyName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WritePropertyName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 62));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteNull
void Newtonsoft::Json::Linq::JTokenWriter::WriteNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteUndefined
void Newtonsoft::Json::Linq::JTokenWriter::WriteUndefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteUndefined");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteRaw
void Newtonsoft::Json::Linq::JTokenWriter::WriteRaw(::StringW json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, json);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteComment
void Newtonsoft::Json::Linq::JTokenWriter::WriteComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 63));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 60));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteValue
void Newtonsoft::Json::Linq::JTokenWriter::WriteValue(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 61));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JTokenWriter.WriteToken
void Newtonsoft::Json::Linq::JTokenWriter::WriteToken(::Newtonsoft::Json::JsonReader* reader, bool writeChildren, bool writeDateConstructorAsDate, bool writeComments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenWriter::WriteToken");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonWriter*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, writeChildren, writeDateConstructorAsDate, writeComments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Linq.JValue
#include "Newtonsoft/Json/Linq/JValue.hpp"
// Including type: Newtonsoft.Json.Linq.JValue/Newtonsoft.Json.Linq.JValueDynamicProxy
#include "Newtonsoft/Json/Linq/JValue_JValueDynamicProxy.hpp"
// Including type: System.Numerics.BigInteger
#include "System/Numerics/BigInteger.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
// Including type: System.Dynamic.DynamicMetaObject
#include "System/Dynamic/DynamicMetaObject.hpp"
// Including type: System.Linq.Expressions.Expression
#include "System/Linq/Expressions/Expression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Linq.JTokenType _valueType
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JTokenType& Newtonsoft::Json::Linq::JValue::dyn__valueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::dyn__valueType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valueType"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JTokenType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::Linq::JValue::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.get_Value
::Il2CppObject* Newtonsoft::Json::Linq::JValue::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.CompareBigInteger
int Newtonsoft::Json::Linq::JValue::CompareBigInteger(::System::Numerics::BigInteger i1, ::Il2CppObject* i2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::CompareBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JValue", "CompareBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i1), ::il2cpp_utils::ExtractType(i2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i1, i2);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.Compare
int Newtonsoft::Json::Linq::JValue::Compare(::Newtonsoft::Json::Linq::JTokenType valueType, ::Il2CppObject* objA, ::Il2CppObject* objB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JValue", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueType), ::il2cpp_utils::ExtractType(objA), ::il2cpp_utils::ExtractType(objB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, valueType, objA, objB);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.CompareFloat
int Newtonsoft::Json::Linq::JValue::CompareFloat(::Il2CppObject* objA, ::Il2CppObject* objB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::CompareFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JValue", "CompareFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objA), ::il2cpp_utils::ExtractType(objB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objA, objB);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.CreateComment
::Newtonsoft::Json::Linq::JValue* Newtonsoft::Json::Linq::JValue::CreateComment(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::CreateComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JValue", "CreateComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JValue*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.CreateNull
::Newtonsoft::Json::Linq::JValue* Newtonsoft::Json::Linq::JValue::CreateNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::CreateNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JValue", "CreateNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JValue*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.CreateUndefined
::Newtonsoft::Json::Linq::JValue* Newtonsoft::Json::Linq::JValue::CreateUndefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::CreateUndefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JValue", "CreateUndefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JValue*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.GetValueType
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JValue::GetValueType(::System::Nullable_1<::Newtonsoft::Json::Linq::JTokenType> current, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::GetValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JValue", "GetValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JTokenType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.GetStringValueType
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JValue::GetStringValueType(::System::Nullable_1<::Newtonsoft::Json::Linq::JTokenType> current) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::GetStringValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JValue", "GetStringValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JTokenType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.ValuesEquals
bool Newtonsoft::Json::Linq::JValue::ValuesEquals(::Newtonsoft::Json::Linq::JValue* v1, ::Newtonsoft::Json::Linq::JValue* v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::ValuesEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JValue", "ValuesEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v1, v2);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.Equals
bool Newtonsoft::Json::Linq::JValue::Equals(::Newtonsoft::Json::Linq::JValue* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 19));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.ToString
::StringW Newtonsoft::Json::Linq::JValue::ToString(::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, formatProvider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.ToString
::StringW Newtonsoft::Json::Linq::JValue::ToString(::StringW format, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, formatProvider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo
int Newtonsoft::Json::Linq::JValue::System_IComparable_CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IComparable.CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.CompareTo
int Newtonsoft::Json::Linq::JValue::CompareTo(::Newtonsoft::Json::Linq::JValue* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 22));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode
::System::TypeCode Newtonsoft::Json::Linq::JValue::System_IConvertible_GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.GetTypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean
bool Newtonsoft::Json::Linq::JValue::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar
::Il2CppChar Newtonsoft::Json::Linq::JValue::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte
int8_t Newtonsoft::Json::Linq::JValue::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte
uint8_t Newtonsoft::Json::Linq::JValue::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 27));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16
int16_t Newtonsoft::Json::Linq::JValue::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16
uint16_t Newtonsoft::Json::Linq::JValue::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 29));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32
int Newtonsoft::Json::Linq::JValue::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32
uint Newtonsoft::Json::Linq::JValue::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 31));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64
int64_t Newtonsoft::Json::Linq::JValue::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 32));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64
uint64_t Newtonsoft::Json::Linq::JValue::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 33));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle
float Newtonsoft::Json::Linq::JValue::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 34));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble
double Newtonsoft::Json::Linq::JValue::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 35));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal
::System::Decimal Newtonsoft::Json::Linq::JValue::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime
::System::DateTime Newtonsoft::Json::Linq::JValue::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType
::Il2CppObject* Newtonsoft::Json::Linq::JValue::System_IConvertible_ToType(::System::Type* conversionType, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, conversionType, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.get_HasValues
bool Newtonsoft::Json::Linq::JValue::get_HasValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::get_HasValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.get_Type
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JValue::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JTokenType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.CloneToken
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JValue::CloneToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::CloneToken");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.WriteTo
void Newtonsoft::Json::Linq::JValue::WriteTo(::Newtonsoft::Json::JsonWriter* writer, ::ArrayW<::Newtonsoft::Json::JsonConverter*> converters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::WriteTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, converters);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.Equals
bool Newtonsoft::Json::Linq::JValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.GetHashCode
int Newtonsoft::Json::Linq::JValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.ToString
::StringW Newtonsoft::Json::Linq::JValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.GetMetaObject
::System::Dynamic::DynamicMetaObject* Newtonsoft::Json::Linq::JValue::GetMetaObject(::System::Linq::Expressions::Expression* parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::GetMetaObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JToken*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Dynamic::DynamicMetaObject*, false>(this, ___internal__method, parameter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JValue/Newtonsoft.Json.Linq.JValueDynamicProxy
#include "Newtonsoft/Json/Linq/JValue_JValueDynamicProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.LineInfoHandling
#include "Newtonsoft/Json/Linq/LineInfoHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.LineInfoHandling Ignore
::Newtonsoft::Json::Linq::LineInfoHandling Newtonsoft::Json::Linq::LineInfoHandling::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::LineInfoHandling::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::LineInfoHandling>("Newtonsoft.Json.Linq", "LineInfoHandling", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.LineInfoHandling Ignore
void Newtonsoft::Json::Linq::LineInfoHandling::_set_Ignore(::Newtonsoft::Json::Linq::LineInfoHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::LineInfoHandling::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "LineInfoHandling", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.LineInfoHandling Load
::Newtonsoft::Json::Linq::LineInfoHandling Newtonsoft::Json::Linq::LineInfoHandling::_get_Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::LineInfoHandling::_get_Load");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::LineInfoHandling>("Newtonsoft.Json.Linq", "LineInfoHandling", "Load"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.LineInfoHandling Load
void Newtonsoft::Json::Linq::LineInfoHandling::_set_Load(::Newtonsoft::Json::Linq::LineInfoHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::LineInfoHandling::_set_Load");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "LineInfoHandling", "Load", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Linq::LineInfoHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::LineInfoHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.BinaryConverter
#include "Newtonsoft/Json/Converters/BinaryConverter.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject
#include "Newtonsoft/Json/Utilities/ReflectionObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [NullableAttribute] Offset: 0x677BBC
// Autogenerated static field getter
// Get static field: static private Newtonsoft.Json.Utilities.ReflectionObject _reflectionObject
::Newtonsoft::Json::Utilities::ReflectionObject* Newtonsoft::Json::Converters::BinaryConverter::_get__reflectionObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::_get__reflectionObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ReflectionObject*>("Newtonsoft.Json.Converters", "BinaryConverter", "_reflectionObject"));
}
// Autogenerated static field setter
// Set static field: static private Newtonsoft.Json.Utilities.ReflectionObject _reflectionObject
void Newtonsoft::Json::Converters::BinaryConverter::_set__reflectionObject(::Newtonsoft::Json::Utilities::ReflectionObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::_set__reflectionObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "BinaryConverter", "_reflectionObject", value));
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.GetByteArray
::ArrayW<uint8_t> Newtonsoft::Json::Converters::BinaryConverter::GetByteArray(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::GetByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.EnsureReflectionObject
void Newtonsoft::Json::Converters::BinaryConverter::EnsureReflectionObject(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::EnsureReflectionObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "BinaryConverter", "EnsureReflectionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.ReadByteArray
::ArrayW<uint8_t> Newtonsoft::Json::Converters::BinaryConverter::ReadByteArray(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::ReadByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.WriteJson
void Newtonsoft::Json::Converters::BinaryConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::BinaryConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.CanConvert
bool Newtonsoft::Json::Converters::BinaryConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.BsonObjectIdConverter
#include "Newtonsoft/Json/Converters/BsonObjectIdConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.BsonObjectIdConverter.WriteJson
void Newtonsoft::Json::Converters::BsonObjectIdConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BsonObjectIdConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.BsonObjectIdConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::BsonObjectIdConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BsonObjectIdConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.BsonObjectIdConverter.CanConvert
bool Newtonsoft::Json::Converters::BsonObjectIdConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BsonObjectIdConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.DataSetConverter
#include "Newtonsoft/Json/Converters/DataSetConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.DataSetConverter.WriteJson
void Newtonsoft::Json::Converters::DataSetConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataSetConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.DataSetConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::DataSetConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataSetConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.DataSetConverter.CanConvert
bool Newtonsoft::Json::Converters::DataSetConverter::CanConvert(::System::Type* valueType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataSetConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, valueType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.DataTableConverter
#include "Newtonsoft/Json/Converters/DataTableConverter.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.DataTableConverter.CreateRow
void Newtonsoft::Json::Converters::DataTableConverter::CreateRow(::Newtonsoft::Json::JsonReader* reader, ::System::Data::DataTable* dt, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataTableConverter::CreateRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "DataTableConverter", "CreateRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(dt), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, dt, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType
::System::Type* Newtonsoft::Json::Converters::DataTableConverter::GetColumnDataType(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataTableConverter::GetColumnDataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "DataTableConverter", "GetColumnDataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.DataTableConverter.WriteJson
void Newtonsoft::Json::Converters::DataTableConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataTableConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.DataTableConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::DataTableConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataTableConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.DataTableConverter.CanConvert
bool Newtonsoft::Json::Converters::DataTableConverter::CanConvert(::System::Type* valueType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataTableConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, valueType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.Union
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_Union.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.UnionCase
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_UnionCase.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.<>c__DisplayClass8_0
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_--c__DisplayClass8_0.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.<>c__DisplayClass9_0
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_--c__DisplayClass9_0.hpp"
// Including type: Newtonsoft.Json.Utilities.ThreadSafeStore`2
#include "Newtonsoft/Json/Utilities/ThreadSafeStore_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.Union> UnionCache
::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union*>* Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_get_UnionCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_get_UnionCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union*>*>("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "UnionCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.Union> UnionCache
void Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_set_UnionCache(::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_set_UnionCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "UnionCache", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,System.Type> UnionTypeLookupCache
::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::System::Type*>* Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_get_UnionTypeLookupCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_get_UnionTypeLookupCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::System::Type*>*>("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "UnionTypeLookupCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,System.Type> UnionTypeLookupCache
void Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_set_UnionTypeLookupCache(::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_set_UnionTypeLookupCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "UnionTypeLookupCache", value));
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter..cctor
void Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnionTypeLookup
::System::Type* Newtonsoft::Json::Converters::DiscriminatedUnionConverter::CreateUnionTypeLookup(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::CreateUnionTypeLookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "CreateUnionTypeLookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion
::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union* Newtonsoft::Json::Converters::DiscriminatedUnionConverter::CreateUnion(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::CreateUnion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "CreateUnion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson
void Newtonsoft::Json::Converters::DiscriminatedUnionConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::DiscriminatedUnionConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert
bool Newtonsoft::Json::Converters::DiscriminatedUnionConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.Union
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_Union.hpp"
// Including type: Newtonsoft.Json.Utilities.FSharpFunction
#include "Newtonsoft/Json/Utilities/FSharpFunction.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.UnionCase
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_UnionCase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Newtonsoft.Json.Utilities.FSharpFunction TagReader
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::FSharpFunction*& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union::dyn_TagReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union::dyn_TagReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TagReader"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::FSharpFunction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.UnionCase> Cases
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase*>*& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union::dyn_Cases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union::dyn_Cases");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Cases"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.UnionCase
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_UnionCase.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: Newtonsoft.Json.Utilities.FSharpFunction
#include "Newtonsoft/Json/Utilities/FSharpFunction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Tag
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Tag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Reflection.PropertyInfo[] Fields
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Reflection::PropertyInfo*>& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Fields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Fields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Fields"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Reflection::PropertyInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Newtonsoft.Json.Utilities.FSharpFunction FieldReader
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::FSharpFunction*& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_FieldReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_FieldReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FieldReader"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::FSharpFunction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Newtonsoft.Json.Utilities.FSharpFunction Constructor
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::FSharpFunction*& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Constructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Constructor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Constructor"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::FSharpFunction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.<>c__DisplayClass8_0
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_--c__DisplayClass8_0.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.UnionCase
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_UnionCase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 tag
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass8_0::dyn_tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass8_0::dyn_tag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.<>c__DisplayClass8_0.<WriteJson>b__0
bool Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass8_0::$WriteJson$b__0(::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass8_0::<WriteJson>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WriteJson>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.<>c__DisplayClass9_0
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_--c__DisplayClass9_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.UnionCase
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_UnionCase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String caseName
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass9_0::dyn_caseName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass9_0::dyn_caseName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "caseName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.UnionCase,System.Boolean> <>9__0
[[deprecated("Use field access instead!")]] ::System::Func_2<::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase*, bool>*& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass9_0::dyn_$$9__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass9_0::dyn_$$9__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__0"))->offset;
  return *reinterpret_cast<::System::Func_2<::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.<>c__DisplayClass9_0.<ReadJson>b__0
bool Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass9_0::$ReadJson$b__0(::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass9_0::<ReadJson>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ReadJson>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.EntityKeyMemberConverter
#include "Newtonsoft/Json/Converters/EntityKeyMemberConverter.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject
#include "Newtonsoft/Json/Utilities/ReflectionObject.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [NullableAttribute] Offset: 0x677BF8
// Autogenerated static field getter
// Get static field: static private Newtonsoft.Json.Utilities.ReflectionObject _reflectionObject
::Newtonsoft::Json::Utilities::ReflectionObject* Newtonsoft::Json::Converters::EntityKeyMemberConverter::_get__reflectionObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::_get__reflectionObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ReflectionObject*>("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "_reflectionObject"));
}
// Autogenerated static field setter
// Set static field: static private Newtonsoft.Json.Utilities.ReflectionObject _reflectionObject
void Newtonsoft::Json::Converters::EntityKeyMemberConverter::_set__reflectionObject(::Newtonsoft::Json::Utilities::ReflectionObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::_set__reflectionObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "_reflectionObject", value));
}
// Autogenerated method: Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadAndAssertProperty
void Newtonsoft::Json::Converters::EntityKeyMemberConverter::ReadAndAssertProperty(::Newtonsoft::Json::JsonReader* reader, ::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::ReadAndAssertProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "ReadAndAssertProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(propertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, propertyName);
}
// Autogenerated method: Newtonsoft.Json.Converters.EntityKeyMemberConverter.EnsureReflectionObject
void Newtonsoft::Json::Converters::EntityKeyMemberConverter::EnsureReflectionObject(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::EnsureReflectionObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "EnsureReflectionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson
void Newtonsoft::Json::Converters::EntityKeyMemberConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::EntityKeyMemberConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.EntityKeyMemberConverter.CanConvert
bool Newtonsoft::Json::Converters::EntityKeyMemberConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.ExpandoObjectConverter
#include "Newtonsoft/Json/Converters/ExpandoObjectConverter.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.ReadValue
::Il2CppObject* Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadValue(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.ReadList
::Il2CppObject* Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadList(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.ReadObject
::Il2CppObject* Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadObject(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.get_CanWrite
bool Newtonsoft::Json::Converters::ExpandoObjectConverter::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.WriteJson
void Newtonsoft::Json::Converters::ExpandoObjectConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.CanConvert
bool Newtonsoft::Json::Converters::ExpandoObjectConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.KeyValuePairConverter
#include "Newtonsoft/Json/Converters/KeyValuePairConverter.hpp"
// Including type: Newtonsoft.Json.Utilities.ThreadSafeStore`2
#include "Newtonsoft/Json/Utilities/ThreadSafeStore_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject
#include "Newtonsoft/Json/Utilities/ReflectionObject.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,Newtonsoft.Json.Utilities.ReflectionObject> ReflectionObjectPerType
::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Utilities::ReflectionObject*>* Newtonsoft::Json::Converters::KeyValuePairConverter::_get_ReflectionObjectPerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::_get_ReflectionObjectPerType");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Utilities::ReflectionObject*>*>("Newtonsoft.Json.Converters", "KeyValuePairConverter", "ReflectionObjectPerType")));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,Newtonsoft.Json.Utilities.ReflectionObject> ReflectionObjectPerType
void Newtonsoft::Json::Converters::KeyValuePairConverter::_set_ReflectionObjectPerType(::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Utilities::ReflectionObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::_set_ReflectionObjectPerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "KeyValuePairConverter", "ReflectionObjectPerType", value));
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter..cctor
void Newtonsoft::Json::Converters::KeyValuePairConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "KeyValuePairConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.InitializeReflectionObject
::Newtonsoft::Json::Utilities::ReflectionObject* Newtonsoft::Json::Converters::KeyValuePairConverter::InitializeReflectionObject(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::InitializeReflectionObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "KeyValuePairConverter", "InitializeReflectionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::ReflectionObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.WriteJson
void Newtonsoft::Json::Converters::KeyValuePairConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::KeyValuePairConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.CanConvert
bool Newtonsoft::Json::Converters::KeyValuePairConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.RegexConverter
#include "Newtonsoft/Json/Converters/RegexConverter.hpp"
// Including type: System.Text.RegularExpressions.RegexOptions
#include "System/Text/RegularExpressions/RegexOptions.hpp"
// Including type: Newtonsoft.Json.Bson.BsonWriter
#include "Newtonsoft/Json/Bson/BsonWriter.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.HasFlag
bool Newtonsoft::Json::Converters::RegexConverter::HasFlag(::System::Text::RegularExpressions::RegexOptions options, ::System::Text::RegularExpressions::RegexOptions flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::HasFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, options, flag);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.WriteBson
void Newtonsoft::Json::Converters::RegexConverter::WriteBson(::Newtonsoft::Json::Bson::BsonWriter* writer, ::System::Text::RegularExpressions::Regex* regex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::WriteBson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(regex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, regex);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.WriteJson
void Newtonsoft::Json::Converters::RegexConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::System::Text::RegularExpressions::Regex* regex, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::WriteJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(regex), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, regex, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.ReadRegexString
::Il2CppObject* Newtonsoft::Json::Converters::RegexConverter::ReadRegexString(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::ReadRegexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRegexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject
::System::Text::RegularExpressions::Regex* Newtonsoft::Json::Converters::RegexConverter::ReadRegexObject(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::ReadRegexObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRegexObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Regex*, false>(this, ___internal__method, reader, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.IsRegex
bool Newtonsoft::Json::Converters::RegexConverter::IsRegex(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::IsRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.WriteJson
void Newtonsoft::Json::Converters::RegexConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::RegexConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.CanConvert
bool Newtonsoft::Json::Converters::RegexConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlDocumentWrapper
#include "Newtonsoft/Json/Converters/XmlDocumentWrapper.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlDocument _document
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDocument*& Newtonsoft::Json::Converters::XmlDocumentWrapper::dyn__document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::dyn__document");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_document"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.get_DocumentElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlDocumentWrapper::get_DocumentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::get_DocumentElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateComment(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateComment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateTextNode(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateTextNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateCDataSection(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateCDataSection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateSignificantWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateSignificantWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDeclaration(::StringW version, ::StringW encoding, ::StringW standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, version, encoding, standalone);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDocumentType(::StringW name, ::StringW publicId, ::StringW systemId, ::StringW internalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDocumentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, publicId, systemId, internalSubset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateProcessingInstruction(::StringW target, ::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, target, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement(::StringW elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement(::StringW qualifiedName, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, qualifiedName, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute(::StringW qualifiedName, ::StringW namespaceUri, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, qualifiedName, namespaceUri, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlElementWrapper
#include "Newtonsoft/Json/Converters/XmlElementWrapper.hpp"
// Including type: System.Xml.XmlElement
#include "System/Xml/XmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlElement _element
[[deprecated("Use field access instead!")]] ::System::Xml::XmlElement*& Newtonsoft::Json::Converters::XmlElementWrapper::dyn__element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::dyn__element");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_element"))->offset;
  return *reinterpret_cast<::System::Xml::XmlElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlElementWrapper.get_IsEmpty
bool Newtonsoft::Json::Converters::XmlElementWrapper::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::get_IsEmpty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlElementWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode
void Newtonsoft::Json::Converters::XmlElementWrapper::SetAttributeNode(::Newtonsoft::Json::Converters::IXmlNode* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::SetAttributeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlElementWrapper*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace
::StringW Newtonsoft::Json::Converters::XmlElementWrapper::GetPrefixOfNamespace(::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::GetPrefixOfNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlElementWrapper*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceUri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlDeclarationWrapper
#include "Newtonsoft/Json/Converters/XmlDeclarationWrapper.hpp"
// Including type: System.Xml.XmlDeclaration
#include "System/Xml/XmlDeclaration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlDeclaration _declaration
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDeclaration*& Newtonsoft::Json::Converters::XmlDeclarationWrapper::dyn__declaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::dyn__declaration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_declaration"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDeclaration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDeclarationWrapper.get_Version
::StringW Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Version");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDeclarationWrapper*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDeclarationWrapper.get_Encoding
::StringW Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Encoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDeclarationWrapper*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDeclarationWrapper.get_Standalone
::StringW Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Standalone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDeclarationWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper
#include "Newtonsoft/Json/Converters/XmlDocumentTypeWrapper.hpp"
// Including type: System.Xml.XmlDocumentType
#include "System/Xml/XmlDocumentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlDocumentType _documentType
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDocumentType*& Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::dyn__documentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::dyn__documentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_documentType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDocumentType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_Name
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_System
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_System");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_Public
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Public");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_InternalSubset
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_InternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_InternalSubset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.XmlNodeWrapper
#include "Newtonsoft/Json/Converters/XmlNodeWrapper.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlNode _node
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNode*& Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_node"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _childNodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__childNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__childNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childNodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _attributes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_WrappedNode
::Il2CppObject* Newtonsoft::Json::Converters::XmlNodeWrapper::get_WrappedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_WrappedNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::XmlNodeWrapper::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XmlNodeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XmlNodeWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XmlNodeWrapper::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_Attributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_HasAttributes
bool Newtonsoft::Json::Converters::XmlNodeWrapper::get_HasAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_HasAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XmlNodeWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.set_Value
void Newtonsoft::Json::Converters::XmlNodeWrapper::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::set_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XmlNodeWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeWrapper::WrapNode(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::WrapNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeWrapper", "WrapNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlDocument
#include "Newtonsoft/Json/Converters/IXmlDocument.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.get_DocumentElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::IXmlDocument::get_DocumentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::get_DocumentElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateComment
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateComment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateTextNode(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateTextNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateCDataSection(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateCDataSection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateSignificantWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateSignificantWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDeclaration(::StringW version, ::StringW encoding, ::StringW standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, version, encoding, standalone);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDocumentType(::StringW name, ::StringW publicId, ::StringW systemId, ::StringW internalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDocumentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, publicId, systemId, internalSubset);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateProcessingInstruction(::StringW target, ::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, target, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::IXmlDocument::CreateElement(::StringW elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::IXmlDocument::CreateElement(::StringW qualifiedName, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, qualifiedName, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute(::StringW qualifiedName, ::StringW namespaceUri, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, qualifiedName, namespaceUri, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlDeclaration
#include "Newtonsoft/Json/Converters/IXmlDeclaration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDeclaration.get_Version
::StringW Newtonsoft::Json::Converters::IXmlDeclaration::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDeclaration::get_Version");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDeclaration*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDeclaration.get_Encoding
::StringW Newtonsoft::Json::Converters::IXmlDeclaration::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDeclaration::get_Encoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDeclaration*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDeclaration.get_Standalone
::StringW Newtonsoft::Json::Converters::IXmlDeclaration::get_Standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDeclaration::get_Standalone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDeclaration*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlDocumentType
#include "Newtonsoft/Json/Converters/IXmlDocumentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_Name
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocumentType*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_System
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_System");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocumentType*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_Public
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_Public");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocumentType*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_InternalSubset
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_InternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_InternalSubset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocumentType*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlElement.get_IsEmpty
bool Newtonsoft::Json::Converters::IXmlElement::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlElement::get_IsEmpty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlElement*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode
void Newtonsoft::Json::Converters::IXmlElement::SetAttributeNode(::Newtonsoft::Json::Converters::IXmlNode* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlElement::SetAttributeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlElement*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace
::StringW Newtonsoft::Json::Converters::IXmlElement::GetPrefixOfNamespace(::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlElement::GetPrefixOfNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlElement*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceUri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.IXmlNode
#include "Newtonsoft/Json/Converters/IXmlNode.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::IXmlNode::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_LocalName
::StringW Newtonsoft::Json::Converters::IXmlNode::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::IXmlNode::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::IXmlNode::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_Attributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlNode::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_Value
::StringW Newtonsoft::Json::Converters::IXmlNode::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::IXmlNode::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_WrappedNode
::Il2CppObject* Newtonsoft::Json::Converters::IXmlNode::get_WrappedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_WrappedNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlNode::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::AppendChild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XDeclarationWrapper
#include "Newtonsoft/Json/Converters/XDeclarationWrapper.hpp"
// Including type: System.Xml.Linq.XDeclaration
#include "System/Xml/Linq/XDeclaration.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.Linq.XDeclaration <Declaration>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XDeclaration*& Newtonsoft::Json::Converters::XDeclarationWrapper::dyn_$Declaration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::dyn_$Declaration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Declaration>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XDeclaration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Declaration
::System::Xml::Linq::XDeclaration* Newtonsoft::Json::Converters::XDeclarationWrapper::get_Declaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Declaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Declaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XDeclaration*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Version
::StringW Newtonsoft::Json::Converters::XDeclarationWrapper::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Version");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDeclarationWrapper*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Encoding
::StringW Newtonsoft::Json::Converters::XDeclarationWrapper::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Encoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDeclarationWrapper*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Standalone
::StringW Newtonsoft::Json::Converters::XDeclarationWrapper::get_Standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Standalone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDeclarationWrapper*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::XDeclarationWrapper::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XDocumentTypeWrapper
#include "Newtonsoft/Json/Converters/XDocumentTypeWrapper.hpp"
// Including type: System.Xml.Linq.XDocumentType
#include "System/Xml/Linq/XDocumentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.Linq.XDocumentType _documentType
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XDocumentType*& Newtonsoft::Json::Converters::XDocumentTypeWrapper::dyn__documentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::dyn__documentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_documentType"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XDocumentType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_Name
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentTypeWrapper*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_System
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_System");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentTypeWrapper*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_Public
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Public");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentTypeWrapper*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_InternalSubset
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_InternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_InternalSubset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentTypeWrapper*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XDocumentWrapper
#include "Newtonsoft/Json/Converters/XDocumentWrapper.hpp"
// Including type: System.Xml.Linq.XDocument
#include "System/Xml/Linq/XDocument.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.get_Document
::System::Xml::Linq::XDocument* Newtonsoft::Json::Converters::XDocumentWrapper::get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::get_Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XDocument*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.get_DocumentElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XDocumentWrapper::get_DocumentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::get_DocumentElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateComment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateTextNode(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateTextNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateCDataSection(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateCDataSection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateSignificantWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateSignificantWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDeclaration(::StringW version, ::StringW encoding, ::StringW standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, version, encoding, standalone);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDocumentType(::StringW name, ::StringW publicId, ::StringW systemId, ::StringW internalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDocumentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, publicId, systemId, internalSubset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateProcessingInstruction(::StringW target, ::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, target, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement(::StringW elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement(::StringW qualifiedName, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, qualifiedName, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute(::StringW qualifiedName, ::StringW namespaceUri, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, qualifiedName, namespaceUri, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XDocumentWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XContainerWrapper*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.get_HasChildNodes
bool Newtonsoft::Json::Converters::XDocumentWrapper::get_HasChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::get_HasChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XContainerWrapper*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XContainerWrapper*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XTextWrapper
#include "Newtonsoft/Json/Converters/XTextWrapper.hpp"
// Including type: System.Xml.Linq.XText
#include "System/Xml/Linq/XText.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XTextWrapper.get_Text
::System::Xml::Linq::XText* Newtonsoft::Json::Converters::XTextWrapper::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XTextWrapper::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XText*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XTextWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XTextWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XTextWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XTextWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XTextWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XTextWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XCommentWrapper
#include "Newtonsoft/Json/Converters/XCommentWrapper.hpp"
// Including type: System.Xml.Linq.XComment
#include "System/Xml/Linq/XComment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XCommentWrapper.get_Text
::System::Xml::Linq::XComment* Newtonsoft::Json::Converters::XCommentWrapper::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XCommentWrapper::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XComment*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XCommentWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XCommentWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XCommentWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XCommentWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XCommentWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XCommentWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XProcessingInstructionWrapper
#include "Newtonsoft/Json/Converters/XProcessingInstructionWrapper.hpp"
// Including type: System.Xml.Linq.XProcessingInstruction
#include "System/Xml/Linq/XProcessingInstruction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XProcessingInstructionWrapper.get_ProcessingInstruction
::System::Xml::Linq::XProcessingInstruction* Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_ProcessingInstruction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_ProcessingInstruction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XProcessingInstruction*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XProcessingInstructionWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XProcessingInstructionWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XContainerWrapper
#include "Newtonsoft/Json/Converters/XContainerWrapper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.Linq.XContainer
#include "System/Xml/Linq/XContainer.hpp"
// Including type: System.Xml.Linq.XObject
#include "System/Xml/Linq/XObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _childNodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XContainerWrapper::dyn__childNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::dyn__childNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childNodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.get_Container
::System::Xml::Linq::XContainer* Newtonsoft::Json::Converters::XContainerWrapper::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::get_Container");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.get_HasChildNodes
bool Newtonsoft::Json::Converters::XContainerWrapper::get_HasChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::get_HasChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XContainerWrapper*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.WrapNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XContainerWrapper::WrapNode(::System::Xml::Linq::XObject* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::WrapNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XContainerWrapper", "WrapNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XContainerWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XContainerWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XContainerWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.XObjectWrapper
#include "Newtonsoft/Json/Converters/XObjectWrapper.hpp"
// Including type: System.Xml.Linq.XObject
#include "System/Xml/Linq/XObject.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.Linq.XObject _xmlObject
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XObject*& Newtonsoft::Json::Converters::XObjectWrapper::dyn__xmlObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::dyn__xmlObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xmlObject"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_WrappedNode
::Il2CppObject* Newtonsoft::Json::Converters::XObjectWrapper::get_WrappedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_WrappedNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::XObjectWrapper::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XObjectWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XObjectWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XObjectWrapper::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_Attributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XObjectWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XObjectWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XObjectWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XObjectWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XAttributeWrapper
#include "Newtonsoft/Json/Converters/XAttributeWrapper.hpp"
// Including type: System.Xml.Linq.XAttribute
#include "System/Xml/Linq/XAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_Attribute
::System::Xml::Linq::XAttribute* Newtonsoft::Json::Converters::XAttributeWrapper::get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_Attribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XAttributeWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XAttributeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XAttributeWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XAttributeWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XElementWrapper
#include "Newtonsoft/Json/Converters/XElementWrapper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.Linq.XElement
#include "System/Xml/Linq/XElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _attributes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XElementWrapper::dyn__attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::dyn__attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_Element
::System::Xml::Linq::XElement* Newtonsoft::Json::Converters::XElementWrapper::get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_Element");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Element", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XElement*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_IsEmpty
bool Newtonsoft::Json::Converters::XElementWrapper::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_IsEmpty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XElementWrapper*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode
void Newtonsoft::Json::Converters::XElementWrapper::SetAttributeNode(::Newtonsoft::Json::Converters::IXmlNode* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::SetAttributeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XElementWrapper*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.HasImplicitNamespaceAttribute
bool Newtonsoft::Json::Converters::XElementWrapper::HasImplicitNamespaceAttribute(::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::HasImplicitNamespaceAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasImplicitNamespaceAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace
::StringW Newtonsoft::Json::Converters::XElementWrapper::GetPrefixOfNamespace(::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::GetPrefixOfNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XElementWrapper*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XElementWrapper::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_Attributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XElementWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XElementWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XElementWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XElementWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XContainerWrapper*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.XmlNodeConverter
#include "Newtonsoft/Json/Converters/XmlNodeConverter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlNode
#include "Newtonsoft/Json/Converters/IXmlNode.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlDocument
#include "Newtonsoft/Json/Converters/IXmlDocument.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> EmptyChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XmlNodeConverter::_get_EmptyChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_get_EmptyChildNodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*>("Newtonsoft.Json.Converters", "XmlNodeConverter", "EmptyChildNodes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> EmptyChildNodes
void Newtonsoft::Json::Converters::XmlNodeConverter::_set_EmptyChildNodes(::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_set_EmptyChildNodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "XmlNodeConverter", "EmptyChildNodes", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <DeserializeRootElementName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$DeserializeRootElementName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$DeserializeRootElementName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DeserializeRootElementName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <WriteArrayAttribute>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$WriteArrayAttribute$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$WriteArrayAttribute$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WriteArrayAttribute>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <OmitRootObject>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$OmitRootObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$OmitRootObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OmitRootObject>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <EncodeSpecialCharacters>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$EncodeSpecialCharacters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$EncodeSpecialCharacters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EncodeSpecialCharacters>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.get_DeserializeRootElementName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::get_DeserializeRootElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::get_DeserializeRootElementName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeserializeRootElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.get_WriteArrayAttribute
bool Newtonsoft::Json::Converters::XmlNodeConverter::get_WriteArrayAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::get_WriteArrayAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteArrayAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.get_OmitRootObject
bool Newtonsoft::Json::Converters::XmlNodeConverter::get_OmitRootObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::get_OmitRootObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OmitRootObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.get_EncodeSpecialCharacters
bool Newtonsoft::Json::Converters::XmlNodeConverter::get_EncodeSpecialCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::get_EncodeSpecialCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncodeSpecialCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter..cctor
void Newtonsoft::Json::Converters::XmlNodeConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeConverter::WrapXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::WrapXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WrapXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces
void Newtonsoft::Json::Converters::XmlNodeConverter::PushParentNamespaces(::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::PushParentNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushParentNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::ResolveFullName(::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ResolveFullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveFullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, node, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::GetPropertyName(::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::GetPropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, node, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.IsArray
bool Newtonsoft::Json::Converters::XmlNodeConverter::IsArray(::Newtonsoft::Json::Converters::IXmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::IsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes
void Newtonsoft::Json::Converters::XmlNodeConverter::SerializeGroupedNodes(::Newtonsoft::Json::JsonWriter* writer, ::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager, bool writePropertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::SerializeGroupedNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeGroupedNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(writePropertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, node, manager, writePropertyName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.WriteGroupedNodes
void Newtonsoft::Json::Converters::XmlNodeConverter::WriteGroupedNodes(::Newtonsoft::Json::JsonWriter* writer, ::System::Xml::XmlNamespaceManager* manager, bool writePropertyName, ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* groupedNodes, ::StringW elementNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::WriteGroupedNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteGroupedNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(writePropertyName), ::il2cpp_utils::ExtractType(groupedNodes), ::il2cpp_utils::ExtractType(elementNames)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, manager, writePropertyName, groupedNodes, elementNames);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.WriteGroupedNodes
void Newtonsoft::Json::Converters::XmlNodeConverter::WriteGroupedNodes(::Newtonsoft::Json::JsonWriter* writer, ::System::Xml::XmlNamespaceManager* manager, bool writePropertyName, ::Newtonsoft::Json::Converters::IXmlNode* node, ::StringW elementNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::WriteGroupedNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteGroupedNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(writePropertyName), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(elementNames)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, manager, writePropertyName, node, elementNames);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode
void Newtonsoft::Json::Converters::XmlNodeConverter::SerializeNode(::Newtonsoft::Json::JsonWriter* writer, ::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager, bool writePropertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::SerializeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(writePropertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, node, manager, writePropertyName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName
bool Newtonsoft::Json::Converters::XmlNodeConverter::AllSameName(::Newtonsoft::Json::Converters::IXmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::AllSameName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeConverter", "AllSameName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue
void Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeValue(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::System::Xml::XmlNamespaceManager* manager, ::StringW propertyName, ::Newtonsoft::Json::Converters::IXmlNode* currentNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(currentNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, manager, propertyName, currentNode);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement
void Newtonsoft::Json::Converters::XmlNodeConverter::ReadElement(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW propertyName, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode, propertyName, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement
void Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW elementName, ::System::Xml::XmlNamespaceManager* manager, ::StringW elementPrefix, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributeNameValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(elementName), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(elementPrefix), ::il2cpp_utils::ExtractType(attributeNameValues)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode, elementName, manager, elementPrefix, attributeNameValues);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute
void Newtonsoft::Json::Converters::XmlNodeConverter::AddAttribute(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW propertyName, ::StringW attributeName, ::System::Xml::XmlNamespaceManager* manager, ::StringW attributePrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::AddAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeConverter", "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(attributeName), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(attributePrefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, document, currentNode, propertyName, attributeName, manager, attributePrefix);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::ConvertTokenToXmlValue(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ConvertTokenToXmlValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeConverter", "ConvertTokenToXmlValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements
void Newtonsoft::Json::Converters::XmlNodeConverter::ReadArrayElements(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::StringW propertyName, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadArrayElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadArrayElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, propertyName, currentNode, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute
void Newtonsoft::Json::Converters::XmlNodeConverter::AddJsonArrayAttribute(::Newtonsoft::Json::Converters::IXmlElement* element, ::Newtonsoft::Json::Converters::IXmlDocument* document) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::AddJsonArrayAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddJsonArrayAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(document)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element, document);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ShouldReadInto
bool Newtonsoft::Json::Converters::XmlNodeConverter::ShouldReadInto(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ShouldReadInto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldReadInto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Newtonsoft::Json::Converters::XmlNodeConverter::ReadAttributeElements(::Newtonsoft::Json::JsonReader* reader, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadAttributeElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAttributeElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method, reader, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction
void Newtonsoft::Json::Converters::XmlNodeConverter::CreateInstruction(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateInstruction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(propertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode, propertyName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType
void Newtonsoft::Json::Converters::XmlNodeConverter::CreateDocumentType(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateDocumentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDocumentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement(::StringW elementName, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::StringW elementPrefix, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementName), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(elementPrefix), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName, document, elementPrefix, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode
void Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeNode(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::System::Xml::XmlNamespaceManager* manager, ::Newtonsoft::Json::Converters::IXmlNode* currentNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(currentNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, manager, currentNode);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute
bool Newtonsoft::Json::Converters::XmlNodeConverter::IsNamespaceAttribute(::StringW attributeName, ByRef<::StringW> prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::IsNamespaceAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsNamespaceAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeName), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeName, byref(prefix));
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes
bool Newtonsoft::Json::Converters::XmlNodeConverter::ValueAttributes(::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ValueAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.IsXObject
bool Newtonsoft::Json::Converters::XmlNodeConverter::IsXObject(::System::Type* valueType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::IsXObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsXObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, valueType);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.IsXmlNode
bool Newtonsoft::Json::Converters::XmlNodeConverter::IsXmlNode(::System::Type* valueType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::IsXmlNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsXmlNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, valueType);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson
void Newtonsoft::Json::Converters::XmlNodeConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::XmlNodeConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert
bool Newtonsoft::Json::Converters::XmlNodeConverter::CanConvert(::System::Type* valueType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, valueType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonObjectId
#include "Newtonsoft/Json/Bson/BsonObjectId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] <Value>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Newtonsoft::Json::Bson::BsonObjectId::dyn_$Value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObjectId::dyn_$Value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Value>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObjectId.get_Value
::ArrayW<uint8_t> Newtonsoft::Json::Bson::BsonObjectId::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObjectId::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonToken
#include "Newtonsoft/Json/Bson/BsonToken.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken <Parent>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonToken::dyn_$Parent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonToken::dyn_$Parent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Parent>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonToken.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonToken::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonToken::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Bson::BsonToken*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonToken.set_Parent
void Newtonsoft::Json::Bson::BsonToken::set_Parent(::Newtonsoft::Json::Bson::BsonToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonToken::set_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonObject
#include "Newtonsoft/Json/Bson/BsonObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.Bson.BsonProperty
#include "Newtonsoft/Json/Bson/BsonProperty.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Newtonsoft.Json.Bson.BsonProperty> _children
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonProperty*>*& Newtonsoft::Json::Bson::BsonObject::dyn__children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObject::dyn__children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_children"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonProperty*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObject.Add
void Newtonsoft::Json::Bson::BsonObject::Add(::StringW name, ::Newtonsoft::Json::Bson::BsonToken* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObject::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, token);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObject.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonObject::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObject::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Bson::BsonToken*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonArray
#include "Newtonsoft/Json/Bson/BsonArray.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Newtonsoft.Json.Bson.BsonToken> _children
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonToken*>*& Newtonsoft::Json::Bson::BsonArray::dyn__children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonArray::dyn__children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_children"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonToken*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonArray.Add
void Newtonsoft::Json::Bson::BsonArray::Add(::Newtonsoft::Json::Bson::BsonToken* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonArray::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonArray.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonArray::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonArray::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Bson::BsonToken*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Bson.BsonValue
#include "Newtonsoft/Json/Bson/BsonValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::Bson::BsonValue::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonValue::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Bson.BsonType _type
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonType& Newtonsoft::Json::Bson::BsonValue::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonValue::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonValue.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonValue::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonValue::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Bson::BsonToken*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Bson.BsonString
#include "Newtonsoft/Json/Bson/BsonString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <IncludeLength>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Bson::BsonString::dyn_$IncludeLength$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonString::dyn_$IncludeLength$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IncludeLength>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonRegex
#include "Newtonsoft/Json/Bson/BsonRegex.hpp"
// Including type: Newtonsoft.Json.Bson.BsonString
#include "Newtonsoft/Json/Bson/BsonString.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonString <Pattern>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonString*& Newtonsoft::Json::Bson::BsonRegex::dyn_$Pattern$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::dyn_$Pattern$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Pattern>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonString <Options>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonString*& Newtonsoft::Json::Bson::BsonRegex::dyn_$Options$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::dyn_$Options$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Options>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonRegex.set_Pattern
void Newtonsoft::Json::Bson::BsonRegex::set_Pattern(::Newtonsoft::Json::Bson::BsonString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::set_Pattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonRegex.set_Options
void Newtonsoft::Json::Bson::BsonRegex::set_Options(::Newtonsoft::Json::Bson::BsonString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::set_Options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonRegex.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonRegex::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Bson::BsonToken*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonProperty
#include "Newtonsoft/Json/Bson/BsonProperty.hpp"
// Including type: Newtonsoft.Json.Bson.BsonString
#include "Newtonsoft/Json/Bson/BsonString.hpp"
// Including type: Newtonsoft.Json.Bson.BsonToken
#include "Newtonsoft/Json/Bson/BsonToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonString <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonString*& Newtonsoft::Json::Bson::BsonProperty::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken <Value>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonProperty::dyn_$Value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::dyn_$Value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Value>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonProperty.set_Name
void Newtonsoft::Json::Bson::BsonProperty::set_Name(::Newtonsoft::Json::Bson::BsonString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonProperty.set_Value
void Newtonsoft::Json::Bson::BsonProperty::set_Value(::Newtonsoft::Json::Bson::BsonToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Number
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Number");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Number"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Number
void Newtonsoft::Json::Bson::BsonType::_set_Number(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Number", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType String
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "String"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType String
void Newtonsoft::Json::Bson::BsonType::_set_String(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Object
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Object
void Newtonsoft::Json::Bson::BsonType::_set_Object(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Array
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Array
void Newtonsoft::Json::Bson::BsonType::_set_Array(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Binary
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Binary
void Newtonsoft::Json::Bson::BsonType::_set_Binary(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Binary", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Undefined
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Undefined
void Newtonsoft::Json::Bson::BsonType::_set_Undefined(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Undefined", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Oid
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Oid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Oid"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Oid
void Newtonsoft::Json::Bson::BsonType::_set_Oid(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Oid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Oid", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Boolean
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Boolean
void Newtonsoft::Json::Bson::BsonType::_set_Boolean(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Date
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Date"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Date
void Newtonsoft::Json::Bson::BsonType::_set_Date(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Date", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Null
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Null"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Null
void Newtonsoft::Json::Bson::BsonType::_set_Null(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Regex
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Regex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Regex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Regex"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Regex
void Newtonsoft::Json::Bson::BsonType::_set_Regex(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Regex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Regex", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Reference
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Reference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Reference"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Reference
void Newtonsoft::Json::Bson::BsonType::_set_Reference(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Reference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Reference", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Code
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Code");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Code"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Code
void Newtonsoft::Json::Bson::BsonType::_set_Code(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Code");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Code", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Symbol
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Symbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Symbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Symbol"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Symbol
void Newtonsoft::Json::Bson::BsonType::_set_Symbol(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Symbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Symbol", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType CodeWScope
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_CodeWScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_CodeWScope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "CodeWScope"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType CodeWScope
void Newtonsoft::Json::Bson::BsonType::_set_CodeWScope(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_CodeWScope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "CodeWScope", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Integer
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Integer"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Integer
void Newtonsoft::Json::Bson::BsonType::_set_Integer(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Integer", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType TimeStamp
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_TimeStamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_TimeStamp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "TimeStamp"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType TimeStamp
void Newtonsoft::Json::Bson::BsonType::_set_TimeStamp(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_TimeStamp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "TimeStamp", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Long
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Long() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Long");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Long"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Long
void Newtonsoft::Json::Bson::BsonType::_set_Long(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Long");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Long", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType MinKey
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_MinKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_MinKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "MinKey"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType MinKey
void Newtonsoft::Json::Bson::BsonType::_set_MinKey(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_MinKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "MinKey", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType MaxKey
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_MaxKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_MaxKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "MaxKey"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType MaxKey
void Newtonsoft::Json::Bson::BsonType::_set_MaxKey(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_MaxKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "MaxKey", value));
}
// Autogenerated instance field getter
// Get instance field: public System.SByte value__
[[deprecated("Use field access instead!")]] int8_t& Newtonsoft::Json::Bson::BsonType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Bson.BsonWriter
#include "Newtonsoft/Json/Bson/BsonWriter.hpp"
// Including type: Newtonsoft.Json.Bson.BsonToken
#include "Newtonsoft/Json/Bson/BsonToken.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken _root
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonWriter::dyn__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::dyn__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_root"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken _parent
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonWriter::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _propertyName
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Bson::BsonWriter::dyn__propertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::dyn__propertyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propertyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.AddValue
void Newtonsoft::Json::Bson::BsonWriter::AddValue(::Il2CppObject* value, ::Newtonsoft::Json::Bson::BsonType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, type);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.AddToken
void Newtonsoft::Json::Bson::BsonWriter::AddToken(::Newtonsoft::Json::Bson::BsonToken* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::AddToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.WriteObjectId
void Newtonsoft::Json::Bson::BsonWriter::WriteObjectId(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::WriteObjectId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteObjectId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.WriteRegex
void Newtonsoft::Json::Bson::BsonWriter::WriteRegex(::StringW pattern, ::StringW options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::WriteRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pattern, options);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InspectorNoteAttribute
#include "GlobalNamespace/InspectorNoteAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String header
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::InspectorNoteAttribute::dyn_header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InspectorNoteAttribute::dyn_header");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "header"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String message
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::InspectorNoteAttribute::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InspectorNoteAttribute::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InspectorCommentAttribute
#include "GlobalNamespace/InspectorCommentAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String message
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::InspectorCommentAttribute::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InspectorCommentAttribute::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.TestScript
#include "OVR/TestScript.hpp"
// Including type: OVR.SoundFXRef
#include "OVR/SoundFXRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXRef testSound1
[[deprecated("Use field access instead!")]] ::OVR::SoundFXRef*& OVR::TestScript::dyn_testSound1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::dyn_testSound1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testSound1"))->offset;
  return *reinterpret_cast<::OVR::SoundFXRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXRef testSound2
[[deprecated("Use field access instead!")]] ::OVR::SoundFXRef*& OVR::TestScript::dyn_testSound2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::dyn_testSound2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testSound2"))->offset;
  return *reinterpret_cast<::OVR::SoundFXRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.TestScript.Start
void OVR::TestScript::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.TestScript.Update
void OVR::TestScript::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AmbienceEmitter
#include "OVR/AmbienceEmitter.hpp"
// Including type: OVR.SoundFXRef
#include "OVR/SoundFXRef.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXRef[] ambientSounds
[[deprecated("Use field access instead!")]] ::ArrayW<::OVR::SoundFXRef*>& OVR::AmbienceEmitter::dyn_ambientSounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_ambientSounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ambientSounds"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundFXRef*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoActivate
[[deprecated("Use field access instead!")]] bool& OVR::AmbienceEmitter::dyn_autoActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_autoActivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoActivate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoRetrigger
[[deprecated("Use field access instead!")]] bool& OVR::AmbienceEmitter::dyn_autoRetrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_autoRetrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoRetrigger"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 randomRetriggerDelaySecs
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& OVR::AmbienceEmitter::dyn_randomRetriggerDelaySecs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_randomRetriggerDelaySecs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomRetriggerDelaySecs"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] playPositions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& OVR::AmbienceEmitter::dyn_playPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_playPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean activated
[[deprecated("Use field access instead!")]] bool& OVR::AmbienceEmitter::dyn_activated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_activated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 playingIdx
[[deprecated("Use field access instead!")]] int& OVR::AmbienceEmitter::dyn_playingIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_playingIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single nextPlayTime
[[deprecated("Use field access instead!")]] float& OVR::AmbienceEmitter::dyn_nextPlayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_nextPlayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextPlayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single fadeTime
[[deprecated("Use field access instead!")]] float& OVR::AmbienceEmitter::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastPosIdx
[[deprecated("Use field access instead!")]] int& OVR::AmbienceEmitter::dyn_lastPosIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_lastPosIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPosIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.AmbienceEmitter.Awake
void OVR::AmbienceEmitter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AmbienceEmitter.Update
void OVR::AmbienceEmitter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AmbienceEmitter.OnTriggerEnter
void OVR::AmbienceEmitter::OnTriggerEnter(::UnityEngine::Collider* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col);
}
// Autogenerated method: OVR.AmbienceEmitter.Play
void OVR::AmbienceEmitter::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AmbienceEmitter.EnableEmitter
void OVR::AmbienceEmitter::EnableEmitter(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::EnableEmitter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableEmitter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.PreloadSounds
#include "OVR/PreloadSounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.PreloadSounds Default
::OVR::PreloadSounds OVR::PreloadSounds::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::PreloadSounds>("OVR", "PreloadSounds", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVR.PreloadSounds Default
void OVR::PreloadSounds::_set_Default(::OVR::PreloadSounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "PreloadSounds", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.PreloadSounds Preload
::OVR::PreloadSounds OVR::PreloadSounds::_get_Preload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_get_Preload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::PreloadSounds>("OVR", "PreloadSounds", "Preload"));
}
// Autogenerated static field setter
// Set static field: static public OVR.PreloadSounds Preload
void OVR::PreloadSounds::_set_Preload(::OVR::PreloadSounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_set_Preload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "PreloadSounds", "Preload", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.PreloadSounds ManualPreload
::OVR::PreloadSounds OVR::PreloadSounds::_get_ManualPreload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_get_ManualPreload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::PreloadSounds>("OVR", "PreloadSounds", "ManualPreload"));
}
// Autogenerated static field setter
// Set static field: static public OVR.PreloadSounds ManualPreload
void OVR::PreloadSounds::_set_ManualPreload(::OVR::PreloadSounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_set_ManualPreload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "PreloadSounds", "ManualPreload", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::PreloadSounds::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.Fade
#include "OVR/Fade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.Fade In
::OVR::Fade OVR::Fade::_get_In() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_get_In");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::Fade>("OVR", "Fade", "In"));
}
// Autogenerated static field setter
// Set static field: static public OVR.Fade In
void OVR::Fade::_set_In(::OVR::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_set_In");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "Fade", "In", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.Fade Out
::OVR::Fade OVR::Fade::_get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_get_Out");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::Fade>("OVR", "Fade", "Out"));
}
// Autogenerated static field setter
// Set static field: static public OVR.Fade Out
void OVR::Fade::_set_Out(::OVR::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_set_Out");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "Fade", "Out", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::Fade::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& OVR::SoundGroup::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFX[] soundList
[[deprecated("Use field access instead!")]] ::ArrayW<::OVR::SoundFX*>& OVR::SoundGroup::dyn_soundList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_soundList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundList"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundFX*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup mixerGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::SoundGroup::dyn_mixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_mixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxPlayingSounds
[[deprecated("Use field access instead!")]] int& OVR::SoundGroup::dyn_maxPlayingSounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_maxPlayingSounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxPlayingSounds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.PreloadSounds preloadAudio
[[deprecated("Use field access instead!")]] ::OVR::PreloadSounds& OVR::SoundGroup::dyn_preloadAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_preloadAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preloadAudio"))->offset;
  return *reinterpret_cast<::OVR::PreloadSounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volumeOverride
[[deprecated("Use field access instead!")]] float& OVR::SoundGroup::dyn_volumeOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_volumeOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeOverride"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 playingSoundCount
[[deprecated("Use field access instead!")]] int& OVR::SoundGroup::dyn_playingSoundCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_playingSoundCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingSoundCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundGroup.IncrementPlayCount
void OVR::SoundGroup::IncrementPlayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::IncrementPlayCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPlayCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundGroup.DecrementPlayCount
void OVR::SoundGroup::DecrementPlayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::DecrementPlayCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecrementPlayCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundGroup.CanPlaySound
bool OVR::SoundGroup::CanPlaySound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::CanPlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanPlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.AudioManager
#include "OVR/AudioManager.hpp"
// Including type: OVR.AudioManager/OVR.Fade
#include "OVR/AudioManager_Fade.hpp"
// Including type: OVR.AudioManager/OVR.<>c__DisplayClass77_0
#include "OVR/AudioManager_--c__DisplayClass77_0.hpp"
// Including type: OVR.AudioManager/OVR.<>c
#include "OVR/AudioManager_--c.hpp"
// Including type: UnityEngine.Audio.AudioMixer
#include "UnityEngine/Audio/AudioMixer.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
// Including type: FastList`1
#include "GlobalNamespace/FastList_1.hpp"
// Including type: OVR.MixerSnapshot
#include "OVR/MixerSnapshot.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: OVR.EmitterChannel
#include "OVR/EmitterChannel.hpp"
// Including type: OVR.SoundPriority
#include "OVR/SoundPriority.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVR.AudioManager theAudioManager
::OVR::AudioManager* OVR::AudioManager::_get_theAudioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_theAudioManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::AudioManager*>("OVR", "AudioManager", "theAudioManager"));
}
// Autogenerated static field setter
// Set static field: static private OVR.AudioManager theAudioManager
void OVR::AudioManager::_set_theAudioManager(::OVR::AudioManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_theAudioManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "theAudioManager", value));
}
// Autogenerated static field getter
// Get static field: static private FastList`1<System.String> names
::GlobalNamespace::FastList_1<::StringW>* OVR::AudioManager::_get_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_names");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FastList_1<::StringW>*>("OVR", "AudioManager", "names"));
}
// Autogenerated static field setter
// Set static field: static private FastList`1<System.String> names
void OVR::AudioManager::_set_names(::GlobalNamespace::FastList_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_names");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "names", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] defaultSound
::ArrayW<::StringW> OVR::AudioManager::_get_defaultSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_defaultSound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("OVR", "AudioManager", "defaultSound"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] defaultSound
void OVR::AudioManager::_set_defaultSound(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_defaultSound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "defaultSound", value));
}
// Autogenerated static field getter
// Get static field: static private OVR.SoundFX nullSound
::OVR::SoundFX* OVR::AudioManager::_get_nullSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_nullSound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundFX*>("OVR", "AudioManager", "nullSound"));
}
// Autogenerated static field setter
// Set static field: static private OVR.SoundFX nullSound
void OVR::AudioManager::_set_nullSound(::OVR::SoundFX* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_nullSound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "nullSound", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean hideWarnings
bool OVR::AudioManager::_get_hideWarnings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_hideWarnings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "hideWarnings"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean hideWarnings
void OVR::AudioManager::_set_hideWarnings(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_hideWarnings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "hideWarnings", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.GameObject soundEmitterParent
::UnityEngine::GameObject* OVR::AudioManager::_get_soundEmitterParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_soundEmitterParent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::GameObject*>("OVR", "AudioManager", "soundEmitterParent"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.GameObject soundEmitterParent
void OVR::AudioManager::_set_soundEmitterParent(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_soundEmitterParent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "soundEmitterParent", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Transform staticListenerPosition
::UnityEngine::Transform* OVR::AudioManager::_get_staticListenerPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_staticListenerPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Transform*>("OVR", "AudioManager", "staticListenerPosition"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Transform staticListenerPosition
void OVR::AudioManager::_set_staticListenerPosition(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_staticListenerPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "staticListenerPosition", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean showPlayingEmitterCount
bool OVR::AudioManager::_get_showPlayingEmitterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_showPlayingEmitterCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "showPlayingEmitterCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean showPlayingEmitterCount
void OVR::AudioManager::_set_showPlayingEmitterCount(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_showPlayingEmitterCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "showPlayingEmitterCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean forceShowEmitterCount
bool OVR::AudioManager::_get_forceShowEmitterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_forceShowEmitterCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "forceShowEmitterCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean forceShowEmitterCount
void OVR::AudioManager::_set_forceShowEmitterCount(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_forceShowEmitterCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "forceShowEmitterCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean soundEnabled
bool OVR::AudioManager::_get_soundEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_soundEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "soundEnabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean soundEnabled
void OVR::AudioManager::_set_soundEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_soundEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "soundEnabled", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.AnimationCurve defaultReverbZoneMix
::UnityEngine::AnimationCurve* OVR::AudioManager::_get_defaultReverbZoneMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_defaultReverbZoneMix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimationCurve*>("OVR", "AudioManager", "defaultReverbZoneMix"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.AnimationCurve defaultReverbZoneMix
void OVR::AudioManager::_set_defaultReverbZoneMix(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_defaultReverbZoneMix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "defaultReverbZoneMix", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean makePersistent
[[deprecated("Use field access instead!")]] bool& OVR::AudioManager::dyn_makePersistent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_makePersistent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makePersistent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableSpatializedAudio
[[deprecated("Use field access instead!")]] bool& OVR::AudioManager::dyn_enableSpatializedAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_enableSpatializedAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatializedAudio"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableSpatializedFastOverride
[[deprecated("Use field access instead!")]] bool& OVR::AudioManager::dyn_enableSpatializedFastOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_enableSpatializedFastOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatializedFastOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixer audioMixer
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixer*& OVR::AudioManager::dyn_audioMixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMixer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMixer"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup defaultMixerGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::AudioManager::dyn_defaultMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_defaultMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup reservedMixerGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::AudioManager::dyn_reservedMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_reservedMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reservedMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup voiceChatMixerGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::AudioManager::dyn_voiceChatMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_voiceChatMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceChatMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean verboseLogging
[[deprecated("Use field access instead!")]] bool& OVR::AudioManager::dyn_verboseLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_verboseLogging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verboseLogging"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxSoundEmitters
[[deprecated("Use field access instead!")]] int& OVR::AudioManager::dyn_maxSoundEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_maxSoundEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSoundEmitters"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volumeSoundFX
[[deprecated("Use field access instead!")]] float& OVR::AudioManager::dyn_volumeSoundFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_volumeSoundFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeSoundFX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single soundFxFadeSecs
[[deprecated("Use field access instead!")]] float& OVR::AudioManager::dyn_soundFxFadeSecs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundFxFadeSecs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFxFadeSecs"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single audioMinFallOffDistance
[[deprecated("Use field access instead!")]] float& OVR::AudioManager::dyn_audioMinFallOffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMinFallOffDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMinFallOffDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single audioMaxFallOffDistance
[[deprecated("Use field access instead!")]] float& OVR::AudioManager::dyn_audioMaxFallOffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMaxFallOffDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMaxFallOffDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundGroup[] soundGroupings
[[deprecated("Use field access instead!")]] ::ArrayW<::OVR::SoundGroup*>& OVR::AudioManager::dyn_soundGroupings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundGroupings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundGroupings"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundGroup*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,OVR.SoundFX> soundFXCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::OVR::SoundFX*>*& OVR::AudioManager::dyn_soundFXCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundFXCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFXCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::OVR::SoundFX*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single audioMaxFallOffDistanceSqr
[[deprecated("Use field access instead!")]] float& OVR::AudioManager::dyn_audioMaxFallOffDistanceSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMaxFallOffDistanceSqr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMaxFallOffDistanceSqr"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundEmitter[] soundEmitters
[[deprecated("Use field access instead!")]] ::ArrayW<::OVR::SoundEmitter*>& OVR::AudioManager::dyn_soundEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundEmitters"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundEmitter*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FastList`1<OVR.SoundEmitter> playingEmitters
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>*& OVR::AudioManager::dyn_playingEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_playingEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingEmitters"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FastList`1<OVR.SoundEmitter> nextFreeEmitters
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>*& OVR::AudioManager::dyn_nextFreeEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_nextFreeEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextFreeEmitters"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.MixerSnapshot currentSnapshot
[[deprecated("Use field access instead!")]] ::OVR::MixerSnapshot*& OVR::AudioManager::dyn_currentSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_currentSnapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSnapshot"))->offset;
  return *reinterpret_cast<::OVR::MixerSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.AudioManager.get_enableSpatialization
bool OVR::AudioManager::get_enableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_enableSpatialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_enableSpatialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_Instance
::OVR::AudioManager* OVR::AudioManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::AudioManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_NearFallOff
float OVR::AudioManager::get_NearFallOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_NearFallOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_NearFallOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_FarFallOff
float OVR::AudioManager::get_FarFallOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_FarFallOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_FarFallOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_EmitterGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::AudioManager::get_EmitterGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_EmitterGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_EmitterGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_ReservedGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::AudioManager::get_ReservedGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_ReservedGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_ReservedGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_VoipGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::AudioManager::get_VoipGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_VoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_VoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_SoundEnabled
bool OVR::AudioManager::get_SoundEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_SoundEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_SoundEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager..cctor
void OVR::AudioManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Awake
void OVR::AudioManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.OnDestroy
void OVR::AudioManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Init
void OVR::AudioManager::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Update
void OVR::AudioManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.RebuildSoundFXCache
void OVR::AudioManager::RebuildSoundFXCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::RebuildSoundFXCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildSoundFXCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.FindSoundFX
::OVR::SoundFX* OVR::AudioManager::FindSoundFX(::StringW name, bool rebuildCache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FindSoundFX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FindSoundFX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(rebuildCache)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::SoundFX*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, rebuildCache);
}
// Autogenerated method: OVR.AudioManager.FindAudioManager
bool OVR::AudioManager::FindAudioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FindAudioManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FindAudioManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.GetGameObject
::UnityEngine::GameObject* OVR::AudioManager::GetGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.NameMinusGroup
::StringW OVR::AudioManager::NameMinusGroup(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::NameMinusGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "NameMinusGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: OVR.AudioManager.GetSoundFXNames
::ArrayW<::StringW> OVR::AudioManager::GetSoundFXNames(::StringW currentValue, ByRef<int> currentIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetSoundFXNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetSoundFXNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentValue), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, currentValue, byref(currentIdx));
}
// Autogenerated method: OVR.AudioManager.CalculateMaxEmittersSize
int OVR::AudioManager::CalculateMaxEmittersSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::CalculateMaxEmittersSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "CalculateMaxEmittersSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.ValidateEmitterIndex
bool OVR::AudioManager::ValidateEmitterIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::ValidateEmitterIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "ValidateEmitterIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: OVR.AudioManager.InitializeSoundSystem
void OVR::AudioManager::InitializeSoundSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::InitializeSoundSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeSoundSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.UpdateFreeEmitters
void OVR::AudioManager::UpdateFreeEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::UpdateFreeEmitters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFreeEmitters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Fmt
::StringW OVR::AudioManager::Fmt(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fmt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fmt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, count);
}
// Autogenerated method: OVR.AudioManager.FmtFree
::StringW OVR::AudioManager::FmtFree(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FmtFree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FmtFree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, count);
}
// Autogenerated method: OVR.AudioManager.OnPreSceneLoad
void OVR::AudioManager::OnPreSceneLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::OnPreSceneLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreSceneLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.ResetFreeEmitters
void OVR::AudioManager::ResetFreeEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::ResetFreeEmitters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetFreeEmitters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.FadeOutSoundChannel
void OVR::AudioManager::FadeOutSoundChannel(int channel, float delaySecs, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeOutSoundChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeOutSoundChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, delaySecs, fadeTime);
}
// Autogenerated method: OVR.AudioManager.StopSound
bool OVR::AudioManager::StopSound(int idx, bool fadeOut, bool stopReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::StopSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "StopSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeOut), ::il2cpp_utils::ExtractType(stopReserved)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeOut, stopReserved);
}
// Autogenerated method: OVR.AudioManager.FadeInSound
void OVR::AudioManager::FadeInSound(int idx, float fadeTime, float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeInSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeInSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeTime, volume);
}
// Autogenerated method: OVR.AudioManager.FadeInSound
void OVR::AudioManager::FadeInSound(int idx, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeInSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeInSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeTime);
}
// Autogenerated method: OVR.AudioManager.FadeOutSound
void OVR::AudioManager::FadeOutSound(int idx, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeOutSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeOutSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeTime);
}
// Autogenerated method: OVR.AudioManager.StopAllSounds
void OVR::AudioManager::StopAllSounds(bool fadeOut, bool stopReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::StopAllSounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "StopAllSounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeOut), ::il2cpp_utils::ExtractType(stopReserved)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fadeOut, stopReserved);
}
// Autogenerated method: OVR.AudioManager.MuteAllSounds
void OVR::AudioManager::MuteAllSounds(bool mute, bool muteReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::MuteAllSounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MuteAllSounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mute), ::il2cpp_utils::ExtractType(muteReserved)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mute, muteReserved);
}
// Autogenerated method: OVR.AudioManager.UnMuteAllSounds
void OVR::AudioManager::UnMuteAllSounds(bool unmute, bool unmuteReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::UnMuteAllSounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnMuteAllSounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unmute), ::il2cpp_utils::ExtractType(unmuteReserved)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unmute, unmuteReserved);
}
// Autogenerated method: OVR.AudioManager.GetEmitterEndTime
float OVR::AudioManager::GetEmitterEndTime(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetEmitterEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetEmitterEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx);
}
// Autogenerated method: OVR.AudioManager.SetEmitterTime
float OVR::AudioManager::SetEmitterTime(int idx, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetEmitterTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetEmitterTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, time);
}
// Autogenerated method: OVR.AudioManager.PlaySound
int OVR::AudioManager::PlaySound(::UnityEngine::AudioClip* clip, float volume, ::OVR::EmitterChannel src, float delay, float pitchVariance, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(pitchVariance), ::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip, volume, src, delay, pitchVariance, loop);
}
// Autogenerated method: OVR.AudioManager.FindFreeEmitter
int OVR::AudioManager::FindFreeEmitter(::OVR::EmitterChannel src, ::OVR::SoundPriority priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FindFreeEmitter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FindFreeEmitter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(priority)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, priority);
}
// Autogenerated method: OVR.AudioManager.PlaySound
int OVR::AudioManager::PlaySound(::OVR::SoundFX* soundFX, ::OVR::EmitterChannel src, float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundFX), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, soundFX, src, delay);
}
// Autogenerated method: OVR.AudioManager.PlaySoundAt
int OVR::AudioManager::PlaySoundAt(::UnityEngine::Vector3 position, ::OVR::SoundFX* soundFX, ::OVR::EmitterChannel src, float delay, float volumeOverride, float pitchMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(soundFX), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(volumeOverride), ::il2cpp_utils::ExtractType(pitchMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, soundFX, src, delay, volumeOverride, pitchMultiplier);
}
// Autogenerated method: OVR.AudioManager.PlayRandomSoundAt
int OVR::AudioManager::PlayRandomSoundAt(::UnityEngine::Vector3 position, ::ArrayW<::UnityEngine::AudioClip*> clips, float volume, ::OVR::EmitterChannel src, float delay, float pitch, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlayRandomSoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlayRandomSoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(clips), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(pitch), ::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, clips, volume, src, delay, pitch, loop);
}
// Autogenerated method: OVR.AudioManager.PlaySoundAt
int OVR::AudioManager::PlaySoundAt(::UnityEngine::Vector3 position, ::UnityEngine::AudioClip* clip, float volume, ::OVR::EmitterChannel src, float delay, float pitch, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(pitch), ::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, clip, volume, src, delay, pitch, loop);
}
// Autogenerated method: OVR.AudioManager.SetOnFinished
void OVR::AudioManager::SetOnFinished(int emitterIdx, ::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitterIdx), ::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, emitterIdx, onFinished);
}
// Autogenerated method: OVR.AudioManager.SetOnFinished
void OVR::AudioManager::SetOnFinished(int emitterIdx, ::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitterIdx), ::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, emitterIdx, onFinished, obj);
}
// Autogenerated method: OVR.AudioManager.AttachSoundToParent
void OVR::AudioManager::AttachSoundToParent(int idx, ::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::AttachSoundToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "AttachSoundToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, parent);
}
// Autogenerated method: OVR.AudioManager.DetachSoundFromParent
void OVR::AudioManager::DetachSoundFromParent(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::DetachSoundFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "DetachSoundFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx);
}
// Autogenerated method: OVR.AudioManager.DetachSoundsFromParent
void OVR::AudioManager::DetachSoundsFromParent(::ArrayW<::OVR::SoundEmitter*> emitters, bool stopSounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::DetachSoundsFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "DetachSoundsFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitters), ::il2cpp_utils::ExtractType(stopSounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, emitters, stopSounds);
}
// Autogenerated method: OVR.AudioManager.SetEmitterMixerGroup
void OVR::AudioManager::SetEmitterMixerGroup(int idx, ::UnityEngine::Audio::AudioMixerGroup* mixerGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetEmitterMixerGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetEmitterMixerGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(mixerGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, mixerGroup);
}
// Autogenerated method: OVR.AudioManager.GetActiveSnapshot
::OVR::MixerSnapshot* OVR::AudioManager::GetActiveSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetActiveSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetActiveSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::MixerSnapshot*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.SetCurrentSnapshot
void OVR::AudioManager::SetCurrentSnapshot(::OVR::MixerSnapshot* mixerSnapshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetCurrentSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetCurrentSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mixerSnapshot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mixerSnapshot);
}
// Autogenerated method: OVR.AudioManager.BlendWithCurrentSnapshot
void OVR::AudioManager::BlendWithCurrentSnapshot(::OVR::MixerSnapshot* blendSnapshot, float weight, float blendTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::BlendWithCurrentSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "BlendWithCurrentSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blendSnapshot), ::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(blendTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blendSnapshot, weight, blendTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AudioManager/OVR.Fade
#include "OVR/AudioManager_Fade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.AudioManager/OVR.Fade In
::OVR::AudioManager::Fade OVR::AudioManager::Fade::_get_In() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_get_In");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::AudioManager::Fade>("OVR", "AudioManager/Fade", "In"));
}
// Autogenerated static field setter
// Set static field: static public OVR.AudioManager/OVR.Fade In
void OVR::AudioManager::Fade::_set_In(::OVR::AudioManager::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_set_In");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager/Fade", "In", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.AudioManager/OVR.Fade Out
::OVR::AudioManager::Fade OVR::AudioManager::Fade::_get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_get_Out");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::AudioManager::Fade>("OVR", "AudioManager/Fade", "Out"));
}
// Autogenerated static field setter
// Set static field: static public OVR.AudioManager/OVR.Fade Out
void OVR::AudioManager::Fade::_set_Out(::OVR::AudioManager::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_set_Out");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager/Fade", "Out", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::AudioManager::Fade::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AudioManager/OVR.<>c__DisplayClass77_0
#include "OVR/AudioManager_--c__DisplayClass77_0.hpp"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.SoundPriority priority
[[deprecated("Use field access instead!")]] ::OVR::SoundPriority& OVR::AudioManager::$$c__DisplayClass77_0::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c__DisplayClass77_0::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::OVR::SoundPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.AudioManager/OVR.<>c__DisplayClass77_0.<FindFreeEmitter>b__0
bool OVR::AudioManager::$$c__DisplayClass77_0::$FindFreeEmitter$b__0(::OVR::SoundEmitter* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c__DisplayClass77_0::<FindFreeEmitter>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindFreeEmitter>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AudioManager/OVR.<>c
#include "OVR/AudioManager_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVR.AudioManager/OVR.<>c <>9
::OVR::AudioManager::$$c* OVR::AudioManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::OVR::AudioManager::$$c*>("OVR", "AudioManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVR.AudioManager/OVR.<>c <>9
void OVR::AudioManager::$$c::_set_$$9(::OVR::AudioManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("OVR", "AudioManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<OVR.SoundEmitter> <>9__77_1
::System::Predicate_1<::OVR::SoundEmitter*>* OVR::AudioManager::$$c::_get_$$9__77_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_get_$$9__77_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::OVR::SoundEmitter*>*>("OVR", "AudioManager/<>c", "<>9__77_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<OVR.SoundEmitter> <>9__77_1
void OVR::AudioManager::$$c::_set_$$9__77_1(::System::Predicate_1<::OVR::SoundEmitter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_set_$$9__77_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("OVR", "AudioManager/<>c", "<>9__77_1", value)));
}
// Autogenerated method: OVR.AudioManager/OVR.<>c..cctor
void OVR::AudioManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager/OVR.<>c.<FindFreeEmitter>b__77_1
bool OVR::AudioManager::$$c::$FindFreeEmitter$b__77_1(::OVR::SoundEmitter* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::<FindFreeEmitter>b__77_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindFreeEmitter>b__77_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.EmitterChannel
#include "OVR/EmitterChannel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.EmitterChannel None
::OVR::EmitterChannel OVR::EmitterChannel::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::EmitterChannel>("OVR", "EmitterChannel", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.EmitterChannel None
void OVR::EmitterChannel::_set_None(::OVR::EmitterChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "EmitterChannel", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.EmitterChannel Reserved
::OVR::EmitterChannel OVR::EmitterChannel::_get_Reserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_get_Reserved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::EmitterChannel>("OVR", "EmitterChannel", "Reserved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.EmitterChannel Reserved
void OVR::EmitterChannel::_set_Reserved(::OVR::EmitterChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_set_Reserved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "EmitterChannel", "Reserved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.EmitterChannel Any
::OVR::EmitterChannel OVR::EmitterChannel::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::EmitterChannel>("OVR", "EmitterChannel", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVR.EmitterChannel Any
void OVR::EmitterChannel::_set_Any(::OVR::EmitterChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "EmitterChannel", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::EmitterChannel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.MixerSnapshot
#include "OVR/MixerSnapshot.hpp"
// Including type: UnityEngine.Audio.AudioMixerSnapshot
#include "UnityEngine/Audio/AudioMixerSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerSnapshot snapshot
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerSnapshot*& OVR::MixerSnapshot::dyn_snapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MixerSnapshot::dyn_snapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "snapshot"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single transitionTime
[[deprecated("Use field access instead!")]] float& OVR::MixerSnapshot::dyn_transitionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MixerSnapshot::dyn_transitionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transitionTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.MinMaxAttribute
#include "OVR/MinMaxAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single minDefaultVal
[[deprecated("Use field access instead!")]] float& OVR::MinMaxAttribute::dyn_minDefaultVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_minDefaultVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDefaultVal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDefaultVal
[[deprecated("Use field access instead!")]] float& OVR::MinMaxAttribute::dyn_maxDefaultVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_maxDefaultVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDefaultVal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single min
[[deprecated("Use field access instead!")]] float& OVR::MinMaxAttribute::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single max
[[deprecated("Use field access instead!")]] float& OVR::MinMaxAttribute::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57
#include "OVR/SoundEmitter_-DelayedSyncTo-d__57.hpp"
// Including type: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63
#include "OVR/SoundEmitter_-FadeSoundChannelTo-d__63.hpp"
// Including type: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64
#include "OVR/SoundEmitter_-FadeSoundChannel-d__64.hpp"
// Including type: ONSPAudioSource
#include "GlobalNamespace/ONSPAudioSource.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.AudioVelocityUpdateMode
#include "UnityEngine/AudioVelocityUpdateMode.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: OVR.Fade
#include "OVR/Fade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.EmitterChannel channel
[[deprecated("Use field access instead!")]] ::OVR::EmitterChannel& OVR::SoundEmitter::dyn_channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_channel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channel"))->offset;
  return *reinterpret_cast<::OVR::EmitterChannel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableSpatialization
[[deprecated("Use field access instead!")]] bool& OVR::SoundEmitter::dyn_disableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_disableSpatialization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableSpatialization"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundEmitter/OVR.FadeState state
[[deprecated("Use field access instead!")]] ::OVR::SoundEmitter::FadeState& OVR::SoundEmitter::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter::FadeState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& OVR::SoundEmitter::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundPriority priority
[[deprecated("Use field access instead!")]] ::OVR::SoundPriority& OVR::SoundEmitter::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::OVR::SoundPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ONSPAudioSource osp
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ONSPAudioSource*& OVR::SoundEmitter::dyn_osp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_osp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osp"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPAudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single endPlayTime
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::dyn_endPlayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_endPlayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPlayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform lastParentTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OVR::SoundEmitter::dyn_lastParentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_lastParentTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastParentTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single defaultVolume
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::dyn_defaultVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_defaultVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform defaultParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OVR::SoundEmitter::dyn_defaultParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_defaultParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 originalIdx
[[deprecated("Use field access instead!")]] int& OVR::SoundEmitter::dyn_originalIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_originalIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onFinished
[[deprecated("Use field access instead!")]] ::System::Action*& OVR::SoundEmitter::dyn_onFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_onFinished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFinished"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Object> onFinishedObject
[[deprecated("Use field access instead!")]] ::System::Action_1<::Il2CppObject*>*& OVR::SoundEmitter::dyn_onFinishedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_onFinishedObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFinishedObject"))->offset;
  return *reinterpret_cast<::System::Action_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object onFinishedParam
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OVR::SoundEmitter::dyn_onFinishedParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_onFinishedParam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFinishedParam"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundGroup playingSoundGroup
[[deprecated("Use field access instead!")]] ::OVR::SoundGroup*& OVR::SoundEmitter::dyn_playingSoundGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_playingSoundGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingSoundGroup"))->offset;
  return *reinterpret_cast<::OVR::SoundGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter.get_volume
float OVR::SoundEmitter::get_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_volume
void OVR::SoundEmitter::set_volume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_pitch
float OVR::SoundEmitter::get_pitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_pitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_pitch
void OVR::SoundEmitter::set_pitch(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_pitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_clip
::UnityEngine::AudioClip* OVR::SoundEmitter::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_clip
void OVR::SoundEmitter::set_clip(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_time
float OVR::SoundEmitter::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_time
void OVR::SoundEmitter::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_length
float OVR::SoundEmitter::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.get_loop
bool OVR::SoundEmitter::get_loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_loop
void OVR::SoundEmitter::set_loop(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_mute
bool OVR::SoundEmitter::get_mute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_mute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_mute
void OVR::SoundEmitter::set_mute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_mute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_velocityUpdateMode
::UnityEngine::AudioVelocityUpdateMode OVR::SoundEmitter::get_velocityUpdateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_velocityUpdateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocityUpdateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioVelocityUpdateMode, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_velocityUpdateMode
void OVR::SoundEmitter::set_velocityUpdateMode(::UnityEngine::AudioVelocityUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_velocityUpdateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocityUpdateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_isPlaying
bool OVR::SoundEmitter::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Awake
void OVR::SoundEmitter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.SetPlayingSoundGroup
void OVR::SoundEmitter::SetPlayingSoundGroup(::OVR::SoundGroup* soundGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetPlayingSoundGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayingSoundGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, soundGroup);
}
// Autogenerated method: OVR.SoundEmitter.SetOnFinished
void OVR::SoundEmitter::SetOnFinished(::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished);
}
// Autogenerated method: OVR.SoundEmitter.SetOnFinished
void OVR::SoundEmitter::SetOnFinished(::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished, obj);
}
// Autogenerated method: OVR.SoundEmitter.SetChannel
void OVR::SoundEmitter::SetChannel(int _channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_channel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _channel);
}
// Autogenerated method: OVR.SoundEmitter.SetDefaultParent
void OVR::SoundEmitter::SetDefaultParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetDefaultParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundEmitter.SetAudioMixer
void OVR::SoundEmitter::SetAudioMixer(::UnityEngine::Audio::AudioMixerGroup* _mixer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetAudioMixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAudioMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_mixer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _mixer);
}
// Autogenerated method: OVR.SoundEmitter.IsPlaying
bool OVR::SoundEmitter::IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Play
void OVR::SoundEmitter::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Pause
void OVR::SoundEmitter::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Stop
void OVR::SoundEmitter::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.GetSampleTime
int OVR::SoundEmitter::GetSampleTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::GetSampleTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSampleTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.ParentTo
void OVR::SoundEmitter::ParentTo(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::ParentTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParentTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundEmitter.DetachFromParent
void OVR::SoundEmitter::DetachFromParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::DetachFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.ResetParent
void OVR::SoundEmitter::ResetParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::ResetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundEmitter.SyncTo
void OVR::SoundEmitter::SyncTo(::OVR::SoundEmitter* other, float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SyncTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.DelayedSyncTo
::System::Collections::IEnumerator* OVR::SoundEmitter::DelayedSyncTo(::OVR::SoundEmitter* other, float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::DelayedSyncTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedSyncTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, other, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeTo
void OVR::SoundEmitter::FadeTo(float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeIn
void OVR::SoundEmitter::FadeIn(float fadeTime, float defaultVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(defaultVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime, defaultVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeIn
void OVR::SoundEmitter::FadeIn(float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime);
}
// Autogenerated method: OVR.SoundEmitter.FadeOut
void OVR::SoundEmitter::FadeOut(float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime);
}
// Autogenerated method: OVR.SoundEmitter.FadeOutDelayed
void OVR::SoundEmitter::FadeOutDelayed(float delayedSecs, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeOutDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOutDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delayedSecs), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, delayedSecs, fadeTime);
}
// Autogenerated method: OVR.SoundEmitter.FadeSoundChannelTo
::System::Collections::IEnumerator* OVR::SoundEmitter::FadeSoundChannelTo(float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeSoundChannelTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeSoundChannelTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeSoundChannel
::System::Collections::IEnumerator* OVR::SoundEmitter::FadeSoundChannel(float delaySecs, float fadeTime, ::OVR::Fade fadeType, float defaultVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeSoundChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeSoundChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(fadeType), ::il2cpp_utils::ExtractType(defaultVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delaySecs, fadeTime, fadeType, defaultVolume);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundEmitter/OVR.FadeState
#include "OVR/SoundEmitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/OVR.FadeState Null
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "Null"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/OVR.FadeState Null
void OVR::SoundEmitter::FadeState::_set_Null(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/OVR.FadeState FadingIn
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_FadingIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_FadingIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "FadingIn"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/OVR.FadeState FadingIn
void OVR::SoundEmitter::FadeState::_set_FadingIn(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_FadingIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "FadingIn", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/OVR.FadeState FadingOut
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_FadingOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_FadingOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "FadingOut"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/OVR.FadeState FadingOut
void OVR::SoundEmitter::FadeState::_set_FadingOut(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_FadingOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "FadingOut", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/OVR.FadeState Ducking
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_Ducking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_Ducking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "Ducking"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/OVR.FadeState Ducking
void OVR::SoundEmitter::FadeState::_set_Ducking(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_Ducking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "Ducking", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::SoundEmitter::FadeState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57
#include "OVR/SoundEmitter_-DelayedSyncTo-d__57.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter <>4__this
[[deprecated("Use field access instead!")]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter other
[[deprecated("Use field access instead!")]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_other");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "other"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single toVolume
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_toVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_toVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OVR::SoundEmitter::$DelayedSyncTo$d__57::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVR::SoundEmitter::$DelayedSyncTo$d__57::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.System.IDisposable.Dispose
void OVR::SoundEmitter::$DelayedSyncTo$d__57::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.MoveNext
bool OVR::SoundEmitter::$DelayedSyncTo$d__57::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.System.Collections.IEnumerator.Reset
void OVR::SoundEmitter::$DelayedSyncTo$d__57::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63
#include "OVR/SoundEmitter_-FadeSoundChannelTo-d__63.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter <>4__this
[[deprecated("Use field access instead!")]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single toVolume
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_toVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_toVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <start>5__2
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$start$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$start$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<start>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <end>5__3
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$end$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$end$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<end>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__4
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$startTime$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$startTime$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__5
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$elapsedTime$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$elapsedTime$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.System.IDisposable.Dispose
void OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.MoveNext
bool OVR::SoundEmitter::$FadeSoundChannelTo$d__63::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.System.Collections.IEnumerator.Reset
void OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
