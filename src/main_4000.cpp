// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.DataTableConverter
#include "Newtonsoft/Json/Converters/DataTableConverter.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.DataTableConverter.CreateRow
void Newtonsoft::Json::Converters::DataTableConverter::CreateRow(::Newtonsoft::Json::JsonReader* reader, ::System::Data::DataTable* dt, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataTableConverter::CreateRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "DataTableConverter", "CreateRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(dt), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, dt, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType
::System::Type* Newtonsoft::Json::Converters::DataTableConverter::GetColumnDataType(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataTableConverter::GetColumnDataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "DataTableConverter", "GetColumnDataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.DataTableConverter.WriteJson
void Newtonsoft::Json::Converters::DataTableConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataTableConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.DataTableConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::DataTableConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataTableConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.DataTableConverter.CanConvert
bool Newtonsoft::Json::Converters::DataTableConverter::CanConvert(::System::Type* valueType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataTableConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, valueType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.Union
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_Union.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.UnionCase
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_UnionCase.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.<>c__DisplayClass8_0
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_--c__DisplayClass8_0.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.<>c__DisplayClass9_0
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_--c__DisplayClass9_0.hpp"
// Including type: Newtonsoft.Json.Utilities.ThreadSafeStore`2
#include "Newtonsoft/Json/Utilities/ThreadSafeStore_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.Union> UnionCache
::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union*>* Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_get_UnionCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_get_UnionCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union*>*>("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "UnionCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.Union> UnionCache
void Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_set_UnionCache(::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_set_UnionCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "UnionCache", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,System.Type> UnionTypeLookupCache
::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::System::Type*>* Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_get_UnionTypeLookupCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_get_UnionTypeLookupCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::System::Type*>*>("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "UnionTypeLookupCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,System.Type> UnionTypeLookupCache
void Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_set_UnionTypeLookupCache(::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_set_UnionTypeLookupCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "UnionTypeLookupCache", value));
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter..cctor
void Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnionTypeLookup
::System::Type* Newtonsoft::Json::Converters::DiscriminatedUnionConverter::CreateUnionTypeLookup(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::CreateUnionTypeLookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "CreateUnionTypeLookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion
::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union* Newtonsoft::Json::Converters::DiscriminatedUnionConverter::CreateUnion(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::CreateUnion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "CreateUnion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson
void Newtonsoft::Json::Converters::DiscriminatedUnionConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::DiscriminatedUnionConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert
bool Newtonsoft::Json::Converters::DiscriminatedUnionConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.Union
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_Union.hpp"
// Including type: Newtonsoft.Json.Utilities.FSharpFunction
#include "Newtonsoft/Json/Utilities/FSharpFunction.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.UnionCase
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_UnionCase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Newtonsoft.Json.Utilities.FSharpFunction TagReader
[[deprecated]] ::Newtonsoft::Json::Utilities::FSharpFunction*& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union::dyn_TagReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union::dyn_TagReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TagReader"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::FSharpFunction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.UnionCase> Cases
[[deprecated]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase*>*& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union::dyn_Cases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union::dyn_Cases");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Cases"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.UnionCase
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_UnionCase.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: Newtonsoft.Json.Utilities.FSharpFunction
#include "Newtonsoft/Json/Utilities/FSharpFunction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Tag
[[deprecated]] int& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Tag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated]] ::StringW& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Reflection.PropertyInfo[] Fields
[[deprecated]] ::ArrayW<::System::Reflection::PropertyInfo*>& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Fields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Fields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Fields"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Reflection::PropertyInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Newtonsoft.Json.Utilities.FSharpFunction FieldReader
[[deprecated]] ::Newtonsoft::Json::Utilities::FSharpFunction*& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_FieldReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_FieldReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FieldReader"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::FSharpFunction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Newtonsoft.Json.Utilities.FSharpFunction Constructor
[[deprecated]] ::Newtonsoft::Json::Utilities::FSharpFunction*& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Constructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Constructor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Constructor"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::FSharpFunction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.<>c__DisplayClass8_0
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_--c__DisplayClass8_0.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.UnionCase
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_UnionCase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 tag
[[deprecated]] int& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass8_0::dyn_tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass8_0::dyn_tag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.<>c__DisplayClass8_0.<WriteJson>b__0
bool Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass8_0::$WriteJson$b__0(::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass8_0::<WriteJson>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WriteJson>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.<>c__DisplayClass9_0
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_--c__DisplayClass9_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.UnionCase
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_UnionCase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String caseName
[[deprecated]] ::StringW& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass9_0::dyn_caseName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass9_0::dyn_caseName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "caseName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.UnionCase,System.Boolean> <>9__0
[[deprecated]] ::System::Func_2<::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase*, bool>*& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass9_0::dyn_$$9__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass9_0::dyn_$$9__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__0"))->offset;
  return *reinterpret_cast<::System::Func_2<::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Newtonsoft.Json.Converters.<>c__DisplayClass9_0.<ReadJson>b__0
bool Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass9_0::$ReadJson$b__0(::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass9_0::<ReadJson>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ReadJson>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.EntityKeyMemberConverter
#include "Newtonsoft/Json/Converters/EntityKeyMemberConverter.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject
#include "Newtonsoft/Json/Utilities/ReflectionObject.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [NullableAttribute] Offset: 0x677BF8
// Autogenerated static field getter
// Get static field: static private Newtonsoft.Json.Utilities.ReflectionObject _reflectionObject
::Newtonsoft::Json::Utilities::ReflectionObject* Newtonsoft::Json::Converters::EntityKeyMemberConverter::_get__reflectionObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::_get__reflectionObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ReflectionObject*>("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "_reflectionObject"));
}
// Autogenerated static field setter
// Set static field: static private Newtonsoft.Json.Utilities.ReflectionObject _reflectionObject
void Newtonsoft::Json::Converters::EntityKeyMemberConverter::_set__reflectionObject(::Newtonsoft::Json::Utilities::ReflectionObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::_set__reflectionObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "_reflectionObject", value));
}
// Autogenerated method: Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadAndAssertProperty
void Newtonsoft::Json::Converters::EntityKeyMemberConverter::ReadAndAssertProperty(::Newtonsoft::Json::JsonReader* reader, ::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::ReadAndAssertProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "ReadAndAssertProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(propertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, propertyName);
}
// Autogenerated method: Newtonsoft.Json.Converters.EntityKeyMemberConverter.EnsureReflectionObject
void Newtonsoft::Json::Converters::EntityKeyMemberConverter::EnsureReflectionObject(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::EnsureReflectionObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "EnsureReflectionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson
void Newtonsoft::Json::Converters::EntityKeyMemberConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::EntityKeyMemberConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.EntityKeyMemberConverter.CanConvert
bool Newtonsoft::Json::Converters::EntityKeyMemberConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.ExpandoObjectConverter
#include "Newtonsoft/Json/Converters/ExpandoObjectConverter.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.ReadValue
::Il2CppObject* Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadValue(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.ReadList
::Il2CppObject* Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadList(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.ReadObject
::Il2CppObject* Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadObject(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.get_CanWrite
bool Newtonsoft::Json::Converters::ExpandoObjectConverter::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.WriteJson
void Newtonsoft::Json::Converters::ExpandoObjectConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.CanConvert
bool Newtonsoft::Json::Converters::ExpandoObjectConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.KeyValuePairConverter
#include "Newtonsoft/Json/Converters/KeyValuePairConverter.hpp"
// Including type: Newtonsoft.Json.Utilities.ThreadSafeStore`2
#include "Newtonsoft/Json/Utilities/ThreadSafeStore_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject
#include "Newtonsoft/Json/Utilities/ReflectionObject.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,Newtonsoft.Json.Utilities.ReflectionObject> ReflectionObjectPerType
::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Utilities::ReflectionObject*>* Newtonsoft::Json::Converters::KeyValuePairConverter::_get_ReflectionObjectPerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::_get_ReflectionObjectPerType");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Utilities::ReflectionObject*>*>("Newtonsoft.Json.Converters", "KeyValuePairConverter", "ReflectionObjectPerType")));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,Newtonsoft.Json.Utilities.ReflectionObject> ReflectionObjectPerType
void Newtonsoft::Json::Converters::KeyValuePairConverter::_set_ReflectionObjectPerType(::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Utilities::ReflectionObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::_set_ReflectionObjectPerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "KeyValuePairConverter", "ReflectionObjectPerType", value));
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter..cctor
void Newtonsoft::Json::Converters::KeyValuePairConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "KeyValuePairConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.InitializeReflectionObject
::Newtonsoft::Json::Utilities::ReflectionObject* Newtonsoft::Json::Converters::KeyValuePairConverter::InitializeReflectionObject(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::InitializeReflectionObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "KeyValuePairConverter", "InitializeReflectionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::ReflectionObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.WriteJson
void Newtonsoft::Json::Converters::KeyValuePairConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::KeyValuePairConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.CanConvert
bool Newtonsoft::Json::Converters::KeyValuePairConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.RegexConverter
#include "Newtonsoft/Json/Converters/RegexConverter.hpp"
// Including type: System.Text.RegularExpressions.RegexOptions
#include "System/Text/RegularExpressions/RegexOptions.hpp"
// Including type: Newtonsoft.Json.Bson.BsonWriter
#include "Newtonsoft/Json/Bson/BsonWriter.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.HasFlag
bool Newtonsoft::Json::Converters::RegexConverter::HasFlag(::System::Text::RegularExpressions::RegexOptions options, ::System::Text::RegularExpressions::RegexOptions flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::HasFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, options, flag);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.WriteBson
void Newtonsoft::Json::Converters::RegexConverter::WriteBson(::Newtonsoft::Json::Bson::BsonWriter* writer, ::System::Text::RegularExpressions::Regex* regex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::WriteBson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(regex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, regex);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.WriteJson
void Newtonsoft::Json::Converters::RegexConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::System::Text::RegularExpressions::Regex* regex, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::WriteJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(regex), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, regex, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.ReadRegexString
::Il2CppObject* Newtonsoft::Json::Converters::RegexConverter::ReadRegexString(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::ReadRegexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRegexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject
::System::Text::RegularExpressions::Regex* Newtonsoft::Json::Converters::RegexConverter::ReadRegexObject(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::ReadRegexObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRegexObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Regex*, false>(this, ___internal__method, reader, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.IsRegex
bool Newtonsoft::Json::Converters::RegexConverter::IsRegex(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::IsRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.WriteJson
void Newtonsoft::Json::Converters::RegexConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::RegexConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.CanConvert
bool Newtonsoft::Json::Converters::RegexConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlDocumentWrapper
#include "Newtonsoft/Json/Converters/XmlDocumentWrapper.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlDocument _document
[[deprecated]] ::System::Xml::XmlDocument*& Newtonsoft::Json::Converters::XmlDocumentWrapper::dyn__document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::dyn__document");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_document"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.get_DocumentElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlDocumentWrapper::get_DocumentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::get_DocumentElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateComment(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateComment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateTextNode(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateTextNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateCDataSection(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateCDataSection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateSignificantWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateSignificantWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDeclaration(::StringW version, ::StringW encoding, ::StringW standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, version, encoding, standalone);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDocumentType(::StringW name, ::StringW publicId, ::StringW systemId, ::StringW internalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDocumentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, publicId, systemId, internalSubset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateProcessingInstruction(::StringW target, ::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, target, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement(::StringW elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement(::StringW qualifiedName, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, qualifiedName, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute(::StringW qualifiedName, ::StringW namespaceUri, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, qualifiedName, namespaceUri, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlElementWrapper
#include "Newtonsoft/Json/Converters/XmlElementWrapper.hpp"
// Including type: System.Xml.XmlElement
#include "System/Xml/XmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlElement _element
[[deprecated]] ::System::Xml::XmlElement*& Newtonsoft::Json::Converters::XmlElementWrapper::dyn__element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::dyn__element");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_element"))->offset;
  return *reinterpret_cast<::System::Xml::XmlElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlElementWrapper.get_IsEmpty
bool Newtonsoft::Json::Converters::XmlElementWrapper::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::get_IsEmpty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlElementWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode
void Newtonsoft::Json::Converters::XmlElementWrapper::SetAttributeNode(::Newtonsoft::Json::Converters::IXmlNode* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::SetAttributeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlElementWrapper*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace
::StringW Newtonsoft::Json::Converters::XmlElementWrapper::GetPrefixOfNamespace(::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::GetPrefixOfNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlElementWrapper*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceUri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlDeclarationWrapper
#include "Newtonsoft/Json/Converters/XmlDeclarationWrapper.hpp"
// Including type: System.Xml.XmlDeclaration
#include "System/Xml/XmlDeclaration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlDeclaration _declaration
[[deprecated]] ::System::Xml::XmlDeclaration*& Newtonsoft::Json::Converters::XmlDeclarationWrapper::dyn__declaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::dyn__declaration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_declaration"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDeclaration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDeclarationWrapper.get_Version
::StringW Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Version");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDeclarationWrapper*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDeclarationWrapper.get_Encoding
::StringW Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Encoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDeclarationWrapper*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDeclarationWrapper.get_Standalone
::StringW Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Standalone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDeclarationWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper
#include "Newtonsoft/Json/Converters/XmlDocumentTypeWrapper.hpp"
// Including type: System.Xml.XmlDocumentType
#include "System/Xml/XmlDocumentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlDocumentType _documentType
[[deprecated]] ::System::Xml::XmlDocumentType*& Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::dyn__documentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::dyn__documentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_documentType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDocumentType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_Name
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_System
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_System");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_Public
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Public");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_InternalSubset
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_InternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_InternalSubset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.XmlNodeWrapper
#include "Newtonsoft/Json/Converters/XmlNodeWrapper.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlNode _node
[[deprecated]] ::System::Xml::XmlNode*& Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_node"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _childNodes
[[deprecated]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__childNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__childNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childNodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _attributes
[[deprecated]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_WrappedNode
::Il2CppObject* Newtonsoft::Json::Converters::XmlNodeWrapper::get_WrappedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_WrappedNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::XmlNodeWrapper::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XmlNodeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XmlNodeWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XmlNodeWrapper::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_Attributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_HasAttributes
bool Newtonsoft::Json::Converters::XmlNodeWrapper::get_HasAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_HasAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XmlNodeWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.set_Value
void Newtonsoft::Json::Converters::XmlNodeWrapper::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::set_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XmlNodeWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeWrapper::WrapNode(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::WrapNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeWrapper", "WrapNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlDocument
#include "Newtonsoft/Json/Converters/IXmlDocument.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.get_DocumentElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::IXmlDocument::get_DocumentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::get_DocumentElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateComment
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateComment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateTextNode(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateTextNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateCDataSection(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateCDataSection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateSignificantWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateSignificantWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDeclaration(::StringW version, ::StringW encoding, ::StringW standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, version, encoding, standalone);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDocumentType(::StringW name, ::StringW publicId, ::StringW systemId, ::StringW internalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDocumentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, publicId, systemId, internalSubset);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateProcessingInstruction(::StringW target, ::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, target, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::IXmlDocument::CreateElement(::StringW elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::IXmlDocument::CreateElement(::StringW qualifiedName, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, qualifiedName, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute(::StringW qualifiedName, ::StringW namespaceUri, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, qualifiedName, namespaceUri, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlDeclaration
#include "Newtonsoft/Json/Converters/IXmlDeclaration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDeclaration.get_Version
::StringW Newtonsoft::Json::Converters::IXmlDeclaration::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDeclaration::get_Version");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDeclaration*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDeclaration.get_Encoding
::StringW Newtonsoft::Json::Converters::IXmlDeclaration::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDeclaration::get_Encoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDeclaration*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDeclaration.get_Standalone
::StringW Newtonsoft::Json::Converters::IXmlDeclaration::get_Standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDeclaration::get_Standalone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDeclaration*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlDocumentType
#include "Newtonsoft/Json/Converters/IXmlDocumentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_Name
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocumentType*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_System
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_System");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocumentType*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_Public
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_Public");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocumentType*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_InternalSubset
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_InternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_InternalSubset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocumentType*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlElement.get_IsEmpty
bool Newtonsoft::Json::Converters::IXmlElement::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlElement::get_IsEmpty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlElement*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode
void Newtonsoft::Json::Converters::IXmlElement::SetAttributeNode(::Newtonsoft::Json::Converters::IXmlNode* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlElement::SetAttributeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlElement*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace
::StringW Newtonsoft::Json::Converters::IXmlElement::GetPrefixOfNamespace(::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlElement::GetPrefixOfNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlElement*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceUri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.IXmlNode
#include "Newtonsoft/Json/Converters/IXmlNode.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::IXmlNode::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_LocalName
::StringW Newtonsoft::Json::Converters::IXmlNode::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::IXmlNode::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::IXmlNode::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_Attributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlNode::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_Value
::StringW Newtonsoft::Json::Converters::IXmlNode::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::IXmlNode::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_WrappedNode
::Il2CppObject* Newtonsoft::Json::Converters::IXmlNode::get_WrappedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_WrappedNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlNode::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::AppendChild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XDeclarationWrapper
#include "Newtonsoft/Json/Converters/XDeclarationWrapper.hpp"
// Including type: System.Xml.Linq.XDeclaration
#include "System/Xml/Linq/XDeclaration.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.Linq.XDeclaration <Declaration>k__BackingField
[[deprecated]] ::System::Xml::Linq::XDeclaration*& Newtonsoft::Json::Converters::XDeclarationWrapper::dyn_$Declaration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::dyn_$Declaration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Declaration>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XDeclaration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Declaration
::System::Xml::Linq::XDeclaration* Newtonsoft::Json::Converters::XDeclarationWrapper::get_Declaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Declaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Declaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XDeclaration*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Version
::StringW Newtonsoft::Json::Converters::XDeclarationWrapper::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Version");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDeclarationWrapper*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Encoding
::StringW Newtonsoft::Json::Converters::XDeclarationWrapper::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Encoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDeclarationWrapper*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Standalone
::StringW Newtonsoft::Json::Converters::XDeclarationWrapper::get_Standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Standalone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDeclarationWrapper*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::XDeclarationWrapper::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XDocumentTypeWrapper
#include "Newtonsoft/Json/Converters/XDocumentTypeWrapper.hpp"
// Including type: System.Xml.Linq.XDocumentType
#include "System/Xml/Linq/XDocumentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.Linq.XDocumentType _documentType
[[deprecated]] ::System::Xml::Linq::XDocumentType*& Newtonsoft::Json::Converters::XDocumentTypeWrapper::dyn__documentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::dyn__documentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_documentType"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XDocumentType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_Name
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentTypeWrapper*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_System
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_System");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentTypeWrapper*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_Public
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Public");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentTypeWrapper*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_InternalSubset
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_InternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_InternalSubset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentTypeWrapper*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XDocumentWrapper
#include "Newtonsoft/Json/Converters/XDocumentWrapper.hpp"
// Including type: System.Xml.Linq.XDocument
#include "System/Xml/Linq/XDocument.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.get_Document
::System::Xml::Linq::XDocument* Newtonsoft::Json::Converters::XDocumentWrapper::get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::get_Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XDocument*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.get_DocumentElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XDocumentWrapper::get_DocumentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::get_DocumentElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateComment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateTextNode(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateTextNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateCDataSection(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateCDataSection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateSignificantWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateSignificantWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDeclaration(::StringW version, ::StringW encoding, ::StringW standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, version, encoding, standalone);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDocumentType(::StringW name, ::StringW publicId, ::StringW systemId, ::StringW internalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDocumentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, publicId, systemId, internalSubset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateProcessingInstruction(::StringW target, ::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, target, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement(::StringW elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement(::StringW qualifiedName, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, qualifiedName, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute(::StringW qualifiedName, ::StringW namespaceUri, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, qualifiedName, namespaceUri, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XDocumentWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XContainerWrapper*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.get_HasChildNodes
bool Newtonsoft::Json::Converters::XDocumentWrapper::get_HasChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::get_HasChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XContainerWrapper*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XContainerWrapper*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XTextWrapper
#include "Newtonsoft/Json/Converters/XTextWrapper.hpp"
// Including type: System.Xml.Linq.XText
#include "System/Xml/Linq/XText.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XTextWrapper.get_Text
::System::Xml::Linq::XText* Newtonsoft::Json::Converters::XTextWrapper::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XTextWrapper::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XText*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XTextWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XTextWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XTextWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XTextWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XTextWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XTextWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XCommentWrapper
#include "Newtonsoft/Json/Converters/XCommentWrapper.hpp"
// Including type: System.Xml.Linq.XComment
#include "System/Xml/Linq/XComment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XCommentWrapper.get_Text
::System::Xml::Linq::XComment* Newtonsoft::Json::Converters::XCommentWrapper::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XCommentWrapper::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XComment*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XCommentWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XCommentWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XCommentWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XCommentWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XCommentWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XCommentWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XProcessingInstructionWrapper
#include "Newtonsoft/Json/Converters/XProcessingInstructionWrapper.hpp"
// Including type: System.Xml.Linq.XProcessingInstruction
#include "System/Xml/Linq/XProcessingInstruction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XProcessingInstructionWrapper.get_ProcessingInstruction
::System::Xml::Linq::XProcessingInstruction* Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_ProcessingInstruction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_ProcessingInstruction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XProcessingInstruction*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XProcessingInstructionWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XProcessingInstructionWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XContainerWrapper
#include "Newtonsoft/Json/Converters/XContainerWrapper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.Linq.XContainer
#include "System/Xml/Linq/XContainer.hpp"
// Including type: System.Xml.Linq.XObject
#include "System/Xml/Linq/XObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _childNodes
[[deprecated]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XContainerWrapper::dyn__childNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::dyn__childNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childNodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.get_Container
::System::Xml::Linq::XContainer* Newtonsoft::Json::Converters::XContainerWrapper::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::get_Container");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.get_HasChildNodes
bool Newtonsoft::Json::Converters::XContainerWrapper::get_HasChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::get_HasChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XContainerWrapper*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.WrapNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XContainerWrapper::WrapNode(::System::Xml::Linq::XObject* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::WrapNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XContainerWrapper", "WrapNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XContainerWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XContainerWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XContainerWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.XObjectWrapper
#include "Newtonsoft/Json/Converters/XObjectWrapper.hpp"
// Including type: System.Xml.Linq.XObject
#include "System/Xml/Linq/XObject.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.Linq.XObject _xmlObject
[[deprecated]] ::System::Xml::Linq::XObject*& Newtonsoft::Json::Converters::XObjectWrapper::dyn__xmlObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::dyn__xmlObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xmlObject"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_WrappedNode
::Il2CppObject* Newtonsoft::Json::Converters::XObjectWrapper::get_WrappedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_WrappedNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::XObjectWrapper::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XObjectWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XObjectWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XObjectWrapper::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_Attributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XObjectWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XObjectWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XObjectWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XObjectWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XAttributeWrapper
#include "Newtonsoft/Json/Converters/XAttributeWrapper.hpp"
// Including type: System.Xml.Linq.XAttribute
#include "System/Xml/Linq/XAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_Attribute
::System::Xml::Linq::XAttribute* Newtonsoft::Json::Converters::XAttributeWrapper::get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_Attribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XAttributeWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XAttributeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XAttributeWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XAttributeWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XElementWrapper
#include "Newtonsoft/Json/Converters/XElementWrapper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.Linq.XElement
#include "System/Xml/Linq/XElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _attributes
[[deprecated]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XElementWrapper::dyn__attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::dyn__attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_Element
::System::Xml::Linq::XElement* Newtonsoft::Json::Converters::XElementWrapper::get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_Element");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Element", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XElement*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_IsEmpty
bool Newtonsoft::Json::Converters::XElementWrapper::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_IsEmpty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XElementWrapper*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode
void Newtonsoft::Json::Converters::XElementWrapper::SetAttributeNode(::Newtonsoft::Json::Converters::IXmlNode* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::SetAttributeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XElementWrapper*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.HasImplicitNamespaceAttribute
bool Newtonsoft::Json::Converters::XElementWrapper::HasImplicitNamespaceAttribute(::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::HasImplicitNamespaceAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasImplicitNamespaceAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace
::StringW Newtonsoft::Json::Converters::XElementWrapper::GetPrefixOfNamespace(::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::GetPrefixOfNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XElementWrapper*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XElementWrapper::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_Attributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XElementWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XElementWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XElementWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XElementWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XContainerWrapper*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.XmlNodeConverter
#include "Newtonsoft/Json/Converters/XmlNodeConverter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlNode
#include "Newtonsoft/Json/Converters/IXmlNode.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlDocument
#include "Newtonsoft/Json/Converters/IXmlDocument.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> EmptyChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XmlNodeConverter::_get_EmptyChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_get_EmptyChildNodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*>("Newtonsoft.Json.Converters", "XmlNodeConverter", "EmptyChildNodes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> EmptyChildNodes
void Newtonsoft::Json::Converters::XmlNodeConverter::_set_EmptyChildNodes(::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_set_EmptyChildNodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "XmlNodeConverter", "EmptyChildNodes", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <DeserializeRootElementName>k__BackingField
[[deprecated]] ::StringW& Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$DeserializeRootElementName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$DeserializeRootElementName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DeserializeRootElementName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <WriteArrayAttribute>k__BackingField
[[deprecated]] bool& Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$WriteArrayAttribute$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$WriteArrayAttribute$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WriteArrayAttribute>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <OmitRootObject>k__BackingField
[[deprecated]] bool& Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$OmitRootObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$OmitRootObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OmitRootObject>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <EncodeSpecialCharacters>k__BackingField
[[deprecated]] bool& Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$EncodeSpecialCharacters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$EncodeSpecialCharacters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EncodeSpecialCharacters>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.get_DeserializeRootElementName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::get_DeserializeRootElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::get_DeserializeRootElementName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeserializeRootElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.get_WriteArrayAttribute
bool Newtonsoft::Json::Converters::XmlNodeConverter::get_WriteArrayAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::get_WriteArrayAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteArrayAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.get_OmitRootObject
bool Newtonsoft::Json::Converters::XmlNodeConverter::get_OmitRootObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::get_OmitRootObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OmitRootObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.get_EncodeSpecialCharacters
bool Newtonsoft::Json::Converters::XmlNodeConverter::get_EncodeSpecialCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::get_EncodeSpecialCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncodeSpecialCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter..cctor
void Newtonsoft::Json::Converters::XmlNodeConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeConverter::WrapXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::WrapXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WrapXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces
void Newtonsoft::Json::Converters::XmlNodeConverter::PushParentNamespaces(::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::PushParentNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushParentNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::ResolveFullName(::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ResolveFullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveFullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, node, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::GetPropertyName(::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::GetPropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, node, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.IsArray
bool Newtonsoft::Json::Converters::XmlNodeConverter::IsArray(::Newtonsoft::Json::Converters::IXmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::IsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes
void Newtonsoft::Json::Converters::XmlNodeConverter::SerializeGroupedNodes(::Newtonsoft::Json::JsonWriter* writer, ::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager, bool writePropertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::SerializeGroupedNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeGroupedNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(writePropertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, node, manager, writePropertyName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.WriteGroupedNodes
void Newtonsoft::Json::Converters::XmlNodeConverter::WriteGroupedNodes(::Newtonsoft::Json::JsonWriter* writer, ::System::Xml::XmlNamespaceManager* manager, bool writePropertyName, ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* groupedNodes, ::StringW elementNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::WriteGroupedNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteGroupedNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(writePropertyName), ::il2cpp_utils::ExtractType(groupedNodes), ::il2cpp_utils::ExtractType(elementNames)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, manager, writePropertyName, groupedNodes, elementNames);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.WriteGroupedNodes
void Newtonsoft::Json::Converters::XmlNodeConverter::WriteGroupedNodes(::Newtonsoft::Json::JsonWriter* writer, ::System::Xml::XmlNamespaceManager* manager, bool writePropertyName, ::Newtonsoft::Json::Converters::IXmlNode* node, ::StringW elementNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::WriteGroupedNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteGroupedNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(writePropertyName), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(elementNames)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, manager, writePropertyName, node, elementNames);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode
void Newtonsoft::Json::Converters::XmlNodeConverter::SerializeNode(::Newtonsoft::Json::JsonWriter* writer, ::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager, bool writePropertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::SerializeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(writePropertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, node, manager, writePropertyName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName
bool Newtonsoft::Json::Converters::XmlNodeConverter::AllSameName(::Newtonsoft::Json::Converters::IXmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::AllSameName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeConverter", "AllSameName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue
void Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeValue(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::System::Xml::XmlNamespaceManager* manager, ::StringW propertyName, ::Newtonsoft::Json::Converters::IXmlNode* currentNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(currentNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, manager, propertyName, currentNode);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement
void Newtonsoft::Json::Converters::XmlNodeConverter::ReadElement(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW propertyName, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode, propertyName, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement
void Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW elementName, ::System::Xml::XmlNamespaceManager* manager, ::StringW elementPrefix, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributeNameValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(elementName), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(elementPrefix), ::il2cpp_utils::ExtractType(attributeNameValues)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode, elementName, manager, elementPrefix, attributeNameValues);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute
void Newtonsoft::Json::Converters::XmlNodeConverter::AddAttribute(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW propertyName, ::StringW attributeName, ::System::Xml::XmlNamespaceManager* manager, ::StringW attributePrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::AddAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeConverter", "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(attributeName), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(attributePrefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, document, currentNode, propertyName, attributeName, manager, attributePrefix);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::ConvertTokenToXmlValue(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ConvertTokenToXmlValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeConverter", "ConvertTokenToXmlValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements
void Newtonsoft::Json::Converters::XmlNodeConverter::ReadArrayElements(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::StringW propertyName, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadArrayElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadArrayElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, propertyName, currentNode, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute
void Newtonsoft::Json::Converters::XmlNodeConverter::AddJsonArrayAttribute(::Newtonsoft::Json::Converters::IXmlElement* element, ::Newtonsoft::Json::Converters::IXmlDocument* document) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::AddJsonArrayAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddJsonArrayAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(document)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element, document);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ShouldReadInto
bool Newtonsoft::Json::Converters::XmlNodeConverter::ShouldReadInto(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ShouldReadInto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldReadInto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Newtonsoft::Json::Converters::XmlNodeConverter::ReadAttributeElements(::Newtonsoft::Json::JsonReader* reader, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadAttributeElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAttributeElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method, reader, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction
void Newtonsoft::Json::Converters::XmlNodeConverter::CreateInstruction(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateInstruction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(propertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode, propertyName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType
void Newtonsoft::Json::Converters::XmlNodeConverter::CreateDocumentType(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateDocumentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDocumentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement(::StringW elementName, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::StringW elementPrefix, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementName), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(elementPrefix), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName, document, elementPrefix, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode
void Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeNode(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::System::Xml::XmlNamespaceManager* manager, ::Newtonsoft::Json::Converters::IXmlNode* currentNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(currentNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, manager, currentNode);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute
bool Newtonsoft::Json::Converters::XmlNodeConverter::IsNamespaceAttribute(::StringW attributeName, ByRef<::StringW> prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::IsNamespaceAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsNamespaceAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeName), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeName, byref(prefix));
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes
bool Newtonsoft::Json::Converters::XmlNodeConverter::ValueAttributes(::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ValueAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.IsXObject
bool Newtonsoft::Json::Converters::XmlNodeConverter::IsXObject(::System::Type* valueType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::IsXObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsXObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, valueType);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.IsXmlNode
bool Newtonsoft::Json::Converters::XmlNodeConverter::IsXmlNode(::System::Type* valueType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::IsXmlNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsXmlNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, valueType);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson
void Newtonsoft::Json::Converters::XmlNodeConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::XmlNodeConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert
bool Newtonsoft::Json::Converters::XmlNodeConverter::CanConvert(::System::Type* valueType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, valueType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonObjectId
#include "Newtonsoft/Json/Bson/BsonObjectId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] <Value>k__BackingField
[[deprecated]] ::ArrayW<uint8_t>& Newtonsoft::Json::Bson::BsonObjectId::dyn_$Value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObjectId::dyn_$Value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Value>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObjectId.get_Value
::ArrayW<uint8_t> Newtonsoft::Json::Bson::BsonObjectId::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObjectId::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonToken
#include "Newtonsoft/Json/Bson/BsonToken.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken <Parent>k__BackingField
[[deprecated]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonToken::dyn_$Parent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonToken::dyn_$Parent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Parent>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonToken.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonToken::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonToken::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Bson::BsonToken*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonToken.set_Parent
void Newtonsoft::Json::Bson::BsonToken::set_Parent(::Newtonsoft::Json::Bson::BsonToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonToken::set_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonObject
#include "Newtonsoft/Json/Bson/BsonObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.Bson.BsonProperty
#include "Newtonsoft/Json/Bson/BsonProperty.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Newtonsoft.Json.Bson.BsonProperty> _children
[[deprecated]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonProperty*>*& Newtonsoft::Json::Bson::BsonObject::dyn__children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObject::dyn__children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_children"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonProperty*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObject.Add
void Newtonsoft::Json::Bson::BsonObject::Add(::StringW name, ::Newtonsoft::Json::Bson::BsonToken* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObject::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, token);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObject.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonObject::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObject::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Bson::BsonToken*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonArray
#include "Newtonsoft/Json/Bson/BsonArray.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Newtonsoft.Json.Bson.BsonToken> _children
[[deprecated]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonToken*>*& Newtonsoft::Json::Bson::BsonArray::dyn__children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonArray::dyn__children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_children"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonToken*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonArray.Add
void Newtonsoft::Json::Bson::BsonArray::Add(::Newtonsoft::Json::Bson::BsonToken* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonArray::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonArray.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonArray::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonArray::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Bson::BsonToken*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Bson.BsonValue
#include "Newtonsoft/Json/Bson/BsonValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _value
[[deprecated]] ::Il2CppObject*& Newtonsoft::Json::Bson::BsonValue::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonValue::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Bson.BsonType _type
[[deprecated]] ::Newtonsoft::Json::Bson::BsonType& Newtonsoft::Json::Bson::BsonValue::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonValue::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonValue.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonValue::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonValue::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Bson::BsonToken*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Bson.BsonString
#include "Newtonsoft/Json/Bson/BsonString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <IncludeLength>k__BackingField
[[deprecated]] bool& Newtonsoft::Json::Bson::BsonString::dyn_$IncludeLength$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonString::dyn_$IncludeLength$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IncludeLength>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonRegex
#include "Newtonsoft/Json/Bson/BsonRegex.hpp"
// Including type: Newtonsoft.Json.Bson.BsonString
#include "Newtonsoft/Json/Bson/BsonString.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonString <Pattern>k__BackingField
[[deprecated]] ::Newtonsoft::Json::Bson::BsonString*& Newtonsoft::Json::Bson::BsonRegex::dyn_$Pattern$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::dyn_$Pattern$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Pattern>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonString <Options>k__BackingField
[[deprecated]] ::Newtonsoft::Json::Bson::BsonString*& Newtonsoft::Json::Bson::BsonRegex::dyn_$Options$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::dyn_$Options$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Options>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonRegex.set_Pattern
void Newtonsoft::Json::Bson::BsonRegex::set_Pattern(::Newtonsoft::Json::Bson::BsonString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::set_Pattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonRegex.set_Options
void Newtonsoft::Json::Bson::BsonRegex::set_Options(::Newtonsoft::Json::Bson::BsonString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::set_Options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonRegex.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonRegex::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Bson::BsonToken*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonProperty
#include "Newtonsoft/Json/Bson/BsonProperty.hpp"
// Including type: Newtonsoft.Json.Bson.BsonString
#include "Newtonsoft/Json/Bson/BsonString.hpp"
// Including type: Newtonsoft.Json.Bson.BsonToken
#include "Newtonsoft/Json/Bson/BsonToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonString <Name>k__BackingField
[[deprecated]] ::Newtonsoft::Json::Bson::BsonString*& Newtonsoft::Json::Bson::BsonProperty::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken <Value>k__BackingField
[[deprecated]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonProperty::dyn_$Value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::dyn_$Value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Value>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonProperty.set_Name
void Newtonsoft::Json::Bson::BsonProperty::set_Name(::Newtonsoft::Json::Bson::BsonString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonProperty.set_Value
void Newtonsoft::Json::Bson::BsonProperty::set_Value(::Newtonsoft::Json::Bson::BsonToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Number
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Number");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Number"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Number
void Newtonsoft::Json::Bson::BsonType::_set_Number(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Number", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType String
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "String"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType String
void Newtonsoft::Json::Bson::BsonType::_set_String(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Object
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Object
void Newtonsoft::Json::Bson::BsonType::_set_Object(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Array
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Array
void Newtonsoft::Json::Bson::BsonType::_set_Array(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Binary
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Binary
void Newtonsoft::Json::Bson::BsonType::_set_Binary(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Binary", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Undefined
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Undefined
void Newtonsoft::Json::Bson::BsonType::_set_Undefined(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Undefined", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Oid
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Oid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Oid"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Oid
void Newtonsoft::Json::Bson::BsonType::_set_Oid(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Oid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Oid", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Boolean
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Boolean
void Newtonsoft::Json::Bson::BsonType::_set_Boolean(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Date
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Date"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Date
void Newtonsoft::Json::Bson::BsonType::_set_Date(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Date", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Null
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Null"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Null
void Newtonsoft::Json::Bson::BsonType::_set_Null(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Regex
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Regex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Regex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Regex"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Regex
void Newtonsoft::Json::Bson::BsonType::_set_Regex(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Regex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Regex", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Reference
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Reference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Reference"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Reference
void Newtonsoft::Json::Bson::BsonType::_set_Reference(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Reference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Reference", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Code
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Code");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Code"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Code
void Newtonsoft::Json::Bson::BsonType::_set_Code(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Code");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Code", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Symbol
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Symbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Symbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Symbol"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Symbol
void Newtonsoft::Json::Bson::BsonType::_set_Symbol(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Symbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Symbol", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType CodeWScope
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_CodeWScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_CodeWScope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "CodeWScope"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType CodeWScope
void Newtonsoft::Json::Bson::BsonType::_set_CodeWScope(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_CodeWScope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "CodeWScope", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Integer
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Integer"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Integer
void Newtonsoft::Json::Bson::BsonType::_set_Integer(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Integer", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType TimeStamp
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_TimeStamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_TimeStamp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "TimeStamp"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType TimeStamp
void Newtonsoft::Json::Bson::BsonType::_set_TimeStamp(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_TimeStamp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "TimeStamp", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Long
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Long() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Long");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Long"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Long
void Newtonsoft::Json::Bson::BsonType::_set_Long(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Long");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Long", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType MinKey
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_MinKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_MinKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "MinKey"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType MinKey
void Newtonsoft::Json::Bson::BsonType::_set_MinKey(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_MinKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "MinKey", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType MaxKey
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_MaxKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_MaxKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "MaxKey"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType MaxKey
void Newtonsoft::Json::Bson::BsonType::_set_MaxKey(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_MaxKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "MaxKey", value));
}
// Autogenerated instance field getter
// Get instance field: public System.SByte value__
[[deprecated]] int8_t& Newtonsoft::Json::Bson::BsonType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Bson.BsonWriter
#include "Newtonsoft/Json/Bson/BsonWriter.hpp"
// Including type: Newtonsoft.Json.Bson.BsonToken
#include "Newtonsoft/Json/Bson/BsonToken.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken _root
[[deprecated]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonWriter::dyn__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::dyn__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_root"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken _parent
[[deprecated]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonWriter::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _propertyName
[[deprecated]] ::StringW& Newtonsoft::Json::Bson::BsonWriter::dyn__propertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::dyn__propertyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propertyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.AddValue
void Newtonsoft::Json::Bson::BsonWriter::AddValue(::Il2CppObject* value, ::Newtonsoft::Json::Bson::BsonType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, type);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.AddToken
void Newtonsoft::Json::Bson::BsonWriter::AddToken(::Newtonsoft::Json::Bson::BsonToken* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::AddToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.WriteObjectId
void Newtonsoft::Json::Bson::BsonWriter::WriteObjectId(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::WriteObjectId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteObjectId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.WriteRegex
void Newtonsoft::Json::Bson::BsonWriter::WriteRegex(::StringW pattern, ::StringW options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::WriteRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pattern, options);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InspectorNoteAttribute
#include "GlobalNamespace/InspectorNoteAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String header
[[deprecated]] ::StringW& GlobalNamespace::InspectorNoteAttribute::dyn_header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InspectorNoteAttribute::dyn_header");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "header"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String message
[[deprecated]] ::StringW& GlobalNamespace::InspectorNoteAttribute::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InspectorNoteAttribute::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InspectorCommentAttribute
#include "GlobalNamespace/InspectorCommentAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String message
[[deprecated]] ::StringW& GlobalNamespace::InspectorCommentAttribute::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InspectorCommentAttribute::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.TestScript
#include "OVR/TestScript.hpp"
// Including type: OVR.SoundFXRef
#include "OVR/SoundFXRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXRef testSound1
[[deprecated]] ::OVR::SoundFXRef*& OVR::TestScript::dyn_testSound1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::dyn_testSound1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testSound1"))->offset;
  return *reinterpret_cast<::OVR::SoundFXRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXRef testSound2
[[deprecated]] ::OVR::SoundFXRef*& OVR::TestScript::dyn_testSound2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::dyn_testSound2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testSound2"))->offset;
  return *reinterpret_cast<::OVR::SoundFXRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.TestScript.Start
void OVR::TestScript::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.TestScript.Update
void OVR::TestScript::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AmbienceEmitter
#include "OVR/AmbienceEmitter.hpp"
// Including type: OVR.SoundFXRef
#include "OVR/SoundFXRef.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXRef[] ambientSounds
[[deprecated]] ::ArrayW<::OVR::SoundFXRef*>& OVR::AmbienceEmitter::dyn_ambientSounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_ambientSounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ambientSounds"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundFXRef*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoActivate
[[deprecated]] bool& OVR::AmbienceEmitter::dyn_autoActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_autoActivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoActivate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoRetrigger
[[deprecated]] bool& OVR::AmbienceEmitter::dyn_autoRetrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_autoRetrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoRetrigger"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 randomRetriggerDelaySecs
[[deprecated]] ::UnityEngine::Vector2& OVR::AmbienceEmitter::dyn_randomRetriggerDelaySecs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_randomRetriggerDelaySecs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomRetriggerDelaySecs"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] playPositions
[[deprecated]] ::ArrayW<::UnityEngine::Transform*>& OVR::AmbienceEmitter::dyn_playPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_playPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean activated
[[deprecated]] bool& OVR::AmbienceEmitter::dyn_activated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_activated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 playingIdx
[[deprecated]] int& OVR::AmbienceEmitter::dyn_playingIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_playingIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single nextPlayTime
[[deprecated]] float& OVR::AmbienceEmitter::dyn_nextPlayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_nextPlayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextPlayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single fadeTime
[[deprecated]] float& OVR::AmbienceEmitter::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastPosIdx
[[deprecated]] int& OVR::AmbienceEmitter::dyn_lastPosIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_lastPosIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPosIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.AmbienceEmitter.Awake
void OVR::AmbienceEmitter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AmbienceEmitter.Update
void OVR::AmbienceEmitter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AmbienceEmitter.OnTriggerEnter
void OVR::AmbienceEmitter::OnTriggerEnter(::UnityEngine::Collider* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col);
}
// Autogenerated method: OVR.AmbienceEmitter.Play
void OVR::AmbienceEmitter::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AmbienceEmitter.EnableEmitter
void OVR::AmbienceEmitter::EnableEmitter(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::EnableEmitter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableEmitter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.PreloadSounds
#include "OVR/PreloadSounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.PreloadSounds Default
::OVR::PreloadSounds OVR::PreloadSounds::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::PreloadSounds>("OVR", "PreloadSounds", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVR.PreloadSounds Default
void OVR::PreloadSounds::_set_Default(::OVR::PreloadSounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "PreloadSounds", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.PreloadSounds Preload
::OVR::PreloadSounds OVR::PreloadSounds::_get_Preload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_get_Preload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::PreloadSounds>("OVR", "PreloadSounds", "Preload"));
}
// Autogenerated static field setter
// Set static field: static public OVR.PreloadSounds Preload
void OVR::PreloadSounds::_set_Preload(::OVR::PreloadSounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_set_Preload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "PreloadSounds", "Preload", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.PreloadSounds ManualPreload
::OVR::PreloadSounds OVR::PreloadSounds::_get_ManualPreload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_get_ManualPreload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::PreloadSounds>("OVR", "PreloadSounds", "ManualPreload"));
}
// Autogenerated static field setter
// Set static field: static public OVR.PreloadSounds ManualPreload
void OVR::PreloadSounds::_set_ManualPreload(::OVR::PreloadSounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_set_ManualPreload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "PreloadSounds", "ManualPreload", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::PreloadSounds::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.Fade
#include "OVR/Fade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.Fade In
::OVR::Fade OVR::Fade::_get_In() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_get_In");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::Fade>("OVR", "Fade", "In"));
}
// Autogenerated static field setter
// Set static field: static public OVR.Fade In
void OVR::Fade::_set_In(::OVR::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_set_In");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "Fade", "In", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.Fade Out
::OVR::Fade OVR::Fade::_get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_get_Out");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::Fade>("OVR", "Fade", "Out"));
}
// Autogenerated static field setter
// Set static field: static public OVR.Fade Out
void OVR::Fade::_set_Out(::OVR::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_set_Out");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "Fade", "Out", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::Fade::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated]] ::StringW& OVR::SoundGroup::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFX[] soundList
[[deprecated]] ::ArrayW<::OVR::SoundFX*>& OVR::SoundGroup::dyn_soundList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_soundList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundList"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundFX*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup mixerGroup
[[deprecated]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::SoundGroup::dyn_mixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_mixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxPlayingSounds
[[deprecated]] int& OVR::SoundGroup::dyn_maxPlayingSounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_maxPlayingSounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxPlayingSounds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.PreloadSounds preloadAudio
[[deprecated]] ::OVR::PreloadSounds& OVR::SoundGroup::dyn_preloadAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_preloadAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preloadAudio"))->offset;
  return *reinterpret_cast<::OVR::PreloadSounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volumeOverride
[[deprecated]] float& OVR::SoundGroup::dyn_volumeOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_volumeOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeOverride"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 playingSoundCount
[[deprecated]] int& OVR::SoundGroup::dyn_playingSoundCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_playingSoundCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingSoundCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundGroup.IncrementPlayCount
void OVR::SoundGroup::IncrementPlayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::IncrementPlayCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPlayCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundGroup.DecrementPlayCount
void OVR::SoundGroup::DecrementPlayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::DecrementPlayCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecrementPlayCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundGroup.CanPlaySound
bool OVR::SoundGroup::CanPlaySound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::CanPlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanPlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.AudioManager
#include "OVR/AudioManager.hpp"
// Including type: OVR.AudioManager/OVR.Fade
#include "OVR/AudioManager_Fade.hpp"
// Including type: OVR.AudioManager/OVR.<>c__DisplayClass77_0
#include "OVR/AudioManager_--c__DisplayClass77_0.hpp"
// Including type: OVR.AudioManager/OVR.<>c
#include "OVR/AudioManager_--c.hpp"
// Including type: UnityEngine.Audio.AudioMixer
#include "UnityEngine/Audio/AudioMixer.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
// Including type: FastList`1
#include "GlobalNamespace/FastList_1.hpp"
// Including type: OVR.MixerSnapshot
#include "OVR/MixerSnapshot.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: OVR.EmitterChannel
#include "OVR/EmitterChannel.hpp"
// Including type: OVR.SoundPriority
#include "OVR/SoundPriority.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVR.AudioManager theAudioManager
::OVR::AudioManager* OVR::AudioManager::_get_theAudioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_theAudioManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::AudioManager*>("OVR", "AudioManager", "theAudioManager"));
}
// Autogenerated static field setter
// Set static field: static private OVR.AudioManager theAudioManager
void OVR::AudioManager::_set_theAudioManager(::OVR::AudioManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_theAudioManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "theAudioManager", value));
}
// Autogenerated static field getter
// Get static field: static private FastList`1<System.String> names
::GlobalNamespace::FastList_1<::StringW>* OVR::AudioManager::_get_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_names");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FastList_1<::StringW>*>("OVR", "AudioManager", "names"));
}
// Autogenerated static field setter
// Set static field: static private FastList`1<System.String> names
void OVR::AudioManager::_set_names(::GlobalNamespace::FastList_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_names");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "names", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] defaultSound
::ArrayW<::StringW> OVR::AudioManager::_get_defaultSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_defaultSound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("OVR", "AudioManager", "defaultSound"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] defaultSound
void OVR::AudioManager::_set_defaultSound(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_defaultSound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "defaultSound", value));
}
// Autogenerated static field getter
// Get static field: static private OVR.SoundFX nullSound
::OVR::SoundFX* OVR::AudioManager::_get_nullSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_nullSound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundFX*>("OVR", "AudioManager", "nullSound"));
}
// Autogenerated static field setter
// Set static field: static private OVR.SoundFX nullSound
void OVR::AudioManager::_set_nullSound(::OVR::SoundFX* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_nullSound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "nullSound", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean hideWarnings
bool OVR::AudioManager::_get_hideWarnings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_hideWarnings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "hideWarnings"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean hideWarnings
void OVR::AudioManager::_set_hideWarnings(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_hideWarnings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "hideWarnings", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.GameObject soundEmitterParent
::UnityEngine::GameObject* OVR::AudioManager::_get_soundEmitterParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_soundEmitterParent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::GameObject*>("OVR", "AudioManager", "soundEmitterParent"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.GameObject soundEmitterParent
void OVR::AudioManager::_set_soundEmitterParent(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_soundEmitterParent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "soundEmitterParent", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Transform staticListenerPosition
::UnityEngine::Transform* OVR::AudioManager::_get_staticListenerPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_staticListenerPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Transform*>("OVR", "AudioManager", "staticListenerPosition"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Transform staticListenerPosition
void OVR::AudioManager::_set_staticListenerPosition(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_staticListenerPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "staticListenerPosition", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean showPlayingEmitterCount
bool OVR::AudioManager::_get_showPlayingEmitterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_showPlayingEmitterCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "showPlayingEmitterCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean showPlayingEmitterCount
void OVR::AudioManager::_set_showPlayingEmitterCount(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_showPlayingEmitterCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "showPlayingEmitterCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean forceShowEmitterCount
bool OVR::AudioManager::_get_forceShowEmitterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_forceShowEmitterCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "forceShowEmitterCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean forceShowEmitterCount
void OVR::AudioManager::_set_forceShowEmitterCount(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_forceShowEmitterCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "forceShowEmitterCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean soundEnabled
bool OVR::AudioManager::_get_soundEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_soundEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "soundEnabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean soundEnabled
void OVR::AudioManager::_set_soundEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_soundEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "soundEnabled", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.AnimationCurve defaultReverbZoneMix
::UnityEngine::AnimationCurve* OVR::AudioManager::_get_defaultReverbZoneMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_defaultReverbZoneMix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimationCurve*>("OVR", "AudioManager", "defaultReverbZoneMix"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.AnimationCurve defaultReverbZoneMix
void OVR::AudioManager::_set_defaultReverbZoneMix(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_defaultReverbZoneMix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "defaultReverbZoneMix", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean makePersistent
[[deprecated]] bool& OVR::AudioManager::dyn_makePersistent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_makePersistent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makePersistent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableSpatializedAudio
[[deprecated]] bool& OVR::AudioManager::dyn_enableSpatializedAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_enableSpatializedAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatializedAudio"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableSpatializedFastOverride
[[deprecated]] bool& OVR::AudioManager::dyn_enableSpatializedFastOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_enableSpatializedFastOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatializedFastOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixer audioMixer
[[deprecated]] ::UnityEngine::Audio::AudioMixer*& OVR::AudioManager::dyn_audioMixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMixer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMixer"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup defaultMixerGroup
[[deprecated]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::AudioManager::dyn_defaultMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_defaultMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup reservedMixerGroup
[[deprecated]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::AudioManager::dyn_reservedMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_reservedMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reservedMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup voiceChatMixerGroup
[[deprecated]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::AudioManager::dyn_voiceChatMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_voiceChatMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceChatMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean verboseLogging
[[deprecated]] bool& OVR::AudioManager::dyn_verboseLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_verboseLogging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verboseLogging"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxSoundEmitters
[[deprecated]] int& OVR::AudioManager::dyn_maxSoundEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_maxSoundEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSoundEmitters"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volumeSoundFX
[[deprecated]] float& OVR::AudioManager::dyn_volumeSoundFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_volumeSoundFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeSoundFX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single soundFxFadeSecs
[[deprecated]] float& OVR::AudioManager::dyn_soundFxFadeSecs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundFxFadeSecs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFxFadeSecs"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single audioMinFallOffDistance
[[deprecated]] float& OVR::AudioManager::dyn_audioMinFallOffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMinFallOffDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMinFallOffDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single audioMaxFallOffDistance
[[deprecated]] float& OVR::AudioManager::dyn_audioMaxFallOffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMaxFallOffDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMaxFallOffDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundGroup[] soundGroupings
[[deprecated]] ::ArrayW<::OVR::SoundGroup*>& OVR::AudioManager::dyn_soundGroupings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundGroupings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundGroupings"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundGroup*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,OVR.SoundFX> soundFXCache
[[deprecated]] ::System::Collections::Generic::Dictionary_2<::StringW, ::OVR::SoundFX*>*& OVR::AudioManager::dyn_soundFXCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundFXCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFXCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::OVR::SoundFX*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single audioMaxFallOffDistanceSqr
[[deprecated]] float& OVR::AudioManager::dyn_audioMaxFallOffDistanceSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMaxFallOffDistanceSqr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMaxFallOffDistanceSqr"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundEmitter[] soundEmitters
[[deprecated]] ::ArrayW<::OVR::SoundEmitter*>& OVR::AudioManager::dyn_soundEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundEmitters"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundEmitter*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FastList`1<OVR.SoundEmitter> playingEmitters
[[deprecated]] ::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>*& OVR::AudioManager::dyn_playingEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_playingEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingEmitters"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FastList`1<OVR.SoundEmitter> nextFreeEmitters
[[deprecated]] ::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>*& OVR::AudioManager::dyn_nextFreeEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_nextFreeEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextFreeEmitters"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.MixerSnapshot currentSnapshot
[[deprecated]] ::OVR::MixerSnapshot*& OVR::AudioManager::dyn_currentSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_currentSnapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSnapshot"))->offset;
  return *reinterpret_cast<::OVR::MixerSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.AudioManager.get_enableSpatialization
bool OVR::AudioManager::get_enableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_enableSpatialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_enableSpatialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_Instance
::OVR::AudioManager* OVR::AudioManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::AudioManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_NearFallOff
float OVR::AudioManager::get_NearFallOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_NearFallOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_NearFallOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_FarFallOff
float OVR::AudioManager::get_FarFallOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_FarFallOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_FarFallOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_EmitterGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::AudioManager::get_EmitterGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_EmitterGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_EmitterGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_ReservedGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::AudioManager::get_ReservedGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_ReservedGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_ReservedGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_VoipGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::AudioManager::get_VoipGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_VoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_VoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_SoundEnabled
bool OVR::AudioManager::get_SoundEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_SoundEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_SoundEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Awake
void OVR::AudioManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.OnDestroy
void OVR::AudioManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Init
void OVR::AudioManager::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Update
void OVR::AudioManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.RebuildSoundFXCache
void OVR::AudioManager::RebuildSoundFXCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::RebuildSoundFXCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildSoundFXCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.FindSoundFX
::OVR::SoundFX* OVR::AudioManager::FindSoundFX(::StringW name, bool rebuildCache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FindSoundFX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FindSoundFX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(rebuildCache)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::SoundFX*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, rebuildCache);
}
// Autogenerated method: OVR.AudioManager.FindAudioManager
bool OVR::AudioManager::FindAudioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FindAudioManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FindAudioManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.GetGameObject
::UnityEngine::GameObject* OVR::AudioManager::GetGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.NameMinusGroup
::StringW OVR::AudioManager::NameMinusGroup(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::NameMinusGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "NameMinusGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: OVR.AudioManager.GetSoundFXNames
::ArrayW<::StringW> OVR::AudioManager::GetSoundFXNames(::StringW currentValue, ByRef<int> currentIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetSoundFXNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetSoundFXNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentValue), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, currentValue, byref(currentIdx));
}
// Autogenerated method: OVR.AudioManager.CalculateMaxEmittersSize
int OVR::AudioManager::CalculateMaxEmittersSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::CalculateMaxEmittersSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "CalculateMaxEmittersSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.ValidateEmitterIndex
bool OVR::AudioManager::ValidateEmitterIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::ValidateEmitterIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "ValidateEmitterIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: OVR.AudioManager.InitializeSoundSystem
void OVR::AudioManager::InitializeSoundSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::InitializeSoundSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeSoundSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.UpdateFreeEmitters
void OVR::AudioManager::UpdateFreeEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::UpdateFreeEmitters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFreeEmitters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Fmt
::StringW OVR::AudioManager::Fmt(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fmt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fmt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, count);
}
// Autogenerated method: OVR.AudioManager.FmtFree
::StringW OVR::AudioManager::FmtFree(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FmtFree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FmtFree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, count);
}
// Autogenerated method: OVR.AudioManager.OnPreSceneLoad
void OVR::AudioManager::OnPreSceneLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::OnPreSceneLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreSceneLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.ResetFreeEmitters
void OVR::AudioManager::ResetFreeEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::ResetFreeEmitters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetFreeEmitters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.FadeOutSoundChannel
void OVR::AudioManager::FadeOutSoundChannel(int channel, float delaySecs, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeOutSoundChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeOutSoundChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, delaySecs, fadeTime);
}
// Autogenerated method: OVR.AudioManager.StopSound
bool OVR::AudioManager::StopSound(int idx, bool fadeOut, bool stopReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::StopSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "StopSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeOut), ::il2cpp_utils::ExtractType(stopReserved)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeOut, stopReserved);
}
// Autogenerated method: OVR.AudioManager.FadeInSound
void OVR::AudioManager::FadeInSound(int idx, float fadeTime, float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeInSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeInSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeTime, volume);
}
// Autogenerated method: OVR.AudioManager.FadeInSound
void OVR::AudioManager::FadeInSound(int idx, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeInSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeInSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeTime);
}
// Autogenerated method: OVR.AudioManager.FadeOutSound
void OVR::AudioManager::FadeOutSound(int idx, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeOutSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeOutSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeTime);
}
// Autogenerated method: OVR.AudioManager.StopAllSounds
void OVR::AudioManager::StopAllSounds(bool fadeOut, bool stopReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::StopAllSounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "StopAllSounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeOut), ::il2cpp_utils::ExtractType(stopReserved)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fadeOut, stopReserved);
}
// Autogenerated method: OVR.AudioManager.MuteAllSounds
void OVR::AudioManager::MuteAllSounds(bool mute, bool muteReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::MuteAllSounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MuteAllSounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mute), ::il2cpp_utils::ExtractType(muteReserved)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mute, muteReserved);
}
// Autogenerated method: OVR.AudioManager.UnMuteAllSounds
void OVR::AudioManager::UnMuteAllSounds(bool unmute, bool unmuteReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::UnMuteAllSounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnMuteAllSounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unmute), ::il2cpp_utils::ExtractType(unmuteReserved)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unmute, unmuteReserved);
}
// Autogenerated method: OVR.AudioManager.GetEmitterEndTime
float OVR::AudioManager::GetEmitterEndTime(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetEmitterEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetEmitterEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx);
}
// Autogenerated method: OVR.AudioManager.SetEmitterTime
float OVR::AudioManager::SetEmitterTime(int idx, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetEmitterTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetEmitterTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, time);
}
// Autogenerated method: OVR.AudioManager.PlaySound
int OVR::AudioManager::PlaySound(::UnityEngine::AudioClip* clip, float volume, ::OVR::EmitterChannel src, float delay, float pitchVariance, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(pitchVariance), ::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip, volume, src, delay, pitchVariance, loop);
}
// Autogenerated method: OVR.AudioManager.FindFreeEmitter
int OVR::AudioManager::FindFreeEmitter(::OVR::EmitterChannel src, ::OVR::SoundPriority priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FindFreeEmitter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FindFreeEmitter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(priority)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, priority);
}
// Autogenerated method: OVR.AudioManager.PlaySound
int OVR::AudioManager::PlaySound(::OVR::SoundFX* soundFX, ::OVR::EmitterChannel src, float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundFX), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, soundFX, src, delay);
}
// Autogenerated method: OVR.AudioManager.PlaySoundAt
int OVR::AudioManager::PlaySoundAt(::UnityEngine::Vector3 position, ::OVR::SoundFX* soundFX, ::OVR::EmitterChannel src, float delay, float volumeOverride, float pitchMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(soundFX), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(volumeOverride), ::il2cpp_utils::ExtractType(pitchMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, soundFX, src, delay, volumeOverride, pitchMultiplier);
}
// Autogenerated method: OVR.AudioManager.PlayRandomSoundAt
int OVR::AudioManager::PlayRandomSoundAt(::UnityEngine::Vector3 position, ::ArrayW<::UnityEngine::AudioClip*> clips, float volume, ::OVR::EmitterChannel src, float delay, float pitch, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlayRandomSoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlayRandomSoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(clips), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(pitch), ::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, clips, volume, src, delay, pitch, loop);
}
// Autogenerated method: OVR.AudioManager.PlaySoundAt
int OVR::AudioManager::PlaySoundAt(::UnityEngine::Vector3 position, ::UnityEngine::AudioClip* clip, float volume, ::OVR::EmitterChannel src, float delay, float pitch, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(pitch), ::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, clip, volume, src, delay, pitch, loop);
}
// Autogenerated method: OVR.AudioManager.SetOnFinished
void OVR::AudioManager::SetOnFinished(int emitterIdx, ::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitterIdx), ::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, emitterIdx, onFinished);
}
// Autogenerated method: OVR.AudioManager.SetOnFinished
void OVR::AudioManager::SetOnFinished(int emitterIdx, ::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitterIdx), ::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, emitterIdx, onFinished, obj);
}
// Autogenerated method: OVR.AudioManager.AttachSoundToParent
void OVR::AudioManager::AttachSoundToParent(int idx, ::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::AttachSoundToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "AttachSoundToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, parent);
}
// Autogenerated method: OVR.AudioManager.DetachSoundFromParent
void OVR::AudioManager::DetachSoundFromParent(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::DetachSoundFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "DetachSoundFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx);
}
// Autogenerated method: OVR.AudioManager.DetachSoundsFromParent
void OVR::AudioManager::DetachSoundsFromParent(::ArrayW<::OVR::SoundEmitter*> emitters, bool stopSounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::DetachSoundsFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "DetachSoundsFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitters), ::il2cpp_utils::ExtractType(stopSounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, emitters, stopSounds);
}
// Autogenerated method: OVR.AudioManager.SetEmitterMixerGroup
void OVR::AudioManager::SetEmitterMixerGroup(int idx, ::UnityEngine::Audio::AudioMixerGroup* mixerGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetEmitterMixerGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetEmitterMixerGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(mixerGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, mixerGroup);
}
// Autogenerated method: OVR.AudioManager.GetActiveSnapshot
::OVR::MixerSnapshot* OVR::AudioManager::GetActiveSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetActiveSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetActiveSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::MixerSnapshot*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.SetCurrentSnapshot
void OVR::AudioManager::SetCurrentSnapshot(::OVR::MixerSnapshot* mixerSnapshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetCurrentSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetCurrentSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mixerSnapshot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mixerSnapshot);
}
// Autogenerated method: OVR.AudioManager.BlendWithCurrentSnapshot
void OVR::AudioManager::BlendWithCurrentSnapshot(::OVR::MixerSnapshot* blendSnapshot, float weight, float blendTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::BlendWithCurrentSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "BlendWithCurrentSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blendSnapshot), ::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(blendTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blendSnapshot, weight, blendTime);
}
// Autogenerated method: OVR.AudioManager..cctor
void OVR::AudioManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AudioManager/OVR.Fade
#include "OVR/AudioManager_Fade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.AudioManager/OVR.Fade In
::OVR::AudioManager::Fade OVR::AudioManager::Fade::_get_In() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_get_In");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::AudioManager::Fade>("OVR", "AudioManager/Fade", "In"));
}
// Autogenerated static field setter
// Set static field: static public OVR.AudioManager/OVR.Fade In
void OVR::AudioManager::Fade::_set_In(::OVR::AudioManager::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_set_In");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager/Fade", "In", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.AudioManager/OVR.Fade Out
::OVR::AudioManager::Fade OVR::AudioManager::Fade::_get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_get_Out");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::AudioManager::Fade>("OVR", "AudioManager/Fade", "Out"));
}
// Autogenerated static field setter
// Set static field: static public OVR.AudioManager/OVR.Fade Out
void OVR::AudioManager::Fade::_set_Out(::OVR::AudioManager::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_set_Out");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager/Fade", "Out", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::AudioManager::Fade::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AudioManager/OVR.<>c__DisplayClass77_0
#include "OVR/AudioManager_--c__DisplayClass77_0.hpp"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.SoundPriority priority
[[deprecated]] ::OVR::SoundPriority& OVR::AudioManager::$$c__DisplayClass77_0::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c__DisplayClass77_0::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::OVR::SoundPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.AudioManager/OVR.<>c__DisplayClass77_0.<FindFreeEmitter>b__0
bool OVR::AudioManager::$$c__DisplayClass77_0::$FindFreeEmitter$b__0(::OVR::SoundEmitter* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c__DisplayClass77_0::<FindFreeEmitter>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindFreeEmitter>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AudioManager/OVR.<>c
#include "OVR/AudioManager_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVR.AudioManager/OVR.<>c <>9
::OVR::AudioManager::$$c* OVR::AudioManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::OVR::AudioManager::$$c*>("OVR", "AudioManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVR.AudioManager/OVR.<>c <>9
void OVR::AudioManager::$$c::_set_$$9(::OVR::AudioManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("OVR", "AudioManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<OVR.SoundEmitter> <>9__77_1
::System::Predicate_1<::OVR::SoundEmitter*>* OVR::AudioManager::$$c::_get_$$9__77_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_get_$$9__77_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::OVR::SoundEmitter*>*>("OVR", "AudioManager/<>c", "<>9__77_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<OVR.SoundEmitter> <>9__77_1
void OVR::AudioManager::$$c::_set_$$9__77_1(::System::Predicate_1<::OVR::SoundEmitter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_set_$$9__77_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("OVR", "AudioManager/<>c", "<>9__77_1", value)));
}
// Autogenerated method: OVR.AudioManager/OVR.<>c..cctor
void OVR::AudioManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager/OVR.<>c.<FindFreeEmitter>b__77_1
bool OVR::AudioManager::$$c::$FindFreeEmitter$b__77_1(::OVR::SoundEmitter* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::<FindFreeEmitter>b__77_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindFreeEmitter>b__77_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.EmitterChannel
#include "OVR/EmitterChannel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.EmitterChannel None
::OVR::EmitterChannel OVR::EmitterChannel::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::EmitterChannel>("OVR", "EmitterChannel", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.EmitterChannel None
void OVR::EmitterChannel::_set_None(::OVR::EmitterChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "EmitterChannel", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.EmitterChannel Reserved
::OVR::EmitterChannel OVR::EmitterChannel::_get_Reserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_get_Reserved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::EmitterChannel>("OVR", "EmitterChannel", "Reserved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.EmitterChannel Reserved
void OVR::EmitterChannel::_set_Reserved(::OVR::EmitterChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_set_Reserved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "EmitterChannel", "Reserved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.EmitterChannel Any
::OVR::EmitterChannel OVR::EmitterChannel::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::EmitterChannel>("OVR", "EmitterChannel", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVR.EmitterChannel Any
void OVR::EmitterChannel::_set_Any(::OVR::EmitterChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "EmitterChannel", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::EmitterChannel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.MixerSnapshot
#include "OVR/MixerSnapshot.hpp"
// Including type: UnityEngine.Audio.AudioMixerSnapshot
#include "UnityEngine/Audio/AudioMixerSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerSnapshot snapshot
[[deprecated]] ::UnityEngine::Audio::AudioMixerSnapshot*& OVR::MixerSnapshot::dyn_snapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MixerSnapshot::dyn_snapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "snapshot"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single transitionTime
[[deprecated]] float& OVR::MixerSnapshot::dyn_transitionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MixerSnapshot::dyn_transitionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transitionTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.MinMaxAttribute
#include "OVR/MinMaxAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single minDefaultVal
[[deprecated]] float& OVR::MinMaxAttribute::dyn_minDefaultVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_minDefaultVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDefaultVal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDefaultVal
[[deprecated]] float& OVR::MinMaxAttribute::dyn_maxDefaultVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_maxDefaultVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDefaultVal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single min
[[deprecated]] float& OVR::MinMaxAttribute::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single max
[[deprecated]] float& OVR::MinMaxAttribute::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57
#include "OVR/SoundEmitter_-DelayedSyncTo-d__57.hpp"
// Including type: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63
#include "OVR/SoundEmitter_-FadeSoundChannelTo-d__63.hpp"
// Including type: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64
#include "OVR/SoundEmitter_-FadeSoundChannel-d__64.hpp"
// Including type: ONSPAudioSource
#include "GlobalNamespace/ONSPAudioSource.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.AudioVelocityUpdateMode
#include "UnityEngine/AudioVelocityUpdateMode.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: OVR.Fade
#include "OVR/Fade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.EmitterChannel channel
[[deprecated]] ::OVR::EmitterChannel& OVR::SoundEmitter::dyn_channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_channel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channel"))->offset;
  return *reinterpret_cast<::OVR::EmitterChannel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableSpatialization
[[deprecated]] bool& OVR::SoundEmitter::dyn_disableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_disableSpatialization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableSpatialization"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundEmitter/OVR.FadeState state
[[deprecated]] ::OVR::SoundEmitter::FadeState& OVR::SoundEmitter::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter::FadeState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated]] ::UnityEngine::AudioSource*& OVR::SoundEmitter::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundPriority priority
[[deprecated]] ::OVR::SoundPriority& OVR::SoundEmitter::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::OVR::SoundPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ONSPAudioSource osp
[[deprecated]] ::GlobalNamespace::ONSPAudioSource*& OVR::SoundEmitter::dyn_osp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_osp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osp"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPAudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single endPlayTime
[[deprecated]] float& OVR::SoundEmitter::dyn_endPlayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_endPlayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPlayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform lastParentTransform
[[deprecated]] ::UnityEngine::Transform*& OVR::SoundEmitter::dyn_lastParentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_lastParentTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastParentTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single defaultVolume
[[deprecated]] float& OVR::SoundEmitter::dyn_defaultVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_defaultVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform defaultParent
[[deprecated]] ::UnityEngine::Transform*& OVR::SoundEmitter::dyn_defaultParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_defaultParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 originalIdx
[[deprecated]] int& OVR::SoundEmitter::dyn_originalIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_originalIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onFinished
[[deprecated]] ::System::Action*& OVR::SoundEmitter::dyn_onFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_onFinished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFinished"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Object> onFinishedObject
[[deprecated]] ::System::Action_1<::Il2CppObject*>*& OVR::SoundEmitter::dyn_onFinishedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_onFinishedObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFinishedObject"))->offset;
  return *reinterpret_cast<::System::Action_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object onFinishedParam
[[deprecated]] ::Il2CppObject*& OVR::SoundEmitter::dyn_onFinishedParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_onFinishedParam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFinishedParam"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundGroup playingSoundGroup
[[deprecated]] ::OVR::SoundGroup*& OVR::SoundEmitter::dyn_playingSoundGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_playingSoundGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingSoundGroup"))->offset;
  return *reinterpret_cast<::OVR::SoundGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter.get_volume
float OVR::SoundEmitter::get_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_volume
void OVR::SoundEmitter::set_volume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_pitch
float OVR::SoundEmitter::get_pitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_pitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_pitch
void OVR::SoundEmitter::set_pitch(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_pitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_clip
::UnityEngine::AudioClip* OVR::SoundEmitter::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_clip
void OVR::SoundEmitter::set_clip(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_time
float OVR::SoundEmitter::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_time
void OVR::SoundEmitter::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_length
float OVR::SoundEmitter::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.get_loop
bool OVR::SoundEmitter::get_loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_loop
void OVR::SoundEmitter::set_loop(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_mute
bool OVR::SoundEmitter::get_mute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_mute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_mute
void OVR::SoundEmitter::set_mute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_mute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_velocityUpdateMode
::UnityEngine::AudioVelocityUpdateMode OVR::SoundEmitter::get_velocityUpdateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_velocityUpdateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocityUpdateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioVelocityUpdateMode, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_velocityUpdateMode
void OVR::SoundEmitter::set_velocityUpdateMode(::UnityEngine::AudioVelocityUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_velocityUpdateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocityUpdateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_isPlaying
bool OVR::SoundEmitter::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Awake
void OVR::SoundEmitter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.SetPlayingSoundGroup
void OVR::SoundEmitter::SetPlayingSoundGroup(::OVR::SoundGroup* soundGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetPlayingSoundGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayingSoundGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, soundGroup);
}
// Autogenerated method: OVR.SoundEmitter.SetOnFinished
void OVR::SoundEmitter::SetOnFinished(::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished);
}
// Autogenerated method: OVR.SoundEmitter.SetOnFinished
void OVR::SoundEmitter::SetOnFinished(::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished, obj);
}
// Autogenerated method: OVR.SoundEmitter.SetChannel
void OVR::SoundEmitter::SetChannel(int _channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_channel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _channel);
}
// Autogenerated method: OVR.SoundEmitter.SetDefaultParent
void OVR::SoundEmitter::SetDefaultParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetDefaultParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundEmitter.SetAudioMixer
void OVR::SoundEmitter::SetAudioMixer(::UnityEngine::Audio::AudioMixerGroup* _mixer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetAudioMixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAudioMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_mixer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _mixer);
}
// Autogenerated method: OVR.SoundEmitter.IsPlaying
bool OVR::SoundEmitter::IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Play
void OVR::SoundEmitter::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Pause
void OVR::SoundEmitter::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Stop
void OVR::SoundEmitter::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.GetSampleTime
int OVR::SoundEmitter::GetSampleTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::GetSampleTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSampleTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.ParentTo
void OVR::SoundEmitter::ParentTo(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::ParentTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParentTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundEmitter.DetachFromParent
void OVR::SoundEmitter::DetachFromParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::DetachFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.ResetParent
void OVR::SoundEmitter::ResetParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::ResetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundEmitter.SyncTo
void OVR::SoundEmitter::SyncTo(::OVR::SoundEmitter* other, float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SyncTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.DelayedSyncTo
::System::Collections::IEnumerator* OVR::SoundEmitter::DelayedSyncTo(::OVR::SoundEmitter* other, float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::DelayedSyncTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedSyncTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, other, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeTo
void OVR::SoundEmitter::FadeTo(float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeIn
void OVR::SoundEmitter::FadeIn(float fadeTime, float defaultVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(defaultVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime, defaultVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeIn
void OVR::SoundEmitter::FadeIn(float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime);
}
// Autogenerated method: OVR.SoundEmitter.FadeOut
void OVR::SoundEmitter::FadeOut(float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime);
}
// Autogenerated method: OVR.SoundEmitter.FadeOutDelayed
void OVR::SoundEmitter::FadeOutDelayed(float delayedSecs, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeOutDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOutDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delayedSecs), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, delayedSecs, fadeTime);
}
// Autogenerated method: OVR.SoundEmitter.FadeSoundChannelTo
::System::Collections::IEnumerator* OVR::SoundEmitter::FadeSoundChannelTo(float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeSoundChannelTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeSoundChannelTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeSoundChannel
::System::Collections::IEnumerator* OVR::SoundEmitter::FadeSoundChannel(float delaySecs, float fadeTime, ::OVR::Fade fadeType, float defaultVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeSoundChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeSoundChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(fadeType), ::il2cpp_utils::ExtractType(defaultVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delaySecs, fadeTime, fadeType, defaultVolume);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundEmitter/OVR.FadeState
#include "OVR/SoundEmitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/OVR.FadeState Null
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "Null"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/OVR.FadeState Null
void OVR::SoundEmitter::FadeState::_set_Null(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/OVR.FadeState FadingIn
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_FadingIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_FadingIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "FadingIn"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/OVR.FadeState FadingIn
void OVR::SoundEmitter::FadeState::_set_FadingIn(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_FadingIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "FadingIn", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/OVR.FadeState FadingOut
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_FadingOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_FadingOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "FadingOut"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/OVR.FadeState FadingOut
void OVR::SoundEmitter::FadeState::_set_FadingOut(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_FadingOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "FadingOut", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/OVR.FadeState Ducking
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_Ducking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_Ducking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "Ducking"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/OVR.FadeState Ducking
void OVR::SoundEmitter::FadeState::_set_Ducking(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_Ducking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "Ducking", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::SoundEmitter::FadeState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57
#include "OVR/SoundEmitter_-DelayedSyncTo-d__57.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated]] ::Il2CppObject*& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter <>4__this
[[deprecated]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter other
[[deprecated]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_other");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "other"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated]] float& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single toVolume
[[deprecated]] float& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_toVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_toVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OVR::SoundEmitter::$DelayedSyncTo$d__57::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVR::SoundEmitter::$DelayedSyncTo$d__57::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.System.IDisposable.Dispose
void OVR::SoundEmitter::$DelayedSyncTo$d__57::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.MoveNext
bool OVR::SoundEmitter::$DelayedSyncTo$d__57::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.System.Collections.IEnumerator.Reset
void OVR::SoundEmitter::$DelayedSyncTo$d__57::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63
#include "OVR/SoundEmitter_-FadeSoundChannelTo-d__63.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated]] ::Il2CppObject*& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter <>4__this
[[deprecated]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single toVolume
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_toVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_toVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <start>5__2
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$start$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$start$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<start>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <end>5__3
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$end$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$end$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<end>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__4
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$startTime$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$startTime$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__5
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$elapsedTime$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$elapsedTime$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.System.IDisposable.Dispose
void OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.MoveNext
bool OVR::SoundEmitter::$FadeSoundChannelTo$d__63::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.System.Collections.IEnumerator.Reset
void OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64
#include "OVR/SoundEmitter_-FadeSoundChannel-d__64.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated]] ::Il2CppObject*& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delaySecs
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_delaySecs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_delaySecs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delaySecs"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.Fade fadeType
[[deprecated]] ::OVR::Fade& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeType"))->offset;
  return *reinterpret_cast<::OVR::Fade*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single defaultVolume
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_defaultVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_defaultVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter <>4__this
[[deprecated]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <start>5__2
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$start$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$start$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<start>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <end>5__3
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$end$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$end$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<end>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <restartPlay>5__4
[[deprecated]] bool& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$restartPlay$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$restartPlay$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<restartPlay>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__5
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$startTime$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$startTime$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__6
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$elapsedTime$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$elapsedTime$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__6"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannel$d__64::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannel$d__64::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.System.IDisposable.Dispose
void OVR::SoundEmitter::$FadeSoundChannel$d__64::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.MoveNext
bool OVR::SoundEmitter::$FadeSoundChannel$d__64::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.System.Collections.IEnumerator.Reset
void OVR::SoundEmitter::$FadeSoundChannel$d__64::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundFXNext
#include "OVR/SoundFXNext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.SoundFXNext Random
::OVR::SoundFXNext OVR::SoundFXNext::_get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_get_Random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundFXNext>("OVR", "SoundFXNext", "Random"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundFXNext Random
void OVR::SoundFXNext::_set_Random(::OVR::SoundFXNext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_set_Random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundFXNext", "Random", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundFXNext Sequential
::OVR::SoundFXNext OVR::SoundFXNext::_get_Sequential() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_get_Sequential");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundFXNext>("OVR", "SoundFXNext", "Sequential"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundFXNext Sequential
void OVR::SoundFXNext::_set_Sequential(::OVR::SoundFXNext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_set_Sequential");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundFXNext", "Sequential", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::SoundFXNext::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.FreqHint
#include "OVR/FreqHint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.FreqHint None
::OVR::FreqHint OVR::FreqHint::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::FreqHint>("OVR", "FreqHint", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.FreqHint None
void OVR::FreqHint::_set_None(::OVR::FreqHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "FreqHint", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.FreqHint Wide
::OVR::FreqHint OVR::FreqHint::_get_Wide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_get_Wide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::FreqHint>("OVR", "FreqHint", "Wide"));
}
// Autogenerated static field setter
// Set static field: static public OVR.FreqHint Wide
void OVR::FreqHint::_set_Wide(::OVR::FreqHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_set_Wide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "FreqHint", "Wide", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.FreqHint Narrow
::OVR::FreqHint OVR::FreqHint::_get_Narrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_get_Narrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::FreqHint>("OVR", "FreqHint", "Narrow"));
}
// Autogenerated static field setter
// Set static field: static public OVR.FreqHint Narrow
void OVR::FreqHint::_set_Narrow(::OVR::FreqHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_set_Narrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "FreqHint", "Narrow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::FreqHint::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundPriority
#include "OVR/SoundPriority.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority VeryLow
::OVR::SoundPriority OVR::SoundPriority::_get_VeryLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_VeryLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "VeryLow"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority VeryLow
void OVR::SoundPriority::_set_VeryLow(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_VeryLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "VeryLow", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority Low
::OVR::SoundPriority OVR::SoundPriority::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority Low
void OVR::SoundPriority::_set_Low(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority Default
::OVR::SoundPriority OVR::SoundPriority::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority Default
void OVR::SoundPriority::_set_Default(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority High
::OVR::SoundPriority OVR::SoundPriority::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority High
void OVR::SoundPriority::_set_High(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "High", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority VeryHigh
::OVR::SoundPriority OVR::SoundPriority::_get_VeryHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_VeryHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "VeryHigh"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority VeryHigh
void OVR::SoundPriority::_set_VeryHigh(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_VeryHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "VeryHigh", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::SoundPriority::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OSPProps
#include "OVR/OSPProps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableSpatialization
[[deprecated]] bool& OVR::OSPProps::dyn_enableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_enableSpatialization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatialization"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useFastOverride
[[deprecated]] bool& OVR::OSPProps::dyn_useFastOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_useFastOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useFastOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gain
[[deprecated]] float& OVR::OSPProps::dyn_gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_gain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableInvSquare
[[deprecated]] bool& OVR::OSPProps::dyn_enableInvSquare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_enableInvSquare");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableInvSquare"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volumetric
[[deprecated]] float& OVR::OSPProps::dyn_volumetric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_volumetric");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumetric"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 invSquareFalloff
[[deprecated]] ::UnityEngine::Vector2& OVR::OSPProps::dyn_invSquareFalloff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_invSquareFalloff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invSquareFalloff"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: OVR.OSPProps
#include "OVR/OSPProps.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated]] ::StringW& OVR::SoundFX::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXNext playback
[[deprecated]] ::OVR::SoundFXNext& OVR::SoundFX::dyn_playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_playback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playback"))->offset;
  return *reinterpret_cast<::OVR::SoundFXNext*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volume
[[deprecated]] float& OVR::SoundFX::dyn_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 pitchVariance
[[deprecated]] ::UnityEngine::Vector2& OVR::SoundFX::dyn_pitchVariance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_pitchVariance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pitchVariance"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 falloffDistance
[[deprecated]] ::UnityEngine::Vector2& OVR::SoundFX::dyn_falloffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_falloffDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "falloffDistance"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioRolloffMode falloffCurve
[[deprecated]] ::UnityEngine::AudioRolloffMode& OVR::SoundFX::dyn_falloffCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_falloffCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "falloffCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioRolloffMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve volumeFalloffCurve
[[deprecated]] ::UnityEngine::AnimationCurve*& OVR::SoundFX::dyn_volumeFalloffCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_volumeFalloffCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeFalloffCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve reverbZoneMix
[[deprecated]] ::UnityEngine::AnimationCurve*& OVR::SoundFX::dyn_reverbZoneMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_reverbZoneMix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverbZoneMix"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single spread
[[deprecated]] float& OVR::SoundFX::dyn_spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_spread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pctChanceToPlay
[[deprecated]] float& OVR::SoundFX::dyn_pctChanceToPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_pctChanceToPlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pctChanceToPlay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundPriority priority
[[deprecated]] ::OVR::SoundPriority& OVR::SoundFX::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::OVR::SoundPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 delay
[[deprecated]] ::UnityEngine::Vector2& OVR::SoundFX::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean looping
[[deprecated]] bool& OVR::SoundFX::dyn_looping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_looping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "looping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OSPProps ospProps
[[deprecated]] ::OVR::OSPProps*& OVR::SoundFX::dyn_ospProps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_ospProps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ospProps"))->offset;
  return *reinterpret_cast<::OVR::OSPProps**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip[] soundClips
[[deprecated]] ::ArrayW<::UnityEngine::AudioClip*>& OVR::SoundFX::dyn_soundClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_soundClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean visibilityToggle
[[deprecated]] bool& OVR::SoundFX::dyn_visibilityToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_visibilityToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visibilityToggle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundGroup soundGroup
[[deprecated]] ::OVR::SoundGroup*& OVR::SoundFX::dyn_soundGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_soundGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundGroup"))->offset;
  return *reinterpret_cast<::OVR::SoundGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastIdx
[[deprecated]] int& OVR::SoundFX::dyn_lastIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_lastIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 playingIdx
[[deprecated]] int& OVR::SoundFX::dyn_playingIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_playingIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundFX.get_Length
int OVR::SoundFX::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.get_IsValid
bool OVR::SoundFX::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.get_Group
::OVR::SoundGroup* OVR::SoundFX::get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::SoundGroup*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.set_Group
void OVR::SoundFX::set_Group(::OVR::SoundGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::set_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundFX.get_MaxFalloffDistSquared
float OVR::SoundFX::get_MaxFalloffDistSquared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_MaxFalloffDistSquared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxFalloffDistSquared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.get_GroupVolumeOverride
float OVR::SoundFX::get_GroupVolumeOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_GroupVolumeOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GroupVolumeOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.GetClip
::UnityEngine::AudioClip* OVR::SoundFX::GetClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.GetMixerGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::SoundFX::GetMixerGroup(::UnityEngine::Audio::AudioMixerGroup* defaultMixerGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetMixerGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMixerGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultMixerGroup)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(this, ___internal__method, defaultMixerGroup);
}
// Autogenerated method: OVR.SoundFX.ReachedGroupPlayLimit
bool OVR::SoundFX::ReachedGroupPlayLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::ReachedGroupPlayLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReachedGroupPlayLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.GetClipLength
float OVR::SoundFX::GetClipLength(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetClipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, idx);
}
// Autogenerated method: OVR.SoundFX.GetPitch
float OVR::SoundFX::GetPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.PlaySound
int OVR::SoundFX::PlaySound(float delaySecs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delaySecs)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, delaySecs);
}
// Autogenerated method: OVR.SoundFX.PlaySoundAt
int OVR::SoundFX::PlaySoundAt(::UnityEngine::Vector3 pos, float delaySecs, float volumeOverride, float pitchMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(volumeOverride), ::il2cpp_utils::ExtractType(pitchMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pos, delaySecs, volumeOverride, pitchMultiplier);
}
// Autogenerated method: OVR.SoundFX.SetOnFinished
void OVR::SoundFX::SetOnFinished(::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished);
}
// Autogenerated method: OVR.SoundFX.SetOnFinished
void OVR::SoundFX::SetOnFinished(::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished, obj);
}
// Autogenerated method: OVR.SoundFX.StopSound
bool OVR::SoundFX::StopSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::StopSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.AttachToParent
void OVR::SoundFX::AttachToParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::AttachToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundFX.DetachFromParent
void OVR::SoundFX::DetachFromParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::DetachFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundFXRef
#include "OVR/SoundFXRef.hpp"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String soundFXName
[[deprecated]] ::StringW& OVR::SoundFXRef::dyn_soundFXName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::dyn_soundFXName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFXName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
[[deprecated]] bool& OVR::SoundFXRef::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundFX soundFXCached
[[deprecated]] ::OVR::SoundFX*& OVR::SoundFXRef::dyn_soundFXCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::dyn_soundFXCached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFXCached"))->offset;
  return *reinterpret_cast<::OVR::SoundFX**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundFXRef.get_soundFX
::OVR::SoundFX* OVR::SoundFXRef::get_soundFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_soundFX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_soundFX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::SoundFX*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.get_name
::StringW OVR::SoundFXRef::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.set_name
void OVR::SoundFXRef::set_name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::set_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundFXRef.get_Length
int OVR::SoundFXRef::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.get_IsValid
bool OVR::SoundFXRef::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.Init
void OVR::SoundFXRef::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.GetClip
::UnityEngine::AudioClip* OVR::SoundFXRef::GetClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::GetClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.GetClipLength
float OVR::SoundFXRef::GetClipLength(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::GetClipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, idx);
}
// Autogenerated method: OVR.SoundFXRef.PlaySound
int OVR::SoundFXRef::PlaySound(float delaySecs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delaySecs)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, delaySecs);
}
// Autogenerated method: OVR.SoundFXRef.PlaySoundAt
int OVR::SoundFXRef::PlaySoundAt(::UnityEngine::Vector3 pos, float delaySecs, float volume, float pitchMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(pitchMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pos, delaySecs, volume, pitchMultiplier);
}
// Autogenerated method: OVR.SoundFXRef.SetOnFinished
void OVR::SoundFXRef::SetOnFinished(::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished);
}
// Autogenerated method: OVR.SoundFXRef.SetOnFinished
void OVR::SoundFXRef::SetOnFinished(::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished, obj);
}
// Autogenerated method: OVR.SoundFXRef.StopSound
bool OVR::SoundFXRef::StopSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::StopSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.AttachToParent
void OVR::SoundFXRef::AttachToParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::AttachToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundFXRef.DetachFromParent
void OVR::SoundFXRef::DetachFromParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::DetachFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnableSwitch
#include "GlobalNamespace/EnableSwitch.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] SwitchTargets
[[deprecated]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::EnableSwitch::dyn_SwitchTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableSwitch::dyn_SwitchTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SwitchTargets"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LipSyncDemo_Control
#include "GlobalNamespace/LipSyncDemo_Control.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode rotateLeftKey
[[deprecated]] ::UnityEngine::KeyCode& GlobalNamespace::LipSyncDemo_Control::dyn_rotateLeftKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotateLeftKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotateLeftKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode rotateRightKey
[[deprecated]] ::UnityEngine::KeyCode& GlobalNamespace::LipSyncDemo_Control::dyn_rotateRightKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotateRightKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotateRightKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode resetRotationKey
[[deprecated]] ::UnityEngine::KeyCode& GlobalNamespace::LipSyncDemo_Control::dyn_resetRotationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_resetRotationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetRotationKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single resetRotation
[[deprecated]] float& GlobalNamespace::LipSyncDemo_Control::dyn_resetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_resetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rotationAmount
[[deprecated]] float& GlobalNamespace::LipSyncDemo_Control::dyn_rotationAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotationAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rotationMax
[[deprecated]] float& GlobalNamespace::LipSyncDemo_Control::dyn_rotationMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotationMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LipSyncDemo_Control.Start
void GlobalNamespace::LipSyncDemo_Control::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_Control.Update
void GlobalNamespace::LipSyncDemo_Control::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_Control.RotateObject
void GlobalNamespace::LipSyncDemo_Control::RotateObject(float amountDegrees, bool absolute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::RotateObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amountDegrees), ::il2cpp_utils::ExtractType(absolute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amountDegrees, absolute);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LipSyncDemo_SetCurrentTarget
#include "GlobalNamespace/LipSyncDemo_SetCurrentTarget.hpp"
// Including type: EnableSwitch
#include "GlobalNamespace/EnableSwitch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public EnableSwitch[] SwitchTargets
[[deprecated]] ::ArrayW<::GlobalNamespace::EnableSwitch*>& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_SwitchTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_SwitchTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SwitchTargets"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::EnableSwitch*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 targetSet
[[deprecated]] int& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_targetSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_targetSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetSet"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxTarget
[[deprecated]] int& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_maxTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_maxTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxTarget"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean XRButtonBeingPressed
[[deprecated]] bool& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_XRButtonBeingPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_XRButtonBeingPressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XRButtonBeingPressed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.Start
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.Update
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.SetCurrentTarget
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::SetCurrentTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::SetCurrentTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCurrentTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.LocalTouchEventCallback
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::LocalTouchEventCallback(::GlobalNamespace::OVRTouchpad::TouchEvent touchEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::LocalTouchEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalTouchEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(touchEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, touchEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncDebugConsole
#include "GlobalNamespace/OVRLipSyncDebugConsole.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVRLipSyncDebugConsole s_Instance
::GlobalNamespace::OVRLipSyncDebugConsole* GlobalNamespace::OVRLipSyncDebugConsole::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncDebugConsole*>("", "OVRLipSyncDebugConsole", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private OVRLipSyncDebugConsole s_Instance
void GlobalNamespace::OVRLipSyncDebugConsole::_set_s_Instance(::GlobalNamespace::OVRLipSyncDebugConsole* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncDebugConsole", "s_Instance", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.ArrayList messages
[[deprecated]] ::System::Collections::ArrayList*& GlobalNamespace::OVRLipSyncDebugConsole::dyn_messages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_messages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messages"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxMessages
[[deprecated]] int& GlobalNamespace::OVRLipSyncDebugConsole::dyn_maxMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_maxMessages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxMessages"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text textMsg
[[deprecated]] ::UnityEngine::UI::Text*& GlobalNamespace::OVRLipSyncDebugConsole::dyn_textMsg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_textMsg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textMsg"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean clearTimeoutOn
[[deprecated]] bool& GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeoutOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeoutOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearTimeoutOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single clearTimeout
[[deprecated]] float& GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearTimeout"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncDebugConsole.get_instance
::GlobalNamespace::OVRLipSyncDebugConsole* GlobalNamespace::OVRLipSyncDebugConsole::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSyncDebugConsole*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Awake
void GlobalNamespace::OVRLipSyncDebugConsole::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Update
void GlobalNamespace::OVRLipSyncDebugConsole::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Init
void GlobalNamespace::OVRLipSyncDebugConsole::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Log
void GlobalNamespace::OVRLipSyncDebugConsole::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: OVRLipSyncDebugConsole.Log
void GlobalNamespace::OVRLipSyncDebugConsole::Log(::StringW message, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, color);
}
// Autogenerated method: OVRLipSyncDebugConsole.Clear
void GlobalNamespace::OVRLipSyncDebugConsole::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.ClearTimeout
void GlobalNamespace::OVRLipSyncDebugConsole::ClearTimeout(float timeToClear) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::ClearTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "ClearTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeToClear)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeToClear);
}
// Autogenerated method: OVRLipSyncDebugConsole.AddMessage
void GlobalNamespace::OVRLipSyncDebugConsole::AddMessage(::StringW message, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::AddMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, color);
}
// Autogenerated method: OVRLipSyncDebugConsole.ClearMessages
void GlobalNamespace::OVRLipSyncDebugConsole::ClearMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::ClearMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.SetClearTimeout
void GlobalNamespace::OVRLipSyncDebugConsole::SetClearTimeout(float timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::SetClearTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetClearTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeout);
}
// Autogenerated method: OVRLipSyncDebugConsole.Prune
void GlobalNamespace::OVRLipSyncDebugConsole::Prune() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Prune");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Prune", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Display
void GlobalNamespace::OVRLipSyncDebugConsole::Display() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Display");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Display", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole..cctor
void GlobalNamespace::OVRLipSyncDebugConsole::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRNamedArrayAttribute
#include "GlobalNamespace/OVRNamedArrayAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String[] names
[[deprecated]] ::ArrayW<::StringW>& GlobalNamespace::OVRNamedArrayAttribute::dyn_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNamedArrayAttribute::dyn_names");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "names"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchpad
#include "GlobalNamespace/OVRTouchpad.hpp"
// Including type: OVRTouchpad/OVRTouchpadCallback`1
#include "GlobalNamespace/OVRTouchpad_OVRTouchpadCallback_1.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: OVRTouchpadHelper
#include "GlobalNamespace/OVRTouchpadHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 moveAmountMouse
::UnityEngine::Vector3 GlobalNamespace::OVRTouchpad::_get_moveAmountMouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_moveAmountMouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "OVRTouchpad", "moveAmountMouse"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 moveAmountMouse
void GlobalNamespace::OVRTouchpad::_set_moveAmountMouse(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_moveAmountMouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "moveAmountMouse", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single minMovMagnitudeMouse
float GlobalNamespace::OVRTouchpad::_get_minMovMagnitudeMouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_minMovMagnitudeMouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTouchpad", "minMovMagnitudeMouse"));
}
// Autogenerated static field setter
// Set static field: static private System.Single minMovMagnitudeMouse
void GlobalNamespace::OVRTouchpad::_set_minMovMagnitudeMouse(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_minMovMagnitudeMouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "minMovMagnitudeMouse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Delegate touchPadCallbacks
::System::Delegate* GlobalNamespace::OVRTouchpad::_get_touchPadCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_touchPadCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Delegate*>("", "OVRTouchpad", "touchPadCallbacks"));
}
// Autogenerated static field setter
// Set static field: static public System.Delegate touchPadCallbacks
void GlobalNamespace::OVRTouchpad::_set_touchPadCallbacks(::System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_touchPadCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "touchPadCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private OVRTouchpadHelper touchpadHelper
::GlobalNamespace::OVRTouchpadHelper* GlobalNamespace::OVRTouchpad::_get_touchpadHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_touchpadHelper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpadHelper*>("", "OVRTouchpad", "touchpadHelper"));
}
// Autogenerated static field setter
// Set static field: static private OVRTouchpadHelper touchpadHelper
void GlobalNamespace::OVRTouchpad::_set_touchpadHelper(::GlobalNamespace::OVRTouchpadHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_touchpadHelper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "touchpadHelper", value));
}
// Autogenerated method: OVRTouchpad..cctor
void GlobalNamespace::OVRTouchpad::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchpad.Create
void GlobalNamespace::OVRTouchpad::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchpad.Update
void GlobalNamespace::OVRTouchpad::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchpad.OnDisable
void GlobalNamespace::OVRTouchpad::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchpad.HandleInputMouse
void GlobalNamespace::OVRTouchpad::HandleInputMouse(ByRef<::UnityEngine::Vector3> move) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::HandleInputMouse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "HandleInputMouse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(move)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(move));
}
// Autogenerated method: OVRTouchpad.AddListener
void GlobalNamespace::OVRTouchpad::AddListener(::GlobalNamespace::OVRTouchpad::OVRTouchpadCallback_1<::GlobalNamespace::OVRTouchpad::TouchEvent>* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::AddListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "AddListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handler);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchpad/TouchEvent
#include "GlobalNamespace/OVRTouchpad.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent SingleTap
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_SingleTap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_SingleTap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "SingleTap"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent SingleTap
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_SingleTap(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_SingleTap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "SingleTap", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent DoubleTap
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_DoubleTap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_DoubleTap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "DoubleTap"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent DoubleTap
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_DoubleTap(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_DoubleTap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "DoubleTap", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Left
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Left
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Left(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Right
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Right
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Right(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Up
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Up"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Up
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Up(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Down
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Down"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Down
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Down(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Down", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRTouchpad::TouchEvent::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchpadHelper
#include "GlobalNamespace/OVRTouchpadHelper.hpp"
// Including type: OVRTouchpad/TouchEvent
#include "GlobalNamespace/OVRTouchpad.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRTouchpadHelper.Awake
void GlobalNamespace::OVRTouchpadHelper::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.Start
void GlobalNamespace::OVRTouchpadHelper::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.Update
void GlobalNamespace::OVRTouchpadHelper::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.OnDisable
void GlobalNamespace::OVRTouchpadHelper::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.LocalTouchEventCallback
void GlobalNamespace::OVRTouchpadHelper::LocalTouchEventCallback(::GlobalNamespace::OVRTouchpad::TouchEvent touchEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::LocalTouchEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalTouchEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(touchEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, touchEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync
#include "GlobalNamespace/OVRLipSync.hpp"
// Including type: OVRLipSync/AudioDataType
#include "GlobalNamespace/OVRLipSync_AudioDataType.hpp"
// Including type: OVRLipSync/Viseme
#include "GlobalNamespace/OVRLipSync_Viseme.hpp"
// Including type: OVRLipSync/Signals
#include "GlobalNamespace/OVRLipSync_Signals.hpp"
// Including type: OVRLipSync/ContextProviders
#include "GlobalNamespace/OVRLipSync_ContextProviders.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 VisemeCount
int GlobalNamespace::OVRLipSync::_get_VisemeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_VisemeCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRLipSync", "VisemeCount"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 VisemeCount
void GlobalNamespace::OVRLipSync::_set_VisemeCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_VisemeCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "VisemeCount", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 SignalCount
int GlobalNamespace::OVRLipSync::_get_SignalCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_SignalCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRLipSync", "SignalCount"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 SignalCount
void GlobalNamespace::OVRLipSync::_set_SignalCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_SignalCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "SignalCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.String strOVRLS
::StringW GlobalNamespace::OVRLipSync::_get_strOVRLS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_strOVRLS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRLipSync", "strOVRLS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strOVRLS
void GlobalNamespace::OVRLipSync::_set_strOVRLS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_strOVRLS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "strOVRLS", value));
}
// Autogenerated static field getter
// Get static field: static private OVRLipSync/Result sInitialized
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::_get_sInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_sInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync", "sInitialized"));
}
// Autogenerated static field setter
// Set static field: static private OVRLipSync/Result sInitialized
void GlobalNamespace::OVRLipSync::_set_sInitialized(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_sInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "sInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync sInstance
::GlobalNamespace::OVRLipSync* GlobalNamespace::OVRLipSync::_get_sInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_sInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync*>("", "OVRLipSync", "sInstance"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync sInstance
void GlobalNamespace::OVRLipSync::_set_sInstance(::GlobalNamespace::OVRLipSync* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_sInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "sInstance", value));
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_Initialize
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_Initialize(int samplerate, int buffersize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samplerate), ::il2cpp_utils::ExtractType(buffersize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, samplerate, buffersize);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_Shutdown
void GlobalNamespace::OVRLipSync::ovrLipSyncDll_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_GetVersion
::System::IntPtr GlobalNamespace::OVRLipSync::ovrLipSyncDll_GetVersion(ByRef<int> Major, ByRef<int> Minor, ByRef<int> Patch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Major), ::il2cpp_utils::ExtractType(Minor), ::il2cpp_utils::ExtractType(Patch)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(Major), byref(Minor), byref(Patch));
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_CreateContextEx
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextEx(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_CreateContextEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_CreateContextWithModelFile
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextWithModelFile(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, ::StringW modelPath, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextWithModelFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_CreateContextWithModelFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(modelPath), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, modelPath, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_DestroyContext
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_DestroyContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_DestroyContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_DestroyContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_ResetContext
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_ResetContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_ResetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_ResetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_SendSignal
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_SendSignal(uint context, ::GlobalNamespace::OVRLipSync::Signals signal, int arg1, int arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_SendSignal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_SendSignal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(signal), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, signal, arg1, arg2);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_ProcessFrameEx
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_ProcessFrameEx(uint context, ::System::IntPtr audioBuffer, uint bufferSize, ::GlobalNamespace::OVRLipSync::AudioDataType dataType, ByRef<int> frameNumber, ByRef<int> frameDelay, ::ArrayW<float> visemes, int visemeCount, ByRef<float> laughterScore, ::ArrayW<float> laughterCategories, int laughterCategoriesLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_ProcessFrameEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_ProcessFrameEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(audioBuffer), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(dataType), ::il2cpp_utils::ExtractType(frameNumber), ::il2cpp_utils::ExtractType(frameDelay), ::il2cpp_utils::ExtractType(visemes), ::il2cpp_utils::ExtractType(visemeCount), ::il2cpp_utils::ExtractType(laughterScore), ::il2cpp_utils::ExtractType(laughterCategories), ::il2cpp_utils::ExtractType(laughterCategoriesLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, audioBuffer, bufferSize, dataType, byref(frameNumber), byref(frameDelay), visemes, visemeCount, byref(laughterScore), laughterCategories, laughterCategoriesLength);
}
// Autogenerated method: OVRLipSync.Awake
void GlobalNamespace::OVRLipSync::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSync.OnDestroy
void GlobalNamespace::OVRLipSync::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSync.Initialize
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.Initialize
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Initialize(int sampleRate, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sampleRate, bufferSize);
}
// Autogenerated method: OVRLipSync.Shutdown
void GlobalNamespace::OVRLipSync::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.IsInitialized
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.CreateContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::CreateContext(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::CreateContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "CreateContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.CreateContextWithModelFile
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::CreateContextWithModelFile(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, ::StringW modelPath, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::CreateContextWithModelFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "CreateContextWithModelFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(modelPath), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, modelPath, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.DestroyContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::DestroyContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::DestroyContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "DestroyContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.ResetContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::ResetContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ResetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ResetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.SendSignal
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::SendSignal(uint context, ::GlobalNamespace::OVRLipSync::Signals signal, int arg1, int arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::SendSignal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "SendSignal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(signal), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, signal, arg1, arg2);
}
// Autogenerated method: OVRLipSync.ProcessFrame
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::ProcessFrame(uint context, ::ArrayW<float> audioBuffer, ::GlobalNamespace::OVRLipSync::Frame* frame, bool stereo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ProcessFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(audioBuffer), ::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(stereo)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, audioBuffer, frame, stereo);
}
// Autogenerated method: OVRLipSync.ProcessFrame
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::ProcessFrame(uint context, ::ArrayW<int16_t> audioBuffer, ::GlobalNamespace::OVRLipSync::Frame* frame, bool stereo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ProcessFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(audioBuffer), ::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(stereo)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, audioBuffer, frame, stereo);
}
// Autogenerated method: OVRLipSync..cctor
void GlobalNamespace::OVRLipSync::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Result
#include "GlobalNamespace/OVRLipSync.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result Success
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result Success
void GlobalNamespace::OVRLipSync::Result::_set_Success(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result Unknown
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result Unknown
void GlobalNamespace::OVRLipSync::Result::_set_Unknown(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result CannotCreateContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_CannotCreateContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_CannotCreateContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "CannotCreateContext"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result CannotCreateContext
void GlobalNamespace::OVRLipSync::Result::_set_CannotCreateContext(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_CannotCreateContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "CannotCreateContext", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result InvalidParam
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_InvalidParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_InvalidParam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "InvalidParam"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result InvalidParam
void GlobalNamespace::OVRLipSync::Result::_set_InvalidParam(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_InvalidParam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "InvalidParam", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result BadSampleRate
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_BadSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_BadSampleRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "BadSampleRate"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result BadSampleRate
void GlobalNamespace::OVRLipSync::Result::_set_BadSampleRate(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_BadSampleRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "BadSampleRate", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result MissingDLL
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_MissingDLL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_MissingDLL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "MissingDLL"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result MissingDLL
void GlobalNamespace::OVRLipSync::Result::_set_MissingDLL(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_MissingDLL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "MissingDLL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result BadVersion
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_BadVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_BadVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "BadVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result BadVersion
void GlobalNamespace::OVRLipSync::Result::_set_BadVersion(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_BadVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "BadVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result UndefinedFunction
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_UndefinedFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_UndefinedFunction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "UndefinedFunction"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result UndefinedFunction
void GlobalNamespace::OVRLipSync::Result::_set_UndefinedFunction(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_UndefinedFunction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "UndefinedFunction", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRLipSync::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/AudioDataType
#include "GlobalNamespace/OVRLipSync_AudioDataType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType S16_Mono
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "S16_Mono"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType S16_Mono
void GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Mono(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "S16_Mono", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType S16_Stereo
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "S16_Stereo"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType S16_Stereo
void GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Stereo(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "S16_Stereo", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType F32_Mono
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "F32_Mono"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType F32_Mono
void GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Mono(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "F32_Mono", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType F32_Stereo
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "F32_Stereo"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType F32_Stereo
void GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Stereo(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "F32_Stereo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRLipSync::AudioDataType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Viseme
#include "GlobalNamespace/OVRLipSync_Viseme.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme sil
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_sil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_sil");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "sil"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme sil
void GlobalNamespace::OVRLipSync::Viseme::_set_sil(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_sil");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "sil", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme PP
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_PP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_PP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "PP"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme PP
void GlobalNamespace::OVRLipSync::Viseme::_set_PP(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_PP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "PP", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme FF
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_FF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_FF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "FF"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme FF
void GlobalNamespace::OVRLipSync::Viseme::_set_FF(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_FF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "FF", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme TH
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_TH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_TH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "TH"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme TH
void GlobalNamespace::OVRLipSync::Viseme::_set_TH(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_TH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "TH", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme DD
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_DD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_DD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "DD"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme DD
void GlobalNamespace::OVRLipSync::Viseme::_set_DD(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_DD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "DD", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme kk
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_kk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_kk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "kk"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme kk
void GlobalNamespace::OVRLipSync::Viseme::_set_kk(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_kk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "kk", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme CH
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_CH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_CH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "CH"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme CH
void GlobalNamespace::OVRLipSync::Viseme::_set_CH(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_CH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "CH", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme SS
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_SS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_SS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "SS"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme SS
void GlobalNamespace::OVRLipSync::Viseme::_set_SS(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_SS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "SS", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme nn
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_nn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_nn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "nn"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme nn
void GlobalNamespace::OVRLipSync::Viseme::_set_nn(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_nn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "nn", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme RR
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_RR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_RR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "RR"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme RR
void GlobalNamespace::OVRLipSync::Viseme::_set_RR(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_RR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "RR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme aa
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_aa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_aa");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "aa"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme aa
void GlobalNamespace::OVRLipSync::Viseme::_set_aa(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_aa");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "aa", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme E
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_E() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_E");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "E"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme E
void GlobalNamespace::OVRLipSync::Viseme::_set_E(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_E");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "E", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme ih
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_ih() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_ih");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "ih"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme ih
void GlobalNamespace::OVRLipSync::Viseme::_set_ih(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_ih");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "ih", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme oh
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_oh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_oh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "oh"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme oh
void GlobalNamespace::OVRLipSync::Viseme::_set_oh(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_oh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "oh", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme ou
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_ou() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_ou");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "ou"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme ou
void GlobalNamespace::OVRLipSync::Viseme::_set_ou(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_ou");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "ou", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRLipSync::Viseme::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Signals
#include "GlobalNamespace/OVRLipSync_Signals.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeOn
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeOn"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeOn
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeOn(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeOn", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeOff
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeOff"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeOff
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeOff(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeOff", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeAmount
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeAmount"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeAmount
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeAmount(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeAmount", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeSmoothing
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeSmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeSmoothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeSmoothing"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeSmoothing
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeSmoothing(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeSmoothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeSmoothing", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals LaughterAmount
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_LaughterAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_LaughterAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "LaughterAmount"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals LaughterAmount
void GlobalNamespace::OVRLipSync::Signals::_set_LaughterAmount(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_LaughterAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "LaughterAmount", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRLipSync::Signals::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/ContextProviders
#include "GlobalNamespace/OVRLipSync_ContextProviders.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/ContextProviders Original
::GlobalNamespace::OVRLipSync::ContextProviders GlobalNamespace::OVRLipSync::ContextProviders::_get_Original() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_get_Original");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::ContextProviders>("", "OVRLipSync/ContextProviders", "Original"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/ContextProviders Original
void GlobalNamespace::OVRLipSync::ContextProviders::_set_Original(::GlobalNamespace::OVRLipSync::ContextProviders value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_set_Original");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/ContextProviders", "Original", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/ContextProviders Enhanced
::GlobalNamespace::OVRLipSync::ContextProviders GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::ContextProviders>("", "OVRLipSync/ContextProviders", "Enhanced"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/ContextProviders Enhanced
void GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced(::GlobalNamespace::OVRLipSync::ContextProviders value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/ContextProviders", "Enhanced", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/ContextProviders Enhanced_with_Laughter
::GlobalNamespace::OVRLipSync::ContextProviders GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced_with_Laughter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced_with_Laughter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::ContextProviders>("", "OVRLipSync/ContextProviders", "Enhanced_with_Laughter"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/ContextProviders Enhanced_with_Laughter
void GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced_with_Laughter(::GlobalNamespace::OVRLipSync::ContextProviders value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced_with_Laughter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/ContextProviders", "Enhanced_with_Laughter", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRLipSync::ContextProviders::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 frameNumber
[[deprecated]] int& GlobalNamespace::OVRLipSync::Frame::dyn_frameNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_frameNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 frameDelay
[[deprecated]] int& GlobalNamespace::OVRLipSync::Frame::dyn_frameDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_frameDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameDelay"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] Visemes
[[deprecated]] ::ArrayW<float>& GlobalNamespace::OVRLipSync::Frame::dyn_Visemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_Visemes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Visemes"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterScore
[[deprecated]] float& GlobalNamespace::OVRLipSync::Frame::dyn_laughterScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_laughterScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterScore"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSync/Frame.CopyInput
void GlobalNamespace::OVRLipSync::Frame::CopyInput(::GlobalNamespace::OVRLipSync::Frame* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::CopyInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: OVRLipSync/Frame.Reset
void GlobalNamespace::OVRLipSync::Frame::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContext
#include "GlobalNamespace/OVRLipSyncContext.hpp"
// Including type: OVRTouchpad/TouchEvent
#include "GlobalNamespace/OVRTouchpad.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableKeyboardInput
[[deprecated]] bool& GlobalNamespace::OVRLipSyncContext::dyn_enableKeyboardInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_enableKeyboardInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableKeyboardInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableTouchInput
[[deprecated]] bool& GlobalNamespace::OVRLipSyncContext::dyn_enableTouchInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_enableTouchInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableTouchInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean audioLoopback
[[deprecated]] bool& GlobalNamespace::OVRLipSyncContext::dyn_audioLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_audioLoopback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioLoopback"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode loopbackKey
[[deprecated]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContext::dyn_loopbackKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_loopbackKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loopbackKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showVisemes
[[deprecated]] bool& GlobalNamespace::OVRLipSyncContext::dyn_showVisemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_showVisemes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showVisemes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode debugVisemesKey
[[deprecated]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContext::dyn_debugVisemesKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_debugVisemesKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugVisemesKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean skipAudioSource
[[deprecated]] bool& GlobalNamespace::OVRLipSyncContext::dyn_skipAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_skipAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skipAudioSource"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gain
[[deprecated]] float& GlobalNamespace::OVRLipSyncContext::dyn_gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_gain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasDebugConsole
[[deprecated]] bool& GlobalNamespace::OVRLipSyncContext::dyn_hasDebugConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_hasDebugConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasDebugConsole"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode debugLaughterKey
[[deprecated]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContext::dyn_debugLaughterKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_debugLaughterKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugLaughterKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showLaughter
[[deprecated]] bool& GlobalNamespace::OVRLipSyncContext::dyn_showLaughter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_showLaughter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showLaughter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterScore
[[deprecated]] float& GlobalNamespace::OVRLipSyncContext::dyn_laughterScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_laughterScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterScore"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContext.Start
void GlobalNamespace::OVRLipSyncContext::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.HandleKeyboard
void GlobalNamespace::OVRLipSyncContext::HandleKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::HandleKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.Update
void GlobalNamespace::OVRLipSyncContext::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.PreprocessAudioSamples
void GlobalNamespace::OVRLipSyncContext::PreprocessAudioSamples(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::PreprocessAudioSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessAudioSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.PostprocessAudioSamples
void GlobalNamespace::OVRLipSyncContext::PostprocessAudioSamples(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::PostprocessAudioSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostprocessAudioSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.ProcessAudioSamplesRaw
void GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAudioSamplesRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.ProcessAudioSamplesRaw
void GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw(::ArrayW<int16_t> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAudioSamplesRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.ProcessAudioSamples
void GlobalNamespace::OVRLipSyncContext::ProcessAudioSamples(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ProcessAudioSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAudioSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.OnAudioFilterRead
void GlobalNamespace::OVRLipSyncContext::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.DebugShowVisemesAndLaughter
void GlobalNamespace::OVRLipSyncContext::DebugShowVisemesAndLaughter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::DebugShowVisemesAndLaughter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugShowVisemesAndLaughter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.ToggleAudioLoopback
void GlobalNamespace::OVRLipSyncContext::ToggleAudioLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ToggleAudioLoopback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleAudioLoopback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.LocalTouchEventCallback
void GlobalNamespace::OVRLipSyncContext::LocalTouchEventCallback(::GlobalNamespace::OVRTouchpad::TouchEvent touchEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::LocalTouchEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalTouchEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(touchEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, touchEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextBase
#include "GlobalNamespace/OVRLipSyncContextBase.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated]] ::UnityEngine::AudioSource*& GlobalNamespace::OVRLipSyncContextBase::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRLipSync/ContextProviders provider
[[deprecated]] ::GlobalNamespace::OVRLipSync::ContextProviders& GlobalNamespace::OVRLipSyncContextBase::dyn_provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "provider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSync::ContextProviders*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableAcceleration
[[deprecated]] bool& GlobalNamespace::OVRLipSyncContextBase::dyn_enableAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_enableAcceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableAcceleration"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSync/Frame frame
[[deprecated]] ::GlobalNamespace::OVRLipSync::Frame*& GlobalNamespace::OVRLipSyncContextBase::dyn_frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_frame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frame"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSync::Frame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 context
[[deprecated]] uint& GlobalNamespace::OVRLipSyncContextBase::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _smoothing
[[deprecated]] int& GlobalNamespace::OVRLipSyncContextBase::dyn__smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn__smoothing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothing"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextBase.get_Smoothing
int GlobalNamespace::OVRLipSyncContextBase::get_Smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::get_Smoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Smoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.set_Smoothing
void GlobalNamespace::OVRLipSyncContextBase::set_Smoothing(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::set_Smoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Smoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRLipSyncContextBase.get_Context
uint GlobalNamespace::OVRLipSyncContextBase::get_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::get_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.get_Frame
::GlobalNamespace::OVRLipSync::Frame* GlobalNamespace::OVRLipSyncContextBase::get_Frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::get_Frame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Frame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Frame*, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.Awake
void GlobalNamespace::OVRLipSyncContextBase::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.OnDestroy
void GlobalNamespace::OVRLipSyncContextBase::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.GetCurrentPhonemeFrame
::GlobalNamespace::OVRLipSync::Frame* GlobalNamespace::OVRLipSyncContextBase::GetCurrentPhonemeFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::GetCurrentPhonemeFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentPhonemeFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Frame*, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.SetVisemeBlend
void GlobalNamespace::OVRLipSyncContextBase::SetVisemeBlend(int viseme, int amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::SetVisemeBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisemeBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viseme), ::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viseme, amount);
}
// Autogenerated method: OVRLipSyncContextBase.SetLaughterBlend
void GlobalNamespace::OVRLipSyncContextBase::SetLaughterBlend(int amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::SetLaughterBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLaughterBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amount);
}
// Autogenerated method: OVRLipSyncContextBase.ResetContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSyncContextBase::ResetContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::ResetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextCanned
#include "GlobalNamespace/OVRLipSyncContextCanned.hpp"
// Including type: OVRLipSyncSequence
#include "GlobalNamespace/OVRLipSyncSequence.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRLipSyncSequence currentSequence
[[deprecated]] ::GlobalNamespace::OVRLipSyncSequence*& GlobalNamespace::OVRLipSyncContextCanned::dyn_currentSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextCanned::dyn_currentSequence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSequence"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncSequence**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextCanned.Update
void GlobalNamespace::OVRLipSyncContextCanned::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextCanned::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextMorphTarget
#include "GlobalNamespace/OVRLipSyncContextMorphTarget.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: OVRLipSyncContextBase
#include "GlobalNamespace/OVRLipSyncContextBase.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SkinnedMeshRenderer skinnedMeshRenderer
[[deprecated]] ::UnityEngine::SkinnedMeshRenderer*& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_skinnedMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_skinnedMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skinnedMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] visemeToBlendTargets
[[deprecated]] ::ArrayW<int>& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeToBlendTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeToBlendTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visemeToBlendTargets"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableVisemeTestKeys
[[deprecated]] bool& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_enableVisemeTestKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_enableVisemeTestKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableVisemeTestKeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode[] visemeTestKeys
[[deprecated]] ::ArrayW<::UnityEngine::KeyCode>& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeTestKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeTestKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visemeTestKeys"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::KeyCode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode laughterKey
[[deprecated]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 laughterBlendTarget
[[deprecated]] int& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterBlendTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterBlendTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterBlendTarget"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterThreshold
[[deprecated]] float& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterMultiplier
[[deprecated]] float& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 smoothAmount
[[deprecated]] int& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_smoothAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_smoothAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothAmount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSyncContextBase lipsyncContext
[[deprecated]] ::GlobalNamespace::OVRLipSyncContextBase*& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_lipsyncContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_lipsyncContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lipsyncContext"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncContextBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.Start
void GlobalNamespace::OVRLipSyncContextMorphTarget::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.Update
void GlobalNamespace::OVRLipSyncContextMorphTarget::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.CheckForKeys
void GlobalNamespace::OVRLipSyncContextMorphTarget::CheckForKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::CheckForKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.SetVisemeToMorphTarget
void GlobalNamespace::OVRLipSyncContextMorphTarget::SetVisemeToMorphTarget(::GlobalNamespace::OVRLipSync::Frame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::SetVisemeToMorphTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisemeToMorphTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.SetLaughterToMorphTarget
void GlobalNamespace::OVRLipSyncContextMorphTarget::SetLaughterToMorphTarget(::GlobalNamespace::OVRLipSync::Frame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::SetLaughterToMorphTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLaughterToMorphTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.CheckVisemeKey
void GlobalNamespace::OVRLipSyncContextMorphTarget::CheckVisemeKey(::UnityEngine::KeyCode key, int viseme, int amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::CheckVisemeKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckVisemeKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(viseme), ::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, viseme, amount);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.CheckLaughterKey
void GlobalNamespace::OVRLipSyncContextMorphTarget::CheckLaughterKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::CheckLaughterKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckLaughterKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextTextureFlip
#include "GlobalNamespace/OVRLipSyncContextTextureFlip.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: OVRLipSyncContextBase
#include "GlobalNamespace/OVRLipSyncContextBase.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material material
[[deprecated]] ::UnityEngine::Material*& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture[] Textures
[[deprecated]] ::ArrayW<::UnityEngine::Texture*>& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_Textures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_Textures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Textures"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 smoothAmount
[[deprecated]] int& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_smoothAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_smoothAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothAmount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSyncContextBase lipsyncContext
[[deprecated]] ::GlobalNamespace::OVRLipSyncContextBase*& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_lipsyncContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_lipsyncContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lipsyncContext"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncContextBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSync/Frame oldFrame
[[deprecated]] ::GlobalNamespace::OVRLipSync::Frame*& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_oldFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_oldFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oldFrame"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSync::Frame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextTextureFlip.Start
void GlobalNamespace::OVRLipSyncContextTextureFlip::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextTextureFlip.Update
void GlobalNamespace::OVRLipSyncContextTextureFlip::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextTextureFlip.SetVisemeToTexture
void GlobalNamespace::OVRLipSyncContextTextureFlip::SetVisemeToTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::SetVisemeToTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisemeToTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncMicInput
#include "GlobalNamespace/OVRLipSyncMicInput.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated]] ::UnityEngine::AudioSource*& GlobalNamespace::OVRLipSyncMicInput::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableMicSelectionGUI
[[deprecated]] bool& GlobalNamespace::OVRLipSyncMicInput::dyn_enableMicSelectionGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_enableMicSelectionGUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableMicSelectionGUI"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode micSelectionGUIKey
[[deprecated]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncMicInput::dyn_micSelectionGUIKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micSelectionGUIKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micSelectionGUIKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single micInputVolume
[[deprecated]] float& GlobalNamespace::OVRLipSyncMicInput::dyn_micInputVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micInputVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micInputVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 micFrequency
[[deprecated]] int& GlobalNamespace::OVRLipSyncMicInput::dyn_micFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micFrequency"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRLipSyncMicInput/micActivation micControl
[[deprecated]] ::GlobalNamespace::OVRLipSyncMicInput::micActivation& GlobalNamespace::OVRLipSyncMicInput::dyn_micControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micControl"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncMicInput::micActivation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode micActivationKey
[[deprecated]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncMicInput::dyn_micActivationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micActivationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micActivationKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String selectedDevice
[[deprecated]] ::StringW& GlobalNamespace::OVRLipSyncMicInput::dyn_selectedDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_selectedDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectedDevice"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean micSelected
[[deprecated]] bool& GlobalNamespace::OVRLipSyncMicInput::dyn_micSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micSelected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minFreq
[[deprecated]] int& GlobalNamespace::OVRLipSyncMicInput::dyn_minFreq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_minFreq");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minFreq"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxFreq
[[deprecated]] int& GlobalNamespace::OVRLipSyncMicInput::dyn_maxFreq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_maxFreq");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxFreq"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean focused
[[deprecated]] bool& GlobalNamespace::OVRLipSyncMicInput::dyn_focused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_focused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "focused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
[[deprecated]] bool& GlobalNamespace::OVRLipSyncMicInput::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncMicInput.get_MicFrequency
float GlobalNamespace::OVRLipSyncMicInput::get_MicFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::get_MicFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MicFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.set_MicFrequency
void GlobalNamespace::OVRLipSyncMicInput::set_MicFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::set_MicFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MicFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRLipSyncMicInput.Awake
void GlobalNamespace::OVRLipSyncMicInput::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.Start
void GlobalNamespace::OVRLipSyncMicInput::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.InitializeMicrophone
void GlobalNamespace::OVRLipSyncMicInput::InitializeMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::InitializeMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.Update
void GlobalNamespace::OVRLipSyncMicInput::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.OnApplicationFocus
void GlobalNamespace::OVRLipSyncMicInput::OnApplicationFocus(bool focus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnApplicationFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focus);
}
// Autogenerated method: OVRLipSyncMicInput.OnApplicationPause
void GlobalNamespace::OVRLipSyncMicInput::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pauseStatus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pauseStatus);
}
// Autogenerated method: OVRLipSyncMicInput.OnDisable
void GlobalNamespace::OVRLipSyncMicInput::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.OnGUI
void GlobalNamespace::OVRLipSyncMicInput::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.MicDeviceGUI
void GlobalNamespace::OVRLipSyncMicInput::MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::MicDeviceGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MicDeviceGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(top), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(buttonSpaceTop), ::il2cpp_utils::ExtractType(buttonSpaceLeft)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, left, top, width, height, buttonSpaceTop, buttonSpaceLeft);
}
// Autogenerated method: OVRLipSyncMicInput.GetMicCaps
void GlobalNamespace::OVRLipSyncMicInput::GetMicCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::GetMicCaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMicCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.StartMicrophone
void GlobalNamespace::OVRLipSyncMicInput::StartMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::StartMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.StopMicrophone
void GlobalNamespace::OVRLipSyncMicInput::StopMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::StopMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.GetAveragedVolume
float GlobalNamespace::OVRLipSyncMicInput::GetAveragedVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::GetAveragedVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAveragedVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncMicInput/micActivation
#include "GlobalNamespace/OVRLipSyncMicInput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSyncMicInput/micActivation HoldToSpeak
::GlobalNamespace::OVRLipSyncMicInput::micActivation GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_HoldToSpeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_HoldToSpeak");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncMicInput::micActivation>("", "OVRLipSyncMicInput/micActivation", "HoldToSpeak"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSyncMicInput/micActivation HoldToSpeak
void GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_HoldToSpeak(::GlobalNamespace::OVRLipSyncMicInput::micActivation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_HoldToSpeak");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncMicInput/micActivation", "HoldToSpeak", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSyncMicInput/micActivation PushToSpeak
::GlobalNamespace::OVRLipSyncMicInput::micActivation GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_PushToSpeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_PushToSpeak");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncMicInput::micActivation>("", "OVRLipSyncMicInput/micActivation", "PushToSpeak"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSyncMicInput/micActivation PushToSpeak
void GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_PushToSpeak(::GlobalNamespace::OVRLipSyncMicInput::micActivation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_PushToSpeak");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncMicInput/micActivation", "PushToSpeak", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSyncMicInput/micActivation ConstantSpeak
::GlobalNamespace::OVRLipSyncMicInput::micActivation GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_ConstantSpeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_ConstantSpeak");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncMicInput::micActivation>("", "OVRLipSyncMicInput/micActivation", "ConstantSpeak"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSyncMicInput/micActivation ConstantSpeak
void GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_ConstantSpeak(::GlobalNamespace::OVRLipSyncMicInput::micActivation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_ConstantSpeak");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncMicInput/micActivation", "ConstantSpeak", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRLipSyncMicInput::micActivation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncSequence
#include "GlobalNamespace/OVRLipSyncSequence.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<OVRLipSync/Frame> entries
[[deprecated]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRLipSync::Frame*>*& GlobalNamespace::OVRLipSyncSequence::dyn_entries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncSequence::dyn_entries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entries"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRLipSync::Frame*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single length
[[deprecated]] float& GlobalNamespace::OVRLipSyncSequence::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncSequence::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncSequence.GetFrameAtTime
::GlobalNamespace::OVRLipSync::Frame* GlobalNamespace::OVRLipSyncSequence::GetFrameAtTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncSequence::GetFrameAtTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrameAtTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Frame*, false>(this, ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GroupPresenceSample
#include "GlobalNamespace/GroupPresenceSample.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceJoinIntent
#include "Oculus/Platform/Models/GroupPresenceJoinIntent.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceLeaveIntent
#include "Oculus/Platform/Models/GroupPresenceLeaveIntent.hpp"
// Including type: Oculus.Platform.Models.LaunchInvitePanelFlowResult
#include "Oculus/Platform/Models/LaunchInvitePanelFlowResult.hpp"
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Models.InvitePanelResultInfo
#include "Oculus/Platform/Models/InvitePanelResultInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsJoinable
[[deprecated]] bool& GlobalNamespace::GroupPresenceSample::dyn_IsJoinable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_IsJoinable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsJoinable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String LobbySessionID
[[deprecated]] ::StringW& GlobalNamespace::GroupPresenceSample::dyn_LobbySessionID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_LobbySessionID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LobbySessionID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MatchSessionID
[[deprecated]] ::StringW& GlobalNamespace::GroupPresenceSample::dyn_MatchSessionID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_MatchSessionID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchSessionID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 SuggestedUserID
[[deprecated]] uint64_t& GlobalNamespace::GroupPresenceSample::dyn_SuggestedUserID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_SuggestedUserID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SuggestedUserID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text InVRConsole
[[deprecated]] ::UnityEngine::UI::Text*& GlobalNamespace::GroupPresenceSample::dyn_InVRConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_InVRConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InVRConsole"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text DestinationsConsole
[[deprecated]] ::UnityEngine::UI::Text*& GlobalNamespace::GroupPresenceSample::dyn_DestinationsConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_DestinationsConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationsConsole"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> DestinationAPINames
[[deprecated]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::GroupPresenceSample::dyn_DestinationAPINames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_DestinationAPINames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationAPINames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 LoggedInUserID
[[deprecated]] uint64_t& GlobalNamespace::GroupPresenceSample::dyn_LoggedInUserID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_LoggedInUserID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoggedInUserID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 DestinationIndex
[[deprecated]] int& GlobalNamespace::GroupPresenceSample::dyn_DestinationIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_DestinationIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean OnlyPushUpOnce
[[deprecated]] bool& GlobalNamespace::GroupPresenceSample::dyn_OnlyPushUpOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_OnlyPushUpOnce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnlyPushUpOnce"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GroupPresenceSample.Start
void GlobalNamespace::GroupPresenceSample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.SetPresence
void GlobalNamespace::GroupPresenceSample::SetPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::SetPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.ClearPresence
void GlobalNamespace::GroupPresenceSample::ClearPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::ClearPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.LaunchInvitePanel
void GlobalNamespace::GroupPresenceSample::LaunchInvitePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::LaunchInvitePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.LaunchRosterPanel
void GlobalNamespace::GroupPresenceSample::LaunchRosterPanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::LaunchRosterPanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchRosterPanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.OnJoinIntentChangeNotif
void GlobalNamespace::GroupPresenceSample::OnJoinIntentChangeNotif(::Oculus::Platform::Message_1<::Oculus::Platform::Models::GroupPresenceJoinIntent*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnJoinIntentChangeNotif");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnJoinIntentChangeNotif", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.OnLeaveIntentChangeNotif
void GlobalNamespace::GroupPresenceSample::OnLeaveIntentChangeNotif(::Oculus::Platform::Message_1<::Oculus::Platform::Models::GroupPresenceLeaveIntent*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnLeaveIntentChangeNotif");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLeaveIntentChangeNotif", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.OnInviteSentNotif
void GlobalNamespace::GroupPresenceSample::OnInviteSentNotif(::Oculus::Platform::Message_1<::Oculus::Platform::Models::LaunchInvitePanelFlowResult*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnInviteSentNotif");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInviteSentNotif", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.OnGetDestinations
void GlobalNamespace::GroupPresenceSample::OnGetDestinations(::Oculus::Platform::Message_1<::Oculus::Platform::Models::DestinationList*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnGetDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGetDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.Update
void GlobalNamespace::GroupPresenceSample::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.ScrollThroughDestinations
void GlobalNamespace::GroupPresenceSample::ScrollThroughDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::ScrollThroughDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollThroughDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.UpdateDestinationsConsole
void GlobalNamespace::GroupPresenceSample::UpdateDestinationsConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::UpdateDestinationsConsole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDestinationsConsole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.OnLoggedInUser
void GlobalNamespace::GroupPresenceSample::OnLoggedInUser(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnLoggedInUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLoggedInUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.UpdateConsole
void GlobalNamespace::GroupPresenceSample::UpdateConsole(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::UpdateConsole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConsole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GroupPresenceSample.PressAButton
bool GlobalNamespace::GroupPresenceSample::PressAButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressAButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressAButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressBButton
bool GlobalNamespace::GroupPresenceSample::PressBButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressBButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressBButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressXButton
bool GlobalNamespace::GroupPresenceSample::PressXButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressXButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressXButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressYButton
bool GlobalNamespace::GroupPresenceSample::PressYButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressYButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressYButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressUp
bool GlobalNamespace::GroupPresenceSample::PressUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressDown
bool GlobalNamespace::GroupPresenceSample::PressDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.<Start>b__8_0
void GlobalNamespace::GroupPresenceSample::$Start$b__8_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::PlatformInitialize*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<Start>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.<SetPresence>b__9_0
void GlobalNamespace::GroupPresenceSample::$SetPresence$b__9_0(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<SetPresence>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetPresence>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.<SetPresence>b__9_1
void GlobalNamespace::GroupPresenceSample::$SetPresence$b__9_1(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<SetPresence>b__9_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetPresence>b__9_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message2);
}
// Autogenerated method: GroupPresenceSample.<ClearPresence>b__10_0
void GlobalNamespace::GroupPresenceSample::$ClearPresence$b__10_0(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<ClearPresence>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClearPresence>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.<ClearPresence>b__10_1
void GlobalNamespace::GroupPresenceSample::$ClearPresence$b__10_1(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<ClearPresence>b__10_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClearPresence>b__10_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message2);
}
// Autogenerated method: GroupPresenceSample.<LaunchInvitePanel>b__11_0
void GlobalNamespace::GroupPresenceSample::$LaunchInvitePanel$b__11_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::InvitePanelResultInfo*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<LaunchInvitePanel>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LaunchInvitePanel>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.<LaunchRosterPanel>b__12_0
void GlobalNamespace::GroupPresenceSample::$LaunchRosterPanel$b__12_0(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<LaunchRosterPanel>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LaunchRosterPanel>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RichPresenceSample
#include "GlobalNamespace/RichPresenceSample.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String DeeplinkMessageOverride
[[deprecated]] ::StringW& GlobalNamespace::RichPresenceSample::dyn_DeeplinkMessageOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_DeeplinkMessageOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeeplinkMessageOverride"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsJoinable
[[deprecated]] bool& GlobalNamespace::RichPresenceSample::dyn_IsJoinable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_IsJoinable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsJoinable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsIdle
[[deprecated]] bool& GlobalNamespace::RichPresenceSample::dyn_IsIdle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_IsIdle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsIdle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String InstanceID
[[deprecated]] ::StringW& GlobalNamespace::RichPresenceSample::dyn_InstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_InstanceID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InstanceID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 CurrentCapacity
[[deprecated]] uint& GlobalNamespace::RichPresenceSample::dyn_CurrentCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_CurrentCapacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentCapacity"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 MaxCapacity
[[deprecated]] uint& GlobalNamespace::RichPresenceSample::dyn_MaxCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_MaxCapacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxCapacity"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime StartTime
[[deprecated]] ::System::DateTime& GlobalNamespace::RichPresenceSample::dyn_StartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_StartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime EndTime
[[deprecated]] ::System::DateTime& GlobalNamespace::RichPresenceSample::dyn_EndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_EndTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EndTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.RichPresenceExtraContext ExtraContext
[[deprecated]] ::Oculus::Platform::RichPresenceExtraContext& GlobalNamespace::RichPresenceSample::dyn_ExtraContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_ExtraContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtraContext"))->offset;
  return *reinterpret_cast<::Oculus::Platform::RichPresenceExtraContext*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text InVRConsole
[[deprecated]] ::UnityEngine::UI::Text*& GlobalNamespace::RichPresenceSample::dyn_InVRConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_InVRConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InVRConsole"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text DestinationsConsole
[[deprecated]] ::UnityEngine::UI::Text*& GlobalNamespace::RichPresenceSample::dyn_DestinationsConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_DestinationsConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationsConsole"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> DestinationAPINames
[[deprecated]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::RichPresenceSample::dyn_DestinationAPINames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_DestinationAPINames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationAPINames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 LoggedInUserID
[[deprecated]] uint64_t& GlobalNamespace::RichPresenceSample::dyn_LoggedInUserID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_LoggedInUserID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoggedInUserID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String TrackingID
[[deprecated]] ::StringW& GlobalNamespace::RichPresenceSample::dyn_TrackingID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_TrackingID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackingID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 DestinationIndex
[[deprecated]] int& GlobalNamespace::RichPresenceSample::dyn_DestinationIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_DestinationIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean OnlyPushUpOnce
[[deprecated]] bool& GlobalNamespace::RichPresenceSample::dyn_OnlyPushUpOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_OnlyPushUpOnce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnlyPushUpOnce"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RichPresenceSample.Start
void GlobalNamespace::RichPresenceSample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.SetPresence
void GlobalNamespace::RichPresenceSample::SetPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::SetPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.ClearPresence
void GlobalNamespace::RichPresenceSample::ClearPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::ClearPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.GetAppLaunchDetails
::StringW GlobalNamespace::RichPresenceSample::GetAppLaunchDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::GetAppLaunchDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAppLaunchDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.OnLaunchIntentChangeNotif
void GlobalNamespace::RichPresenceSample::OnLaunchIntentChangeNotif(::Oculus::Platform::Message_1<::StringW>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::OnLaunchIntentChangeNotif");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLaunchIntentChangeNotif", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RichPresenceSample.OnGetDestinations
void GlobalNamespace::RichPresenceSample::OnGetDestinations(::Oculus::Platform::Message_1<::Oculus::Platform::Models::DestinationList*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::OnGetDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGetDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RichPresenceSample.Update
void GlobalNamespace::RichPresenceSample::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.ScrollThroughDestinations
void GlobalNamespace::RichPresenceSample::ScrollThroughDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::ScrollThroughDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollThroughDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.UpdateDestinationsConsole
void GlobalNamespace::RichPresenceSample::UpdateDestinationsConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::UpdateDestinationsConsole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDestinationsConsole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.OnLoggedInUser
void GlobalNamespace::RichPresenceSample::OnLoggedInUser(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::OnLoggedInUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLoggedInUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RichPresenceSample.UpdateConsole
void GlobalNamespace::RichPresenceSample::UpdateConsole(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::UpdateConsole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConsole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RichPresenceSample.PressAButton
bool GlobalNamespace::RichPresenceSample::PressAButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::PressAButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressAButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.PressBButton
bool GlobalNamespace::RichPresenceSample::PressBButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::PressBButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressBButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.PressUp
bool GlobalNamespace::RichPresenceSample::PressUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::PressUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.PressDown
bool GlobalNamespace::RichPresenceSample::PressDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::PressDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.<Start>b__14_0
void GlobalNamespace::RichPresenceSample::$Start$b__14_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::PlatformInitialize*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::<Start>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RichPresenceSample.<SetPresence>b__15_0
void GlobalNamespace::RichPresenceSample::$SetPresence$b__15_0(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::<SetPresence>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetPresence>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RichPresenceSample.<SetPresence>b__15_1
void GlobalNamespace::RichPresenceSample::$SetPresence$b__15_1(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::<SetPresence>b__15_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetPresence>b__15_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message2);
}
// Autogenerated method: RichPresenceSample.<ClearPresence>b__16_0
void GlobalNamespace::RichPresenceSample::$ClearPresence$b__16_0(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::<ClearPresence>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClearPresence>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RichPresenceSample.<ClearPresence>b__16_1
void GlobalNamespace::RichPresenceSample::$ClearPresence$b__16_1(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::<ClearPresence>b__16_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClearPresence>b__16_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BufferedAudioStream
#include "GlobalNamespace/BufferedAudioStream.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean VerboseLogging
bool GlobalNamespace::BufferedAudioStream::_get_VerboseLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_VerboseLogging");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "BufferedAudioStream", "VerboseLogging"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean VerboseLogging
void GlobalNamespace::BufferedAudioStream::_set_VerboseLogging(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_VerboseLogging");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "VerboseLogging", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single bufferLengthSeconds
float GlobalNamespace::BufferedAudioStream::_get_bufferLengthSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_bufferLengthSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BufferedAudioStream", "bufferLengthSeconds"));
}
// Autogenerated static field setter
// Set static field: static private System.Single bufferLengthSeconds
void GlobalNamespace::BufferedAudioStream::_set_bufferLengthSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_bufferLengthSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "bufferLengthSeconds", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 sampleRate
int GlobalNamespace::BufferedAudioStream::_get_sampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_sampleRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BufferedAudioStream", "sampleRate"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 sampleRate
void GlobalNamespace::BufferedAudioStream::_set_sampleRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_sampleRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "sampleRate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 bufferSize
int GlobalNamespace::BufferedAudioStream::_get_bufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_bufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BufferedAudioStream", "bufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 bufferSize
void GlobalNamespace::BufferedAudioStream::_set_bufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_bufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "bufferSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single playbackDelayTimeSeconds
float GlobalNamespace::BufferedAudioStream::_get_playbackDelayTimeSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_playbackDelayTimeSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BufferedAudioStream", "playbackDelayTimeSeconds"));
}
// Autogenerated static field setter
// Set static field: static private System.Single playbackDelayTimeSeconds
void GlobalNamespace::BufferedAudioStream::_set_playbackDelayTimeSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_playbackDelayTimeSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "playbackDelayTimeSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audio
[[deprecated]] ::UnityEngine::AudioSource*& GlobalNamespace::BufferedAudioStream::dyn_audio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_audio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audio"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] audioBuffer
[[deprecated]] ::ArrayW<float>& GlobalNamespace::BufferedAudioStream::dyn_audioBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_audioBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 writePos
[[deprecated]] int& GlobalNamespace::BufferedAudioStream::dyn_writePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_writePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single playbackDelayRemaining
[[deprecated]] float& GlobalNamespace::BufferedAudioStream::dyn_playbackDelayRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_playbackDelayRemaining");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playbackDelayRemaining"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single remainingBufferTime
[[deprecated]] float& GlobalNamespace::BufferedAudioStream::dyn_remainingBufferTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_remainingBufferTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remainingBufferTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BufferedAudioStream.Update
void GlobalNamespace::BufferedAudioStream::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BufferedAudioStream.Stop
void GlobalNamespace::BufferedAudioStream::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BufferedAudioStream.AddData
void GlobalNamespace::BufferedAudioStream::AddData(::ArrayW<float> samples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::AddData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samples)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, samples);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.AbuseReportOptions
#include "Oculus/Platform/AbuseReportOptions.hpp"
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated]] ::System::IntPtr& Oculus::Platform::AbuseReportOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.AbuseReportOptions.SetPreventPeopleChooser
void Oculus::Platform::AbuseReportOptions::SetPreventPeopleChooser(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::SetPreventPeopleChooser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPreventPeopleChooser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AbuseReportOptions.SetReportType
void Oculus::Platform::AbuseReportOptions::SetReportType(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::SetReportType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReportType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AbuseReportOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::AbuseReportOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.AbuseReportOptions.Finalize
void Oculus::Platform::AbuseReportOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B6448
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportType Unknown
::Oculus::Platform::AbuseReportType Oculus::Platform::AbuseReportType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportType>("Oculus.Platform", "AbuseReportType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportType Unknown
void Oculus::Platform::AbuseReportType::_set_Unknown(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B6480
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportType Object
::Oculus::Platform::AbuseReportType Oculus::Platform::AbuseReportType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportType>("Oculus.Platform", "AbuseReportType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportType Object
void Oculus::Platform::AbuseReportType::_set_Object(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportType", "Object", value));
}
// [DescriptionAttribute] Offset: 0x6B64B8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportType User
::Oculus::Platform::AbuseReportType Oculus::Platform::AbuseReportType::_get_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_get_User");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportType>("Oculus.Platform", "AbuseReportType", "User"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportType User
void Oculus::Platform::AbuseReportType::_set_User(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_set_User");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportType", "User", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Oculus::Platform::AbuseReportType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AbuseReportVideoMode
#include "Oculus/Platform/AbuseReportVideoMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B64F0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Unknown
::Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Unknown
void Oculus::Platform::AbuseReportVideoMode::_set_Unknown(::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B6528
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Collect
::Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Collect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_get_Collect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Collect"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Collect
void Oculus::Platform::AbuseReportVideoMode::_set_Collect(::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_set_Collect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Collect", value));
}
// [DescriptionAttribute] Offset: 0x6B6560
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Optional
::Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Optional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_get_Optional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Optional"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Optional
void Oculus::Platform::AbuseReportVideoMode::_set_Optional(::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_set_Optional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Optional", value));
}
// [DescriptionAttribute] Offset: 0x6B6598
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Skip
::Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Skip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_get_Skip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Skip"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Skip
void Oculus::Platform::AbuseReportVideoMode::_set_Skip(::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_set_Skip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Skip", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Oculus::Platform::AbuseReportVideoMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AchievementType
#include "Oculus/Platform/AchievementType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B65D0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Unknown
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Unknown
void Oculus::Platform::AchievementType::_set_Unknown(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B6608
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Simple
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Simple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Simple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Simple"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Simple
void Oculus::Platform::AchievementType::_set_Simple(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Simple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Simple", value));
}
// [DescriptionAttribute] Offset: 0x6B6640
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Bitfield
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Bitfield() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Bitfield");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Bitfield"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Bitfield
void Oculus::Platform::AchievementType::_set_Bitfield(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Bitfield");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Bitfield", value));
}
// [DescriptionAttribute] Offset: 0x6B6678
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Count
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Count"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Count
void Oculus::Platform::AchievementType::_set_Count(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Oculus::Platform::AchievementType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
