// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DG.Tweening.Plugins.Options.FloatOptions
#include "DG/Tweening/Plugins/Options/FloatOptions.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: DG.Tweening.Plugins.Options.ColorOptions
#include "DG/Tweening/Plugins/Options/ColorOptions.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: DG.Tweening.Plugins.Options.VectorOptions
#include "DG/Tweening/Plugins/Options/VectorOptions.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: DG.Tweening.Plugins.Options.StringOptions
#include "DG/Tweening/Plugins/Options/StringOptions.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DG::Tweening
namespace DG::Tweening {
  // Forward declaring type: Sequence
  class Sequence;
  // Forward declaring type: Tweener
  class Tweener;
  // Skipping declaration: ScrambleMode because it is already included!
}
// Forward declaring namespace: DG::Tweening::Core
namespace DG::Tweening::Core {
  // Forward declaring type: TweenerCore`3<T1, T2, TPlugOptions>
  template<typename T1, typename T2, typename TPlugOptions>
  class TweenerCore_3;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: CanvasGroup
  class CanvasGroup;
  // Forward declaring type: Gradient
  class Gradient;
  // Forward declaring type: RectTransform
  class RectTransform;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Graphic
  class Graphic;
  // Forward declaring type: Image
  class Image;
  // Forward declaring type: LayoutElement
  class LayoutElement;
  // Forward declaring type: Outline
  class Outline;
  // Forward declaring type: ScrollRect
  class ScrollRect;
  // Forward declaring type: Slider
  class Slider;
  // Forward declaring type: Text
  class Text;
}
// Completed forward declares
// Type namespace: DG.Tweening
namespace DG::Tweening {
  // Forward declaring type: DOTweenModuleUI
  class DOTweenModuleUI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DG::Tweening::DOTweenModuleUI);
DEFINE_IL2CPP_ARG_TYPE(::DG::Tweening::DOTweenModuleUI*, "DG.Tweening", "DOTweenModuleUI");
// Type namespace: DG.Tweening
namespace DG::Tweening {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: DG.Tweening.DOTweenModuleUI
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class DOTweenModuleUI : public ::Il2CppObject {
    public:
    // Nested type: ::DG::Tweening::DOTweenModuleUI::Utils
    class Utils;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass0_0
    class $$c__DisplayClass0_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass1_0
    class $$c__DisplayClass1_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass2_0
    class $$c__DisplayClass2_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass3_0
    class $$c__DisplayClass3_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass4_0
    class $$c__DisplayClass4_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass5_0
    class $$c__DisplayClass5_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass7_0
    class $$c__DisplayClass7_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass8_0
    class $$c__DisplayClass8_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass9_0
    class $$c__DisplayClass9_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass10_0
    class $$c__DisplayClass10_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass11_0
    class $$c__DisplayClass11_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass12_0
    class $$c__DisplayClass12_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass13_0
    class $$c__DisplayClass13_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass14_0
    class $$c__DisplayClass14_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass15_0
    class $$c__DisplayClass15_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass16_0
    class $$c__DisplayClass16_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass17_0
    class $$c__DisplayClass17_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass18_0
    class $$c__DisplayClass18_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass19_0
    class $$c__DisplayClass19_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass20_0
    class $$c__DisplayClass20_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass21_0
    class $$c__DisplayClass21_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass22_0
    class $$c__DisplayClass22_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass23_0
    class $$c__DisplayClass23_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass24_0
    class $$c__DisplayClass24_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass25_0
    class $$c__DisplayClass25_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass26_0
    class $$c__DisplayClass26_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass27_0
    class $$c__DisplayClass27_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass28_0
    class $$c__DisplayClass28_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass29_0
    class $$c__DisplayClass29_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass30_0
    class $$c__DisplayClass30_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass31_0
    class $$c__DisplayClass31_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass32_0
    class $$c__DisplayClass32_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass33_0
    class $$c__DisplayClass33_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass34_0
    class $$c__DisplayClass34_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass35_0
    class $$c__DisplayClass35_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass36_0
    class $$c__DisplayClass36_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass37_0
    class $$c__DisplayClass37_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass38_0
    class $$c__DisplayClass38_0;
    // Nested type: ::DG::Tweening::DOTweenModuleUI::$$c__DisplayClass39_0
    class $$c__DisplayClass39_0;
    // static public DG.Tweening.Core.TweenerCore`3<System.Single,System.Single,DG.Tweening.Plugins.Options.FloatOptions> DOFade(UnityEngine.CanvasGroup target, System.Single endValue, System.Single duration)
    // Offset: 0x17DCE54
    static ::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* DOFade(::UnityEngine::CanvasGroup* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.UI.Graphic target, UnityEngine.Color endValue, System.Single duration)
    // Offset: 0x17DCFF4
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* DOColor(::UnityEngine::UI::Graphic* target, ::UnityEngine::Color endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> DOFade(UnityEngine.UI.Graphic target, System.Single endValue, System.Single duration)
    // Offset: 0x17DD1BC
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* DOFade(::UnityEngine::UI::Graphic* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.UI.Image target, UnityEngine.Color endValue, System.Single duration)
    // Offset: 0x17DD35C
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* DOColor(::UnityEngine::UI::Image* target, ::UnityEngine::Color endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> DOFade(UnityEngine.UI.Image target, System.Single endValue, System.Single duration)
    // Offset: 0x17DD524
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* DOFade(::UnityEngine::UI::Image* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<System.Single,System.Single,DG.Tweening.Plugins.Options.FloatOptions> DOFillAmount(UnityEngine.UI.Image target, System.Single endValue, System.Single duration)
    // Offset: 0x17DD6C4
    static ::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* DOFillAmount(::UnityEngine::UI::Image* target, float endValue, float duration);
    // static public DG.Tweening.Sequence DOGradientColor(UnityEngine.UI.Image target, UnityEngine.Gradient gradient, System.Single duration)
    // Offset: 0x17DD888
    static ::DG::Tweening::Sequence* DOGradientColor(::UnityEngine::UI::Image* target, ::UnityEngine::Gradient* gradient, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector2,UnityEngine.Vector2,DG.Tweening.Plugins.Options.VectorOptions> DOFlexibleSize(UnityEngine.UI.LayoutElement target, UnityEngine.Vector2 endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x17DDA7C
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* DOFlexibleSize(::UnityEngine::UI::LayoutElement* target, ::UnityEngine::Vector2 endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector2,UnityEngine.Vector2,DG.Tweening.Plugins.Options.VectorOptions> DOMinSize(UnityEngine.UI.LayoutElement target, UnityEngine.Vector2 endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x17DDC3C
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* DOMinSize(::UnityEngine::UI::LayoutElement* target, ::UnityEngine::Vector2 endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector2,UnityEngine.Vector2,DG.Tweening.Plugins.Options.VectorOptions> DOPreferredSize(UnityEngine.UI.LayoutElement target, UnityEngine.Vector2 endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x17DDDFC
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* DOPreferredSize(::UnityEngine::UI::LayoutElement* target, ::UnityEngine::Vector2 endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.UI.Outline target, UnityEngine.Color endValue, System.Single duration)
    // Offset: 0x17DDFBC
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* DOColor(::UnityEngine::UI::Outline* target, ::UnityEngine::Color endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> DOFade(UnityEngine.UI.Outline target, System.Single endValue, System.Single duration)
    // Offset: 0x17DE184
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* DOFade(::UnityEngine::UI::Outline* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector2,UnityEngine.Vector2,DG.Tweening.Plugins.Options.VectorOptions> DOScale(UnityEngine.UI.Outline target, UnityEngine.Vector2 endValue, System.Single duration)
    // Offset: 0x17DE324
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* DOScale(::UnityEngine::UI::Outline* target, ::UnityEngine::Vector2 endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector2,UnityEngine.Vector2,DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPos(UnityEngine.RectTransform target, UnityEngine.Vector2 endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x17DE4D4
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* DOAnchorPos(::UnityEngine::RectTransform* target, ::UnityEngine::Vector2 endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector2,UnityEngine.Vector2,DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPosX(UnityEngine.RectTransform target, System.Single endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x17DE694
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* DOAnchorPosX(::UnityEngine::RectTransform* target, float endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector2,UnityEngine.Vector2,DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPosY(UnityEngine.RectTransform target, System.Single endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x17DE84C
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* DOAnchorPosY(::UnityEngine::RectTransform* target, float endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3,DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPos3D(UnityEngine.RectTransform target, UnityEngine.Vector3 endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x17DEA04
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* DOAnchorPos3D(::UnityEngine::RectTransform* target, ::UnityEngine::Vector3 endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3,DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPos3DX(UnityEngine.RectTransform target, System.Single endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x17DEBCC
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* DOAnchorPos3DX(::UnityEngine::RectTransform* target, float endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3,DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPos3DY(UnityEngine.RectTransform target, System.Single endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x17DED88
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* DOAnchorPos3DY(::UnityEngine::RectTransform* target, float endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3,DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPos3DZ(UnityEngine.RectTransform target, System.Single endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x17DEF44
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* DOAnchorPos3DZ(::UnityEngine::RectTransform* target, float endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector2,UnityEngine.Vector2,DG.Tweening.Plugins.Options.VectorOptions> DOAnchorMax(UnityEngine.RectTransform target, UnityEngine.Vector2 endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x17DF100
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* DOAnchorMax(::UnityEngine::RectTransform* target, ::UnityEngine::Vector2 endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector2,UnityEngine.Vector2,DG.Tweening.Plugins.Options.VectorOptions> DOAnchorMin(UnityEngine.RectTransform target, UnityEngine.Vector2 endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x17DF2C0
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* DOAnchorMin(::UnityEngine::RectTransform* target, ::UnityEngine::Vector2 endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector2,UnityEngine.Vector2,DG.Tweening.Plugins.Options.VectorOptions> DOPivot(UnityEngine.RectTransform target, UnityEngine.Vector2 endValue, System.Single duration)
    // Offset: 0x17DF480
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* DOPivot(::UnityEngine::RectTransform* target, ::UnityEngine::Vector2 endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector2,UnityEngine.Vector2,DG.Tweening.Plugins.Options.VectorOptions> DOPivotX(UnityEngine.RectTransform target, System.Single endValue, System.Single duration)
    // Offset: 0x17DF630
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* DOPivotX(::UnityEngine::RectTransform* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector2,UnityEngine.Vector2,DG.Tweening.Plugins.Options.VectorOptions> DOPivotY(UnityEngine.RectTransform target, System.Single endValue, System.Single duration)
    // Offset: 0x17DF7E4
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* DOPivotY(::UnityEngine::RectTransform* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector2,UnityEngine.Vector2,DG.Tweening.Plugins.Options.VectorOptions> DOSizeDelta(UnityEngine.RectTransform target, UnityEngine.Vector2 endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x17DF998
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* DOSizeDelta(::UnityEngine::RectTransform* target, ::UnityEngine::Vector2 endValue, float duration, bool snapping);
    // static public DG.Tweening.Tweener DOPunchAnchorPos(UnityEngine.RectTransform target, UnityEngine.Vector2 punch, System.Single duration, System.Int32 vibrato, System.Single elasticity, System.Boolean snapping)
    // Offset: 0x17DFB58
    static ::DG::Tweening::Tweener* DOPunchAnchorPos(::UnityEngine::RectTransform* target, ::UnityEngine::Vector2 punch, float duration, int vibrato, float elasticity, bool snapping);
    // static public DG.Tweening.Tweener DOShakeAnchorPos(UnityEngine.RectTransform target, System.Single duration, System.Single strength, System.Int32 vibrato, System.Single randomness, System.Boolean snapping, System.Boolean fadeOut)
    // Offset: 0x17DFD28
    static ::DG::Tweening::Tweener* DOShakeAnchorPos(::UnityEngine::RectTransform* target, float duration, float strength, int vibrato, float randomness, bool snapping, bool fadeOut);
    // static public DG.Tweening.Tweener DOShakeAnchorPos(UnityEngine.RectTransform target, System.Single duration, UnityEngine.Vector2 strength, System.Int32 vibrato, System.Single randomness, System.Boolean snapping, System.Boolean fadeOut)
    // Offset: 0x17DFF18
    static ::DG::Tweening::Tweener* DOShakeAnchorPos(::UnityEngine::RectTransform* target, float duration, ::UnityEngine::Vector2 strength, int vibrato, float randomness, bool snapping, bool fadeOut);
    // static public DG.Tweening.Sequence DOJumpAnchorPos(UnityEngine.RectTransform target, UnityEngine.Vector2 endValue, System.Single jumpPower, System.Int32 numJumps, System.Single duration, System.Boolean snapping)
    // Offset: 0x17E0110
    static ::DG::Tweening::Sequence* DOJumpAnchorPos(::UnityEngine::RectTransform* target, ::UnityEngine::Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping);
    // static public DG.Tweening.Tweener DONormalizedPos(UnityEngine.UI.ScrollRect target, UnityEngine.Vector2 endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x17E0544
    static ::DG::Tweening::Tweener* DONormalizedPos(::UnityEngine::UI::ScrollRect* target, ::UnityEngine::Vector2 endValue, float duration, bool snapping);
    // static public DG.Tweening.Tweener DOHorizontalNormalizedPos(UnityEngine.UI.ScrollRect target, System.Single endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x17E06F8
    static ::DG::Tweening::Tweener* DOHorizontalNormalizedPos(::UnityEngine::UI::ScrollRect* target, float endValue, float duration, bool snapping);
    // static public DG.Tweening.Tweener DOVerticalNormalizedPos(UnityEngine.UI.ScrollRect target, System.Single endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x17E089C
    static ::DG::Tweening::Tweener* DOVerticalNormalizedPos(::UnityEngine::UI::ScrollRect* target, float endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<System.Single,System.Single,DG.Tweening.Plugins.Options.FloatOptions> DOValue(UnityEngine.UI.Slider target, System.Single endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x17E0A40
    static ::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* DOValue(::UnityEngine::UI::Slider* target, float endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.UI.Text target, UnityEngine.Color endValue, System.Single duration)
    // Offset: 0x17E0BF0
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* DOColor(::UnityEngine::UI::Text* target, ::UnityEngine::Color endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> DOFade(UnityEngine.UI.Text target, System.Single endValue, System.Single duration)
    // Offset: 0x17E0DB8
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* DOFade(::UnityEngine::UI::Text* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<System.String,System.String,DG.Tweening.Plugins.Options.StringOptions> DOText(UnityEngine.UI.Text target, System.String endValue, System.Single duration, System.Boolean richTextEnabled, DG.Tweening.ScrambleMode scrambleMode, System.String scrambleChars)
    // Offset: 0x17E0F58
    static ::DG::Tweening::Core::TweenerCore_3<::StringW, ::StringW, ::DG::Tweening::Plugins::Options::StringOptions>* DOText(::UnityEngine::UI::Text* target, ::StringW endValue, float duration, bool richTextEnabled, ::DG::Tweening::ScrambleMode scrambleMode, ::StringW scrambleChars);
    // static public DG.Tweening.Tweener DOBlendableColor(UnityEngine.UI.Graphic target, UnityEngine.Color endValue, System.Single duration)
    // Offset: 0x17E11A4
    static ::DG::Tweening::Tweener* DOBlendableColor(::UnityEngine::UI::Graphic* target, ::UnityEngine::Color endValue, float duration);
    // static public DG.Tweening.Tweener DOBlendableColor(UnityEngine.UI.Image target, UnityEngine.Color endValue, System.Single duration)
    // Offset: 0x17E1400
    static ::DG::Tweening::Tweener* DOBlendableColor(::UnityEngine::UI::Image* target, ::UnityEngine::Color endValue, float duration);
    // static public DG.Tweening.Tweener DOBlendableColor(UnityEngine.UI.Text target, UnityEngine.Color endValue, System.Single duration)
    // Offset: 0x17E165C
    static ::DG::Tweening::Tweener* DOBlendableColor(::UnityEngine::UI::Text* target, ::UnityEngine::Color endValue, float duration);
  }; // DG.Tweening.DOTweenModuleUI
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOFade
// Il2CppName: DOFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* (*)(::UnityEngine::CanvasGroup*, float, float)>(&DG::Tweening::DOTweenModuleUI::DOFade)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "CanvasGroup")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOColor
// Il2CppName: DOColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::UnityEngine::UI::Graphic*, ::UnityEngine::Color, float)>(&DG::Tweening::DOTweenModuleUI::DOColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Graphic")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOFade
// Il2CppName: DOFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::UnityEngine::UI::Graphic*, float, float)>(&DG::Tweening::DOTweenModuleUI::DOFade)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Graphic")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOColor
// Il2CppName: DOColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::UnityEngine::UI::Image*, ::UnityEngine::Color, float)>(&DG::Tweening::DOTweenModuleUI::DOColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Image")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOFade
// Il2CppName: DOFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::UnityEngine::UI::Image*, float, float)>(&DG::Tweening::DOTweenModuleUI::DOFade)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Image")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOFillAmount
// Il2CppName: DOFillAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* (*)(::UnityEngine::UI::Image*, float, float)>(&DG::Tweening::DOTweenModuleUI::DOFillAmount)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Image")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOFillAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOGradientColor
// Il2CppName: DOGradientColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Sequence* (*)(::UnityEngine::UI::Image*, ::UnityEngine::Gradient*, float)>(&DG::Tweening::DOTweenModuleUI::DOGradientColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Image")->byval_arg;
    static auto* gradient = &::il2cpp_utils::GetClassFromName("UnityEngine", "Gradient")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOGradientColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, gradient, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOFlexibleSize
// Il2CppName: DOFlexibleSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::UI::LayoutElement*, ::UnityEngine::Vector2, float, bool)>(&DG::Tweening::DOTweenModuleUI::DOFlexibleSize)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "LayoutElement")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOFlexibleSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOMinSize
// Il2CppName: DOMinSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::UI::LayoutElement*, ::UnityEngine::Vector2, float, bool)>(&DG::Tweening::DOTweenModuleUI::DOMinSize)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "LayoutElement")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOMinSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOPreferredSize
// Il2CppName: DOPreferredSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::UI::LayoutElement*, ::UnityEngine::Vector2, float, bool)>(&DG::Tweening::DOTweenModuleUI::DOPreferredSize)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "LayoutElement")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOPreferredSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOColor
// Il2CppName: DOColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::UnityEngine::UI::Outline*, ::UnityEngine::Color, float)>(&DG::Tweening::DOTweenModuleUI::DOColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Outline")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOFade
// Il2CppName: DOFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::UnityEngine::UI::Outline*, float, float)>(&DG::Tweening::DOTweenModuleUI::DOFade)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Outline")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOScale
// Il2CppName: DOScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::UI::Outline*, ::UnityEngine::Vector2, float)>(&DG::Tweening::DOTweenModuleUI::DOScale)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Outline")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOAnchorPos
// Il2CppName: DOAnchorPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::RectTransform*, ::UnityEngine::Vector2, float, bool)>(&DG::Tweening::DOTweenModuleUI::DOAnchorPos)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOAnchorPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOAnchorPosX
// Il2CppName: DOAnchorPosX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::RectTransform*, float, float, bool)>(&DG::Tweening::DOTweenModuleUI::DOAnchorPosX)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOAnchorPosX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOAnchorPosY
// Il2CppName: DOAnchorPosY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::RectTransform*, float, float, bool)>(&DG::Tweening::DOTweenModuleUI::DOAnchorPosY)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOAnchorPosY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOAnchorPos3D
// Il2CppName: DOAnchorPos3D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::RectTransform*, ::UnityEngine::Vector3, float, bool)>(&DG::Tweening::DOTweenModuleUI::DOAnchorPos3D)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOAnchorPos3D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOAnchorPos3DX
// Il2CppName: DOAnchorPos3DX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::RectTransform*, float, float, bool)>(&DG::Tweening::DOTweenModuleUI::DOAnchorPos3DX)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOAnchorPos3DX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOAnchorPos3DY
// Il2CppName: DOAnchorPos3DY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::RectTransform*, float, float, bool)>(&DG::Tweening::DOTweenModuleUI::DOAnchorPos3DY)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOAnchorPos3DY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOAnchorPos3DZ
// Il2CppName: DOAnchorPos3DZ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::RectTransform*, float, float, bool)>(&DG::Tweening::DOTweenModuleUI::DOAnchorPos3DZ)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOAnchorPos3DZ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOAnchorMax
// Il2CppName: DOAnchorMax
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::RectTransform*, ::UnityEngine::Vector2, float, bool)>(&DG::Tweening::DOTweenModuleUI::DOAnchorMax)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOAnchorMax", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOAnchorMin
// Il2CppName: DOAnchorMin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::RectTransform*, ::UnityEngine::Vector2, float, bool)>(&DG::Tweening::DOTweenModuleUI::DOAnchorMin)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOAnchorMin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOPivot
// Il2CppName: DOPivot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::RectTransform*, ::UnityEngine::Vector2, float)>(&DG::Tweening::DOTweenModuleUI::DOPivot)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOPivot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOPivotX
// Il2CppName: DOPivotX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::RectTransform*, float, float)>(&DG::Tweening::DOTweenModuleUI::DOPivotX)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOPivotX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOPivotY
// Il2CppName: DOPivotY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::RectTransform*, float, float)>(&DG::Tweening::DOTweenModuleUI::DOPivotY)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOPivotY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOSizeDelta
// Il2CppName: DOSizeDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::RectTransform*, ::UnityEngine::Vector2, float, bool)>(&DG::Tweening::DOTweenModuleUI::DOSizeDelta)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOSizeDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOPunchAnchorPos
// Il2CppName: DOPunchAnchorPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::RectTransform*, ::UnityEngine::Vector2, float, int, float, bool)>(&DG::Tweening::DOTweenModuleUI::DOPunchAnchorPos)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* punch = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* elasticity = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOPunchAnchorPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, punch, duration, vibrato, elasticity, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOShakeAnchorPos
// Il2CppName: DOShakeAnchorPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::RectTransform*, float, float, int, float, bool, bool)>(&DG::Tweening::DOTweenModuleUI::DOShakeAnchorPos)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* strength = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* randomness = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* fadeOut = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOShakeAnchorPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, duration, strength, vibrato, randomness, snapping, fadeOut});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOShakeAnchorPos
// Il2CppName: DOShakeAnchorPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::RectTransform*, float, ::UnityEngine::Vector2, int, float, bool, bool)>(&DG::Tweening::DOTweenModuleUI::DOShakeAnchorPos)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* strength = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* randomness = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* fadeOut = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOShakeAnchorPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, duration, strength, vibrato, randomness, snapping, fadeOut});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOJumpAnchorPos
// Il2CppName: DOJumpAnchorPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Sequence* (*)(::UnityEngine::RectTransform*, ::UnityEngine::Vector2, float, int, float, bool)>(&DG::Tweening::DOTweenModuleUI::DOJumpAnchorPos)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* jumpPower = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* numJumps = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOJumpAnchorPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, jumpPower, numJumps, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DONormalizedPos
// Il2CppName: DONormalizedPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::UI::ScrollRect*, ::UnityEngine::Vector2, float, bool)>(&DG::Tweening::DOTweenModuleUI::DONormalizedPos)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "ScrollRect")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DONormalizedPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOHorizontalNormalizedPos
// Il2CppName: DOHorizontalNormalizedPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::UI::ScrollRect*, float, float, bool)>(&DG::Tweening::DOTweenModuleUI::DOHorizontalNormalizedPos)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "ScrollRect")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOHorizontalNormalizedPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOVerticalNormalizedPos
// Il2CppName: DOVerticalNormalizedPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::UI::ScrollRect*, float, float, bool)>(&DG::Tweening::DOTweenModuleUI::DOVerticalNormalizedPos)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "ScrollRect")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOVerticalNormalizedPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOValue
// Il2CppName: DOValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* (*)(::UnityEngine::UI::Slider*, float, float, bool)>(&DG::Tweening::DOTweenModuleUI::DOValue)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Slider")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOColor
// Il2CppName: DOColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::UnityEngine::UI::Text*, ::UnityEngine::Color, float)>(&DG::Tweening::DOTweenModuleUI::DOColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Text")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOFade
// Il2CppName: DOFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::UnityEngine::UI::Text*, float, float)>(&DG::Tweening::DOTweenModuleUI::DOFade)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Text")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOText
// Il2CppName: DOText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::StringW, ::StringW, ::DG::Tweening::Plugins::Options::StringOptions>* (*)(::UnityEngine::UI::Text*, ::StringW, float, bool, ::DG::Tweening::ScrambleMode, ::StringW)>(&DG::Tweening::DOTweenModuleUI::DOText)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Text")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* richTextEnabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* scrambleMode = &::il2cpp_utils::GetClassFromName("DG.Tweening", "ScrambleMode")->byval_arg;
    static auto* scrambleChars = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, richTextEnabled, scrambleMode, scrambleChars});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOBlendableColor
// Il2CppName: DOBlendableColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::UI::Graphic*, ::UnityEngine::Color, float)>(&DG::Tweening::DOTweenModuleUI::DOBlendableColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Graphic")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOBlendableColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOBlendableColor
// Il2CppName: DOBlendableColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::UI::Image*, ::UnityEngine::Color, float)>(&DG::Tweening::DOTweenModuleUI::DOBlendableColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Image")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOBlendableColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleUI::DOBlendableColor
// Il2CppName: DOBlendableColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::UI::Text*, ::UnityEngine::Color, float)>(&DG::Tweening::DOTweenModuleUI::DOBlendableColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Text")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleUI*), "DOBlendableColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
