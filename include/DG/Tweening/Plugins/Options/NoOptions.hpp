// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: DG.Tweening.Plugins.Options.IPlugOptions
#include "DG/Tweening/Plugins/Options/IPlugOptions.hpp"
// Completed includes
// Type namespace: DG.Tweening.Plugins.Options
namespace DG::Tweening::Plugins::Options {
  // Forward declaring type: NoOptions
  struct NoOptions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::DG::Tweening::Plugins::Options::NoOptions, "DG.Tweening.Plugins.Options", "NoOptions");
// Type namespace: DG.Tweening.Plugins.Options
namespace DG::Tweening::Plugins::Options {
  // Size: 0x0
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: DG.Tweening.Plugins.Options.NoOptions
  // [TokenAttribute] Offset: FFFFFFFF
  struct NoOptions/*, public ::System::ValueType, public ::DG::Tweening::Plugins::Options::IPlugOptions*/ {
    public:
    // Creating value type constructor for type: NoOptions
    constexpr NoOptions() noexcept {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::DG::Tweening::Plugins::Options::IPlugOptions
    operator ::DG::Tweening::Plugins::Options::IPlugOptions() noexcept {
      return *reinterpret_cast<::DG::Tweening::Plugins::Options::IPlugOptions*>(this);
    }
    // public System.Void Reset()
    // Offset: 0x15E0A18
    void Reset();
  }; // DG.Tweening.Plugins.Options.NoOptions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DG::Tweening::Plugins::Options::NoOptions::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DG::Tweening::Plugins::Options::NoOptions::*)()>(&DG::Tweening::Plugins::Options::NoOptions::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::Plugins::Options::NoOptions), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
