// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DG.Tweening.Plugins.Core.PathCore.ABSPathDecoder
#include "DG/Tweening/Plugins/Core/PathCore/ABSPathDecoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DG::Tweening::Plugins::Core::PathCore
namespace DG::Tweening::Plugins::Core::PathCore {
  // Forward declaring type: Path
  class Path;
}
// Completed forward declares
// Type namespace: DG.Tweening.Plugins.Core.PathCore
namespace DG::Tweening::Plugins::Core::PathCore {
  // Forward declaring type: CubicBezierDecoder
  class CubicBezierDecoder;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder);
DEFINE_IL2CPP_ARG_TYPE(::DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder*, "DG.Tweening.Plugins.Core.PathCore", "CubicBezierDecoder");
// Type namespace: DG.Tweening.Plugins.Core.PathCore
namespace DG::Tweening::Plugins::Core::PathCore {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: DG.Tweening.Plugins.Core.PathCore.CubicBezierDecoder
  // [TokenAttribute] Offset: FFFFFFFF
  class CubicBezierDecoder : public ::DG::Tweening::Plugins::Core::PathCore::ABSPathDecoder {
    public:
    // Get static field: static private readonly DG.Tweening.Plugins.Core.PathCore.ControlPoint[] _PartialControlPs
    static ::ArrayW<::DG::Tweening::Plugins::Core::PathCore::ControlPoint> _get__PartialControlPs();
    // Set static field: static private readonly DG.Tweening.Plugins.Core.PathCore.ControlPoint[] _PartialControlPs
    static void _set__PartialControlPs(::ArrayW<::DG::Tweening::Plugins::Core::PathCore::ControlPoint> value);
    // Get static field: static private readonly UnityEngine.Vector3[] _PartialWps
    static ::ArrayW<::UnityEngine::Vector3> _get__PartialWps();
    // Set static field: static private readonly UnityEngine.Vector3[] _PartialWps
    static void _set__PartialWps(::ArrayW<::UnityEngine::Vector3> value);
    // static private System.Void .cctor()
    // Offset: 0x15D6758
    static void _cctor();
    // System.Void SetTimeToLengthTables(DG.Tweening.Plugins.Core.PathCore.Path p, System.Int32 subdivisions)
    // Offset: 0x15D6100
    void SetTimeToLengthTables(::DG::Tweening::Plugins::Core::PathCore::Path* p, int subdivisions);
    // System.Void SetWaypointsLengths(DG.Tweening.Plugins.Core.PathCore.Path p, System.Int32 subdivisions)
    // Offset: 0x15D62B0
    void SetWaypointsLengths(::DG::Tweening::Plugins::Core::PathCore::Path* p, int subdivisions);
    // public System.Void .ctor()
    // Offset: 0x15D6750
    // Implemented from: DG.Tweening.Plugins.Core.PathCore.ABSPathDecoder
    // Base method: System.Void ABSPathDecoder::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CubicBezierDecoder* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CubicBezierDecoder*, creationType>()));
    }
    // override System.Void FinalizePath(DG.Tweening.Plugins.Core.PathCore.Path p, UnityEngine.Vector3[] wps, System.Boolean isClosedPath)
    // Offset: 0x15D5D08
    // Implemented from: DG.Tweening.Plugins.Core.PathCore.ABSPathDecoder
    // Base method: System.Void ABSPathDecoder::FinalizePath(DG.Tweening.Plugins.Core.PathCore.Path p, UnityEngine.Vector3[] wps, System.Boolean isClosedPath)
    void FinalizePath(::DG::Tweening::Plugins::Core::PathCore::Path* p, ::ArrayW<::UnityEngine::Vector3> wps, bool isClosedPath);
    // override UnityEngine.Vector3 GetPoint(System.Single perc, UnityEngine.Vector3[] wps, DG.Tweening.Plugins.Core.PathCore.Path p, DG.Tweening.Plugins.Core.PathCore.ControlPoint[] controlPoints)
    // Offset: 0x15D65A8
    // Implemented from: DG.Tweening.Plugins.Core.PathCore.ABSPathDecoder
    // Base method: UnityEngine.Vector3 ABSPathDecoder::GetPoint(System.Single perc, UnityEngine.Vector3[] wps, DG.Tweening.Plugins.Core.PathCore.Path p, DG.Tweening.Plugins.Core.PathCore.ControlPoint[] controlPoints)
    ::UnityEngine::Vector3 GetPoint(float perc, ::ArrayW<::UnityEngine::Vector3> wps, ::DG::Tweening::Plugins::Core::PathCore::Path* p, ::ArrayW<::DG::Tweening::Plugins::Core::PathCore::ControlPoint> controlPoints);
  }; // DG.Tweening.Plugins.Core.PathCore.CubicBezierDecoder
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder::SetTimeToLengthTables
// Il2CppName: SetTimeToLengthTables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder::*)(::DG::Tweening::Plugins::Core::PathCore::Path*, int)>(&DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder::SetTimeToLengthTables)> {
  static const MethodInfo* get() {
    static auto* p = &::il2cpp_utils::GetClassFromName("DG.Tweening.Plugins.Core.PathCore", "Path")->byval_arg;
    static auto* subdivisions = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder*), "SetTimeToLengthTables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p, subdivisions});
  }
};
// Writing MetadataGetter for method: DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder::SetWaypointsLengths
// Il2CppName: SetWaypointsLengths
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder::*)(::DG::Tweening::Plugins::Core::PathCore::Path*, int)>(&DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder::SetWaypointsLengths)> {
  static const MethodInfo* get() {
    static auto* p = &::il2cpp_utils::GetClassFromName("DG.Tweening.Plugins.Core.PathCore", "Path")->byval_arg;
    static auto* subdivisions = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder*), "SetWaypointsLengths", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p, subdivisions});
  }
};
// Writing MetadataGetter for method: DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder::FinalizePath
// Il2CppName: FinalizePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder::*)(::DG::Tweening::Plugins::Core::PathCore::Path*, ::ArrayW<::UnityEngine::Vector3>, bool)>(&DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder::FinalizePath)> {
  static const MethodInfo* get() {
    static auto* p = &::il2cpp_utils::GetClassFromName("DG.Tweening.Plugins.Core.PathCore", "Path")->byval_arg;
    static auto* wps = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* isClosedPath = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder*), "FinalizePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p, wps, isClosedPath});
  }
};
// Writing MetadataGetter for method: DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder::GetPoint
// Il2CppName: GetPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder::*)(float, ::ArrayW<::UnityEngine::Vector3>, ::DG::Tweening::Plugins::Core::PathCore::Path*, ::ArrayW<::DG::Tweening::Plugins::Core::PathCore::ControlPoint>)>(&DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder::GetPoint)> {
  static const MethodInfo* get() {
    static auto* perc = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* wps = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* p = &::il2cpp_utils::GetClassFromName("DG.Tweening.Plugins.Core.PathCore", "Path")->byval_arg;
    static auto* controlPoints = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("DG.Tweening.Plugins.Core.PathCore", "ControlPoint"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::Plugins::Core::PathCore::CubicBezierDecoder*), "GetPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{perc, wps, p, controlPoints});
  }
};
