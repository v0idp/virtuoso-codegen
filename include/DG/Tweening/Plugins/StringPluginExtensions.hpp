// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: DG.Tweening.Plugins
namespace DG::Tweening::Plugins {
  // Forward declaring type: StringPluginExtensions
  class StringPluginExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DG::Tweening::Plugins::StringPluginExtensions);
DEFINE_IL2CPP_ARG_TYPE(::DG::Tweening::Plugins::StringPluginExtensions*, "DG.Tweening.Plugins", "StringPluginExtensions");
// Type namespace: DG.Tweening.Plugins
namespace DG::Tweening::Plugins {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: DG.Tweening.Plugins.StringPluginExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class StringPluginExtensions : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Char[] ScrambledCharsAll
    static ::ArrayW<::Il2CppChar> _get_ScrambledCharsAll();
    // Set static field: static public readonly System.Char[] ScrambledCharsAll
    static void _set_ScrambledCharsAll(::ArrayW<::Il2CppChar> value);
    // Get static field: static public readonly System.Char[] ScrambledCharsUppercase
    static ::ArrayW<::Il2CppChar> _get_ScrambledCharsUppercase();
    // Set static field: static public readonly System.Char[] ScrambledCharsUppercase
    static void _set_ScrambledCharsUppercase(::ArrayW<::Il2CppChar> value);
    // Get static field: static public readonly System.Char[] ScrambledCharsLowercase
    static ::ArrayW<::Il2CppChar> _get_ScrambledCharsLowercase();
    // Set static field: static public readonly System.Char[] ScrambledCharsLowercase
    static void _set_ScrambledCharsLowercase(::ArrayW<::Il2CppChar> value);
    // Get static field: static public readonly System.Char[] ScrambledCharsNumerals
    static ::ArrayW<::Il2CppChar> _get_ScrambledCharsNumerals();
    // Set static field: static public readonly System.Char[] ScrambledCharsNumerals
    static void _set_ScrambledCharsNumerals(::ArrayW<::Il2CppChar> value);
    // Get static field: static private System.Int32 _lastRndSeed
    static int _get__lastRndSeed();
    // Set static field: static private System.Int32 _lastRndSeed
    static void _set__lastRndSeed(int value);
    // static private System.Void .cctor()
    // Offset: 0x15AD70C
    static void _cctor();
    // static System.Void ScrambleChars(System.Char[] chars)
    // Offset: 0x15AD890
    static void ScrambleChars(::ArrayW<::Il2CppChar> chars);
    // static System.Text.StringBuilder AppendScrambledChars(System.Text.StringBuilder buffer, System.Int32 length, System.Char[] chars)
    // Offset: 0x15AD4A8
    static ::System::Text::StringBuilder* AppendScrambledChars(::System::Text::StringBuilder* buffer, int length, ::ArrayW<::Il2CppChar> chars);
  }; // DG.Tweening.Plugins.StringPluginExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DG::Tweening::Plugins::StringPluginExtensions::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DG::Tweening::Plugins::StringPluginExtensions::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::Plugins::StringPluginExtensions*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::Plugins::StringPluginExtensions::ScrambleChars
// Il2CppName: ScrambleChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<::Il2CppChar>)>(&DG::Tweening::Plugins::StringPluginExtensions::ScrambleChars)> {
  static const MethodInfo* get() {
    static auto* chars = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::Plugins::StringPluginExtensions*), "ScrambleChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chars});
  }
};
// Writing MetadataGetter for method: DG::Tweening::Plugins::StringPluginExtensions::AppendScrambledChars
// Il2CppName: AppendScrambledChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (*)(::System::Text::StringBuilder*, int, ::ArrayW<::Il2CppChar>)>(&DG::Tweening::Plugins::StringPluginExtensions::AppendScrambledChars)> {
  static const MethodInfo* get() {
    static auto* buffer = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* chars = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::Plugins::StringPluginExtensions*), "AppendScrambledChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, length, chars});
  }
};
