// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DG.Tweening.Plugins.Options.FloatOptions
#include "DG/Tweening/Plugins/Options/FloatOptions.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: DG.Tweening.Plugins.Options.ColorOptions
#include "DG/Tweening/Plugins/Options/ColorOptions.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: DG.Tweening.Plugins.Options.RectOptions
#include "DG/Tweening/Plugins/Options/RectOptions.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: DG.Tweening.Plugins.Options.VectorOptions
#include "DG/Tweening/Plugins/Options/VectorOptions.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: DG.Tweening.Plugins.Options.QuaternionOptions
#include "DG/Tweening/Plugins/Options/QuaternionOptions.hpp"
// Including type: DG.Tweening.Plugins.Options.NoOptions
#include "DG/Tweening/Plugins/Options/NoOptions.hpp"
// Including type: DG.Tweening.Plugins.Options.PathOptions
#include "DG/Tweening/Plugins/Options/PathOptions.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DG::Tweening
namespace DG::Tweening {
  // Forward declaring type: Tweener
  class Tweener;
  // Forward declaring type: Color2
  struct Color2;
  // Skipping declaration: RotateMode because it is already included!
  // Skipping declaration: AxisConstraint because it is already included!
  // Forward declaring type: Sequence
  class Sequence;
  // Forward declaring type: PathType
  struct PathType;
  // Skipping declaration: PathMode because it is already included!
  // Forward declaring type: Tween
  class Tween;
}
// Forward declaring namespace: DG::Tweening::Core
namespace DG::Tweening::Core {
  // Forward declaring type: TweenerCore`3<T1, T2, TPlugOptions>
  template<typename T1, typename T2, typename TPlugOptions>
  class TweenerCore_3;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Light
  class Light;
  // Forward declaring type: LineRenderer
  class LineRenderer;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: TrailRenderer
  class TrailRenderer;
  // Forward declaring type: Component
  class Component;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
}
// Forward declaring namespace: DG::Tweening::Plugins::Core::PathCore
namespace DG::Tweening::Plugins::Core::PathCore {
  // Forward declaring type: Path
  class Path;
}
// Completed forward declares
// Type namespace: DG.Tweening
namespace DG::Tweening {
  // Forward declaring type: ShortcutExtensions
  class ShortcutExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DG::Tweening::ShortcutExtensions);
DEFINE_IL2CPP_ARG_TYPE(::DG::Tweening::ShortcutExtensions*, "DG.Tweening", "ShortcutExtensions");
// Type namespace: DG.Tweening
namespace DG::Tweening {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: DG.Tweening.ShortcutExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class ShortcutExtensions : public ::Il2CppObject {
    public:
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass0_0
    class $$c__DisplayClass0_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass1_0
    class $$c__DisplayClass1_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass2_0
    class $$c__DisplayClass2_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass3_0
    class $$c__DisplayClass3_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass4_0
    class $$c__DisplayClass4_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass5_0
    class $$c__DisplayClass5_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass6_0
    class $$c__DisplayClass6_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass7_0
    class $$c__DisplayClass7_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass8_0
    class $$c__DisplayClass8_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass9_0
    class $$c__DisplayClass9_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass10_0
    class $$c__DisplayClass10_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass11_0
    class $$c__DisplayClass11_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass12_0
    class $$c__DisplayClass12_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass13_0
    class $$c__DisplayClass13_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass14_0
    class $$c__DisplayClass14_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass15_0
    class $$c__DisplayClass15_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass16_0
    class $$c__DisplayClass16_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass17_0
    class $$c__DisplayClass17_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass18_0
    class $$c__DisplayClass18_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass19_0
    class $$c__DisplayClass19_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass20_0
    class $$c__DisplayClass20_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass21_0
    class $$c__DisplayClass21_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass22_0
    class $$c__DisplayClass22_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass23_0
    class $$c__DisplayClass23_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass24_0
    class $$c__DisplayClass24_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass25_0
    class $$c__DisplayClass25_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass26_0
    class $$c__DisplayClass26_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass27_0
    class $$c__DisplayClass27_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass28_0
    class $$c__DisplayClass28_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass29_0
    class $$c__DisplayClass29_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass30_0
    class $$c__DisplayClass30_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass31_0
    class $$c__DisplayClass31_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass32_0
    class $$c__DisplayClass32_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass33_0
    class $$c__DisplayClass33_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass34_0
    class $$c__DisplayClass34_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass35_0
    class $$c__DisplayClass35_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass36_0
    class $$c__DisplayClass36_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass37_0
    class $$c__DisplayClass37_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass38_0
    class $$c__DisplayClass38_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass39_0
    class $$c__DisplayClass39_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass40_0
    class $$c__DisplayClass40_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass41_0
    class $$c__DisplayClass41_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass42_0
    class $$c__DisplayClass42_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass43_0
    class $$c__DisplayClass43_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass44_0
    class $$c__DisplayClass44_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass45_0
    class $$c__DisplayClass45_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass46_0
    class $$c__DisplayClass46_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass47_0
    class $$c__DisplayClass47_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass48_0
    class $$c__DisplayClass48_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass49_0
    class $$c__DisplayClass49_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass50_0
    class $$c__DisplayClass50_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass51_0
    class $$c__DisplayClass51_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass52_0
    class $$c__DisplayClass52_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass53_0
    class $$c__DisplayClass53_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass54_0
    class $$c__DisplayClass54_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass55_0
    class $$c__DisplayClass55_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass56_0
    class $$c__DisplayClass56_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass57_0
    class $$c__DisplayClass57_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass58_0
    class $$c__DisplayClass58_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass59_0
    class $$c__DisplayClass59_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0
    class $$c__DisplayClass60_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass61_0
    class $$c__DisplayClass61_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass62_0
    class $$c__DisplayClass62_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass63_0
    class $$c__DisplayClass63_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass64_0
    class $$c__DisplayClass64_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass65_0
    class $$c__DisplayClass65_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass66_0
    class $$c__DisplayClass66_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass67_0
    class $$c__DisplayClass67_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass68_0
    class $$c__DisplayClass68_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass69_0
    class $$c__DisplayClass69_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass70_0
    class $$c__DisplayClass70_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass71_0
    class $$c__DisplayClass71_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass72_0
    class $$c__DisplayClass72_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass73_0
    class $$c__DisplayClass73_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass74_0
    class $$c__DisplayClass74_0;
    // Nested type: ::DG::Tweening::ShortcutExtensions::$$c__DisplayClass75_0
    class $$c__DisplayClass75_0;
    // static public DG.Tweening.Core.TweenerCore`3<System.Single,System.Single,DG.Tweening.Plugins.Options.FloatOptions> DOAspect(UnityEngine.Camera target, System.Single endValue, System.Single duration)
    // Offset: 0x15A17EC
    static ::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* DOAspect(::UnityEngine::Camera* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.Camera target, UnityEngine.Color endValue, System.Single duration)
    // Offset: 0x15A1984
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* DOColor(::UnityEngine::Camera* target, ::UnityEngine::Color endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<System.Single,System.Single,DG.Tweening.Plugins.Options.FloatOptions> DOFarClipPlane(UnityEngine.Camera target, System.Single endValue, System.Single duration)
    // Offset: 0x15A1B44
    static ::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* DOFarClipPlane(::UnityEngine::Camera* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<System.Single,System.Single,DG.Tweening.Plugins.Options.FloatOptions> DOFieldOfView(UnityEngine.Camera target, System.Single endValue, System.Single duration)
    // Offset: 0x15A1CDC
    static ::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* DOFieldOfView(::UnityEngine::Camera* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<System.Single,System.Single,DG.Tweening.Plugins.Options.FloatOptions> DONearClipPlane(UnityEngine.Camera target, System.Single endValue, System.Single duration)
    // Offset: 0x15A1E74
    static ::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* DONearClipPlane(::UnityEngine::Camera* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<System.Single,System.Single,DG.Tweening.Plugins.Options.FloatOptions> DOOrthoSize(UnityEngine.Camera target, System.Single endValue, System.Single duration)
    // Offset: 0x15A200C
    static ::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* DOOrthoSize(::UnityEngine::Camera* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Rect,UnityEngine.Rect,DG.Tweening.Plugins.Options.RectOptions> DOPixelRect(UnityEngine.Camera target, UnityEngine.Rect endValue, System.Single duration)
    // Offset: 0x15A21A4
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Rect, ::UnityEngine::Rect, ::DG::Tweening::Plugins::Options::RectOptions>* DOPixelRect(::UnityEngine::Camera* target, ::UnityEngine::Rect endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Rect,UnityEngine.Rect,DG.Tweening.Plugins.Options.RectOptions> DORect(UnityEngine.Camera target, UnityEngine.Rect endValue, System.Single duration)
    // Offset: 0x15A2364
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Rect, ::UnityEngine::Rect, ::DG::Tweening::Plugins::Options::RectOptions>* DORect(::UnityEngine::Camera* target, ::UnityEngine::Rect endValue, float duration);
    // static public DG.Tweening.Tweener DOShakePosition(UnityEngine.Camera target, System.Single duration, System.Single strength, System.Int32 vibrato, System.Single randomness, System.Boolean fadeOut)
    // Offset: 0x15A2524
    static ::DG::Tweening::Tweener* DOShakePosition(::UnityEngine::Camera* target, float duration, float strength, int vibrato, float randomness, bool fadeOut);
    // static public DG.Tweening.Tweener DOShakePosition(UnityEngine.Camera target, System.Single duration, UnityEngine.Vector3 strength, System.Int32 vibrato, System.Single randomness, System.Boolean fadeOut)
    // Offset: 0x15A2798
    static ::DG::Tweening::Tweener* DOShakePosition(::UnityEngine::Camera* target, float duration, ::UnityEngine::Vector3 strength, int vibrato, float randomness, bool fadeOut);
    // static public DG.Tweening.Tweener DOShakeRotation(UnityEngine.Camera target, System.Single duration, System.Single strength, System.Int32 vibrato, System.Single randomness, System.Boolean fadeOut)
    // Offset: 0x15A2A20
    static ::DG::Tweening::Tweener* DOShakeRotation(::UnityEngine::Camera* target, float duration, float strength, int vibrato, float randomness, bool fadeOut);
    // static public DG.Tweening.Tweener DOShakeRotation(UnityEngine.Camera target, System.Single duration, UnityEngine.Vector3 strength, System.Int32 vibrato, System.Single randomness, System.Boolean fadeOut)
    // Offset: 0x15A2C94
    static ::DG::Tweening::Tweener* DOShakeRotation(::UnityEngine::Camera* target, float duration, ::UnityEngine::Vector3 strength, int vibrato, float randomness, bool fadeOut);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.Light target, UnityEngine.Color endValue, System.Single duration)
    // Offset: 0x15A2F1C
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* DOColor(::UnityEngine::Light* target, ::UnityEngine::Color endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<System.Single,System.Single,DG.Tweening.Plugins.Options.FloatOptions> DOIntensity(UnityEngine.Light target, System.Single endValue, System.Single duration)
    // Offset: 0x15A30DC
    static ::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* DOIntensity(::UnityEngine::Light* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<System.Single,System.Single,DG.Tweening.Plugins.Options.FloatOptions> DOShadowStrength(UnityEngine.Light target, System.Single endValue, System.Single duration)
    // Offset: 0x15A3274
    static ::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* DOShadowStrength(::UnityEngine::Light* target, float endValue, float duration);
    // static public DG.Tweening.Tweener DOColor(UnityEngine.LineRenderer target, DG.Tweening.Color2 startValue, DG.Tweening.Color2 endValue, System.Single duration)
    // Offset: 0x15A340C
    static ::DG::Tweening::Tweener* DOColor(::UnityEngine::LineRenderer* target, ::DG::Tweening::Color2 startValue, ::DG::Tweening::Color2 endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.Material target, UnityEngine.Color endValue, System.Single duration)
    // Offset: 0x15A35C8
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* DOColor(::UnityEngine::Material* target, ::UnityEngine::Color endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.Material target, UnityEngine.Color endValue, System.String property, System.Single duration)
    // Offset: 0x15A3788
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* DOColor(::UnityEngine::Material* target, ::UnityEngine::Color endValue, ::StringW property, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.Material target, UnityEngine.Color endValue, System.Int32 propertyID, System.Single duration)
    // Offset: 0x15A39B4
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* DOColor(::UnityEngine::Material* target, ::UnityEngine::Color endValue, int propertyID, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> DOFade(UnityEngine.Material target, System.Single endValue, System.Single duration)
    // Offset: 0x15A3BE4
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* DOFade(::UnityEngine::Material* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> DOFade(UnityEngine.Material target, System.Single endValue, System.String property, System.Single duration)
    // Offset: 0x15A3D7C
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* DOFade(::UnityEngine::Material* target, float endValue, ::StringW property, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> DOFade(UnityEngine.Material target, System.Single endValue, System.Int32 propertyID, System.Single duration)
    // Offset: 0x15A3F80
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* DOFade(::UnityEngine::Material* target, float endValue, int propertyID, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<System.Single,System.Single,DG.Tweening.Plugins.Options.FloatOptions> DOFloat(UnityEngine.Material target, System.Single endValue, System.String property, System.Single duration)
    // Offset: 0x15A4188
    static ::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* DOFloat(::UnityEngine::Material* target, float endValue, ::StringW property, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<System.Single,System.Single,DG.Tweening.Plugins.Options.FloatOptions> DOFloat(UnityEngine.Material target, System.Single endValue, System.Int32 propertyID, System.Single duration)
    // Offset: 0x15A438C
    static ::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* DOFloat(::UnityEngine::Material* target, float endValue, int propertyID, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector2,UnityEngine.Vector2,DG.Tweening.Plugins.Options.VectorOptions> DOOffset(UnityEngine.Material target, UnityEngine.Vector2 endValue, System.Single duration)
    // Offset: 0x15A4594
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* DOOffset(::UnityEngine::Material* target, ::UnityEngine::Vector2 endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector2,UnityEngine.Vector2,DG.Tweening.Plugins.Options.VectorOptions> DOOffset(UnityEngine.Material target, UnityEngine.Vector2 endValue, System.String property, System.Single duration)
    // Offset: 0x15A473C
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* DOOffset(::UnityEngine::Material* target, ::UnityEngine::Vector2 endValue, ::StringW property, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector2,UnityEngine.Vector2,DG.Tweening.Plugins.Options.VectorOptions> DOTiling(UnityEngine.Material target, UnityEngine.Vector2 endValue, System.Single duration)
    // Offset: 0x15A4950
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* DOTiling(::UnityEngine::Material* target, ::UnityEngine::Vector2 endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector2,UnityEngine.Vector2,DG.Tweening.Plugins.Options.VectorOptions> DOTiling(UnityEngine.Material target, UnityEngine.Vector2 endValue, System.String property, System.Single duration)
    // Offset: 0x15A4AF8
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* DOTiling(::UnityEngine::Material* target, ::UnityEngine::Vector2 endValue, ::StringW property, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector4,UnityEngine.Vector4,DG.Tweening.Plugins.Options.VectorOptions> DOVector(UnityEngine.Material target, UnityEngine.Vector4 endValue, System.String property, System.Single duration)
    // Offset: 0x15A4D0C
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector4, ::UnityEngine::Vector4, ::DG::Tweening::Plugins::Options::VectorOptions>* DOVector(::UnityEngine::Material* target, ::UnityEngine::Vector4 endValue, ::StringW property, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector4,UnityEngine.Vector4,DG.Tweening.Plugins.Options.VectorOptions> DOVector(UnityEngine.Material target, UnityEngine.Vector4 endValue, System.Int32 propertyID, System.Single duration)
    // Offset: 0x15A4F38
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector4, ::UnityEngine::Vector4, ::DG::Tweening::Plugins::Options::VectorOptions>* DOVector(::UnityEngine::Material* target, ::UnityEngine::Vector4 endValue, int propertyID, float duration);
    // static public DG.Tweening.Tweener DOResize(UnityEngine.TrailRenderer target, System.Single toStartWidth, System.Single toEndWidth, System.Single duration)
    // Offset: 0x15A5168
    static ::DG::Tweening::Tweener* DOResize(::UnityEngine::TrailRenderer* target, float toStartWidth, float toEndWidth, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<System.Single,System.Single,DG.Tweening.Plugins.Options.FloatOptions> DOTime(UnityEngine.TrailRenderer target, System.Single endValue, System.Single duration)
    // Offset: 0x15A5304
    static ::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* DOTime(::UnityEngine::TrailRenderer* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3,DG.Tweening.Plugins.Options.VectorOptions> DOMove(UnityEngine.Transform target, UnityEngine.Vector3 endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x15A549C
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* DOMove(::UnityEngine::Transform* target, ::UnityEngine::Vector3 endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3,DG.Tweening.Plugins.Options.VectorOptions> DOMoveX(UnityEngine.Transform target, System.Single endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x15A5680
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* DOMoveX(::UnityEngine::Transform* target, float endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3,DG.Tweening.Plugins.Options.VectorOptions> DOMoveY(UnityEngine.Transform target, System.Single endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x15A5860
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* DOMoveY(::UnityEngine::Transform* target, float endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3,DG.Tweening.Plugins.Options.VectorOptions> DOMoveZ(UnityEngine.Transform target, System.Single endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x15A5A24
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* DOMoveZ(::UnityEngine::Transform* target, float endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3,DG.Tweening.Plugins.Options.VectorOptions> DOLocalMove(UnityEngine.Transform target, UnityEngine.Vector3 endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x15A5BE8
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* DOLocalMove(::UnityEngine::Transform* target, ::UnityEngine::Vector3 endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3,DG.Tweening.Plugins.Options.VectorOptions> DOLocalMoveX(UnityEngine.Transform target, System.Single endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x15A5DB4
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* DOLocalMoveX(::UnityEngine::Transform* target, float endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3,DG.Tweening.Plugins.Options.VectorOptions> DOLocalMoveY(UnityEngine.Transform target, System.Single endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x15A5F78
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* DOLocalMoveY(::UnityEngine::Transform* target, float endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3,DG.Tweening.Plugins.Options.VectorOptions> DOLocalMoveZ(UnityEngine.Transform target, System.Single endValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x15A613C
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* DOLocalMoveZ(::UnityEngine::Transform* target, float endValue, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Quaternion,UnityEngine.Vector3,DG.Tweening.Plugins.Options.QuaternionOptions> DORotate(UnityEngine.Transform target, UnityEngine.Vector3 endValue, System.Single duration, DG.Tweening.RotateMode mode)
    // Offset: 0x15A6300
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Quaternion, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::QuaternionOptions>* DORotate(::UnityEngine::Transform* target, ::UnityEngine::Vector3 endValue, float duration, ::DG::Tweening::RotateMode mode);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Quaternion,UnityEngine.Quaternion,DG.Tweening.Plugins.Options.NoOptions> DORotateQuaternion(UnityEngine.Transform target, UnityEngine.Quaternion endValue, System.Single duration)
    // Offset: 0x15A64BC
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Quaternion, ::UnityEngine::Quaternion, ::DG::Tweening::Plugins::Options::NoOptions>* DORotateQuaternion(::UnityEngine::Transform* target, ::UnityEngine::Quaternion endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Quaternion,UnityEngine.Vector3,DG.Tweening.Plugins.Options.QuaternionOptions> DOLocalRotate(UnityEngine.Transform target, UnityEngine.Vector3 endValue, System.Single duration, DG.Tweening.RotateMode mode)
    // Offset: 0x15A66A4
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Quaternion, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::QuaternionOptions>* DOLocalRotate(::UnityEngine::Transform* target, ::UnityEngine::Vector3 endValue, float duration, ::DG::Tweening::RotateMode mode);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Quaternion,UnityEngine.Quaternion,DG.Tweening.Plugins.Options.NoOptions> DOLocalRotateQuaternion(UnityEngine.Transform target, UnityEngine.Quaternion endValue, System.Single duration)
    // Offset: 0x15A6860
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Quaternion, ::UnityEngine::Quaternion, ::DG::Tweening::Plugins::Options::NoOptions>* DOLocalRotateQuaternion(::UnityEngine::Transform* target, ::UnityEngine::Quaternion endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3,DG.Tweening.Plugins.Options.VectorOptions> DOScale(UnityEngine.Transform target, UnityEngine.Vector3 endValue, System.Single duration)
    // Offset: 0x15A6A48
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* DOScale(::UnityEngine::Transform* target, ::UnityEngine::Vector3 endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3,DG.Tweening.Plugins.Options.VectorOptions> DOScale(UnityEngine.Transform target, System.Single endValue, System.Single duration)
    // Offset: 0x15A6BF8
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* DOScale(::UnityEngine::Transform* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3,DG.Tweening.Plugins.Options.VectorOptions> DOScaleX(UnityEngine.Transform target, System.Single endValue, System.Single duration)
    // Offset: 0x15A6D98
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* DOScaleX(::UnityEngine::Transform* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3,DG.Tweening.Plugins.Options.VectorOptions> DOScaleY(UnityEngine.Transform target, System.Single endValue, System.Single duration)
    // Offset: 0x15A6F54
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* DOScaleY(::UnityEngine::Transform* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3,DG.Tweening.Plugins.Options.VectorOptions> DOScaleZ(UnityEngine.Transform target, System.Single endValue, System.Single duration)
    // Offset: 0x15A7110
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* DOScaleZ(::UnityEngine::Transform* target, float endValue, float duration);
    // static public DG.Tweening.Tweener DOLookAt(UnityEngine.Transform target, UnityEngine.Vector3 towards, System.Single duration, DG.Tweening.AxisConstraint axisConstraint, System.Nullable`1<UnityEngine.Vector3> up)
    // Offset: 0x15A72CC
    static ::DG::Tweening::Tweener* DOLookAt(::UnityEngine::Transform* target, ::UnityEngine::Vector3 towards, float duration, ::DG::Tweening::AxisConstraint axisConstraint, ::System::Nullable_1<::UnityEngine::Vector3> up);
    // static public DG.Tweening.Tweener DOPunchPosition(UnityEngine.Transform target, UnityEngine.Vector3 punch, System.Single duration, System.Int32 vibrato, System.Single elasticity, System.Boolean snapping)
    // Offset: 0x15A750C
    static ::DG::Tweening::Tweener* DOPunchPosition(::UnityEngine::Transform* target, ::UnityEngine::Vector3 punch, float duration, int vibrato, float elasticity, bool snapping);
    // static public DG.Tweening.Tweener DOPunchScale(UnityEngine.Transform target, UnityEngine.Vector3 punch, System.Single duration, System.Int32 vibrato, System.Single elasticity)
    // Offset: 0x15A779C
    static ::DG::Tweening::Tweener* DOPunchScale(::UnityEngine::Transform* target, ::UnityEngine::Vector3 punch, float duration, int vibrato, float elasticity);
    // static public DG.Tweening.Tweener DOPunchRotation(UnityEngine.Transform target, UnityEngine.Vector3 punch, System.Single duration, System.Int32 vibrato, System.Single elasticity)
    // Offset: 0x15A79F4
    static ::DG::Tweening::Tweener* DOPunchRotation(::UnityEngine::Transform* target, ::UnityEngine::Vector3 punch, float duration, int vibrato, float elasticity);
    // static public DG.Tweening.Tweener DOShakePosition(UnityEngine.Transform target, System.Single duration, System.Single strength, System.Int32 vibrato, System.Single randomness, System.Boolean snapping, System.Boolean fadeOut)
    // Offset: 0x15A7C4C
    static ::DG::Tweening::Tweener* DOShakePosition(::UnityEngine::Transform* target, float duration, float strength, int vibrato, float randomness, bool snapping, bool fadeOut);
    // static public DG.Tweening.Tweener DOShakePosition(UnityEngine.Transform target, System.Single duration, UnityEngine.Vector3 strength, System.Int32 vibrato, System.Single randomness, System.Boolean snapping, System.Boolean fadeOut)
    // Offset: 0x15A7ED8
    static ::DG::Tweening::Tweener* DOShakePosition(::UnityEngine::Transform* target, float duration, ::UnityEngine::Vector3 strength, int vibrato, float randomness, bool snapping, bool fadeOut);
    // static public DG.Tweening.Tweener DOShakeRotation(UnityEngine.Transform target, System.Single duration, System.Single strength, System.Int32 vibrato, System.Single randomness, System.Boolean fadeOut)
    // Offset: 0x15A8178
    static ::DG::Tweening::Tweener* DOShakeRotation(::UnityEngine::Transform* target, float duration, float strength, int vibrato, float randomness, bool fadeOut);
    // static public DG.Tweening.Tweener DOShakeRotation(UnityEngine.Transform target, System.Single duration, UnityEngine.Vector3 strength, System.Int32 vibrato, System.Single randomness, System.Boolean fadeOut)
    // Offset: 0x15A83EC
    static ::DG::Tweening::Tweener* DOShakeRotation(::UnityEngine::Transform* target, float duration, ::UnityEngine::Vector3 strength, int vibrato, float randomness, bool fadeOut);
    // static public DG.Tweening.Tweener DOShakeScale(UnityEngine.Transform target, System.Single duration, System.Single strength, System.Int32 vibrato, System.Single randomness, System.Boolean fadeOut)
    // Offset: 0x15A8674
    static ::DG::Tweening::Tweener* DOShakeScale(::UnityEngine::Transform* target, float duration, float strength, int vibrato, float randomness, bool fadeOut);
    // static public DG.Tweening.Tweener DOShakeScale(UnityEngine.Transform target, System.Single duration, UnityEngine.Vector3 strength, System.Int32 vibrato, System.Single randomness, System.Boolean fadeOut)
    // Offset: 0x15A8968
    static ::DG::Tweening::Tweener* DOShakeScale(::UnityEngine::Transform* target, float duration, ::UnityEngine::Vector3 strength, int vibrato, float randomness, bool fadeOut);
    // static public DG.Tweening.Sequence DOJump(UnityEngine.Transform target, UnityEngine.Vector3 endValue, System.Single jumpPower, System.Int32 numJumps, System.Single duration, System.Boolean snapping)
    // Offset: 0x15A8BF0
    static ::DG::Tweening::Sequence* DOJump(::UnityEngine::Transform* target, ::UnityEngine::Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping);
    // static public DG.Tweening.Sequence DOLocalJump(UnityEngine.Transform target, UnityEngine.Vector3 endValue, System.Single jumpPower, System.Int32 numJumps, System.Single duration, System.Boolean snapping)
    // Offset: 0x15A91A8
    static ::DG::Tweening::Sequence* DOLocalJump(::UnityEngine::Transform* target, ::UnityEngine::Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,DG.Tweening.Plugins.Core.PathCore.Path,DG.Tweening.Plugins.Options.PathOptions> DOPath(UnityEngine.Transform target, UnityEngine.Vector3[] path, System.Single duration, DG.Tweening.PathType pathType, DG.Tweening.PathMode pathMode, System.Int32 resolution, System.Nullable`1<UnityEngine.Color> gizmoColor)
    // Offset: 0x15A965C
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::DG::Tweening::Plugins::Core::PathCore::Path*, ::DG::Tweening::Plugins::Options::PathOptions>* DOPath(::UnityEngine::Transform* target, ::ArrayW<::UnityEngine::Vector3> path, float duration, ::DG::Tweening::PathType pathType, ::DG::Tweening::PathMode pathMode, int resolution, ::System::Nullable_1<::UnityEngine::Color> gizmoColor);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,DG.Tweening.Plugins.Core.PathCore.Path,DG.Tweening.Plugins.Options.PathOptions> DOLocalPath(UnityEngine.Transform target, UnityEngine.Vector3[] path, System.Single duration, DG.Tweening.PathType pathType, DG.Tweening.PathMode pathMode, System.Int32 resolution, System.Nullable`1<UnityEngine.Color> gizmoColor)
    // Offset: 0x15A989C
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::DG::Tweening::Plugins::Core::PathCore::Path*, ::DG::Tweening::Plugins::Options::PathOptions>* DOLocalPath(::UnityEngine::Transform* target, ::ArrayW<::UnityEngine::Vector3> path, float duration, ::DG::Tweening::PathType pathType, ::DG::Tweening::PathMode pathMode, int resolution, ::System::Nullable_1<::UnityEngine::Color> gizmoColor);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,DG.Tweening.Plugins.Core.PathCore.Path,DG.Tweening.Plugins.Options.PathOptions> DOPath(UnityEngine.Transform target, DG.Tweening.Plugins.Core.PathCore.Path path, System.Single duration, DG.Tweening.PathMode pathMode)
    // Offset: 0x15A9AE4
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::DG::Tweening::Plugins::Core::PathCore::Path*, ::DG::Tweening::Plugins::Options::PathOptions>* DOPath(::UnityEngine::Transform* target, ::DG::Tweening::Plugins::Core::PathCore::Path* path, float duration, ::DG::Tweening::PathMode pathMode);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,DG.Tweening.Plugins.Core.PathCore.Path,DG.Tweening.Plugins.Options.PathOptions> DOLocalPath(UnityEngine.Transform target, DG.Tweening.Plugins.Core.PathCore.Path path, System.Single duration, DG.Tweening.PathMode pathMode)
    // Offset: 0x15A9CB0
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::DG::Tweening::Plugins::Core::PathCore::Path*, ::DG::Tweening::Plugins::Options::PathOptions>* DOLocalPath(::UnityEngine::Transform* target, ::DG::Tweening::Plugins::Core::PathCore::Path* path, float duration, ::DG::Tweening::PathMode pathMode);
    // static public DG.Tweening.Core.TweenerCore`3<System.Single,System.Single,DG.Tweening.Plugins.Options.FloatOptions> DOTimeScale(DG.Tweening.Tween target, System.Single endValue, System.Single duration)
    // Offset: 0x15A9E84
    static ::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* DOTimeScale(::DG::Tweening::Tween* target, float endValue, float duration);
    // static public DG.Tweening.Tweener DOBlendableColor(UnityEngine.Light target, UnityEngine.Color endValue, System.Single duration)
    // Offset: 0x15AA01C
    static ::DG::Tweening::Tweener* DOBlendableColor(::UnityEngine::Light* target, ::UnityEngine::Color endValue, float duration);
    // static public DG.Tweening.Tweener DOBlendableColor(UnityEngine.Material target, UnityEngine.Color endValue, System.Single duration)
    // Offset: 0x15AA268
    static ::DG::Tweening::Tweener* DOBlendableColor(::UnityEngine::Material* target, ::UnityEngine::Color endValue, float duration);
    // static public DG.Tweening.Tweener DOBlendableColor(UnityEngine.Material target, UnityEngine.Color endValue, System.String property, System.Single duration)
    // Offset: 0x15AA4B4
    static ::DG::Tweening::Tweener* DOBlendableColor(::UnityEngine::Material* target, ::UnityEngine::Color endValue, ::StringW property, float duration);
    // static public DG.Tweening.Tweener DOBlendableColor(UnityEngine.Material target, UnityEngine.Color endValue, System.Int32 propertyID, System.Single duration)
    // Offset: 0x15AA770
    static ::DG::Tweening::Tweener* DOBlendableColor(::UnityEngine::Material* target, ::UnityEngine::Color endValue, int propertyID, float duration);
    // static public DG.Tweening.Tweener DOBlendableMoveBy(UnityEngine.Transform target, UnityEngine.Vector3 byValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x15AAA30
    static ::DG::Tweening::Tweener* DOBlendableMoveBy(::UnityEngine::Transform* target, ::UnityEngine::Vector3 byValue, float duration, bool snapping);
    // static public DG.Tweening.Tweener DOBlendableLocalMoveBy(UnityEngine.Transform target, UnityEngine.Vector3 byValue, System.Single duration, System.Boolean snapping)
    // Offset: 0x15AAC18
    static ::DG::Tweening::Tweener* DOBlendableLocalMoveBy(::UnityEngine::Transform* target, ::UnityEngine::Vector3 byValue, float duration, bool snapping);
    // static public DG.Tweening.Tweener DOBlendableRotateBy(UnityEngine.Transform target, UnityEngine.Vector3 byValue, System.Single duration, DG.Tweening.RotateMode mode)
    // Offset: 0x15AAE00
    static ::DG::Tweening::Tweener* DOBlendableRotateBy(::UnityEngine::Transform* target, ::UnityEngine::Vector3 byValue, float duration, ::DG::Tweening::RotateMode mode);
    // static public DG.Tweening.Tweener DOBlendableLocalRotateBy(UnityEngine.Transform target, UnityEngine.Vector3 byValue, System.Single duration, DG.Tweening.RotateMode mode)
    // Offset: 0x15AAFE0
    static ::DG::Tweening::Tweener* DOBlendableLocalRotateBy(::UnityEngine::Transform* target, ::UnityEngine::Vector3 byValue, float duration, ::DG::Tweening::RotateMode mode);
    // static public DG.Tweening.Tweener DOBlendablePunchRotation(UnityEngine.Transform target, UnityEngine.Vector3 punch, System.Single duration, System.Int32 vibrato, System.Single elasticity)
    // Offset: 0x15AB1C0
    static ::DG::Tweening::Tweener* DOBlendablePunchRotation(::UnityEngine::Transform* target, ::UnityEngine::Vector3 punch, float duration, int vibrato, float elasticity);
    // static public DG.Tweening.Tweener DOBlendableScaleBy(UnityEngine.Transform target, UnityEngine.Vector3 byValue, System.Single duration)
    // Offset: 0x15AB444
    static ::DG::Tweening::Tweener* DOBlendableScaleBy(::UnityEngine::Transform* target, ::UnityEngine::Vector3 byValue, float duration);
    // static public System.Int32 DOComplete(UnityEngine.Component target, System.Boolean withCallbacks)
    // Offset: 0x15AB614
    static int DOComplete(::UnityEngine::Component* target, bool withCallbacks);
    // static public System.Int32 DOComplete(UnityEngine.Material target, System.Boolean withCallbacks)
    // Offset: 0x15AB688
    static int DOComplete(::UnityEngine::Material* target, bool withCallbacks);
    // static public System.Int32 DOKill(UnityEngine.Component target, System.Boolean complete)
    // Offset: 0x15AB6FC
    static int DOKill(::UnityEngine::Component* target, bool complete);
    // static public System.Int32 DOKill(UnityEngine.Material target, System.Boolean complete)
    // Offset: 0x15AB770
    static int DOKill(::UnityEngine::Material* target, bool complete);
    // static public System.Int32 DOFlip(UnityEngine.Component target)
    // Offset: 0x15AB7E4
    static int DOFlip(::UnityEngine::Component* target);
    // static public System.Int32 DOFlip(UnityEngine.Material target)
    // Offset: 0x15AB848
    static int DOFlip(::UnityEngine::Material* target);
    // static public System.Int32 DOGoto(UnityEngine.Component target, System.Single to, System.Boolean andPlay)
    // Offset: 0x15AB8AC
    static int DOGoto(::UnityEngine::Component* target, float to, bool andPlay);
    // static public System.Int32 DOGoto(UnityEngine.Material target, System.Single to, System.Boolean andPlay)
    // Offset: 0x15AB930
    static int DOGoto(::UnityEngine::Material* target, float to, bool andPlay);
    // static public System.Int32 DOPause(UnityEngine.Component target)
    // Offset: 0x15AB9B4
    static int DOPause(::UnityEngine::Component* target);
    // static public System.Int32 DOPause(UnityEngine.Material target)
    // Offset: 0x15ABA18
    static int DOPause(::UnityEngine::Material* target);
    // static public System.Int32 DOPlay(UnityEngine.Component target)
    // Offset: 0x15ABA7C
    static int DOPlay(::UnityEngine::Component* target);
    // static public System.Int32 DOPlay(UnityEngine.Material target)
    // Offset: 0x15ABAE0
    static int DOPlay(::UnityEngine::Material* target);
    // static public System.Int32 DOPlayBackwards(UnityEngine.Component target)
    // Offset: 0x15ABB44
    static int DOPlayBackwards(::UnityEngine::Component* target);
    // static public System.Int32 DOPlayBackwards(UnityEngine.Material target)
    // Offset: 0x15ABBA8
    static int DOPlayBackwards(::UnityEngine::Material* target);
    // static public System.Int32 DOPlayForward(UnityEngine.Component target)
    // Offset: 0x15ABC0C
    static int DOPlayForward(::UnityEngine::Component* target);
    // static public System.Int32 DOPlayForward(UnityEngine.Material target)
    // Offset: 0x15ABC70
    static int DOPlayForward(::UnityEngine::Material* target);
    // static public System.Int32 DORestart(UnityEngine.Component target, System.Boolean includeDelay)
    // Offset: 0x15ABCD4
    static int DORestart(::UnityEngine::Component* target, bool includeDelay);
    // static public System.Int32 DORestart(UnityEngine.Material target, System.Boolean includeDelay)
    // Offset: 0x15ABD4C
    static int DORestart(::UnityEngine::Material* target, bool includeDelay);
    // static public System.Int32 DORewind(UnityEngine.Component target, System.Boolean includeDelay)
    // Offset: 0x15ABDC4
    static int DORewind(::UnityEngine::Component* target, bool includeDelay);
    // static public System.Int32 DORewind(UnityEngine.Material target, System.Boolean includeDelay)
    // Offset: 0x15ABE38
    static int DORewind(::UnityEngine::Material* target, bool includeDelay);
    // static public System.Int32 DOSmoothRewind(UnityEngine.Component target)
    // Offset: 0x15ABEAC
    static int DOSmoothRewind(::UnityEngine::Component* target);
    // static public System.Int32 DOSmoothRewind(UnityEngine.Material target)
    // Offset: 0x15ABF10
    static int DOSmoothRewind(::UnityEngine::Material* target);
    // static public System.Int32 DOTogglePause(UnityEngine.Component target)
    // Offset: 0x15ABF74
    static int DOTogglePause(::UnityEngine::Component* target);
    // static public System.Int32 DOTogglePause(UnityEngine.Material target)
    // Offset: 0x15ABFD8
    static int DOTogglePause(::UnityEngine::Material* target);
  }; // DG.Tweening.ShortcutExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOAspect
// Il2CppName: DOAspect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* (*)(::UnityEngine::Camera*, float, float)>(&DG::Tweening::ShortcutExtensions::DOAspect)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOAspect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOColor
// Il2CppName: DOColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::UnityEngine::Camera*, ::UnityEngine::Color, float)>(&DG::Tweening::ShortcutExtensions::DOColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOFarClipPlane
// Il2CppName: DOFarClipPlane
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* (*)(::UnityEngine::Camera*, float, float)>(&DG::Tweening::ShortcutExtensions::DOFarClipPlane)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOFarClipPlane", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOFieldOfView
// Il2CppName: DOFieldOfView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* (*)(::UnityEngine::Camera*, float, float)>(&DG::Tweening::ShortcutExtensions::DOFieldOfView)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOFieldOfView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DONearClipPlane
// Il2CppName: DONearClipPlane
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* (*)(::UnityEngine::Camera*, float, float)>(&DG::Tweening::ShortcutExtensions::DONearClipPlane)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DONearClipPlane", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOOrthoSize
// Il2CppName: DOOrthoSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* (*)(::UnityEngine::Camera*, float, float)>(&DG::Tweening::ShortcutExtensions::DOOrthoSize)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOOrthoSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOPixelRect
// Il2CppName: DOPixelRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Rect, ::UnityEngine::Rect, ::DG::Tweening::Plugins::Options::RectOptions>* (*)(::UnityEngine::Camera*, ::UnityEngine::Rect, float)>(&DG::Tweening::ShortcutExtensions::DOPixelRect)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOPixelRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DORect
// Il2CppName: DORect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Rect, ::UnityEngine::Rect, ::DG::Tweening::Plugins::Options::RectOptions>* (*)(::UnityEngine::Camera*, ::UnityEngine::Rect, float)>(&DG::Tweening::ShortcutExtensions::DORect)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DORect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOShakePosition
// Il2CppName: DOShakePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Camera*, float, float, int, float, bool)>(&DG::Tweening::ShortcutExtensions::DOShakePosition)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* strength = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* randomness = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* fadeOut = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOShakePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, duration, strength, vibrato, randomness, fadeOut});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOShakePosition
// Il2CppName: DOShakePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Camera*, float, ::UnityEngine::Vector3, int, float, bool)>(&DG::Tweening::ShortcutExtensions::DOShakePosition)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* strength = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* randomness = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* fadeOut = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOShakePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, duration, strength, vibrato, randomness, fadeOut});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOShakeRotation
// Il2CppName: DOShakeRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Camera*, float, float, int, float, bool)>(&DG::Tweening::ShortcutExtensions::DOShakeRotation)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* strength = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* randomness = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* fadeOut = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOShakeRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, duration, strength, vibrato, randomness, fadeOut});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOShakeRotation
// Il2CppName: DOShakeRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Camera*, float, ::UnityEngine::Vector3, int, float, bool)>(&DG::Tweening::ShortcutExtensions::DOShakeRotation)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* strength = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* randomness = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* fadeOut = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOShakeRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, duration, strength, vibrato, randomness, fadeOut});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOColor
// Il2CppName: DOColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::UnityEngine::Light*, ::UnityEngine::Color, float)>(&DG::Tweening::ShortcutExtensions::DOColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Light")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOIntensity
// Il2CppName: DOIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* (*)(::UnityEngine::Light*, float, float)>(&DG::Tweening::ShortcutExtensions::DOIntensity)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Light")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOShadowStrength
// Il2CppName: DOShadowStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* (*)(::UnityEngine::Light*, float, float)>(&DG::Tweening::ShortcutExtensions::DOShadowStrength)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Light")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOShadowStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOColor
// Il2CppName: DOColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::LineRenderer*, ::DG::Tweening::Color2, ::DG::Tweening::Color2, float)>(&DG::Tweening::ShortcutExtensions::DOColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "LineRenderer")->byval_arg;
    static auto* startValue = &::il2cpp_utils::GetClassFromName("DG.Tweening", "Color2")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("DG.Tweening", "Color2")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, startValue, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOColor
// Il2CppName: DOColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::UnityEngine::Material*, ::UnityEngine::Color, float)>(&DG::Tweening::ShortcutExtensions::DOColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOColor
// Il2CppName: DOColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::UnityEngine::Material*, ::UnityEngine::Color, ::StringW, float)>(&DG::Tweening::ShortcutExtensions::DOColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* property = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, property, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOColor
// Il2CppName: DOColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::UnityEngine::Material*, ::UnityEngine::Color, int, float)>(&DG::Tweening::ShortcutExtensions::DOColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* propertyID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, propertyID, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOFade
// Il2CppName: DOFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::UnityEngine::Material*, float, float)>(&DG::Tweening::ShortcutExtensions::DOFade)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOFade
// Il2CppName: DOFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::UnityEngine::Material*, float, ::StringW, float)>(&DG::Tweening::ShortcutExtensions::DOFade)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* property = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, property, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOFade
// Il2CppName: DOFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::UnityEngine::Material*, float, int, float)>(&DG::Tweening::ShortcutExtensions::DOFade)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* propertyID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, propertyID, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOFloat
// Il2CppName: DOFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* (*)(::UnityEngine::Material*, float, ::StringW, float)>(&DG::Tweening::ShortcutExtensions::DOFloat)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* property = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, property, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOFloat
// Il2CppName: DOFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* (*)(::UnityEngine::Material*, float, int, float)>(&DG::Tweening::ShortcutExtensions::DOFloat)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* propertyID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, propertyID, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOOffset
// Il2CppName: DOOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::Material*, ::UnityEngine::Vector2, float)>(&DG::Tweening::ShortcutExtensions::DOOffset)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOOffset
// Il2CppName: DOOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::Material*, ::UnityEngine::Vector2, ::StringW, float)>(&DG::Tweening::ShortcutExtensions::DOOffset)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* property = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, property, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOTiling
// Il2CppName: DOTiling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::Material*, ::UnityEngine::Vector2, float)>(&DG::Tweening::ShortcutExtensions::DOTiling)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOTiling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOTiling
// Il2CppName: DOTiling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::Material*, ::UnityEngine::Vector2, ::StringW, float)>(&DG::Tweening::ShortcutExtensions::DOTiling)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* property = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOTiling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, property, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOVector
// Il2CppName: DOVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector4, ::UnityEngine::Vector4, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::Material*, ::UnityEngine::Vector4, ::StringW, float)>(&DG::Tweening::ShortcutExtensions::DOVector)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* property = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, property, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOVector
// Il2CppName: DOVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector4, ::UnityEngine::Vector4, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::Material*, ::UnityEngine::Vector4, int, float)>(&DG::Tweening::ShortcutExtensions::DOVector)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* propertyID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, propertyID, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOResize
// Il2CppName: DOResize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::TrailRenderer*, float, float, float)>(&DG::Tweening::ShortcutExtensions::DOResize)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "TrailRenderer")->byval_arg;
    static auto* toStartWidth = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* toEndWidth = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOResize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, toStartWidth, toEndWidth, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOTime
// Il2CppName: DOTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* (*)(::UnityEngine::TrailRenderer*, float, float)>(&DG::Tweening::ShortcutExtensions::DOTime)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "TrailRenderer")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOMove
// Il2CppName: DOMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3, float, bool)>(&DG::Tweening::ShortcutExtensions::DOMove)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOMoveX
// Il2CppName: DOMoveX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::Transform*, float, float, bool)>(&DG::Tweening::ShortcutExtensions::DOMoveX)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOMoveX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOMoveY
// Il2CppName: DOMoveY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::Transform*, float, float, bool)>(&DG::Tweening::ShortcutExtensions::DOMoveY)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOMoveY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOMoveZ
// Il2CppName: DOMoveZ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::Transform*, float, float, bool)>(&DG::Tweening::ShortcutExtensions::DOMoveZ)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOMoveZ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOLocalMove
// Il2CppName: DOLocalMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3, float, bool)>(&DG::Tweening::ShortcutExtensions::DOLocalMove)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOLocalMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOLocalMoveX
// Il2CppName: DOLocalMoveX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::Transform*, float, float, bool)>(&DG::Tweening::ShortcutExtensions::DOLocalMoveX)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOLocalMoveX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOLocalMoveY
// Il2CppName: DOLocalMoveY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::Transform*, float, float, bool)>(&DG::Tweening::ShortcutExtensions::DOLocalMoveY)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOLocalMoveY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOLocalMoveZ
// Il2CppName: DOLocalMoveZ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::Transform*, float, float, bool)>(&DG::Tweening::ShortcutExtensions::DOLocalMoveZ)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOLocalMoveZ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DORotate
// Il2CppName: DORotate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Quaternion, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::QuaternionOptions>* (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3, float, ::DG::Tweening::RotateMode)>(&DG::Tweening::ShortcutExtensions::DORotate)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("DG.Tweening", "RotateMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DORotate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, mode});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DORotateQuaternion
// Il2CppName: DORotateQuaternion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Quaternion, ::UnityEngine::Quaternion, ::DG::Tweening::Plugins::Options::NoOptions>* (*)(::UnityEngine::Transform*, ::UnityEngine::Quaternion, float)>(&DG::Tweening::ShortcutExtensions::DORotateQuaternion)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DORotateQuaternion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOLocalRotate
// Il2CppName: DOLocalRotate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Quaternion, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::QuaternionOptions>* (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3, float, ::DG::Tweening::RotateMode)>(&DG::Tweening::ShortcutExtensions::DOLocalRotate)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("DG.Tweening", "RotateMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOLocalRotate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration, mode});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOLocalRotateQuaternion
// Il2CppName: DOLocalRotateQuaternion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Quaternion, ::UnityEngine::Quaternion, ::DG::Tweening::Plugins::Options::NoOptions>* (*)(::UnityEngine::Transform*, ::UnityEngine::Quaternion, float)>(&DG::Tweening::ShortcutExtensions::DOLocalRotateQuaternion)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOLocalRotateQuaternion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOScale
// Il2CppName: DOScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3, float)>(&DG::Tweening::ShortcutExtensions::DOScale)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOScale
// Il2CppName: DOScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::Transform*, float, float)>(&DG::Tweening::ShortcutExtensions::DOScale)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOScaleX
// Il2CppName: DOScaleX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::Transform*, float, float)>(&DG::Tweening::ShortcutExtensions::DOScaleX)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOScaleX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOScaleY
// Il2CppName: DOScaleY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::Transform*, float, float)>(&DG::Tweening::ShortcutExtensions::DOScaleY)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOScaleY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOScaleZ
// Il2CppName: DOScaleZ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::UnityEngine::Transform*, float, float)>(&DG::Tweening::ShortcutExtensions::DOScaleZ)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOScaleZ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOLookAt
// Il2CppName: DOLookAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3, float, ::DG::Tweening::AxisConstraint, ::System::Nullable_1<::UnityEngine::Vector3>)>(&DG::Tweening::ShortcutExtensions::DOLookAt)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* towards = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* axisConstraint = &::il2cpp_utils::GetClassFromName("DG.Tweening", "AxisConstraint")->byval_arg;
    static auto* up = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOLookAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, towards, duration, axisConstraint, up});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOPunchPosition
// Il2CppName: DOPunchPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3, float, int, float, bool)>(&DG::Tweening::ShortcutExtensions::DOPunchPosition)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* punch = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* elasticity = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOPunchPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, punch, duration, vibrato, elasticity, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOPunchScale
// Il2CppName: DOPunchScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3, float, int, float)>(&DG::Tweening::ShortcutExtensions::DOPunchScale)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* punch = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* elasticity = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOPunchScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, punch, duration, vibrato, elasticity});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOPunchRotation
// Il2CppName: DOPunchRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3, float, int, float)>(&DG::Tweening::ShortcutExtensions::DOPunchRotation)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* punch = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* elasticity = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOPunchRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, punch, duration, vibrato, elasticity});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOShakePosition
// Il2CppName: DOShakePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Transform*, float, float, int, float, bool, bool)>(&DG::Tweening::ShortcutExtensions::DOShakePosition)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* strength = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* randomness = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* fadeOut = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOShakePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, duration, strength, vibrato, randomness, snapping, fadeOut});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOShakePosition
// Il2CppName: DOShakePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Transform*, float, ::UnityEngine::Vector3, int, float, bool, bool)>(&DG::Tweening::ShortcutExtensions::DOShakePosition)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* strength = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* randomness = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* fadeOut = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOShakePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, duration, strength, vibrato, randomness, snapping, fadeOut});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOShakeRotation
// Il2CppName: DOShakeRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Transform*, float, float, int, float, bool)>(&DG::Tweening::ShortcutExtensions::DOShakeRotation)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* strength = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* randomness = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* fadeOut = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOShakeRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, duration, strength, vibrato, randomness, fadeOut});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOShakeRotation
// Il2CppName: DOShakeRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Transform*, float, ::UnityEngine::Vector3, int, float, bool)>(&DG::Tweening::ShortcutExtensions::DOShakeRotation)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* strength = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* randomness = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* fadeOut = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOShakeRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, duration, strength, vibrato, randomness, fadeOut});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOShakeScale
// Il2CppName: DOShakeScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Transform*, float, float, int, float, bool)>(&DG::Tweening::ShortcutExtensions::DOShakeScale)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* strength = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* randomness = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* fadeOut = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOShakeScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, duration, strength, vibrato, randomness, fadeOut});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOShakeScale
// Il2CppName: DOShakeScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Transform*, float, ::UnityEngine::Vector3, int, float, bool)>(&DG::Tweening::ShortcutExtensions::DOShakeScale)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* strength = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* randomness = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* fadeOut = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOShakeScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, duration, strength, vibrato, randomness, fadeOut});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOJump
// Il2CppName: DOJump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Sequence* (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3, float, int, float, bool)>(&DG::Tweening::ShortcutExtensions::DOJump)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* jumpPower = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* numJumps = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOJump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, jumpPower, numJumps, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOLocalJump
// Il2CppName: DOLocalJump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Sequence* (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3, float, int, float, bool)>(&DG::Tweening::ShortcutExtensions::DOLocalJump)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* jumpPower = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* numJumps = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOLocalJump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, jumpPower, numJumps, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOPath
// Il2CppName: DOPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::DG::Tweening::Plugins::Core::PathCore::Path*, ::DG::Tweening::Plugins::Options::PathOptions>* (*)(::UnityEngine::Transform*, ::ArrayW<::UnityEngine::Vector3>, float, ::DG::Tweening::PathType, ::DG::Tweening::PathMode, int, ::System::Nullable_1<::UnityEngine::Color>)>(&DG::Tweening::ShortcutExtensions::DOPath)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* path = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* pathType = &::il2cpp_utils::GetClassFromName("DG.Tweening", "PathType")->byval_arg;
    static auto* pathMode = &::il2cpp_utils::GetClassFromName("DG.Tweening", "PathMode")->byval_arg;
    static auto* resolution = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* gizmoColor = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Color")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, path, duration, pathType, pathMode, resolution, gizmoColor});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOLocalPath
// Il2CppName: DOLocalPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::DG::Tweening::Plugins::Core::PathCore::Path*, ::DG::Tweening::Plugins::Options::PathOptions>* (*)(::UnityEngine::Transform*, ::ArrayW<::UnityEngine::Vector3>, float, ::DG::Tweening::PathType, ::DG::Tweening::PathMode, int, ::System::Nullable_1<::UnityEngine::Color>)>(&DG::Tweening::ShortcutExtensions::DOLocalPath)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* path = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* pathType = &::il2cpp_utils::GetClassFromName("DG.Tweening", "PathType")->byval_arg;
    static auto* pathMode = &::il2cpp_utils::GetClassFromName("DG.Tweening", "PathMode")->byval_arg;
    static auto* resolution = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* gizmoColor = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Color")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOLocalPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, path, duration, pathType, pathMode, resolution, gizmoColor});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOPath
// Il2CppName: DOPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::DG::Tweening::Plugins::Core::PathCore::Path*, ::DG::Tweening::Plugins::Options::PathOptions>* (*)(::UnityEngine::Transform*, ::DG::Tweening::Plugins::Core::PathCore::Path*, float, ::DG::Tweening::PathMode)>(&DG::Tweening::ShortcutExtensions::DOPath)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("DG.Tweening.Plugins.Core.PathCore", "Path")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* pathMode = &::il2cpp_utils::GetClassFromName("DG.Tweening", "PathMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, path, duration, pathMode});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOLocalPath
// Il2CppName: DOLocalPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::DG::Tweening::Plugins::Core::PathCore::Path*, ::DG::Tweening::Plugins::Options::PathOptions>* (*)(::UnityEngine::Transform*, ::DG::Tweening::Plugins::Core::PathCore::Path*, float, ::DG::Tweening::PathMode)>(&DG::Tweening::ShortcutExtensions::DOLocalPath)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("DG.Tweening.Plugins.Core.PathCore", "Path")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* pathMode = &::il2cpp_utils::GetClassFromName("DG.Tweening", "PathMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOLocalPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, path, duration, pathMode});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOTimeScale
// Il2CppName: DOTimeScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* (*)(::DG::Tweening::Tween*, float, float)>(&DG::Tweening::ShortcutExtensions::DOTimeScale)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("DG.Tweening", "Tween")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOTimeScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOBlendableColor
// Il2CppName: DOBlendableColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Light*, ::UnityEngine::Color, float)>(&DG::Tweening::ShortcutExtensions::DOBlendableColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Light")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOBlendableColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOBlendableColor
// Il2CppName: DOBlendableColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Material*, ::UnityEngine::Color, float)>(&DG::Tweening::ShortcutExtensions::DOBlendableColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOBlendableColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOBlendableColor
// Il2CppName: DOBlendableColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Material*, ::UnityEngine::Color, ::StringW, float)>(&DG::Tweening::ShortcutExtensions::DOBlendableColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* property = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOBlendableColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, property, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOBlendableColor
// Il2CppName: DOBlendableColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Material*, ::UnityEngine::Color, int, float)>(&DG::Tweening::ShortcutExtensions::DOBlendableColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* propertyID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOBlendableColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, propertyID, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOBlendableMoveBy
// Il2CppName: DOBlendableMoveBy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3, float, bool)>(&DG::Tweening::ShortcutExtensions::DOBlendableMoveBy)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* byValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOBlendableMoveBy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, byValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOBlendableLocalMoveBy
// Il2CppName: DOBlendableLocalMoveBy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3, float, bool)>(&DG::Tweening::ShortcutExtensions::DOBlendableLocalMoveBy)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* byValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* snapping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOBlendableLocalMoveBy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, byValue, duration, snapping});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOBlendableRotateBy
// Il2CppName: DOBlendableRotateBy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3, float, ::DG::Tweening::RotateMode)>(&DG::Tweening::ShortcutExtensions::DOBlendableRotateBy)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* byValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("DG.Tweening", "RotateMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOBlendableRotateBy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, byValue, duration, mode});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOBlendableLocalRotateBy
// Il2CppName: DOBlendableLocalRotateBy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3, float, ::DG::Tweening::RotateMode)>(&DG::Tweening::ShortcutExtensions::DOBlendableLocalRotateBy)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* byValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("DG.Tweening", "RotateMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOBlendableLocalRotateBy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, byValue, duration, mode});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOBlendablePunchRotation
// Il2CppName: DOBlendablePunchRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3, float, int, float)>(&DG::Tweening::ShortcutExtensions::DOBlendablePunchRotation)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* punch = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* elasticity = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOBlendablePunchRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, punch, duration, vibrato, elasticity});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOBlendableScaleBy
// Il2CppName: DOBlendableScaleBy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3, float)>(&DG::Tweening::ShortcutExtensions::DOBlendableScaleBy)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* byValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOBlendableScaleBy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, byValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOComplete
// Il2CppName: DOComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Component*, bool)>(&DG::Tweening::ShortcutExtensions::DOComplete)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    static auto* withCallbacks = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, withCallbacks});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOComplete
// Il2CppName: DOComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Material*, bool)>(&DG::Tweening::ShortcutExtensions::DOComplete)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* withCallbacks = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, withCallbacks});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOKill
// Il2CppName: DOKill
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Component*, bool)>(&DG::Tweening::ShortcutExtensions::DOKill)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    static auto* complete = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOKill", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, complete});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOKill
// Il2CppName: DOKill
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Material*, bool)>(&DG::Tweening::ShortcutExtensions::DOKill)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* complete = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOKill", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, complete});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOFlip
// Il2CppName: DOFlip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Component*)>(&DG::Tweening::ShortcutExtensions::DOFlip)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOFlip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOFlip
// Il2CppName: DOFlip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Material*)>(&DG::Tweening::ShortcutExtensions::DOFlip)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOFlip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOGoto
// Il2CppName: DOGoto
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Component*, float, bool)>(&DG::Tweening::ShortcutExtensions::DOGoto)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* andPlay = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOGoto", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, to, andPlay});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOGoto
// Il2CppName: DOGoto
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Material*, float, bool)>(&DG::Tweening::ShortcutExtensions::DOGoto)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* andPlay = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOGoto", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, to, andPlay});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOPause
// Il2CppName: DOPause
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Component*)>(&DG::Tweening::ShortcutExtensions::DOPause)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOPause", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOPause
// Il2CppName: DOPause
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Material*)>(&DG::Tweening::ShortcutExtensions::DOPause)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOPause", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOPlay
// Il2CppName: DOPlay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Component*)>(&DG::Tweening::ShortcutExtensions::DOPlay)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOPlay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOPlay
// Il2CppName: DOPlay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Material*)>(&DG::Tweening::ShortcutExtensions::DOPlay)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOPlay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOPlayBackwards
// Il2CppName: DOPlayBackwards
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Component*)>(&DG::Tweening::ShortcutExtensions::DOPlayBackwards)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOPlayBackwards", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOPlayBackwards
// Il2CppName: DOPlayBackwards
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Material*)>(&DG::Tweening::ShortcutExtensions::DOPlayBackwards)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOPlayBackwards", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOPlayForward
// Il2CppName: DOPlayForward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Component*)>(&DG::Tweening::ShortcutExtensions::DOPlayForward)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOPlayForward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOPlayForward
// Il2CppName: DOPlayForward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Material*)>(&DG::Tweening::ShortcutExtensions::DOPlayForward)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOPlayForward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DORestart
// Il2CppName: DORestart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Component*, bool)>(&DG::Tweening::ShortcutExtensions::DORestart)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    static auto* includeDelay = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DORestart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, includeDelay});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DORestart
// Il2CppName: DORestart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Material*, bool)>(&DG::Tweening::ShortcutExtensions::DORestart)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* includeDelay = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DORestart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, includeDelay});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DORewind
// Il2CppName: DORewind
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Component*, bool)>(&DG::Tweening::ShortcutExtensions::DORewind)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    static auto* includeDelay = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DORewind", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, includeDelay});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DORewind
// Il2CppName: DORewind
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Material*, bool)>(&DG::Tweening::ShortcutExtensions::DORewind)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* includeDelay = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DORewind", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, includeDelay});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOSmoothRewind
// Il2CppName: DOSmoothRewind
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Component*)>(&DG::Tweening::ShortcutExtensions::DOSmoothRewind)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOSmoothRewind", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOSmoothRewind
// Il2CppName: DOSmoothRewind
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Material*)>(&DG::Tweening::ShortcutExtensions::DOSmoothRewind)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOSmoothRewind", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOTogglePause
// Il2CppName: DOTogglePause
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Component*)>(&DG::Tweening::ShortcutExtensions::DOTogglePause)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOTogglePause", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::DOTogglePause
// Il2CppName: DOTogglePause
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Material*)>(&DG::Tweening::ShortcutExtensions::DOTogglePause)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions*), "DOTogglePause", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
