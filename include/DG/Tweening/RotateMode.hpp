// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: DG.Tweening
namespace DG::Tweening {
  // Forward declaring type: RotateMode
  struct RotateMode;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::DG::Tweening::RotateMode, "DG.Tweening", "RotateMode");
// Type namespace: DG.Tweening
namespace DG::Tweening {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: DG.Tweening.RotateMode
  // [TokenAttribute] Offset: FFFFFFFF
  struct RotateMode/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: RotateMode
    constexpr RotateMode(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public DG.Tweening.RotateMode Fast
    static constexpr const int Fast = 0;
    // Get static field: static public DG.Tweening.RotateMode Fast
    static ::DG::Tweening::RotateMode _get_Fast();
    // Set static field: static public DG.Tweening.RotateMode Fast
    static void _set_Fast(::DG::Tweening::RotateMode value);
    // static field const value: static public DG.Tweening.RotateMode FastBeyond360
    static constexpr const int FastBeyond360 = 1;
    // Get static field: static public DG.Tweening.RotateMode FastBeyond360
    static ::DG::Tweening::RotateMode _get_FastBeyond360();
    // Set static field: static public DG.Tweening.RotateMode FastBeyond360
    static void _set_FastBeyond360(::DG::Tweening::RotateMode value);
    // static field const value: static public DG.Tweening.RotateMode WorldAxisAdd
    static constexpr const int WorldAxisAdd = 2;
    // Get static field: static public DG.Tweening.RotateMode WorldAxisAdd
    static ::DG::Tweening::RotateMode _get_WorldAxisAdd();
    // Set static field: static public DG.Tweening.RotateMode WorldAxisAdd
    static void _set_WorldAxisAdd(::DG::Tweening::RotateMode value);
    // static field const value: static public DG.Tweening.RotateMode LocalAxisAdd
    static constexpr const int LocalAxisAdd = 3;
    // Get static field: static public DG.Tweening.RotateMode LocalAxisAdd
    static ::DG::Tweening::RotateMode _get_LocalAxisAdd();
    // Set static field: static public DG.Tweening.RotateMode LocalAxisAdd
    static void _set_LocalAxisAdd(::DG::Tweening::RotateMode value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // DG.Tweening.RotateMode
  #pragma pack(pop)
  static check_size<sizeof(RotateMode), 0 + sizeof(int)> __DG_Tweening_RotateModeSizeCheck;
  static_assert(sizeof(RotateMode) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
