// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: DG.Tweening.Plugins.Options.ColorOptions
#include "DG/Tweening/Plugins/Options/ColorOptions.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DG::Tweening
namespace DG::Tweening {
  // Forward declaring type: Sequence
  class Sequence;
  // Forward declaring type: Tweener
  class Tweener;
}
// Forward declaring namespace: DG::Tweening::Core
namespace DG::Tweening::Core {
  // Forward declaring type: TweenerCore`3<T1, T2, TPlugOptions>
  template<typename T1, typename T2, typename TPlugOptions>
  class TweenerCore_3;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: SpriteRenderer
  class SpriteRenderer;
  // Forward declaring type: Gradient
  class Gradient;
}
// Completed forward declares
// Type namespace: DG.Tweening
namespace DG::Tweening {
  // Forward declaring type: DOTweenModuleSprite
  class DOTweenModuleSprite;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DG::Tweening::DOTweenModuleSprite);
DEFINE_IL2CPP_ARG_TYPE(::DG::Tweening::DOTweenModuleSprite*, "DG.Tweening", "DOTweenModuleSprite");
// Type namespace: DG.Tweening
namespace DG::Tweening {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: DG.Tweening.DOTweenModuleSprite
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class DOTweenModuleSprite : public ::Il2CppObject {
    public:
    // Nested type: ::DG::Tweening::DOTweenModuleSprite::$$c__DisplayClass0_0
    class $$c__DisplayClass0_0;
    // Nested type: ::DG::Tweening::DOTweenModuleSprite::$$c__DisplayClass1_0
    class $$c__DisplayClass1_0;
    // Nested type: ::DG::Tweening::DOTweenModuleSprite::$$c__DisplayClass3_0
    class $$c__DisplayClass3_0;
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.SpriteRenderer target, UnityEngine.Color endValue, System.Single duration)
    // Offset: 0x17DC6AC
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* DOColor(::UnityEngine::SpriteRenderer* target, ::UnityEngine::Color endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> DOFade(UnityEngine.SpriteRenderer target, System.Single endValue, System.Single duration)
    // Offset: 0x17DC874
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* DOFade(::UnityEngine::SpriteRenderer* target, float endValue, float duration);
    // static public DG.Tweening.Sequence DOGradientColor(UnityEngine.SpriteRenderer target, UnityEngine.Gradient gradient, System.Single duration)
    // Offset: 0x17DCA14
    static ::DG::Tweening::Sequence* DOGradientColor(::UnityEngine::SpriteRenderer* target, ::UnityEngine::Gradient* gradient, float duration);
    // static public DG.Tweening.Tweener DOBlendableColor(UnityEngine.SpriteRenderer target, UnityEngine.Color endValue, System.Single duration)
    // Offset: 0x17DCC00
    static ::DG::Tweening::Tweener* DOBlendableColor(::UnityEngine::SpriteRenderer* target, ::UnityEngine::Color endValue, float duration);
  }; // DG.Tweening.DOTweenModuleSprite
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleSprite::DOColor
// Il2CppName: DOColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::UnityEngine::SpriteRenderer*, ::UnityEngine::Color, float)>(&DG::Tweening::DOTweenModuleSprite::DOColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "SpriteRenderer")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleSprite*), "DOColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleSprite::DOFade
// Il2CppName: DOFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::UnityEngine::SpriteRenderer*, float, float)>(&DG::Tweening::DOTweenModuleSprite::DOFade)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "SpriteRenderer")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleSprite*), "DOFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleSprite::DOGradientColor
// Il2CppName: DOGradientColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Sequence* (*)(::UnityEngine::SpriteRenderer*, ::UnityEngine::Gradient*, float)>(&DG::Tweening::DOTweenModuleSprite::DOGradientColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "SpriteRenderer")->byval_arg;
    static auto* gradient = &::il2cpp_utils::GetClassFromName("UnityEngine", "Gradient")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleSprite*), "DOGradientColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, gradient, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleSprite::DOBlendableColor
// Il2CppName: DOBlendableColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::UnityEngine::SpriteRenderer*, ::UnityEngine::Color, float)>(&DG::Tweening::DOTweenModuleSprite::DOBlendableColor)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "SpriteRenderer")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleSprite*), "DOBlendableColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
