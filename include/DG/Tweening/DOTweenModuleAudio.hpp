// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DG.Tweening.Plugins.Options.FloatOptions
#include "DG/Tweening/Plugins/Options/FloatOptions.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DG::Tweening
namespace DG::Tweening {
}
// Forward declaring namespace: DG::Tweening::Core
namespace DG::Tweening::Core {
  // Forward declaring type: TweenerCore`3<T1, T2, TPlugOptions>
  template<typename T1, typename T2, typename TPlugOptions>
  class TweenerCore_3;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AudioSource
  class AudioSource;
}
// Forward declaring namespace: UnityEngine::Audio
namespace UnityEngine::Audio {
  // Forward declaring type: AudioMixer
  class AudioMixer;
}
// Completed forward declares
// Type namespace: DG.Tweening
namespace DG::Tweening {
  // Forward declaring type: DOTweenModuleAudio
  class DOTweenModuleAudio;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DG::Tweening::DOTweenModuleAudio);
DEFINE_IL2CPP_ARG_TYPE(::DG::Tweening::DOTweenModuleAudio*, "DG.Tweening", "DOTweenModuleAudio");
// Type namespace: DG.Tweening
namespace DG::Tweening {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: DG.Tweening.DOTweenModuleAudio
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class DOTweenModuleAudio : public ::Il2CppObject {
    public:
    // Nested type: ::DG::Tweening::DOTweenModuleAudio::$$c__DisplayClass0_0
    class $$c__DisplayClass0_0;
    // Nested type: ::DG::Tweening::DOTweenModuleAudio::$$c__DisplayClass1_0
    class $$c__DisplayClass1_0;
    // Nested type: ::DG::Tweening::DOTweenModuleAudio::$$c__DisplayClass2_0
    class $$c__DisplayClass2_0;
    // static public DG.Tweening.Core.TweenerCore`3<System.Single,System.Single,DG.Tweening.Plugins.Options.FloatOptions> DOFade(UnityEngine.AudioSource target, System.Single endValue, System.Single duration)
    // Offset: 0x17D985C
    static ::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* DOFade(::UnityEngine::AudioSource* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<System.Single,System.Single,DG.Tweening.Plugins.Options.FloatOptions> DOPitch(UnityEngine.AudioSource target, System.Single endValue, System.Single duration)
    // Offset: 0x17D9A24
    static ::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* DOPitch(::UnityEngine::AudioSource* target, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<System.Single,System.Single,DG.Tweening.Plugins.Options.FloatOptions> DOSetFloat(UnityEngine.Audio.AudioMixer target, System.String floatName, System.Single endValue, System.Single duration)
    // Offset: 0x17D9BC4
    static ::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* DOSetFloat(::UnityEngine::Audio::AudioMixer* target, ::StringW floatName, float endValue, float duration);
    // static public System.Int32 DOComplete(UnityEngine.Audio.AudioMixer target, System.Boolean withCallbacks)
    // Offset: 0x17D9D68
    static int DOComplete(::UnityEngine::Audio::AudioMixer* target, bool withCallbacks);
    // static public System.Int32 DOKill(UnityEngine.Audio.AudioMixer target, System.Boolean complete)
    // Offset: 0x17D9DDC
    static int DOKill(::UnityEngine::Audio::AudioMixer* target, bool complete);
    // static public System.Int32 DOFlip(UnityEngine.Audio.AudioMixer target)
    // Offset: 0x17D9E50
    static int DOFlip(::UnityEngine::Audio::AudioMixer* target);
    // static public System.Int32 DOGoto(UnityEngine.Audio.AudioMixer target, System.Single to, System.Boolean andPlay)
    // Offset: 0x17D9EB4
    static int DOGoto(::UnityEngine::Audio::AudioMixer* target, float to, bool andPlay);
    // static public System.Int32 DOPause(UnityEngine.Audio.AudioMixer target)
    // Offset: 0x17D9F38
    static int DOPause(::UnityEngine::Audio::AudioMixer* target);
    // static public System.Int32 DOPlay(UnityEngine.Audio.AudioMixer target)
    // Offset: 0x17D9F9C
    static int DOPlay(::UnityEngine::Audio::AudioMixer* target);
    // static public System.Int32 DOPlayBackwards(UnityEngine.Audio.AudioMixer target)
    // Offset: 0x17DA000
    static int DOPlayBackwards(::UnityEngine::Audio::AudioMixer* target);
    // static public System.Int32 DOPlayForward(UnityEngine.Audio.AudioMixer target)
    // Offset: 0x17DA064
    static int DOPlayForward(::UnityEngine::Audio::AudioMixer* target);
    // static public System.Int32 DORestart(UnityEngine.Audio.AudioMixer target)
    // Offset: 0x17DA0C8
    static int DORestart(::UnityEngine::Audio::AudioMixer* target);
    // static public System.Int32 DORewind(UnityEngine.Audio.AudioMixer target)
    // Offset: 0x17DA134
    static int DORewind(::UnityEngine::Audio::AudioMixer* target);
    // static public System.Int32 DOSmoothRewind(UnityEngine.Audio.AudioMixer target)
    // Offset: 0x17DA19C
    static int DOSmoothRewind(::UnityEngine::Audio::AudioMixer* target);
    // static public System.Int32 DOTogglePause(UnityEngine.Audio.AudioMixer target)
    // Offset: 0x17DA200
    static int DOTogglePause(::UnityEngine::Audio::AudioMixer* target);
  }; // DG.Tweening.DOTweenModuleAudio
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleAudio::DOFade
// Il2CppName: DOFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* (*)(::UnityEngine::AudioSource*, float, float)>(&DG::Tweening::DOTweenModuleAudio::DOFade)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "AudioSource")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleAudio*), "DOFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleAudio::DOPitch
// Il2CppName: DOPitch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* (*)(::UnityEngine::AudioSource*, float, float)>(&DG::Tweening::DOTweenModuleAudio::DOPitch)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "AudioSource")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleAudio*), "DOPitch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleAudio::DOSetFloat
// Il2CppName: DOSetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* (*)(::UnityEngine::Audio::AudioMixer*, ::StringW, float, float)>(&DG::Tweening::DOTweenModuleAudio::DOSetFloat)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.Audio", "AudioMixer")->byval_arg;
    static auto* floatName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleAudio*), "DOSetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, floatName, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleAudio::DOComplete
// Il2CppName: DOComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Audio::AudioMixer*, bool)>(&DG::Tweening::DOTweenModuleAudio::DOComplete)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.Audio", "AudioMixer")->byval_arg;
    static auto* withCallbacks = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleAudio*), "DOComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, withCallbacks});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleAudio::DOKill
// Il2CppName: DOKill
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Audio::AudioMixer*, bool)>(&DG::Tweening::DOTweenModuleAudio::DOKill)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.Audio", "AudioMixer")->byval_arg;
    static auto* complete = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleAudio*), "DOKill", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, complete});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleAudio::DOFlip
// Il2CppName: DOFlip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Audio::AudioMixer*)>(&DG::Tweening::DOTweenModuleAudio::DOFlip)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.Audio", "AudioMixer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleAudio*), "DOFlip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleAudio::DOGoto
// Il2CppName: DOGoto
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Audio::AudioMixer*, float, bool)>(&DG::Tweening::DOTweenModuleAudio::DOGoto)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.Audio", "AudioMixer")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* andPlay = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleAudio*), "DOGoto", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, to, andPlay});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleAudio::DOPause
// Il2CppName: DOPause
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Audio::AudioMixer*)>(&DG::Tweening::DOTweenModuleAudio::DOPause)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.Audio", "AudioMixer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleAudio*), "DOPause", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleAudio::DOPlay
// Il2CppName: DOPlay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Audio::AudioMixer*)>(&DG::Tweening::DOTweenModuleAudio::DOPlay)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.Audio", "AudioMixer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleAudio*), "DOPlay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleAudio::DOPlayBackwards
// Il2CppName: DOPlayBackwards
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Audio::AudioMixer*)>(&DG::Tweening::DOTweenModuleAudio::DOPlayBackwards)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.Audio", "AudioMixer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleAudio*), "DOPlayBackwards", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleAudio::DOPlayForward
// Il2CppName: DOPlayForward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Audio::AudioMixer*)>(&DG::Tweening::DOTweenModuleAudio::DOPlayForward)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.Audio", "AudioMixer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleAudio*), "DOPlayForward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleAudio::DORestart
// Il2CppName: DORestart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Audio::AudioMixer*)>(&DG::Tweening::DOTweenModuleAudio::DORestart)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.Audio", "AudioMixer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleAudio*), "DORestart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleAudio::DORewind
// Il2CppName: DORewind
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Audio::AudioMixer*)>(&DG::Tweening::DOTweenModuleAudio::DORewind)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.Audio", "AudioMixer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleAudio*), "DORewind", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleAudio::DOSmoothRewind
// Il2CppName: DOSmoothRewind
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Audio::AudioMixer*)>(&DG::Tweening::DOTweenModuleAudio::DOSmoothRewind)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.Audio", "AudioMixer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleAudio*), "DOSmoothRewind", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTweenModuleAudio::DOTogglePause
// Il2CppName: DOTogglePause
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Audio::AudioMixer*)>(&DG::Tweening::DOTweenModuleAudio::DOTogglePause)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.Audio", "AudioMixer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTweenModuleAudio*), "DOTogglePause", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
