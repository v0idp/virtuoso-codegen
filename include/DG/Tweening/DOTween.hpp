// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DG.Tweening.Core.Enums.NestedTweenFailureBehaviour
#include "DG/Tweening/Core/Enums/NestedTweenFailureBehaviour.hpp"
// Including type: DG.Tweening.Core.Enums.RewindCallbackMode
#include "DG/Tweening/Core/Enums/RewindCallbackMode.hpp"
// Including type: DG.Tweening.LogBehaviour
#include "DG/Tweening/LogBehaviour.hpp"
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
// Including type: DG.Tweening.UpdateType
#include "DG/Tweening/UpdateType.hpp"
// Including type: DG.Tweening.AutoPlay
#include "DG/Tweening/AutoPlay.hpp"
// Including type: DG.Tweening.LoopType
#include "DG/Tweening/LoopType.hpp"
// Including type: DG.Tweening.Ease
#include "DG/Tweening/Ease.hpp"
// Including type: DG.Tweening.Core.SafeModeReport
#include "DG/Tweening/Core/SafeModeReport.hpp"
// Including type: DG.Tweening.Plugins.Options.FloatOptions
#include "DG/Tweening/Plugins/Options/FloatOptions.hpp"
// Including type: DG.Tweening.Plugins.Options.NoOptions
#include "DG/Tweening/Plugins/Options/NoOptions.hpp"
// Including type: DG.Tweening.Plugins.Options.UintOptions
#include "DG/Tweening/Plugins/Options/UintOptions.hpp"
// Including type: DG.Tweening.Plugins.Options.StringOptions
#include "DG/Tweening/Plugins/Options/StringOptions.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: DG.Tweening.Plugins.Options.VectorOptions
#include "DG/Tweening/Plugins/Options/VectorOptions.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: DG.Tweening.Plugins.Options.QuaternionOptions
#include "DG/Tweening/Plugins/Options/QuaternionOptions.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: DG.Tweening.Plugins.Options.ColorOptions
#include "DG/Tweening/Plugins/Options/ColorOptions.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: DG.Tweening.Plugins.Options.RectOptions
#include "DG/Tweening/Plugins/Options/RectOptions.hpp"
// Including type: DG.Tweening.Plugins.Options.Vector3ArrayOptions
#include "DG/Tweening/Plugins/Options/Vector3ArrayOptions.hpp"
// Including type: DG.Tweening.Color2
#include "DG/Tweening/Color2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DG::Tweening
namespace DG::Tweening {
  // Forward declaring type: TweenCallback
  class TweenCallback;
  // Forward declaring type: IDOTweenInit
  class IDOTweenInit;
  // Forward declaring type: Tweener
  class Tweener;
  // Skipping declaration: AxisConstraint because it is already included!
  // Forward declaring type: Sequence
  class Sequence;
  // Forward declaring type: Tween
  class Tween;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`3<T1, T2, TResult>
  template<typename T1, typename T2, typename TResult>
  class Func_3;
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
  // Skipping declaration: ValueType because it is already included!
}
// Forward declaring namespace: DG::Tweening::Core
namespace DG::Tweening::Core {
  // Forward declaring type: DOTweenComponent
  class DOTweenComponent;
  // Forward declaring type: DOTweenSettings
  class DOTweenSettings;
  // Forward declaring type: TweenerCore`3<T1, T2, TPlugOptions>
  template<typename T1, typename T2, typename TPlugOptions>
  class TweenerCore_3;
  // Forward declaring type: DOGetter`1<T>
  template<typename T>
  class DOGetter_1;
  // Forward declaring type: DOSetter`1<T>
  template<typename T>
  class DOSetter_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RectOffset
  class RectOffset;
}
// Forward declaring namespace: DG::Tweening::Plugins::Options
namespace DG::Tweening::Plugins::Options {
  // Skipping declaration: IPlugOptions because it is already included!
}
// Forward declaring namespace: DG::Tweening::Plugins::Core
namespace DG::Tweening::Plugins::Core {
  // Forward declaring type: ABSTweenPlugin`3<T1, T2, TPlugOptions>
  template<typename T1, typename T2, typename TPlugOptions>
  class ABSTweenPlugin_3;
}
// Completed forward declares
// Type namespace: DG.Tweening
namespace DG::Tweening {
  // Forward declaring type: DOTween
  class DOTween;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DG::Tweening::DOTween);
DEFINE_IL2CPP_ARG_TYPE(::DG::Tweening::DOTween*, "DG.Tweening", "DOTween");
// Type namespace: DG.Tweening
namespace DG::Tweening {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: DG.Tweening.DOTween
  // [TokenAttribute] Offset: FFFFFFFF
  class DOTween : public ::Il2CppObject {
    public:
    // Nested type: ::DG::Tweening::DOTween::$$c__DisplayClass60_0
    class $$c__DisplayClass60_0;
    // Get static field: static public readonly System.String Version
    static ::StringW _get_Version();
    // Set static field: static public readonly System.String Version
    static void _set_Version(::StringW value);
    // Get static field: static public System.Boolean useSafeMode
    static bool _get_useSafeMode();
    // Set static field: static public System.Boolean useSafeMode
    static void _set_useSafeMode(bool value);
    // Get static field: static public DG.Tweening.Core.Enums.NestedTweenFailureBehaviour nestedTweenFailureBehaviour
    static ::DG::Tweening::Core::Enums::NestedTweenFailureBehaviour _get_nestedTweenFailureBehaviour();
    // Set static field: static public DG.Tweening.Core.Enums.NestedTweenFailureBehaviour nestedTweenFailureBehaviour
    static void _set_nestedTweenFailureBehaviour(::DG::Tweening::Core::Enums::NestedTweenFailureBehaviour value);
    // Get static field: static public System.Boolean showUnityEditorReport
    static bool _get_showUnityEditorReport();
    // Set static field: static public System.Boolean showUnityEditorReport
    static void _set_showUnityEditorReport(bool value);
    // Get static field: static public System.Single timeScale
    static float _get_timeScale();
    // Set static field: static public System.Single timeScale
    static void _set_timeScale(float value);
    // Get static field: static public System.Boolean useSmoothDeltaTime
    static bool _get_useSmoothDeltaTime();
    // Set static field: static public System.Boolean useSmoothDeltaTime
    static void _set_useSmoothDeltaTime(bool value);
    // Get static field: static public System.Single maxSmoothUnscaledTime
    static float _get_maxSmoothUnscaledTime();
    // Set static field: static public System.Single maxSmoothUnscaledTime
    static void _set_maxSmoothUnscaledTime(float value);
    // Get static field: static DG.Tweening.Core.Enums.RewindCallbackMode rewindCallbackMode
    static ::DG::Tweening::Core::Enums::RewindCallbackMode _get_rewindCallbackMode();
    // Set static field: static DG.Tweening.Core.Enums.RewindCallbackMode rewindCallbackMode
    static void _set_rewindCallbackMode(::DG::Tweening::Core::Enums::RewindCallbackMode value);
    // Get static field: static private DG.Tweening.LogBehaviour _logBehaviour
    static ::DG::Tweening::LogBehaviour _get__logBehaviour();
    // Set static field: static private DG.Tweening.LogBehaviour _logBehaviour
    static void _set__logBehaviour(::DG::Tweening::LogBehaviour value);
    // Get static field: static public System.Func`3<UnityEngine.LogType,System.Object,System.Boolean> onWillLog
    static ::System::Func_3<::UnityEngine::LogType, ::Il2CppObject*, bool>* _get_onWillLog();
    // Set static field: static public System.Func`3<UnityEngine.LogType,System.Object,System.Boolean> onWillLog
    static void _set_onWillLog(::System::Func_3<::UnityEngine::LogType, ::Il2CppObject*, bool>* value);
    // Get static field: static public System.Boolean drawGizmos
    static bool _get_drawGizmos();
    // Set static field: static public System.Boolean drawGizmos
    static void _set_drawGizmos(bool value);
    // Get static field: static public System.Boolean debugMode
    static bool _get_debugMode();
    // Set static field: static public System.Boolean debugMode
    static void _set_debugMode(bool value);
    // Get static field: static private System.Boolean _fooDebugStoreTargetId
    static bool _get__fooDebugStoreTargetId();
    // Set static field: static private System.Boolean _fooDebugStoreTargetId
    static void _set__fooDebugStoreTargetId(bool value);
    // Get static field: static public DG.Tweening.UpdateType defaultUpdateType
    static ::DG::Tweening::UpdateType _get_defaultUpdateType();
    // Set static field: static public DG.Tweening.UpdateType defaultUpdateType
    static void _set_defaultUpdateType(::DG::Tweening::UpdateType value);
    // Get static field: static public System.Boolean defaultTimeScaleIndependent
    static bool _get_defaultTimeScaleIndependent();
    // Set static field: static public System.Boolean defaultTimeScaleIndependent
    static void _set_defaultTimeScaleIndependent(bool value);
    // Get static field: static public DG.Tweening.AutoPlay defaultAutoPlay
    static ::DG::Tweening::AutoPlay _get_defaultAutoPlay();
    // Set static field: static public DG.Tweening.AutoPlay defaultAutoPlay
    static void _set_defaultAutoPlay(::DG::Tweening::AutoPlay value);
    // Get static field: static public System.Boolean defaultAutoKill
    static bool _get_defaultAutoKill();
    // Set static field: static public System.Boolean defaultAutoKill
    static void _set_defaultAutoKill(bool value);
    // Get static field: static public DG.Tweening.LoopType defaultLoopType
    static ::DG::Tweening::LoopType _get_defaultLoopType();
    // Set static field: static public DG.Tweening.LoopType defaultLoopType
    static void _set_defaultLoopType(::DG::Tweening::LoopType value);
    // Get static field: static public System.Boolean defaultRecyclable
    static bool _get_defaultRecyclable();
    // Set static field: static public System.Boolean defaultRecyclable
    static void _set_defaultRecyclable(bool value);
    // Get static field: static public DG.Tweening.Ease defaultEaseType
    static ::DG::Tweening::Ease _get_defaultEaseType();
    // Set static field: static public DG.Tweening.Ease defaultEaseType
    static void _set_defaultEaseType(::DG::Tweening::Ease value);
    // Get static field: static public System.Single defaultEaseOvershootOrAmplitude
    static float _get_defaultEaseOvershootOrAmplitude();
    // Set static field: static public System.Single defaultEaseOvershootOrAmplitude
    static void _set_defaultEaseOvershootOrAmplitude(float value);
    // Get static field: static public System.Single defaultEasePeriod
    static float _get_defaultEasePeriod();
    // Set static field: static public System.Single defaultEasePeriod
    static void _set_defaultEasePeriod(float value);
    // Get static field: static public DG.Tweening.Core.DOTweenComponent instance
    static ::DG::Tweening::Core::DOTweenComponent* _get_instance();
    // Set static field: static public DG.Tweening.Core.DOTweenComponent instance
    static void _set_instance(::DG::Tweening::Core::DOTweenComponent* value);
    // Get static field: static System.Int32 maxActiveTweenersReached
    static int _get_maxActiveTweenersReached();
    // Set static field: static System.Int32 maxActiveTweenersReached
    static void _set_maxActiveTweenersReached(int value);
    // Get static field: static System.Int32 maxActiveSequencesReached
    static int _get_maxActiveSequencesReached();
    // Set static field: static System.Int32 maxActiveSequencesReached
    static void _set_maxActiveSequencesReached(int value);
    // Get static field: static DG.Tweening.Core.SafeModeReport safeModeReport
    static ::DG::Tweening::Core::SafeModeReport _get_safeModeReport();
    // Set static field: static DG.Tweening.Core.SafeModeReport safeModeReport
    static void _set_safeModeReport(::DG::Tweening::Core::SafeModeReport value);
    // Get static field: static readonly System.Collections.Generic.List`1<DG.Tweening.TweenCallback> GizmosDelegates
    static ::System::Collections::Generic::List_1<::DG::Tweening::TweenCallback*>* _get_GizmosDelegates();
    // Set static field: static readonly System.Collections.Generic.List`1<DG.Tweening.TweenCallback> GizmosDelegates
    static void _set_GizmosDelegates(::System::Collections::Generic::List_1<::DG::Tweening::TweenCallback*>* value);
    // Get static field: static System.Boolean initialized
    static bool _get_initialized();
    // Set static field: static System.Boolean initialized
    static void _set_initialized(bool value);
    // Get static field: static System.Boolean isQuitting
    static bool _get_isQuitting();
    // Set static field: static System.Boolean isQuitting
    static void _set_isQuitting(bool value);
    // static public DG.Tweening.LogBehaviour get_logBehaviour()
    // Offset: 0x15D67F0
    static ::DG::Tweening::LogBehaviour get_logBehaviour();
    // static public System.Void set_logBehaviour(DG.Tweening.LogBehaviour value)
    // Offset: 0x15D6854
    static void set_logBehaviour(::DG::Tweening::LogBehaviour value);
    // static public System.Boolean get_debugStoreTargetId()
    // Offset: 0x15D693C
    static bool get_debugStoreTargetId();
    // static public System.Void set_debugStoreTargetId(System.Boolean value)
    // Offset: 0x15D69F8
    static void set_debugStoreTargetId(bool value);
    // public System.Void .ctor()
    // Offset: 0x15DB054
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DOTween* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DG::Tweening::DOTween::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DOTween*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x15DB05C
    static void _cctor();
    // static public DG.Tweening.IDOTweenInit Init(System.Nullable`1<System.Boolean> recycleAllByDefault, System.Nullable`1<System.Boolean> useSafeMode, System.Nullable`1<DG.Tweening.LogBehaviour> logBehaviour)
    // Offset: 0x15D6A64
    static ::DG::Tweening::IDOTweenInit* Init(::System::Nullable_1<bool> recycleAllByDefault, ::System::Nullable_1<bool> useSafeMode, ::System::Nullable_1<::DG::Tweening::LogBehaviour> logBehaviour);
    // static private System.Void AutoInit()
    // Offset: 0x15D734C
    static void AutoInit();
    // static private DG.Tweening.IDOTweenInit Init(DG.Tweening.Core.DOTweenSettings settings, System.Nullable`1<System.Boolean> recycleAllByDefault, System.Nullable`1<System.Boolean> useSafeMode, System.Nullable`1<DG.Tweening.LogBehaviour> logBehaviour)
    // Offset: 0x15D6BEC
    static ::DG::Tweening::IDOTweenInit* Init(::DG::Tweening::Core::DOTweenSettings* settings, ::System::Nullable_1<bool> recycleAllByDefault, ::System::Nullable_1<bool> useSafeMode, ::System::Nullable_1<::DG::Tweening::LogBehaviour> logBehaviour);
    // static public System.Void SetTweensCapacity(System.Int32 tweenersCapacity, System.Int32 sequencesCapacity)
    // Offset: 0x15D76DC
    static void SetTweensCapacity(int tweenersCapacity, int sequencesCapacity);
    // static public System.Void Clear(System.Boolean destroy)
    // Offset: 0x15D7750
    static void Clear(bool destroy);
    // static public System.Void ClearCachedTweens()
    // Offset: 0x15D7AD0
    static void ClearCachedTweens();
    // static public System.Int32 Validate()
    // Offset: 0x15D7B2C
    static int Validate();
    // static public System.Void ManualUpdate(System.Single deltaTime, System.Single unscaledDeltaTime)
    // Offset: 0x15D7B88
    static void ManualUpdate(float deltaTime, float unscaledDeltaTime);
    // static public DG.Tweening.Core.TweenerCore`3<System.Single,System.Single,DG.Tweening.Plugins.Options.FloatOptions> To(DG.Tweening.Core.DOGetter`1<System.Single> getter, DG.Tweening.Core.DOSetter`1<System.Single> setter, System.Single endValue, System.Single duration)
    // Offset: 0x15D7D58
    static ::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* To(::DG::Tweening::Core::DOGetter_1<float>* getter, ::DG::Tweening::Core::DOSetter_1<float>* setter, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<System.Double,System.Double,DG.Tweening.Plugins.Options.NoOptions> To(DG.Tweening.Core.DOGetter`1<System.Double> getter, DG.Tweening.Core.DOSetter`1<System.Double> setter, System.Double endValue, System.Single duration)
    // Offset: 0x15D7DFC
    static ::DG::Tweening::Core::TweenerCore_3<double, double, ::DG::Tweening::Plugins::Options::NoOptions>* To(::DG::Tweening::Core::DOGetter_1<double>* getter, ::DG::Tweening::Core::DOSetter_1<double>* setter, double endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<System.Int32,System.Int32,DG.Tweening.Plugins.Options.NoOptions> To(DG.Tweening.Core.DOGetter`1<System.Int32> getter, DG.Tweening.Core.DOSetter`1<System.Int32> setter, System.Int32 endValue, System.Single duration)
    // Offset: 0x15D7EA0
    static ::DG::Tweening::Core::TweenerCore_3<int, int, ::DG::Tweening::Plugins::Options::NoOptions>* To(::DG::Tweening::Core::DOGetter_1<int>* getter, ::DG::Tweening::Core::DOSetter_1<int>* setter, int endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<System.UInt32,System.UInt32,DG.Tweening.Plugins.Options.UintOptions> To(DG.Tweening.Core.DOGetter`1<System.UInt32> getter, DG.Tweening.Core.DOSetter`1<System.UInt32> setter, System.UInt32 endValue, System.Single duration)
    // Offset: 0x15D7F44
    static ::DG::Tweening::Core::TweenerCore_3<uint, uint, ::DG::Tweening::Plugins::Options::UintOptions>* To(::DG::Tweening::Core::DOGetter_1<uint>* getter, ::DG::Tweening::Core::DOSetter_1<uint>* setter, uint endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<System.Int64,System.Int64,DG.Tweening.Plugins.Options.NoOptions> To(DG.Tweening.Core.DOGetter`1<System.Int64> getter, DG.Tweening.Core.DOSetter`1<System.Int64> setter, System.Int64 endValue, System.Single duration)
    // Offset: 0x15D7FE8
    static ::DG::Tweening::Core::TweenerCore_3<int64_t, int64_t, ::DG::Tweening::Plugins::Options::NoOptions>* To(::DG::Tweening::Core::DOGetter_1<int64_t>* getter, ::DG::Tweening::Core::DOSetter_1<int64_t>* setter, int64_t endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<System.UInt64,System.UInt64,DG.Tweening.Plugins.Options.NoOptions> To(DG.Tweening.Core.DOGetter`1<System.UInt64> getter, DG.Tweening.Core.DOSetter`1<System.UInt64> setter, System.UInt64 endValue, System.Single duration)
    // Offset: 0x15D808C
    static ::DG::Tweening::Core::TweenerCore_3<uint64_t, uint64_t, ::DG::Tweening::Plugins::Options::NoOptions>* To(::DG::Tweening::Core::DOGetter_1<uint64_t>* getter, ::DG::Tweening::Core::DOSetter_1<uint64_t>* setter, uint64_t endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<System.String,System.String,DG.Tweening.Plugins.Options.StringOptions> To(DG.Tweening.Core.DOGetter`1<System.String> getter, DG.Tweening.Core.DOSetter`1<System.String> setter, System.String endValue, System.Single duration)
    // Offset: 0x15D8130
    static ::DG::Tweening::Core::TweenerCore_3<::StringW, ::StringW, ::DG::Tweening::Plugins::Options::StringOptions>* To(::DG::Tweening::Core::DOGetter_1<::StringW>* getter, ::DG::Tweening::Core::DOSetter_1<::StringW>* setter, ::StringW endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector2,UnityEngine.Vector2,DG.Tweening.Plugins.Options.VectorOptions> To(DG.Tweening.Core.DOGetter`1<UnityEngine.Vector2> getter, DG.Tweening.Core.DOSetter`1<UnityEngine.Vector2> setter, UnityEngine.Vector2 endValue, System.Single duration)
    // Offset: 0x15D81D4
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* To(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Vector2>* getter, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Vector2>* setter, ::UnityEngine::Vector2 endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3,DG.Tweening.Plugins.Options.VectorOptions> To(DG.Tweening.Core.DOGetter`1<UnityEngine.Vector3> getter, DG.Tweening.Core.DOSetter`1<UnityEngine.Vector3> setter, UnityEngine.Vector3 endValue, System.Single duration)
    // Offset: 0x15D8288
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* To(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Vector3>* getter, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Vector3>* setter, ::UnityEngine::Vector3 endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector4,UnityEngine.Vector4,DG.Tweening.Plugins.Options.VectorOptions> To(DG.Tweening.Core.DOGetter`1<UnityEngine.Vector4> getter, DG.Tweening.Core.DOSetter`1<UnityEngine.Vector4> setter, UnityEngine.Vector4 endValue, System.Single duration)
    // Offset: 0x15D8344
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector4, ::UnityEngine::Vector4, ::DG::Tweening::Plugins::Options::VectorOptions>* To(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Vector4>* getter, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Vector4>* setter, ::UnityEngine::Vector4 endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Quaternion,UnityEngine.Vector3,DG.Tweening.Plugins.Options.QuaternionOptions> To(DG.Tweening.Core.DOGetter`1<UnityEngine.Quaternion> getter, DG.Tweening.Core.DOSetter`1<UnityEngine.Quaternion> setter, UnityEngine.Vector3 endValue, System.Single duration)
    // Offset: 0x15D8410
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Quaternion, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::QuaternionOptions>* To(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Quaternion>* getter, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Quaternion>* setter, ::UnityEngine::Vector3 endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> To(DG.Tweening.Core.DOGetter`1<UnityEngine.Color> getter, DG.Tweening.Core.DOSetter`1<UnityEngine.Color> setter, UnityEngine.Color endValue, System.Single duration)
    // Offset: 0x15D84CC
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* To(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Color>* getter, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Color>* setter, ::UnityEngine::Color endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Rect,UnityEngine.Rect,DG.Tweening.Plugins.Options.RectOptions> To(DG.Tweening.Core.DOGetter`1<UnityEngine.Rect> getter, DG.Tweening.Core.DOSetter`1<UnityEngine.Rect> setter, UnityEngine.Rect endValue, System.Single duration)
    // Offset: 0x15D8598
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Rect, ::UnityEngine::Rect, ::DG::Tweening::Plugins::Options::RectOptions>* To(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Rect>* getter, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Rect>* setter, ::UnityEngine::Rect endValue, float duration);
    // static public DG.Tweening.Tweener To(DG.Tweening.Core.DOGetter`1<UnityEngine.RectOffset> getter, DG.Tweening.Core.DOSetter`1<UnityEngine.RectOffset> setter, UnityEngine.RectOffset endValue, System.Single duration)
    // Offset: 0x15D8664
    static ::DG::Tweening::Tweener* To(::DG::Tweening::Core::DOGetter_1<::UnityEngine::RectOffset*>* getter, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::RectOffset*>* setter, ::UnityEngine::RectOffset* endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<T1,T2,TPlugOptions> To(DG.Tweening.Plugins.Core.ABSTweenPlugin`3<T1,T2,TPlugOptions> plugin, DG.Tweening.Core.DOGetter`1<T1> getter, DG.Tweening.Core.DOSetter`1<T1> setter, T2 endValue, System.Single duration)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2, class TPlugOptions>
    static ::DG::Tweening::Core::TweenerCore_3<T1, T2, TPlugOptions>* To(::DG::Tweening::Plugins::Core::ABSTweenPlugin_3<T1, T2, TPlugOptions>* plugin, ::DG::Tweening::Core::DOGetter_1<T1>* getter, ::DG::Tweening::Core::DOSetter_1<T1>* setter, T2 endValue, float duration) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<TPlugOptions>, ::DG::Tweening::Plugins::Options::IPlugOptions> && std::is_convertible_v<TPlugOptions, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::DG::Tweening::DOTween::To");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("DG.Tweening", "DOTween", "To", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TPlugOptions>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plugin), ::il2cpp_utils::ExtractType(getter), ::il2cpp_utils::ExtractType(setter), ::il2cpp_utils::ExtractType(endValue), ::il2cpp_utils::ExtractType(duration)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TPlugOptions>::get()})));
      return ::il2cpp_utils::RunMethodRethrow<::DG::Tweening::Core::TweenerCore_3<T1, T2, TPlugOptions>*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, plugin, getter, setter, endValue, duration);
    }
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3,DG.Tweening.Plugins.Options.VectorOptions> ToAxis(DG.Tweening.Core.DOGetter`1<UnityEngine.Vector3> getter, DG.Tweening.Core.DOSetter`1<UnityEngine.Vector3> setter, System.Single endValue, System.Single duration, DG.Tweening.AxisConstraint axisConstraint)
    // Offset: 0x15D8708
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* ToAxis(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Vector3>* getter, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Vector3>* setter, float endValue, float duration, ::DG::Tweening::AxisConstraint axisConstraint);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Color,UnityEngine.Color,DG.Tweening.Plugins.Options.ColorOptions> ToAlpha(DG.Tweening.Core.DOGetter`1<UnityEngine.Color> getter, DG.Tweening.Core.DOSetter`1<UnityEngine.Color> setter, System.Single endValue, System.Single duration)
    // Offset: 0x15D87C8
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* ToAlpha(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Color>* getter, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Color>* setter, float endValue, float duration);
    // static public DG.Tweening.Tweener To(DG.Tweening.Core.DOSetter`1<System.Single> setter, System.Single startValue, System.Single endValue, System.Single duration)
    // Offset: 0x15D88B0
    static ::DG::Tweening::Tweener* To(::DG::Tweening::Core::DOSetter_1<float>* setter, float startValue, float endValue, float duration);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3[],DG.Tweening.Plugins.Options.Vector3ArrayOptions> Punch(DG.Tweening.Core.DOGetter`1<UnityEngine.Vector3> getter, DG.Tweening.Core.DOSetter`1<UnityEngine.Vector3> setter, UnityEngine.Vector3 direction, System.Single duration, System.Int32 vibrato, System.Single elasticity)
    // Offset: 0x15D8A44
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, ::DG::Tweening::Plugins::Options::Vector3ArrayOptions>* Punch(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Vector3>* getter, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Vector3>* setter, ::UnityEngine::Vector3 direction, float duration, int vibrato, float elasticity);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3[],DG.Tweening.Plugins.Options.Vector3ArrayOptions> Shake(DG.Tweening.Core.DOGetter`1<UnityEngine.Vector3> getter, DG.Tweening.Core.DOSetter`1<UnityEngine.Vector3> setter, System.Single duration, System.Single strength, System.Int32 vibrato, System.Single randomness, System.Boolean ignoreZAxis, System.Boolean fadeOut)
    // Offset: 0x15D8F94
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, ::DG::Tweening::Plugins::Options::Vector3ArrayOptions>* Shake(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Vector3>* getter, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Vector3>* setter, float duration, float strength, int vibrato, float randomness, bool ignoreZAxis, bool fadeOut);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3[],DG.Tweening.Plugins.Options.Vector3ArrayOptions> Shake(DG.Tweening.Core.DOGetter`1<UnityEngine.Vector3> getter, DG.Tweening.Core.DOSetter`1<UnityEngine.Vector3> setter, System.Single duration, UnityEngine.Vector3 strength, System.Int32 vibrato, System.Single randomness, System.Boolean fadeOut)
    // Offset: 0x15D9580
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, ::DG::Tweening::Plugins::Options::Vector3ArrayOptions>* Shake(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Vector3>* getter, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Vector3>* setter, float duration, ::UnityEngine::Vector3 strength, int vibrato, float randomness, bool fadeOut);
    // static private DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3[],DG.Tweening.Plugins.Options.Vector3ArrayOptions> Shake(DG.Tweening.Core.DOGetter`1<UnityEngine.Vector3> getter, DG.Tweening.Core.DOSetter`1<UnityEngine.Vector3> setter, System.Single duration, UnityEngine.Vector3 strength, System.Int32 vibrato, System.Single randomness, System.Boolean ignoreZAxis, System.Boolean vectorBased, System.Boolean fadeOut)
    // Offset: 0x15D9058
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, ::DG::Tweening::Plugins::Options::Vector3ArrayOptions>* Shake(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Vector3>* getter, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Vector3>* setter, float duration, ::UnityEngine::Vector3 strength, int vibrato, float randomness, bool ignoreZAxis, bool vectorBased, bool fadeOut);
    // static public DG.Tweening.Core.TweenerCore`3<UnityEngine.Vector3,UnityEngine.Vector3[],DG.Tweening.Plugins.Options.Vector3ArrayOptions> ToArray(DG.Tweening.Core.DOGetter`1<UnityEngine.Vector3> getter, DG.Tweening.Core.DOSetter`1<UnityEngine.Vector3> setter, UnityEngine.Vector3[] endValues, System.Single[] durations)
    // Offset: 0x15D8D64
    static ::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, ::DG::Tweening::Plugins::Options::Vector3ArrayOptions>* ToArray(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Vector3>* getter, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Vector3>* setter, ::ArrayW<::UnityEngine::Vector3> endValues, ::ArrayW<float> durations);
    // static DG.Tweening.Core.TweenerCore`3<DG.Tweening.Color2,DG.Tweening.Color2,DG.Tweening.Plugins.Options.ColorOptions> To(DG.Tweening.Core.DOGetter`1<DG.Tweening.Color2> getter, DG.Tweening.Core.DOSetter`1<DG.Tweening.Color2> setter, DG.Tweening.Color2 endValue, System.Single duration)
    // Offset: 0x15D979C
    static ::DG::Tweening::Core::TweenerCore_3<::DG::Tweening::Color2, ::DG::Tweening::Color2, ::DG::Tweening::Plugins::Options::ColorOptions>* To(::DG::Tweening::Core::DOGetter_1<::DG::Tweening::Color2>* getter, ::DG::Tweening::Core::DOSetter_1<::DG::Tweening::Color2>* setter, ::DG::Tweening::Color2 endValue, float duration);
    // static public DG.Tweening.Sequence Sequence()
    // Offset: 0x15D985C
    static ::DG::Tweening::Sequence* Sequence();
    // static public System.Int32 CompleteAll(System.Boolean withCallbacks)
    // Offset: 0x15D9A00
    static int CompleteAll(bool withCallbacks);
    // static public System.Int32 Complete(System.Object targetOrId, System.Boolean withCallbacks)
    // Offset: 0x15D9A94
    static int Complete(::Il2CppObject* targetOrId, bool withCallbacks);
    // static System.Int32 CompleteAndReturnKilledTot()
    // Offset: 0x15D9B50
    static int CompleteAndReturnKilledTot();
    // static System.Int32 CompleteAndReturnKilledTot(System.Object targetOrId)
    // Offset: 0x15D9BC8
    static int CompleteAndReturnKilledTot(::Il2CppObject* targetOrId);
    // static System.Int32 CompleteAndReturnKilledTotExceptFor(params System.Object[] excludeTargetsOrIds)
    // Offset: 0x15D9C58
    static int CompleteAndReturnKilledTotExceptFor(::ArrayW<::Il2CppObject*> excludeTargetsOrIds);
    // static public System.Int32 FlipAll()
    // Offset: 0x15D9CD4
    static int FlipAll();
    // static public System.Int32 Flip(System.Object targetOrId)
    // Offset: 0x15D9D4C
    static int Flip(::Il2CppObject* targetOrId);
    // static public System.Int32 GotoAll(System.Single to, System.Boolean andPlay)
    // Offset: 0x15D9DDC
    static int GotoAll(float to, bool andPlay);
    // static public System.Int32 Goto(System.Object targetOrId, System.Single to, System.Boolean andPlay)
    // Offset: 0x15D9E64
    static int Goto(::Il2CppObject* targetOrId, float to, bool andPlay);
    // static public System.Int32 KillAll(System.Boolean complete)
    // Offset: 0x15D9F14
    static int KillAll(bool complete);
    // static public System.Int32 KillAll(System.Boolean complete, params System.Object[] idsOrTargetsToExclude)
    // Offset: 0x15D9FBC
    static int KillAll(bool complete, ::ArrayW<::Il2CppObject*> idsOrTargetsToExclude);
    // static public System.Int32 Kill(System.Object targetOrId, System.Boolean complete)
    // Offset: 0x15DA0F8
    static int Kill(::Il2CppObject* targetOrId, bool complete);
    // static public System.Int32 PauseAll()
    // Offset: 0x15DA1D8
    static int PauseAll();
    // static public System.Int32 Pause(System.Object targetOrId)
    // Offset: 0x15DA250
    static int Pause(::Il2CppObject* targetOrId);
    // static public System.Int32 PlayAll()
    // Offset: 0x15DA2E0
    static int PlayAll();
    // static public System.Int32 Play(System.Object targetOrId)
    // Offset: 0x15DA358
    static int Play(::Il2CppObject* targetOrId);
    // static public System.Int32 Play(System.Object target, System.Object id)
    // Offset: 0x15DA3E8
    static int Play(::Il2CppObject* target, ::Il2CppObject* id);
    // static public System.Int32 PlayBackwardsAll()
    // Offset: 0x15DA48C
    static int PlayBackwardsAll();
    // static public System.Int32 PlayBackwards(System.Object targetOrId)
    // Offset: 0x15DA504
    static int PlayBackwards(::Il2CppObject* targetOrId);
    // static public System.Int32 PlayBackwards(System.Object target, System.Object id)
    // Offset: 0x15DA594
    static int PlayBackwards(::Il2CppObject* target, ::Il2CppObject* id);
    // static public System.Int32 PlayForwardAll()
    // Offset: 0x15DA638
    static int PlayForwardAll();
    // static public System.Int32 PlayForward(System.Object targetOrId)
    // Offset: 0x15DA6B0
    static int PlayForward(::Il2CppObject* targetOrId);
    // static public System.Int32 PlayForward(System.Object target, System.Object id)
    // Offset: 0x15DA740
    static int PlayForward(::Il2CppObject* target, ::Il2CppObject* id);
    // static public System.Int32 RestartAll(System.Boolean includeDelay)
    // Offset: 0x15DA7E4
    static int RestartAll(bool includeDelay);
    // static public System.Int32 Restart(System.Object targetOrId, System.Boolean includeDelay, System.Single changeDelayTo)
    // Offset: 0x15DA860
    static int Restart(::Il2CppObject* targetOrId, bool includeDelay, float changeDelayTo);
    // static public System.Int32 Restart(System.Object target, System.Object id, System.Boolean includeDelay, System.Single changeDelayTo)
    // Offset: 0x15DA910
    static int Restart(::Il2CppObject* target, ::Il2CppObject* id, bool includeDelay, float changeDelayTo);
    // static public System.Int32 RewindAll(System.Boolean includeDelay)
    // Offset: 0x15DA9C8
    static int RewindAll(bool includeDelay);
    // static public System.Int32 Rewind(System.Object targetOrId, System.Boolean includeDelay)
    // Offset: 0x15DAA44
    static int Rewind(::Il2CppObject* targetOrId, bool includeDelay);
    // static public System.Int32 SmoothRewindAll()
    // Offset: 0x15DAAE4
    static int SmoothRewindAll();
    // static public System.Int32 SmoothRewind(System.Object targetOrId)
    // Offset: 0x15DAB5C
    static int SmoothRewind(::Il2CppObject* targetOrId);
    // static public System.Int32 TogglePauseAll()
    // Offset: 0x15DABEC
    static int TogglePauseAll();
    // static public System.Int32 TogglePause(System.Object targetOrId)
    // Offset: 0x15DAC64
    static int TogglePause(::Il2CppObject* targetOrId);
    // static public System.Boolean IsTweening(System.Object targetOrId, System.Boolean alsoCheckIfIsPlaying)
    // Offset: 0x15DACF4
    static bool IsTweening(::Il2CppObject* targetOrId, bool alsoCheckIfIsPlaying);
    // static public System.Int32 TotalPlayingTweens()
    // Offset: 0x15DAD88
    static int TotalPlayingTweens();
    // static public System.Collections.Generic.List`1<DG.Tweening.Tween> PlayingTweens(System.Collections.Generic.List`1<DG.Tweening.Tween> fillableList)
    // Offset: 0x15DADE4
    static ::System::Collections::Generic::List_1<::DG::Tweening::Tween*>* PlayingTweens(::System::Collections::Generic::List_1<::DG::Tweening::Tween*>* fillableList);
    // static public System.Collections.Generic.List`1<DG.Tweening.Tween> PausedTweens(System.Collections.Generic.List`1<DG.Tweening.Tween> fillableList)
    // Offset: 0x15DAE70
    static ::System::Collections::Generic::List_1<::DG::Tweening::Tween*>* PausedTweens(::System::Collections::Generic::List_1<::DG::Tweening::Tween*>* fillableList);
    // static public System.Collections.Generic.List`1<DG.Tweening.Tween> TweensById(System.Object id, System.Boolean playingOnly, System.Collections.Generic.List`1<DG.Tweening.Tween> fillableList)
    // Offset: 0x15DAEFC
    static ::System::Collections::Generic::List_1<::DG::Tweening::Tween*>* TweensById(::Il2CppObject* id, bool playingOnly, ::System::Collections::Generic::List_1<::DG::Tweening::Tween*>* fillableList);
    // static public System.Collections.Generic.List`1<DG.Tweening.Tween> TweensByTarget(System.Object target, System.Boolean playingOnly, System.Collections.Generic.List`1<DG.Tweening.Tween> fillableList)
    // Offset: 0x15DAFB4
    static ::System::Collections::Generic::List_1<::DG::Tweening::Tween*>* TweensByTarget(::Il2CppObject* target, bool playingOnly, ::System::Collections::Generic::List_1<::DG::Tweening::Tween*>* fillableList);
    // static private System.Void InitCheck()
    // Offset: 0x15D7C9C
    static void InitCheck();
    // static private DG.Tweening.Core.TweenerCore`3<T1,T2,TPlugOptions> ApplyTo(DG.Tweening.Core.DOGetter`1<T1> getter, DG.Tweening.Core.DOSetter`1<T1> setter, T2 endValue, System.Single duration, DG.Tweening.Plugins.Core.ABSTweenPlugin`3<T1,T2,TPlugOptions> plugin)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2, class TPlugOptions>
    static ::DG::Tweening::Core::TweenerCore_3<T1, T2, TPlugOptions>* ApplyTo(::DG::Tweening::Core::DOGetter_1<T1>* getter, ::DG::Tweening::Core::DOSetter_1<T1>* setter, T2 endValue, float duration, ::DG::Tweening::Plugins::Core::ABSTweenPlugin_3<T1, T2, TPlugOptions>* plugin) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<TPlugOptions>, ::DG::Tweening::Plugins::Options::IPlugOptions> && std::is_convertible_v<TPlugOptions, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::DG::Tweening::DOTween::ApplyTo");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("DG.Tweening", "DOTween", "ApplyTo", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TPlugOptions>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getter), ::il2cpp_utils::ExtractType(setter), ::il2cpp_utils::ExtractType(endValue), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(plugin)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TPlugOptions>::get()})));
      return ::il2cpp_utils::RunMethodRethrow<::DG::Tweening::Core::TweenerCore_3<T1, T2, TPlugOptions>*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, getter, setter, endValue, duration, plugin);
    }
  }; // DG.Tweening.DOTween
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DG::Tweening::DOTween::get_logBehaviour
// Il2CppName: get_logBehaviour
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::LogBehaviour (*)()>(&DG::Tweening::DOTween::get_logBehaviour)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "get_logBehaviour", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::set_logBehaviour
// Il2CppName: set_logBehaviour
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::DG::Tweening::LogBehaviour)>(&DG::Tweening::DOTween::set_logBehaviour)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("DG.Tweening", "LogBehaviour")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "set_logBehaviour", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::get_debugStoreTargetId
// Il2CppName: get_debugStoreTargetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&DG::Tweening::DOTween::get_debugStoreTargetId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "get_debugStoreTargetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::set_debugStoreTargetId
// Il2CppName: set_debugStoreTargetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&DG::Tweening::DOTween::set_debugStoreTargetId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "set_debugStoreTargetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: DG::Tweening::DOTween::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DG::Tweening::DOTween::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::IDOTweenInit* (*)(::System::Nullable_1<bool>, ::System::Nullable_1<bool>, ::System::Nullable_1<::DG::Tweening::LogBehaviour>)>(&DG::Tweening::DOTween::Init)> {
  static const MethodInfo* get() {
    static auto* recycleAllByDefault = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    static auto* useSafeMode = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    static auto* logBehaviour = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("DG.Tweening", "LogBehaviour")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recycleAllByDefault, useSafeMode, logBehaviour});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::AutoInit
// Il2CppName: AutoInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DG::Tweening::DOTween::AutoInit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "AutoInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::IDOTweenInit* (*)(::DG::Tweening::Core::DOTweenSettings*, ::System::Nullable_1<bool>, ::System::Nullable_1<bool>, ::System::Nullable_1<::DG::Tweening::LogBehaviour>)>(&DG::Tweening::DOTween::Init)> {
  static const MethodInfo* get() {
    static auto* settings = &::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOTweenSettings")->byval_arg;
    static auto* recycleAllByDefault = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    static auto* useSafeMode = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    static auto* logBehaviour = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("DG.Tweening", "LogBehaviour")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{settings, recycleAllByDefault, useSafeMode, logBehaviour});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::SetTweensCapacity
// Il2CppName: SetTweensCapacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int)>(&DG::Tweening::DOTween::SetTweensCapacity)> {
  static const MethodInfo* get() {
    static auto* tweenersCapacity = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* sequencesCapacity = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "SetTweensCapacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tweenersCapacity, sequencesCapacity});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&DG::Tweening::DOTween::Clear)> {
  static const MethodInfo* get() {
    static auto* destroy = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destroy});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::ClearCachedTweens
// Il2CppName: ClearCachedTweens
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DG::Tweening::DOTween::ClearCachedTweens)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "ClearCachedTweens", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::Validate
// Il2CppName: Validate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&DG::Tweening::DOTween::Validate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "Validate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::ManualUpdate
// Il2CppName: ManualUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float, float)>(&DG::Tweening::DOTween::ManualUpdate)> {
  static const MethodInfo* get() {
    static auto* deltaTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* unscaledDeltaTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "ManualUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deltaTime, unscaledDeltaTime});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::To
// Il2CppName: To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<float, float, ::DG::Tweening::Plugins::Options::FloatOptions>* (*)(::DG::Tweening::Core::DOGetter_1<float>*, ::DG::Tweening::Core::DOSetter_1<float>*, float, float)>(&DG::Tweening::DOTween::To)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::To
// Il2CppName: To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<double, double, ::DG::Tweening::Plugins::Options::NoOptions>* (*)(::DG::Tweening::Core::DOGetter_1<double>*, ::DG::Tweening::Core::DOSetter_1<double>*, double, float)>(&DG::Tweening::DOTween::To)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Double")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Double")})->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::To
// Il2CppName: To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<int, int, ::DG::Tweening::Plugins::Options::NoOptions>* (*)(::DG::Tweening::Core::DOGetter_1<int>*, ::DG::Tweening::Core::DOSetter_1<int>*, int, float)>(&DG::Tweening::DOTween::To)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::To
// Il2CppName: To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<uint, uint, ::DG::Tweening::Plugins::Options::UintOptions>* (*)(::DG::Tweening::Core::DOGetter_1<uint>*, ::DG::Tweening::Core::DOSetter_1<uint>*, uint, float)>(&DG::Tweening::DOTween::To)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "UInt32")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "UInt32")})->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::To
// Il2CppName: To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<int64_t, int64_t, ::DG::Tweening::Plugins::Options::NoOptions>* (*)(::DG::Tweening::Core::DOGetter_1<int64_t>*, ::DG::Tweening::Core::DOSetter_1<int64_t>*, int64_t, float)>(&DG::Tweening::DOTween::To)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int64")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int64")})->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::To
// Il2CppName: To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<uint64_t, uint64_t, ::DG::Tweening::Plugins::Options::NoOptions>* (*)(::DG::Tweening::Core::DOGetter_1<uint64_t>*, ::DG::Tweening::Core::DOSetter_1<uint64_t>*, uint64_t, float)>(&DG::Tweening::DOTween::To)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "UInt64")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "UInt64")})->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::To
// Il2CppName: To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::StringW, ::StringW, ::DG::Tweening::Plugins::Options::StringOptions>* (*)(::DG::Tweening::Core::DOGetter_1<::StringW>*, ::DG::Tweening::Core::DOSetter_1<::StringW>*, ::StringW, float)>(&DG::Tweening::DOTween::To)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::To
// Il2CppName: To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector2, ::UnityEngine::Vector2, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Vector2>*, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Vector2>*, ::UnityEngine::Vector2, float)>(&DG::Tweening::DOTween::To)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")})->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::To
// Il2CppName: To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Vector3>*, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Vector3>*, ::UnityEngine::Vector3, float)>(&DG::Tweening::DOTween::To)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::To
// Il2CppName: To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector4, ::UnityEngine::Vector4, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Vector4>*, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Vector4>*, ::UnityEngine::Vector4, float)>(&DG::Tweening::DOTween::To)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")})->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::To
// Il2CppName: To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Quaternion, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::QuaternionOptions>* (*)(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Quaternion>*, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Quaternion>*, ::UnityEngine::Vector3, float)>(&DG::Tweening::DOTween::To)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")})->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::To
// Il2CppName: To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Color>*, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Color>*, ::UnityEngine::Color, float)>(&DG::Tweening::DOTween::To)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Color")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Color")})->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::To
// Il2CppName: To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Rect, ::UnityEngine::Rect, ::DG::Tweening::Plugins::Options::RectOptions>* (*)(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Rect>*, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Rect>*, ::UnityEngine::Rect, float)>(&DG::Tweening::DOTween::To)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")})->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::To
// Il2CppName: To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::DG::Tweening::Core::DOGetter_1<::UnityEngine::RectOffset*>*, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::RectOffset*>*, ::UnityEngine::RectOffset*, float)>(&DG::Tweening::DOTween::To)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "RectOffset")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "RectOffset")})->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectOffset")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::To
// Il2CppName: To
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: DG::Tweening::DOTween::ToAxis
// Il2CppName: ToAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::UnityEngine::Vector3, ::DG::Tweening::Plugins::Options::VectorOptions>* (*)(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Vector3>*, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Vector3>*, float, float, ::DG::Tweening::AxisConstraint)>(&DG::Tweening::DOTween::ToAxis)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* axisConstraint = &::il2cpp_utils::GetClassFromName("DG.Tweening", "AxisConstraint")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "ToAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, endValue, duration, axisConstraint});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::ToAlpha
// Il2CppName: ToAlpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Color, ::UnityEngine::Color, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Color>*, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Color>*, float, float)>(&DG::Tweening::DOTween::ToAlpha)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Color")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Color")})->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "ToAlpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::To
// Il2CppName: To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Tweener* (*)(::DG::Tweening::Core::DOSetter_1<float>*, float, float, float)>(&DG::Tweening::DOTween::To)> {
  static const MethodInfo* get() {
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    static auto* startValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{setter, startValue, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::Punch
// Il2CppName: Punch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, ::DG::Tweening::Plugins::Options::Vector3ArrayOptions>* (*)(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Vector3>*, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Vector3>*, ::UnityEngine::Vector3, float, int, float)>(&DG::Tweening::DOTween::Punch)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* direction = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* elasticity = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "Punch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, direction, duration, vibrato, elasticity});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::Shake
// Il2CppName: Shake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, ::DG::Tweening::Plugins::Options::Vector3ArrayOptions>* (*)(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Vector3>*, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Vector3>*, float, float, int, float, bool, bool)>(&DG::Tweening::DOTween::Shake)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* strength = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* randomness = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* ignoreZAxis = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* fadeOut = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "Shake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, duration, strength, vibrato, randomness, ignoreZAxis, fadeOut});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::Shake
// Il2CppName: Shake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, ::DG::Tweening::Plugins::Options::Vector3ArrayOptions>* (*)(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Vector3>*, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Vector3>*, float, ::UnityEngine::Vector3, int, float, bool)>(&DG::Tweening::DOTween::Shake)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* strength = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* randomness = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* fadeOut = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "Shake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, duration, strength, vibrato, randomness, fadeOut});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::Shake
// Il2CppName: Shake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, ::DG::Tweening::Plugins::Options::Vector3ArrayOptions>* (*)(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Vector3>*, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Vector3>*, float, ::UnityEngine::Vector3, int, float, bool, bool, bool)>(&DG::Tweening::DOTween::Shake)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* strength = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* vibrato = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* randomness = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* ignoreZAxis = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* vectorBased = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* fadeOut = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "Shake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, duration, strength, vibrato, randomness, ignoreZAxis, vectorBased, fadeOut});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::ToArray
// Il2CppName: ToArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, ::DG::Tweening::Plugins::Options::Vector3ArrayOptions>* (*)(::DG::Tweening::Core::DOGetter_1<::UnityEngine::Vector3>*, ::DG::Tweening::Core::DOSetter_1<::UnityEngine::Vector3>*, ::ArrayW<::UnityEngine::Vector3>, ::ArrayW<float>)>(&DG::Tweening::DOTween::ToArray)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* endValues = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* durations = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "ToArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, endValues, durations});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::To
// Il2CppName: To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Core::TweenerCore_3<::DG::Tweening::Color2, ::DG::Tweening::Color2, ::DG::Tweening::Plugins::Options::ColorOptions>* (*)(::DG::Tweening::Core::DOGetter_1<::DG::Tweening::Color2>*, ::DG::Tweening::Core::DOSetter_1<::DG::Tweening::Color2>*, ::DG::Tweening::Color2, float)>(&DG::Tweening::DOTween::To)> {
  static const MethodInfo* get() {
    static auto* getter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOGetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("DG.Tweening", "Color2")})->byval_arg;
    static auto* setter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("DG.Tweening.Core", "DOSetter`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("DG.Tweening", "Color2")})->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("DG.Tweening", "Color2")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getter, setter, endValue, duration});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::Sequence
// Il2CppName: Sequence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::Sequence* (*)()>(&DG::Tweening::DOTween::Sequence)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "Sequence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::CompleteAll
// Il2CppName: CompleteAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(bool)>(&DG::Tweening::DOTween::CompleteAll)> {
  static const MethodInfo* get() {
    static auto* withCallbacks = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "CompleteAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{withCallbacks});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::Complete
// Il2CppName: Complete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppObject*, bool)>(&DG::Tweening::DOTween::Complete)> {
  static const MethodInfo* get() {
    static auto* targetOrId = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* withCallbacks = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "Complete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetOrId, withCallbacks});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::CompleteAndReturnKilledTot
// Il2CppName: CompleteAndReturnKilledTot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&DG::Tweening::DOTween::CompleteAndReturnKilledTot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "CompleteAndReturnKilledTot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::CompleteAndReturnKilledTot
// Il2CppName: CompleteAndReturnKilledTot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppObject*)>(&DG::Tweening::DOTween::CompleteAndReturnKilledTot)> {
  static const MethodInfo* get() {
    static auto* targetOrId = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "CompleteAndReturnKilledTot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetOrId});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::CompleteAndReturnKilledTotExceptFor
// Il2CppName: CompleteAndReturnKilledTotExceptFor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::ArrayW<::Il2CppObject*>)>(&DG::Tweening::DOTween::CompleteAndReturnKilledTotExceptFor)> {
  static const MethodInfo* get() {
    static auto* excludeTargetsOrIds = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "CompleteAndReturnKilledTotExceptFor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{excludeTargetsOrIds});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::FlipAll
// Il2CppName: FlipAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&DG::Tweening::DOTween::FlipAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "FlipAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::Flip
// Il2CppName: Flip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppObject*)>(&DG::Tweening::DOTween::Flip)> {
  static const MethodInfo* get() {
    static auto* targetOrId = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "Flip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetOrId});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::GotoAll
// Il2CppName: GotoAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(float, bool)>(&DG::Tweening::DOTween::GotoAll)> {
  static const MethodInfo* get() {
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* andPlay = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "GotoAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{to, andPlay});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::Goto
// Il2CppName: Goto
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppObject*, float, bool)>(&DG::Tweening::DOTween::Goto)> {
  static const MethodInfo* get() {
    static auto* targetOrId = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* andPlay = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "Goto", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetOrId, to, andPlay});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::KillAll
// Il2CppName: KillAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(bool)>(&DG::Tweening::DOTween::KillAll)> {
  static const MethodInfo* get() {
    static auto* complete = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "KillAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{complete});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::KillAll
// Il2CppName: KillAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(bool, ::ArrayW<::Il2CppObject*>)>(&DG::Tweening::DOTween::KillAll)> {
  static const MethodInfo* get() {
    static auto* complete = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* idsOrTargetsToExclude = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "KillAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{complete, idsOrTargetsToExclude});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::Kill
// Il2CppName: Kill
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppObject*, bool)>(&DG::Tweening::DOTween::Kill)> {
  static const MethodInfo* get() {
    static auto* targetOrId = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* complete = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "Kill", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetOrId, complete});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::PauseAll
// Il2CppName: PauseAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&DG::Tweening::DOTween::PauseAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "PauseAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::Pause
// Il2CppName: Pause
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppObject*)>(&DG::Tweening::DOTween::Pause)> {
  static const MethodInfo* get() {
    static auto* targetOrId = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "Pause", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetOrId});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::PlayAll
// Il2CppName: PlayAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&DG::Tweening::DOTween::PlayAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "PlayAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::Play
// Il2CppName: Play
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppObject*)>(&DG::Tweening::DOTween::Play)> {
  static const MethodInfo* get() {
    static auto* targetOrId = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "Play", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetOrId});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::Play
// Il2CppName: Play
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppObject*, ::Il2CppObject*)>(&DG::Tweening::DOTween::Play)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "Play", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, id});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::PlayBackwardsAll
// Il2CppName: PlayBackwardsAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&DG::Tweening::DOTween::PlayBackwardsAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "PlayBackwardsAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::PlayBackwards
// Il2CppName: PlayBackwards
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppObject*)>(&DG::Tweening::DOTween::PlayBackwards)> {
  static const MethodInfo* get() {
    static auto* targetOrId = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "PlayBackwards", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetOrId});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::PlayBackwards
// Il2CppName: PlayBackwards
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppObject*, ::Il2CppObject*)>(&DG::Tweening::DOTween::PlayBackwards)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "PlayBackwards", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, id});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::PlayForwardAll
// Il2CppName: PlayForwardAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&DG::Tweening::DOTween::PlayForwardAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "PlayForwardAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::PlayForward
// Il2CppName: PlayForward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppObject*)>(&DG::Tweening::DOTween::PlayForward)> {
  static const MethodInfo* get() {
    static auto* targetOrId = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "PlayForward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetOrId});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::PlayForward
// Il2CppName: PlayForward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppObject*, ::Il2CppObject*)>(&DG::Tweening::DOTween::PlayForward)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "PlayForward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, id});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::RestartAll
// Il2CppName: RestartAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(bool)>(&DG::Tweening::DOTween::RestartAll)> {
  static const MethodInfo* get() {
    static auto* includeDelay = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "RestartAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{includeDelay});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::Restart
// Il2CppName: Restart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppObject*, bool, float)>(&DG::Tweening::DOTween::Restart)> {
  static const MethodInfo* get() {
    static auto* targetOrId = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* includeDelay = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* changeDelayTo = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "Restart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetOrId, includeDelay, changeDelayTo});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::Restart
// Il2CppName: Restart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppObject*, ::Il2CppObject*, bool, float)>(&DG::Tweening::DOTween::Restart)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* includeDelay = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* changeDelayTo = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "Restart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, id, includeDelay, changeDelayTo});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::RewindAll
// Il2CppName: RewindAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(bool)>(&DG::Tweening::DOTween::RewindAll)> {
  static const MethodInfo* get() {
    static auto* includeDelay = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "RewindAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{includeDelay});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::Rewind
// Il2CppName: Rewind
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppObject*, bool)>(&DG::Tweening::DOTween::Rewind)> {
  static const MethodInfo* get() {
    static auto* targetOrId = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* includeDelay = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "Rewind", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetOrId, includeDelay});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::SmoothRewindAll
// Il2CppName: SmoothRewindAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&DG::Tweening::DOTween::SmoothRewindAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "SmoothRewindAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::SmoothRewind
// Il2CppName: SmoothRewind
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppObject*)>(&DG::Tweening::DOTween::SmoothRewind)> {
  static const MethodInfo* get() {
    static auto* targetOrId = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "SmoothRewind", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetOrId});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::TogglePauseAll
// Il2CppName: TogglePauseAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&DG::Tweening::DOTween::TogglePauseAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "TogglePauseAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::TogglePause
// Il2CppName: TogglePause
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppObject*)>(&DG::Tweening::DOTween::TogglePause)> {
  static const MethodInfo* get() {
    static auto* targetOrId = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "TogglePause", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetOrId});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::IsTweening
// Il2CppName: IsTweening
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppObject*, bool)>(&DG::Tweening::DOTween::IsTweening)> {
  static const MethodInfo* get() {
    static auto* targetOrId = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* alsoCheckIfIsPlaying = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "IsTweening", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetOrId, alsoCheckIfIsPlaying});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::TotalPlayingTweens
// Il2CppName: TotalPlayingTweens
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&DG::Tweening::DOTween::TotalPlayingTweens)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "TotalPlayingTweens", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::PlayingTweens
// Il2CppName: PlayingTweens
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::DG::Tweening::Tween*>* (*)(::System::Collections::Generic::List_1<::DG::Tweening::Tween*>*)>(&DG::Tweening::DOTween::PlayingTweens)> {
  static const MethodInfo* get() {
    static auto* fillableList = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("DG.Tweening", "Tween")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "PlayingTweens", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fillableList});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::PausedTweens
// Il2CppName: PausedTweens
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::DG::Tweening::Tween*>* (*)(::System::Collections::Generic::List_1<::DG::Tweening::Tween*>*)>(&DG::Tweening::DOTween::PausedTweens)> {
  static const MethodInfo* get() {
    static auto* fillableList = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("DG.Tweening", "Tween")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "PausedTweens", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fillableList});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::TweensById
// Il2CppName: TweensById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::DG::Tweening::Tween*>* (*)(::Il2CppObject*, bool, ::System::Collections::Generic::List_1<::DG::Tweening::Tween*>*)>(&DG::Tweening::DOTween::TweensById)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* playingOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* fillableList = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("DG.Tweening", "Tween")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "TweensById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, playingOnly, fillableList});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::TweensByTarget
// Il2CppName: TweensByTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::DG::Tweening::Tween*>* (*)(::Il2CppObject*, bool, ::System::Collections::Generic::List_1<::DG::Tweening::Tween*>*)>(&DG::Tweening::DOTween::TweensByTarget)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* playingOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* fillableList = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("DG.Tweening", "Tween")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "TweensByTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, playingOnly, fillableList});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::InitCheck
// Il2CppName: InitCheck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DG::Tweening::DOTween::InitCheck)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::DOTween*), "InitCheck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::DOTween::ApplyTo
// Il2CppName: ApplyTo
// Cannot write MetadataGetter for generic methods!
