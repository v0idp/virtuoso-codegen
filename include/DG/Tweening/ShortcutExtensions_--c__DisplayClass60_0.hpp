// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DG.Tweening.ShortcutExtensions
#include "DG/Tweening/ShortcutExtensions.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: DG::Tweening
namespace DG::Tweening {
  // Forward declaring type: Sequence
  class Sequence;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0);
DEFINE_IL2CPP_ARG_TYPE(::DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0*, "DG.Tweening", "ShortcutExtensions/<>c__DisplayClass60_0");
// Type namespace: DG.Tweening
namespace DG::Tweening {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: DG.Tweening.ShortcutExtensions/DG.Tweening.<>c__DisplayClass60_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class ShortcutExtensions::$$c__DisplayClass60_0 : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.Transform target
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Transform* target;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public System.Boolean offsetYSet
    // Size: 0x1
    // Offset: 0x18
    bool offsetYSet;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: offsetYSet and: offsetY
    char __padding1[0x3] = {};
    // public System.Single offsetY
    // Size: 0x4
    // Offset: 0x1C
    float offsetY;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public DG.Tweening.Sequence s
    // Size: 0x8
    // Offset: 0x20
    ::DG::Tweening::Sequence* s;
    // Field size check
    static_assert(sizeof(::DG::Tweening::Sequence*) == 0x8);
    // public UnityEngine.Vector3 endValue
    // Size: 0xC
    // Offset: 0x28
    ::UnityEngine::Vector3 endValue;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public System.Single startPosY
    // Size: 0x4
    // Offset: 0x34
    float startPosY;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: public UnityEngine.Transform target
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_target();
    // Get instance field reference: public System.Boolean offsetYSet
    [[deprecated("Use field access instead!")]] bool& dyn_offsetYSet();
    // Get instance field reference: public System.Single offsetY
    [[deprecated("Use field access instead!")]] float& dyn_offsetY();
    // Get instance field reference: public DG.Tweening.Sequence s
    [[deprecated("Use field access instead!")]] ::DG::Tweening::Sequence*& dyn_s();
    // Get instance field reference: public UnityEngine.Vector3 endValue
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_endValue();
    // Get instance field reference: public System.Single startPosY
    [[deprecated("Use field access instead!")]] float& dyn_startPosY();
    // public System.Void .ctor()
    // Offset: 0x18654DC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ShortcutExtensions::$$c__DisplayClass60_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ShortcutExtensions::$$c__DisplayClass60_0*, creationType>()));
    }
    // UnityEngine.Vector3 <DOLocalJump>b__0()
    // Offset: 0x18654E4
    ::UnityEngine::Vector3 $DOLocalJump$b__0();
    // System.Void <DOLocalJump>b__1(UnityEngine.Vector3 x)
    // Offset: 0x1865500
    void $DOLocalJump$b__1(::UnityEngine::Vector3 x);
    // UnityEngine.Vector3 <DOLocalJump>b__2()
    // Offset: 0x186551C
    ::UnityEngine::Vector3 $DOLocalJump$b__2();
    // System.Void <DOLocalJump>b__3(UnityEngine.Vector3 x)
    // Offset: 0x1865538
    void $DOLocalJump$b__3(::UnityEngine::Vector3 x);
    // UnityEngine.Vector3 <DOLocalJump>b__4()
    // Offset: 0x1865554
    ::UnityEngine::Vector3 $DOLocalJump$b__4();
    // System.Void <DOLocalJump>b__5(UnityEngine.Vector3 x)
    // Offset: 0x1865570
    void $DOLocalJump$b__5(::UnityEngine::Vector3 x);
    // System.Void <DOLocalJump>b__6()
    // Offset: 0x186558C
    void $DOLocalJump$b__6();
  }; // DG.Tweening.ShortcutExtensions/DG.Tweening.<>c__DisplayClass60_0
  #pragma pack(pop)
  static check_size<sizeof(ShortcutExtensions::$$c__DisplayClass60_0), 52 + sizeof(float)> __DG_Tweening_ShortcutExtensions_$$c__DisplayClass60_0SizeCheck;
  static_assert(sizeof(ShortcutExtensions::$$c__DisplayClass60_0) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::$DOLocalJump$b__0
// Il2CppName: <DOLocalJump>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::*)()>(&DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::$DOLocalJump$b__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0*), "<DOLocalJump>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::$DOLocalJump$b__1
// Il2CppName: <DOLocalJump>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::*)(::UnityEngine::Vector3)>(&DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::$DOLocalJump$b__1)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0*), "<DOLocalJump>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::$DOLocalJump$b__2
// Il2CppName: <DOLocalJump>b__2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::*)()>(&DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::$DOLocalJump$b__2)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0*), "<DOLocalJump>b__2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::$DOLocalJump$b__3
// Il2CppName: <DOLocalJump>b__3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::*)(::UnityEngine::Vector3)>(&DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::$DOLocalJump$b__3)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0*), "<DOLocalJump>b__3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::$DOLocalJump$b__4
// Il2CppName: <DOLocalJump>b__4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::*)()>(&DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::$DOLocalJump$b__4)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0*), "<DOLocalJump>b__4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::$DOLocalJump$b__5
// Il2CppName: <DOLocalJump>b__5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::*)(::UnityEngine::Vector3)>(&DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::$DOLocalJump$b__5)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0*), "<DOLocalJump>b__5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::$DOLocalJump$b__6
// Il2CppName: <DOLocalJump>b__6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::*)()>(&DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0::$DOLocalJump$b__6)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::ShortcutExtensions::$$c__DisplayClass60_0*), "<DOLocalJump>b__6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
