// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DG.Tweening.Core.ABSSequentiable
#include "DG/Tweening/Core/ABSSequentiable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DG::Tweening
namespace DG::Tweening {
  // Forward declaring type: TweenCallback
  class TweenCallback;
}
// Completed forward declares
// Type namespace: DG.Tweening.Core
namespace DG::Tweening::Core {
  // Forward declaring type: SequenceCallback
  class SequenceCallback;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DG::Tweening::Core::SequenceCallback);
DEFINE_IL2CPP_ARG_TYPE(::DG::Tweening::Core::SequenceCallback*, "DG.Tweening.Core", "SequenceCallback");
// Type namespace: DG.Tweening.Core
namespace DG::Tweening::Core {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: DG.Tweening.Core.SequenceCallback
  // [TokenAttribute] Offset: FFFFFFFF
  class SequenceCallback : public ::DG::Tweening::Core::ABSSequentiable {
    public:
    // public System.Void .ctor(System.Single sequencedPosition, DG.Tweening.TweenCallback callback)
    // Offset: 0x15A17A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SequenceCallback* New_ctor(float sequencedPosition, ::DG::Tweening::TweenCallback* callback) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DG::Tweening::Core::SequenceCallback::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SequenceCallback*, creationType>(sequencedPosition, callback)));
    }
  }; // DG.Tweening.Core.SequenceCallback
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DG::Tweening::Core::SequenceCallback::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
