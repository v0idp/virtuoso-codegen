// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: DG.Tweening.Core.Enums
namespace DG::Tweening::Core::Enums {
  // Forward declaring type: OperationType
  struct OperationType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::DG::Tweening::Core::Enums::OperationType, "DG.Tweening.Core.Enums", "OperationType");
// Type namespace: DG.Tweening.Core.Enums
namespace DG::Tweening::Core::Enums {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: DG.Tweening.Core.Enums.OperationType
  // [TokenAttribute] Offset: FFFFFFFF
  struct OperationType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: OperationType
    constexpr OperationType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public DG.Tweening.Core.Enums.OperationType Complete
    static constexpr const int Complete = 0;
    // Get static field: static public DG.Tweening.Core.Enums.OperationType Complete
    static ::DG::Tweening::Core::Enums::OperationType _get_Complete();
    // Set static field: static public DG.Tweening.Core.Enums.OperationType Complete
    static void _set_Complete(::DG::Tweening::Core::Enums::OperationType value);
    // static field const value: static public DG.Tweening.Core.Enums.OperationType Despawn
    static constexpr const int Despawn = 1;
    // Get static field: static public DG.Tweening.Core.Enums.OperationType Despawn
    static ::DG::Tweening::Core::Enums::OperationType _get_Despawn();
    // Set static field: static public DG.Tweening.Core.Enums.OperationType Despawn
    static void _set_Despawn(::DG::Tweening::Core::Enums::OperationType value);
    // static field const value: static public DG.Tweening.Core.Enums.OperationType Flip
    static constexpr const int Flip = 2;
    // Get static field: static public DG.Tweening.Core.Enums.OperationType Flip
    static ::DG::Tweening::Core::Enums::OperationType _get_Flip();
    // Set static field: static public DG.Tweening.Core.Enums.OperationType Flip
    static void _set_Flip(::DG::Tweening::Core::Enums::OperationType value);
    // static field const value: static public DG.Tweening.Core.Enums.OperationType Goto
    static constexpr const int Goto = 3;
    // Get static field: static public DG.Tweening.Core.Enums.OperationType Goto
    static ::DG::Tweening::Core::Enums::OperationType _get_Goto();
    // Set static field: static public DG.Tweening.Core.Enums.OperationType Goto
    static void _set_Goto(::DG::Tweening::Core::Enums::OperationType value);
    // static field const value: static public DG.Tweening.Core.Enums.OperationType Pause
    static constexpr const int Pause = 4;
    // Get static field: static public DG.Tweening.Core.Enums.OperationType Pause
    static ::DG::Tweening::Core::Enums::OperationType _get_Pause();
    // Set static field: static public DG.Tweening.Core.Enums.OperationType Pause
    static void _set_Pause(::DG::Tweening::Core::Enums::OperationType value);
    // static field const value: static public DG.Tweening.Core.Enums.OperationType Play
    static constexpr const int Play = 5;
    // Get static field: static public DG.Tweening.Core.Enums.OperationType Play
    static ::DG::Tweening::Core::Enums::OperationType _get_Play();
    // Set static field: static public DG.Tweening.Core.Enums.OperationType Play
    static void _set_Play(::DG::Tweening::Core::Enums::OperationType value);
    // static field const value: static public DG.Tweening.Core.Enums.OperationType PlayForward
    static constexpr const int PlayForward = 6;
    // Get static field: static public DG.Tweening.Core.Enums.OperationType PlayForward
    static ::DG::Tweening::Core::Enums::OperationType _get_PlayForward();
    // Set static field: static public DG.Tweening.Core.Enums.OperationType PlayForward
    static void _set_PlayForward(::DG::Tweening::Core::Enums::OperationType value);
    // static field const value: static public DG.Tweening.Core.Enums.OperationType PlayBackwards
    static constexpr const int PlayBackwards = 7;
    // Get static field: static public DG.Tweening.Core.Enums.OperationType PlayBackwards
    static ::DG::Tweening::Core::Enums::OperationType _get_PlayBackwards();
    // Set static field: static public DG.Tweening.Core.Enums.OperationType PlayBackwards
    static void _set_PlayBackwards(::DG::Tweening::Core::Enums::OperationType value);
    // static field const value: static public DG.Tweening.Core.Enums.OperationType Rewind
    static constexpr const int Rewind = 8;
    // Get static field: static public DG.Tweening.Core.Enums.OperationType Rewind
    static ::DG::Tweening::Core::Enums::OperationType _get_Rewind();
    // Set static field: static public DG.Tweening.Core.Enums.OperationType Rewind
    static void _set_Rewind(::DG::Tweening::Core::Enums::OperationType value);
    // static field const value: static public DG.Tweening.Core.Enums.OperationType SmoothRewind
    static constexpr const int SmoothRewind = 9;
    // Get static field: static public DG.Tweening.Core.Enums.OperationType SmoothRewind
    static ::DG::Tweening::Core::Enums::OperationType _get_SmoothRewind();
    // Set static field: static public DG.Tweening.Core.Enums.OperationType SmoothRewind
    static void _set_SmoothRewind(::DG::Tweening::Core::Enums::OperationType value);
    // static field const value: static public DG.Tweening.Core.Enums.OperationType Restart
    static constexpr const int Restart = 10;
    // Get static field: static public DG.Tweening.Core.Enums.OperationType Restart
    static ::DG::Tweening::Core::Enums::OperationType _get_Restart();
    // Set static field: static public DG.Tweening.Core.Enums.OperationType Restart
    static void _set_Restart(::DG::Tweening::Core::Enums::OperationType value);
    // static field const value: static public DG.Tweening.Core.Enums.OperationType TogglePause
    static constexpr const int TogglePause = 11;
    // Get static field: static public DG.Tweening.Core.Enums.OperationType TogglePause
    static ::DG::Tweening::Core::Enums::OperationType _get_TogglePause();
    // Set static field: static public DG.Tweening.Core.Enums.OperationType TogglePause
    static void _set_TogglePause(::DG::Tweening::Core::Enums::OperationType value);
    // static field const value: static public DG.Tweening.Core.Enums.OperationType IsTweening
    static constexpr const int IsTweening = 12;
    // Get static field: static public DG.Tweening.Core.Enums.OperationType IsTweening
    static ::DG::Tweening::Core::Enums::OperationType _get_IsTweening();
    // Set static field: static public DG.Tweening.Core.Enums.OperationType IsTweening
    static void _set_IsTweening(::DG::Tweening::Core::Enums::OperationType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // DG.Tweening.Core.Enums.OperationType
  #pragma pack(pop)
  static check_size<sizeof(OperationType), 0 + sizeof(int)> __DG_Tweening_Core_Enums_OperationTypeSizeCheck;
  static_assert(sizeof(OperationType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
