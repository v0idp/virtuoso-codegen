// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: DG.Tweening
namespace DG::Tweening {
  // Forward declaring type: LoopType
  struct LoopType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::DG::Tweening::LoopType, "DG.Tweening", "LoopType");
// Type namespace: DG.Tweening
namespace DG::Tweening {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: DG.Tweening.LoopType
  // [TokenAttribute] Offset: FFFFFFFF
  struct LoopType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: LoopType
    constexpr LoopType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public DG.Tweening.LoopType Restart
    static constexpr const int Restart = 0;
    // Get static field: static public DG.Tweening.LoopType Restart
    static ::DG::Tweening::LoopType _get_Restart();
    // Set static field: static public DG.Tweening.LoopType Restart
    static void _set_Restart(::DG::Tweening::LoopType value);
    // static field const value: static public DG.Tweening.LoopType Yoyo
    static constexpr const int Yoyo = 1;
    // Get static field: static public DG.Tweening.LoopType Yoyo
    static ::DG::Tweening::LoopType _get_Yoyo();
    // Set static field: static public DG.Tweening.LoopType Yoyo
    static void _set_Yoyo(::DG::Tweening::LoopType value);
    // static field const value: static public DG.Tweening.LoopType Incremental
    static constexpr const int Incremental = 2;
    // Get static field: static public DG.Tweening.LoopType Incremental
    static ::DG::Tweening::LoopType _get_Incremental();
    // Set static field: static public DG.Tweening.LoopType Incremental
    static void _set_Incremental(::DG::Tweening::LoopType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // DG.Tweening.LoopType
  #pragma pack(pop)
  static check_size<sizeof(LoopType), 0 + sizeof(int)> __DG_Tweening_LoopTypeSizeCheck;
  static_assert(sizeof(LoopType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
