// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: MemoryStream
  class MemoryStream;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AudioClip
  class AudioClip;
}
// Completed forward declares
// Type namespace: NatSuite.Examples.Components
namespace NatSuite::Examples::Components {
  // Forward declaring type: ClipRecorder
  class ClipRecorder;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::NatSuite::Examples::Components::ClipRecorder);
DEFINE_IL2CPP_ARG_TYPE(::NatSuite::Examples::Components::ClipRecorder*, "NatSuite.Examples.Components", "ClipRecorder");
// Type namespace: NatSuite.Examples.Components
namespace NatSuite::Examples::Components {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: NatSuite.Examples.Components.ClipRecorder
  // [TokenAttribute] Offset: FFFFFFFF
  class ClipRecorder : public ::Il2CppObject {
    public:
    public:
    // private readonly System.Int32 sampleRate
    // Size: 0x4
    // Offset: 0x10
    int sampleRate;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private readonly System.Int32 channelCount
    // Size: 0x4
    // Offset: 0x14
    int channelCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private readonly System.IO.MemoryStream audioBuffer
    // Size: 0x8
    // Offset: 0x18
    ::System::IO::MemoryStream* audioBuffer;
    // Field size check
    static_assert(sizeof(::System::IO::MemoryStream*) == 0x8);
    public:
    // Get instance field reference: private readonly System.Int32 sampleRate
    [[deprecated("Use field access instead!")]] int& dyn_sampleRate();
    // Get instance field reference: private readonly System.Int32 channelCount
    [[deprecated("Use field access instead!")]] int& dyn_channelCount();
    // Get instance field reference: private readonly System.IO.MemoryStream audioBuffer
    [[deprecated("Use field access instead!")]] ::System::IO::MemoryStream*& dyn_audioBuffer();
    // public System.Void .ctor(System.Int32 sampleRate, System.Int32 channelCount)
    // Offset: 0x945D80
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ClipRecorder* New_ctor(int sampleRate, int channelCount) {
      static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::ClipRecorder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ClipRecorder*, creationType>(sampleRate, channelCount)));
    }
    // public System.Void CommitSamples(System.Single[] sampleBuffer, System.Int64 timestamp)
    // Offset: 0x945DFC
    void CommitSamples(::ArrayW<float> sampleBuffer, int64_t timestamp);
    // public UnityEngine.AudioClip FinishWriting()
    // Offset: 0x945EB0
    ::UnityEngine::AudioClip* FinishWriting();
  }; // NatSuite.Examples.Components.ClipRecorder
  #pragma pack(pop)
  static check_size<sizeof(ClipRecorder), 24 + sizeof(::System::IO::MemoryStream*)> __NatSuite_Examples_Components_ClipRecorderSizeCheck;
  static_assert(sizeof(ClipRecorder) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: NatSuite::Examples::Components::ClipRecorder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: NatSuite::Examples::Components::ClipRecorder::CommitSamples
// Il2CppName: CommitSamples
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Examples::Components::ClipRecorder::*)(::ArrayW<float>, int64_t)>(&NatSuite::Examples::Components::ClipRecorder::CommitSamples)> {
  static const MethodInfo* get() {
    static auto* sampleBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* timestamp = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Examples::Components::ClipRecorder*), "CommitSamples", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sampleBuffer, timestamp});
  }
};
// Writing MetadataGetter for method: NatSuite::Examples::Components::ClipRecorder::FinishWriting
// Il2CppName: FinishWriting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AudioClip* (NatSuite::Examples::Components::ClipRecorder::*)()>(&NatSuite::Examples::Components::ClipRecorder::FinishWriting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Examples::Components::ClipRecorder*), "FinishWriting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
