// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: NatSuite.Devices.CameraDevice
#include "NatSuite/Devices/CameraDevice.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: NatSuite::Devices::Internal
namespace NatSuite::Devices::Internal {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture2D
  class Texture2D;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ValueTuple`2<T1, T2>
  template<typename T1, typename T2>
  struct ValueTuple_2;
}
// Forward declaring namespace: NatSuite::Devices
namespace NatSuite::Devices {
  // Forward declaring type: FlashMode
  struct FlashMode;
  // Forward declaring type: FrameOrientation
  struct FrameOrientation;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
}
// Completed forward declares
// Type namespace: NatSuite.Devices.Internal
namespace NatSuite::Devices::Internal {
  // Forward declaring type: NativeCameraDevice
  class NativeCameraDevice;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::NatSuite::Devices::Internal::NativeCameraDevice);
DEFINE_IL2CPP_ARG_TYPE(::NatSuite::Devices::Internal::NativeCameraDevice*, "NatSuite.Devices.Internal", "NativeCameraDevice");
// Type namespace: NatSuite.Devices.Internal
namespace NatSuite::Devices::Internal {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: NatSuite.Devices.Internal.NativeCameraDevice
  // [TokenAttribute] Offset: FFFFFFFF
  class NativeCameraDevice : public ::NatSuite::Devices::CameraDevice {
    public:
    // Nested type: ::NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass58_0
    class $$c__DisplayClass58_0;
    // Nested type: ::NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass60_0
    class $$c__DisplayClass60_0;
    public:
    // private readonly System.IntPtr device
    // Size: 0x8
    // Offset: 0x10
    ::System::IntPtr device;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // private UnityEngine.Texture2D previewTexture
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Texture2D* previewTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    public:
    // Get instance field reference: private readonly System.IntPtr device
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_device();
    // Get instance field reference: private UnityEngine.Texture2D previewTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& dyn_previewTexture();
    // public System.Void .ctor(System.IntPtr device)
    // Offset: 0xAC1BAC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NativeCameraDevice* New_ctor(::System::IntPtr device) {
      static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NativeCameraDevice*, creationType>(device)));
    }
    // static private System.Void OnFrame(System.IntPtr context, System.IntPtr pixelBuffer, System.Int32 width, System.Int32 height, System.Int64 timestamp)
    // Offset: 0xAD2000
    static void OnFrame(::System::IntPtr context, ::System::IntPtr pixelBuffer, int width, int height, int64_t timestamp);
    // public override System.String get_uniqueID()
    // Offset: 0xAD20CC
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.String CameraDevice::get_uniqueID()
    ::StringW get_uniqueID();
    // public override System.Boolean get_frontFacing()
    // Offset: 0xAD214C
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Boolean CameraDevice::get_frontFacing()
    bool get_frontFacing();
    // public override System.Boolean get_flashSupported()
    // Offset: 0xAD2158
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Boolean CameraDevice::get_flashSupported()
    bool get_flashSupported();
    // public override System.Boolean get_torchSupported()
    // Offset: 0xAD2164
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Boolean CameraDevice::get_torchSupported()
    bool get_torchSupported();
    // public override System.Boolean get_exposureLockSupported()
    // Offset: 0xAD2170
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Boolean CameraDevice::get_exposureLockSupported()
    bool get_exposureLockSupported();
    // public override System.Boolean get_focusLockSupported()
    // Offset: 0xAD217C
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Boolean CameraDevice::get_focusLockSupported()
    bool get_focusLockSupported();
    // public override System.Boolean get_whiteBalanceLockSupported()
    // Offset: 0xAD2188
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Boolean CameraDevice::get_whiteBalanceLockSupported()
    bool get_whiteBalanceLockSupported();
    // public override System.ValueTuple`2<System.Single,System.Single> get_fieldOfView()
    // Offset: 0xAD2194
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.ValueTuple`2<System.Single,System.Single> CameraDevice::get_fieldOfView()
    ::System::ValueTuple_2<float, float> get_fieldOfView();
    // public override System.ValueTuple`2<System.Single,System.Single> get_exposureRange()
    // Offset: 0xAD2210
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.ValueTuple`2<System.Single,System.Single> CameraDevice::get_exposureRange()
    ::System::ValueTuple_2<float, float> get_exposureRange();
    // public override System.ValueTuple`2<System.Single,System.Single> get_zoomRange()
    // Offset: 0xAD228C
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.ValueTuple`2<System.Single,System.Single> CameraDevice::get_zoomRange()
    ::System::ValueTuple_2<float, float> get_zoomRange();
    // public override System.ValueTuple`2<System.Int32,System.Int32> get_previewResolution()
    // Offset: 0xAD2308
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.ValueTuple`2<System.Int32,System.Int32> CameraDevice::get_previewResolution()
    ::System::ValueTuple_2<int, int> get_previewResolution();
    // public override System.Void set_previewResolution(System.ValueTuple`2<System.Int32,System.Int32> value)
    // Offset: 0xAD2384
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Void CameraDevice::set_previewResolution(System.ValueTuple`2<System.Int32,System.Int32> value)
    void set_previewResolution(::System::ValueTuple_2<int, int> value);
    // public override System.ValueTuple`2<System.Int32,System.Int32> get_photoResolution()
    // Offset: 0xAD2394
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.ValueTuple`2<System.Int32,System.Int32> CameraDevice::get_photoResolution()
    ::System::ValueTuple_2<int, int> get_photoResolution();
    // public override System.Void set_photoResolution(System.ValueTuple`2<System.Int32,System.Int32> value)
    // Offset: 0xAD2410
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Void CameraDevice::set_photoResolution(System.ValueTuple`2<System.Int32,System.Int32> value)
    void set_photoResolution(::System::ValueTuple_2<int, int> value);
    // public override System.Int32 get_frameRate()
    // Offset: 0xAD2420
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Int32 CameraDevice::get_frameRate()
    int get_frameRate();
    // public override System.Void set_frameRate(System.Int32 value)
    // Offset: 0xAD242C
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Void CameraDevice::set_frameRate(System.Int32 value)
    void set_frameRate(int value);
    // public override System.Single get_exposureBias()
    // Offset: 0xAD2438
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Single CameraDevice::get_exposureBias()
    float get_exposureBias();
    // public override System.Void set_exposureBias(System.Single value)
    // Offset: 0xAD2444
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Void CameraDevice::set_exposureBias(System.Single value)
    void set_exposureBias(float value);
    // public override System.Boolean get_exposureLock()
    // Offset: 0xAD2450
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Boolean CameraDevice::get_exposureLock()
    bool get_exposureLock();
    // public override System.Void set_exposureLock(System.Boolean value)
    // Offset: 0xAD245C
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Void CameraDevice::set_exposureLock(System.Boolean value)
    void set_exposureLock(bool value);
    // public override System.Void set_exposurePoint(System.ValueTuple`2<System.Single,System.Single> value)
    // Offset: 0xAD246C
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Void CameraDevice::set_exposurePoint(System.ValueTuple`2<System.Single,System.Single> value)
    void set_exposurePoint(::System::ValueTuple_2<float, float> value);
    // public override NatSuite.Devices.FlashMode get_flashMode()
    // Offset: 0xAD2478
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: NatSuite.Devices.FlashMode CameraDevice::get_flashMode()
    ::NatSuite::Devices::FlashMode get_flashMode();
    // public override System.Void set_flashMode(NatSuite.Devices.FlashMode value)
    // Offset: 0xAD2484
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Void CameraDevice::set_flashMode(NatSuite.Devices.FlashMode value)
    void set_flashMode(::NatSuite::Devices::FlashMode value);
    // public override System.Boolean get_focusLock()
    // Offset: 0xAD2490
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Boolean CameraDevice::get_focusLock()
    bool get_focusLock();
    // public override System.Void set_focusLock(System.Boolean value)
    // Offset: 0xAD249C
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Void CameraDevice::set_focusLock(System.Boolean value)
    void set_focusLock(bool value);
    // public override System.Void set_focusPoint(System.ValueTuple`2<System.Single,System.Single> value)
    // Offset: 0xAD24AC
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Void CameraDevice::set_focusPoint(System.ValueTuple`2<System.Single,System.Single> value)
    void set_focusPoint(::System::ValueTuple_2<float, float> value);
    // public override System.Boolean get_torchEnabled()
    // Offset: 0xAD24B8
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Boolean CameraDevice::get_torchEnabled()
    bool get_torchEnabled();
    // public override System.Void set_torchEnabled(System.Boolean value)
    // Offset: 0xAD24C4
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Void CameraDevice::set_torchEnabled(System.Boolean value)
    void set_torchEnabled(bool value);
    // public override System.Boolean get_whiteBalanceLock()
    // Offset: 0xAD24D4
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Boolean CameraDevice::get_whiteBalanceLock()
    bool get_whiteBalanceLock();
    // public override System.Void set_whiteBalanceLock(System.Boolean value)
    // Offset: 0xAD24E0
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Void CameraDevice::set_whiteBalanceLock(System.Boolean value)
    void set_whiteBalanceLock(bool value);
    // public override System.Single get_zoomRatio()
    // Offset: 0xAD24F0
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Single CameraDevice::get_zoomRatio()
    float get_zoomRatio();
    // public override System.Void set_zoomRatio(System.Single value)
    // Offset: 0xAD24FC
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Void CameraDevice::set_zoomRatio(System.Single value)
    void set_zoomRatio(float value);
    // public override System.Void set_orientation(NatSuite.Devices.FrameOrientation value)
    // Offset: 0xAD2508
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Void CameraDevice::set_orientation(NatSuite.Devices.FrameOrientation value)
    void set_orientation(::NatSuite::Devices::FrameOrientation value);
    // public override System.Boolean get_running()
    // Offset: 0xAD2514
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Boolean CameraDevice::get_running()
    bool get_running();
    // public override System.Threading.Tasks.Task`1<UnityEngine.Texture2D> StartRunning()
    // Offset: 0xAD2520
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Threading.Tasks.Task`1<UnityEngine.Texture2D> CameraDevice::StartRunning()
    ::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>* StartRunning();
    // public override System.Void StopRunning()
    // Offset: 0xAD26B4
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Void CameraDevice::StopRunning()
    void StopRunning();
    // public override System.Threading.Tasks.Task`1<UnityEngine.Texture2D> CapturePhoto()
    // Offset: 0xAD2730
    // Implemented from: NatSuite.Devices.CameraDevice
    // Base method: System.Threading.Tasks.Task`1<UnityEngine.Texture2D> CameraDevice::CapturePhoto()
    ::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>* CapturePhoto();
    // protected override System.Void Finalize()
    // Offset: 0xAD28C4
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // NatSuite.Devices.Internal.NativeCameraDevice
  #pragma pack(pop)
  static check_size<sizeof(NativeCameraDevice), 24 + sizeof(::UnityEngine::Texture2D*)> __NatSuite_Devices_Internal_NativeCameraDeviceSizeCheck;
  static_assert(sizeof(NativeCameraDevice) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::OnFrame
// Il2CppName: OnFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr, int, int, int64_t)>(&NatSuite::Devices::Internal::NativeCameraDevice::OnFrame)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* pixelBuffer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* timestamp = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "OnFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, pixelBuffer, width, height, timestamp});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_uniqueID
// Il2CppName: get_uniqueID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_uniqueID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_uniqueID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_frontFacing
// Il2CppName: get_frontFacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_frontFacing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_frontFacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_flashSupported
// Il2CppName: get_flashSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_flashSupported)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_flashSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_torchSupported
// Il2CppName: get_torchSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_torchSupported)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_torchSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_exposureLockSupported
// Il2CppName: get_exposureLockSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_exposureLockSupported)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_exposureLockSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_focusLockSupported
// Il2CppName: get_focusLockSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_focusLockSupported)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_focusLockSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_whiteBalanceLockSupported
// Il2CppName: get_whiteBalanceLockSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_whiteBalanceLockSupported)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_whiteBalanceLockSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_fieldOfView
// Il2CppName: get_fieldOfView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ValueTuple_2<float, float> (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_fieldOfView)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_fieldOfView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_exposureRange
// Il2CppName: get_exposureRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ValueTuple_2<float, float> (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_exposureRange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_exposureRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_zoomRange
// Il2CppName: get_zoomRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ValueTuple_2<float, float> (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_zoomRange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_zoomRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_previewResolution
// Il2CppName: get_previewResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ValueTuple_2<int, int> (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_previewResolution)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_previewResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::set_previewResolution
// Il2CppName: set_previewResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeCameraDevice::*)(::System::ValueTuple_2<int, int>)>(&NatSuite::Devices::Internal::NativeCameraDevice::set_previewResolution)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ValueTuple`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "set_previewResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_photoResolution
// Il2CppName: get_photoResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ValueTuple_2<int, int> (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_photoResolution)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_photoResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::set_photoResolution
// Il2CppName: set_photoResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeCameraDevice::*)(::System::ValueTuple_2<int, int>)>(&NatSuite::Devices::Internal::NativeCameraDevice::set_photoResolution)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ValueTuple`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "set_photoResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_frameRate
// Il2CppName: get_frameRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_frameRate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_frameRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::set_frameRate
// Il2CppName: set_frameRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeCameraDevice::*)(int)>(&NatSuite::Devices::Internal::NativeCameraDevice::set_frameRate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "set_frameRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_exposureBias
// Il2CppName: get_exposureBias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_exposureBias)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_exposureBias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::set_exposureBias
// Il2CppName: set_exposureBias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeCameraDevice::*)(float)>(&NatSuite::Devices::Internal::NativeCameraDevice::set_exposureBias)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "set_exposureBias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_exposureLock
// Il2CppName: get_exposureLock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_exposureLock)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_exposureLock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::set_exposureLock
// Il2CppName: set_exposureLock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeCameraDevice::*)(bool)>(&NatSuite::Devices::Internal::NativeCameraDevice::set_exposureLock)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "set_exposureLock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::set_exposurePoint
// Il2CppName: set_exposurePoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeCameraDevice::*)(::System::ValueTuple_2<float, float>)>(&NatSuite::Devices::Internal::NativeCameraDevice::set_exposurePoint)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ValueTuple`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "set_exposurePoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_flashMode
// Il2CppName: get_flashMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::NatSuite::Devices::FlashMode (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_flashMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_flashMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::set_flashMode
// Il2CppName: set_flashMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeCameraDevice::*)(::NatSuite::Devices::FlashMode)>(&NatSuite::Devices::Internal::NativeCameraDevice::set_flashMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("NatSuite.Devices", "FlashMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "set_flashMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_focusLock
// Il2CppName: get_focusLock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_focusLock)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_focusLock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::set_focusLock
// Il2CppName: set_focusLock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeCameraDevice::*)(bool)>(&NatSuite::Devices::Internal::NativeCameraDevice::set_focusLock)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "set_focusLock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::set_focusPoint
// Il2CppName: set_focusPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeCameraDevice::*)(::System::ValueTuple_2<float, float>)>(&NatSuite::Devices::Internal::NativeCameraDevice::set_focusPoint)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ValueTuple`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "set_focusPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_torchEnabled
// Il2CppName: get_torchEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_torchEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_torchEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::set_torchEnabled
// Il2CppName: set_torchEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeCameraDevice::*)(bool)>(&NatSuite::Devices::Internal::NativeCameraDevice::set_torchEnabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "set_torchEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_whiteBalanceLock
// Il2CppName: get_whiteBalanceLock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_whiteBalanceLock)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_whiteBalanceLock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::set_whiteBalanceLock
// Il2CppName: set_whiteBalanceLock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeCameraDevice::*)(bool)>(&NatSuite::Devices::Internal::NativeCameraDevice::set_whiteBalanceLock)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "set_whiteBalanceLock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_zoomRatio
// Il2CppName: get_zoomRatio
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_zoomRatio)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_zoomRatio", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::set_zoomRatio
// Il2CppName: set_zoomRatio
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeCameraDevice::*)(float)>(&NatSuite::Devices::Internal::NativeCameraDevice::set_zoomRatio)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "set_zoomRatio", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::set_orientation
// Il2CppName: set_orientation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeCameraDevice::*)(::NatSuite::Devices::FrameOrientation)>(&NatSuite::Devices::Internal::NativeCameraDevice::set_orientation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("NatSuite.Devices", "FrameOrientation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "set_orientation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::get_running
// Il2CppName: get_running
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::get_running)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "get_running", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::StartRunning
// Il2CppName: StartRunning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>* (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::StartRunning)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "StartRunning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::StopRunning
// Il2CppName: StopRunning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::StopRunning)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "StopRunning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::CapturePhoto
// Il2CppName: CapturePhoto
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>* (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::CapturePhoto)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "CapturePhoto", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeCameraDevice::*)()>(&NatSuite::Devices::Internal::NativeCameraDevice::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
