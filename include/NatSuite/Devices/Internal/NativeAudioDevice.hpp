// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: NatSuite.Devices.AudioDevice
#include "NatSuite/Devices/AudioDevice.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: NatSuite::Devices::Internal
namespace NatSuite::Devices::Internal {
}
// Forward declaring namespace: NatSuite::Devices
namespace NatSuite::Devices {
  // Forward declaring type: SampleBufferDelegate
  class SampleBufferDelegate;
}
// Completed forward declares
// Type namespace: NatSuite.Devices.Internal
namespace NatSuite::Devices::Internal {
  // Forward declaring type: NativeAudioDevice
  class NativeAudioDevice;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::NatSuite::Devices::Internal::NativeAudioDevice);
DEFINE_IL2CPP_ARG_TYPE(::NatSuite::Devices::Internal::NativeAudioDevice*, "NatSuite.Devices.Internal", "NativeAudioDevice");
// Type namespace: NatSuite.Devices.Internal
namespace NatSuite::Devices::Internal {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: NatSuite.Devices.Internal.NativeAudioDevice
  // [TokenAttribute] Offset: FFFFFFFF
  class NativeAudioDevice : public ::NatSuite::Devices::AudioDevice {
    public:
    // Nested type: ::NatSuite::Devices::Internal::NativeAudioDevice::$$c__DisplayClass14_0
    class $$c__DisplayClass14_0;
    public:
    // private readonly System.IntPtr device
    // Size: 0x8
    // Offset: 0x10
    ::System::IntPtr device;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    public:
    // Creating conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept {
      return device;
    }
    // Get instance field reference: private readonly System.IntPtr device
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_device();
    // public System.Void .ctor(System.IntPtr device)
    // Offset: 0xAC1B80
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NativeAudioDevice* New_ctor(::System::IntPtr device) {
      static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeAudioDevice::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NativeAudioDevice*, creationType>(device)));
    }
    // static private System.Void OnSampleBuffer(System.IntPtr context, System.IntPtr sampleBuffer, System.Int32 sampleCount, System.Int64 timestamp)
    // Offset: 0xAD1BD8
    static void OnSampleBuffer(::System::IntPtr context, ::System::IntPtr sampleBuffer, int sampleCount, int64_t timestamp);
    // public override System.String get_uniqueID()
    // Offset: 0xAD1D00
    // Implemented from: NatSuite.Devices.AudioDevice
    // Base method: System.String AudioDevice::get_uniqueID()
    ::StringW get_uniqueID();
    // public override System.String get_name()
    // Offset: 0xAD1D80
    // Implemented from: NatSuite.Devices.AudioDevice
    // Base method: System.String AudioDevice::get_name()
    ::StringW get_name();
    // public override System.Boolean get_echoCancellation()
    // Offset: 0xAD1E00
    // Implemented from: NatSuite.Devices.AudioDevice
    // Base method: System.Boolean AudioDevice::get_echoCancellation()
    bool get_echoCancellation();
    // public override System.Int32 get_sampleRate()
    // Offset: 0xAD1E0C
    // Implemented from: NatSuite.Devices.AudioDevice
    // Base method: System.Int32 AudioDevice::get_sampleRate()
    int get_sampleRate();
    // public override System.Void set_sampleRate(System.Int32 value)
    // Offset: 0xAD1E18
    // Implemented from: NatSuite.Devices.AudioDevice
    // Base method: System.Void AudioDevice::set_sampleRate(System.Int32 value)
    void set_sampleRate(int value);
    // public override System.Int32 get_channelCount()
    // Offset: 0xAD1E24
    // Implemented from: NatSuite.Devices.AudioDevice
    // Base method: System.Int32 AudioDevice::get_channelCount()
    int get_channelCount();
    // public override System.Void set_channelCount(System.Int32 value)
    // Offset: 0xAD1E30
    // Implemented from: NatSuite.Devices.AudioDevice
    // Base method: System.Void AudioDevice::set_channelCount(System.Int32 value)
    void set_channelCount(int value);
    // public override System.Boolean get_running()
    // Offset: 0xAD1E3C
    // Implemented from: NatSuite.Devices.AudioDevice
    // Base method: System.Boolean AudioDevice::get_running()
    bool get_running();
    // public override System.Void StartRunning(NatSuite.Devices.SampleBufferDelegate delegate)
    // Offset: 0xAD1E48
    // Implemented from: NatSuite.Devices.AudioDevice
    // Base method: System.Void AudioDevice::StartRunning(NatSuite.Devices.SampleBufferDelegate delegate)
    void StartRunning(::NatSuite::Devices::SampleBufferDelegate* delegate);
    // public override System.Void StopRunning()
    // Offset: 0xAD1F84
    // Implemented from: NatSuite.Devices.AudioDevice
    // Base method: System.Void AudioDevice::StopRunning()
    void StopRunning();
    // protected override System.Void Finalize()
    // Offset: 0xAD1F90
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // NatSuite.Devices.Internal.NativeAudioDevice
  #pragma pack(pop)
  static check_size<sizeof(NativeAudioDevice), 16 + sizeof(::System::IntPtr)> __NatSuite_Devices_Internal_NativeAudioDeviceSizeCheck;
  static_assert(sizeof(NativeAudioDevice) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeAudioDevice::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeAudioDevice::OnSampleBuffer
// Il2CppName: OnSampleBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr, int, int64_t)>(&NatSuite::Devices::Internal::NativeAudioDevice::OnSampleBuffer)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* sampleBuffer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* sampleCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* timestamp = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeAudioDevice*), "OnSampleBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, sampleBuffer, sampleCount, timestamp});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeAudioDevice::get_uniqueID
// Il2CppName: get_uniqueID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (NatSuite::Devices::Internal::NativeAudioDevice::*)()>(&NatSuite::Devices::Internal::NativeAudioDevice::get_uniqueID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeAudioDevice*), "get_uniqueID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeAudioDevice::get_name
// Il2CppName: get_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (NatSuite::Devices::Internal::NativeAudioDevice::*)()>(&NatSuite::Devices::Internal::NativeAudioDevice::get_name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeAudioDevice*), "get_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeAudioDevice::get_echoCancellation
// Il2CppName: get_echoCancellation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NatSuite::Devices::Internal::NativeAudioDevice::*)()>(&NatSuite::Devices::Internal::NativeAudioDevice::get_echoCancellation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeAudioDevice*), "get_echoCancellation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeAudioDevice::get_sampleRate
// Il2CppName: get_sampleRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (NatSuite::Devices::Internal::NativeAudioDevice::*)()>(&NatSuite::Devices::Internal::NativeAudioDevice::get_sampleRate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeAudioDevice*), "get_sampleRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeAudioDevice::set_sampleRate
// Il2CppName: set_sampleRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeAudioDevice::*)(int)>(&NatSuite::Devices::Internal::NativeAudioDevice::set_sampleRate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeAudioDevice*), "set_sampleRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeAudioDevice::get_channelCount
// Il2CppName: get_channelCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (NatSuite::Devices::Internal::NativeAudioDevice::*)()>(&NatSuite::Devices::Internal::NativeAudioDevice::get_channelCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeAudioDevice*), "get_channelCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeAudioDevice::set_channelCount
// Il2CppName: set_channelCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeAudioDevice::*)(int)>(&NatSuite::Devices::Internal::NativeAudioDevice::set_channelCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeAudioDevice*), "set_channelCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeAudioDevice::get_running
// Il2CppName: get_running
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NatSuite::Devices::Internal::NativeAudioDevice::*)()>(&NatSuite::Devices::Internal::NativeAudioDevice::get_running)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeAudioDevice*), "get_running", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeAudioDevice::StartRunning
// Il2CppName: StartRunning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeAudioDevice::*)(::NatSuite::Devices::SampleBufferDelegate*)>(&NatSuite::Devices::Internal::NativeAudioDevice::StartRunning)> {
  static const MethodInfo* get() {
    static auto* delegate = &::il2cpp_utils::GetClassFromName("NatSuite.Devices", "SampleBufferDelegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeAudioDevice*), "StartRunning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{delegate});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeAudioDevice::StopRunning
// Il2CppName: StopRunning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeAudioDevice::*)()>(&NatSuite::Devices::Internal::NativeAudioDevice::StopRunning)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeAudioDevice*), "StopRunning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeAudioDevice::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeAudioDevice::*)()>(&NatSuite::Devices::Internal::NativeAudioDevice::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeAudioDevice*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
