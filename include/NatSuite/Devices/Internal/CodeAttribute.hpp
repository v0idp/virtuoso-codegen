// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: NatSuite.Devices.Internal
namespace NatSuite::Devices::Internal {
  // Forward declaring type: CodeAttribute
  class CodeAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::NatSuite::Devices::Internal::CodeAttribute);
DEFINE_IL2CPP_ARG_TYPE(::NatSuite::Devices::Internal::CodeAttribute*, "NatSuite.Devices.Internal", "CodeAttribute");
// Type namespace: NatSuite.Devices.Internal
namespace NatSuite::Devices::Internal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: NatSuite.Devices.Internal.CodeAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  class CodeAttribute : public ::System::Attribute {
    public:
    // public System.Void .ctor(System.String key)
    // Offset: 0x9482C4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CodeAttribute* New_ctor(::StringW key) {
      static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::CodeAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CodeAttribute*, creationType>(key)));
    }
  }; // NatSuite.Devices.Internal.CodeAttribute
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: NatSuite::Devices::Internal::CodeAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
