// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: NatSuite.Devices.Internal.NativeCameraDevice
#include "NatSuite/Devices/Internal/NativeCameraDevice.hpp"
// Including type: System.Runtime.InteropServices.GCHandle
#include "System/Runtime/InteropServices/GCHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: TaskCompletionSource`1<TResult>
  template<typename TResult>
  class TaskCompletionSource_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture2D
  class Texture2D;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass60_0);
DEFINE_IL2CPP_ARG_TYPE(::NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass60_0*, "NatSuite.Devices.Internal", "NativeCameraDevice/<>c__DisplayClass60_0");
// Type namespace: NatSuite.Devices.Internal
namespace NatSuite::Devices::Internal {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: NatSuite.Devices.Internal.NativeCameraDevice/NatSuite.Devices.Internal.<>c__DisplayClass60_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class NativeCameraDevice::$$c__DisplayClass60_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Runtime.InteropServices.GCHandle handle
    // Size: 0x4
    // Offset: 0x10
    ::System::Runtime::InteropServices::GCHandle handle;
    // Field size check
    static_assert(sizeof(::System::Runtime::InteropServices::GCHandle) == 0x4);
    // Padding between fields: handle and: captureTask
    char __padding0[0x4] = {};
    // public System.Threading.Tasks.TaskCompletionSource`1<UnityEngine.Texture2D> captureTask
    // Size: 0x8
    // Offset: 0x18
    ::System::Threading::Tasks::TaskCompletionSource_1<::UnityEngine::Texture2D*>* captureTask;
    // Field size check
    static_assert(sizeof(::System::Threading::Tasks::TaskCompletionSource_1<::UnityEngine::Texture2D*>*) == 0x8);
    public:
    // Get instance field reference: public System.Runtime.InteropServices.GCHandle handle
    [[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::GCHandle& dyn_handle();
    // Get instance field reference: public System.Threading.Tasks.TaskCompletionSource`1<UnityEngine.Texture2D> captureTask
    [[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<::UnityEngine::Texture2D*>*& dyn_captureTask();
    // public System.Void .ctor()
    // Offset: 0x19656D4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NativeCameraDevice::$$c__DisplayClass60_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass60_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NativeCameraDevice::$$c__DisplayClass60_0*, creationType>()));
    }
    // System.Void <CapturePhoto>b__0(System.IntPtr pixelBuffer, System.Int32 width, System.Int32 height, System.Int64 timestamp)
    // Offset: 0x19656DC
    void $CapturePhoto$b__0(::System::IntPtr pixelBuffer, int width, int height, int64_t timestamp);
  }; // NatSuite.Devices.Internal.NativeCameraDevice/NatSuite.Devices.Internal.<>c__DisplayClass60_0
  #pragma pack(pop)
  static check_size<sizeof(NativeCameraDevice::$$c__DisplayClass60_0), 24 + sizeof(::System::Threading::Tasks::TaskCompletionSource_1<::UnityEngine::Texture2D*>*)> __NatSuite_Devices_Internal_NativeCameraDevice_$$c__DisplayClass60_0SizeCheck;
  static_assert(sizeof(NativeCameraDevice::$$c__DisplayClass60_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass60_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass60_0::$CapturePhoto$b__0
// Il2CppName: <CapturePhoto>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass60_0::*)(::System::IntPtr, int, int, int64_t)>(&NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass60_0::$CapturePhoto$b__0)> {
  static const MethodInfo* get() {
    static auto* pixelBuffer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* timestamp = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass60_0*), "<CapturePhoto>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pixelBuffer, width, height, timestamp});
  }
};
