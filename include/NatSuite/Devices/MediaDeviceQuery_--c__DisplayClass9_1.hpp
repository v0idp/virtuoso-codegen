// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: NatSuite.Devices.MediaDeviceQuery
#include "NatSuite/Devices/MediaDeviceQuery.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: NatSuite::Devices
namespace NatSuite::Devices {
  // Forward declaring type: IMediaDevice
  class IMediaDevice;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::NatSuite::Devices::MediaDeviceQuery::$$c__DisplayClass9_1);
DEFINE_IL2CPP_ARG_TYPE(::NatSuite::Devices::MediaDeviceQuery::$$c__DisplayClass9_1*, "NatSuite.Devices", "MediaDeviceQuery/<>c__DisplayClass9_1");
// Type namespace: NatSuite.Devices
namespace NatSuite::Devices {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.<>c__DisplayClass9_1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class MediaDeviceQuery::$$c__DisplayClass9_1 : public ::Il2CppObject {
    public:
    public:
    // public NatSuite.Devices.IMediaDevice device
    // Size: 0x8
    // Offset: 0x10
    ::NatSuite::Devices::IMediaDevice* device;
    // Field size check
    static_assert(sizeof(::NatSuite::Devices::IMediaDevice*) == 0x8);
    public:
    // Creating conversion operator: operator ::NatSuite::Devices::IMediaDevice*
    constexpr operator ::NatSuite::Devices::IMediaDevice*() const noexcept {
      return device;
    }
    // Get instance field reference: public NatSuite.Devices.IMediaDevice device
    [[deprecated]] ::NatSuite::Devices::IMediaDevice*& dyn_device();
    // System.Boolean <.ctor>b__1(NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion criterion)
    // Offset: 0x19613CC
    bool $_ctor$b__1(::NatSuite::Devices::MediaDeviceQuery::Criterion* criterion);
    // public System.Void .ctor()
    // Offset: 0x19613C4
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MediaDeviceQuery::$$c__DisplayClass9_1* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::$$c__DisplayClass9_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MediaDeviceQuery::$$c__DisplayClass9_1*, creationType>()));
    }
  }; // NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.<>c__DisplayClass9_1
  #pragma pack(pop)
  static check_size<sizeof(MediaDeviceQuery::$$c__DisplayClass9_1), 16 + sizeof(::NatSuite::Devices::IMediaDevice*)> __NatSuite_Devices_MediaDeviceQuery_$$c__DisplayClass9_1SizeCheck;
  static_assert(sizeof(MediaDeviceQuery::$$c__DisplayClass9_1) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: NatSuite::Devices::MediaDeviceQuery::$$c__DisplayClass9_1::$_ctor$b__1
// Il2CppName: <.ctor>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NatSuite::Devices::MediaDeviceQuery::$$c__DisplayClass9_1::*)(::NatSuite::Devices::MediaDeviceQuery::Criterion*)>(&NatSuite::Devices::MediaDeviceQuery::$$c__DisplayClass9_1::$_ctor$b__1)> {
  static const MethodInfo* get() {
    static auto* criterion = &::il2cpp_utils::GetClassFromName("NatSuite.Devices", "MediaDeviceQuery/Criterion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::MediaDeviceQuery::$$c__DisplayClass9_1*), "<.ctor>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{criterion});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::MediaDeviceQuery::$$c__DisplayClass9_1::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
