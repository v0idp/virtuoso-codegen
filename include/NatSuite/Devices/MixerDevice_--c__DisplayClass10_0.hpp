// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: NatSuite.Devices.MixerDevice
#include "NatSuite/Devices/MixerDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: NatSuite::Devices
namespace NatSuite::Devices {
  // Forward declaring type: SampleBufferDelegate
  class SampleBufferDelegate;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0);
DEFINE_IL2CPP_ARG_TYPE(::NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0*, "NatSuite.Devices", "MixerDevice/<>c__DisplayClass10_0");
// Type namespace: NatSuite.Devices
namespace NatSuite::Devices {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: NatSuite.Devices.MixerDevice/NatSuite.Devices.<>c__DisplayClass10_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class MixerDevice::$$c__DisplayClass10_0 : public ::Il2CppObject {
    public:
    public:
    // public NatSuite.Devices.MixerDevice <>4__this
    // Size: 0x8
    // Offset: 0x10
    ::NatSuite::Devices::MixerDevice* $$4__this;
    // Field size check
    static_assert(sizeof(::NatSuite::Devices::MixerDevice*) == 0x8);
    // public System.Single[] copyBuffer
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<float> copyBuffer;
    // Field size check
    static_assert(sizeof(::ArrayW<float>) == 0x8);
    // public NatSuite.Devices.SampleBufferDelegate delegate
    // Size: 0x8
    // Offset: 0x20
    ::NatSuite::Devices::SampleBufferDelegate* delegate;
    // Field size check
    static_assert(sizeof(::NatSuite::Devices::SampleBufferDelegate*) == 0x8);
    public:
    // Get instance field reference: public NatSuite.Devices.MixerDevice <>4__this
    [[deprecated("Use field access instead!")]] ::NatSuite::Devices::MixerDevice*& dyn_$$4__this();
    // Get instance field reference: public System.Single[] copyBuffer
    [[deprecated("Use field access instead!")]] ::ArrayW<float>& dyn_copyBuffer();
    // Get instance field reference: public NatSuite.Devices.SampleBufferDelegate delegate
    [[deprecated("Use field access instead!")]] ::NatSuite::Devices::SampleBufferDelegate*& dyn_delegate();
    // public System.Void .ctor()
    // Offset: 0x1964494
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MixerDevice::$$c__DisplayClass10_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MixerDevice::$$c__DisplayClass10_0*, creationType>()));
    }
    // System.Void <StartRunning>b__0(System.Single[] sampleBuffer, System.Int64 timestamp)
    // Offset: 0x196449C
    void $StartRunning$b__0(::ArrayW<float> sampleBuffer, int64_t timestamp);
    // System.Void <StartRunning>b__1(System.Single[] sampleBuffer, System.Int64 timestamp)
    // Offset: 0x196463C
    void $StartRunning$b__1(::ArrayW<float> sampleBuffer, int64_t timestamp);
  }; // NatSuite.Devices.MixerDevice/NatSuite.Devices.<>c__DisplayClass10_0
  #pragma pack(pop)
  static check_size<sizeof(MixerDevice::$$c__DisplayClass10_0), 32 + sizeof(::NatSuite::Devices::SampleBufferDelegate*)> __NatSuite_Devices_MixerDevice_$$c__DisplayClass10_0SizeCheck;
  static_assert(sizeof(MixerDevice::$$c__DisplayClass10_0) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0::$StartRunning$b__0
// Il2CppName: <StartRunning>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0::*)(::ArrayW<float>, int64_t)>(&NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0::$StartRunning$b__0)> {
  static const MethodInfo* get() {
    static auto* sampleBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* timestamp = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0*), "<StartRunning>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sampleBuffer, timestamp});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0::$StartRunning$b__1
// Il2CppName: <StartRunning>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0::*)(::ArrayW<float>, int64_t)>(&NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0::$StartRunning$b__1)> {
  static const MethodInfo* get() {
    static auto* sampleBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* timestamp = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0*), "<StartRunning>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sampleBuffer, timestamp});
  }
};
