// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MainScript
#include "GlobalNamespace/MainScript.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Forward declaring namespace: Proyecto26
namespace Proyecto26 {
  // Forward declaring type: RequestException
  class RequestException;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::MainScript::$$c);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::MainScript::$$c*, "", "MainScript/<>c");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: MainScript/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class MainScript::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly MainScript/<>c <>9
    static ::GlobalNamespace::MainScript::$$c* _get_$$9();
    // Set static field: static public readonly MainScript/<>c <>9
    static void _set_$$9(::GlobalNamespace::MainScript::$$c* value);
    // Get static field: static public System.Action`2<Proyecto26.RequestException,System.Int32> <>9__5_1
    static ::System::Action_2<::Proyecto26::RequestException*, int>* _get_$$9__5_1();
    // Set static field: static public System.Action`2<Proyecto26.RequestException,System.Int32> <>9__5_1
    static void _set_$$9__5_1(::System::Action_2<::Proyecto26::RequestException*, int>* value);
    // static private System.Void .cctor()
    // Offset: 0x19603D8
    static void _cctor();
    // System.Void <Put>b__5_1(Proyecto26.RequestException err, System.Int32 retries)
    // Offset: 0x1960440
    void $Put$b__5_1(::Proyecto26::RequestException* err, int retries);
    // public System.Void .ctor()
    // Offset: 0x1960438
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MainScript::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainScript::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MainScript::$$c*, creationType>()));
    }
  }; // MainScript/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::MainScript::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::MainScript::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MainScript::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MainScript::$$c::$Put$b__5_1
// Il2CppName: <Put>b__5_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MainScript::$$c::*)(::Proyecto26::RequestException*, int)>(&GlobalNamespace::MainScript::$$c::$Put$b__5_1)> {
  static const MethodInfo* get() {
    static auto* err = &::il2cpp_utils::GetClassFromName("Proyecto26", "RequestException")->byval_arg;
    static auto* retries = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MainScript::$$c*), "<Put>b__5_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{err, retries});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MainScript::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
