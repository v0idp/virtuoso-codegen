// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: TimeOfDayType
#include "GlobalNamespace/TimeOfDayType.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Light
  class Light;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: TimeOfDayPreset
  class TimeOfDayPreset;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::TimeOfDayPreset);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::TimeOfDayPreset*, "", "TimeOfDayPreset");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: TimeOfDayPreset
  // [TokenAttribute] Offset: FFFFFFFF
  class TimeOfDayPreset : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public TimeOfDayType timeOfDay
    // Size: 0x4
    // Offset: 0x18
    ::GlobalNamespace::TimeOfDayType timeOfDay;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::TimeOfDayType) == 0x4);
    // Padding between fields: timeOfDay and: SkyboxMaterial
    char __padding0[0x4] = {};
    // public UnityEngine.Material SkyboxMaterial
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Material* SkyboxMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Light directionalLight
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Light* directionalLight;
    // Field size check
    static_assert(sizeof(::UnityEngine::Light*) == 0x8);
    // public UnityEngine.Transform SunTransform
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Transform* SunTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // [ColorUsageAttribute] Offset: 0x782E5C
    // public UnityEngine.Color SunColor
    // Size: 0x10
    // Offset: 0x38
    ::UnityEngine::Color SunColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // public UnityEngine.GameObject[] ObjectsToActivate
    // Size: 0x8
    // Offset: 0x48
    ::ArrayW<::UnityEngine::GameObject*> ObjectsToActivate;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public TimeOfDayType timeOfDay
    [[deprecated]] ::GlobalNamespace::TimeOfDayType& dyn_timeOfDay();
    // Get instance field reference: public UnityEngine.Material SkyboxMaterial
    [[deprecated]] ::UnityEngine::Material*& dyn_SkyboxMaterial();
    // Get instance field reference: public UnityEngine.Light directionalLight
    [[deprecated]] ::UnityEngine::Light*& dyn_directionalLight();
    // Get instance field reference: public UnityEngine.Transform SunTransform
    [[deprecated]] ::UnityEngine::Transform*& dyn_SunTransform();
    // Get instance field reference: public UnityEngine.Color SunColor
    [[deprecated]] ::UnityEngine::Color& dyn_SunColor();
    // Get instance field reference: public UnityEngine.GameObject[] ObjectsToActivate
    [[deprecated]] ::ArrayW<::UnityEngine::GameObject*>& dyn_ObjectsToActivate();
    // public System.Void .ctor()
    // Offset: 0xA269F4
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TimeOfDayPreset* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayPreset::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TimeOfDayPreset*, creationType>()));
    }
  }; // TimeOfDayPreset
  #pragma pack(pop)
  static check_size<sizeof(TimeOfDayPreset), 72 + sizeof(::ArrayW<::UnityEngine::GameObject*>)> __GlobalNamespace_TimeOfDayPresetSizeCheck;
  static_assert(sizeof(TimeOfDayPreset) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::TimeOfDayPreset::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
