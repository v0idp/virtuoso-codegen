// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ovrAvatarMaterialLayerSampleMode
  struct ovrAvatarMaterialLayerSampleMode;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ovrAvatarMaterialLayerSampleMode, "", "ovrAvatarMaterialLayerSampleMode");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: ovrAvatarMaterialLayerSampleMode
  // [TokenAttribute] Offset: FFFFFFFF
  struct ovrAvatarMaterialLayerSampleMode/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ovrAvatarMaterialLayerSampleMode
    constexpr ovrAvatarMaterialLayerSampleMode(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public ovrAvatarMaterialLayerSampleMode Color
    static constexpr const int Color = 0;
    // Get static field: static public ovrAvatarMaterialLayerSampleMode Color
    static ::GlobalNamespace::ovrAvatarMaterialLayerSampleMode _get_Color();
    // Set static field: static public ovrAvatarMaterialLayerSampleMode Color
    static void _set_Color(::GlobalNamespace::ovrAvatarMaterialLayerSampleMode value);
    // static field const value: static public ovrAvatarMaterialLayerSampleMode Texture
    static constexpr const int Texture = 1;
    // Get static field: static public ovrAvatarMaterialLayerSampleMode Texture
    static ::GlobalNamespace::ovrAvatarMaterialLayerSampleMode _get_Texture();
    // Set static field: static public ovrAvatarMaterialLayerSampleMode Texture
    static void _set_Texture(::GlobalNamespace::ovrAvatarMaterialLayerSampleMode value);
    // static field const value: static public ovrAvatarMaterialLayerSampleMode TextureSingleChannel
    static constexpr const int TextureSingleChannel = 2;
    // Get static field: static public ovrAvatarMaterialLayerSampleMode TextureSingleChannel
    static ::GlobalNamespace::ovrAvatarMaterialLayerSampleMode _get_TextureSingleChannel();
    // Set static field: static public ovrAvatarMaterialLayerSampleMode TextureSingleChannel
    static void _set_TextureSingleChannel(::GlobalNamespace::ovrAvatarMaterialLayerSampleMode value);
    // static field const value: static public ovrAvatarMaterialLayerSampleMode Parallax
    static constexpr const int Parallax = 3;
    // Get static field: static public ovrAvatarMaterialLayerSampleMode Parallax
    static ::GlobalNamespace::ovrAvatarMaterialLayerSampleMode _get_Parallax();
    // Set static field: static public ovrAvatarMaterialLayerSampleMode Parallax
    static void _set_Parallax(::GlobalNamespace::ovrAvatarMaterialLayerSampleMode value);
    // static field const value: static public ovrAvatarMaterialLayerSampleMode Count
    static constexpr const int Count = 4;
    // Get static field: static public ovrAvatarMaterialLayerSampleMode Count
    static ::GlobalNamespace::ovrAvatarMaterialLayerSampleMode _get_Count();
    // Set static field: static public ovrAvatarMaterialLayerSampleMode Count
    static void _set_Count(::GlobalNamespace::ovrAvatarMaterialLayerSampleMode value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // ovrAvatarMaterialLayerSampleMode
  #pragma pack(pop)
  static check_size<sizeof(ovrAvatarMaterialLayerSampleMode), 0 + sizeof(int)> __GlobalNamespace_ovrAvatarMaterialLayerSampleModeSizeCheck;
  static_assert(sizeof(ovrAvatarMaterialLayerSampleMode) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
