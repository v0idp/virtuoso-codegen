// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ovrAvatarMaterialMaskType
  struct ovrAvatarMaterialMaskType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ovrAvatarMaterialMaskType, "", "ovrAvatarMaterialMaskType");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: ovrAvatarMaterialMaskType
  // [TokenAttribute] Offset: FFFFFFFF
  struct ovrAvatarMaterialMaskType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ovrAvatarMaterialMaskType
    constexpr ovrAvatarMaterialMaskType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public ovrAvatarMaterialMaskType None
    static constexpr const int None = 0;
    // Get static field: static public ovrAvatarMaterialMaskType None
    static ::GlobalNamespace::ovrAvatarMaterialMaskType _get_None();
    // Set static field: static public ovrAvatarMaterialMaskType None
    static void _set_None(::GlobalNamespace::ovrAvatarMaterialMaskType value);
    // static field const value: static public ovrAvatarMaterialMaskType Positional
    static constexpr const int Positional = 1;
    // Get static field: static public ovrAvatarMaterialMaskType Positional
    static ::GlobalNamespace::ovrAvatarMaterialMaskType _get_Positional();
    // Set static field: static public ovrAvatarMaterialMaskType Positional
    static void _set_Positional(::GlobalNamespace::ovrAvatarMaterialMaskType value);
    // static field const value: static public ovrAvatarMaterialMaskType ViewReflection
    static constexpr const int ViewReflection = 2;
    // Get static field: static public ovrAvatarMaterialMaskType ViewReflection
    static ::GlobalNamespace::ovrAvatarMaterialMaskType _get_ViewReflection();
    // Set static field: static public ovrAvatarMaterialMaskType ViewReflection
    static void _set_ViewReflection(::GlobalNamespace::ovrAvatarMaterialMaskType value);
    // static field const value: static public ovrAvatarMaterialMaskType Fresnel
    static constexpr const int Fresnel = 3;
    // Get static field: static public ovrAvatarMaterialMaskType Fresnel
    static ::GlobalNamespace::ovrAvatarMaterialMaskType _get_Fresnel();
    // Set static field: static public ovrAvatarMaterialMaskType Fresnel
    static void _set_Fresnel(::GlobalNamespace::ovrAvatarMaterialMaskType value);
    // static field const value: static public ovrAvatarMaterialMaskType Pulse
    static constexpr const int Pulse = 4;
    // Get static field: static public ovrAvatarMaterialMaskType Pulse
    static ::GlobalNamespace::ovrAvatarMaterialMaskType _get_Pulse();
    // Set static field: static public ovrAvatarMaterialMaskType Pulse
    static void _set_Pulse(::GlobalNamespace::ovrAvatarMaterialMaskType value);
    // static field const value: static public ovrAvatarMaterialMaskType Count
    static constexpr const int Count = 5;
    // Get static field: static public ovrAvatarMaterialMaskType Count
    static ::GlobalNamespace::ovrAvatarMaterialMaskType _get_Count();
    // Set static field: static public ovrAvatarMaterialMaskType Count
    static void _set_Count(::GlobalNamespace::ovrAvatarMaterialMaskType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // ovrAvatarMaterialMaskType
  #pragma pack(pop)
  static check_size<sizeof(ovrAvatarMaterialMaskType), 0 + sizeof(int)> __GlobalNamespace_ovrAvatarMaterialMaskTypeSizeCheck;
  static_assert(sizeof(ovrAvatarMaterialMaskType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
