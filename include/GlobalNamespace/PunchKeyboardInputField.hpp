// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: Key
  class Key;
}
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshPro
  class TextMeshPro;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: PunchKeyboardInputField
  class PunchKeyboardInputField;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::PunchKeyboardInputField);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::PunchKeyboardInputField*, "", "PunchKeyboardInputField");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x49
  #pragma pack(push, 1)
  // Autogenerated type: PunchKeyboardInputField
  // [TokenAttribute] Offset: FFFFFFFF
  class PunchKeyboardInputField : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GlobalNamespace::PunchKeyboardInputField::$UpdateCursorPosition$d__15
    class $UpdateCursorPosition$d__15;
    public:
    // private TMPro.TextMeshPro _infoLabel
    // Size: 0x8
    // Offset: 0x18
    ::TMPro::TextMeshPro* infoLabel;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshPro*) == 0x8);
    // private TMPro.TextMeshPro _textField
    // Size: 0x8
    // Offset: 0x20
    ::TMPro::TextMeshPro* textField;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshPro*) == 0x8);
    // private UnityEngine.GameObject _cursor
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* cursor;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Single _cursorOffset
    // Size: 0x4
    // Offset: 0x30
    float cursorOffset;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector3 _cursorStartPosition
    // Size: 0xC
    // Offset: 0x34
    ::UnityEngine::Vector3 cursorStartPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public System.Action OnEnterPressed
    // Size: 0x8
    // Offset: 0x40
    ::System::Action* OnEnterPressed;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Boolean _isMultiline
    // Size: 0x1
    // Offset: 0x48
    bool isMultiline;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private TMPro.TextMeshPro _infoLabel
    [[deprecated("Use field access instead!")]] ::TMPro::TextMeshPro*& dyn__infoLabel();
    // Get instance field reference: private TMPro.TextMeshPro _textField
    [[deprecated("Use field access instead!")]] ::TMPro::TextMeshPro*& dyn__textField();
    // Get instance field reference: private UnityEngine.GameObject _cursor
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn__cursor();
    // Get instance field reference: private System.Single _cursorOffset
    [[deprecated("Use field access instead!")]] float& dyn__cursorOffset();
    // Get instance field reference: private UnityEngine.Vector3 _cursorStartPosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn__cursorStartPosition();
    // Get instance field reference: public System.Action OnEnterPressed
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_OnEnterPressed();
    // Get instance field reference: private System.Boolean _isMultiline
    [[deprecated("Use field access instead!")]] bool& dyn__isMultiline();
    // public System.String get_Text()
    // Offset: 0xB2B868
    ::StringW get_Text();
    // public System.Void set_Text(System.String value)
    // Offset: 0xB2BA04
    void set_Text(::StringW value);
    // public System.Void .ctor()
    // Offset: 0xB2C0CC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PunchKeyboardInputField* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PunchKeyboardInputField::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PunchKeyboardInputField*, creationType>()));
    }
    // private System.Void Awake()
    // Offset: 0xB2BAE4
    void Awake();
    // protected System.Void OnEnable()
    // Offset: 0xB2BC10
    void OnEnable();
    // private System.Void OnDestroy()
    // Offset: 0xB2BC3C
    void OnDestroy();
    // public System.Void Set(System.String startText, System.String infoText, System.Boolean multiline)
    // Offset: 0xB2AE58
    void Set(::StringW startText, ::StringW infoText, bool multiline);
    // public System.Void ClearText()
    // Offset: 0xB2B8CC
    void ClearText();
    // private System.Collections.IEnumerator UpdateCursorPosition()
    // Offset: 0xB2BA78
    ::System::Collections::IEnumerator* UpdateCursorPosition();
    // private System.Void KeyPressed(Key key)
    // Offset: 0xB2BD40
    void KeyPressed(::GlobalNamespace::Key* key);
    // private System.Void BacksspacePressed()
    // Offset: 0xB2BE20
    void BacksspacePressed();
    // private System.Void EnterPressed()
    // Offset: 0xB2BED4
    void EnterPressed();
    // private System.Void Update()
    // Offset: 0xB2BF6C
    void Update();
    // private System.Void GetExternalKeyboardInput()
    // Offset: 0xB2BFD0
    void GetExternalKeyboardInput();
  }; // PunchKeyboardInputField
  #pragma pack(pop)
  static check_size<sizeof(PunchKeyboardInputField), 72 + sizeof(bool)> __GlobalNamespace_PunchKeyboardInputFieldSizeCheck;
  static_assert(sizeof(PunchKeyboardInputField) == 0x49);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::PunchKeyboardInputField::get_Text
// Il2CppName: get_Text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::PunchKeyboardInputField::*)()>(&GlobalNamespace::PunchKeyboardInputField::get_Text)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PunchKeyboardInputField*), "get_Text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PunchKeyboardInputField::set_Text
// Il2CppName: set_Text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PunchKeyboardInputField::*)(::StringW)>(&GlobalNamespace::PunchKeyboardInputField::set_Text)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PunchKeyboardInputField*), "set_Text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PunchKeyboardInputField::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::PunchKeyboardInputField::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PunchKeyboardInputField::*)()>(&GlobalNamespace::PunchKeyboardInputField::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PunchKeyboardInputField*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PunchKeyboardInputField::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PunchKeyboardInputField::*)()>(&GlobalNamespace::PunchKeyboardInputField::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PunchKeyboardInputField*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PunchKeyboardInputField::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PunchKeyboardInputField::*)()>(&GlobalNamespace::PunchKeyboardInputField::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PunchKeyboardInputField*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PunchKeyboardInputField::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PunchKeyboardInputField::*)(::StringW, ::StringW, bool)>(&GlobalNamespace::PunchKeyboardInputField::Set)> {
  static const MethodInfo* get() {
    static auto* startText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* infoText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* multiline = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PunchKeyboardInputField*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startText, infoText, multiline});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PunchKeyboardInputField::ClearText
// Il2CppName: ClearText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PunchKeyboardInputField::*)()>(&GlobalNamespace::PunchKeyboardInputField::ClearText)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PunchKeyboardInputField*), "ClearText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PunchKeyboardInputField::UpdateCursorPosition
// Il2CppName: UpdateCursorPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GlobalNamespace::PunchKeyboardInputField::*)()>(&GlobalNamespace::PunchKeyboardInputField::UpdateCursorPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PunchKeyboardInputField*), "UpdateCursorPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PunchKeyboardInputField::KeyPressed
// Il2CppName: KeyPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PunchKeyboardInputField::*)(::GlobalNamespace::Key*)>(&GlobalNamespace::PunchKeyboardInputField::KeyPressed)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("", "Key")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PunchKeyboardInputField*), "KeyPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PunchKeyboardInputField::BacksspacePressed
// Il2CppName: BacksspacePressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PunchKeyboardInputField::*)()>(&GlobalNamespace::PunchKeyboardInputField::BacksspacePressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PunchKeyboardInputField*), "BacksspacePressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PunchKeyboardInputField::EnterPressed
// Il2CppName: EnterPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PunchKeyboardInputField::*)()>(&GlobalNamespace::PunchKeyboardInputField::EnterPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PunchKeyboardInputField*), "EnterPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PunchKeyboardInputField::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PunchKeyboardInputField::*)()>(&GlobalNamespace::PunchKeyboardInputField::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PunchKeyboardInputField*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PunchKeyboardInputField::GetExternalKeyboardInput
// Il2CppName: GetExternalKeyboardInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PunchKeyboardInputField::*)()>(&GlobalNamespace::PunchKeyboardInputField::GetExternalKeyboardInput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PunchKeyboardInputField*), "GetExternalKeyboardInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
