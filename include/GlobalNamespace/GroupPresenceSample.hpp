// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Text
  class Text;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: Oculus::Platform
namespace Oculus::Platform {
  // Forward declaring type: Message`1<T>
  template<typename T>
  class Message_1;
  // Forward declaring type: Message
  class Message;
}
// Forward declaring namespace: Oculus::Platform::Models
namespace Oculus::Platform::Models {
  // Forward declaring type: GroupPresenceJoinIntent
  class GroupPresenceJoinIntent;
  // Forward declaring type: GroupPresenceLeaveIntent
  class GroupPresenceLeaveIntent;
  // Forward declaring type: LaunchInvitePanelFlowResult
  class LaunchInvitePanelFlowResult;
  // Forward declaring type: DestinationList
  class DestinationList;
  // Forward declaring type: User
  class User;
  // Forward declaring type: PlatformInitialize
  class PlatformInitialize;
  // Forward declaring type: InvitePanelResultInfo
  class InvitePanelResultInfo;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: GroupPresenceSample
  class GroupPresenceSample;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::GroupPresenceSample);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GroupPresenceSample*, "", "GroupPresenceSample");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x5D
  #pragma pack(push, 1)
  // Autogenerated type: GroupPresenceSample
  // [TokenAttribute] Offset: FFFFFFFF
  class GroupPresenceSample : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.Boolean IsJoinable
    // Size: 0x1
    // Offset: 0x18
    bool IsJoinable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IsJoinable and: LobbySessionID
    char __padding0[0x7] = {};
    // public System.String LobbySessionID
    // Size: 0x8
    // Offset: 0x20
    ::StringW LobbySessionID;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String MatchSessionID
    // Size: 0x8
    // Offset: 0x28
    ::StringW MatchSessionID;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.UInt64 SuggestedUserID
    // Size: 0x8
    // Offset: 0x30
    uint64_t SuggestedUserID;
    // Field size check
    static_assert(sizeof(uint64_t) == 0x8);
    // public UnityEngine.UI.Text InVRConsole
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::UI::Text* InVRConsole;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public UnityEngine.UI.Text DestinationsConsole
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::UI::Text* DestinationsConsole;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // private System.Collections.Generic.List`1<System.String> DestinationAPINames
    // Size: 0x8
    // Offset: 0x48
    ::System::Collections::Generic::List_1<::StringW>* DestinationAPINames;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // private System.UInt64 LoggedInUserID
    // Size: 0x8
    // Offset: 0x50
    uint64_t LoggedInUserID;
    // Field size check
    static_assert(sizeof(uint64_t) == 0x8);
    // private System.Int32 DestinationIndex
    // Size: 0x4
    // Offset: 0x58
    int DestinationIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean OnlyPushUpOnce
    // Size: 0x1
    // Offset: 0x5C
    bool OnlyPushUpOnce;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.Boolean IsJoinable
    [[deprecated("Use field access instead!")]] bool& dyn_IsJoinable();
    // Get instance field reference: public System.String LobbySessionID
    [[deprecated("Use field access instead!")]] ::StringW& dyn_LobbySessionID();
    // Get instance field reference: public System.String MatchSessionID
    [[deprecated("Use field access instead!")]] ::StringW& dyn_MatchSessionID();
    // Get instance field reference: public System.UInt64 SuggestedUserID
    [[deprecated("Use field access instead!")]] uint64_t& dyn_SuggestedUserID();
    // Get instance field reference: public UnityEngine.UI.Text InVRConsole
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_InVRConsole();
    // Get instance field reference: public UnityEngine.UI.Text DestinationsConsole
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_DestinationsConsole();
    // Get instance field reference: private System.Collections.Generic.List`1<System.String> DestinationAPINames
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_DestinationAPINames();
    // Get instance field reference: private System.UInt64 LoggedInUserID
    [[deprecated("Use field access instead!")]] uint64_t& dyn_LoggedInUserID();
    // Get instance field reference: private System.Int32 DestinationIndex
    [[deprecated("Use field access instead!")]] int& dyn_DestinationIndex();
    // Get instance field reference: private System.Boolean OnlyPushUpOnce
    [[deprecated("Use field access instead!")]] bool& dyn_OnlyPushUpOnce();
    // public System.Void .ctor()
    // Offset: 0x9344E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GroupPresenceSample* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GroupPresenceSample*, creationType>()));
    }
    // private System.Void Start()
    // Offset: 0x932DD0
    void Start();
    // private System.Void SetPresence()
    // Offset: 0x932F9C
    void SetPresence();
    // private System.Void ClearPresence()
    // Offset: 0x933158
    void ClearPresence();
    // private System.Void LaunchInvitePanel()
    // Offset: 0x933214
    void LaunchInvitePanel();
    // private System.Void LaunchRosterPanel()
    // Offset: 0x93333C
    void LaunchRosterPanel();
    // private System.Void OnJoinIntentChangeNotif(Oculus.Platform.Message`1<Oculus.Platform.Models.GroupPresenceJoinIntent> message)
    // Offset: 0x93343C
    void OnJoinIntentChangeNotif(::Oculus::Platform::Message_1<::Oculus::Platform::Models::GroupPresenceJoinIntent*>* message);
    // private System.Void OnLeaveIntentChangeNotif(Oculus.Platform.Message`1<Oculus.Platform.Models.GroupPresenceLeaveIntent> message)
    // Offset: 0x9337B4
    void OnLeaveIntentChangeNotif(::Oculus::Platform::Message_1<::Oculus::Platform::Models::GroupPresenceLeaveIntent*>* message);
    // private System.Void OnInviteSentNotif(Oculus.Platform.Message`1<Oculus.Platform.Models.LaunchInvitePanelFlowResult> message)
    // Offset: 0x933A38
    void OnInviteSentNotif(::Oculus::Platform::Message_1<::Oculus::Platform::Models::LaunchInvitePanelFlowResult*>* message);
    // private System.Void OnGetDestinations(Oculus.Platform.Message`1<Oculus.Platform.Models.DestinationList> message)
    // Offset: 0x933DBC
    void OnGetDestinations(::Oculus::Platform::Message_1<::Oculus::Platform::Models::DestinationList*>* message);
    // private System.Void Update()
    // Offset: 0x934210
    void Update();
    // private System.Void ScrollThroughDestinations()
    // Offset: 0x93432C
    void ScrollThroughDestinations();
    // private System.Void UpdateDestinationsConsole()
    // Offset: 0x93409C
    void UpdateDestinationsConsole();
    // private System.Void OnLoggedInUser(Oculus.Platform.Message`1<Oculus.Platform.Models.User> message)
    // Offset: 0x93441C
    void OnLoggedInUser(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message);
    // private System.Void UpdateConsole(System.String value)
    // Offset: 0x932EE4
    void UpdateConsole(::StringW value);
    // private System.Boolean PressAButton()
    // Offset: 0x9342FC
    bool PressAButton();
    // private System.Boolean PressBButton()
    // Offset: 0x934308
    bool PressBButton();
    // private System.Boolean PressXButton()
    // Offset: 0x934314
    bool PressXButton();
    // private System.Boolean PressYButton()
    // Offset: 0x934320
    bool PressYButton();
    // private System.Boolean PressUp()
    // Offset: 0x934404
    bool PressUp();
    // private System.Boolean PressDown()
    // Offset: 0x934410
    bool PressDown();
    // private System.Void <Start>b__8_0(Oculus.Platform.Message`1<Oculus.Platform.Models.PlatformInitialize> message)
    // Offset: 0x934564
    void $Start$b__8_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::PlatformInitialize*>* message);
    // private System.Void <SetPresence>b__9_0(Oculus.Platform.Message message)
    // Offset: 0x934840
    void $SetPresence$b__9_0(::Oculus::Platform::Message* message);
    // private System.Void <SetPresence>b__9_1(Oculus.Platform.Message`1<Oculus.Platform.Models.User> message2)
    // Offset: 0x934950
    void $SetPresence$b__9_1(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message2);
    // private System.Void <ClearPresence>b__10_0(Oculus.Platform.Message message)
    // Offset: 0x934B6C
    void $ClearPresence$b__10_0(::Oculus::Platform::Message* message);
    // private System.Void <ClearPresence>b__10_1(Oculus.Platform.Message`1<Oculus.Platform.Models.User> message2)
    // Offset: 0x934C7C
    void $ClearPresence$b__10_1(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message2);
    // private System.Void <LaunchInvitePanel>b__11_0(Oculus.Platform.Message`1<Oculus.Platform.Models.InvitePanelResultInfo> message)
    // Offset: 0x934D44
    void $LaunchInvitePanel$b__11_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::InvitePanelResultInfo*>* message);
    // private System.Void <LaunchRosterPanel>b__12_0(Oculus.Platform.Message message)
    // Offset: 0x934DA4
    void $LaunchRosterPanel$b__12_0(::Oculus::Platform::Message* message);
  }; // GroupPresenceSample
  #pragma pack(pop)
  static check_size<sizeof(GroupPresenceSample), 92 + sizeof(bool)> __GlobalNamespace_GroupPresenceSampleSizeCheck;
  static_assert(sizeof(GroupPresenceSample) == 0x5D);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)()>(&GlobalNamespace::GroupPresenceSample::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::SetPresence
// Il2CppName: SetPresence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)()>(&GlobalNamespace::GroupPresenceSample::SetPresence)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "SetPresence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::ClearPresence
// Il2CppName: ClearPresence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)()>(&GlobalNamespace::GroupPresenceSample::ClearPresence)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "ClearPresence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::LaunchInvitePanel
// Il2CppName: LaunchInvitePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)()>(&GlobalNamespace::GroupPresenceSample::LaunchInvitePanel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "LaunchInvitePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::LaunchRosterPanel
// Il2CppName: LaunchRosterPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)()>(&GlobalNamespace::GroupPresenceSample::LaunchRosterPanel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "LaunchRosterPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::OnJoinIntentChangeNotif
// Il2CppName: OnJoinIntentChangeNotif
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)(::Oculus::Platform::Message_1<::Oculus::Platform::Models::GroupPresenceJoinIntent*>*)>(&GlobalNamespace::GroupPresenceSample::OnJoinIntentChangeNotif)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Platform.Models", "GroupPresenceJoinIntent")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "OnJoinIntentChangeNotif", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::OnLeaveIntentChangeNotif
// Il2CppName: OnLeaveIntentChangeNotif
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)(::Oculus::Platform::Message_1<::Oculus::Platform::Models::GroupPresenceLeaveIntent*>*)>(&GlobalNamespace::GroupPresenceSample::OnLeaveIntentChangeNotif)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Platform.Models", "GroupPresenceLeaveIntent")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "OnLeaveIntentChangeNotif", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::OnInviteSentNotif
// Il2CppName: OnInviteSentNotif
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)(::Oculus::Platform::Message_1<::Oculus::Platform::Models::LaunchInvitePanelFlowResult*>*)>(&GlobalNamespace::GroupPresenceSample::OnInviteSentNotif)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Platform.Models", "LaunchInvitePanelFlowResult")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "OnInviteSentNotif", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::OnGetDestinations
// Il2CppName: OnGetDestinations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)(::Oculus::Platform::Message_1<::Oculus::Platform::Models::DestinationList*>*)>(&GlobalNamespace::GroupPresenceSample::OnGetDestinations)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Platform.Models", "DestinationList")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "OnGetDestinations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)()>(&GlobalNamespace::GroupPresenceSample::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::ScrollThroughDestinations
// Il2CppName: ScrollThroughDestinations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)()>(&GlobalNamespace::GroupPresenceSample::ScrollThroughDestinations)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "ScrollThroughDestinations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::UpdateDestinationsConsole
// Il2CppName: UpdateDestinationsConsole
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)()>(&GlobalNamespace::GroupPresenceSample::UpdateDestinationsConsole)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "UpdateDestinationsConsole", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::OnLoggedInUser
// Il2CppName: OnLoggedInUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>*)>(&GlobalNamespace::GroupPresenceSample::OnLoggedInUser)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Platform.Models", "User")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "OnLoggedInUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::UpdateConsole
// Il2CppName: UpdateConsole
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)(::StringW)>(&GlobalNamespace::GroupPresenceSample::UpdateConsole)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "UpdateConsole", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::PressAButton
// Il2CppName: PressAButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::GroupPresenceSample::*)()>(&GlobalNamespace::GroupPresenceSample::PressAButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "PressAButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::PressBButton
// Il2CppName: PressBButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::GroupPresenceSample::*)()>(&GlobalNamespace::GroupPresenceSample::PressBButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "PressBButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::PressXButton
// Il2CppName: PressXButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::GroupPresenceSample::*)()>(&GlobalNamespace::GroupPresenceSample::PressXButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "PressXButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::PressYButton
// Il2CppName: PressYButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::GroupPresenceSample::*)()>(&GlobalNamespace::GroupPresenceSample::PressYButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "PressYButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::PressUp
// Il2CppName: PressUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::GroupPresenceSample::*)()>(&GlobalNamespace::GroupPresenceSample::PressUp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "PressUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::PressDown
// Il2CppName: PressDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::GroupPresenceSample::*)()>(&GlobalNamespace::GroupPresenceSample::PressDown)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "PressDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::$Start$b__8_0
// Il2CppName: <Start>b__8_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)(::Oculus::Platform::Message_1<::Oculus::Platform::Models::PlatformInitialize*>*)>(&GlobalNamespace::GroupPresenceSample::$Start$b__8_0)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Platform.Models", "PlatformInitialize")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "<Start>b__8_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::$SetPresence$b__9_0
// Il2CppName: <SetPresence>b__9_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)(::Oculus::Platform::Message*)>(&GlobalNamespace::GroupPresenceSample::$SetPresence$b__9_0)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "<SetPresence>b__9_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::$SetPresence$b__9_1
// Il2CppName: <SetPresence>b__9_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>*)>(&GlobalNamespace::GroupPresenceSample::$SetPresence$b__9_1)> {
  static const MethodInfo* get() {
    static auto* message2 = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Platform.Models", "User")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "<SetPresence>b__9_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message2});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::$ClearPresence$b__10_0
// Il2CppName: <ClearPresence>b__10_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)(::Oculus::Platform::Message*)>(&GlobalNamespace::GroupPresenceSample::$ClearPresence$b__10_0)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "<ClearPresence>b__10_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::$ClearPresence$b__10_1
// Il2CppName: <ClearPresence>b__10_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>*)>(&GlobalNamespace::GroupPresenceSample::$ClearPresence$b__10_1)> {
  static const MethodInfo* get() {
    static auto* message2 = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Platform.Models", "User")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "<ClearPresence>b__10_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message2});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::$LaunchInvitePanel$b__11_0
// Il2CppName: <LaunchInvitePanel>b__11_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)(::Oculus::Platform::Message_1<::Oculus::Platform::Models::InvitePanelResultInfo*>*)>(&GlobalNamespace::GroupPresenceSample::$LaunchInvitePanel$b__11_0)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Platform.Models", "InvitePanelResultInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "<LaunchInvitePanel>b__11_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GroupPresenceSample::$LaunchRosterPanel$b__12_0
// Il2CppName: <LaunchRosterPanel>b__12_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GroupPresenceSample::*)(::Oculus::Platform::Message*)>(&GlobalNamespace::GroupPresenceSample::$LaunchRosterPanel$b__12_0)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GroupPresenceSample*), "<LaunchRosterPanel>b__12_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
