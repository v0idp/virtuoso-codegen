// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ovrAvatarAssetType
  struct ovrAvatarAssetType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ovrAvatarAssetType, "", "ovrAvatarAssetType");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: ovrAvatarAssetType
  // [TokenAttribute] Offset: FFFFFFFF
  struct ovrAvatarAssetType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ovrAvatarAssetType
    constexpr ovrAvatarAssetType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public ovrAvatarAssetType Mesh
    static constexpr const int Mesh = 0;
    // Get static field: static public ovrAvatarAssetType Mesh
    static ::GlobalNamespace::ovrAvatarAssetType _get_Mesh();
    // Set static field: static public ovrAvatarAssetType Mesh
    static void _set_Mesh(::GlobalNamespace::ovrAvatarAssetType value);
    // static field const value: static public ovrAvatarAssetType Texture
    static constexpr const int Texture = 1;
    // Get static field: static public ovrAvatarAssetType Texture
    static ::GlobalNamespace::ovrAvatarAssetType _get_Texture();
    // Set static field: static public ovrAvatarAssetType Texture
    static void _set_Texture(::GlobalNamespace::ovrAvatarAssetType value);
    // static field const value: static public ovrAvatarAssetType Pose
    static constexpr const int Pose = 2;
    // Get static field: static public ovrAvatarAssetType Pose
    static ::GlobalNamespace::ovrAvatarAssetType _get_Pose();
    // Set static field: static public ovrAvatarAssetType Pose
    static void _set_Pose(::GlobalNamespace::ovrAvatarAssetType value);
    // static field const value: static public ovrAvatarAssetType Material
    static constexpr const int Material = 3;
    // Get static field: static public ovrAvatarAssetType Material
    static ::GlobalNamespace::ovrAvatarAssetType _get_Material();
    // Set static field: static public ovrAvatarAssetType Material
    static void _set_Material(::GlobalNamespace::ovrAvatarAssetType value);
    // static field const value: static public ovrAvatarAssetType CombinedMesh
    static constexpr const int CombinedMesh = 4;
    // Get static field: static public ovrAvatarAssetType CombinedMesh
    static ::GlobalNamespace::ovrAvatarAssetType _get_CombinedMesh();
    // Set static field: static public ovrAvatarAssetType CombinedMesh
    static void _set_CombinedMesh(::GlobalNamespace::ovrAvatarAssetType value);
    // static field const value: static public ovrAvatarAssetType PBSMaterial
    static constexpr const int PBSMaterial = 5;
    // Get static field: static public ovrAvatarAssetType PBSMaterial
    static ::GlobalNamespace::ovrAvatarAssetType _get_PBSMaterial();
    // Set static field: static public ovrAvatarAssetType PBSMaterial
    static void _set_PBSMaterial(::GlobalNamespace::ovrAvatarAssetType value);
    // static field const value: static public ovrAvatarAssetType FailedLoad
    static constexpr const int FailedLoad = 6;
    // Get static field: static public ovrAvatarAssetType FailedLoad
    static ::GlobalNamespace::ovrAvatarAssetType _get_FailedLoad();
    // Set static field: static public ovrAvatarAssetType FailedLoad
    static void _set_FailedLoad(::GlobalNamespace::ovrAvatarAssetType value);
    // static field const value: static public ovrAvatarAssetType Count
    static constexpr const int Count = 7;
    // Get static field: static public ovrAvatarAssetType Count
    static ::GlobalNamespace::ovrAvatarAssetType _get_Count();
    // Set static field: static public ovrAvatarAssetType Count
    static void _set_Count(::GlobalNamespace::ovrAvatarAssetType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // ovrAvatarAssetType
  #pragma pack(pop)
  static check_size<sizeof(ovrAvatarAssetType), 0 + sizeof(int)> __GlobalNamespace_ovrAvatarAssetTypeSizeCheck;
  static_assert(sizeof(ovrAvatarAssetType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
