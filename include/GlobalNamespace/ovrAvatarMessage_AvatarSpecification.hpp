// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ovrAvatarMessage_AvatarSpecification
  struct ovrAvatarMessage_AvatarSpecification;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ovrAvatarMessage_AvatarSpecification, "", "ovrAvatarMessage_AvatarSpecification");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: ovrAvatarMessage_AvatarSpecification
  // [TokenAttribute] Offset: FFFFFFFF
  struct ovrAvatarMessage_AvatarSpecification/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.IntPtr avatarSpec
    // Size: 0x8
    // Offset: 0x0
    ::System::IntPtr avatarSpec;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // public System.UInt64 oculusUserID
    // Size: 0x8
    // Offset: 0x8
    uint64_t oculusUserID;
    // Field size check
    static_assert(sizeof(uint64_t) == 0x8);
    public:
    // Creating value type constructor for type: ovrAvatarMessage_AvatarSpecification
    constexpr ovrAvatarMessage_AvatarSpecification(::System::IntPtr avatarSpec_ = {}, uint64_t oculusUserID_ = {}) noexcept : avatarSpec{avatarSpec_}, oculusUserID{oculusUserID_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.IntPtr avatarSpec
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_avatarSpec();
    // Get instance field reference: public System.UInt64 oculusUserID
    [[deprecated("Use field access instead!")]] uint64_t& dyn_oculusUserID();
  }; // ovrAvatarMessage_AvatarSpecification
  #pragma pack(pop)
  static check_size<sizeof(ovrAvatarMessage_AvatarSpecification), 8 + sizeof(uint64_t)> __GlobalNamespace_ovrAvatarMessage_AvatarSpecificationSizeCheck;
  static_assert(sizeof(ovrAvatarMessage_AvatarSpecification) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
