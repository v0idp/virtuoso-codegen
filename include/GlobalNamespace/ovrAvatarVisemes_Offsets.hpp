// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ovrAvatarVisemes_Offsets
  struct ovrAvatarVisemes_Offsets;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ovrAvatarVisemes_Offsets, "", "ovrAvatarVisemes_Offsets");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: ovrAvatarVisemes_Offsets
  // [TokenAttribute] Offset: FFFFFFFF
  struct ovrAvatarVisemes_Offsets/*, public ::System::ValueType*/ {
    public:
    // Creating value type constructor for type: ovrAvatarVisemes_Offsets
    constexpr ovrAvatarVisemes_Offsets() noexcept {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get static field: static public System.Int32 visemeParamCount
    static int _get_visemeParamCount();
    // Set static field: static public System.Int32 visemeParamCount
    static void _set_visemeParamCount(int value);
    // Get static field: static public System.Int64 visemeParams
    static int64_t _get_visemeParams();
    // Set static field: static public System.Int64 visemeParams
    static void _set_visemeParams(int64_t value);
    // static private System.Void .cctor()
    // Offset: 0x955E88
    static void _cctor();
  }; // ovrAvatarVisemes_Offsets
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::ovrAvatarVisemes_Offsets::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::ovrAvatarVisemes_Offsets::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ovrAvatarVisemes_Offsets), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
