// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: OVRLipSync
#include "GlobalNamespace/OVRLipSync.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Texture
  class Texture;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: OVRLipSyncContextBase
  class OVRLipSyncContextBase;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: OVRLipSyncContextTextureFlip
  class OVRLipSyncContextTextureFlip;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRLipSyncContextTextureFlip);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRLipSyncContextTextureFlip*, "", "OVRLipSyncContextTextureFlip");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: OVRLipSyncContextTextureFlip
  // [TokenAttribute] Offset: FFFFFFFF
  class OVRLipSyncContextTextureFlip : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.Material material
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Material* material;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // [TooltipAttribute] Offset: 0x6F9478
    // [OVRNamedArrayAttribute] Offset: 0x6F9478
    // public UnityEngine.Texture[] Textures
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::UnityEngine::Texture*> Textures;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Texture*>) == 0x8);
    // [TooltipAttribute] Offset: 0x6F95F0
    // [RangeAttribute] Offset: 0x6F95F0
    // public System.Int32 smoothAmount
    // Size: 0x4
    // Offset: 0x28
    int smoothAmount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: smoothAmount and: lipsyncContext
    char __padding2[0x4] = {};
    // private OVRLipSyncContextBase lipsyncContext
    // Size: 0x8
    // Offset: 0x30
    ::GlobalNamespace::OVRLipSyncContextBase* lipsyncContext;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRLipSyncContextBase*) == 0x8);
    // private OVRLipSync/Frame oldFrame
    // Size: 0x8
    // Offset: 0x38
    ::GlobalNamespace::OVRLipSync::Frame* oldFrame;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRLipSync::Frame*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.Material material
    [[deprecated]] ::UnityEngine::Material*& dyn_material();
    // Get instance field reference: public UnityEngine.Texture[] Textures
    [[deprecated]] ::ArrayW<::UnityEngine::Texture*>& dyn_Textures();
    // Get instance field reference: public System.Int32 smoothAmount
    [[deprecated]] int& dyn_smoothAmount();
    // Get instance field reference: private OVRLipSyncContextBase lipsyncContext
    [[deprecated]] ::GlobalNamespace::OVRLipSyncContextBase*& dyn_lipsyncContext();
    // Get instance field reference: private OVRLipSync/Frame oldFrame
    [[deprecated]] ::GlobalNamespace::OVRLipSync::Frame*& dyn_oldFrame();
    // private System.Void Start()
    // Offset: 0x18AB598
    void Start();
    // private System.Void Update()
    // Offset: 0x18AB718
    void Update();
    // private System.Void SetVisemeToTexture()
    // Offset: 0x18AB8B8
    void SetVisemeToTexture();
    // public System.Void .ctor()
    // Offset: 0x18AB9E4
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OVRLipSyncContextTextureFlip* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OVRLipSyncContextTextureFlip*, creationType>()));
    }
  }; // OVRLipSyncContextTextureFlip
  #pragma pack(pop)
  static check_size<sizeof(OVRLipSyncContextTextureFlip), 56 + sizeof(::GlobalNamespace::OVRLipSync::Frame*)> __GlobalNamespace_OVRLipSyncContextTextureFlipSizeCheck;
  static_assert(sizeof(OVRLipSyncContextTextureFlip) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRLipSyncContextTextureFlip::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRLipSyncContextTextureFlip::*)()>(&GlobalNamespace::OVRLipSyncContextTextureFlip::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRLipSyncContextTextureFlip*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRLipSyncContextTextureFlip::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRLipSyncContextTextureFlip::*)()>(&GlobalNamespace::OVRLipSyncContextTextureFlip::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRLipSyncContextTextureFlip*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRLipSyncContextTextureFlip::SetVisemeToTexture
// Il2CppName: SetVisemeToTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRLipSyncContextTextureFlip::*)()>(&GlobalNamespace::OVRLipSyncContextTextureFlip::SetVisemeToTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRLipSyncContextTextureFlip*), "SetVisemeToTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRLipSyncContextTextureFlip::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
