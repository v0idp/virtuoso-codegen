// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ovrAvatarTextureFormat
  struct ovrAvatarTextureFormat;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ovrAvatarTextureFormat, "", "ovrAvatarTextureFormat");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: ovrAvatarTextureFormat
  // [TokenAttribute] Offset: FFFFFFFF
  struct ovrAvatarTextureFormat/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ovrAvatarTextureFormat
    constexpr ovrAvatarTextureFormat(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public ovrAvatarTextureFormat RGB24
    static constexpr const int RGB24 = 0;
    // Get static field: static public ovrAvatarTextureFormat RGB24
    static ::GlobalNamespace::ovrAvatarTextureFormat _get_RGB24();
    // Set static field: static public ovrAvatarTextureFormat RGB24
    static void _set_RGB24(::GlobalNamespace::ovrAvatarTextureFormat value);
    // static field const value: static public ovrAvatarTextureFormat DXT1
    static constexpr const int DXT1 = 1;
    // Get static field: static public ovrAvatarTextureFormat DXT1
    static ::GlobalNamespace::ovrAvatarTextureFormat _get_DXT1();
    // Set static field: static public ovrAvatarTextureFormat DXT1
    static void _set_DXT1(::GlobalNamespace::ovrAvatarTextureFormat value);
    // static field const value: static public ovrAvatarTextureFormat DXT5
    static constexpr const int DXT5 = 2;
    // Get static field: static public ovrAvatarTextureFormat DXT5
    static ::GlobalNamespace::ovrAvatarTextureFormat _get_DXT5();
    // Set static field: static public ovrAvatarTextureFormat DXT5
    static void _set_DXT5(::GlobalNamespace::ovrAvatarTextureFormat value);
    // static field const value: static public ovrAvatarTextureFormat ASTC_RGB_6x6
    static constexpr const int ASTC_RGB_6x6 = 3;
    // Get static field: static public ovrAvatarTextureFormat ASTC_RGB_6x6
    static ::GlobalNamespace::ovrAvatarTextureFormat _get_ASTC_RGB_6x6();
    // Set static field: static public ovrAvatarTextureFormat ASTC_RGB_6x6
    static void _set_ASTC_RGB_6x6(::GlobalNamespace::ovrAvatarTextureFormat value);
    // static field const value: static public ovrAvatarTextureFormat ASTC_RGB_6x6_MIPMAPS
    static constexpr const int ASTC_RGB_6x6_MIPMAPS = 4;
    // Get static field: static public ovrAvatarTextureFormat ASTC_RGB_6x6_MIPMAPS
    static ::GlobalNamespace::ovrAvatarTextureFormat _get_ASTC_RGB_6x6_MIPMAPS();
    // Set static field: static public ovrAvatarTextureFormat ASTC_RGB_6x6_MIPMAPS
    static void _set_ASTC_RGB_6x6_MIPMAPS(::GlobalNamespace::ovrAvatarTextureFormat value);
    // static field const value: static public ovrAvatarTextureFormat Count
    static constexpr const int Count = 5;
    // Get static field: static public ovrAvatarTextureFormat Count
    static ::GlobalNamespace::ovrAvatarTextureFormat _get_Count();
    // Set static field: static public ovrAvatarTextureFormat Count
    static void _set_Count(::GlobalNamespace::ovrAvatarTextureFormat value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // ovrAvatarTextureFormat
  #pragma pack(pop)
  static check_size<sizeof(ovrAvatarTextureFormat), 0 + sizeof(int)> __GlobalNamespace_ovrAvatarTextureFormatSizeCheck;
  static_assert(sizeof(ovrAvatarTextureFormat) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
