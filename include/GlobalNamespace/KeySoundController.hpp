// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: KeySoundController
  class KeySoundController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::KeySoundController);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::KeySoundController*, "", "KeySoundController");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: KeySoundController
  // [TokenAttribute] Offset: FFFFFFFF
  class KeySoundController : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GlobalNamespace::KeySoundController::$PlayKeySound$d__2
    class $PlayKeySound$d__2;
    public:
    // public UnityEngine.GameObject KeySoundPlayer
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::GameObject* KeySoundPlayer;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.GameObject KeySoundPlayer
    [[deprecated]] ::UnityEngine::GameObject*& dyn_KeySoundPlayer();
    // public System.Void StartKeySound(UnityEngine.Transform keyTransform)
    // Offset: 0x194C454
    void StartKeySound(::UnityEngine::Transform* keyTransform);
    // private System.Collections.IEnumerator PlayKeySound(UnityEngine.Transform keyTransform)
    // Offset: 0x194C4E8
    ::System::Collections::IEnumerator* PlayKeySound(::UnityEngine::Transform* keyTransform);
    // public System.Void .ctor()
    // Offset: 0x194C560
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static KeySoundController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeySoundController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<KeySoundController*, creationType>()));
    }
  }; // KeySoundController
  #pragma pack(pop)
  static check_size<sizeof(KeySoundController), 24 + sizeof(::UnityEngine::GameObject*)> __GlobalNamespace_KeySoundControllerSizeCheck;
  static_assert(sizeof(KeySoundController) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::KeySoundController::StartKeySound
// Il2CppName: StartKeySound
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::KeySoundController::*)(::UnityEngine::Transform*)>(&GlobalNamespace::KeySoundController::StartKeySound)> {
  static const MethodInfo* get() {
    static auto* keyTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::KeySoundController*), "StartKeySound", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyTransform});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::KeySoundController::PlayKeySound
// Il2CppName: PlayKeySound
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GlobalNamespace::KeySoundController::*)(::UnityEngine::Transform*)>(&GlobalNamespace::KeySoundController::PlayKeySound)> {
  static const MethodInfo* get() {
    static auto* keyTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::KeySoundController*), "PlayKeySound", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyTransform});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::KeySoundController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
