// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ovrAvatarLightType
  struct ovrAvatarLightType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ovrAvatarLightType, "", "ovrAvatarLightType");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: ovrAvatarLightType
  // [TokenAttribute] Offset: FFFFFFFF
  struct ovrAvatarLightType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ovrAvatarLightType
    constexpr ovrAvatarLightType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public ovrAvatarLightType Point
    static constexpr const int Point = 0;
    // Get static field: static public ovrAvatarLightType Point
    static ::GlobalNamespace::ovrAvatarLightType _get_Point();
    // Set static field: static public ovrAvatarLightType Point
    static void _set_Point(::GlobalNamespace::ovrAvatarLightType value);
    // static field const value: static public ovrAvatarLightType Direction
    static constexpr const int Direction = 1;
    // Get static field: static public ovrAvatarLightType Direction
    static ::GlobalNamespace::ovrAvatarLightType _get_Direction();
    // Set static field: static public ovrAvatarLightType Direction
    static void _set_Direction(::GlobalNamespace::ovrAvatarLightType value);
    // static field const value: static public ovrAvatarLightType Spot
    static constexpr const int Spot = 2;
    // Get static field: static public ovrAvatarLightType Spot
    static ::GlobalNamespace::ovrAvatarLightType _get_Spot();
    // Set static field: static public ovrAvatarLightType Spot
    static void _set_Spot(::GlobalNamespace::ovrAvatarLightType value);
    // static field const value: static public ovrAvatarLightType Count
    static constexpr const int Count = 3;
    // Get static field: static public ovrAvatarLightType Count
    static ::GlobalNamespace::ovrAvatarLightType _get_Count();
    // Set static field: static public ovrAvatarLightType Count
    static void _set_Count(::GlobalNamespace::ovrAvatarLightType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // ovrAvatarLightType
  #pragma pack(pop)
  static check_size<sizeof(ovrAvatarLightType), 0 + sizeof(int)> __GlobalNamespace_ovrAvatarLightTypeSizeCheck;
  static_assert(sizeof(ovrAvatarLightType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
