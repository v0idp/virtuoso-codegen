// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PunchKeyboard
#include "GlobalNamespace/PunchKeyboard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: Key
  class Key;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::PunchKeyboard::HitKey);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::PunchKeyboard::HitKey*, "", "PunchKeyboard/HitKey");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: PunchKeyboard/HitKey
  // [TokenAttribute] Offset: FFFFFFFF
  class PunchKeyboard::HitKey : public ::Il2CppObject {
    public:
    public:
    // public Key Key
    // Size: 0x8
    // Offset: 0x10
    ::GlobalNamespace::Key* Key;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::Key*) == 0x8);
    // public System.Single Strength
    // Size: 0x4
    // Offset: 0x18
    float Strength;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: public Key Key
    [[deprecated]] ::GlobalNamespace::Key*& dyn_Key();
    // Get instance field reference: public System.Single Strength
    [[deprecated]] float& dyn_Strength();
    // public System.Void .ctor()
    // Offset: 0x8CFA30
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PunchKeyboard::HitKey* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PunchKeyboard::HitKey::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PunchKeyboard::HitKey*, creationType>()));
    }
  }; // PunchKeyboard/HitKey
  #pragma pack(pop)
  static check_size<sizeof(PunchKeyboard::HitKey), 24 + sizeof(float)> __GlobalNamespace_PunchKeyboard_HitKeySizeCheck;
  static_assert(sizeof(PunchKeyboard::HitKey) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::PunchKeyboard::HitKey::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
