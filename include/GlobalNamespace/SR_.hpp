// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: SR
  class SR_;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::SR_);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SR_*, "", "SR");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: SR
  // [TokenAttribute] Offset: FFFFFFFF
  class SR_ : public ::Il2CppObject {
    public:
    // static System.String GetString(System.String name)
    // Offset: 0xE97CD0
    static ::StringW GetString(::StringW name);
    // static System.String Format(System.String resourceFormat, params System.Object[] args)
    // Offset: 0xE99890
    static ::StringW Format(::StringW resourceFormat, ::ArrayW<::Il2CppObject*> args);
    // static System.String Format(System.String resourceFormat, System.Object p1)
    // Offset: 0xE99924
    static ::StringW Format(::StringW resourceFormat, ::Il2CppObject* p1);
    // static System.String Format(System.String resourceFormat, System.Object p1, System.Object p2)
    // Offset: 0xE999A0
    static ::StringW Format(::StringW resourceFormat, ::Il2CppObject* p1, ::Il2CppObject* p2);
    // static System.String Format(System.String resourceFormat, System.Object p1, System.Object p2, System.Object p3)
    // Offset: 0xE99A24
    static ::StringW Format(::StringW resourceFormat, ::Il2CppObject* p1, ::Il2CppObject* p2, ::Il2CppObject* p3);
  }; // SR
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SR_::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&GlobalNamespace::SR_::GetString)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SR_*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SR_::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::ArrayW<::Il2CppObject*>)>(&GlobalNamespace::SR_::Format)> {
  static const MethodInfo* get() {
    static auto* resourceFormat = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* args = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SR_*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resourceFormat, args});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SR_::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::Il2CppObject*)>(&GlobalNamespace::SR_::Format)> {
  static const MethodInfo* get() {
    static auto* resourceFormat = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SR_*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resourceFormat, p1});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SR_::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::Il2CppObject*, ::Il2CppObject*)>(&GlobalNamespace::SR_::Format)> {
  static const MethodInfo* get() {
    static auto* resourceFormat = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p2 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SR_*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resourceFormat, p1, p2});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SR_::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*)>(&GlobalNamespace::SR_::Format)> {
  static const MethodInfo* get() {
    static auto* resourceFormat = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p2 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p3 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SR_*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resourceFormat, p1, p2, p3});
  }
};
