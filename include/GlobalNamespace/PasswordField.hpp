// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UIInputField
#include "GlobalNamespace/UIInputField.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshPro
  class TextMeshPro;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: PasswordField
  class PasswordField;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::PasswordField);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::PasswordField*, "", "PasswordField");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0xC8
  #pragma pack(push, 1)
  // Autogenerated type: PasswordField
  // [TokenAttribute] Offset: FFFFFFFF
  class PasswordField : public ::GlobalNamespace::UIInputField {
    public:
    public:
    // private TMPro.TextMeshPro _hiddenText
    // Size: 0x8
    // Offset: 0xC0
    ::TMPro::TextMeshPro* hiddenText;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshPro*) == 0x8);
    public:
    // Get instance field reference: private TMPro.TextMeshPro _hiddenText
    [[deprecated("Use field access instead!")]] ::TMPro::TextMeshPro*& dyn__hiddenText();
    // private System.Void EnteredPasswordChanged(System.String password)
    // Offset: 0xADD43C
    void EnteredPasswordChanged(::StringW password);
    // public System.Void .ctor()
    // Offset: 0xADD48C
    // Implemented from: UIInputField
    // Base method: System.Void UIInputField::.ctor()
    // Base method: System.Void UIInteractable::.ctor()
    // Base method: System.Void Clickable::.ctor()
    // Base method: System.Void Interactable::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PasswordField* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PasswordField::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PasswordField*, creationType>()));
    }
    // protected override System.Void Awake()
    // Offset: 0xADD258
    // Implemented from: UIInputField
    // Base method: System.Void UIInputField::Awake()
    void Awake();
    // protected override System.Void OnDestroy()
    // Offset: 0xADD374
    // Implemented from: UIInputField
    // Base method: System.Void UIInputField::OnDestroy()
    void OnDestroy();
  }; // PasswordField
  #pragma pack(pop)
  static check_size<sizeof(PasswordField), 192 + sizeof(::TMPro::TextMeshPro*)> __GlobalNamespace_PasswordFieldSizeCheck;
  static_assert(sizeof(PasswordField) == 0xC8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::PasswordField::EnteredPasswordChanged
// Il2CppName: EnteredPasswordChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PasswordField::*)(::StringW)>(&GlobalNamespace::PasswordField::EnteredPasswordChanged)> {
  static const MethodInfo* get() {
    static auto* password = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PasswordField*), "EnteredPasswordChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{password});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PasswordField::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::PasswordField::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PasswordField::*)()>(&GlobalNamespace::PasswordField::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PasswordField*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PasswordField::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PasswordField::*)()>(&GlobalNamespace::PasswordField::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PasswordField*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
