// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: FileStream
  class FileStream;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: SavWav
  class SavWav;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::SavWav);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SavWav*, "", "SavWav");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: SavWav
  // [TokenAttribute] Offset: FFFFFFFF
  class SavWav : public ::Il2CppObject {
    public:
    // static field const value: static private System.Int32 HEADER_SIZE
    static constexpr const int HEADER_SIZE = 44;
    // Get static field: static private System.Int32 HEADER_SIZE
    static int _get_HEADER_SIZE();
    // Set static field: static private System.Int32 HEADER_SIZE
    static void _set_HEADER_SIZE(int value);
    // static field const value: static private System.Int32 BUFFER_SIZE
    static constexpr const int BUFFER_SIZE = 4096;
    // Get static field: static private System.Int32 BUFFER_SIZE
    static int _get_BUFFER_SIZE();
    // Set static field: static private System.Int32 BUFFER_SIZE
    static void _set_BUFFER_SIZE(int value);
    // static public System.Void Save(System.String filename, System.Single[] samples, System.Int32 sampleRate, System.Int32 channels, System.Single normalizeMultiplier, System.Int32 startIndex, System.Int32 endIndex)
    // Offset: 0xDDDF00
    static void Save(::StringW filename, ::ArrayW<float> samples, int sampleRate, int channels, float normalizeMultiplier, int startIndex, int endIndex);
    // static private System.IO.FileStream CreateEmpty(System.String filepath)
    // Offset: 0xDDE128
    static ::System::IO::FileStream* CreateEmpty(::StringW filepath);
    // static private System.Void ConvertAndWrite(System.IO.FileStream fileStream, System.Single[] samples, System.Single normalizeMultiplier, System.Int32 startIndex, System.Int32 length)
    // Offset: 0xDDE1C8
    static void ConvertAndWrite(::System::IO::FileStream* fileStream, ::ArrayW<float> samples, float normalizeMultiplier, int startIndex, int length);
    // static private System.Void WriteHeader(System.IO.FileStream fileStream, System.Int32 length, System.Int32 hz, System.Int32 channels)
    // Offset: 0xDDE32C
    static void WriteHeader(::System::IO::FileStream* fileStream, int length, int hz, int channels);
  }; // SavWav
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SavWav::Save
// Il2CppName: Save
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::ArrayW<float>, int, int, float, int, int)>(&GlobalNamespace::SavWav::Save)> {
  static const MethodInfo* get() {
    static auto* filename = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* samples = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* sampleRate = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* channels = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* normalizeMultiplier = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* endIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SavWav*), "Save", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{filename, samples, sampleRate, channels, normalizeMultiplier, startIndex, endIndex});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SavWav::CreateEmpty
// Il2CppName: CreateEmpty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::FileStream* (*)(::StringW)>(&GlobalNamespace::SavWav::CreateEmpty)> {
  static const MethodInfo* get() {
    static auto* filepath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SavWav*), "CreateEmpty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{filepath});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SavWav::ConvertAndWrite
// Il2CppName: ConvertAndWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IO::FileStream*, ::ArrayW<float>, float, int, int)>(&GlobalNamespace::SavWav::ConvertAndWrite)> {
  static const MethodInfo* get() {
    static auto* fileStream = &::il2cpp_utils::GetClassFromName("System.IO", "FileStream")->byval_arg;
    static auto* samples = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* normalizeMultiplier = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SavWav*), "ConvertAndWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fileStream, samples, normalizeMultiplier, startIndex, length});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SavWav::WriteHeader
// Il2CppName: WriteHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IO::FileStream*, int, int, int)>(&GlobalNamespace::SavWav::WriteHeader)> {
  static const MethodInfo* get() {
    static auto* fileStream = &::il2cpp_utils::GetClassFromName("System.IO", "FileStream")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* hz = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* channels = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SavWav*), "WriteHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fileStream, length, hz, channels});
  }
};
