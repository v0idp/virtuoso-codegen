// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OvrAvatar
#include "GlobalNamespace/OvrAvatar.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OvrAvatar::HandJoint, "", "OvrAvatar/HandJoint");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: OvrAvatar/HandJoint
  // [TokenAttribute] Offset: FFFFFFFF
  struct OvrAvatar::HandJoint/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: HandJoint
    constexpr HandJoint(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public OvrAvatar/HandJoint HandBase
    static constexpr const int HandBase = 0;
    // Get static field: static public OvrAvatar/HandJoint HandBase
    static ::GlobalNamespace::OvrAvatar::HandJoint _get_HandBase();
    // Set static field: static public OvrAvatar/HandJoint HandBase
    static void _set_HandBase(::GlobalNamespace::OvrAvatar::HandJoint value);
    // static field const value: static public OvrAvatar/HandJoint IndexBase
    static constexpr const int IndexBase = 1;
    // Get static field: static public OvrAvatar/HandJoint IndexBase
    static ::GlobalNamespace::OvrAvatar::HandJoint _get_IndexBase();
    // Set static field: static public OvrAvatar/HandJoint IndexBase
    static void _set_IndexBase(::GlobalNamespace::OvrAvatar::HandJoint value);
    // static field const value: static public OvrAvatar/HandJoint IndexTip
    static constexpr const int IndexTip = 2;
    // Get static field: static public OvrAvatar/HandJoint IndexTip
    static ::GlobalNamespace::OvrAvatar::HandJoint _get_IndexTip();
    // Set static field: static public OvrAvatar/HandJoint IndexTip
    static void _set_IndexTip(::GlobalNamespace::OvrAvatar::HandJoint value);
    // static field const value: static public OvrAvatar/HandJoint ThumbBase
    static constexpr const int ThumbBase = 3;
    // Get static field: static public OvrAvatar/HandJoint ThumbBase
    static ::GlobalNamespace::OvrAvatar::HandJoint _get_ThumbBase();
    // Set static field: static public OvrAvatar/HandJoint ThumbBase
    static void _set_ThumbBase(::GlobalNamespace::OvrAvatar::HandJoint value);
    // static field const value: static public OvrAvatar/HandJoint ThumbTip
    static constexpr const int ThumbTip = 4;
    // Get static field: static public OvrAvatar/HandJoint ThumbTip
    static ::GlobalNamespace::OvrAvatar::HandJoint _get_ThumbTip();
    // Set static field: static public OvrAvatar/HandJoint ThumbTip
    static void _set_ThumbTip(::GlobalNamespace::OvrAvatar::HandJoint value);
    // static field const value: static public OvrAvatar/HandJoint Max
    static constexpr const int Max = 5;
    // Get static field: static public OvrAvatar/HandJoint Max
    static ::GlobalNamespace::OvrAvatar::HandJoint _get_Max();
    // Set static field: static public OvrAvatar/HandJoint Max
    static void _set_Max(::GlobalNamespace::OvrAvatar::HandJoint value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // OvrAvatar/HandJoint
  #pragma pack(pop)
  static check_size<sizeof(OvrAvatar::HandJoint), 0 + sizeof(int)> __GlobalNamespace_OvrAvatar_HandJointSizeCheck;
  static_assert(sizeof(OvrAvatar::HandJoint) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
