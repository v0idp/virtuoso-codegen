// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ovrAvatarBodyPartType
  struct ovrAvatarBodyPartType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ovrAvatarBodyPartType, "", "ovrAvatarBodyPartType");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: ovrAvatarBodyPartType
  // [TokenAttribute] Offset: FFFFFFFF
  struct ovrAvatarBodyPartType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ovrAvatarBodyPartType
    constexpr ovrAvatarBodyPartType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public ovrAvatarBodyPartType Body
    static constexpr const int Body = 0;
    // Get static field: static public ovrAvatarBodyPartType Body
    static ::GlobalNamespace::ovrAvatarBodyPartType _get_Body();
    // Set static field: static public ovrAvatarBodyPartType Body
    static void _set_Body(::GlobalNamespace::ovrAvatarBodyPartType value);
    // static field const value: static public ovrAvatarBodyPartType Clothing
    static constexpr const int Clothing = 1;
    // Get static field: static public ovrAvatarBodyPartType Clothing
    static ::GlobalNamespace::ovrAvatarBodyPartType _get_Clothing();
    // Set static field: static public ovrAvatarBodyPartType Clothing
    static void _set_Clothing(::GlobalNamespace::ovrAvatarBodyPartType value);
    // static field const value: static public ovrAvatarBodyPartType Eyewear
    static constexpr const int Eyewear = 2;
    // Get static field: static public ovrAvatarBodyPartType Eyewear
    static ::GlobalNamespace::ovrAvatarBodyPartType _get_Eyewear();
    // Set static field: static public ovrAvatarBodyPartType Eyewear
    static void _set_Eyewear(::GlobalNamespace::ovrAvatarBodyPartType value);
    // static field const value: static public ovrAvatarBodyPartType Hair
    static constexpr const int Hair = 3;
    // Get static field: static public ovrAvatarBodyPartType Hair
    static ::GlobalNamespace::ovrAvatarBodyPartType _get_Hair();
    // Set static field: static public ovrAvatarBodyPartType Hair
    static void _set_Hair(::GlobalNamespace::ovrAvatarBodyPartType value);
    // static field const value: static public ovrAvatarBodyPartType Beard
    static constexpr const int Beard = 4;
    // Get static field: static public ovrAvatarBodyPartType Beard
    static ::GlobalNamespace::ovrAvatarBodyPartType _get_Beard();
    // Set static field: static public ovrAvatarBodyPartType Beard
    static void _set_Beard(::GlobalNamespace::ovrAvatarBodyPartType value);
    // static field const value: static public ovrAvatarBodyPartType Count
    static constexpr const int Count = 5;
    // Get static field: static public ovrAvatarBodyPartType Count
    static ::GlobalNamespace::ovrAvatarBodyPartType _get_Count();
    // Set static field: static public ovrAvatarBodyPartType Count
    static void _set_Count(::GlobalNamespace::ovrAvatarBodyPartType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // ovrAvatarBodyPartType
  #pragma pack(pop)
  static check_size<sizeof(ovrAvatarBodyPartType), 0 + sizeof(int)> __GlobalNamespace_ovrAvatarBodyPartTypeSizeCheck;
  static_assert(sizeof(ovrAvatarBodyPartType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
