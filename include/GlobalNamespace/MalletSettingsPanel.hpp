// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: UIToggle
  class UIToggle;
  // Forward declaring type: UISlider
  class UISlider;
  // Forward declaring type: UserPreferencesDataController
  class UserPreferencesDataController;
  // Forward declaring type: InputDevice
  class InputDevice;
  // Forward declaring type: MinMaxFloat
  class MinMaxFloat;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: MalletSettingsPanel
  class MalletSettingsPanel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::MalletSettingsPanel);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::MalletSettingsPanel*, "", "MalletSettingsPanel");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: MalletSettingsPanel
  // [TokenAttribute] Offset: FFFFFFFF
  class MalletSettingsPanel : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private VROSC.UIToggle _settingsButton
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::UIToggle* settingsButton;
    // Field size check
    static_assert(sizeof(::VROSC::UIToggle*) == 0x8);
    // private UnityEngine.GameObject _settingsUI
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* settingsUI;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private VROSC.UISlider _malletsAngleSlider
    // Size: 0x8
    // Offset: 0x28
    ::VROSC::UISlider* malletsAngleSlider;
    // Field size check
    static_assert(sizeof(::VROSC::UISlider*) == 0x8);
    // private VROSC.UISlider _malletsLengthSlider
    // Size: 0x8
    // Offset: 0x30
    ::VROSC::UISlider* malletsLengthSlider;
    // Field size check
    static_assert(sizeof(::VROSC::UISlider*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.UIToggle _settingsButton
    [[deprecated("Use field access instead!")]] ::VROSC::UIToggle*& dyn__settingsButton();
    // Get instance field reference: private UnityEngine.GameObject _settingsUI
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn__settingsUI();
    // Get instance field reference: private VROSC.UISlider _malletsAngleSlider
    [[deprecated("Use field access instead!")]] ::VROSC::UISlider*& dyn__malletsAngleSlider();
    // Get instance field reference: private VROSC.UISlider _malletsLengthSlider
    [[deprecated("Use field access instead!")]] ::VROSC::UISlider*& dyn__malletsLengthSlider();
    // public System.Void .ctor()
    // Offset: 0x197F64C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MalletSettingsPanel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MalletSettingsPanel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MalletSettingsPanel*, creationType>()));
    }
    // private System.Void Awake()
    // Offset: 0x197EB94
    void Awake();
    // private System.Void OnEnable()
    // Offset: 0x197EE98
    void OnEnable();
    // System.Void SetMalletsValues(VROSC.UserPreferencesDataController data)
    // Offset: 0x197F17C
    void SetMalletsValues(::VROSC::UserPreferencesDataController* data);
    // private System.Void OnDisable()
    // Offset: 0x197F288
    void OnDisable();
    // private System.Void SettingsToggled(VROSC.InputDevice device, System.Boolean toggled)
    // Offset: 0x197F3EC
    void SettingsToggled(::VROSC::InputDevice* device, bool toggled);
    // private System.Void AngleChanged(System.Single value)
    // Offset: 0x197F034
    void AngleChanged(float value);
    // private System.Void LengthChanged(System.Single value)
    // Offset: 0x197F0D8
    void LengthChanged(float value);
    // private System.Void OnDestroy()
    // Offset: 0x197F40C
    void OnDestroy();
    // private System.Void AngleValueChangedByUI(System.Single value)
    // Offset: 0x197F544
    void AngleValueChangedByUI(float value);
    // private System.Void LengthValueChangedByUI(System.Single value)
    // Offset: 0x197F5C8
    void LengthValueChangedByUI(float value);
    // private System.Void SetSliderValue(VROSC.UISlider slider, System.Single value, VROSC.MinMaxFloat minMax)
    // Offset: 0x197F238
    void SetSliderValue(::VROSC::UISlider* slider, float value, ::VROSC::MinMaxFloat* minMax);
  }; // MalletSettingsPanel
  #pragma pack(pop)
  static check_size<sizeof(MalletSettingsPanel), 48 + sizeof(::VROSC::UISlider*)> __GlobalNamespace_MalletSettingsPanelSizeCheck;
  static_assert(sizeof(MalletSettingsPanel) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::MalletSettingsPanel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::MalletSettingsPanel::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MalletSettingsPanel::*)()>(&GlobalNamespace::MalletSettingsPanel::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MalletSettingsPanel*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MalletSettingsPanel::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MalletSettingsPanel::*)()>(&GlobalNamespace::MalletSettingsPanel::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MalletSettingsPanel*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MalletSettingsPanel::SetMalletsValues
// Il2CppName: SetMalletsValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MalletSettingsPanel::*)(::VROSC::UserPreferencesDataController*)>(&GlobalNamespace::MalletSettingsPanel::SetMalletsValues)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("VROSC", "UserPreferencesDataController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MalletSettingsPanel*), "SetMalletsValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MalletSettingsPanel::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MalletSettingsPanel::*)()>(&GlobalNamespace::MalletSettingsPanel::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MalletSettingsPanel*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MalletSettingsPanel::SettingsToggled
// Il2CppName: SettingsToggled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MalletSettingsPanel::*)(::VROSC::InputDevice*, bool)>(&GlobalNamespace::MalletSettingsPanel::SettingsToggled)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* toggled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MalletSettingsPanel*), "SettingsToggled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, toggled});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MalletSettingsPanel::AngleChanged
// Il2CppName: AngleChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MalletSettingsPanel::*)(float)>(&GlobalNamespace::MalletSettingsPanel::AngleChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MalletSettingsPanel*), "AngleChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MalletSettingsPanel::LengthChanged
// Il2CppName: LengthChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MalletSettingsPanel::*)(float)>(&GlobalNamespace::MalletSettingsPanel::LengthChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MalletSettingsPanel*), "LengthChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MalletSettingsPanel::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MalletSettingsPanel::*)()>(&GlobalNamespace::MalletSettingsPanel::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MalletSettingsPanel*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MalletSettingsPanel::AngleValueChangedByUI
// Il2CppName: AngleValueChangedByUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MalletSettingsPanel::*)(float)>(&GlobalNamespace::MalletSettingsPanel::AngleValueChangedByUI)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MalletSettingsPanel*), "AngleValueChangedByUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MalletSettingsPanel::LengthValueChangedByUI
// Il2CppName: LengthValueChangedByUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MalletSettingsPanel::*)(float)>(&GlobalNamespace::MalletSettingsPanel::LengthValueChangedByUI)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MalletSettingsPanel*), "LengthValueChangedByUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MalletSettingsPanel::SetSliderValue
// Il2CppName: SetSliderValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MalletSettingsPanel::*)(::VROSC::UISlider*, float, ::VROSC::MinMaxFloat*)>(&GlobalNamespace::MalletSettingsPanel::SetSliderValue)> {
  static const MethodInfo* get() {
    static auto* slider = &::il2cpp_utils::GetClassFromName("VROSC", "UISlider")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* minMax = &::il2cpp_utils::GetClassFromName("VROSC", "MinMaxFloat")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MalletSettingsPanel*), "SetSliderValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{slider, value, minMax});
  }
};
