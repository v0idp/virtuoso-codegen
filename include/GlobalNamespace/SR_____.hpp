// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: SR
  class SR_____;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::SR_____);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SR_____*, "", "SR");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: SR
  // [TokenAttribute] Offset: FFFFFFFF
  class SR_____ : public ::Il2CppObject {
    public:
    // static System.String Format(System.String resourceFormat, System.Object p1)
    // Offset: 0x1892E5C
    static ::StringW Format(::StringW resourceFormat, ::Il2CppObject* p1);
  }; // SR
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SR_____::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::Il2CppObject*)>(&GlobalNamespace::SR_____::Format)> {
  static const MethodInfo* get() {
    static auto* resourceFormat = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SR_____*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resourceFormat, p1});
  }
};
