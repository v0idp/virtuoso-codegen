// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OvrAvatarComponent
#include "GlobalNamespace/OvrAvatarComponent_.hpp"
// Including type: ovrAvatarBodyComponent
#include "GlobalNamespace/ovrAvatarBodyComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: OvrAvatarBody
  class OvrAvatarBody;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OvrAvatarBody);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OvrAvatarBody*, "", "OvrAvatarBody");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0xF0
  #pragma pack(push, 1)
  // Autogenerated type: OvrAvatarBody
  // [TokenAttribute] Offset: FFFFFFFF
  class OvrAvatarBody : public ::GlobalNamespace::OvrAvatarComponent_ {
    public:
    public:
    // public ovrAvatarBodyComponent component
    // Size: 0x80
    // Offset: 0x70
    ::GlobalNamespace::ovrAvatarBodyComponent component;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ovrAvatarBodyComponent) == 0x80);
    public:
    // Get instance field reference: public ovrAvatarBodyComponent component
    [[deprecated]] ::GlobalNamespace::ovrAvatarBodyComponent& dyn_component();
    // public System.Nullable`1<ovrAvatarComponent> GetNativeAvatarComponent()
    // Offset: 0xF85894
    ::System::Nullable_1<::GlobalNamespace::ovrAvatarComponent> GetNativeAvatarComponent();
    // private System.Void Update()
    // Offset: 0xF8969C
    void Update();
    // public System.Void .ctor()
    // Offset: 0xF897C0
    // Implemented from: OvrAvatarComponent
    // Base method: System.Void OvrAvatarComponent_::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OvrAvatarBody* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarBody::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OvrAvatarBody*, creationType>()));
    }
  }; // OvrAvatarBody
  #pragma pack(pop)
  static check_size<sizeof(OvrAvatarBody), 112 + sizeof(::GlobalNamespace::ovrAvatarBodyComponent)> __GlobalNamespace_OvrAvatarBodySizeCheck;
  static_assert(sizeof(OvrAvatarBody) == 0xF0);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OvrAvatarBody::GetNativeAvatarComponent
// Il2CppName: GetNativeAvatarComponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::GlobalNamespace::ovrAvatarComponent> (GlobalNamespace::OvrAvatarBody::*)()>(&GlobalNamespace::OvrAvatarBody::GetNativeAvatarComponent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OvrAvatarBody*), "GetNativeAvatarComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OvrAvatarBody::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OvrAvatarBody::*)()>(&GlobalNamespace::OvrAvatarBody::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OvrAvatarBody*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OvrAvatarBody::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
