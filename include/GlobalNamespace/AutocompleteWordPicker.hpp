// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: InputField
  class InputField;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: NGramGenerator
  class NGramGenerator;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: AutocompleteWordPicker
  class AutocompleteWordPicker;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::AutocompleteWordPicker);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::AutocompleteWordPicker*, "", "AutocompleteWordPicker");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: AutocompleteWordPicker
  // [TokenAttribute] Offset: FFFFFFFF
  class AutocompleteWordPicker : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.UI.InputField TextField
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::UI::InputField* TextField;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::InputField*) == 0x8);
    // public NGramGenerator WordPredictor
    // Size: 0x8
    // Offset: 0x20
    ::GlobalNamespace::NGramGenerator* WordPredictor;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::NGramGenerator*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.UI.InputField TextField
    [[deprecated]] ::UnityEngine::UI::InputField*& dyn_TextField();
    // Get instance field reference: public NGramGenerator WordPredictor
    [[deprecated]] ::GlobalNamespace::NGramGenerator*& dyn_WordPredictor();
    // public System.Void ReplaceWord(System.String correctWord)
    // Offset: 0x965668
    void ReplaceWord(::StringW correctWord);
    // static public System.String ReverseString(System.String s)
    // Offset: 0x973894
    static ::StringW ReverseString(::StringW s);
    // public System.Void .ctor()
    // Offset: 0x9738D4
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AutocompleteWordPicker* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutocompleteWordPicker::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AutocompleteWordPicker*, creationType>()));
    }
  }; // AutocompleteWordPicker
  #pragma pack(pop)
  static check_size<sizeof(AutocompleteWordPicker), 32 + sizeof(::GlobalNamespace::NGramGenerator*)> __GlobalNamespace_AutocompleteWordPickerSizeCheck;
  static_assert(sizeof(AutocompleteWordPicker) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::AutocompleteWordPicker::ReplaceWord
// Il2CppName: ReplaceWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AutocompleteWordPicker::*)(::StringW)>(&GlobalNamespace::AutocompleteWordPicker::ReplaceWord)> {
  static const MethodInfo* get() {
    static auto* correctWord = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AutocompleteWordPicker*), "ReplaceWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{correctWord});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AutocompleteWordPicker::ReverseString
// Il2CppName: ReverseString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&GlobalNamespace::AutocompleteWordPicker::ReverseString)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AutocompleteWordPicker*), "ReverseString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AutocompleteWordPicker::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
