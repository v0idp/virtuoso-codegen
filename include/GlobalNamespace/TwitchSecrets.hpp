// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: TwitchSecrets
  class TwitchSecrets;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::TwitchSecrets);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::TwitchSecrets*, "", "TwitchSecrets");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: TwitchSecrets
  // [TokenAttribute] Offset: FFFFFFFF
  class TwitchSecrets : public ::Il2CppObject {
    public:
    // Get static field: static public System.String CLIENT_ID
    static ::StringW _get_CLIENT_ID();
    // Set static field: static public System.String CLIENT_ID
    static void _set_CLIENT_ID(::StringW value);
    // Get static field: static public System.String CLIENT_SECRET
    static ::StringW _get_CLIENT_SECRET();
    // Set static field: static public System.String CLIENT_SECRET
    static void _set_CLIENT_SECRET(::StringW value);
    // Get static field: static public System.String BOT_NAME
    static ::StringW _get_BOT_NAME();
    // Set static field: static public System.String BOT_NAME
    static void _set_BOT_NAME(::StringW value);
    // Get static field: static public System.String BOT_ACCESS_TOKEN
    static ::StringW _get_BOT_ACCESS_TOKEN();
    // Set static field: static public System.String BOT_ACCESS_TOKEN
    static void _set_BOT_ACCESS_TOKEN(::StringW value);
    // Get static field: static public System.String BOT_REFRESH_TOKEN
    static ::StringW _get_BOT_REFRESH_TOKEN();
    // Set static field: static public System.String BOT_REFRESH_TOKEN
    static void _set_BOT_REFRESH_TOKEN(::StringW value);
    // static private System.Void .cctor()
    // Offset: 0xA32F70
    static void _cctor();
  }; // TwitchSecrets
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::TwitchSecrets::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::TwitchSecrets::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TwitchSecrets*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
