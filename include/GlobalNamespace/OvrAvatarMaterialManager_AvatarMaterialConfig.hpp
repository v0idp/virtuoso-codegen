// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OvrAvatarMaterialManager
#include "GlobalNamespace/OvrAvatarMaterialManager.hpp"
// Including type: OvrAvatarMaterialManager/AvatarComponentMaterialProperties
#include "GlobalNamespace/OvrAvatarMaterialManager_AvatarComponentMaterialProperties.hpp"
// Including type: OvrAvatarMaterialManager/AvatarMaterialPropertyBlock
#include "GlobalNamespace/OvrAvatarMaterialManager_AvatarMaterialPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OvrAvatarMaterialManager::AvatarMaterialConfig);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OvrAvatarMaterialManager::AvatarMaterialConfig*, "", "OvrAvatarMaterialManager/AvatarMaterialConfig");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: OvrAvatarMaterialManager/AvatarMaterialConfig
  // [TokenAttribute] Offset: FFFFFFFF
  class OvrAvatarMaterialManager::AvatarMaterialConfig : public ::Il2CppObject {
    public:
    public:
    // public OvrAvatarMaterialManager/AvatarComponentMaterialProperties[] ComponentMaterialProperties
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::GlobalNamespace::OvrAvatarMaterialManager::AvatarComponentMaterialProperties> ComponentMaterialProperties;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::OvrAvatarMaterialManager::AvatarComponentMaterialProperties>) == 0x8);
    // public OvrAvatarMaterialManager/AvatarMaterialPropertyBlock MaterialPropertyBlock
    // Size: 0x20
    // Offset: 0x18
    ::GlobalNamespace::OvrAvatarMaterialManager::AvatarMaterialPropertyBlock MaterialPropertyBlock;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OvrAvatarMaterialManager::AvatarMaterialPropertyBlock) == 0x20);
    public:
    // Get instance field reference: public OvrAvatarMaterialManager/AvatarComponentMaterialProperties[] ComponentMaterialProperties
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OvrAvatarMaterialManager::AvatarComponentMaterialProperties>& dyn_ComponentMaterialProperties();
    // Get instance field reference: public OvrAvatarMaterialManager/AvatarMaterialPropertyBlock MaterialPropertyBlock
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarMaterialManager::AvatarMaterialPropertyBlock& dyn_MaterialPropertyBlock();
    // public System.Void .ctor()
    // Offset: 0x8CCA50
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OvrAvatarMaterialManager::AvatarMaterialConfig* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::AvatarMaterialConfig::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OvrAvatarMaterialManager::AvatarMaterialConfig*, creationType>()));
    }
  }; // OvrAvatarMaterialManager/AvatarMaterialConfig
  #pragma pack(pop)
  static check_size<sizeof(OvrAvatarMaterialManager::AvatarMaterialConfig), 24 + sizeof(::GlobalNamespace::OvrAvatarMaterialManager::AvatarMaterialPropertyBlock)> __GlobalNamespace_OvrAvatarMaterialManager_AvatarMaterialConfigSizeCheck;
  static_assert(sizeof(OvrAvatarMaterialManager::AvatarMaterialConfig) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OvrAvatarMaterialManager::AvatarMaterialConfig::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
