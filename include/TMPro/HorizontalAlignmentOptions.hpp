// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: TMPro
namespace TMPro {
  // Forward declaring type: HorizontalAlignmentOptions
  struct HorizontalAlignmentOptions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::TMPro::HorizontalAlignmentOptions, "TMPro", "HorizontalAlignmentOptions");
// Type namespace: TMPro
namespace TMPro {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: TMPro.HorizontalAlignmentOptions
  // [TokenAttribute] Offset: FFFFFFFF
  struct HorizontalAlignmentOptions/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: HorizontalAlignmentOptions
    constexpr HorizontalAlignmentOptions(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public TMPro.HorizontalAlignmentOptions Left
    static constexpr const int Left = 1;
    // Get static field: static public TMPro.HorizontalAlignmentOptions Left
    static ::TMPro::HorizontalAlignmentOptions _get_Left();
    // Set static field: static public TMPro.HorizontalAlignmentOptions Left
    static void _set_Left(::TMPro::HorizontalAlignmentOptions value);
    // static field const value: static public TMPro.HorizontalAlignmentOptions Center
    static constexpr const int Center = 2;
    // Get static field: static public TMPro.HorizontalAlignmentOptions Center
    static ::TMPro::HorizontalAlignmentOptions _get_Center();
    // Set static field: static public TMPro.HorizontalAlignmentOptions Center
    static void _set_Center(::TMPro::HorizontalAlignmentOptions value);
    // static field const value: static public TMPro.HorizontalAlignmentOptions Right
    static constexpr const int Right = 4;
    // Get static field: static public TMPro.HorizontalAlignmentOptions Right
    static ::TMPro::HorizontalAlignmentOptions _get_Right();
    // Set static field: static public TMPro.HorizontalAlignmentOptions Right
    static void _set_Right(::TMPro::HorizontalAlignmentOptions value);
    // static field const value: static public TMPro.HorizontalAlignmentOptions Justified
    static constexpr const int Justified = 8;
    // Get static field: static public TMPro.HorizontalAlignmentOptions Justified
    static ::TMPro::HorizontalAlignmentOptions _get_Justified();
    // Set static field: static public TMPro.HorizontalAlignmentOptions Justified
    static void _set_Justified(::TMPro::HorizontalAlignmentOptions value);
    // static field const value: static public TMPro.HorizontalAlignmentOptions Flush
    static constexpr const int Flush = 16;
    // Get static field: static public TMPro.HorizontalAlignmentOptions Flush
    static ::TMPro::HorizontalAlignmentOptions _get_Flush();
    // Set static field: static public TMPro.HorizontalAlignmentOptions Flush
    static void _set_Flush(::TMPro::HorizontalAlignmentOptions value);
    // static field const value: static public TMPro.HorizontalAlignmentOptions Geometry
    static constexpr const int Geometry = 32;
    // Get static field: static public TMPro.HorizontalAlignmentOptions Geometry
    static ::TMPro::HorizontalAlignmentOptions _get_Geometry();
    // Set static field: static public TMPro.HorizontalAlignmentOptions Geometry
    static void _set_Geometry(::TMPro::HorizontalAlignmentOptions value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // TMPro.HorizontalAlignmentOptions
  #pragma pack(pop)
  static check_size<sizeof(HorizontalAlignmentOptions), 0 + sizeof(int)> __TMPro_HorizontalAlignmentOptionsSizeCheck;
  static_assert(sizeof(HorizontalAlignmentOptions) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
