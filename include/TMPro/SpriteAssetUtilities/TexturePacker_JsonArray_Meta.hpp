// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.SpriteSize
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray_SpriteSize.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::Meta, "TMPro.SpriteAssetUtilities", "TexturePacker_JsonArray/Meta");
// Type namespace: TMPro.SpriteAssetUtilities
namespace TMPro::SpriteAssetUtilities {
  // Size: 0x38
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.Meta
  // [TokenAttribute] Offset: FFFFFFFF
  struct TexturePacker_JsonArray::Meta/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.String app
    // Size: 0x8
    // Offset: 0x0
    ::StringW app;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String version
    // Size: 0x8
    // Offset: 0x8
    ::StringW version;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String image
    // Size: 0x8
    // Offset: 0x10
    ::StringW image;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String format
    // Size: 0x8
    // Offset: 0x18
    ::StringW format;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.SpriteSize size
    // Size: 0x8
    // Offset: 0x20
    ::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteSize size;
    // Field size check
    static_assert(sizeof(::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteSize) == 0x8);
    // public System.Single scale
    // Size: 0x4
    // Offset: 0x28
    float scale;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: scale and: smartupdate
    char __padding5[0x4] = {};
    // public System.String smartupdate
    // Size: 0x8
    // Offset: 0x30
    ::StringW smartupdate;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating value type constructor for type: Meta
    constexpr Meta(::StringW app_ = {}, ::StringW version_ = {}, ::StringW image_ = {}, ::StringW format_ = {}, ::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteSize size_ = {}, float scale_ = {}, ::StringW smartupdate_ = {}) noexcept : app{app_}, version{version_}, image{image_}, format{format_}, size{size_}, scale{scale_}, smartupdate{smartupdate_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.String app
    [[deprecated("Use field access instead!")]] ::StringW& dyn_app();
    // Get instance field reference: public System.String version
    [[deprecated("Use field access instead!")]] ::StringW& dyn_version();
    // Get instance field reference: public System.String image
    [[deprecated("Use field access instead!")]] ::StringW& dyn_image();
    // Get instance field reference: public System.String format
    [[deprecated("Use field access instead!")]] ::StringW& dyn_format();
    // Get instance field reference: public TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.SpriteSize size
    [[deprecated("Use field access instead!")]] ::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteSize& dyn_size();
    // Get instance field reference: public System.Single scale
    [[deprecated("Use field access instead!")]] float& dyn_scale();
    // Get instance field reference: public System.String smartupdate
    [[deprecated("Use field access instead!")]] ::StringW& dyn_smartupdate();
  }; // TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.Meta
  #pragma pack(pop)
  static check_size<sizeof(TexturePacker_JsonArray::Meta), 48 + sizeof(::StringW)> __TMPro_SpriteAssetUtilities_TexturePacker_JsonArray_MetaSizeCheck;
  static_assert(sizeof(TexturePacker_JsonArray::Meta) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
