// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TMP_Settings
  class TMP_Settings;
  // Forward declaring type: TMP_FontAsset
  class TMP_FontAsset;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: TMPro
namespace TMPro {
  // Forward declaring type: TMP_ResourceManager
  class TMP_ResourceManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::TMPro::TMP_ResourceManager);
DEFINE_IL2CPP_ARG_TYPE(::TMPro::TMP_ResourceManager*, "TMPro", "TMP_ResourceManager");
// Type namespace: TMPro
namespace TMPro {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: TMPro.TMP_ResourceManager
  // [TokenAttribute] Offset: FFFFFFFF
  class TMP_ResourceManager : public ::Il2CppObject {
    public:
    // Get static field: static private readonly TMPro.TMP_ResourceManager s_instance
    static ::TMPro::TMP_ResourceManager* _get_s_instance();
    // Set static field: static private readonly TMPro.TMP_ResourceManager s_instance
    static void _set_s_instance(::TMPro::TMP_ResourceManager* value);
    // Get static field: static private TMPro.TMP_Settings s_TextSettings
    static ::TMPro::TMP_Settings* _get_s_TextSettings();
    // Set static field: static private TMPro.TMP_Settings s_TextSettings
    static void _set_s_TextSettings(::TMPro::TMP_Settings* value);
    // Get static field: static private readonly System.Collections.Generic.List`1<TMPro.TMP_FontAsset> s_FontAssetReferences
    static ::System::Collections::Generic::List_1<::TMPro::TMP_FontAsset*>* _get_s_FontAssetReferences();
    // Set static field: static private readonly System.Collections.Generic.List`1<TMPro.TMP_FontAsset> s_FontAssetReferences
    static void _set_s_FontAssetReferences(::System::Collections::Generic::List_1<::TMPro::TMP_FontAsset*>* value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,TMPro.TMP_FontAsset> s_FontAssetReferenceLookup
    static ::System::Collections::Generic::Dictionary_2<int, ::TMPro::TMP_FontAsset*>* _get_s_FontAssetReferenceLookup();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,TMPro.TMP_FontAsset> s_FontAssetReferenceLookup
    static void _set_s_FontAssetReferenceLookup(::System::Collections::Generic::Dictionary_2<int, ::TMPro::TMP_FontAsset*>* value);
    // static private System.Void .cctor()
    // Offset: 0x9B07E4
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x9B08D4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TMP_ResourceManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_ResourceManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TMP_ResourceManager*, creationType>()));
    }
    // static TMPro.TMP_Settings GetTextSettings()
    // Offset: 0x9B08DC
    static ::TMPro::TMP_Settings* GetTextSettings();
    // static public System.Void AddFontAsset(TMPro.TMP_FontAsset fontAsset)
    // Offset: 0x9B0A10
    static void AddFontAsset(::TMPro::TMP_FontAsset* fontAsset);
    // static public System.Boolean TryGetFontAsset(System.Int32 hashcode, out TMPro.TMP_FontAsset fontAsset)
    // Offset: 0x9B0B3C
    static bool TryGetFontAsset(int hashcode, ByRef<::TMPro::TMP_FontAsset*> fontAsset);
    // static System.Void RebuildFontAssetCache(System.Int32 instanceID)
    // Offset: 0x9B0BDC
    static void RebuildFontAssetCache(int instanceID);
  }; // TMPro.TMP_ResourceManager
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: TMPro::TMP_ResourceManager::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&TMPro::TMP_ResourceManager::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TMP_ResourceManager*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TMP_ResourceManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: TMPro::TMP_ResourceManager::GetTextSettings
// Il2CppName: GetTextSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::TMPro::TMP_Settings* (*)()>(&TMPro::TMP_ResourceManager::GetTextSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TMP_ResourceManager*), "GetTextSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TMP_ResourceManager::AddFontAsset
// Il2CppName: AddFontAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::TMPro::TMP_FontAsset*)>(&TMPro::TMP_ResourceManager::AddFontAsset)> {
  static const MethodInfo* get() {
    static auto* fontAsset = &::il2cpp_utils::GetClassFromName("TMPro", "TMP_FontAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TMP_ResourceManager*), "AddFontAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fontAsset});
  }
};
// Writing MetadataGetter for method: TMPro::TMP_ResourceManager::TryGetFontAsset
// Il2CppName: TryGetFontAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int, ByRef<::TMPro::TMP_FontAsset*>)>(&TMPro::TMP_ResourceManager::TryGetFontAsset)> {
  static const MethodInfo* get() {
    static auto* hashcode = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* fontAsset = &::il2cpp_utils::GetClassFromName("TMPro", "TMP_FontAsset")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TMP_ResourceManager*), "TryGetFontAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hashcode, fontAsset});
  }
};
// Writing MetadataGetter for method: TMPro::TMP_ResourceManager::RebuildFontAssetCache
// Il2CppName: RebuildFontAssetCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&TMPro::TMP_ResourceManager::RebuildFontAssetCache)> {
  static const MethodInfo* get() {
    static auto* instanceID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TMP_ResourceManager*), "RebuildFontAssetCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instanceID});
  }
};
