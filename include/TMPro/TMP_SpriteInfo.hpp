// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: TMPro
namespace TMPro {
  // Forward declaring type: TMP_SpriteInfo
  struct TMP_SpriteInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::TMPro::TMP_SpriteInfo, "TMPro", "TMP_SpriteInfo");
// Type namespace: TMPro
namespace TMPro {
  // Size: 0xC
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: TMPro.TMP_SpriteInfo
  // [TokenAttribute] Offset: FFFFFFFF
  struct TMP_SpriteInfo/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Int32 spriteIndex
    // Size: 0x4
    // Offset: 0x0
    int spriteIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 characterIndex
    // Size: 0x4
    // Offset: 0x4
    int characterIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 vertexIndex
    // Size: 0x4
    // Offset: 0x8
    int vertexIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: TMP_SpriteInfo
    constexpr TMP_SpriteInfo(int spriteIndex_ = {}, int characterIndex_ = {}, int vertexIndex_ = {}) noexcept : spriteIndex{spriteIndex_}, characterIndex{characterIndex_}, vertexIndex{vertexIndex_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Int32 spriteIndex
    [[deprecated]] int& dyn_spriteIndex();
    // Get instance field reference: public System.Int32 characterIndex
    [[deprecated]] int& dyn_characterIndex();
    // Get instance field reference: public System.Int32 vertexIndex
    [[deprecated]] int& dyn_vertexIndex();
  }; // TMPro.TMP_SpriteInfo
  #pragma pack(pop)
  static check_size<sizeof(TMP_SpriteInfo), 8 + sizeof(int)> __TMPro_TMP_SpriteInfoSizeCheck;
  static_assert(sizeof(TMP_SpriteInfo) == 0xC);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
