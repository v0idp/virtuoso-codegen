// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextAlignmentOptions
  struct TextAlignmentOptions;
}
// Completed forward declares
// Type namespace: TMPro
namespace TMPro {
  // Forward declaring type: TMP_Compatibility
  class TMP_Compatibility;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::TMPro::TMP_Compatibility);
DEFINE_IL2CPP_ARG_TYPE(::TMPro::TMP_Compatibility*, "TMPro", "TMP_Compatibility");
// Type namespace: TMPro
namespace TMPro {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: TMPro.TMP_Compatibility
  // [TokenAttribute] Offset: FFFFFFFF
  class TMP_Compatibility : public ::Il2CppObject {
    public:
    // Nested type: ::TMPro::TMP_Compatibility::AnchorPositions
    struct AnchorPositions;
    // static public TMPro.TextAlignmentOptions ConvertTextAlignmentEnumValues(TMPro.TextAlignmentOptions oldValue)
    // Offset: 0xC2E400
    static ::TMPro::TextAlignmentOptions ConvertTextAlignmentEnumValues(::TMPro::TextAlignmentOptions oldValue);
  }; // TMPro.TMP_Compatibility
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: TMPro::TMP_Compatibility::ConvertTextAlignmentEnumValues
// Il2CppName: ConvertTextAlignmentEnumValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::TMPro::TextAlignmentOptions (*)(::TMPro::TextAlignmentOptions)>(&TMPro::TMP_Compatibility::ConvertTextAlignmentEnumValues)> {
  static const MethodInfo* get() {
    static auto* oldValue = &::il2cpp_utils::GetClassFromName("TMPro", "TextAlignmentOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TMP_Compatibility*), "ConvertTextAlignmentEnumValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oldValue});
  }
};
