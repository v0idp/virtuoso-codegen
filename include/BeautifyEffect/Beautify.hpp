// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.RenderTextureDescriptor
#include "UnityEngine/RenderTextureDescriptor.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: BeautifyEffect.BEAUTIFY_PRESET
#include "BeautifyEffect/BEAUTIFY_PRESET.hpp"
// Including type: BeautifyEffect.BEAUTIFY_QUALITY
#include "BeautifyEffect/BEAUTIFY_QUALITY.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.FilterMode
#include "UnityEngine/FilterMode.hpp"
// Including type: BeautifyEffect.BEAUTIFY_TMO
#include "BeautifyEffect/BEAUTIFY_TMO.hpp"
// Including type: UnityEngine.RenderTextureFormat
#include "UnityEngine/RenderTextureFormat.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: BeautifyEffect
namespace BeautifyEffect {
  // Forward declaring type: BeautifyProfile
  class BeautifyProfile;
  // Forward declaring type: OnBeforeFocusEvent
  class OnBeforeFocusEvent;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture2D
  class Texture2D;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: RenderTexture
  class RenderTexture;
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Shader
  class Shader;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: BeautifyEffect
namespace BeautifyEffect {
  // Forward declaring type: Beautify
  class Beautify;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::BeautifyEffect::Beautify);
DEFINE_IL2CPP_ARG_TYPE(::BeautifyEffect::Beautify*, "BeautifyEffect", "Beautify");
// Type namespace: BeautifyEffect
namespace BeautifyEffect {
  // Size: 0x440
  #pragma pack(push, 1)
  // Autogenerated type: BeautifyEffect.Beautify
  // [TokenAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: 66BE34
  // [HelpURLAttribute] Offset: 66BE34
  // [ImageEffectAllowedInSceneView] Offset: FFFFFFFF
  // [RequireComponent] Offset: 66BE34
  // [ExecuteInEditMode] Offset: FFFFFFFF
  class Beautify : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::BeautifyEffect::Beautify::$DoBlink$d__712
    class $DoBlink$d__712;
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private BeautifyEffect.BEAUTIFY_PRESET _preset
    // Size: 0x4
    // Offset: 0x18
    ::BeautifyEffect::BEAUTIFY_PRESET preset;
    // Field size check
    static_assert(sizeof(::BeautifyEffect::BEAUTIFY_PRESET) == 0x4);
    // private BeautifyEffect.BEAUTIFY_QUALITY _quality
    // Size: 0x4
    // Offset: 0x1C
    ::BeautifyEffect::BEAUTIFY_QUALITY quality;
    // Field size check
    static_assert(sizeof(::BeautifyEffect::BEAUTIFY_QUALITY) == 0x4);
    // private BeautifyEffect.BeautifyProfile _profile
    // Size: 0x8
    // Offset: 0x20
    ::BeautifyEffect::BeautifyProfile* profile;
    // Field size check
    static_assert(sizeof(::BeautifyEffect::BeautifyProfile*) == 0x8);
    // private System.Boolean _compareMode
    // Size: 0x1
    // Offset: 0x28
    bool compareMode;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: compareMode and: compareLineAngle
    char __padding3[0x3] = {};
    // [RangeAttribute] Offset: 0x678700
    // private System.Single _compareLineAngle
    // Size: 0x4
    // Offset: 0x2C
    float compareLineAngle;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x678748
    // private System.Single _compareLineWidth
    // Size: 0x4
    // Offset: 0x30
    float compareLineWidth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x678790
    // private System.Single _dither
    // Size: 0x4
    // Offset: 0x34
    float dither;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x6787D4
    // private System.Single _ditherDepth
    // Size: 0x4
    // Offset: 0x38
    float ditherDepth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x678814
    // private System.Single _sharpenMinDepth
    // Size: 0x4
    // Offset: 0x3C
    float sharpenMinDepth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x678854
    // private System.Single _sharpenMaxDepth
    // Size: 0x4
    // Offset: 0x40
    float sharpenMaxDepth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x678898
    // private System.Single _sharpen
    // Size: 0x4
    // Offset: 0x44
    float sharpen;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x6788D8
    // private System.Single _sharpenDepthThreshold
    // Size: 0x4
    // Offset: 0x48
    float sharpenDepthThreshold;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Color _tintColor
    // Size: 0x10
    // Offset: 0x4C
    ::UnityEngine::Color tintColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // [RangeAttribute] Offset: 0x67892C
    // private System.Single _sharpenRelaxation
    // Size: 0x4
    // Offset: 0x5C
    float sharpenRelaxation;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x678970
    // private System.Single _sharpenClamp
    // Size: 0x4
    // Offset: 0x60
    float sharpenClamp;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x6789B0
    // private System.Single _sharpenMotionSensibility
    // Size: 0x4
    // Offset: 0x64
    float sharpenMotionSensibility;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x6789F0
    // private System.Single _saturate
    // Size: 0x4
    // Offset: 0x68
    float saturate;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x678A30
    // private System.Single _contrast
    // Size: 0x4
    // Offset: 0x6C
    float contrast;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _brightness
    // Size: 0x4
    // Offset: 0x70
    float brightness;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x678A80
    // private System.Single _daltonize
    // Size: 0x4
    // Offset: 0x74
    float daltonize;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean _vignetting
    // Size: 0x1
    // Offset: 0x78
    bool vignetting;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: vignetting and: vignettingColor
    char __padding20[0x3] = {};
    // private UnityEngine.Color _vignettingColor
    // Size: 0x10
    // Offset: 0x7C
    ::UnityEngine::Color vignettingColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // [RangeAttribute] Offset: 0x678AE0
    // private System.Single _vignettingFade
    // Size: 0x4
    // Offset: 0x8C
    float vignettingFade;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean _vignettingCircularShape
    // Size: 0x1
    // Offset: 0x90
    bool vignettingCircularShape;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: vignettingCircularShape and: vignettingAspectRatio
    char __padding23[0x3] = {};
    // private System.Single _vignettingAspectRatio
    // Size: 0x4
    // Offset: 0x94
    float vignettingAspectRatio;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x678B40
    // private System.Single _vignettingBlink
    // Size: 0x4
    // Offset: 0x98
    float vignettingBlink;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: vignettingBlink and: vignettingMask
    char __padding25[0x4] = {};
    // private UnityEngine.Texture2D _vignettingMask
    // Size: 0x8
    // Offset: 0xA0
    ::UnityEngine::Texture2D* vignettingMask;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // private System.Boolean _frame
    // Size: 0x1
    // Offset: 0xA8
    bool frame;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: frame and: frameColor
    char __padding27[0x3] = {};
    // private UnityEngine.Color _frameColor
    // Size: 0x10
    // Offset: 0xAC
    ::UnityEngine::Color frameColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // Padding between fields: frameColor and: frameMask
    char __padding28[0x4] = {};
    // private UnityEngine.Texture2D _frameMask
    // Size: 0x8
    // Offset: 0xC0
    ::UnityEngine::Texture2D* frameMask;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // private System.Boolean _lut
    // Size: 0x1
    // Offset: 0xC8
    bool lut;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: lut and: lutIntensity
    char __padding30[0x3] = {};
    // [RangeAttribute] Offset: 0x678BD0
    // private System.Single _lutIntensity
    // Size: 0x4
    // Offset: 0xCC
    float lutIntensity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Texture2D _lutTexture
    // Size: 0x8
    // Offset: 0xD0
    ::UnityEngine::Texture2D* lutTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // private System.Boolean _nightVision
    // Size: 0x1
    // Offset: 0xD8
    bool nightVision;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: nightVision and: nightVisionColor
    char __padding33[0x3] = {};
    // private UnityEngine.Color _nightVisionColor
    // Size: 0x10
    // Offset: 0xDC
    ::UnityEngine::Color nightVisionColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private System.Boolean _outline
    // Size: 0x1
    // Offset: 0xEC
    bool outline;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: outline and: outlineColor
    char __padding35[0x3] = {};
    // private UnityEngine.Color _outlineColor
    // Size: 0x10
    // Offset: 0xF0
    ::UnityEngine::Color outlineColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private System.Boolean _thermalVision
    // Size: 0x1
    // Offset: 0x100
    bool thermalVision;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _lensDirt
    // Size: 0x1
    // Offset: 0x101
    bool lensDirt;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: lensDirt and: lensDirtThreshold
    char __padding38[0x2] = {};
    // [RangeAttribute] Offset: 0x678C80
    // private System.Single _lensDirtThreshold
    // Size: 0x4
    // Offset: 0x104
    float lensDirtThreshold;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x678CC0
    // private System.Single _lensDirtIntensity
    // Size: 0x4
    // Offset: 0x108
    float lensDirtIntensity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: lensDirtIntensity and: lensDirtTexture
    char __padding40[0x4] = {};
    // private UnityEngine.Texture2D _lensDirtTexture
    // Size: 0x8
    // Offset: 0x110
    ::UnityEngine::Texture2D* lensDirtTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // private System.Boolean _bloom
    // Size: 0x1
    // Offset: 0x118
    bool bloom;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: bloom and: bloomCullingMask
    char __padding42[0x3] = {};
    // private UnityEngine.LayerMask _bloomCullingMask
    // Size: 0x4
    // Offset: 0x11C
    ::UnityEngine::LayerMask bloomCullingMask;
    // Field size check
    static_assert(sizeof(::UnityEngine::LayerMask) == 0x4);
    // [RangeAttribute] Offset: 0x678D30
    // private System.Single _bloomLayerMaskDownsampling
    // Size: 0x4
    // Offset: 0x120
    float bloomLayerMaskDownsampling;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x678D70
    // private System.Single _bloomIntensity
    // Size: 0x4
    // Offset: 0x124
    float bloomIntensity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _bloomMaxBrightness
    // Size: 0x4
    // Offset: 0x128
    float bloomMaxBrightness;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x678DC0
    // private System.Single _bloomBoost0
    // Size: 0x4
    // Offset: 0x12C
    float bloomBoost0;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x678E00
    // private System.Single _bloomBoost1
    // Size: 0x4
    // Offset: 0x130
    float bloomBoost1;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x678E40
    // private System.Single _bloomBoost2
    // Size: 0x4
    // Offset: 0x134
    float bloomBoost2;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x678E80
    // private System.Single _bloomBoost3
    // Size: 0x4
    // Offset: 0x138
    float bloomBoost3;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x678EC0
    // private System.Single _bloomBoost4
    // Size: 0x4
    // Offset: 0x13C
    float bloomBoost4;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x678F00
    // private System.Single _bloomBoost5
    // Size: 0x4
    // Offset: 0x140
    float bloomBoost5;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean _bloomAntiflicker
    // Size: 0x1
    // Offset: 0x144
    bool bloomAntiflicker;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _bloomUltra
    // Size: 0x1
    // Offset: 0x145
    bool bloomUltra;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: bloomUltra and: bloomThreshold
    char __padding54[0x2] = {};
    // [RangeAttribute] Offset: 0x678F60
    // private System.Single _bloomThreshold
    // Size: 0x4
    // Offset: 0x148
    float bloomThreshold;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean _bloomCustomize
    // Size: 0x1
    // Offset: 0x14C
    bool bloomCustomize;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _bloomDebug
    // Size: 0x1
    // Offset: 0x14D
    bool bloomDebug;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: bloomDebug and: bloomWeight0
    char __padding57[0x2] = {};
    // [RangeAttribute] Offset: 0x678FC0
    // private System.Single _bloomWeight0
    // Size: 0x4
    // Offset: 0x150
    float bloomWeight0;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679000
    // private System.Single _bloomWeight1
    // Size: 0x4
    // Offset: 0x154
    float bloomWeight1;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679040
    // private System.Single _bloomWeight2
    // Size: 0x4
    // Offset: 0x158
    float bloomWeight2;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679080
    // private System.Single _bloomWeight3
    // Size: 0x4
    // Offset: 0x15C
    float bloomWeight3;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x6790C0
    // private System.Single _bloomWeight4
    // Size: 0x4
    // Offset: 0x160
    float bloomWeight4;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679100
    // private System.Single _bloomWeight5
    // Size: 0x4
    // Offset: 0x164
    float bloomWeight5;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean _bloomBlur
    // Size: 0x1
    // Offset: 0x168
    bool bloomBlur;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: bloomBlur and: bloomDepthAtten
    char __padding64[0x3] = {};
    // [RangeAttribute] Offset: 0x679150
    // private System.Single _bloomDepthAtten
    // Size: 0x4
    // Offset: 0x16C
    float bloomDepthAtten;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679190
    // private System.Single _bloomLayerZBias
    // Size: 0x4
    // Offset: 0x170
    float bloomLayerZBias;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean _anamorphicFlares
    // Size: 0x1
    // Offset: 0x174
    bool anamorphicFlares;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: anamorphicFlares and: anamorphicFlaresIntensity
    char __padding67[0x3] = {};
    // [RangeAttribute] Offset: 0x6791E0
    // private System.Single _anamorphicFlaresIntensity
    // Size: 0x4
    // Offset: 0x178
    float anamorphicFlaresIntensity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean _anamorphicFlaresAntiflicker
    // Size: 0x1
    // Offset: 0x17C
    bool anamorphicFlaresAntiflicker;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _anamorphicFlaresUltra
    // Size: 0x1
    // Offset: 0x17D
    bool anamorphicFlaresUltra;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: anamorphicFlaresUltra and: anamorphicFlaresThreshold
    char __padding70[0x2] = {};
    // [RangeAttribute] Offset: 0x679240
    // private System.Single _anamorphicFlaresThreshold
    // Size: 0x4
    // Offset: 0x180
    float anamorphicFlaresThreshold;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679280
    // private System.Single _anamorphicFlaresSpread
    // Size: 0x4
    // Offset: 0x184
    float anamorphicFlaresSpread;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean _anamorphicFlaresVertical
    // Size: 0x1
    // Offset: 0x188
    bool anamorphicFlaresVertical;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: anamorphicFlaresVertical and: anamorphicFlaresTint
    char __padding73[0x3] = {};
    // private UnityEngine.Color _anamorphicFlaresTint
    // Size: 0x10
    // Offset: 0x18C
    ::UnityEngine::Color anamorphicFlaresTint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private System.Boolean _anamorphicFlaresBlur
    // Size: 0x1
    // Offset: 0x19C
    bool anamorphicFlaresBlur;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _depthOfField
    // Size: 0x1
    // Offset: 0x19D
    bool depthOfField;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _depthOfFieldTransparencySupport
    // Size: 0x1
    // Offset: 0x19E
    bool depthOfFieldTransparencySupport;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: depthOfFieldTransparencySupport and: depthOfFieldTransparencyLayerMask
    char __padding77[0x1] = {};
    // private UnityEngine.LayerMask _depthOfFieldTransparencyLayerMask
    // Size: 0x4
    // Offset: 0x1A0
    ::UnityEngine::LayerMask depthOfFieldTransparencyLayerMask;
    // Field size check
    static_assert(sizeof(::UnityEngine::LayerMask) == 0x4);
    // Padding between fields: depthOfFieldTransparencyLayerMask and: depthOfFieldTargetFocus
    char __padding78[0x4] = {};
    // private UnityEngine.Transform _depthOfFieldTargetFocus
    // Size: 0x8
    // Offset: 0x1A8
    ::UnityEngine::Transform* depthOfFieldTargetFocus;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private System.Boolean _depthOfFieldDebug
    // Size: 0x1
    // Offset: 0x1B0
    bool depthOfFieldDebug;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _depthOfFieldAutofocus
    // Size: 0x1
    // Offset: 0x1B1
    bool depthOfFieldAutofocus;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: depthOfFieldAutofocus and: depthofFieldAutofocusViewportPoint
    char __padding81[0x2] = {};
    // private UnityEngine.Vector2 _depthofFieldAutofocusViewportPoint
    // Size: 0x8
    // Offset: 0x1B4
    ::UnityEngine::Vector2 depthofFieldAutofocusViewportPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private System.Single _depthOfFieldAutofocusMinDistance
    // Size: 0x4
    // Offset: 0x1BC
    float depthOfFieldAutofocusMinDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _depthOfFieldAutofocusMaxDistance
    // Size: 0x4
    // Offset: 0x1C0
    float depthOfFieldAutofocusMaxDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.LayerMask _depthOfFieldAutofocusLayerMask
    // Size: 0x4
    // Offset: 0x1C4
    ::UnityEngine::LayerMask depthOfFieldAutofocusLayerMask;
    // Field size check
    static_assert(sizeof(::UnityEngine::LayerMask) == 0x4);
    // private UnityEngine.LayerMask _depthOfFieldExclusionLayerMask
    // Size: 0x4
    // Offset: 0x1C8
    ::UnityEngine::LayerMask depthOfFieldExclusionLayerMask;
    // Field size check
    static_assert(sizeof(::UnityEngine::LayerMask) == 0x4);
    // [RangeAttribute] Offset: 0x6793A4
    // private System.Single _depthOfFieldExclusionLayerMaskDownsampling
    // Size: 0x4
    // Offset: 0x1CC
    float depthOfFieldExclusionLayerMaskDownsampling;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x6793E4
    // private System.Single _depthOfFieldTransparencySupportDownsampling
    // Size: 0x4
    // Offset: 0x1D0
    float depthOfFieldTransparencySupportDownsampling;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679424
    // private System.Single _depthOfFieldExclusionBias
    // Size: 0x4
    // Offset: 0x1D4
    float depthOfFieldExclusionBias;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679468
    // private System.Single _depthOfFieldDistance
    // Size: 0x4
    // Offset: 0x1D8
    float depthOfFieldDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x6794AC
    // private System.Single _depthOfFieldFocusSpeed
    // Size: 0x4
    // Offset: 0x1DC
    float depthOfFieldFocusSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x6794F0
    // private System.Int32 _depthOfFieldDownsampling
    // Size: 0x4
    // Offset: 0x1E0
    int depthOfFieldDownsampling;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [RangeAttribute] Offset: 0x679530
    // private System.Int32 _depthOfFieldMaxSamples
    // Size: 0x4
    // Offset: 0x1E4
    int depthOfFieldMaxSamples;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [RangeAttribute] Offset: 0x679570
    // private System.Single _depthOfFieldFocalLength
    // Size: 0x4
    // Offset: 0x1E8
    float depthOfFieldFocalLength;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _depthOfFieldAperture
    // Size: 0x4
    // Offset: 0x1EC
    float depthOfFieldAperture;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean _depthOfFieldForegroundBlur
    // Size: 0x1
    // Offset: 0x1F0
    bool depthOfFieldForegroundBlur;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _depthOfFieldForegroundBlurHQ
    // Size: 0x1
    // Offset: 0x1F1
    bool depthOfFieldForegroundBlurHQ;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: depthOfFieldForegroundBlurHQ and: depthOfFieldForegroundDistance
    char __padding97[0x2] = {};
    // private System.Single _depthOfFieldForegroundDistance
    // Size: 0x4
    // Offset: 0x1F4
    float depthOfFieldForegroundDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean _depthOfFieldBokeh
    // Size: 0x1
    // Offset: 0x1F8
    bool depthOfFieldBokeh;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: depthOfFieldBokeh and: depthOfFieldBokehThreshold
    char __padding99[0x3] = {};
    // [RangeAttribute] Offset: 0x679604
    // private System.Single _depthOfFieldBokehThreshold
    // Size: 0x4
    // Offset: 0x1FC
    float depthOfFieldBokehThreshold;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679644
    // private System.Single _depthOfFieldBokehIntensity
    // Size: 0x4
    // Offset: 0x200
    float depthOfFieldBokehIntensity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _depthOfFieldMaxBrightness
    // Size: 0x4
    // Offset: 0x204
    float depthOfFieldMaxBrightness;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679694
    // private System.Single _depthOfFieldMaxDistance
    // Size: 0x4
    // Offset: 0x208
    float depthOfFieldMaxDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.FilterMode _depthOfFieldFilterMode
    // Size: 0x4
    // Offset: 0x20C
    ::UnityEngine::FilterMode depthOfFieldFilterMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::FilterMode) == 0x4);
    // public BeautifyEffect.OnBeforeFocusEvent OnBeforeFocus
    // Size: 0x8
    // Offset: 0x210
    ::BeautifyEffect::OnBeforeFocusEvent* OnBeforeFocus;
    // Field size check
    static_assert(sizeof(::BeautifyEffect::OnBeforeFocusEvent*) == 0x8);
    // private System.Boolean _eyeAdaptation
    // Size: 0x1
    // Offset: 0x218
    bool eyeAdaptation;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: eyeAdaptation and: eyeAdaptationMinExposure
    char __padding106[0x3] = {};
    // [RangeAttribute] Offset: 0x6796F4
    // private System.Single _eyeAdaptationMinExposure
    // Size: 0x4
    // Offset: 0x21C
    float eyeAdaptationMinExposure;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679734
    // private System.Single _eyeAdaptationMaxExposure
    // Size: 0x4
    // Offset: 0x220
    float eyeAdaptationMaxExposure;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679778
    // private System.Single _eyeAdaptationSpeedToLight
    // Size: 0x4
    // Offset: 0x224
    float eyeAdaptationSpeedToLight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x6797B8
    // private System.Single _eyeAdaptationSpeedToDark
    // Size: 0x4
    // Offset: 0x228
    float eyeAdaptationSpeedToDark;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean _purkinje
    // Size: 0x1
    // Offset: 0x22C
    bool purkinje;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: purkinje and: purkinjeAmount
    char __padding111[0x3] = {};
    // [RangeAttribute] Offset: 0x679808
    // private System.Single _purkinjeAmount
    // Size: 0x4
    // Offset: 0x230
    float purkinjeAmount;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679848
    // private System.Single _purkinjeLuminanceThreshold
    // Size: 0x4
    // Offset: 0x234
    float purkinjeLuminanceThreshold;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private BeautifyEffect.BEAUTIFY_TMO _tonemap
    // Size: 0x4
    // Offset: 0x238
    ::BeautifyEffect::BEAUTIFY_TMO tonemap;
    // Field size check
    static_assert(sizeof(::BeautifyEffect::BEAUTIFY_TMO) == 0x4);
    // private System.Boolean _sunFlares
    // Size: 0x1
    // Offset: 0x23C
    bool sunFlares;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: sunFlares and: sun
    char __padding115[0x3] = {};
    // private UnityEngine.Transform _sun
    // Size: 0x8
    // Offset: 0x240
    ::UnityEngine::Transform* sun;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.LayerMask _sunFlaresLayerMask
    // Size: 0x4
    // Offset: 0x248
    ::UnityEngine::LayerMask sunFlaresLayerMask;
    // Field size check
    static_assert(sizeof(::UnityEngine::LayerMask) == 0x4);
    // [RangeAttribute] Offset: 0x6798C8
    // private System.Single _sunFlaresIntensity
    // Size: 0x4
    // Offset: 0x24C
    float sunFlaresIntensity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679908
    // private System.Single _sunFlaresSolarWindSpeed
    // Size: 0x4
    // Offset: 0x250
    float sunFlaresSolarWindSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Color _sunFlaresTint
    // Size: 0x10
    // Offset: 0x254
    ::UnityEngine::Color sunFlaresTint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // [RangeAttribute] Offset: 0x679958
    // private System.Int32 _sunFlaresDownsampling
    // Size: 0x4
    // Offset: 0x264
    int sunFlaresDownsampling;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [RangeAttribute] Offset: 0x679998
    // private System.Single _sunFlaresSunIntensity
    // Size: 0x4
    // Offset: 0x268
    float sunFlaresSunIntensity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x6799D8
    // private System.Single _sunFlaresSunDiskSize
    // Size: 0x4
    // Offset: 0x26C
    float sunFlaresSunDiskSize;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679A18
    // private System.Single _sunFlaresSunRayDiffractionIntensity
    // Size: 0x4
    // Offset: 0x270
    float sunFlaresSunRayDiffractionIntensity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679A58
    // private System.Single _sunFlaresSunRayDiffractionThreshold
    // Size: 0x4
    // Offset: 0x274
    float sunFlaresSunRayDiffractionThreshold;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679A98
    // private System.Single _sunFlaresCoronaRays1Length
    // Size: 0x4
    // Offset: 0x278
    float sunFlaresCoronaRays1Length;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679ADC
    // private System.Int32 _sunFlaresCoronaRays1Streaks
    // Size: 0x4
    // Offset: 0x27C
    int sunFlaresCoronaRays1Streaks;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [RangeAttribute] Offset: 0x679B1C
    // private System.Single _sunFlaresCoronaRays1Spread
    // Size: 0x4
    // Offset: 0x280
    float sunFlaresCoronaRays1Spread;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679B60
    // private System.Single _sunFlaresCoronaRays1AngleOffset
    // Size: 0x4
    // Offset: 0x284
    float sunFlaresCoronaRays1AngleOffset;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679BA4
    // private System.Single _sunFlaresCoronaRays2Length
    // Size: 0x4
    // Offset: 0x288
    float sunFlaresCoronaRays2Length;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679BE8
    // private System.Int32 _sunFlaresCoronaRays2Streaks
    // Size: 0x4
    // Offset: 0x28C
    int sunFlaresCoronaRays2Streaks;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [RangeAttribute] Offset: 0x679C28
    // private System.Single _sunFlaresCoronaRays2Spread
    // Size: 0x4
    // Offset: 0x290
    float sunFlaresCoronaRays2Spread;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679C6C
    // private System.Single _sunFlaresCoronaRays2AngleOffset
    // Size: 0x4
    // Offset: 0x294
    float sunFlaresCoronaRays2AngleOffset;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679CB0
    // private System.Single _sunFlaresGhosts1Size
    // Size: 0x4
    // Offset: 0x298
    float sunFlaresGhosts1Size;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679CF0
    // private System.Single _sunFlaresGhosts1Offset
    // Size: 0x4
    // Offset: 0x29C
    float sunFlaresGhosts1Offset;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679D30
    // private System.Single _sunFlaresGhosts1Brightness
    // Size: 0x4
    // Offset: 0x2A0
    float sunFlaresGhosts1Brightness;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679D70
    // private System.Single _sunFlaresGhosts2Size
    // Size: 0x4
    // Offset: 0x2A4
    float sunFlaresGhosts2Size;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679DB0
    // private System.Single _sunFlaresGhosts2Offset
    // Size: 0x4
    // Offset: 0x2A8
    float sunFlaresGhosts2Offset;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679DF0
    // private System.Single _sunFlaresGhosts2Brightness
    // Size: 0x4
    // Offset: 0x2AC
    float sunFlaresGhosts2Brightness;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679E30
    // private System.Single _sunFlaresGhosts3Size
    // Size: 0x4
    // Offset: 0x2B0
    float sunFlaresGhosts3Size;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679E70
    // private System.Single _sunFlaresGhosts3Brightness
    // Size: 0x4
    // Offset: 0x2B4
    float sunFlaresGhosts3Brightness;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679EB0
    // private System.Single _sunFlaresGhosts3Offset
    // Size: 0x4
    // Offset: 0x2B8
    float sunFlaresGhosts3Offset;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679EF0
    // private System.Single _sunFlaresGhosts4Size
    // Size: 0x4
    // Offset: 0x2BC
    float sunFlaresGhosts4Size;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679F30
    // private System.Single _sunFlaresGhosts4Offset
    // Size: 0x4
    // Offset: 0x2C0
    float sunFlaresGhosts4Offset;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679F70
    // private System.Single _sunFlaresGhosts4Brightness
    // Size: 0x4
    // Offset: 0x2C4
    float sunFlaresGhosts4Brightness;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679FB0
    // private System.Single _sunFlaresHaloOffset
    // Size: 0x4
    // Offset: 0x2C8
    float sunFlaresHaloOffset;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x679FF0
    // private System.Single _sunFlaresHaloAmplitude
    // Size: 0x4
    // Offset: 0x2CC
    float sunFlaresHaloAmplitude;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x67A034
    // private System.Single _sunFlaresHaloIntensity
    // Size: 0x4
    // Offset: 0x2D0
    float sunFlaresHaloIntensity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean _sunFlaresRotationDeadZone
    // Size: 0x1
    // Offset: 0x2D4
    bool sunFlaresRotationDeadZone;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _blur
    // Size: 0x1
    // Offset: 0x2D5
    bool blur;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: blur and: blurIntensity
    char __padding150[0x2] = {};
    // [RangeAttribute] Offset: 0x67A094
    // private System.Single _blurIntensity
    // Size: 0x4
    // Offset: 0x2D8
    float blurIntensity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x67A0D4
    // private System.Int32 _pixelateAmount
    // Size: 0x4
    // Offset: 0x2DC
    int pixelateAmount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean _pixelateDownscale
    // Size: 0x1
    // Offset: 0x2E0
    bool pixelateDownscale;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: pixelateDownscale and: antialiasStrength
    char __padding153[0x3] = {};
    // [RangeAttribute] Offset: 0x67A128
    // private System.Single _antialiasStrength
    // Size: 0x4
    // Offset: 0x2E4
    float antialiasStrength;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x67A168
    // private System.Single _antialiasDepthThreshold
    // Size: 0x4
    // Offset: 0x2E8
    float antialiasDepthThreshold;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Boolean isDirty
    // Size: 0x1
    // Offset: 0x2EC
    bool isDirty;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isDirty and: bMatDesktop
    char __padding156[0x3] = {};
    // private UnityEngine.Material bMatDesktop
    // Size: 0x8
    // Offset: 0x2F0
    ::UnityEngine::Material* bMatDesktop;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // private UnityEngine.Material bMatMobile
    // Size: 0x8
    // Offset: 0x2F8
    ::UnityEngine::Material* bMatMobile;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // private UnityEngine.Material bMatBasic
    // Size: 0x8
    // Offset: 0x300
    ::UnityEngine::Material* bMatBasic;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // private UnityEngine.Material bMat
    // Size: 0x8
    // Offset: 0x308
    ::UnityEngine::Material* bMat;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // private UnityEngine.Camera currentCamera
    // Size: 0x8
    // Offset: 0x310
    ::UnityEngine::Camera* currentCamera;
    // Field size check
    static_assert(sizeof(::UnityEngine::Camera*) == 0x8);
    // private UnityEngine.Vector3 camPrevForward
    // Size: 0xC
    // Offset: 0x318
    ::UnityEngine::Vector3 camPrevForward;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 camPrevPos
    // Size: 0xC
    // Offset: 0x324
    ::UnityEngine::Vector3 camPrevPos;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single currSens
    // Size: 0x4
    // Offset: 0x330
    float currSens;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Int32 renderPass
    // Size: 0x4
    // Offset: 0x334
    int renderPass;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.RenderTextureFormat rtFormat
    // Size: 0x4
    // Offset: 0x338
    ::UnityEngine::RenderTextureFormat rtFormat;
    // Field size check
    static_assert(sizeof(::UnityEngine::RenderTextureFormat) == 0x4);
    // Padding between fields: rtFormat and: rt
    char __padding166[0x4] = {};
    // private UnityEngine.RenderTexture[] rt
    // Size: 0x8
    // Offset: 0x340
    ::ArrayW<::UnityEngine::RenderTexture*> rt;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::RenderTexture*>) == 0x8);
    // private UnityEngine.RenderTexture[] rtAF
    // Size: 0x8
    // Offset: 0x348
    ::ArrayW<::UnityEngine::RenderTexture*> rtAF;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::RenderTexture*>) == 0x8);
    // private UnityEngine.RenderTexture[] rtEA
    // Size: 0x8
    // Offset: 0x350
    ::ArrayW<::UnityEngine::RenderTexture*> rtEA;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::RenderTexture*>) == 0x8);
    // private UnityEngine.RenderTexture rtEAacum
    // Size: 0x8
    // Offset: 0x358
    ::UnityEngine::RenderTexture* rtEAacum;
    // Field size check
    static_assert(sizeof(::UnityEngine::RenderTexture*) == 0x8);
    // private UnityEngine.RenderTexture rtEAHist
    // Size: 0x8
    // Offset: 0x360
    ::UnityEngine::RenderTexture* rtEAHist;
    // Field size check
    static_assert(sizeof(::UnityEngine::RenderTexture*) == 0x8);
    // private System.Single dofPrevDistance
    // Size: 0x4
    // Offset: 0x368
    float dofPrevDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single dofLastAutofocusDistance
    // Size: 0x4
    // Offset: 0x36C
    float dofLastAutofocusDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector4 dofLastBokehData
    // Size: 0x10
    // Offset: 0x370
    ::UnityEngine::Vector4 dofLastBokehData;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector4) == 0x10);
    // private UnityEngine.Camera sceneCamera
    // Size: 0x8
    // Offset: 0x380
    ::UnityEngine::Camera* sceneCamera;
    // Field size check
    static_assert(sizeof(::UnityEngine::Camera*) == 0x8);
    // private UnityEngine.Camera depthCam
    // Size: 0x8
    // Offset: 0x388
    ::UnityEngine::Camera* depthCam;
    // Field size check
    static_assert(sizeof(::UnityEngine::Camera*) == 0x8);
    // private UnityEngine.GameObject depthCamObj
    // Size: 0x8
    // Offset: 0x390
    ::UnityEngine::GameObject* depthCamObj;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Collections.Generic.List`1<System.String> shaderKeywords
    // Size: 0x8
    // Offset: 0x398
    ::System::Collections::Generic::List_1<::StringW>* shaderKeywords;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // private UnityEngine.Shader depthShader
    // Size: 0x8
    // Offset: 0x3A0
    ::UnityEngine::Shader* depthShader;
    // Field size check
    static_assert(sizeof(::UnityEngine::Shader*) == 0x8);
    // private UnityEngine.Shader dofExclusionShader
    // Size: 0x8
    // Offset: 0x3A8
    ::UnityEngine::Shader* dofExclusionShader;
    // Field size check
    static_assert(sizeof(::UnityEngine::Shader*) == 0x8);
    // private System.Boolean shouldUpdateMaterialProperties
    // Size: 0x1
    // Offset: 0x3B0
    bool shouldUpdateMaterialProperties;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: shouldUpdateMaterialProperties and: sunFlareCurrentIntensity
    char __padding181[0x3] = {};
    // private System.Single sunFlareCurrentIntensity
    // Size: 0x4
    // Offset: 0x3B4
    float sunFlareCurrentIntensity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector4 sunLastScrPos
    // Size: 0x10
    // Offset: 0x3B8
    ::UnityEngine::Vector4 sunLastScrPos;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector4) == 0x10);
    // private System.Single sunLastRot
    // Size: 0x4
    // Offset: 0x3C8
    float sunLastRot;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: sunLastRot and: flareNoise
    char __padding184[0x4] = {};
    // private UnityEngine.Texture2D flareNoise
    // Size: 0x8
    // Offset: 0x3D0
    ::UnityEngine::Texture2D* flareNoise;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // private UnityEngine.RenderTexture dofDepthTexture
    // Size: 0x8
    // Offset: 0x3D8
    ::UnityEngine::RenderTexture* dofDepthTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::RenderTexture*) == 0x8);
    // private UnityEngine.RenderTexture dofExclusionTexture
    // Size: 0x8
    // Offset: 0x3E0
    ::UnityEngine::RenderTexture* dofExclusionTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::RenderTexture*) == 0x8);
    // private UnityEngine.RenderTexture bloomSourceTexture
    // Size: 0x8
    // Offset: 0x3E8
    ::UnityEngine::RenderTexture* bloomSourceTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::RenderTexture*) == 0x8);
    // private UnityEngine.RenderTexture bloomSourceDepthTexture
    // Size: 0x8
    // Offset: 0x3F0
    ::UnityEngine::RenderTexture* bloomSourceDepthTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::RenderTexture*) == 0x8);
    // private UnityEngine.RenderTexture pixelateTexture
    // Size: 0x8
    // Offset: 0x3F8
    ::UnityEngine::RenderTexture* pixelateTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::RenderTexture*) == 0x8);
    // private UnityEngine.RenderTextureDescriptor rtDescBase
    // Size: 0x34
    // Offset: 0x400
    ::UnityEngine::RenderTextureDescriptor rtDescBase;
    // Field size check
    static_assert(sizeof(::UnityEngine::RenderTextureDescriptor) == 0x34);
    // private System.Single sunFlareTime
    // Size: 0x4
    // Offset: 0x434
    float sunFlareTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Int32 dofCurrentLayerMaskValue
    // Size: 0x4
    // Offset: 0x438
    int dofCurrentLayerMaskValue;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 bloomCurrentLayerMaskValue
    // Size: 0x4
    // Offset: 0x43C
    int bloomCurrentLayerMaskValue;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get static field: static private BeautifyEffect.Beautify _beautify
    static ::BeautifyEffect::Beautify* _get__beautify();
    // Set static field: static private BeautifyEffect.Beautify _beautify
    static void _set__beautify(::BeautifyEffect::Beautify* value);
    // static field const value: static public System.String SKW_BLOOM
    static constexpr const char* SKW_BLOOM = "BEAUTIFY_BLOOM";
    // Get static field: static public System.String SKW_BLOOM
    static ::StringW _get_SKW_BLOOM();
    // Set static field: static public System.String SKW_BLOOM
    static void _set_SKW_BLOOM(::StringW value);
    // static field const value: static public System.String SKW_LUT
    static constexpr const char* SKW_LUT = "BEAUTIFY_LUT";
    // Get static field: static public System.String SKW_LUT
    static ::StringW _get_SKW_LUT();
    // Set static field: static public System.String SKW_LUT
    static void _set_SKW_LUT(::StringW value);
    // static field const value: static public System.String SKW_NIGHT_VISION
    static constexpr const char* SKW_NIGHT_VISION = "BEAUTIFY_NIGHT_VISION";
    // Get static field: static public System.String SKW_NIGHT_VISION
    static ::StringW _get_SKW_NIGHT_VISION();
    // Set static field: static public System.String SKW_NIGHT_VISION
    static void _set_SKW_NIGHT_VISION(::StringW value);
    // static field const value: static public System.String SKW_THERMAL_VISION
    static constexpr const char* SKW_THERMAL_VISION = "BEAUTIFY_THERMAL_VISION";
    // Get static field: static public System.String SKW_THERMAL_VISION
    static ::StringW _get_SKW_THERMAL_VISION();
    // Set static field: static public System.String SKW_THERMAL_VISION
    static void _set_SKW_THERMAL_VISION(::StringW value);
    // static field const value: static public System.String SKW_OUTLINE
    static constexpr const char* SKW_OUTLINE = "BEAUTIFY_OUTLINE";
    // Get static field: static public System.String SKW_OUTLINE
    static ::StringW _get_SKW_OUTLINE();
    // Set static field: static public System.String SKW_OUTLINE
    static void _set_SKW_OUTLINE(::StringW value);
    // static field const value: static public System.String SKW_FRAME
    static constexpr const char* SKW_FRAME = "BEAUTIFY_FRAME";
    // Get static field: static public System.String SKW_FRAME
    static ::StringW _get_SKW_FRAME();
    // Set static field: static public System.String SKW_FRAME
    static void _set_SKW_FRAME(::StringW value);
    // static field const value: static public System.String SKW_FRAME_MASK
    static constexpr const char* SKW_FRAME_MASK = "BEAUTIFY_FRAME_MASK";
    // Get static field: static public System.String SKW_FRAME_MASK
    static ::StringW _get_SKW_FRAME_MASK();
    // Set static field: static public System.String SKW_FRAME_MASK
    static void _set_SKW_FRAME_MASK(::StringW value);
    // static field const value: static public System.String SKW_DALTONIZE
    static constexpr const char* SKW_DALTONIZE = "BEAUTIFY_DALTONIZE";
    // Get static field: static public System.String SKW_DALTONIZE
    static ::StringW _get_SKW_DALTONIZE();
    // Set static field: static public System.String SKW_DALTONIZE
    static void _set_SKW_DALTONIZE(::StringW value);
    // static field const value: static public System.String SKW_DIRT
    static constexpr const char* SKW_DIRT = "BEAUTIFY_DIRT";
    // Get static field: static public System.String SKW_DIRT
    static ::StringW _get_SKW_DIRT();
    // Set static field: static public System.String SKW_DIRT
    static void _set_SKW_DIRT(::StringW value);
    // static field const value: static public System.String SKW_VIGNETTING
    static constexpr const char* SKW_VIGNETTING = "BEAUTIFY_VIGNETTING";
    // Get static field: static public System.String SKW_VIGNETTING
    static ::StringW _get_SKW_VIGNETTING();
    // Set static field: static public System.String SKW_VIGNETTING
    static void _set_SKW_VIGNETTING(::StringW value);
    // static field const value: static public System.String SKW_VIGNETTING_MASK
    static constexpr const char* SKW_VIGNETTING_MASK = "BEAUTIFY_VIGNETTING_MASK";
    // Get static field: static public System.String SKW_VIGNETTING_MASK
    static ::StringW _get_SKW_VIGNETTING_MASK();
    // Set static field: static public System.String SKW_VIGNETTING_MASK
    static void _set_SKW_VIGNETTING_MASK(::StringW value);
    // static field const value: static public System.String SKW_DEPTH_OF_FIELD
    static constexpr const char* SKW_DEPTH_OF_FIELD = "BEAUTIFY_DEPTH_OF_FIELD";
    // Get static field: static public System.String SKW_DEPTH_OF_FIELD
    static ::StringW _get_SKW_DEPTH_OF_FIELD();
    // Set static field: static public System.String SKW_DEPTH_OF_FIELD
    static void _set_SKW_DEPTH_OF_FIELD(::StringW value);
    // static field const value: static public System.String SKW_DEPTH_OF_FIELD_TRANSPARENT
    static constexpr const char* SKW_DEPTH_OF_FIELD_TRANSPARENT = "BEAUTIFY_DEPTH_OF_FIELD_TRANSPARENT";
    // Get static field: static public System.String SKW_DEPTH_OF_FIELD_TRANSPARENT
    static ::StringW _get_SKW_DEPTH_OF_FIELD_TRANSPARENT();
    // Set static field: static public System.String SKW_DEPTH_OF_FIELD_TRANSPARENT
    static void _set_SKW_DEPTH_OF_FIELD_TRANSPARENT(::StringW value);
    // static field const value: static public System.String SKW_EYE_ADAPTATION
    static constexpr const char* SKW_EYE_ADAPTATION = "BEAUTIFY_EYE_ADAPTATION";
    // Get static field: static public System.String SKW_EYE_ADAPTATION
    static ::StringW _get_SKW_EYE_ADAPTATION();
    // Set static field: static public System.String SKW_EYE_ADAPTATION
    static void _set_SKW_EYE_ADAPTATION(::StringW value);
    // static field const value: static public System.String SKW_TONEMAP_ACES
    static constexpr const char* SKW_TONEMAP_ACES = "BEAUTIFY_TONEMAP_ACES";
    // Get static field: static public System.String SKW_TONEMAP_ACES
    static ::StringW _get_SKW_TONEMAP_ACES();
    // Set static field: static public System.String SKW_TONEMAP_ACES
    static void _set_SKW_TONEMAP_ACES(::StringW value);
    // static field const value: static public System.String SKW_PURKINJE
    static constexpr const char* SKW_PURKINJE = "BEAUTIFY_PURKINJE";
    // Get static field: static public System.String SKW_PURKINJE
    static ::StringW _get_SKW_PURKINJE();
    // Set static field: static public System.String SKW_PURKINJE
    static void _set_SKW_PURKINJE(::StringW value);
    // static field const value: static public System.String SKW_BLOOM_USE_DEPTH
    static constexpr const char* SKW_BLOOM_USE_DEPTH = "BEAUTIFY_BLOOM_USE_DEPTH";
    // Get static field: static public System.String SKW_BLOOM_USE_DEPTH
    static ::StringW _get_SKW_BLOOM_USE_DEPTH();
    // Set static field: static public System.String SKW_BLOOM_USE_DEPTH
    static void _set_SKW_BLOOM_USE_DEPTH(::StringW value);
    // static field const value: static public System.String SKW_BLOOM_USE_LAYER
    static constexpr const char* SKW_BLOOM_USE_LAYER = "BEAUTIFY_BLOOM_USE_LAYER";
    // Get static field: static public System.String SKW_BLOOM_USE_LAYER
    static ::StringW _get_SKW_BLOOM_USE_LAYER();
    // Set static field: static public System.String SKW_BLOOM_USE_LAYER
    static void _set_SKW_BLOOM_USE_LAYER(::StringW value);
    // static field const value: static private System.String BEAUTIFY_BUILD_HINT
    static constexpr const char* BEAUTIFY_BUILD_HINT = "BeautifyBuildHint702b2";
    // Get static field: static private System.String BEAUTIFY_BUILD_HINT
    static ::StringW _get_BEAUTIFY_BUILD_HINT();
    // Set static field: static private System.String BEAUTIFY_BUILD_HINT
    static void _set_BEAUTIFY_BUILD_HINT(::StringW value);
    // Get instance field reference: private BeautifyEffect.BEAUTIFY_PRESET _preset
    ::BeautifyEffect::BEAUTIFY_PRESET& dyn__preset();
    // Get instance field reference: private BeautifyEffect.BEAUTIFY_QUALITY _quality
    ::BeautifyEffect::BEAUTIFY_QUALITY& dyn__quality();
    // Get instance field reference: private BeautifyEffect.BeautifyProfile _profile
    ::BeautifyEffect::BeautifyProfile*& dyn__profile();
    // Get instance field reference: private System.Boolean _compareMode
    bool& dyn__compareMode();
    // Get instance field reference: private System.Single _compareLineAngle
    float& dyn__compareLineAngle();
    // Get instance field reference: private System.Single _compareLineWidth
    float& dyn__compareLineWidth();
    // Get instance field reference: private System.Single _dither
    float& dyn__dither();
    // Get instance field reference: private System.Single _ditherDepth
    float& dyn__ditherDepth();
    // Get instance field reference: private System.Single _sharpenMinDepth
    float& dyn__sharpenMinDepth();
    // Get instance field reference: private System.Single _sharpenMaxDepth
    float& dyn__sharpenMaxDepth();
    // Get instance field reference: private System.Single _sharpen
    float& dyn__sharpen();
    // Get instance field reference: private System.Single _sharpenDepthThreshold
    float& dyn__sharpenDepthThreshold();
    // Get instance field reference: private UnityEngine.Color _tintColor
    ::UnityEngine::Color& dyn__tintColor();
    // Get instance field reference: private System.Single _sharpenRelaxation
    float& dyn__sharpenRelaxation();
    // Get instance field reference: private System.Single _sharpenClamp
    float& dyn__sharpenClamp();
    // Get instance field reference: private System.Single _sharpenMotionSensibility
    float& dyn__sharpenMotionSensibility();
    // Get instance field reference: private System.Single _saturate
    float& dyn__saturate();
    // Get instance field reference: private System.Single _contrast
    float& dyn__contrast();
    // Get instance field reference: private System.Single _brightness
    float& dyn__brightness();
    // Get instance field reference: private System.Single _daltonize
    float& dyn__daltonize();
    // Get instance field reference: private System.Boolean _vignetting
    bool& dyn__vignetting();
    // Get instance field reference: private UnityEngine.Color _vignettingColor
    ::UnityEngine::Color& dyn__vignettingColor();
    // Get instance field reference: private System.Single _vignettingFade
    float& dyn__vignettingFade();
    // Get instance field reference: private System.Boolean _vignettingCircularShape
    bool& dyn__vignettingCircularShape();
    // Get instance field reference: private System.Single _vignettingAspectRatio
    float& dyn__vignettingAspectRatio();
    // Get instance field reference: private System.Single _vignettingBlink
    float& dyn__vignettingBlink();
    // Get instance field reference: private UnityEngine.Texture2D _vignettingMask
    ::UnityEngine::Texture2D*& dyn__vignettingMask();
    // Get instance field reference: private System.Boolean _frame
    bool& dyn__frame();
    // Get instance field reference: private UnityEngine.Color _frameColor
    ::UnityEngine::Color& dyn__frameColor();
    // Get instance field reference: private UnityEngine.Texture2D _frameMask
    ::UnityEngine::Texture2D*& dyn__frameMask();
    // Get instance field reference: private System.Boolean _lut
    bool& dyn__lut();
    // Get instance field reference: private System.Single _lutIntensity
    float& dyn__lutIntensity();
    // Get instance field reference: private UnityEngine.Texture2D _lutTexture
    ::UnityEngine::Texture2D*& dyn__lutTexture();
    // Get instance field reference: private System.Boolean _nightVision
    bool& dyn__nightVision();
    // Get instance field reference: private UnityEngine.Color _nightVisionColor
    ::UnityEngine::Color& dyn__nightVisionColor();
    // Get instance field reference: private System.Boolean _outline
    bool& dyn__outline();
    // Get instance field reference: private UnityEngine.Color _outlineColor
    ::UnityEngine::Color& dyn__outlineColor();
    // Get instance field reference: private System.Boolean _thermalVision
    bool& dyn__thermalVision();
    // Get instance field reference: private System.Boolean _lensDirt
    bool& dyn__lensDirt();
    // Get instance field reference: private System.Single _lensDirtThreshold
    float& dyn__lensDirtThreshold();
    // Get instance field reference: private System.Single _lensDirtIntensity
    float& dyn__lensDirtIntensity();
    // Get instance field reference: private UnityEngine.Texture2D _lensDirtTexture
    ::UnityEngine::Texture2D*& dyn__lensDirtTexture();
    // Get instance field reference: private System.Boolean _bloom
    bool& dyn__bloom();
    // Get instance field reference: private UnityEngine.LayerMask _bloomCullingMask
    ::UnityEngine::LayerMask& dyn__bloomCullingMask();
    // Get instance field reference: private System.Single _bloomLayerMaskDownsampling
    float& dyn__bloomLayerMaskDownsampling();
    // Get instance field reference: private System.Single _bloomIntensity
    float& dyn__bloomIntensity();
    // Get instance field reference: private System.Single _bloomMaxBrightness
    float& dyn__bloomMaxBrightness();
    // Get instance field reference: private System.Single _bloomBoost0
    float& dyn__bloomBoost0();
    // Get instance field reference: private System.Single _bloomBoost1
    float& dyn__bloomBoost1();
    // Get instance field reference: private System.Single _bloomBoost2
    float& dyn__bloomBoost2();
    // Get instance field reference: private System.Single _bloomBoost3
    float& dyn__bloomBoost3();
    // Get instance field reference: private System.Single _bloomBoost4
    float& dyn__bloomBoost4();
    // Get instance field reference: private System.Single _bloomBoost5
    float& dyn__bloomBoost5();
    // Get instance field reference: private System.Boolean _bloomAntiflicker
    bool& dyn__bloomAntiflicker();
    // Get instance field reference: private System.Boolean _bloomUltra
    bool& dyn__bloomUltra();
    // Get instance field reference: private System.Single _bloomThreshold
    float& dyn__bloomThreshold();
    // Get instance field reference: private System.Boolean _bloomCustomize
    bool& dyn__bloomCustomize();
    // Get instance field reference: private System.Boolean _bloomDebug
    bool& dyn__bloomDebug();
    // Get instance field reference: private System.Single _bloomWeight0
    float& dyn__bloomWeight0();
    // Get instance field reference: private System.Single _bloomWeight1
    float& dyn__bloomWeight1();
    // Get instance field reference: private System.Single _bloomWeight2
    float& dyn__bloomWeight2();
    // Get instance field reference: private System.Single _bloomWeight3
    float& dyn__bloomWeight3();
    // Get instance field reference: private System.Single _bloomWeight4
    float& dyn__bloomWeight4();
    // Get instance field reference: private System.Single _bloomWeight5
    float& dyn__bloomWeight5();
    // Get instance field reference: private System.Boolean _bloomBlur
    bool& dyn__bloomBlur();
    // Get instance field reference: private System.Single _bloomDepthAtten
    float& dyn__bloomDepthAtten();
    // Get instance field reference: private System.Single _bloomLayerZBias
    float& dyn__bloomLayerZBias();
    // Get instance field reference: private System.Boolean _anamorphicFlares
    bool& dyn__anamorphicFlares();
    // Get instance field reference: private System.Single _anamorphicFlaresIntensity
    float& dyn__anamorphicFlaresIntensity();
    // Get instance field reference: private System.Boolean _anamorphicFlaresAntiflicker
    bool& dyn__anamorphicFlaresAntiflicker();
    // Get instance field reference: private System.Boolean _anamorphicFlaresUltra
    bool& dyn__anamorphicFlaresUltra();
    // Get instance field reference: private System.Single _anamorphicFlaresThreshold
    float& dyn__anamorphicFlaresThreshold();
    // Get instance field reference: private System.Single _anamorphicFlaresSpread
    float& dyn__anamorphicFlaresSpread();
    // Get instance field reference: private System.Boolean _anamorphicFlaresVertical
    bool& dyn__anamorphicFlaresVertical();
    // Get instance field reference: private UnityEngine.Color _anamorphicFlaresTint
    ::UnityEngine::Color& dyn__anamorphicFlaresTint();
    // Get instance field reference: private System.Boolean _anamorphicFlaresBlur
    bool& dyn__anamorphicFlaresBlur();
    // Get instance field reference: private System.Boolean _depthOfField
    bool& dyn__depthOfField();
    // Get instance field reference: private System.Boolean _depthOfFieldTransparencySupport
    bool& dyn__depthOfFieldTransparencySupport();
    // Get instance field reference: private UnityEngine.LayerMask _depthOfFieldTransparencyLayerMask
    ::UnityEngine::LayerMask& dyn__depthOfFieldTransparencyLayerMask();
    // Get instance field reference: private UnityEngine.Transform _depthOfFieldTargetFocus
    ::UnityEngine::Transform*& dyn__depthOfFieldTargetFocus();
    // Get instance field reference: private System.Boolean _depthOfFieldDebug
    bool& dyn__depthOfFieldDebug();
    // Get instance field reference: private System.Boolean _depthOfFieldAutofocus
    bool& dyn__depthOfFieldAutofocus();
    // Get instance field reference: private UnityEngine.Vector2 _depthofFieldAutofocusViewportPoint
    ::UnityEngine::Vector2& dyn__depthofFieldAutofocusViewportPoint();
    // Get instance field reference: private System.Single _depthOfFieldAutofocusMinDistance
    float& dyn__depthOfFieldAutofocusMinDistance();
    // Get instance field reference: private System.Single _depthOfFieldAutofocusMaxDistance
    float& dyn__depthOfFieldAutofocusMaxDistance();
    // Get instance field reference: private UnityEngine.LayerMask _depthOfFieldAutofocusLayerMask
    ::UnityEngine::LayerMask& dyn__depthOfFieldAutofocusLayerMask();
    // Get instance field reference: private UnityEngine.LayerMask _depthOfFieldExclusionLayerMask
    ::UnityEngine::LayerMask& dyn__depthOfFieldExclusionLayerMask();
    // Get instance field reference: private System.Single _depthOfFieldExclusionLayerMaskDownsampling
    float& dyn__depthOfFieldExclusionLayerMaskDownsampling();
    // Get instance field reference: private System.Single _depthOfFieldTransparencySupportDownsampling
    float& dyn__depthOfFieldTransparencySupportDownsampling();
    // Get instance field reference: private System.Single _depthOfFieldExclusionBias
    float& dyn__depthOfFieldExclusionBias();
    // Get instance field reference: private System.Single _depthOfFieldDistance
    float& dyn__depthOfFieldDistance();
    // Get instance field reference: private System.Single _depthOfFieldFocusSpeed
    float& dyn__depthOfFieldFocusSpeed();
    // Get instance field reference: private System.Int32 _depthOfFieldDownsampling
    int& dyn__depthOfFieldDownsampling();
    // Get instance field reference: private System.Int32 _depthOfFieldMaxSamples
    int& dyn__depthOfFieldMaxSamples();
    // Get instance field reference: private System.Single _depthOfFieldFocalLength
    float& dyn__depthOfFieldFocalLength();
    // Get instance field reference: private System.Single _depthOfFieldAperture
    float& dyn__depthOfFieldAperture();
    // Get instance field reference: private System.Boolean _depthOfFieldForegroundBlur
    bool& dyn__depthOfFieldForegroundBlur();
    // Get instance field reference: private System.Boolean _depthOfFieldForegroundBlurHQ
    bool& dyn__depthOfFieldForegroundBlurHQ();
    // Get instance field reference: private System.Single _depthOfFieldForegroundDistance
    float& dyn__depthOfFieldForegroundDistance();
    // Get instance field reference: private System.Boolean _depthOfFieldBokeh
    bool& dyn__depthOfFieldBokeh();
    // Get instance field reference: private System.Single _depthOfFieldBokehThreshold
    float& dyn__depthOfFieldBokehThreshold();
    // Get instance field reference: private System.Single _depthOfFieldBokehIntensity
    float& dyn__depthOfFieldBokehIntensity();
    // Get instance field reference: private System.Single _depthOfFieldMaxBrightness
    float& dyn__depthOfFieldMaxBrightness();
    // Get instance field reference: private System.Single _depthOfFieldMaxDistance
    float& dyn__depthOfFieldMaxDistance();
    // Get instance field reference: private UnityEngine.FilterMode _depthOfFieldFilterMode
    ::UnityEngine::FilterMode& dyn__depthOfFieldFilterMode();
    // Get instance field reference: public BeautifyEffect.OnBeforeFocusEvent OnBeforeFocus
    ::BeautifyEffect::OnBeforeFocusEvent*& dyn_OnBeforeFocus();
    // Get instance field reference: private System.Boolean _eyeAdaptation
    bool& dyn__eyeAdaptation();
    // Get instance field reference: private System.Single _eyeAdaptationMinExposure
    float& dyn__eyeAdaptationMinExposure();
    // Get instance field reference: private System.Single _eyeAdaptationMaxExposure
    float& dyn__eyeAdaptationMaxExposure();
    // Get instance field reference: private System.Single _eyeAdaptationSpeedToLight
    float& dyn__eyeAdaptationSpeedToLight();
    // Get instance field reference: private System.Single _eyeAdaptationSpeedToDark
    float& dyn__eyeAdaptationSpeedToDark();
    // Get instance field reference: private System.Boolean _purkinje
    bool& dyn__purkinje();
    // Get instance field reference: private System.Single _purkinjeAmount
    float& dyn__purkinjeAmount();
    // Get instance field reference: private System.Single _purkinjeLuminanceThreshold
    float& dyn__purkinjeLuminanceThreshold();
    // Get instance field reference: private BeautifyEffect.BEAUTIFY_TMO _tonemap
    ::BeautifyEffect::BEAUTIFY_TMO& dyn__tonemap();
    // Get instance field reference: private System.Boolean _sunFlares
    bool& dyn__sunFlares();
    // Get instance field reference: private UnityEngine.Transform _sun
    ::UnityEngine::Transform*& dyn__sun();
    // Get instance field reference: private UnityEngine.LayerMask _sunFlaresLayerMask
    ::UnityEngine::LayerMask& dyn__sunFlaresLayerMask();
    // Get instance field reference: private System.Single _sunFlaresIntensity
    float& dyn__sunFlaresIntensity();
    // Get instance field reference: private System.Single _sunFlaresSolarWindSpeed
    float& dyn__sunFlaresSolarWindSpeed();
    // Get instance field reference: private UnityEngine.Color _sunFlaresTint
    ::UnityEngine::Color& dyn__sunFlaresTint();
    // Get instance field reference: private System.Int32 _sunFlaresDownsampling
    int& dyn__sunFlaresDownsampling();
    // Get instance field reference: private System.Single _sunFlaresSunIntensity
    float& dyn__sunFlaresSunIntensity();
    // Get instance field reference: private System.Single _sunFlaresSunDiskSize
    float& dyn__sunFlaresSunDiskSize();
    // Get instance field reference: private System.Single _sunFlaresSunRayDiffractionIntensity
    float& dyn__sunFlaresSunRayDiffractionIntensity();
    // Get instance field reference: private System.Single _sunFlaresSunRayDiffractionThreshold
    float& dyn__sunFlaresSunRayDiffractionThreshold();
    // Get instance field reference: private System.Single _sunFlaresCoronaRays1Length
    float& dyn__sunFlaresCoronaRays1Length();
    // Get instance field reference: private System.Int32 _sunFlaresCoronaRays1Streaks
    int& dyn__sunFlaresCoronaRays1Streaks();
    // Get instance field reference: private System.Single _sunFlaresCoronaRays1Spread
    float& dyn__sunFlaresCoronaRays1Spread();
    // Get instance field reference: private System.Single _sunFlaresCoronaRays1AngleOffset
    float& dyn__sunFlaresCoronaRays1AngleOffset();
    // Get instance field reference: private System.Single _sunFlaresCoronaRays2Length
    float& dyn__sunFlaresCoronaRays2Length();
    // Get instance field reference: private System.Int32 _sunFlaresCoronaRays2Streaks
    int& dyn__sunFlaresCoronaRays2Streaks();
    // Get instance field reference: private System.Single _sunFlaresCoronaRays2Spread
    float& dyn__sunFlaresCoronaRays2Spread();
    // Get instance field reference: private System.Single _sunFlaresCoronaRays2AngleOffset
    float& dyn__sunFlaresCoronaRays2AngleOffset();
    // Get instance field reference: private System.Single _sunFlaresGhosts1Size
    float& dyn__sunFlaresGhosts1Size();
    // Get instance field reference: private System.Single _sunFlaresGhosts1Offset
    float& dyn__sunFlaresGhosts1Offset();
    // Get instance field reference: private System.Single _sunFlaresGhosts1Brightness
    float& dyn__sunFlaresGhosts1Brightness();
    // Get instance field reference: private System.Single _sunFlaresGhosts2Size
    float& dyn__sunFlaresGhosts2Size();
    // Get instance field reference: private System.Single _sunFlaresGhosts2Offset
    float& dyn__sunFlaresGhosts2Offset();
    // Get instance field reference: private System.Single _sunFlaresGhosts2Brightness
    float& dyn__sunFlaresGhosts2Brightness();
    // Get instance field reference: private System.Single _sunFlaresGhosts3Size
    float& dyn__sunFlaresGhosts3Size();
    // Get instance field reference: private System.Single _sunFlaresGhosts3Brightness
    float& dyn__sunFlaresGhosts3Brightness();
    // Get instance field reference: private System.Single _sunFlaresGhosts3Offset
    float& dyn__sunFlaresGhosts3Offset();
    // Get instance field reference: private System.Single _sunFlaresGhosts4Size
    float& dyn__sunFlaresGhosts4Size();
    // Get instance field reference: private System.Single _sunFlaresGhosts4Offset
    float& dyn__sunFlaresGhosts4Offset();
    // Get instance field reference: private System.Single _sunFlaresGhosts4Brightness
    float& dyn__sunFlaresGhosts4Brightness();
    // Get instance field reference: private System.Single _sunFlaresHaloOffset
    float& dyn__sunFlaresHaloOffset();
    // Get instance field reference: private System.Single _sunFlaresHaloAmplitude
    float& dyn__sunFlaresHaloAmplitude();
    // Get instance field reference: private System.Single _sunFlaresHaloIntensity
    float& dyn__sunFlaresHaloIntensity();
    // Get instance field reference: private System.Boolean _sunFlaresRotationDeadZone
    bool& dyn__sunFlaresRotationDeadZone();
    // Get instance field reference: private System.Boolean _blur
    bool& dyn__blur();
    // Get instance field reference: private System.Single _blurIntensity
    float& dyn__blurIntensity();
    // Get instance field reference: private System.Int32 _pixelateAmount
    int& dyn__pixelateAmount();
    // Get instance field reference: private System.Boolean _pixelateDownscale
    bool& dyn__pixelateDownscale();
    // Get instance field reference: private System.Single _antialiasStrength
    float& dyn__antialiasStrength();
    // Get instance field reference: private System.Single _antialiasDepthThreshold
    float& dyn__antialiasDepthThreshold();
    // Get instance field reference: public System.Boolean isDirty
    bool& dyn_isDirty();
    // Get instance field reference: private UnityEngine.Material bMatDesktop
    ::UnityEngine::Material*& dyn_bMatDesktop();
    // Get instance field reference: private UnityEngine.Material bMatMobile
    ::UnityEngine::Material*& dyn_bMatMobile();
    // Get instance field reference: private UnityEngine.Material bMatBasic
    ::UnityEngine::Material*& dyn_bMatBasic();
    // Get instance field reference: private UnityEngine.Material bMat
    ::UnityEngine::Material*& dyn_bMat();
    // Get instance field reference: private UnityEngine.Camera currentCamera
    ::UnityEngine::Camera*& dyn_currentCamera();
    // Get instance field reference: private UnityEngine.Vector3 camPrevForward
    ::UnityEngine::Vector3& dyn_camPrevForward();
    // Get instance field reference: private UnityEngine.Vector3 camPrevPos
    ::UnityEngine::Vector3& dyn_camPrevPos();
    // Get instance field reference: private System.Single currSens
    float& dyn_currSens();
    // Get instance field reference: private System.Int32 renderPass
    int& dyn_renderPass();
    // Get instance field reference: private UnityEngine.RenderTextureFormat rtFormat
    ::UnityEngine::RenderTextureFormat& dyn_rtFormat();
    // Get instance field reference: private UnityEngine.RenderTexture[] rt
    ::ArrayW<::UnityEngine::RenderTexture*>& dyn_rt();
    // Get instance field reference: private UnityEngine.RenderTexture[] rtAF
    ::ArrayW<::UnityEngine::RenderTexture*>& dyn_rtAF();
    // Get instance field reference: private UnityEngine.RenderTexture[] rtEA
    ::ArrayW<::UnityEngine::RenderTexture*>& dyn_rtEA();
    // Get instance field reference: private UnityEngine.RenderTexture rtEAacum
    ::UnityEngine::RenderTexture*& dyn_rtEAacum();
    // Get instance field reference: private UnityEngine.RenderTexture rtEAHist
    ::UnityEngine::RenderTexture*& dyn_rtEAHist();
    // Get instance field reference: private System.Single dofPrevDistance
    float& dyn_dofPrevDistance();
    // Get instance field reference: private System.Single dofLastAutofocusDistance
    float& dyn_dofLastAutofocusDistance();
    // Get instance field reference: private UnityEngine.Vector4 dofLastBokehData
    ::UnityEngine::Vector4& dyn_dofLastBokehData();
    // Get instance field reference: private UnityEngine.Camera sceneCamera
    ::UnityEngine::Camera*& dyn_sceneCamera();
    // Get instance field reference: private UnityEngine.Camera depthCam
    ::UnityEngine::Camera*& dyn_depthCam();
    // Get instance field reference: private UnityEngine.GameObject depthCamObj
    ::UnityEngine::GameObject*& dyn_depthCamObj();
    // Get instance field reference: private System.Collections.Generic.List`1<System.String> shaderKeywords
    ::System::Collections::Generic::List_1<::StringW>*& dyn_shaderKeywords();
    // Get instance field reference: private UnityEngine.Shader depthShader
    ::UnityEngine::Shader*& dyn_depthShader();
    // Get instance field reference: private UnityEngine.Shader dofExclusionShader
    ::UnityEngine::Shader*& dyn_dofExclusionShader();
    // Get instance field reference: private System.Boolean shouldUpdateMaterialProperties
    bool& dyn_shouldUpdateMaterialProperties();
    // Get instance field reference: private System.Single sunFlareCurrentIntensity
    float& dyn_sunFlareCurrentIntensity();
    // Get instance field reference: private UnityEngine.Vector4 sunLastScrPos
    ::UnityEngine::Vector4& dyn_sunLastScrPos();
    // Get instance field reference: private System.Single sunLastRot
    float& dyn_sunLastRot();
    // Get instance field reference: private UnityEngine.Texture2D flareNoise
    ::UnityEngine::Texture2D*& dyn_flareNoise();
    // Get instance field reference: private UnityEngine.RenderTexture dofDepthTexture
    ::UnityEngine::RenderTexture*& dyn_dofDepthTexture();
    // Get instance field reference: private UnityEngine.RenderTexture dofExclusionTexture
    ::UnityEngine::RenderTexture*& dyn_dofExclusionTexture();
    // Get instance field reference: private UnityEngine.RenderTexture bloomSourceTexture
    ::UnityEngine::RenderTexture*& dyn_bloomSourceTexture();
    // Get instance field reference: private UnityEngine.RenderTexture bloomSourceDepthTexture
    ::UnityEngine::RenderTexture*& dyn_bloomSourceDepthTexture();
    // Get instance field reference: private UnityEngine.RenderTexture pixelateTexture
    ::UnityEngine::RenderTexture*& dyn_pixelateTexture();
    // Get instance field reference: private UnityEngine.RenderTextureDescriptor rtDescBase
    ::UnityEngine::RenderTextureDescriptor& dyn_rtDescBase();
    // Get instance field reference: private System.Single sunFlareTime
    float& dyn_sunFlareTime();
    // Get instance field reference: private System.Int32 dofCurrentLayerMaskValue
    int& dyn_dofCurrentLayerMaskValue();
    // Get instance field reference: private System.Int32 bloomCurrentLayerMaskValue
    int& dyn_bloomCurrentLayerMaskValue();
    // public BeautifyEffect.BEAUTIFY_PRESET get_preset()
    // Offset: 0x13776C8
    ::BeautifyEffect::BEAUTIFY_PRESET get_preset();
    // public System.Void set_preset(BeautifyEffect.BEAUTIFY_PRESET value)
    // Offset: 0x13776D0
    void set_preset(::BeautifyEffect::BEAUTIFY_PRESET value);
    // public BeautifyEffect.BEAUTIFY_QUALITY get_quality()
    // Offset: 0x1377760
    ::BeautifyEffect::BEAUTIFY_QUALITY get_quality();
    // public System.Void set_quality(BeautifyEffect.BEAUTIFY_QUALITY value)
    // Offset: 0x1377768
    void set_quality(::BeautifyEffect::BEAUTIFY_QUALITY value);
    // public BeautifyEffect.BeautifyProfile get_profile()
    // Offset: 0x137781C
    ::BeautifyEffect::BeautifyProfile* get_profile();
    // public System.Void set_profile(BeautifyEffect.BeautifyProfile value)
    // Offset: 0x1377824
    void set_profile(::BeautifyEffect::BeautifyProfile* value);
    // public System.Boolean get_compareMode()
    // Offset: 0x13778F4
    bool get_compareMode();
    // public System.Void set_compareMode(System.Boolean value)
    // Offset: 0x13778FC
    void set_compareMode(bool value);
    // public System.Single get_compareLineAngle()
    // Offset: 0x1377958
    float get_compareLineAngle();
    // public System.Void set_compareLineAngle(System.Single value)
    // Offset: 0x1377960
    void set_compareLineAngle(float value);
    // public System.Single get_compareLineWidth()
    // Offset: 0x13779B0
    float get_compareLineWidth();
    // public System.Void set_compareLineWidth(System.Single value)
    // Offset: 0x13779B8
    void set_compareLineWidth(float value);
    // public System.Single get_dither()
    // Offset: 0x1377A08
    float get_dither();
    // public System.Void set_dither(System.Single value)
    // Offset: 0x1377A10
    void set_dither(float value);
    // public System.Single get_ditherDepth()
    // Offset: 0x1377A68
    float get_ditherDepth();
    // public System.Void set_ditherDepth(System.Single value)
    // Offset: 0x1377A70
    void set_ditherDepth(float value);
    // public System.Single get_sharpenMinDepth()
    // Offset: 0x1377AC8
    float get_sharpenMinDepth();
    // public System.Void set_sharpenMinDepth(System.Single value)
    // Offset: 0x1377AD0
    void set_sharpenMinDepth(float value);
    // public System.Single get_sharpenMaxDepth()
    // Offset: 0x1377B20
    float get_sharpenMaxDepth();
    // public System.Void set_sharpenMaxDepth(System.Single value)
    // Offset: 0x1377B28
    void set_sharpenMaxDepth(float value);
    // public System.Single get_sharpen()
    // Offset: 0x1377B78
    float get_sharpen();
    // public System.Void set_sharpen(System.Single value)
    // Offset: 0x1377B80
    void set_sharpen(float value);
    // public System.Single get_sharpenDepthThreshold()
    // Offset: 0x1377BD8
    float get_sharpenDepthThreshold();
    // public System.Void set_sharpenDepthThreshold(System.Single value)
    // Offset: 0x1377BE0
    void set_sharpenDepthThreshold(float value);
    // public UnityEngine.Color get_tintColor()
    // Offset: 0x1377C38
    ::UnityEngine::Color get_tintColor();
    // public System.Void set_tintColor(UnityEngine.Color value)
    // Offset: 0x1377C44
    void set_tintColor(::UnityEngine::Color value);
    // public System.Single get_sharpenRelaxation()
    // Offset: 0x1377CDC
    float get_sharpenRelaxation();
    // public System.Void set_sharpenRelaxation(System.Single value)
    // Offset: 0x1377CE4
    void set_sharpenRelaxation(float value);
    // public System.Single get_sharpenClamp()
    // Offset: 0x1377D3C
    float get_sharpenClamp();
    // public System.Void set_sharpenClamp(System.Single value)
    // Offset: 0x1377D44
    void set_sharpenClamp(float value);
    // public System.Single get_sharpenMotionSensibility()
    // Offset: 0x1377D9C
    float get_sharpenMotionSensibility();
    // public System.Void set_sharpenMotionSensibility(System.Single value)
    // Offset: 0x1377DA4
    void set_sharpenMotionSensibility(float value);
    // public System.Single get_saturate()
    // Offset: 0x1377DF4
    float get_saturate();
    // public System.Void set_saturate(System.Single value)
    // Offset: 0x1377DFC
    void set_saturate(float value);
    // public System.Single get_contrast()
    // Offset: 0x1377E54
    float get_contrast();
    // public System.Void set_contrast(System.Single value)
    // Offset: 0x1377E5C
    void set_contrast(float value);
    // public System.Single get_brightness()
    // Offset: 0x1377EB4
    float get_brightness();
    // public System.Void set_brightness(System.Single value)
    // Offset: 0x1377EBC
    void set_brightness(float value);
    // public System.Single get_daltonize()
    // Offset: 0x1377F14
    float get_daltonize();
    // public System.Void set_daltonize(System.Single value)
    // Offset: 0x1377F1C
    void set_daltonize(float value);
    // public System.Boolean get_vignetting()
    // Offset: 0x1377F74
    bool get_vignetting();
    // public System.Void set_vignetting(System.Boolean value)
    // Offset: 0x1377F7C
    void set_vignetting(bool value);
    // public UnityEngine.Color get_vignettingColor()
    // Offset: 0x1377FD8
    ::UnityEngine::Color get_vignettingColor();
    // public System.Void set_vignettingColor(UnityEngine.Color value)
    // Offset: 0x1377FE4
    void set_vignettingColor(::UnityEngine::Color value);
    // public System.Single get_vignettingFade()
    // Offset: 0x137807C
    float get_vignettingFade();
    // public System.Void set_vignettingFade(System.Single value)
    // Offset: 0x1378084
    void set_vignettingFade(float value);
    // public System.Boolean get_vignettingCircularShape()
    // Offset: 0x13780D4
    bool get_vignettingCircularShape();
    // public System.Void set_vignettingCircularShape(System.Boolean value)
    // Offset: 0x13780DC
    void set_vignettingCircularShape(bool value);
    // public System.Single get_vignettingAspectRatio()
    // Offset: 0x1378138
    float get_vignettingAspectRatio();
    // public System.Void set_vignettingAspectRatio(System.Single value)
    // Offset: 0x1378140
    void set_vignettingAspectRatio(float value);
    // public System.Single get_vignettingBlink()
    // Offset: 0x1378190
    float get_vignettingBlink();
    // public System.Void set_vignettingBlink(System.Single value)
    // Offset: 0x1378198
    void set_vignettingBlink(float value);
    // public UnityEngine.Texture2D get_vignettingMask()
    // Offset: 0x13781E8
    ::UnityEngine::Texture2D* get_vignettingMask();
    // public System.Void set_vignettingMask(UnityEngine.Texture2D value)
    // Offset: 0x13781F0
    void set_vignettingMask(::UnityEngine::Texture2D* value);
    // public System.Boolean get_frame()
    // Offset: 0x137829C
    bool get_frame();
    // public System.Void set_frame(System.Boolean value)
    // Offset: 0x13782A4
    void set_frame(bool value);
    // public UnityEngine.Color get_frameColor()
    // Offset: 0x1378300
    ::UnityEngine::Color get_frameColor();
    // public System.Void set_frameColor(UnityEngine.Color value)
    // Offset: 0x137830C
    void set_frameColor(::UnityEngine::Color value);
    // public UnityEngine.Texture2D get_frameMask()
    // Offset: 0x13783A4
    ::UnityEngine::Texture2D* get_frameMask();
    // public System.Void set_frameMask(UnityEngine.Texture2D value)
    // Offset: 0x13783AC
    void set_frameMask(::UnityEngine::Texture2D* value);
    // public System.Boolean get_lut()
    // Offset: 0x1378458
    bool get_lut();
    // public System.Void set_lut(System.Boolean value)
    // Offset: 0x1378460
    void set_lut(bool value);
    // public System.Single get_lutIntensity()
    // Offset: 0x13784C8
    float get_lutIntensity();
    // public System.Void set_lutIntensity(System.Single value)
    // Offset: 0x13784D0
    void set_lutIntensity(float value);
    // public UnityEngine.Texture2D get_lutTexture()
    // Offset: 0x1378520
    ::UnityEngine::Texture2D* get_lutTexture();
    // public System.Void set_lutTexture(UnityEngine.Texture2D value)
    // Offset: 0x1378528
    void set_lutTexture(::UnityEngine::Texture2D* value);
    // public System.Boolean get_nightVision()
    // Offset: 0x13785D4
    bool get_nightVision();
    // public System.Void set_nightVision(System.Boolean value)
    // Offset: 0x13785DC
    void set_nightVision(bool value);
    // public UnityEngine.Color get_nightVisionColor()
    // Offset: 0x137868C
    ::UnityEngine::Color get_nightVisionColor();
    // public System.Void set_nightVisionColor(UnityEngine.Color value)
    // Offset: 0x1378698
    void set_nightVisionColor(::UnityEngine::Color value);
    // public System.Boolean get_outline()
    // Offset: 0x1378730
    bool get_outline();
    // public System.Void set_outline(System.Boolean value)
    // Offset: 0x1378738
    void set_outline(bool value);
    // public UnityEngine.Color get_outlineColor()
    // Offset: 0x1378794
    ::UnityEngine::Color get_outlineColor();
    // public System.Void set_outlineColor(UnityEngine.Color value)
    // Offset: 0x13787A0
    void set_outlineColor(::UnityEngine::Color value);
    // public System.Boolean get_thermalVision()
    // Offset: 0x1378838
    bool get_thermalVision();
    // public System.Void set_thermalVision(System.Boolean value)
    // Offset: 0x1378840
    void set_thermalVision(bool value);
    // public System.Boolean get_lensDirt()
    // Offset: 0x13788F4
    bool get_lensDirt();
    // public System.Void set_lensDirt(System.Boolean value)
    // Offset: 0x13788FC
    void set_lensDirt(bool value);
    // public System.Single get_lensDirtThreshold()
    // Offset: 0x1378958
    float get_lensDirtThreshold();
    // public System.Void set_lensDirtThreshold(System.Single value)
    // Offset: 0x1378960
    void set_lensDirtThreshold(float value);
    // public System.Single get_lensDirtIntensity()
    // Offset: 0x13789B0
    float get_lensDirtIntensity();
    // public System.Void set_lensDirtIntensity(System.Single value)
    // Offset: 0x13789B8
    void set_lensDirtIntensity(float value);
    // public UnityEngine.Texture2D get_lensDirtTexture()
    // Offset: 0x1378A08
    ::UnityEngine::Texture2D* get_lensDirtTexture();
    // public System.Void set_lensDirtTexture(UnityEngine.Texture2D value)
    // Offset: 0x1378A10
    void set_lensDirtTexture(::UnityEngine::Texture2D* value);
    // public System.Boolean get_bloom()
    // Offset: 0x1378ABC
    bool get_bloom();
    // public System.Void set_bloom(System.Boolean value)
    // Offset: 0x1378AC4
    void set_bloom(bool value);
    // public UnityEngine.LayerMask get_bloomCullingMask()
    // Offset: 0x1378B20
    ::UnityEngine::LayerMask get_bloomCullingMask();
    // public System.Void set_bloomCullingMask(UnityEngine.LayerMask value)
    // Offset: 0x1378B28
    void set_bloomCullingMask(::UnityEngine::LayerMask value);
    // public System.Single get_bloomLayerMaskDownsampling()
    // Offset: 0x1378BA0
    float get_bloomLayerMaskDownsampling();
    // public System.Void set_bloomLayerMaskDownsampling(System.Single value)
    // Offset: 0x1378BA8
    void set_bloomLayerMaskDownsampling(float value);
    // public System.Single get_bloomIntensity()
    // Offset: 0x1378C04
    float get_bloomIntensity();
    // public System.Void set_bloomIntensity(System.Single value)
    // Offset: 0x1378C0C
    void set_bloomIntensity(float value);
    // public System.Single get_bloomMaxBrightness()
    // Offset: 0x1378C60
    float get_bloomMaxBrightness();
    // public System.Void set_bloomMaxBrightness(System.Single value)
    // Offset: 0x1378C68
    void set_bloomMaxBrightness(float value);
    // public System.Single get_bloomBoost0()
    // Offset: 0x1378CBC
    float get_bloomBoost0();
    // public System.Void set_bloomBoost0(System.Single value)
    // Offset: 0x1378CC4
    void set_bloomBoost0(float value);
    // public System.Single get_bloomBoost1()
    // Offset: 0x1378D14
    float get_bloomBoost1();
    // public System.Void set_bloomBoost1(System.Single value)
    // Offset: 0x1378D1C
    void set_bloomBoost1(float value);
    // public System.Single get_bloomBoost2()
    // Offset: 0x1378D6C
    float get_bloomBoost2();
    // public System.Void set_bloomBoost2(System.Single value)
    // Offset: 0x1378D74
    void set_bloomBoost2(float value);
    // public System.Single get_bloomBoost3()
    // Offset: 0x1378DC4
    float get_bloomBoost3();
    // public System.Void set_bloomBoost3(System.Single value)
    // Offset: 0x1378DCC
    void set_bloomBoost3(float value);
    // public System.Single get_bloomBoost4()
    // Offset: 0x1378E1C
    float get_bloomBoost4();
    // public System.Void set_bloomBoost4(System.Single value)
    // Offset: 0x1378E24
    void set_bloomBoost4(float value);
    // public System.Single get_bloomBoost5()
    // Offset: 0x1378E74
    float get_bloomBoost5();
    // public System.Void set_bloomBoost5(System.Single value)
    // Offset: 0x1378E7C
    void set_bloomBoost5(float value);
    // public System.Boolean get_bloomAntiflicker()
    // Offset: 0x1378ECC
    bool get_bloomAntiflicker();
    // public System.Void set_bloomAntiflicker(System.Boolean value)
    // Offset: 0x1378ED4
    void set_bloomAntiflicker(bool value);
    // public System.Boolean get_bloomUltra()
    // Offset: 0x1378F30
    bool get_bloomUltra();
    // public System.Void set_bloomUltra(System.Boolean value)
    // Offset: 0x1378F38
    void set_bloomUltra(bool value);
    // public System.Single get_bloomThreshold()
    // Offset: 0x1378F94
    float get_bloomThreshold();
    // public System.Void set_bloomThreshold(System.Single value)
    // Offset: 0x1378F9C
    void set_bloomThreshold(float value);
    // public System.Boolean get_bloomCustomize()
    // Offset: 0x1378FEC
    bool get_bloomCustomize();
    // public System.Void set_bloomCustomize(System.Boolean value)
    // Offset: 0x1378FF4
    void set_bloomCustomize(bool value);
    // public System.Boolean get_bloomDebug()
    // Offset: 0x1379050
    bool get_bloomDebug();
    // public System.Void set_bloomDebug(System.Boolean value)
    // Offset: 0x1379058
    void set_bloomDebug(bool value);
    // public System.Single get_bloomWeight0()
    // Offset: 0x13790B4
    float get_bloomWeight0();
    // public System.Void set_bloomWeight0(System.Single value)
    // Offset: 0x13790BC
    void set_bloomWeight0(float value);
    // public System.Single get_bloomWeight1()
    // Offset: 0x137910C
    float get_bloomWeight1();
    // public System.Void set_bloomWeight1(System.Single value)
    // Offset: 0x1379114
    void set_bloomWeight1(float value);
    // public System.Single get_bloomWeight2()
    // Offset: 0x1379164
    float get_bloomWeight2();
    // public System.Void set_bloomWeight2(System.Single value)
    // Offset: 0x137916C
    void set_bloomWeight2(float value);
    // public System.Single get_bloomWeight3()
    // Offset: 0x13791BC
    float get_bloomWeight3();
    // public System.Void set_bloomWeight3(System.Single value)
    // Offset: 0x13791C4
    void set_bloomWeight3(float value);
    // public System.Single get_bloomWeight4()
    // Offset: 0x1379214
    float get_bloomWeight4();
    // public System.Void set_bloomWeight4(System.Single value)
    // Offset: 0x137921C
    void set_bloomWeight4(float value);
    // public System.Single get_bloomWeight5()
    // Offset: 0x137926C
    float get_bloomWeight5();
    // public System.Void set_bloomWeight5(System.Single value)
    // Offset: 0x1379274
    void set_bloomWeight5(float value);
    // public System.Boolean get_bloomBlur()
    // Offset: 0x13792C4
    bool get_bloomBlur();
    // public System.Void set_bloomBlur(System.Boolean value)
    // Offset: 0x13792CC
    void set_bloomBlur(bool value);
    // public System.Single get_bloomDepthAtten()
    // Offset: 0x1379328
    float get_bloomDepthAtten();
    // public System.Void set_bloomDepthAtten(System.Single value)
    // Offset: 0x1379330
    void set_bloomDepthAtten(float value);
    // public System.Single get_bloomLayerZBias()
    // Offset: 0x1379380
    float get_bloomLayerZBias();
    // public System.Void set_bloomLayerZBias(System.Single value)
    // Offset: 0x1379388
    void set_bloomLayerZBias(float value);
    // public System.Boolean get_anamorphicFlares()
    // Offset: 0x13793E8
    bool get_anamorphicFlares();
    // public System.Void set_anamorphicFlares(System.Boolean value)
    // Offset: 0x13793F0
    void set_anamorphicFlares(bool value);
    // public System.Single get_anamorphicFlaresIntensity()
    // Offset: 0x137944C
    float get_anamorphicFlaresIntensity();
    // public System.Void set_anamorphicFlaresIntensity(System.Single value)
    // Offset: 0x1379454
    void set_anamorphicFlaresIntensity(float value);
    // public System.Boolean get_anamorphicFlaresAntiflicker()
    // Offset: 0x13794A8
    bool get_anamorphicFlaresAntiflicker();
    // public System.Void set_anamorphicFlaresAntiflicker(System.Boolean value)
    // Offset: 0x13794B0
    void set_anamorphicFlaresAntiflicker(bool value);
    // public System.Boolean get_anamorphicFlaresUltra()
    // Offset: 0x137950C
    bool get_anamorphicFlaresUltra();
    // public System.Void set_anamorphicFlaresUltra(System.Boolean value)
    // Offset: 0x1379514
    void set_anamorphicFlaresUltra(bool value);
    // public System.Single get_anamorphicFlaresThreshold()
    // Offset: 0x1379570
    float get_anamorphicFlaresThreshold();
    // public System.Void set_anamorphicFlaresThreshold(System.Single value)
    // Offset: 0x1379578
    void set_anamorphicFlaresThreshold(float value);
    // public System.Single get_anamorphicFlaresSpread()
    // Offset: 0x13795C8
    float get_anamorphicFlaresSpread();
    // public System.Void set_anamorphicFlaresSpread(System.Single value)
    // Offset: 0x13795D0
    void set_anamorphicFlaresSpread(float value);
    // public System.Boolean get_anamorphicFlaresVertical()
    // Offset: 0x1379620
    bool get_anamorphicFlaresVertical();
    // public System.Void set_anamorphicFlaresVertical(System.Boolean value)
    // Offset: 0x1379628
    void set_anamorphicFlaresVertical(bool value);
    // public UnityEngine.Color get_anamorphicFlaresTint()
    // Offset: 0x1379684
    ::UnityEngine::Color get_anamorphicFlaresTint();
    // public System.Void set_anamorphicFlaresTint(UnityEngine.Color value)
    // Offset: 0x1379698
    void set_anamorphicFlaresTint(::UnityEngine::Color value);
    // public System.Boolean get_anamorphicFlaresBlur()
    // Offset: 0x1379740
    bool get_anamorphicFlaresBlur();
    // public System.Void set_anamorphicFlaresBlur(System.Boolean value)
    // Offset: 0x1379748
    void set_anamorphicFlaresBlur(bool value);
    // public System.Boolean get_depthOfField()
    // Offset: 0x13797A4
    bool get_depthOfField();
    // public System.Void set_depthOfField(System.Boolean value)
    // Offset: 0x13797AC
    void set_depthOfField(bool value);
    // public System.Boolean get_depthOfFieldTransparencySupport()
    // Offset: 0x1379808
    bool get_depthOfFieldTransparencySupport();
    // public System.Void set_depthOfFieldTransparencySupport(System.Boolean value)
    // Offset: 0x1379810
    void set_depthOfFieldTransparencySupport(bool value);
    // public UnityEngine.LayerMask get_depthOfFieldTransparencyLayerMask()
    // Offset: 0x137986C
    ::UnityEngine::LayerMask get_depthOfFieldTransparencyLayerMask();
    // public System.Void set_depthOfFieldTransparencyLayerMask(UnityEngine.LayerMask value)
    // Offset: 0x1379874
    void set_depthOfFieldTransparencyLayerMask(::UnityEngine::LayerMask value);
    // public UnityEngine.Transform get_depthOfFieldTargetFocus()
    // Offset: 0x13798EC
    ::UnityEngine::Transform* get_depthOfFieldTargetFocus();
    // public System.Void set_depthOfFieldTargetFocus(UnityEngine.Transform value)
    // Offset: 0x13798F4
    void set_depthOfFieldTargetFocus(::UnityEngine::Transform* value);
    // public System.Boolean get_depthOfFieldDebug()
    // Offset: 0x13799A0
    bool get_depthOfFieldDebug();
    // public System.Void set_depthOfFieldDebug(System.Boolean value)
    // Offset: 0x13799A8
    void set_depthOfFieldDebug(bool value);
    // public System.Boolean get_depthOfFieldAutofocus()
    // Offset: 0x1379A04
    bool get_depthOfFieldAutofocus();
    // public System.Void set_depthOfFieldAutofocus(System.Boolean value)
    // Offset: 0x1379A0C
    void set_depthOfFieldAutofocus(bool value);
    // public UnityEngine.Vector2 get_depthofFieldAutofocusViewportPoint()
    // Offset: 0x1379A68
    ::UnityEngine::Vector2 get_depthofFieldAutofocusViewportPoint();
    // public System.Void set_depthofFieldAutofocusViewportPoint(UnityEngine.Vector2 value)
    // Offset: 0x1379A74
    void set_depthofFieldAutofocusViewportPoint(::UnityEngine::Vector2 value);
    // public System.Single get_depthOfFieldAutofocusMinDistance()
    // Offset: 0x1379AE8
    float get_depthOfFieldAutofocusMinDistance();
    // public System.Void set_depthOfFieldAutofocusMinDistance(System.Single value)
    // Offset: 0x1379AF0
    void set_depthOfFieldAutofocusMinDistance(float value);
    // public System.Single get_depthOfFieldAutofocusMaxDistance()
    // Offset: 0x1379B40
    float get_depthOfFieldAutofocusMaxDistance();
    // public System.Void set_depthOfFieldAutofocusMaxDistance(System.Single value)
    // Offset: 0x1379B48
    void set_depthOfFieldAutofocusMaxDistance(float value);
    // public UnityEngine.LayerMask get_depthOfFieldAutofocusLayerMask()
    // Offset: 0x1379B98
    ::UnityEngine::LayerMask get_depthOfFieldAutofocusLayerMask();
    // public System.Void set_depthOfFieldAutofocusLayerMask(UnityEngine.LayerMask value)
    // Offset: 0x1379BA0
    void set_depthOfFieldAutofocusLayerMask(::UnityEngine::LayerMask value);
    // public UnityEngine.LayerMask get_depthOfFieldExclusionLayerMask()
    // Offset: 0x1379C18
    ::UnityEngine::LayerMask get_depthOfFieldExclusionLayerMask();
    // public System.Void set_depthOfFieldExclusionLayerMask(UnityEngine.LayerMask value)
    // Offset: 0x1379C20
    void set_depthOfFieldExclusionLayerMask(::UnityEngine::LayerMask value);
    // public System.Single get_depthOfFieldExclusionLayerMaskDownsampling()
    // Offset: 0x1379C98
    float get_depthOfFieldExclusionLayerMaskDownsampling();
    // public System.Void set_depthOfFieldExclusionLayerMaskDownsampling(System.Single value)
    // Offset: 0x1379CA0
    void set_depthOfFieldExclusionLayerMaskDownsampling(float value);
    // public System.Single get_depthOfFieldTransparencySupportDownsampling()
    // Offset: 0x1379CFC
    float get_depthOfFieldTransparencySupportDownsampling();
    // public System.Void set_depthOfFieldTransparencySupportDownsampling(System.Single value)
    // Offset: 0x1379D04
    void set_depthOfFieldTransparencySupportDownsampling(float value);
    // public System.Single get_depthOfFieldExclusionBias()
    // Offset: 0x1379D60
    float get_depthOfFieldExclusionBias();
    // public System.Void set_depthOfFieldExclusionBias(System.Single value)
    // Offset: 0x1379D68
    void set_depthOfFieldExclusionBias(float value);
    // public System.Single get_depthOfFieldDistance()
    // Offset: 0x1379DC0
    float get_depthOfFieldDistance();
    // public System.Void set_depthOfFieldDistance(System.Single value)
    // Offset: 0x1379DC8
    void set_depthOfFieldDistance(float value);
    // public System.Single get_depthOfFieldFocusSpeed()
    // Offset: 0x1379E24
    float get_depthOfFieldFocusSpeed();
    // public System.Void set_depthOfFieldFocusSpeed(System.Single value)
    // Offset: 0x1379E2C
    void set_depthOfFieldFocusSpeed(float value);
    // public System.Int32 get_depthOfFieldDownsampling()
    // Offset: 0x1379E90
    int get_depthOfFieldDownsampling();
    // public System.Void set_depthOfFieldDownsampling(System.Int32 value)
    // Offset: 0x1379E98
    void set_depthOfFieldDownsampling(int value);
    // public System.Int32 get_depthOfFieldMaxSamples()
    // Offset: 0x1379EF8
    int get_depthOfFieldMaxSamples();
    // public System.Void set_depthOfFieldMaxSamples(System.Int32 value)
    // Offset: 0x1379F00
    void set_depthOfFieldMaxSamples(int value);
    // public System.Single get_depthOfFieldFocalLength()
    // Offset: 0x1379F60
    float get_depthOfFieldFocalLength();
    // public System.Void set_depthOfFieldFocalLength(System.Single value)
    // Offset: 0x1379F68
    void set_depthOfFieldFocalLength(float value);
    // public System.Single get_depthOfFieldAperture()
    // Offset: 0x1379FBC
    float get_depthOfFieldAperture();
    // public System.Void set_depthOfFieldAperture(System.Single value)
    // Offset: 0x1379FC4
    void set_depthOfFieldAperture(float value);
    // public System.Boolean get_depthOfFieldForegroundBlur()
    // Offset: 0x137A018
    bool get_depthOfFieldForegroundBlur();
    // public System.Void set_depthOfFieldForegroundBlur(System.Boolean value)
    // Offset: 0x137A020
    void set_depthOfFieldForegroundBlur(bool value);
    // public System.Boolean get_depthOfFieldForegroundBlurHQ()
    // Offset: 0x137A07C
    bool get_depthOfFieldForegroundBlurHQ();
    // public System.Void set_depthOfFieldForegroundBlurHQ(System.Boolean value)
    // Offset: 0x137A084
    void set_depthOfFieldForegroundBlurHQ(bool value);
    // public System.Single get_depthOfFieldForegroundDistance()
    // Offset: 0x137A0E0
    float get_depthOfFieldForegroundDistance();
    // public System.Void set_depthOfFieldForegroundDistance(System.Single value)
    // Offset: 0x137A0E8
    void set_depthOfFieldForegroundDistance(float value);
    // public System.Boolean get_depthOfFieldBokeh()
    // Offset: 0x137A138
    bool get_depthOfFieldBokeh();
    // public System.Void set_depthOfFieldBokeh(System.Boolean value)
    // Offset: 0x137A140
    void set_depthOfFieldBokeh(bool value);
    // public System.Single get_depthOfFieldBokehThreshold()
    // Offset: 0x137A19C
    float get_depthOfFieldBokehThreshold();
    // public System.Void set_depthOfFieldBokehThreshold(System.Single value)
    // Offset: 0x137A1A4
    void set_depthOfFieldBokehThreshold(float value);
    // public System.Single get_depthOfFieldBokehIntensity()
    // Offset: 0x137A200
    float get_depthOfFieldBokehIntensity();
    // public System.Void set_depthOfFieldBokehIntensity(System.Single value)
    // Offset: 0x137A208
    void set_depthOfFieldBokehIntensity(float value);
    // public System.Single get_depthOfFieldMaxBrightness()
    // Offset: 0x137A264
    float get_depthOfFieldMaxBrightness();
    // public System.Void set_depthOfFieldMaxBrightness(System.Single value)
    // Offset: 0x137A26C
    void set_depthOfFieldMaxBrightness(float value);
    // public System.Single get_depthOfFieldMaxDistance()
    // Offset: 0x137A2C0
    float get_depthOfFieldMaxDistance();
    // public System.Void set_depthOfFieldMaxDistance(System.Single value)
    // Offset: 0x137A2C8
    void set_depthOfFieldMaxDistance(float value);
    // public UnityEngine.FilterMode get_depthOfFieldFilterMode()
    // Offset: 0x137A31C
    ::UnityEngine::FilterMode get_depthOfFieldFilterMode();
    // public System.Void set_depthOfFieldFilterMode(UnityEngine.FilterMode value)
    // Offset: 0x137A324
    void set_depthOfFieldFilterMode(::UnityEngine::FilterMode value);
    // public System.Boolean get_eyeAdaptation()
    // Offset: 0x137A374
    bool get_eyeAdaptation();
    // public System.Void set_eyeAdaptation(System.Boolean value)
    // Offset: 0x137A37C
    void set_eyeAdaptation(bool value);
    // public System.Single get_eyeAdaptationMinExposure()
    // Offset: 0x137A3D8
    float get_eyeAdaptationMinExposure();
    // public System.Void set_eyeAdaptationMinExposure(System.Single value)
    // Offset: 0x137A3E0
    void set_eyeAdaptationMinExposure(float value);
    // public System.Single get_eyeAdaptationMaxExposure()
    // Offset: 0x137A438
    float get_eyeAdaptationMaxExposure();
    // public System.Void set_eyeAdaptationMaxExposure(System.Single value)
    // Offset: 0x137A440
    void set_eyeAdaptationMaxExposure(float value);
    // public System.Single get_eyeAdaptationSpeedToLight()
    // Offset: 0x137A4A4
    float get_eyeAdaptationSpeedToLight();
    // public System.Void set_eyeAdaptationSpeedToLight(System.Single value)
    // Offset: 0x137A4AC
    void set_eyeAdaptationSpeedToLight(float value);
    // public System.Single get_eyeAdaptationSpeedToDark()
    // Offset: 0x137A504
    float get_eyeAdaptationSpeedToDark();
    // public System.Void set_eyeAdaptationSpeedToDark(System.Single value)
    // Offset: 0x137A50C
    void set_eyeAdaptationSpeedToDark(float value);
    // public System.Boolean get_purkinje()
    // Offset: 0x137A564
    bool get_purkinje();
    // public System.Void set_purkinje(System.Boolean value)
    // Offset: 0x137A56C
    void set_purkinje(bool value);
    // public System.Single get_purkinjeAmount()
    // Offset: 0x137A5C8
    float get_purkinjeAmount();
    // public System.Void set_purkinjeAmount(System.Single value)
    // Offset: 0x137A5D0
    void set_purkinjeAmount(float value);
    // public System.Single get_purkinjeLuminanceThreshold()
    // Offset: 0x137A630
    float get_purkinjeLuminanceThreshold();
    // public System.Void set_purkinjeLuminanceThreshold(System.Single value)
    // Offset: 0x137A638
    void set_purkinjeLuminanceThreshold(float value);
    // public BeautifyEffect.BEAUTIFY_TMO get_tonemap()
    // Offset: 0x137A698
    ::BeautifyEffect::BEAUTIFY_TMO get_tonemap();
    // public System.Void set_tonemap(BeautifyEffect.BEAUTIFY_TMO value)
    // Offset: 0x137A6A0
    void set_tonemap(::BeautifyEffect::BEAUTIFY_TMO value);
    // public System.Boolean get_sunFlares()
    // Offset: 0x137A704
    bool get_sunFlares();
    // public System.Void set_sunFlares(System.Boolean value)
    // Offset: 0x137A70C
    void set_sunFlares(bool value);
    // public UnityEngine.Transform get_sun()
    // Offset: 0x137A768
    ::UnityEngine::Transform* get_sun();
    // public System.Void set_sun(UnityEngine.Transform value)
    // Offset: 0x137A770
    void set_sun(::UnityEngine::Transform* value);
    // public UnityEngine.LayerMask get_sunFlaresLayerMask()
    // Offset: 0x137A81C
    ::UnityEngine::LayerMask get_sunFlaresLayerMask();
    // public System.Void set_sunFlaresLayerMask(UnityEngine.LayerMask value)
    // Offset: 0x137A824
    void set_sunFlaresLayerMask(::UnityEngine::LayerMask value);
    // public System.Single get_sunFlaresIntensity()
    // Offset: 0x137A89C
    float get_sunFlaresIntensity();
    // public System.Void set_sunFlaresIntensity(System.Single value)
    // Offset: 0x137A8A4
    void set_sunFlaresIntensity(float value);
    // public System.Single get_sunFlaresSolarWindSpeed()
    // Offset: 0x137A8F4
    float get_sunFlaresSolarWindSpeed();
    // public System.Void set_sunFlaresSolarWindSpeed(System.Single value)
    // Offset: 0x137A8FC
    void set_sunFlaresSolarWindSpeed(float value);
    // public UnityEngine.Color get_sunFlaresTint()
    // Offset: 0x137A94C
    ::UnityEngine::Color get_sunFlaresTint();
    // public System.Void set_sunFlaresTint(UnityEngine.Color value)
    // Offset: 0x137A960
    void set_sunFlaresTint(::UnityEngine::Color value);
    // public System.Int32 get_sunFlaresDownsampling()
    // Offset: 0x137AA08
    int get_sunFlaresDownsampling();
    // public System.Void set_sunFlaresDownsampling(System.Int32 value)
    // Offset: 0x137AA10
    void set_sunFlaresDownsampling(int value);
    // public System.Single get_sunFlaresSunIntensity()
    // Offset: 0x137AA70
    float get_sunFlaresSunIntensity();
    // public System.Void set_sunFlaresSunIntensity(System.Single value)
    // Offset: 0x137AA78
    void set_sunFlaresSunIntensity(float value);
    // public System.Single get_sunFlaresSunDiskSize()
    // Offset: 0x137AAC8
    float get_sunFlaresSunDiskSize();
    // public System.Void set_sunFlaresSunDiskSize(System.Single value)
    // Offset: 0x137AAD0
    void set_sunFlaresSunDiskSize(float value);
    // public System.Single get_sunFlaresSunRayDiffractionIntensity()
    // Offset: 0x137AB20
    float get_sunFlaresSunRayDiffractionIntensity();
    // public System.Void set_sunFlaresSunRayDiffractionIntensity(System.Single value)
    // Offset: 0x137AB28
    void set_sunFlaresSunRayDiffractionIntensity(float value);
    // public System.Single get_sunFlaresSunRayDiffractionThreshold()
    // Offset: 0x137AB78
    float get_sunFlaresSunRayDiffractionThreshold();
    // public System.Void set_sunFlaresSunRayDiffractionThreshold(System.Single value)
    // Offset: 0x137AB80
    void set_sunFlaresSunRayDiffractionThreshold(float value);
    // public System.Single get_sunFlaresCoronaRays1Length()
    // Offset: 0x137ABD0
    float get_sunFlaresCoronaRays1Length();
    // public System.Void set_sunFlaresCoronaRays1Length(System.Single value)
    // Offset: 0x137ABD8
    void set_sunFlaresCoronaRays1Length(float value);
    // public System.Int32 get_sunFlaresCoronaRays1Streaks()
    // Offset: 0x137AC28
    int get_sunFlaresCoronaRays1Streaks();
    // public System.Void set_sunFlaresCoronaRays1Streaks(System.Int32 value)
    // Offset: 0x137AC30
    void set_sunFlaresCoronaRays1Streaks(int value);
    // public System.Single get_sunFlaresCoronaRays1Spread()
    // Offset: 0x137AC80
    float get_sunFlaresCoronaRays1Spread();
    // public System.Void set_sunFlaresCoronaRays1Spread(System.Single value)
    // Offset: 0x137AC88
    void set_sunFlaresCoronaRays1Spread(float value);
    // public System.Single get_sunFlaresCoronaRays1AngleOffset()
    // Offset: 0x137ACD8
    float get_sunFlaresCoronaRays1AngleOffset();
    // public System.Void set_sunFlaresCoronaRays1AngleOffset(System.Single value)
    // Offset: 0x137ACE0
    void set_sunFlaresCoronaRays1AngleOffset(float value);
    // public System.Single get_sunFlaresCoronaRays2Length()
    // Offset: 0x137AD30
    float get_sunFlaresCoronaRays2Length();
    // public System.Void set_sunFlaresCoronaRays2Length(System.Single value)
    // Offset: 0x137AD38
    void set_sunFlaresCoronaRays2Length(float value);
    // public System.Int32 get_sunFlaresCoronaRays2Streaks()
    // Offset: 0x137AD88
    int get_sunFlaresCoronaRays2Streaks();
    // public System.Void set_sunFlaresCoronaRays2Streaks(System.Int32 value)
    // Offset: 0x137AD90
    void set_sunFlaresCoronaRays2Streaks(int value);
    // public System.Single get_sunFlaresCoronaRays2Spread()
    // Offset: 0x137ADE0
    float get_sunFlaresCoronaRays2Spread();
    // public System.Void set_sunFlaresCoronaRays2Spread(System.Single value)
    // Offset: 0x137ADE8
    void set_sunFlaresCoronaRays2Spread(float value);
    // public System.Single get_sunFlaresCoronaRays2AngleOffset()
    // Offset: 0x137AE38
    float get_sunFlaresCoronaRays2AngleOffset();
    // public System.Void set_sunFlaresCoronaRays2AngleOffset(System.Single value)
    // Offset: 0x137AE40
    void set_sunFlaresCoronaRays2AngleOffset(float value);
    // public System.Single get_sunFlaresGhosts1Size()
    // Offset: 0x137AE90
    float get_sunFlaresGhosts1Size();
    // public System.Void set_sunFlaresGhosts1Size(System.Single value)
    // Offset: 0x137AE98
    void set_sunFlaresGhosts1Size(float value);
    // public System.Single get_sunFlaresGhosts1Offset()
    // Offset: 0x137AEE8
    float get_sunFlaresGhosts1Offset();
    // public System.Void set_sunFlaresGhosts1Offset(System.Single value)
    // Offset: 0x137AEF0
    void set_sunFlaresGhosts1Offset(float value);
    // public System.Single get_sunFlaresGhosts1Brightness()
    // Offset: 0x137AF40
    float get_sunFlaresGhosts1Brightness();
    // public System.Void set_sunFlaresGhosts1Brightness(System.Single value)
    // Offset: 0x137AF48
    void set_sunFlaresGhosts1Brightness(float value);
    // public System.Single get_sunFlaresGhosts2Size()
    // Offset: 0x137AF98
    float get_sunFlaresGhosts2Size();
    // public System.Void set_sunFlaresGhosts2Size(System.Single value)
    // Offset: 0x137AFA0
    void set_sunFlaresGhosts2Size(float value);
    // public System.Single get_sunFlaresGhosts2Offset()
    // Offset: 0x137AFF0
    float get_sunFlaresGhosts2Offset();
    // public System.Void set_sunFlaresGhosts2Offset(System.Single value)
    // Offset: 0x137AFF8
    void set_sunFlaresGhosts2Offset(float value);
    // public System.Single get_sunFlaresGhosts2Brightness()
    // Offset: 0x137B048
    float get_sunFlaresGhosts2Brightness();
    // public System.Void set_sunFlaresGhosts2Brightness(System.Single value)
    // Offset: 0x137B050
    void set_sunFlaresGhosts2Brightness(float value);
    // public System.Single get_sunFlaresGhosts3Size()
    // Offset: 0x137B0A0
    float get_sunFlaresGhosts3Size();
    // public System.Void set_sunFlaresGhosts3Size(System.Single value)
    // Offset: 0x137B0A8
    void set_sunFlaresGhosts3Size(float value);
    // public System.Single get_sunFlaresGhosts3Brightness()
    // Offset: 0x137B0F8
    float get_sunFlaresGhosts3Brightness();
    // public System.Void set_sunFlaresGhosts3Brightness(System.Single value)
    // Offset: 0x137B100
    void set_sunFlaresGhosts3Brightness(float value);
    // public System.Single get_sunFlaresGhosts3Offset()
    // Offset: 0x137B150
    float get_sunFlaresGhosts3Offset();
    // public System.Void set_sunFlaresGhosts3Offset(System.Single value)
    // Offset: 0x137B158
    void set_sunFlaresGhosts3Offset(float value);
    // public System.Single get_sunFlaresGhosts4Size()
    // Offset: 0x137B1A8
    float get_sunFlaresGhosts4Size();
    // public System.Void set_sunFlaresGhosts4Size(System.Single value)
    // Offset: 0x137B1B0
    void set_sunFlaresGhosts4Size(float value);
    // public System.Single get_sunFlaresGhosts4Offset()
    // Offset: 0x137B200
    float get_sunFlaresGhosts4Offset();
    // public System.Void set_sunFlaresGhosts4Offset(System.Single value)
    // Offset: 0x137B208
    void set_sunFlaresGhosts4Offset(float value);
    // public System.Single get_sunFlaresGhosts4Brightness()
    // Offset: 0x137B258
    float get_sunFlaresGhosts4Brightness();
    // public System.Void set_sunFlaresGhosts4Brightness(System.Single value)
    // Offset: 0x137B260
    void set_sunFlaresGhosts4Brightness(float value);
    // public System.Single get_sunFlaresHaloOffset()
    // Offset: 0x137B2B0
    float get_sunFlaresHaloOffset();
    // public System.Void set_sunFlaresHaloOffset(System.Single value)
    // Offset: 0x137B2B8
    void set_sunFlaresHaloOffset(float value);
    // public System.Single get_sunFlaresHaloAmplitude()
    // Offset: 0x137B308
    float get_sunFlaresHaloAmplitude();
    // public System.Void set_sunFlaresHaloAmplitude(System.Single value)
    // Offset: 0x137B310
    void set_sunFlaresHaloAmplitude(float value);
    // public System.Single get_sunFlaresHaloIntensity()
    // Offset: 0x137B360
    float get_sunFlaresHaloIntensity();
    // public System.Void set_sunFlaresHaloIntensity(System.Single value)
    // Offset: 0x137B368
    void set_sunFlaresHaloIntensity(float value);
    // public System.Boolean get_sunFlaresRotationDeadZone()
    // Offset: 0x137B3B8
    bool get_sunFlaresRotationDeadZone();
    // public System.Void set_sunFlaresRotationDeadZone(System.Boolean value)
    // Offset: 0x137B3C0
    void set_sunFlaresRotationDeadZone(bool value);
    // public System.Boolean get_blur()
    // Offset: 0x137B41C
    bool get_blur();
    // public System.Void set_blur(System.Boolean value)
    // Offset: 0x137B424
    void set_blur(bool value);
    // public System.Single get_blurIntensity()
    // Offset: 0x137B480
    float get_blurIntensity();
    // public System.Void set_blurIntensity(System.Single value)
    // Offset: 0x137B488
    void set_blurIntensity(float value);
    // public System.Int32 get_pixelateAmount()
    // Offset: 0x137B4D8
    int get_pixelateAmount();
    // public System.Void set_pixelateAmount(System.Int32 value)
    // Offset: 0x137B4E0
    void set_pixelateAmount(int value);
    // public System.Boolean get_pixelateDownscale()
    // Offset: 0x137B530
    bool get_pixelateDownscale();
    // public System.Void set_pixelateDownscale(System.Boolean value)
    // Offset: 0x137B538
    void set_pixelateDownscale(bool value);
    // public System.Single get_antialiasStrength()
    // Offset: 0x137B594
    float get_antialiasStrength();
    // public System.Void set_antialiasStrength(System.Single value)
    // Offset: 0x137B59C
    void set_antialiasStrength(float value);
    // public System.Single get_antialiasDepthThreshold()
    // Offset: 0x137B5EC
    float get_antialiasDepthThreshold();
    // public System.Void set_antialiasDepthThreshold(System.Single value)
    // Offset: 0x137B5F4
    void set_antialiasDepthThreshold(float value);
    // static public BeautifyEffect.Beautify get_instance()
    // Offset: 0x137B644
    static ::BeautifyEffect::Beautify* get_instance();
    // public UnityEngine.Camera get_cameraEffect()
    // Offset: 0x137B7A0
    ::UnityEngine::Camera* get_cameraEffect();
    // public System.Single get_depthOfFieldCurrentFocalPointDistance()
    // Offset: 0x1381D34
    float get_depthOfFieldCurrentFocalPointDistance();
    // private System.Void OnEnable()
    // Offset: 0x137B7A8
    void OnEnable();
    // private System.Void OnDestroy()
    // Offset: 0x137CF84
    void OnDestroy();
    // private System.Void Reset()
    // Offset: 0x137D35C
    void Reset();
    // private System.Void LateUpdate()
    // Offset: 0x137D360
    void LateUpdate();
    // private System.Void OnPreCull()
    // Offset: 0x137D63C
    void OnPreCull();
    // private System.Void OnPreRender()
    // Offset: 0x137E580
    void OnPreRender();
    // private System.Void CleanUpRT()
    // Offset: 0x137D1D0
    void CleanUpRT();
    // private System.Void CheckDoFTransparencySupport()
    // Offset: 0x137D7E0
    void CheckDoFTransparencySupport();
    // private System.Void CheckDoFExclusionMask()
    // Offset: 0x137DC10
    void CheckDoFExclusionMask();
    // private System.Void CheckBloomCullingLayer()
    // Offset: 0x137E02C
    void CheckBloomCullingLayer();
    // protected System.Void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination)
    // Offset: 0x137E6D4
    void OnRenderImage(::UnityEngine::RenderTexture* source, ::UnityEngine::RenderTexture* destination);
    // private System.Void OnPostRender()
    // Offset: 0x13819E4
    void OnPostRender();
    // private System.Void BlurThis(UnityEngine.RenderTexture rt, System.Single blurScale)
    // Offset: 0x13814D4
    void BlurThis(::UnityEngine::RenderTexture* rt, float blurScale);
    // private System.Void BlurThisDownscaling(UnityEngine.RenderTexture rt, UnityEngine.RenderTexture downscaled, System.Single blurScale)
    // Offset: 0x138161C
    void BlurThisDownscaling(::UnityEngine::RenderTexture* rt, ::UnityEngine::RenderTexture* downscaled, float blurScale);
    // private UnityEngine.RenderTexture BlurThisOneDirection(UnityEngine.RenderTexture rt, System.Boolean vertical, System.Single blurScale)
    // Offset: 0x13818AC
    ::UnityEngine::RenderTexture* BlurThisOneDirection(::UnityEngine::RenderTexture* rt, bool vertical, float blurScale);
    // private System.Void BlurThisDoF(UnityEngine.RenderTexture rt, System.Int32 renderPass)
    // Offset: 0x1381218
    void BlurThisDoF(::UnityEngine::RenderTexture* rt, int renderPass);
    // private System.Void BlurThisAlpha(UnityEngine.RenderTexture rt, System.Single blurScale)
    // Offset: 0x13810D0
    void BlurThisAlpha(::UnityEngine::RenderTexture* rt, float blurScale);
    // private System.Void OnDidApplyAnimationProperties()
    // Offset: 0x1381B7C
    void OnDidApplyAnimationProperties();
    // public System.Void UpdateQualitySettings()
    // Offset: 0x13777E4
    void UpdateQualitySettings();
    // public System.Void UpdateMaterialProperties()
    // Offset: 0x1377720
    void UpdateMaterialProperties();
    // public System.Void UpdateMaterialPropertiesNow()
    // Offset: 0x137B8AC
    void UpdateMaterialPropertiesNow();
    // private System.Void UpdateMaterialBloomIntensityAndThreshold()
    // Offset: 0x1381408
    void UpdateMaterialBloomIntensityAndThreshold();
    // private System.Void UpdateMaterialAnamorphicIntensityAndThreshold()
    // Offset: 0x13817EC
    void UpdateMaterialAnamorphicIntensityAndThreshold();
    // private System.Void UpdateSharpenParams(System.Single sharpen)
    // Offset: 0x137D5A4
    void UpdateSharpenParams(float sharpen);
    // private System.Void UpdateDepthOfFieldData()
    // Offset: 0x1380DB0
    void UpdateDepthOfFieldData();
    // private System.Void UpdateDepthOfFieldBlurData(UnityEngine.Vector2 blurDir)
    // Offset: 0x1381AEC
    void UpdateDepthOfFieldBlurData(::UnityEngine::Vector2 blurDir);
    // private System.Void UpdateDoFAutofocusDistance()
    // Offset: 0x1381B88
    void UpdateDoFAutofocusDistance();
    // public System.Void Blink(System.Single duration, System.Single maxValue)
    // Offset: 0x1381C78
    void Blink(float duration, float maxValue);
    // private System.Collections.IEnumerator DoBlink(System.Single duration, System.Single maxValue)
    // Offset: 0x1381CB0
    ::System::Collections::IEnumerator* DoBlink(float duration, float maxValue);
    // public System.Void .ctor()
    // Offset: 0x1381D3C
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Beautify* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BeautifyEffect::Beautify::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Beautify*, creationType>()));
    }
  }; // BeautifyEffect.Beautify
  #pragma pack(pop)
  static check_size<sizeof(Beautify), 1084 + sizeof(int)> __BeautifyEffect_BeautifySizeCheck;
  static_assert(sizeof(Beautify) == 0x440);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_preset
// Il2CppName: get_preset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::BeautifyEffect::BEAUTIFY_PRESET (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_preset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_preset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_preset
// Il2CppName: set_preset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::BeautifyEffect::BEAUTIFY_PRESET)>(&BeautifyEffect::Beautify::set_preset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("BeautifyEffect", "BEAUTIFY_PRESET")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_preset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_quality
// Il2CppName: get_quality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::BeautifyEffect::BEAUTIFY_QUALITY (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_quality)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_quality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_quality
// Il2CppName: set_quality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::BeautifyEffect::BEAUTIFY_QUALITY)>(&BeautifyEffect::Beautify::set_quality)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("BeautifyEffect", "BEAUTIFY_QUALITY")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_quality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_profile
// Il2CppName: get_profile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::BeautifyEffect::BeautifyProfile* (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_profile)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_profile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_profile
// Il2CppName: set_profile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::BeautifyEffect::BeautifyProfile*)>(&BeautifyEffect::Beautify::set_profile)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("BeautifyEffect", "BeautifyProfile")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_profile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_compareMode
// Il2CppName: get_compareMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_compareMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_compareMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_compareMode
// Il2CppName: set_compareMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_compareMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_compareMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_compareLineAngle
// Il2CppName: get_compareLineAngle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_compareLineAngle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_compareLineAngle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_compareLineAngle
// Il2CppName: set_compareLineAngle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_compareLineAngle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_compareLineAngle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_compareLineWidth
// Il2CppName: get_compareLineWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_compareLineWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_compareLineWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_compareLineWidth
// Il2CppName: set_compareLineWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_compareLineWidth)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_compareLineWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_dither
// Il2CppName: get_dither
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_dither)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_dither", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_dither
// Il2CppName: set_dither
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_dither)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_dither", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_ditherDepth
// Il2CppName: get_ditherDepth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_ditherDepth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_ditherDepth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_ditherDepth
// Il2CppName: set_ditherDepth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_ditherDepth)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_ditherDepth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sharpenMinDepth
// Il2CppName: get_sharpenMinDepth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sharpenMinDepth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sharpenMinDepth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sharpenMinDepth
// Il2CppName: set_sharpenMinDepth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sharpenMinDepth)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sharpenMinDepth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sharpenMaxDepth
// Il2CppName: get_sharpenMaxDepth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sharpenMaxDepth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sharpenMaxDepth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sharpenMaxDepth
// Il2CppName: set_sharpenMaxDepth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sharpenMaxDepth)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sharpenMaxDepth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sharpen
// Il2CppName: get_sharpen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sharpen)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sharpen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sharpen
// Il2CppName: set_sharpen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sharpen)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sharpen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sharpenDepthThreshold
// Il2CppName: get_sharpenDepthThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sharpenDepthThreshold)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sharpenDepthThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sharpenDepthThreshold
// Il2CppName: set_sharpenDepthThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sharpenDepthThreshold)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sharpenDepthThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_tintColor
// Il2CppName: get_tintColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_tintColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_tintColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_tintColor
// Il2CppName: set_tintColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::Color)>(&BeautifyEffect::Beautify::set_tintColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_tintColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sharpenRelaxation
// Il2CppName: get_sharpenRelaxation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sharpenRelaxation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sharpenRelaxation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sharpenRelaxation
// Il2CppName: set_sharpenRelaxation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sharpenRelaxation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sharpenRelaxation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sharpenClamp
// Il2CppName: get_sharpenClamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sharpenClamp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sharpenClamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sharpenClamp
// Il2CppName: set_sharpenClamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sharpenClamp)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sharpenClamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sharpenMotionSensibility
// Il2CppName: get_sharpenMotionSensibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sharpenMotionSensibility)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sharpenMotionSensibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sharpenMotionSensibility
// Il2CppName: set_sharpenMotionSensibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sharpenMotionSensibility)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sharpenMotionSensibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_saturate
// Il2CppName: get_saturate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_saturate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_saturate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_saturate
// Il2CppName: set_saturate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_saturate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_saturate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_contrast
// Il2CppName: get_contrast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_contrast)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_contrast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_contrast
// Il2CppName: set_contrast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_contrast)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_contrast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_brightness
// Il2CppName: get_brightness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_brightness)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_brightness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_brightness
// Il2CppName: set_brightness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_brightness)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_brightness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_daltonize
// Il2CppName: get_daltonize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_daltonize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_daltonize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_daltonize
// Il2CppName: set_daltonize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_daltonize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_daltonize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_vignetting
// Il2CppName: get_vignetting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_vignetting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_vignetting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_vignetting
// Il2CppName: set_vignetting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_vignetting)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_vignetting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_vignettingColor
// Il2CppName: get_vignettingColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_vignettingColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_vignettingColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_vignettingColor
// Il2CppName: set_vignettingColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::Color)>(&BeautifyEffect::Beautify::set_vignettingColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_vignettingColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_vignettingFade
// Il2CppName: get_vignettingFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_vignettingFade)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_vignettingFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_vignettingFade
// Il2CppName: set_vignettingFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_vignettingFade)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_vignettingFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_vignettingCircularShape
// Il2CppName: get_vignettingCircularShape
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_vignettingCircularShape)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_vignettingCircularShape", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_vignettingCircularShape
// Il2CppName: set_vignettingCircularShape
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_vignettingCircularShape)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_vignettingCircularShape", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_vignettingAspectRatio
// Il2CppName: get_vignettingAspectRatio
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_vignettingAspectRatio)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_vignettingAspectRatio", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_vignettingAspectRatio
// Il2CppName: set_vignettingAspectRatio
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_vignettingAspectRatio)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_vignettingAspectRatio", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_vignettingBlink
// Il2CppName: get_vignettingBlink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_vignettingBlink)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_vignettingBlink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_vignettingBlink
// Il2CppName: set_vignettingBlink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_vignettingBlink)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_vignettingBlink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_vignettingMask
// Il2CppName: get_vignettingMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_vignettingMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_vignettingMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_vignettingMask
// Il2CppName: set_vignettingMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::Texture2D*)>(&BeautifyEffect::Beautify::set_vignettingMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_vignettingMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_frame
// Il2CppName: get_frame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_frame)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_frame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_frame
// Il2CppName: set_frame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_frame)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_frame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_frameColor
// Il2CppName: get_frameColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_frameColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_frameColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_frameColor
// Il2CppName: set_frameColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::Color)>(&BeautifyEffect::Beautify::set_frameColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_frameColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_frameMask
// Il2CppName: get_frameMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_frameMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_frameMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_frameMask
// Il2CppName: set_frameMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::Texture2D*)>(&BeautifyEffect::Beautify::set_frameMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_frameMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_lut
// Il2CppName: get_lut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_lut)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_lut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_lut
// Il2CppName: set_lut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_lut)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_lut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_lutIntensity
// Il2CppName: get_lutIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_lutIntensity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_lutIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_lutIntensity
// Il2CppName: set_lutIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_lutIntensity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_lutIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_lutTexture
// Il2CppName: get_lutTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_lutTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_lutTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_lutTexture
// Il2CppName: set_lutTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::Texture2D*)>(&BeautifyEffect::Beautify::set_lutTexture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_lutTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_nightVision
// Il2CppName: get_nightVision
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_nightVision)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_nightVision", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_nightVision
// Il2CppName: set_nightVision
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_nightVision)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_nightVision", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_nightVisionColor
// Il2CppName: get_nightVisionColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_nightVisionColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_nightVisionColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_nightVisionColor
// Il2CppName: set_nightVisionColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::Color)>(&BeautifyEffect::Beautify::set_nightVisionColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_nightVisionColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_outline
// Il2CppName: get_outline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_outline)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_outline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_outline
// Il2CppName: set_outline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_outline)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_outline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_outlineColor
// Il2CppName: get_outlineColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_outlineColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_outlineColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_outlineColor
// Il2CppName: set_outlineColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::Color)>(&BeautifyEffect::Beautify::set_outlineColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_outlineColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_thermalVision
// Il2CppName: get_thermalVision
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_thermalVision)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_thermalVision", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_thermalVision
// Il2CppName: set_thermalVision
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_thermalVision)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_thermalVision", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_lensDirt
// Il2CppName: get_lensDirt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_lensDirt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_lensDirt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_lensDirt
// Il2CppName: set_lensDirt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_lensDirt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_lensDirt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_lensDirtThreshold
// Il2CppName: get_lensDirtThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_lensDirtThreshold)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_lensDirtThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_lensDirtThreshold
// Il2CppName: set_lensDirtThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_lensDirtThreshold)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_lensDirtThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_lensDirtIntensity
// Il2CppName: get_lensDirtIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_lensDirtIntensity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_lensDirtIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_lensDirtIntensity
// Il2CppName: set_lensDirtIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_lensDirtIntensity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_lensDirtIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_lensDirtTexture
// Il2CppName: get_lensDirtTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_lensDirtTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_lensDirtTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_lensDirtTexture
// Il2CppName: set_lensDirtTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::Texture2D*)>(&BeautifyEffect::Beautify::set_lensDirtTexture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_lensDirtTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloom
// Il2CppName: get_bloom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloom
// Il2CppName: set_bloom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_bloom)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomCullingMask
// Il2CppName: get_bloomCullingMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::LayerMask (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomCullingMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomCullingMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomCullingMask
// Il2CppName: set_bloomCullingMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::LayerMask)>(&BeautifyEffect::Beautify::set_bloomCullingMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "LayerMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomCullingMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomLayerMaskDownsampling
// Il2CppName: get_bloomLayerMaskDownsampling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomLayerMaskDownsampling)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomLayerMaskDownsampling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomLayerMaskDownsampling
// Il2CppName: set_bloomLayerMaskDownsampling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_bloomLayerMaskDownsampling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomLayerMaskDownsampling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomIntensity
// Il2CppName: get_bloomIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomIntensity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomIntensity
// Il2CppName: set_bloomIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_bloomIntensity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomMaxBrightness
// Il2CppName: get_bloomMaxBrightness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomMaxBrightness)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomMaxBrightness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomMaxBrightness
// Il2CppName: set_bloomMaxBrightness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_bloomMaxBrightness)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomMaxBrightness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomBoost0
// Il2CppName: get_bloomBoost0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomBoost0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomBoost0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomBoost0
// Il2CppName: set_bloomBoost0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_bloomBoost0)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomBoost0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomBoost1
// Il2CppName: get_bloomBoost1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomBoost1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomBoost1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomBoost1
// Il2CppName: set_bloomBoost1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_bloomBoost1)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomBoost1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomBoost2
// Il2CppName: get_bloomBoost2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomBoost2)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomBoost2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomBoost2
// Il2CppName: set_bloomBoost2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_bloomBoost2)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomBoost2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomBoost3
// Il2CppName: get_bloomBoost3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomBoost3)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomBoost3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomBoost3
// Il2CppName: set_bloomBoost3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_bloomBoost3)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomBoost3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomBoost4
// Il2CppName: get_bloomBoost4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomBoost4)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomBoost4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomBoost4
// Il2CppName: set_bloomBoost4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_bloomBoost4)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomBoost4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomBoost5
// Il2CppName: get_bloomBoost5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomBoost5)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomBoost5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomBoost5
// Il2CppName: set_bloomBoost5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_bloomBoost5)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomBoost5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomAntiflicker
// Il2CppName: get_bloomAntiflicker
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomAntiflicker)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomAntiflicker", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomAntiflicker
// Il2CppName: set_bloomAntiflicker
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_bloomAntiflicker)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomAntiflicker", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomUltra
// Il2CppName: get_bloomUltra
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomUltra)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomUltra", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomUltra
// Il2CppName: set_bloomUltra
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_bloomUltra)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomUltra", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomThreshold
// Il2CppName: get_bloomThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomThreshold)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomThreshold
// Il2CppName: set_bloomThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_bloomThreshold)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomCustomize
// Il2CppName: get_bloomCustomize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomCustomize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomCustomize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomCustomize
// Il2CppName: set_bloomCustomize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_bloomCustomize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomCustomize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomDebug
// Il2CppName: get_bloomDebug
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomDebug)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomDebug", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomDebug
// Il2CppName: set_bloomDebug
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_bloomDebug)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomDebug", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomWeight0
// Il2CppName: get_bloomWeight0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomWeight0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomWeight0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomWeight0
// Il2CppName: set_bloomWeight0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_bloomWeight0)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomWeight0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomWeight1
// Il2CppName: get_bloomWeight1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomWeight1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomWeight1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomWeight1
// Il2CppName: set_bloomWeight1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_bloomWeight1)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomWeight1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomWeight2
// Il2CppName: get_bloomWeight2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomWeight2)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomWeight2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomWeight2
// Il2CppName: set_bloomWeight2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_bloomWeight2)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomWeight2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomWeight3
// Il2CppName: get_bloomWeight3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomWeight3)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomWeight3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomWeight3
// Il2CppName: set_bloomWeight3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_bloomWeight3)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomWeight3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomWeight4
// Il2CppName: get_bloomWeight4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomWeight4)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomWeight4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomWeight4
// Il2CppName: set_bloomWeight4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_bloomWeight4)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomWeight4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomWeight5
// Il2CppName: get_bloomWeight5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomWeight5)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomWeight5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomWeight5
// Il2CppName: set_bloomWeight5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_bloomWeight5)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomWeight5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomBlur
// Il2CppName: get_bloomBlur
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomBlur)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomBlur", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomBlur
// Il2CppName: set_bloomBlur
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_bloomBlur)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomBlur", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomDepthAtten
// Il2CppName: get_bloomDepthAtten
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomDepthAtten)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomDepthAtten", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomDepthAtten
// Il2CppName: set_bloomDepthAtten
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_bloomDepthAtten)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomDepthAtten", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_bloomLayerZBias
// Il2CppName: get_bloomLayerZBias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_bloomLayerZBias)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_bloomLayerZBias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_bloomLayerZBias
// Il2CppName: set_bloomLayerZBias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_bloomLayerZBias)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_bloomLayerZBias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_anamorphicFlares
// Il2CppName: get_anamorphicFlares
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_anamorphicFlares)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_anamorphicFlares", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_anamorphicFlares
// Il2CppName: set_anamorphicFlares
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_anamorphicFlares)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_anamorphicFlares", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_anamorphicFlaresIntensity
// Il2CppName: get_anamorphicFlaresIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_anamorphicFlaresIntensity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_anamorphicFlaresIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_anamorphicFlaresIntensity
// Il2CppName: set_anamorphicFlaresIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_anamorphicFlaresIntensity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_anamorphicFlaresIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_anamorphicFlaresAntiflicker
// Il2CppName: get_anamorphicFlaresAntiflicker
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_anamorphicFlaresAntiflicker)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_anamorphicFlaresAntiflicker", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_anamorphicFlaresAntiflicker
// Il2CppName: set_anamorphicFlaresAntiflicker
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_anamorphicFlaresAntiflicker)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_anamorphicFlaresAntiflicker", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_anamorphicFlaresUltra
// Il2CppName: get_anamorphicFlaresUltra
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_anamorphicFlaresUltra)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_anamorphicFlaresUltra", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_anamorphicFlaresUltra
// Il2CppName: set_anamorphicFlaresUltra
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_anamorphicFlaresUltra)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_anamorphicFlaresUltra", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_anamorphicFlaresThreshold
// Il2CppName: get_anamorphicFlaresThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_anamorphicFlaresThreshold)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_anamorphicFlaresThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_anamorphicFlaresThreshold
// Il2CppName: set_anamorphicFlaresThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_anamorphicFlaresThreshold)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_anamorphicFlaresThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_anamorphicFlaresSpread
// Il2CppName: get_anamorphicFlaresSpread
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_anamorphicFlaresSpread)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_anamorphicFlaresSpread", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_anamorphicFlaresSpread
// Il2CppName: set_anamorphicFlaresSpread
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_anamorphicFlaresSpread)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_anamorphicFlaresSpread", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_anamorphicFlaresVertical
// Il2CppName: get_anamorphicFlaresVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_anamorphicFlaresVertical)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_anamorphicFlaresVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_anamorphicFlaresVertical
// Il2CppName: set_anamorphicFlaresVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_anamorphicFlaresVertical)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_anamorphicFlaresVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_anamorphicFlaresTint
// Il2CppName: get_anamorphicFlaresTint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_anamorphicFlaresTint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_anamorphicFlaresTint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_anamorphicFlaresTint
// Il2CppName: set_anamorphicFlaresTint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::Color)>(&BeautifyEffect::Beautify::set_anamorphicFlaresTint)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_anamorphicFlaresTint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_anamorphicFlaresBlur
// Il2CppName: get_anamorphicFlaresBlur
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_anamorphicFlaresBlur)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_anamorphicFlaresBlur", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_anamorphicFlaresBlur
// Il2CppName: set_anamorphicFlaresBlur
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_anamorphicFlaresBlur)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_anamorphicFlaresBlur", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfField
// Il2CppName: get_depthOfField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfField)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfField
// Il2CppName: set_depthOfField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_depthOfField)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldTransparencySupport
// Il2CppName: get_depthOfFieldTransparencySupport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldTransparencySupport)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldTransparencySupport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldTransparencySupport
// Il2CppName: set_depthOfFieldTransparencySupport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_depthOfFieldTransparencySupport)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldTransparencySupport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldTransparencyLayerMask
// Il2CppName: get_depthOfFieldTransparencyLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::LayerMask (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldTransparencyLayerMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldTransparencyLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldTransparencyLayerMask
// Il2CppName: set_depthOfFieldTransparencyLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::LayerMask)>(&BeautifyEffect::Beautify::set_depthOfFieldTransparencyLayerMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "LayerMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldTransparencyLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldTargetFocus
// Il2CppName: get_depthOfFieldTargetFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldTargetFocus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldTargetFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldTargetFocus
// Il2CppName: set_depthOfFieldTargetFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::Transform*)>(&BeautifyEffect::Beautify::set_depthOfFieldTargetFocus)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldTargetFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldDebug
// Il2CppName: get_depthOfFieldDebug
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldDebug)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldDebug", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldDebug
// Il2CppName: set_depthOfFieldDebug
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_depthOfFieldDebug)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldDebug", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldAutofocus
// Il2CppName: get_depthOfFieldAutofocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldAutofocus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldAutofocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldAutofocus
// Il2CppName: set_depthOfFieldAutofocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_depthOfFieldAutofocus)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldAutofocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthofFieldAutofocusViewportPoint
// Il2CppName: get_depthofFieldAutofocusViewportPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthofFieldAutofocusViewportPoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthofFieldAutofocusViewportPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthofFieldAutofocusViewportPoint
// Il2CppName: set_depthofFieldAutofocusViewportPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::Vector2)>(&BeautifyEffect::Beautify::set_depthofFieldAutofocusViewportPoint)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthofFieldAutofocusViewportPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldAutofocusMinDistance
// Il2CppName: get_depthOfFieldAutofocusMinDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldAutofocusMinDistance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldAutofocusMinDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldAutofocusMinDistance
// Il2CppName: set_depthOfFieldAutofocusMinDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_depthOfFieldAutofocusMinDistance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldAutofocusMinDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldAutofocusMaxDistance
// Il2CppName: get_depthOfFieldAutofocusMaxDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldAutofocusMaxDistance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldAutofocusMaxDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldAutofocusMaxDistance
// Il2CppName: set_depthOfFieldAutofocusMaxDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_depthOfFieldAutofocusMaxDistance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldAutofocusMaxDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldAutofocusLayerMask
// Il2CppName: get_depthOfFieldAutofocusLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::LayerMask (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldAutofocusLayerMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldAutofocusLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldAutofocusLayerMask
// Il2CppName: set_depthOfFieldAutofocusLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::LayerMask)>(&BeautifyEffect::Beautify::set_depthOfFieldAutofocusLayerMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "LayerMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldAutofocusLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldExclusionLayerMask
// Il2CppName: get_depthOfFieldExclusionLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::LayerMask (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldExclusionLayerMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldExclusionLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldExclusionLayerMask
// Il2CppName: set_depthOfFieldExclusionLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::LayerMask)>(&BeautifyEffect::Beautify::set_depthOfFieldExclusionLayerMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "LayerMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldExclusionLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldExclusionLayerMaskDownsampling
// Il2CppName: get_depthOfFieldExclusionLayerMaskDownsampling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldExclusionLayerMaskDownsampling)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldExclusionLayerMaskDownsampling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldExclusionLayerMaskDownsampling
// Il2CppName: set_depthOfFieldExclusionLayerMaskDownsampling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_depthOfFieldExclusionLayerMaskDownsampling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldExclusionLayerMaskDownsampling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldTransparencySupportDownsampling
// Il2CppName: get_depthOfFieldTransparencySupportDownsampling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldTransparencySupportDownsampling)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldTransparencySupportDownsampling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldTransparencySupportDownsampling
// Il2CppName: set_depthOfFieldTransparencySupportDownsampling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_depthOfFieldTransparencySupportDownsampling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldTransparencySupportDownsampling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldExclusionBias
// Il2CppName: get_depthOfFieldExclusionBias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldExclusionBias)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldExclusionBias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldExclusionBias
// Il2CppName: set_depthOfFieldExclusionBias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_depthOfFieldExclusionBias)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldExclusionBias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldDistance
// Il2CppName: get_depthOfFieldDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldDistance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldDistance
// Il2CppName: set_depthOfFieldDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_depthOfFieldDistance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldFocusSpeed
// Il2CppName: get_depthOfFieldFocusSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldFocusSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldFocusSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldFocusSpeed
// Il2CppName: set_depthOfFieldFocusSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_depthOfFieldFocusSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldFocusSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldDownsampling
// Il2CppName: get_depthOfFieldDownsampling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldDownsampling)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldDownsampling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldDownsampling
// Il2CppName: set_depthOfFieldDownsampling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(int)>(&BeautifyEffect::Beautify::set_depthOfFieldDownsampling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldDownsampling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldMaxSamples
// Il2CppName: get_depthOfFieldMaxSamples
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldMaxSamples)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldMaxSamples", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldMaxSamples
// Il2CppName: set_depthOfFieldMaxSamples
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(int)>(&BeautifyEffect::Beautify::set_depthOfFieldMaxSamples)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldMaxSamples", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldFocalLength
// Il2CppName: get_depthOfFieldFocalLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldFocalLength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldFocalLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldFocalLength
// Il2CppName: set_depthOfFieldFocalLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_depthOfFieldFocalLength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldFocalLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldAperture
// Il2CppName: get_depthOfFieldAperture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldAperture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldAperture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldAperture
// Il2CppName: set_depthOfFieldAperture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_depthOfFieldAperture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldAperture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldForegroundBlur
// Il2CppName: get_depthOfFieldForegroundBlur
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldForegroundBlur)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldForegroundBlur", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldForegroundBlur
// Il2CppName: set_depthOfFieldForegroundBlur
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_depthOfFieldForegroundBlur)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldForegroundBlur", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldForegroundBlurHQ
// Il2CppName: get_depthOfFieldForegroundBlurHQ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldForegroundBlurHQ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldForegroundBlurHQ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldForegroundBlurHQ
// Il2CppName: set_depthOfFieldForegroundBlurHQ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_depthOfFieldForegroundBlurHQ)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldForegroundBlurHQ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldForegroundDistance
// Il2CppName: get_depthOfFieldForegroundDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldForegroundDistance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldForegroundDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldForegroundDistance
// Il2CppName: set_depthOfFieldForegroundDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_depthOfFieldForegroundDistance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldForegroundDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldBokeh
// Il2CppName: get_depthOfFieldBokeh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldBokeh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldBokeh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldBokeh
// Il2CppName: set_depthOfFieldBokeh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_depthOfFieldBokeh)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldBokeh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldBokehThreshold
// Il2CppName: get_depthOfFieldBokehThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldBokehThreshold)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldBokehThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldBokehThreshold
// Il2CppName: set_depthOfFieldBokehThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_depthOfFieldBokehThreshold)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldBokehThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldBokehIntensity
// Il2CppName: get_depthOfFieldBokehIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldBokehIntensity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldBokehIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldBokehIntensity
// Il2CppName: set_depthOfFieldBokehIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_depthOfFieldBokehIntensity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldBokehIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldMaxBrightness
// Il2CppName: get_depthOfFieldMaxBrightness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldMaxBrightness)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldMaxBrightness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldMaxBrightness
// Il2CppName: set_depthOfFieldMaxBrightness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_depthOfFieldMaxBrightness)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldMaxBrightness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldMaxDistance
// Il2CppName: get_depthOfFieldMaxDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldMaxDistance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldMaxDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldMaxDistance
// Il2CppName: set_depthOfFieldMaxDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_depthOfFieldMaxDistance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldMaxDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldFilterMode
// Il2CppName: get_depthOfFieldFilterMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::FilterMode (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldFilterMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldFilterMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_depthOfFieldFilterMode
// Il2CppName: set_depthOfFieldFilterMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::FilterMode)>(&BeautifyEffect::Beautify::set_depthOfFieldFilterMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "FilterMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_depthOfFieldFilterMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_eyeAdaptation
// Il2CppName: get_eyeAdaptation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_eyeAdaptation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_eyeAdaptation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_eyeAdaptation
// Il2CppName: set_eyeAdaptation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_eyeAdaptation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_eyeAdaptation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_eyeAdaptationMinExposure
// Il2CppName: get_eyeAdaptationMinExposure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_eyeAdaptationMinExposure)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_eyeAdaptationMinExposure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_eyeAdaptationMinExposure
// Il2CppName: set_eyeAdaptationMinExposure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_eyeAdaptationMinExposure)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_eyeAdaptationMinExposure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_eyeAdaptationMaxExposure
// Il2CppName: get_eyeAdaptationMaxExposure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_eyeAdaptationMaxExposure)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_eyeAdaptationMaxExposure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_eyeAdaptationMaxExposure
// Il2CppName: set_eyeAdaptationMaxExposure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_eyeAdaptationMaxExposure)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_eyeAdaptationMaxExposure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_eyeAdaptationSpeedToLight
// Il2CppName: get_eyeAdaptationSpeedToLight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_eyeAdaptationSpeedToLight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_eyeAdaptationSpeedToLight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_eyeAdaptationSpeedToLight
// Il2CppName: set_eyeAdaptationSpeedToLight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_eyeAdaptationSpeedToLight)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_eyeAdaptationSpeedToLight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_eyeAdaptationSpeedToDark
// Il2CppName: get_eyeAdaptationSpeedToDark
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_eyeAdaptationSpeedToDark)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_eyeAdaptationSpeedToDark", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_eyeAdaptationSpeedToDark
// Il2CppName: set_eyeAdaptationSpeedToDark
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_eyeAdaptationSpeedToDark)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_eyeAdaptationSpeedToDark", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_purkinje
// Il2CppName: get_purkinje
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_purkinje)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_purkinje", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_purkinje
// Il2CppName: set_purkinje
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_purkinje)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_purkinje", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_purkinjeAmount
// Il2CppName: get_purkinjeAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_purkinjeAmount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_purkinjeAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_purkinjeAmount
// Il2CppName: set_purkinjeAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_purkinjeAmount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_purkinjeAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_purkinjeLuminanceThreshold
// Il2CppName: get_purkinjeLuminanceThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_purkinjeLuminanceThreshold)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_purkinjeLuminanceThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_purkinjeLuminanceThreshold
// Il2CppName: set_purkinjeLuminanceThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_purkinjeLuminanceThreshold)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_purkinjeLuminanceThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_tonemap
// Il2CppName: get_tonemap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::BeautifyEffect::BEAUTIFY_TMO (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_tonemap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_tonemap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_tonemap
// Il2CppName: set_tonemap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::BeautifyEffect::BEAUTIFY_TMO)>(&BeautifyEffect::Beautify::set_tonemap)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("BeautifyEffect", "BEAUTIFY_TMO")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_tonemap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlares
// Il2CppName: get_sunFlares
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlares)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlares", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlares
// Il2CppName: set_sunFlares
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_sunFlares)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlares", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sun
// Il2CppName: get_sun
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sun)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sun", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sun
// Il2CppName: set_sun
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::Transform*)>(&BeautifyEffect::Beautify::set_sun)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sun", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresLayerMask
// Il2CppName: get_sunFlaresLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::LayerMask (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresLayerMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresLayerMask
// Il2CppName: set_sunFlaresLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::LayerMask)>(&BeautifyEffect::Beautify::set_sunFlaresLayerMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "LayerMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresIntensity
// Il2CppName: get_sunFlaresIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresIntensity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresIntensity
// Il2CppName: set_sunFlaresIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresIntensity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresSolarWindSpeed
// Il2CppName: get_sunFlaresSolarWindSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresSolarWindSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresSolarWindSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresSolarWindSpeed
// Il2CppName: set_sunFlaresSolarWindSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresSolarWindSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresSolarWindSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresTint
// Il2CppName: get_sunFlaresTint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresTint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresTint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresTint
// Il2CppName: set_sunFlaresTint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::Color)>(&BeautifyEffect::Beautify::set_sunFlaresTint)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresTint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresDownsampling
// Il2CppName: get_sunFlaresDownsampling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresDownsampling)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresDownsampling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresDownsampling
// Il2CppName: set_sunFlaresDownsampling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(int)>(&BeautifyEffect::Beautify::set_sunFlaresDownsampling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresDownsampling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresSunIntensity
// Il2CppName: get_sunFlaresSunIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresSunIntensity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresSunIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresSunIntensity
// Il2CppName: set_sunFlaresSunIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresSunIntensity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresSunIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresSunDiskSize
// Il2CppName: get_sunFlaresSunDiskSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresSunDiskSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresSunDiskSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresSunDiskSize
// Il2CppName: set_sunFlaresSunDiskSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresSunDiskSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresSunDiskSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresSunRayDiffractionIntensity
// Il2CppName: get_sunFlaresSunRayDiffractionIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresSunRayDiffractionIntensity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresSunRayDiffractionIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresSunRayDiffractionIntensity
// Il2CppName: set_sunFlaresSunRayDiffractionIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresSunRayDiffractionIntensity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresSunRayDiffractionIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresSunRayDiffractionThreshold
// Il2CppName: get_sunFlaresSunRayDiffractionThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresSunRayDiffractionThreshold)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresSunRayDiffractionThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresSunRayDiffractionThreshold
// Il2CppName: set_sunFlaresSunRayDiffractionThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresSunRayDiffractionThreshold)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresSunRayDiffractionThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresCoronaRays1Length
// Il2CppName: get_sunFlaresCoronaRays1Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresCoronaRays1Length)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresCoronaRays1Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresCoronaRays1Length
// Il2CppName: set_sunFlaresCoronaRays1Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresCoronaRays1Length)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresCoronaRays1Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresCoronaRays1Streaks
// Il2CppName: get_sunFlaresCoronaRays1Streaks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresCoronaRays1Streaks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresCoronaRays1Streaks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresCoronaRays1Streaks
// Il2CppName: set_sunFlaresCoronaRays1Streaks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(int)>(&BeautifyEffect::Beautify::set_sunFlaresCoronaRays1Streaks)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresCoronaRays1Streaks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresCoronaRays1Spread
// Il2CppName: get_sunFlaresCoronaRays1Spread
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresCoronaRays1Spread)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresCoronaRays1Spread", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresCoronaRays1Spread
// Il2CppName: set_sunFlaresCoronaRays1Spread
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresCoronaRays1Spread)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresCoronaRays1Spread", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresCoronaRays1AngleOffset
// Il2CppName: get_sunFlaresCoronaRays1AngleOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresCoronaRays1AngleOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresCoronaRays1AngleOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresCoronaRays1AngleOffset
// Il2CppName: set_sunFlaresCoronaRays1AngleOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresCoronaRays1AngleOffset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresCoronaRays1AngleOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresCoronaRays2Length
// Il2CppName: get_sunFlaresCoronaRays2Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresCoronaRays2Length)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresCoronaRays2Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresCoronaRays2Length
// Il2CppName: set_sunFlaresCoronaRays2Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresCoronaRays2Length)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresCoronaRays2Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresCoronaRays2Streaks
// Il2CppName: get_sunFlaresCoronaRays2Streaks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresCoronaRays2Streaks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresCoronaRays2Streaks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresCoronaRays2Streaks
// Il2CppName: set_sunFlaresCoronaRays2Streaks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(int)>(&BeautifyEffect::Beautify::set_sunFlaresCoronaRays2Streaks)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresCoronaRays2Streaks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresCoronaRays2Spread
// Il2CppName: get_sunFlaresCoronaRays2Spread
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresCoronaRays2Spread)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresCoronaRays2Spread", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresCoronaRays2Spread
// Il2CppName: set_sunFlaresCoronaRays2Spread
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresCoronaRays2Spread)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresCoronaRays2Spread", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresCoronaRays2AngleOffset
// Il2CppName: get_sunFlaresCoronaRays2AngleOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresCoronaRays2AngleOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresCoronaRays2AngleOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresCoronaRays2AngleOffset
// Il2CppName: set_sunFlaresCoronaRays2AngleOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresCoronaRays2AngleOffset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresCoronaRays2AngleOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresGhosts1Size
// Il2CppName: get_sunFlaresGhosts1Size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresGhosts1Size)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresGhosts1Size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresGhosts1Size
// Il2CppName: set_sunFlaresGhosts1Size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresGhosts1Size)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresGhosts1Size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresGhosts1Offset
// Il2CppName: get_sunFlaresGhosts1Offset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresGhosts1Offset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresGhosts1Offset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresGhosts1Offset
// Il2CppName: set_sunFlaresGhosts1Offset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresGhosts1Offset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresGhosts1Offset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresGhosts1Brightness
// Il2CppName: get_sunFlaresGhosts1Brightness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresGhosts1Brightness)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresGhosts1Brightness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresGhosts1Brightness
// Il2CppName: set_sunFlaresGhosts1Brightness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresGhosts1Brightness)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresGhosts1Brightness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresGhosts2Size
// Il2CppName: get_sunFlaresGhosts2Size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresGhosts2Size)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresGhosts2Size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresGhosts2Size
// Il2CppName: set_sunFlaresGhosts2Size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresGhosts2Size)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresGhosts2Size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresGhosts2Offset
// Il2CppName: get_sunFlaresGhosts2Offset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresGhosts2Offset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresGhosts2Offset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresGhosts2Offset
// Il2CppName: set_sunFlaresGhosts2Offset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresGhosts2Offset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresGhosts2Offset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresGhosts2Brightness
// Il2CppName: get_sunFlaresGhosts2Brightness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresGhosts2Brightness)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresGhosts2Brightness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresGhosts2Brightness
// Il2CppName: set_sunFlaresGhosts2Brightness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresGhosts2Brightness)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresGhosts2Brightness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresGhosts3Size
// Il2CppName: get_sunFlaresGhosts3Size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresGhosts3Size)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresGhosts3Size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresGhosts3Size
// Il2CppName: set_sunFlaresGhosts3Size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresGhosts3Size)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresGhosts3Size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresGhosts3Brightness
// Il2CppName: get_sunFlaresGhosts3Brightness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresGhosts3Brightness)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresGhosts3Brightness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresGhosts3Brightness
// Il2CppName: set_sunFlaresGhosts3Brightness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresGhosts3Brightness)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresGhosts3Brightness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresGhosts3Offset
// Il2CppName: get_sunFlaresGhosts3Offset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresGhosts3Offset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresGhosts3Offset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresGhosts3Offset
// Il2CppName: set_sunFlaresGhosts3Offset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresGhosts3Offset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresGhosts3Offset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresGhosts4Size
// Il2CppName: get_sunFlaresGhosts4Size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresGhosts4Size)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresGhosts4Size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresGhosts4Size
// Il2CppName: set_sunFlaresGhosts4Size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresGhosts4Size)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresGhosts4Size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresGhosts4Offset
// Il2CppName: get_sunFlaresGhosts4Offset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresGhosts4Offset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresGhosts4Offset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresGhosts4Offset
// Il2CppName: set_sunFlaresGhosts4Offset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresGhosts4Offset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresGhosts4Offset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresGhosts4Brightness
// Il2CppName: get_sunFlaresGhosts4Brightness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresGhosts4Brightness)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresGhosts4Brightness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresGhosts4Brightness
// Il2CppName: set_sunFlaresGhosts4Brightness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresGhosts4Brightness)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresGhosts4Brightness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresHaloOffset
// Il2CppName: get_sunFlaresHaloOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresHaloOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresHaloOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresHaloOffset
// Il2CppName: set_sunFlaresHaloOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresHaloOffset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresHaloOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresHaloAmplitude
// Il2CppName: get_sunFlaresHaloAmplitude
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresHaloAmplitude)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresHaloAmplitude", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresHaloAmplitude
// Il2CppName: set_sunFlaresHaloAmplitude
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresHaloAmplitude)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresHaloAmplitude", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresHaloIntensity
// Il2CppName: get_sunFlaresHaloIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresHaloIntensity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresHaloIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresHaloIntensity
// Il2CppName: set_sunFlaresHaloIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_sunFlaresHaloIntensity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresHaloIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_sunFlaresRotationDeadZone
// Il2CppName: get_sunFlaresRotationDeadZone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_sunFlaresRotationDeadZone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_sunFlaresRotationDeadZone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_sunFlaresRotationDeadZone
// Il2CppName: set_sunFlaresRotationDeadZone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_sunFlaresRotationDeadZone)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_sunFlaresRotationDeadZone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_blur
// Il2CppName: get_blur
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_blur)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_blur", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_blur
// Il2CppName: set_blur
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_blur)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_blur", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_blurIntensity
// Il2CppName: get_blurIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_blurIntensity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_blurIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_blurIntensity
// Il2CppName: set_blurIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_blurIntensity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_blurIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_pixelateAmount
// Il2CppName: get_pixelateAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_pixelateAmount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_pixelateAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_pixelateAmount
// Il2CppName: set_pixelateAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(int)>(&BeautifyEffect::Beautify::set_pixelateAmount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_pixelateAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_pixelateDownscale
// Il2CppName: get_pixelateDownscale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_pixelateDownscale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_pixelateDownscale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_pixelateDownscale
// Il2CppName: set_pixelateDownscale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(bool)>(&BeautifyEffect::Beautify::set_pixelateDownscale)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_pixelateDownscale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_antialiasStrength
// Il2CppName: get_antialiasStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_antialiasStrength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_antialiasStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_antialiasStrength
// Il2CppName: set_antialiasStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_antialiasStrength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_antialiasStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_antialiasDepthThreshold
// Il2CppName: get_antialiasDepthThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_antialiasDepthThreshold)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_antialiasDepthThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::set_antialiasDepthThreshold
// Il2CppName: set_antialiasDepthThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::set_antialiasDepthThreshold)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "set_antialiasDepthThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_instance
// Il2CppName: get_instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::BeautifyEffect::Beautify* (*)()>(&BeautifyEffect::Beautify::get_instance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_cameraEffect
// Il2CppName: get_cameraEffect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Camera* (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_cameraEffect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_cameraEffect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::get_depthOfFieldCurrentFocalPointDistance
// Il2CppName: get_depthOfFieldCurrentFocalPointDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::get_depthOfFieldCurrentFocalPointDistance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "get_depthOfFieldCurrentFocalPointDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::OnPreCull
// Il2CppName: OnPreCull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::OnPreCull)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "OnPreCull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::OnPreRender
// Il2CppName: OnPreRender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::OnPreRender)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "OnPreRender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::CleanUpRT
// Il2CppName: CleanUpRT
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::CleanUpRT)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "CleanUpRT", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::CheckDoFTransparencySupport
// Il2CppName: CheckDoFTransparencySupport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::CheckDoFTransparencySupport)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "CheckDoFTransparencySupport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::CheckDoFExclusionMask
// Il2CppName: CheckDoFExclusionMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::CheckDoFExclusionMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "CheckDoFExclusionMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::CheckBloomCullingLayer
// Il2CppName: CheckBloomCullingLayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::CheckBloomCullingLayer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "CheckBloomCullingLayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::OnRenderImage
// Il2CppName: OnRenderImage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::RenderTexture*, ::UnityEngine::RenderTexture*)>(&BeautifyEffect::Beautify::OnRenderImage)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    static auto* destination = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "OnRenderImage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, destination});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::OnPostRender
// Il2CppName: OnPostRender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::OnPostRender)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "OnPostRender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::BlurThis
// Il2CppName: BlurThis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::RenderTexture*, float)>(&BeautifyEffect::Beautify::BlurThis)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    static auto* blurScale = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "BlurThis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt, blurScale});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::BlurThisDownscaling
// Il2CppName: BlurThisDownscaling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::RenderTexture*, ::UnityEngine::RenderTexture*, float)>(&BeautifyEffect::Beautify::BlurThisDownscaling)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    static auto* downscaled = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    static auto* blurScale = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "BlurThisDownscaling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt, downscaled, blurScale});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::BlurThisOneDirection
// Il2CppName: BlurThisOneDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RenderTexture* (BeautifyEffect::Beautify::*)(::UnityEngine::RenderTexture*, bool, float)>(&BeautifyEffect::Beautify::BlurThisOneDirection)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    static auto* vertical = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* blurScale = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "BlurThisOneDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt, vertical, blurScale});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::BlurThisDoF
// Il2CppName: BlurThisDoF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::RenderTexture*, int)>(&BeautifyEffect::Beautify::BlurThisDoF)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    static auto* renderPass = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "BlurThisDoF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt, renderPass});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::BlurThisAlpha
// Il2CppName: BlurThisAlpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::RenderTexture*, float)>(&BeautifyEffect::Beautify::BlurThisAlpha)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    static auto* blurScale = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "BlurThisAlpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt, blurScale});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::OnDidApplyAnimationProperties
// Il2CppName: OnDidApplyAnimationProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::OnDidApplyAnimationProperties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::UpdateQualitySettings
// Il2CppName: UpdateQualitySettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::UpdateQualitySettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "UpdateQualitySettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::UpdateMaterialProperties
// Il2CppName: UpdateMaterialProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::UpdateMaterialProperties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "UpdateMaterialProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::UpdateMaterialPropertiesNow
// Il2CppName: UpdateMaterialPropertiesNow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::UpdateMaterialPropertiesNow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "UpdateMaterialPropertiesNow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::UpdateMaterialBloomIntensityAndThreshold
// Il2CppName: UpdateMaterialBloomIntensityAndThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::UpdateMaterialBloomIntensityAndThreshold)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "UpdateMaterialBloomIntensityAndThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::UpdateMaterialAnamorphicIntensityAndThreshold
// Il2CppName: UpdateMaterialAnamorphicIntensityAndThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::UpdateMaterialAnamorphicIntensityAndThreshold)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "UpdateMaterialAnamorphicIntensityAndThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::UpdateSharpenParams
// Il2CppName: UpdateSharpenParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float)>(&BeautifyEffect::Beautify::UpdateSharpenParams)> {
  static const MethodInfo* get() {
    static auto* sharpen = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "UpdateSharpenParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sharpen});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::UpdateDepthOfFieldData
// Il2CppName: UpdateDepthOfFieldData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::UpdateDepthOfFieldData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "UpdateDepthOfFieldData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::UpdateDepthOfFieldBlurData
// Il2CppName: UpdateDepthOfFieldBlurData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(::UnityEngine::Vector2)>(&BeautifyEffect::Beautify::UpdateDepthOfFieldBlurData)> {
  static const MethodInfo* get() {
    static auto* blurDir = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "UpdateDepthOfFieldBlurData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{blurDir});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::UpdateDoFAutofocusDistance
// Il2CppName: UpdateDoFAutofocusDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)()>(&BeautifyEffect::Beautify::UpdateDoFAutofocusDistance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "UpdateDoFAutofocusDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::Blink
// Il2CppName: Blink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeautifyEffect::Beautify::*)(float, float)>(&BeautifyEffect::Beautify::Blink)> {
  static const MethodInfo* get() {
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* maxValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "Blink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{duration, maxValue});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::DoBlink
// Il2CppName: DoBlink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (BeautifyEffect::Beautify::*)(float, float)>(&BeautifyEffect::Beautify::DoBlink)> {
  static const MethodInfo* get() {
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* maxValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BeautifyEffect::Beautify*), "DoBlink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{duration, maxValue});
  }
};
// Writing MetadataGetter for method: BeautifyEffect::Beautify::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
