// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: AudioHelm
namespace AudioHelm {
  // Forward declaring type: HelmController
  class HelmController;
}
// Completed forward declares
// Type namespace: AudioHelm
namespace AudioHelm {
  // Forward declaring type: SetHelmParameter
  class SetHelmParameter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AudioHelm::SetHelmParameter);
DEFINE_IL2CPP_ARG_TYPE(::AudioHelm::SetHelmParameter*, "AudioHelm", "SetHelmParameter");
// Type namespace: AudioHelm
namespace AudioHelm {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: AudioHelm.SetHelmParameter
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: 782350
  // [AddComponentMenu] Offset: 782350
  class SetHelmParameter : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.Int32 parameterIndex
    // Size: 0x4
    // Offset: 0x18
    int parameterIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: parameterIndex and: controller
    char __padding0[0x4] = {};
    // public AudioHelm.HelmController controller
    // Size: 0x8
    // Offset: 0x20
    ::AudioHelm::HelmController* controller;
    // Field size check
    static_assert(sizeof(::AudioHelm::HelmController*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.Int32 parameterIndex
    [[deprecated]] int& dyn_parameterIndex();
    // Get instance field reference: public AudioHelm.HelmController controller
    [[deprecated]] ::AudioHelm::HelmController*& dyn_controller();
    // public System.Void SetPercent()
    // Offset: 0x19249FC
    void SetPercent();
    // private System.Void Start()
    // Offset: 0x1924A84
    void Start();
    // public System.Void .ctor()
    // Offset: 0x1924A88
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SetHelmParameter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SetHelmParameter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SetHelmParameter*, creationType>()));
    }
  }; // AudioHelm.SetHelmParameter
  #pragma pack(pop)
  static check_size<sizeof(SetHelmParameter), 32 + sizeof(::AudioHelm::HelmController*)> __AudioHelm_SetHelmParameterSizeCheck;
  static_assert(sizeof(SetHelmParameter) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AudioHelm::SetHelmParameter::SetPercent
// Il2CppName: SetPercent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AudioHelm::SetHelmParameter::*)()>(&AudioHelm::SetHelmParameter::SetPercent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AudioHelm::SetHelmParameter*), "SetPercent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AudioHelm::SetHelmParameter::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AudioHelm::SetHelmParameter::*)()>(&AudioHelm::SetHelmParameter::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AudioHelm::SetHelmParameter*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AudioHelm::SetHelmParameter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
