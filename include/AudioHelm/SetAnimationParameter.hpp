// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Animator
  class Animator;
}
// Completed forward declares
// Type namespace: AudioHelm
namespace AudioHelm {
  // Forward declaring type: SetAnimationParameter
  class SetAnimationParameter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AudioHelm::SetAnimationParameter);
DEFINE_IL2CPP_ARG_TYPE(::AudioHelm::SetAnimationParameter*, "AudioHelm", "SetAnimationParameter");
// Type namespace: AudioHelm
namespace AudioHelm {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: AudioHelm.SetAnimationParameter
  // [TokenAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: 7822CC
  // [RequireComponent] Offset: 7822CC
  class SetAnimationParameter : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String parameter
    // Size: 0x8
    // Offset: 0x18
    ::StringW parameter;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.Animator animator
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Animator* animator;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animator*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String parameter
    [[deprecated]] ::StringW& dyn_parameter();
    // Get instance field reference: public UnityEngine.Animator animator
    [[deprecated]] ::UnityEngine::Animator*& dyn_animator();
    // public System.Void SetValue()
    // Offset: 0x1924748
    void SetValue();
    // private System.Void Start()
    // Offset: 0x19247CC
    void Start();
    // public System.Void .ctor()
    // Offset: 0x19247D0
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SetAnimationParameter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::AudioHelm::SetAnimationParameter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SetAnimationParameter*, creationType>()));
    }
  }; // AudioHelm.SetAnimationParameter
  #pragma pack(pop)
  static check_size<sizeof(SetAnimationParameter), 32 + sizeof(::UnityEngine::Animator*)> __AudioHelm_SetAnimationParameterSizeCheck;
  static_assert(sizeof(SetAnimationParameter) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AudioHelm::SetAnimationParameter::SetValue
// Il2CppName: SetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AudioHelm::SetAnimationParameter::*)()>(&AudioHelm::SetAnimationParameter::SetValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AudioHelm::SetAnimationParameter*), "SetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AudioHelm::SetAnimationParameter::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AudioHelm::SetAnimationParameter::*)()>(&AudioHelm::SetAnimationParameter::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AudioHelm::SetAnimationParameter*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AudioHelm::SetAnimationParameter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
