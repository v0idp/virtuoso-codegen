// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityOSC.OSCPacket
#include "UnityOSC/OSCPacket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Completed forward declares
// Type namespace: UnityOSC
namespace UnityOSC {
  // Forward declaring type: OSCBundle
  class OSCBundle;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityOSC::OSCBundle);
DEFINE_IL2CPP_ARG_TYPE(::UnityOSC::OSCBundle*, "UnityOSC", "OSCBundle");
// Type namespace: UnityOSC
namespace UnityOSC {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: UnityOSC.OSCBundle
  // [TokenAttribute] Offset: FFFFFFFF
  class OSCBundle : public ::UnityOSC::OSCPacket {
    public:
    // static field const value: static private System.String BUNDLE
    static constexpr const char* BUNDLE = "#bundle";
    // Get static field: static private System.String BUNDLE
    static ::StringW _get_BUNDLE();
    // Set static field: static private System.String BUNDLE
    static void _set_BUNDLE(::StringW value);
    // public System.Void .ctor(System.Int64 timestamp)
    // Offset: 0xC5B6CC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OSCBundle* New_ctor(int64_t timestamp) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityOSC::OSCBundle::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OSCBundle*, creationType>(timestamp)));
    }
    // static public UnityOSC.OSCBundle Unpack(System.Byte[] data, ref System.Int32 start, System.Int32 end)
    // Offset: 0xC5B788
    static ::UnityOSC::OSCBundle* Unpack(::ArrayW<uint8_t> data, ByRef<int> start, int end);
    // public System.Void .ctor()
    // Offset: 0xC5B5FC
    // Implemented from: UnityOSC.OSCPacket
    // Base method: System.Void OSCPacket::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OSCBundle* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityOSC::OSCBundle::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OSCBundle*, creationType>()));
    }
    // public override System.Boolean IsBundle()
    // Offset: 0xC5B72C
    // Implemented from: UnityOSC.OSCPacket
    // Base method: System.Boolean OSCPacket::IsBundle()
    bool IsBundle();
    // public override System.Void Pack()
    // Offset: 0xC5B734
    // Implemented from: UnityOSC.OSCPacket
    // Base method: System.Void OSCPacket::Pack()
    void Pack();
    // public override System.Void Append(T msgvalue)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityOSC.OSCPacket
    // Base method: System.Void OSCPacket::Append(T msgvalue)
    template<class T>
    void Append(T msgvalue) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityOSC::OSCBundle::Append");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityOSC::OSCPacket*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, msgvalue);
    }
  }; // UnityOSC.OSCBundle
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityOSC::OSCBundle::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityOSC::OSCBundle::Unpack
// Il2CppName: Unpack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityOSC::OSCBundle* (*)(::ArrayW<uint8_t>, ByRef<int>, int)>(&UnityOSC::OSCBundle::Unpack)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* end = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityOSC::OSCBundle*), "Unpack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, start, end});
  }
};
// Writing MetadataGetter for method: UnityOSC::OSCBundle::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityOSC::OSCBundle::IsBundle
// Il2CppName: IsBundle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityOSC::OSCBundle::*)()>(&UnityOSC::OSCBundle::IsBundle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityOSC::OSCBundle*), "IsBundle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityOSC::OSCBundle::Pack
// Il2CppName: Pack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityOSC::OSCBundle::*)()>(&UnityOSC::OSCBundle::Pack)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityOSC::OSCBundle*), "Pack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityOSC::OSCBundle::Append
// Il2CppName: Append
// Cannot write MetadataGetter for generic methods!
