// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Newtonsoft.Json
namespace Newtonsoft::Json {
  // Forward declaring type: JsonNameTable
  class JsonNameTable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::JsonNameTable);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::JsonNameTable*, "Newtonsoft.Json", "JsonNameTable");
// Type namespace: Newtonsoft.Json
namespace Newtonsoft::Json {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Newtonsoft.Json.JsonNameTable
  // [TokenAttribute] Offset: FFFFFFFF
  class JsonNameTable : public ::Il2CppObject {
    public:
    // public System.String Get(System.Char[] key, System.Int32 start, System.Int32 length)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW Get(::ArrayW<::Il2CppChar> key, int start, int length);
    // protected System.Void .ctor()
    // Offset: 0xEF638C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonNameTable* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonNameTable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonNameTable*, creationType>()));
    }
  }; // Newtonsoft.Json.JsonNameTable
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::JsonNameTable::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Newtonsoft::Json::JsonNameTable::*)(::ArrayW<::Il2CppChar>, int, int)>(&Newtonsoft::Json::JsonNameTable::Get)> {
  static const MethodInfo* get() {
    static auto* key = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::JsonNameTable*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, start, length});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::JsonNameTable::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
