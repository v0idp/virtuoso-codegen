// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: Newtonsoft.Json.NullValueHandling
#include "Newtonsoft/Json/NullValueHandling.hpp"
// Including type: Newtonsoft.Json.DefaultValueHandling
#include "Newtonsoft/Json/DefaultValueHandling.hpp"
// Including type: Newtonsoft.Json.ReferenceLoopHandling
#include "Newtonsoft/Json/ReferenceLoopHandling.hpp"
// Including type: Newtonsoft.Json.ObjectCreationHandling
#include "Newtonsoft/Json/ObjectCreationHandling.hpp"
// Including type: Newtonsoft.Json.TypeNameHandling
#include "Newtonsoft/Json/TypeNameHandling.hpp"
// Including type: Newtonsoft.Json.Required
#include "Newtonsoft/Json/Required.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: Newtonsoft.Json
namespace Newtonsoft::Json {
  // Forward declaring type: JsonPropertyAttribute
  class JsonPropertyAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::JsonPropertyAttribute);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::JsonPropertyAttribute*, "Newtonsoft.Json", "JsonPropertyAttribute");
// Type namespace: Newtonsoft.Json
namespace Newtonsoft::Json {
  // WARNING Size may be invalid!
  // Autogenerated type: Newtonsoft.Json.JsonPropertyAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: 67242C
  // [NullableAttribute] Offset: 67242C
  // [NullableContextAttribute] Offset: 67242C
  class JsonPropertyAttribute : public ::System::Attribute {
    public:
    public:
    // System.Nullable`1<Newtonsoft.Json.NullValueHandling> _nullValueHandling
    // Size: 0xFFFFFFFF
    // Offset: 0x10
    ::System::Nullable_1<::Newtonsoft::Json::NullValueHandling> nullValueHandling;
    // System.Nullable`1<Newtonsoft.Json.DefaultValueHandling> _defaultValueHandling
    // Size: 0xFFFFFFFF
    // Offset: 0x18
    ::System::Nullable_1<::Newtonsoft::Json::DefaultValueHandling> defaultValueHandling;
    // System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> _referenceLoopHandling
    // Size: 0xFFFFFFFF
    // Offset: 0x20
    ::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling> referenceLoopHandling;
    // System.Nullable`1<Newtonsoft.Json.ObjectCreationHandling> _objectCreationHandling
    // Size: 0xFFFFFFFF
    // Offset: 0x28
    ::System::Nullable_1<::Newtonsoft::Json::ObjectCreationHandling> objectCreationHandling;
    // System.Nullable`1<Newtonsoft.Json.TypeNameHandling> _typeNameHandling
    // Size: 0xFFFFFFFF
    // Offset: 0x30
    ::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling> typeNameHandling;
    // System.Nullable`1<System.Boolean> _isReference
    // Size: 0xFFFFFFFF
    // Offset: 0x38
    ::System::Nullable_1<bool> isReference;
    // System.Nullable`1<System.Int32> _order
    // Size: 0xFFFFFFFF
    // Offset: 0x3C
    ::System::Nullable_1<int> order;
    // System.Nullable`1<Newtonsoft.Json.Required> _required
    // Size: 0xFFFFFFFF
    // Offset: 0x44
    ::System::Nullable_1<::Newtonsoft::Json::Required> required;
    // System.Nullable`1<System.Boolean> _itemIsReference
    // Size: 0xFFFFFFFF
    // Offset: 0x4C
    ::System::Nullable_1<bool> itemIsReference;
    // System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> _itemReferenceLoopHandling
    // Size: 0xFFFFFFFF
    // Offset: 0x50
    ::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling> itemReferenceLoopHandling;
    // System.Nullable`1<Newtonsoft.Json.TypeNameHandling> _itemTypeNameHandling
    // Size: 0xFFFFFFFF
    // Offset: 0x58
    ::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling> itemTypeNameHandling;
    // private System.Type <ItemConverterType>k__BackingField
    // Size: 0x8
    // Offset: 0x60
    ::System::Type* ItemConverterType;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    // [NullableAttribute] Offset: 0x674B5C
    // private System.Object[] <ItemConverterParameters>k__BackingField
    // Size: 0x8
    // Offset: 0x68
    ::ArrayW<::Il2CppObject*> ItemConverterParameters;
    // Field size check
    static_assert(sizeof(::ArrayW<::Il2CppObject*>) == 0x8);
    // private System.Type <NamingStrategyType>k__BackingField
    // Size: 0x8
    // Offset: 0x70
    ::System::Type* NamingStrategyType;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    // [NullableAttribute] Offset: 0x674BE4
    // private System.Object[] <NamingStrategyParameters>k__BackingField
    // Size: 0x8
    // Offset: 0x78
    ::ArrayW<::Il2CppObject*> NamingStrategyParameters;
    // Field size check
    static_assert(sizeof(::ArrayW<::Il2CppObject*>) == 0x8);
    // private System.String <PropertyName>k__BackingField
    // Size: 0x8
    // Offset: 0x80
    ::StringW PropertyName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: System.Nullable`1<Newtonsoft.Json.NullValueHandling> _nullValueHandling
    [[deprecated]] ::System::Nullable_1<::Newtonsoft::Json::NullValueHandling>& dyn__nullValueHandling();
    // Get instance field reference: System.Nullable`1<Newtonsoft.Json.DefaultValueHandling> _defaultValueHandling
    [[deprecated]] ::System::Nullable_1<::Newtonsoft::Json::DefaultValueHandling>& dyn__defaultValueHandling();
    // Get instance field reference: System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> _referenceLoopHandling
    [[deprecated]] ::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>& dyn__referenceLoopHandling();
    // Get instance field reference: System.Nullable`1<Newtonsoft.Json.ObjectCreationHandling> _objectCreationHandling
    [[deprecated]] ::System::Nullable_1<::Newtonsoft::Json::ObjectCreationHandling>& dyn__objectCreationHandling();
    // Get instance field reference: System.Nullable`1<Newtonsoft.Json.TypeNameHandling> _typeNameHandling
    [[deprecated]] ::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>& dyn__typeNameHandling();
    // Get instance field reference: System.Nullable`1<System.Boolean> _isReference
    [[deprecated]] ::System::Nullable_1<bool>& dyn__isReference();
    // Get instance field reference: System.Nullable`1<System.Int32> _order
    [[deprecated]] ::System::Nullable_1<int>& dyn__order();
    // Get instance field reference: System.Nullable`1<Newtonsoft.Json.Required> _required
    [[deprecated]] ::System::Nullable_1<::Newtonsoft::Json::Required>& dyn__required();
    // Get instance field reference: System.Nullable`1<System.Boolean> _itemIsReference
    [[deprecated]] ::System::Nullable_1<bool>& dyn__itemIsReference();
    // Get instance field reference: System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> _itemReferenceLoopHandling
    [[deprecated]] ::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>& dyn__itemReferenceLoopHandling();
    // Get instance field reference: System.Nullable`1<Newtonsoft.Json.TypeNameHandling> _itemTypeNameHandling
    [[deprecated]] ::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>& dyn__itemTypeNameHandling();
    // Get instance field reference: private System.Type <ItemConverterType>k__BackingField
    [[deprecated]] ::System::Type*& dyn_$ItemConverterType$k__BackingField();
    // Get instance field reference: private System.Object[] <ItemConverterParameters>k__BackingField
    [[deprecated]] ::ArrayW<::Il2CppObject*>& dyn_$ItemConverterParameters$k__BackingField();
    // Get instance field reference: private System.Type <NamingStrategyType>k__BackingField
    [[deprecated]] ::System::Type*& dyn_$NamingStrategyType$k__BackingField();
    // Get instance field reference: private System.Object[] <NamingStrategyParameters>k__BackingField
    [[deprecated]] ::ArrayW<::Il2CppObject*>& dyn_$NamingStrategyParameters$k__BackingField();
    // Get instance field reference: private System.String <PropertyName>k__BackingField
    [[deprecated]] ::StringW& dyn_$PropertyName$k__BackingField();
    // public System.Type get_ItemConverterType()
    // Offset: 0xF49678
    ::System::Type* get_ItemConverterType();
    // public System.Object[] get_ItemConverterParameters()
    // Offset: 0xF49680
    ::ArrayW<::Il2CppObject*> get_ItemConverterParameters();
    // public System.Type get_NamingStrategyType()
    // Offset: 0xF49688
    ::System::Type* get_NamingStrategyType();
    // public System.Object[] get_NamingStrategyParameters()
    // Offset: 0xF49690
    ::ArrayW<::Il2CppObject*> get_NamingStrategyParameters();
    // public System.String get_PropertyName()
    // Offset: 0xF49698
    ::StringW get_PropertyName();
  }; // Newtonsoft.Json.JsonPropertyAttribute
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::JsonPropertyAttribute::get_ItemConverterType
// Il2CppName: get_ItemConverterType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (Newtonsoft::Json::JsonPropertyAttribute::*)()>(&Newtonsoft::Json::JsonPropertyAttribute::get_ItemConverterType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::JsonPropertyAttribute*), "get_ItemConverterType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::JsonPropertyAttribute::get_ItemConverterParameters
// Il2CppName: get_ItemConverterParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppObject*> (Newtonsoft::Json::JsonPropertyAttribute::*)()>(&Newtonsoft::Json::JsonPropertyAttribute::get_ItemConverterParameters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::JsonPropertyAttribute*), "get_ItemConverterParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::JsonPropertyAttribute::get_NamingStrategyType
// Il2CppName: get_NamingStrategyType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (Newtonsoft::Json::JsonPropertyAttribute::*)()>(&Newtonsoft::Json::JsonPropertyAttribute::get_NamingStrategyType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::JsonPropertyAttribute*), "get_NamingStrategyType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::JsonPropertyAttribute::get_NamingStrategyParameters
// Il2CppName: get_NamingStrategyParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppObject*> (Newtonsoft::Json::JsonPropertyAttribute::*)()>(&Newtonsoft::Json::JsonPropertyAttribute::get_NamingStrategyParameters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::JsonPropertyAttribute*), "get_NamingStrategyParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::JsonPropertyAttribute::get_PropertyName
// Il2CppName: get_PropertyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Newtonsoft::Json::JsonPropertyAttribute::*)()>(&Newtonsoft::Json::JsonPropertyAttribute::get_PropertyName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::JsonPropertyAttribute*), "get_PropertyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
