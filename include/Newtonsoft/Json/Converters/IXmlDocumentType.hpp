// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlNode
#include "Newtonsoft/Json/Converters/IXmlNode.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Newtonsoft.Json.Converters
namespace Newtonsoft::Json::Converters {
  // Forward declaring type: IXmlDocumentType
  class IXmlDocumentType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Converters::IXmlDocumentType);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Converters::IXmlDocumentType*, "Newtonsoft.Json.Converters", "IXmlDocumentType");
// Type namespace: Newtonsoft.Json.Converters
namespace Newtonsoft::Json::Converters {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Newtonsoft.Json.Converters.IXmlDocumentType
  // [TokenAttribute] Offset: FFFFFFFF
  // [NullableContextAttribute] Offset: 67459C
  class IXmlDocumentType/*, public ::Newtonsoft::Json::Converters::IXmlNode*/ {
    public:
    // Creating interface conversion operator: operator ::Newtonsoft::Json::Converters::IXmlNode
    operator ::Newtonsoft::Json::Converters::IXmlNode() noexcept {
      return *reinterpret_cast<::Newtonsoft::Json::Converters::IXmlNode*>(this);
    }
    // public System.String get_Name()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_Name();
    // public System.String get_System()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_System();
    // public System.String get_Public()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_Public();
    // public System.String get_InternalSubset()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_InternalSubset();
  }; // Newtonsoft.Json.Converters.IXmlDocumentType
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Converters::IXmlDocumentType::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Newtonsoft::Json::Converters::IXmlDocumentType::*)()>(&Newtonsoft::Json::Converters::IXmlDocumentType::get_Name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Converters::IXmlDocumentType*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Converters::IXmlDocumentType::get_System
// Il2CppName: get_System
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Newtonsoft::Json::Converters::IXmlDocumentType::*)()>(&Newtonsoft::Json::Converters::IXmlDocumentType::get_System)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Converters::IXmlDocumentType*), "get_System", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Converters::IXmlDocumentType::get_Public
// Il2CppName: get_Public
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Newtonsoft::Json::Converters::IXmlDocumentType::*)()>(&Newtonsoft::Json::Converters::IXmlDocumentType::get_Public)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Converters::IXmlDocumentType*), "get_Public", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Converters::IXmlDocumentType::get_InternalSubset
// Il2CppName: get_InternalSubset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Newtonsoft::Json::Converters::IXmlDocumentType::*)()>(&Newtonsoft::Json::Converters::IXmlDocumentType::get_InternalSubset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Converters::IXmlDocumentType*), "get_InternalSubset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
