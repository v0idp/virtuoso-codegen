// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlNode
#include "Newtonsoft/Json/Converters/IXmlNode.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Newtonsoft.Json.Converters
namespace Newtonsoft::Json::Converters {
  // Forward declaring type: IXmlDeclaration
  class IXmlDeclaration;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Converters::IXmlDeclaration);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Converters::IXmlDeclaration*, "Newtonsoft.Json.Converters", "IXmlDeclaration");
// Type namespace: Newtonsoft.Json.Converters
namespace Newtonsoft::Json::Converters {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Newtonsoft.Json.Converters.IXmlDeclaration
  // [TokenAttribute] Offset: FFFFFFFF
  // [NullableContextAttribute] Offset: 674588
  class IXmlDeclaration/*, public ::Newtonsoft::Json::Converters::IXmlNode*/ {
    public:
    // Creating interface conversion operator: operator ::Newtonsoft::Json::Converters::IXmlNode
    operator ::Newtonsoft::Json::Converters::IXmlNode() noexcept {
      return *reinterpret_cast<::Newtonsoft::Json::Converters::IXmlNode*>(this);
    }
    // public System.String get_Version()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_Version();
    // public System.String get_Encoding()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_Encoding();
    // public System.String get_Standalone()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_Standalone();
  }; // Newtonsoft.Json.Converters.IXmlDeclaration
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Converters::IXmlDeclaration::get_Version
// Il2CppName: get_Version
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Newtonsoft::Json::Converters::IXmlDeclaration::*)()>(&Newtonsoft::Json::Converters::IXmlDeclaration::get_Version)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Converters::IXmlDeclaration*), "get_Version", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Converters::IXmlDeclaration::get_Encoding
// Il2CppName: get_Encoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Newtonsoft::Json::Converters::IXmlDeclaration::*)()>(&Newtonsoft::Json::Converters::IXmlDeclaration::get_Encoding)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Converters::IXmlDeclaration*), "get_Encoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Converters::IXmlDeclaration::get_Standalone
// Il2CppName: get_Standalone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Newtonsoft::Json::Converters::IXmlDeclaration::*)()>(&Newtonsoft::Json::Converters::IXmlDeclaration::get_Standalone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Converters::IXmlDeclaration*), "get_Standalone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
