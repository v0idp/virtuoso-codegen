// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Newtonsoft.Json.Utilities.FSharpUtils
#include "Newtonsoft/Json/Utilities/FSharpUtils.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Newtonsoft::Json::Serialization
namespace Newtonsoft::Json::Serialization {
  // Forward declaring type: ObjectConstructor`1<T>
  template<typename T>
  class ObjectConstructor_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Newtonsoft::Json::Utilities::FSharpUtils::$$c__DisplayClass55_0_2, "Newtonsoft.Json.Utilities", "FSharpUtils/<>c__DisplayClass55_0`2");
// Type namespace: Newtonsoft.Json.Utilities
namespace Newtonsoft::Json::Utilities {
  // WARNING Size may be invalid!
  // Autogenerated type: Newtonsoft.Json.Utilities.FSharpUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass55_0`2
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  template<typename TKey, typename TValue>
  class FSharpUtils::$$c__DisplayClass55_0_2 : public ::Il2CppObject {
    public:
    public:
    // [NullableAttribute] Offset: 0x6757E8
    // public Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> ctorDelegate
    // Size: 0x8
    // Offset: 0x0
    ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* ctorDelegate;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*) == 0x8);
    public:
    // Creating conversion operator: operator ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*
    constexpr operator ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*() const noexcept {
      return ctorDelegate;
    }
    // Autogenerated instance field getter
    // Get instance field: public Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> ctorDelegate
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*& dyn_ctorDelegate() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::$$c__DisplayClass55_0_2::dyn_ctorDelegate");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ctorDelegate"))->offset;
      return *reinterpret_cast<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FSharpUtils::$$c__DisplayClass55_0_2<TKey, TValue>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::$$c__DisplayClass55_0_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FSharpUtils::$$c__DisplayClass55_0_2<TKey, TValue>*, creationType>()));
    }
    // System.Object <BuildMapCreator>b__0(System.Object[] args)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Il2CppObject* $BuildMapCreator$b__0(::ArrayW<::Il2CppObject*> args) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpUtils::$$c__DisplayClass55_0_2::<BuildMapCreator>b__0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BuildMapCreator>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
      return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, args);
    }
  }; // Newtonsoft.Json.Utilities.FSharpUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass55_0`2
  // Could not write size check! Type: Newtonsoft.Json.Utilities.FSharpUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass55_0`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
