// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Newtonsoft::Json::Utilities
namespace Newtonsoft::Json::Utilities {
  // Forward declaring type: MethodCall`2<T, TResult>
  template<typename T, typename TResult>
  class MethodCall_2;
}
// Completed forward declares
// Type namespace: Newtonsoft.Json.Utilities
namespace Newtonsoft::Json::Utilities {
  // Forward declaring type: FSharpFunction
  class FSharpFunction;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Utilities::FSharpFunction);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Utilities::FSharpFunction*, "Newtonsoft.Json.Utilities", "FSharpFunction");
// Type namespace: Newtonsoft.Json.Utilities
namespace Newtonsoft::Json::Utilities {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Newtonsoft.Json.Utilities.FSharpFunction
  // [TokenAttribute] Offset: FFFFFFFF
  // [NullableContextAttribute] Offset: 672C78
  // [NullableAttribute] Offset: 672C78
  class FSharpFunction : public ::Il2CppObject {
    public:
    public:
    // private readonly System.Object _instance
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppObject* instance;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // [NullableAttribute] Offset: 0x675344
    // private readonly Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> _invoker
    // Size: 0x8
    // Offset: 0x18
    ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>* invoker;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*) == 0x8);
    public:
    // Get instance field reference: private readonly System.Object _instance
    [[deprecated]] ::Il2CppObject*& dyn__instance();
    // Get instance field reference: private readonly Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> _invoker
    [[deprecated]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& dyn__invoker();
    // public System.Void .ctor(System.Object instance, Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> invoker)
    // Offset: 0xDD0B10
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FSharpFunction* New_ctor(::Il2CppObject* instance, ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>* invoker) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::FSharpFunction::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FSharpFunction*, creationType>(instance, invoker)));
    }
    // public System.Object Invoke(params System.Object[] args)
    // Offset: 0xDCCC98
    ::Il2CppObject* Invoke(::ArrayW<::Il2CppObject*> args);
  }; // Newtonsoft.Json.Utilities.FSharpFunction
  #pragma pack(pop)
  static check_size<sizeof(FSharpFunction), 24 + sizeof(::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*)> __Newtonsoft_Json_Utilities_FSharpFunctionSizeCheck;
  static_assert(sizeof(FSharpFunction) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Utilities::FSharpFunction::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Newtonsoft::Json::Utilities::FSharpFunction::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Newtonsoft::Json::Utilities::FSharpFunction::*)(::ArrayW<::Il2CppObject*>)>(&Newtonsoft::Json::Utilities::FSharpFunction::Invoke)> {
  static const MethodInfo* get() {
    static auto* args = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Utilities::FSharpFunction*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
