// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils
#include "Newtonsoft/Json/Utilities/ImmutableCollectionsUtils.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MethodInfo
  class MethodInfo;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c*, "Newtonsoft.Json.Utilities", "ImmutableCollectionsUtils/<>c");
// Type namespace: Newtonsoft.Json.Utilities
namespace Newtonsoft::Json::Utilities {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class ImmutableCollectionsUtils::$$c : public ::Il2CppObject {
    public:
    // [NullableAttribute] Offset: 0x6758BC
    // Get static field: static public readonly Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.<>c <>9
    static ::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c* _get_$$9();
    // Set static field: static public readonly Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.<>c <>9
    static void _set_$$9(::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c* value);
    // [NullableAttribute] Offset: 0x6758D0
    // Get static field: static public System.Func`2<System.Reflection.MethodInfo,System.Boolean> <>9__24_1
    static ::System::Func_2<::System::Reflection::MethodInfo*, bool>* _get_$$9__24_1();
    // Set static field: static public System.Func`2<System.Reflection.MethodInfo,System.Boolean> <>9__24_1
    static void _set_$$9__24_1(::System::Func_2<::System::Reflection::MethodInfo*, bool>* value);
    // [NullableAttribute] Offset: 0x6758E4
    // Get static field: static public System.Func`2<System.Reflection.MethodInfo,System.Boolean> <>9__25_1
    static ::System::Func_2<::System::Reflection::MethodInfo*, bool>* _get_$$9__25_1();
    // Set static field: static public System.Func`2<System.Reflection.MethodInfo,System.Boolean> <>9__25_1
    static void _set_$$9__25_1(::System::Func_2<::System::Reflection::MethodInfo*, bool>* value);
    // static private System.Void .cctor()
    // Offset: 0x159E920
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x159E980
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ImmutableCollectionsUtils::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ImmutableCollectionsUtils::$$c*, creationType>()));
    }
    // System.Boolean <TryBuildImmutableForArrayContract>b__24_1(System.Reflection.MethodInfo m)
    // Offset: 0x159E988
    bool $TryBuildImmutableForArrayContract$b__24_1(::System::Reflection::MethodInfo* m);
    // System.Boolean <TryBuildImmutableForDictionaryContract>b__25_1(System.Reflection.MethodInfo m)
    // Offset: 0x159EA20
    bool $TryBuildImmutableForDictionaryContract$b__25_1(::System::Reflection::MethodInfo* m);
  }; // Newtonsoft.Json.Utilities.ImmutableCollectionsUtils/Newtonsoft.Json.Utilities.<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::$TryBuildImmutableForArrayContract$b__24_1
// Il2CppName: <TryBuildImmutableForArrayContract>b__24_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::*)(::System::Reflection::MethodInfo*)>(&Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::$TryBuildImmutableForArrayContract$b__24_1)> {
  static const MethodInfo* get() {
    static auto* m = &::il2cpp_utils::GetClassFromName("System.Reflection", "MethodInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c*), "<TryBuildImmutableForArrayContract>b__24_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{m});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::$TryBuildImmutableForDictionaryContract$b__25_1
// Il2CppName: <TryBuildImmutableForDictionaryContract>b__25_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::*)(::System::Reflection::MethodInfo*)>(&Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c::$TryBuildImmutableForDictionaryContract$b__25_1)> {
  static const MethodInfo* get() {
    static auto* m = &::il2cpp_utils::GetClassFromName("System.Reflection", "MethodInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Utilities::ImmutableCollectionsUtils::$$c*), "<TryBuildImmutableForDictionaryContract>b__25_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{m});
  }
};
