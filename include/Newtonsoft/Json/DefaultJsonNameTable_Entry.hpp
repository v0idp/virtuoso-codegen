// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Newtonsoft.Json.DefaultJsonNameTable
#include "Newtonsoft/Json/DefaultJsonNameTable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::DefaultJsonNameTable::Entry);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::DefaultJsonNameTable::Entry*, "Newtonsoft.Json", "DefaultJsonNameTable/Entry");
// Type namespace: Newtonsoft.Json
namespace Newtonsoft::Json {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Newtonsoft.Json.DefaultJsonNameTable/Newtonsoft.Json.Entry
  // [TokenAttribute] Offset: FFFFFFFF
  // [NullableAttribute] Offset: 672094
  class DefaultJsonNameTable::Entry : public ::Il2CppObject {
    public:
    public:
    // readonly System.String Value
    // Size: 0x8
    // Offset: 0x10
    ::StringW Value;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // readonly System.Int32 HashCode
    // Size: 0x4
    // Offset: 0x18
    int HashCode;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: HashCode and: Next
    char __padding1[0x4] = {};
    // Newtonsoft.Json.DefaultJsonNameTable/Newtonsoft.Json.Entry Next
    // Size: 0x8
    // Offset: 0x20
    ::Newtonsoft::Json::DefaultJsonNameTable::Entry* Next;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::DefaultJsonNameTable::Entry*) == 0x8);
    public:
    // Get instance field reference: readonly System.String Value
    [[deprecated]] ::StringW& dyn_Value();
    // Get instance field reference: readonly System.Int32 HashCode
    [[deprecated]] int& dyn_HashCode();
    // Get instance field reference: Newtonsoft.Json.DefaultJsonNameTable/Newtonsoft.Json.Entry Next
    [[deprecated]] ::Newtonsoft::Json::DefaultJsonNameTable::Entry*& dyn_Next();
    // System.Void .ctor(System.String value, System.Int32 hashCode, Newtonsoft.Json.DefaultJsonNameTable/Newtonsoft.Json.Entry next)
    // Offset: 0x159D8E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DefaultJsonNameTable::Entry* New_ctor(::StringW value, int hashCode, ::Newtonsoft::Json::DefaultJsonNameTable::Entry* next) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultJsonNameTable::Entry::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DefaultJsonNameTable::Entry*, creationType>(value, hashCode, next)));
    }
  }; // Newtonsoft.Json.DefaultJsonNameTable/Newtonsoft.Json.Entry
  #pragma pack(pop)
  static check_size<sizeof(DefaultJsonNameTable::Entry), 32 + sizeof(::Newtonsoft::Json::DefaultJsonNameTable::Entry*)> __Newtonsoft_Json_DefaultJsonNameTable_EntrySizeCheck;
  static_assert(sizeof(DefaultJsonNameTable::Entry) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::DefaultJsonNameTable::Entry::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
