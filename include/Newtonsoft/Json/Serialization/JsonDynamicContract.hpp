// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonContainerContract
#include "Newtonsoft/Json/Serialization/JsonContainerContract.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Newtonsoft::Json::Serialization
namespace Newtonsoft::Json::Serialization {
  // Forward declaring type: JsonPropertyCollection
  class JsonPropertyCollection;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Func`3<T1, T2, TResult>
  template<typename T1, typename T2, typename TResult>
  class Func_3;
  // Forward declaring type: Func`4<T1, T2, T3, TResult>
  template<typename T1, typename T2, typename T3, typename TResult>
  class Func_4;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: Newtonsoft::Json::Utilities
namespace Newtonsoft::Json::Utilities {
  // Forward declaring type: ThreadSafeStore`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class ThreadSafeStore_2;
}
// Forward declaring namespace: System::Runtime::CompilerServices
namespace System::Runtime::CompilerServices {
  // Forward declaring type: CallSite`1<T>
  template<typename T>
  class CallSite_1;
  // Forward declaring type: CallSite
  class CallSite;
}
// Forward declaring namespace: System::Dynamic
namespace System::Dynamic {
  // Forward declaring type: IDynamicMetaObjectProvider
  class IDynamicMetaObjectProvider;
}
// Completed forward declares
// Type namespace: Newtonsoft.Json.Serialization
namespace Newtonsoft::Json::Serialization {
  // Forward declaring type: JsonDynamicContract
  class JsonDynamicContract;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Serialization::JsonDynamicContract);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Serialization::JsonDynamicContract*, "Newtonsoft.Json.Serialization", "JsonDynamicContract");
// Type namespace: Newtonsoft.Json.Serialization
namespace Newtonsoft::Json::Serialization {
  // WARNING Size may be invalid!
  // Autogenerated type: Newtonsoft.Json.Serialization.JsonDynamicContract
  // [TokenAttribute] Offset: FFFFFFFF
  // [NullableContextAttribute] Offset: 67367C
  // [NullableAttribute] Offset: 67367C
  class JsonDynamicContract : public ::Newtonsoft::Json::Serialization::JsonContainerContract {
    public:
    public:
    // private readonly Newtonsoft.Json.Serialization.JsonPropertyCollection <Properties>k__BackingField
    // Size: 0x8
    // Offset: 0xC0
    ::Newtonsoft::Json::Serialization::JsonPropertyCollection* Properties;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Serialization::JsonPropertyCollection*) == 0x8);
    // [NullableAttribute] Offset: 0x676DEC
    // private System.Func`2<System.String,System.String> <PropertyNameResolver>k__BackingField
    // Size: 0x8
    // Offset: 0xC8
    ::System::Func_2<::StringW, ::StringW>* PropertyNameResolver;
    // Field size check
    static_assert(sizeof(::System::Func_2<::StringW, ::StringW>*) == 0x8);
    // private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.String,System.Runtime.CompilerServices.CallSite`1<System.Func`3<System.Runtime.CompilerServices.CallSite,System.Object,System.Object>>> _callSiteGetters
    // Size: 0x8
    // Offset: 0xD0
    ::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::StringW, ::System::Runtime::CompilerServices::CallSite_1<::System::Func_3<::System::Runtime::CompilerServices::CallSite*, ::Il2CppObject*, ::Il2CppObject*>*>*>* callSiteGetters;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::StringW, ::System::Runtime::CompilerServices::CallSite_1<::System::Func_3<::System::Runtime::CompilerServices::CallSite*, ::Il2CppObject*, ::Il2CppObject*>*>*>*) == 0x8);
    // [NullableAttribute] Offset: 0x676E6C
    // private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.String,System.Runtime.CompilerServices.CallSite`1<System.Func`4<System.Runtime.CompilerServices.CallSite,System.Object,System.Object,System.Object>>> _callSiteSetters
    // Size: 0x8
    // Offset: 0xD8
    ::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::StringW, ::System::Runtime::CompilerServices::CallSite_1<::System::Func_4<::System::Runtime::CompilerServices::CallSite*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*>*>*>* callSiteSetters;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::StringW, ::System::Runtime::CompilerServices::CallSite_1<::System::Func_4<::System::Runtime::CompilerServices::CallSite*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*>*>*>*) == 0x8);
    public:
    // Get instance field reference: private readonly Newtonsoft.Json.Serialization.JsonPropertyCollection <Properties>k__BackingField
    [[deprecated]] ::Newtonsoft::Json::Serialization::JsonPropertyCollection*& dyn_$Properties$k__BackingField();
    // Get instance field reference: private System.Func`2<System.String,System.String> <PropertyNameResolver>k__BackingField
    [[deprecated]] ::System::Func_2<::StringW, ::StringW>*& dyn_$PropertyNameResolver$k__BackingField();
    // Get instance field reference: private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.String,System.Runtime.CompilerServices.CallSite`1<System.Func`3<System.Runtime.CompilerServices.CallSite,System.Object,System.Object>>> _callSiteGetters
    [[deprecated]] ::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::StringW, ::System::Runtime::CompilerServices::CallSite_1<::System::Func_3<::System::Runtime::CompilerServices::CallSite*, ::Il2CppObject*, ::Il2CppObject*>*>*>*& dyn__callSiteGetters();
    // Get instance field reference: private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.String,System.Runtime.CompilerServices.CallSite`1<System.Func`4<System.Runtime.CompilerServices.CallSite,System.Object,System.Object,System.Object>>> _callSiteSetters
    [[deprecated]] ::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::StringW, ::System::Runtime::CompilerServices::CallSite_1<::System::Func_4<::System::Runtime::CompilerServices::CallSite*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*>*>*>*& dyn__callSiteSetters();
    // public Newtonsoft.Json.Serialization.JsonPropertyCollection get_Properties()
    // Offset: 0xEF579C
    ::Newtonsoft::Json::Serialization::JsonPropertyCollection* get_Properties();
    // public System.Func`2<System.String,System.String> get_PropertyNameResolver()
    // Offset: 0xEF57A4
    ::System::Func_2<::StringW, ::StringW>* get_PropertyNameResolver();
    // public System.Void set_PropertyNameResolver(System.Func`2<System.String,System.String> value)
    // Offset: 0xEF57AC
    void set_PropertyNameResolver(::System::Func_2<::StringW, ::StringW>* value);
    // static private System.Runtime.CompilerServices.CallSite`1<System.Func`3<System.Runtime.CompilerServices.CallSite,System.Object,System.Object>> CreateCallSiteGetter(System.String name)
    // Offset: 0xEF57B4
    static ::System::Runtime::CompilerServices::CallSite_1<::System::Func_3<::System::Runtime::CompilerServices::CallSite*, ::Il2CppObject*, ::Il2CppObject*>*>* CreateCallSiteGetter(::StringW name);
    // static private System.Runtime.CompilerServices.CallSite`1<System.Func`4<System.Runtime.CompilerServices.CallSite,System.Object,System.Object,System.Object>> CreateCallSiteSetter(System.String name)
    // Offset: 0xEF58E4
    static ::System::Runtime::CompilerServices::CallSite_1<::System::Func_4<::System::Runtime::CompilerServices::CallSite*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*>*>* CreateCallSiteSetter(::StringW name);
    // System.Boolean TryGetMember(System.Dynamic.IDynamicMetaObjectProvider dynamicProvider, System.String name, out System.Object value)
    // Offset: 0xEF5BD0
    bool TryGetMember(::System::Dynamic::IDynamicMetaObjectProvider* dynamicProvider, ::StringW name, ByRef<::Il2CppObject*> value);
    // System.Boolean TrySetMember(System.Dynamic.IDynamicMetaObjectProvider dynamicProvider, System.String name, System.Object value)
    // Offset: 0xEF5CEC
    bool TrySetMember(::System::Dynamic::IDynamicMetaObjectProvider* dynamicProvider, ::StringW name, ::Il2CppObject* value);
    // public System.Void .ctor(System.Type underlyingType)
    // Offset: 0xEF5A14
    // Implemented from: Newtonsoft.Json.Serialization.JsonContainerContract
    // Base method: System.Void JsonContainerContract::.ctor(System.Type underlyingType)
    // Base method: System.Void JsonContract::.ctor(System.Type underlyingType)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonDynamicContract* New_ctor(::System::Type* underlyingType) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonDynamicContract::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonDynamicContract*, creationType>(underlyingType)));
    }
  }; // Newtonsoft.Json.Serialization.JsonDynamicContract
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonDynamicContract::get_Properties
// Il2CppName: get_Properties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Serialization::JsonPropertyCollection* (Newtonsoft::Json::Serialization::JsonDynamicContract::*)()>(&Newtonsoft::Json::Serialization::JsonDynamicContract::get_Properties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonDynamicContract*), "get_Properties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonDynamicContract::get_PropertyNameResolver
// Il2CppName: get_PropertyNameResolver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_2<::StringW, ::StringW>* (Newtonsoft::Json::Serialization::JsonDynamicContract::*)()>(&Newtonsoft::Json::Serialization::JsonDynamicContract::get_PropertyNameResolver)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonDynamicContract*), "get_PropertyNameResolver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonDynamicContract::set_PropertyNameResolver
// Il2CppName: set_PropertyNameResolver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonDynamicContract::*)(::System::Func_2<::StringW, ::StringW>*)>(&Newtonsoft::Json::Serialization::JsonDynamicContract::set_PropertyNameResolver)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonDynamicContract*), "set_PropertyNameResolver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonDynamicContract::CreateCallSiteGetter
// Il2CppName: CreateCallSiteGetter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::CompilerServices::CallSite_1<::System::Func_3<::System::Runtime::CompilerServices::CallSite*, ::Il2CppObject*, ::Il2CppObject*>*>* (*)(::StringW)>(&Newtonsoft::Json::Serialization::JsonDynamicContract::CreateCallSiteGetter)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonDynamicContract*), "CreateCallSiteGetter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonDynamicContract::CreateCallSiteSetter
// Il2CppName: CreateCallSiteSetter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::CompilerServices::CallSite_1<::System::Func_4<::System::Runtime::CompilerServices::CallSite*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*>*>* (*)(::StringW)>(&Newtonsoft::Json::Serialization::JsonDynamicContract::CreateCallSiteSetter)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonDynamicContract*), "CreateCallSiteSetter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonDynamicContract::TryGetMember
// Il2CppName: TryGetMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Serialization::JsonDynamicContract::*)(::System::Dynamic::IDynamicMetaObjectProvider*, ::StringW, ByRef<::Il2CppObject*>)>(&Newtonsoft::Json::Serialization::JsonDynamicContract::TryGetMember)> {
  static const MethodInfo* get() {
    static auto* dynamicProvider = &::il2cpp_utils::GetClassFromName("System.Dynamic", "IDynamicMetaObjectProvider")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonDynamicContract*), "TryGetMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dynamicProvider, name, value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonDynamicContract::TrySetMember
// Il2CppName: TrySetMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Serialization::JsonDynamicContract::*)(::System::Dynamic::IDynamicMetaObjectProvider*, ::StringW, ::Il2CppObject*)>(&Newtonsoft::Json::Serialization::JsonDynamicContract::TrySetMember)> {
  static const MethodInfo* get() {
    static auto* dynamicProvider = &::il2cpp_utils::GetClassFromName("System.Dynamic", "IDynamicMetaObjectProvider")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonDynamicContract*), "TrySetMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dynamicProvider, name, value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonDynamicContract::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
