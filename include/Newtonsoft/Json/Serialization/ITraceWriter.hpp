// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Diagnostics
namespace System::Diagnostics {
  // Forward declaring type: TraceLevel
  struct TraceLevel;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Completed forward declares
// Type namespace: Newtonsoft.Json.Serialization
namespace Newtonsoft::Json::Serialization {
  // Forward declaring type: ITraceWriter
  class ITraceWriter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Serialization::ITraceWriter);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Serialization::ITraceWriter*, "Newtonsoft.Json.Serialization", "ITraceWriter");
// Type namespace: Newtonsoft.Json.Serialization
namespace Newtonsoft::Json::Serialization {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Newtonsoft.Json.Serialization.ITraceWriter
  // [TokenAttribute] Offset: FFFFFFFF
  // [NullableContextAttribute] Offset: 673534
  class ITraceWriter {
    public:
    // public System.Diagnostics.TraceLevel get_LevelFilter()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Diagnostics::TraceLevel get_LevelFilter();
    // public System.Void Trace(System.Diagnostics.TraceLevel level, System.String message, System.Exception ex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Trace(::System::Diagnostics::TraceLevel level, ::StringW message, ::System::Exception* ex);
  }; // Newtonsoft.Json.Serialization.ITraceWriter
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::ITraceWriter::get_LevelFilter
// Il2CppName: get_LevelFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Diagnostics::TraceLevel (Newtonsoft::Json::Serialization::ITraceWriter::*)()>(&Newtonsoft::Json::Serialization::ITraceWriter::get_LevelFilter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::ITraceWriter*), "get_LevelFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::ITraceWriter::Trace
// Il2CppName: Trace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::ITraceWriter::*)(::System::Diagnostics::TraceLevel, ::StringW, ::System::Exception*)>(&Newtonsoft::Json::Serialization::ITraceWriter::Trace)> {
  static const MethodInfo* get() {
    static auto* level = &::il2cpp_utils::GetClassFromName("System.Diagnostics", "TraceLevel")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ex = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::ITraceWriter*), "Trace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{level, message, ex});
  }
};
