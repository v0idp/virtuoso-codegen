// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver
#include "Newtonsoft/Json/Serialization/DefaultContractResolver.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Newtonsoft::Json::Serialization
namespace Newtonsoft::Json::Serialization {
  // Skipping declaration: <GetEnumerator>d__2 because it is already included!
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Skipping declaration: IEnumerator because it is already included!
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2, "Newtonsoft.Json.Serialization", "DefaultContractResolver/EnumerableDictionaryWrapper`2");
// Type namespace: Newtonsoft.Json.Serialization
namespace Newtonsoft::Json::Serialization {
  // WARNING Size may be invalid!
  // Autogenerated type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.EnumerableDictionaryWrapper`2
  // [TokenAttribute] Offset: FFFFFFFF
  // [NullableContextAttribute] Offset: 673330
  template<typename TEnumeratorKey, typename TEnumeratorValue>
  class DefaultContractResolver::EnumerableDictionaryWrapper_2 : public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>*/ {
    public:
    // Nested type: ::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2::$GetEnumerator$d__2<TEnumeratorKey, TEnumeratorValue>
    class $GetEnumerator$d__2;
    // WARNING Size may be invalid!
    // Autogenerated type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.EnumerableDictionaryWrapper`2/Newtonsoft.Json.Serialization.<GetEnumerator>d__2
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $GetEnumerator$d__2 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>*/ {
      public:
      using declaring_type = DefaultContractResolver::EnumerableDictionaryWrapper_2<TEnumeratorKey, TEnumeratorValue>*;
      static constexpr std::string_view NESTED_NAME = "<GetEnumerator>d__2";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // private System.Int32 <>1__state
      // Size: 0x4
      // Offset: 0x0
      int $$1__state;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // [NullableAttribute] Offset: 0x675F88
      // private System.Collections.Generic.KeyValuePair`2<System.Object,System.Object> <>2__current
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      ::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*> $$2__current;
      // public Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.EnumerableDictionaryWrapper`2<TEnumeratorKey,TEnumeratorValue> <>4__this
      // Size: 0x8
      // Offset: 0x0
      ::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2<TEnumeratorKey, TEnumeratorValue>* $$4__this;
      // Field size check
      static_assert(sizeof(::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2<TEnumeratorKey, TEnumeratorValue>*) == 0x8);
      // [NullableAttribute] Offset: 0x675FF8
      // private System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<TEnumeratorKey,TEnumeratorValue>> <>7__wrap1
      // Size: 0x8
      // Offset: 0x0
      ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TEnumeratorKey, TEnumeratorValue>>* $$7__wrap1;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TEnumeratorKey, TEnumeratorValue>>*) == 0x8);
      public:
      // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>
      operator ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>() noexcept {
        return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>*>(this);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Int32 <>1__state
      [[deprecated]] int& dyn_$$1__state() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2::$GetEnumerator$d__2::dyn_$$1__state");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Collections.Generic.KeyValuePair`2<System.Object,System.Object> <>2__current
      [[deprecated]] ::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>& dyn_$$2__current() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2::$GetEnumerator$d__2::dyn_$$2__current");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
        return *reinterpret_cast<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.EnumerableDictionaryWrapper`2<TEnumeratorKey,TEnumeratorValue> <>4__this
      [[deprecated]] ::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2<TEnumeratorKey, TEnumeratorValue>*& dyn_$$4__this() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2::$GetEnumerator$d__2::dyn_$$4__this");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
        return *reinterpret_cast<::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2<TEnumeratorKey, TEnumeratorValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<TEnumeratorKey,TEnumeratorValue>> <>7__wrap1
      [[deprecated]] ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TEnumeratorKey, TEnumeratorValue>>*& dyn_$$7__wrap1() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2::$GetEnumerator$d__2::dyn_$$7__wrap1");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
        return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TEnumeratorKey, TEnumeratorValue>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // private System.Collections.Generic.KeyValuePair`2<System.Object,System.Object> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>.get_Current()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*> System_Collections_Generic_IEnumerator$System_Collections_Generic_KeyValuePair$System_Object_System_Object$$_get_Current() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2::$GetEnumerator$d__2::System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>.get_Current");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2<TEnumeratorKey, TEnumeratorValue>::$GetEnumerator$d__2*), -1)));
        return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>, false>(this, ___internal__method);
      }
      // private System.Object System.Collections.IEnumerator.get_Current()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::Il2CppObject* System_Collections_IEnumerator_get_Current() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2::$GetEnumerator$d__2::System.Collections.IEnumerator.get_Current");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2<TEnumeratorKey, TEnumeratorValue>::$GetEnumerator$d__2*), -1)));
        return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
      }
      // public System.Void .ctor(System.Int32 <>1__state)
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename DefaultContractResolver::EnumerableDictionaryWrapper_2<TEnumeratorKey, TEnumeratorValue>::$GetEnumerator$d__2* New_ctor(int $$1__state) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2::$GetEnumerator$d__2::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename DefaultContractResolver::EnumerableDictionaryWrapper_2<TEnumeratorKey, TEnumeratorValue>::$GetEnumerator$d__2*, creationType>($$1__state)));
      }
      // private System.Void System.IDisposable.Dispose()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void System_IDisposable_Dispose() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2::$GetEnumerator$d__2::System.IDisposable.Dispose");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2<TEnumeratorKey, TEnumeratorValue>::$GetEnumerator$d__2*), -1)));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // private System.Boolean MoveNext()
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool MoveNext() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2::$GetEnumerator$d__2::MoveNext");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2<TEnumeratorKey, TEnumeratorValue>::$GetEnumerator$d__2*), -1)));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
      }
      // private System.Void <>m__Finally1()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $$m__Finally1() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2::$GetEnumerator$d__2::<>m__Finally1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // private System.Void System.Collections.IEnumerator.Reset()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void System_Collections_IEnumerator_Reset() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2::$GetEnumerator$d__2::System.Collections.IEnumerator.Reset");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2<TEnumeratorKey, TEnumeratorValue>::$GetEnumerator$d__2*), -1)));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
    }; // Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.EnumerableDictionaryWrapper`2/Newtonsoft.Json.Serialization.<GetEnumerator>d__2
    // Could not write size check! Type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.EnumerableDictionaryWrapper`2/Newtonsoft.Json.Serialization.<GetEnumerator>d__2 is generic, or has no fields that are valid for size checks!
    public:
    // [NullableAttribute] Offset: 0x675F1C
    // private readonly System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<TEnumeratorKey,TEnumeratorValue>> _e
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TEnumeratorKey, TEnumeratorValue>>* e;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TEnumeratorKey, TEnumeratorValue>>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>
    operator ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>*>(this);
    }
    // Creating conversion operator: operator ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TEnumeratorKey, TEnumeratorValue>>*
    constexpr operator ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TEnumeratorKey, TEnumeratorValue>>*() const noexcept {
      return e;
    }
    // Autogenerated instance field getter
    // Get instance field: private readonly System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<TEnumeratorKey,TEnumeratorValue>> _e
    [[deprecated]] ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TEnumeratorKey, TEnumeratorValue>>*& dyn__e() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2::dyn__e");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_e"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TEnumeratorKey, TEnumeratorValue>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void .ctor(System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<TEnumeratorKey,TEnumeratorValue>> e)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DefaultContractResolver::EnumerableDictionaryWrapper_2<TEnumeratorKey, TEnumeratorValue>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TEnumeratorKey, TEnumeratorValue>>* e) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DefaultContractResolver::EnumerableDictionaryWrapper_2<TEnumeratorKey, TEnumeratorValue>*, creationType>(e)));
    }
    // public System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<System.Object,System.Object>> GetEnumerator()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>* GetEnumerator() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2::GetEnumerator");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2<TEnumeratorKey, TEnumeratorValue>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>*, false>(this, ___internal__method);
    }
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2::System.Collections.IEnumerable.GetEnumerator");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2<TEnumeratorKey, TEnumeratorValue>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
    }
  }; // Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.EnumerableDictionaryWrapper`2
  // Could not write size check! Type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.EnumerableDictionaryWrapper`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
