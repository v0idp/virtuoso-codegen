// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ComponentModel.ICustomTypeDescriptor
#include "System/ComponentModel/ICustomTypeDescriptor.hpp"
// Including type: Newtonsoft.Json.Linq.JContainer
#include "Newtonsoft/Json/Linq/JContainer.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Newtonsoft::Json::Linq
namespace Newtonsoft::Json::Linq {
  // Skipping declaration: JTokenType because it is already included!
  // Forward declaring type: JPropertyKeyedCollection
  class JPropertyKeyedCollection;
  // Forward declaring type: JProperty
  class JProperty;
  // Forward declaring type: JsonLoadSettings
  class JsonLoadSettings;
}
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: PropertyChangedEventHandler
  class PropertyChangedEventHandler;
  // Forward declaring type: PropertyChangingEventHandler
  class PropertyChangingEventHandler;
  // Forward declaring type: PropertyDescriptorCollection
  class PropertyDescriptorCollection;
  // Forward declaring type: AttributeCollection
  class AttributeCollection;
  // Forward declaring type: TypeConverter
  class TypeConverter;
  // Forward declaring type: PropertyDescriptor
  class PropertyDescriptor;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Skipping declaration: ICollection`1 because it is already included!
  // Skipping declaration: IEnumerable`1 because it is already included!
  // Forward declaring type: IEnumerator`1<T>
  template<typename T>
  class IEnumerator_1;
  // Skipping declaration: IList`1 because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: StringComparison
  struct StringComparison;
  // Forward declaring type: Attribute
  class Attribute;
}
// Forward declaring namespace: Newtonsoft::Json
namespace Newtonsoft::Json {
  // Forward declaring type: JsonReader
  class JsonReader;
  // Forward declaring type: JsonSerializer
  class JsonSerializer;
  // Forward declaring type: JsonWriter
  class JsonWriter;
  // Forward declaring type: JsonConverter
  class JsonConverter;
}
// Forward declaring namespace: System::Dynamic
namespace System::Dynamic {
  // Forward declaring type: DynamicMetaObject
  class DynamicMetaObject;
}
// Forward declaring namespace: System::Linq::Expressions
namespace System::Linq::Expressions {
  // Forward declaring type: Expression
  class Expression;
}
// Completed forward declares
// Type namespace: Newtonsoft.Json.Linq
namespace Newtonsoft::Json::Linq {
  // Forward declaring type: JObject
  class JObject;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Linq::JObject);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Linq::JObject*, "Newtonsoft.Json.Linq", "JObject");
// Type namespace: Newtonsoft.Json.Linq
namespace Newtonsoft::Json::Linq {
  // Size: 0x68
  #pragma pack(push, 1)
  // Autogenerated type: Newtonsoft.Json.Linq.JObject
  // [TokenAttribute] Offset: FFFFFFFF
  // [NullableContextAttribute] Offset: 673D68
  // [NullableAttribute] Offset: 673D68
  // [DefaultMemberAttribute] Offset: 673D68
  class JObject : public ::Newtonsoft::Json::Linq::JContainer/*, public ::System::Collections::Generic::IDictionary_2<::StringW, ::Newtonsoft::Json::Linq::JToken*>, public ::System::ComponentModel::ICustomTypeDescriptor*/ {
    public:
    // Writing base type padding for base size: 0x49 to desired offset: 0x50
    char ___base_padding[0x7] = {};
    // Nested type: ::Newtonsoft::Json::Linq::JObject::JObjectDynamicProxy
    class JObjectDynamicProxy;
    // Nested type: ::Newtonsoft::Json::Linq::JObject::$GetEnumerator$d__63
    class $GetEnumerator$d__63;
    public:
    // private readonly Newtonsoft.Json.Linq.JPropertyKeyedCollection _properties
    // Size: 0x8
    // Offset: 0x50
    ::Newtonsoft::Json::Linq::JPropertyKeyedCollection* properties;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Linq::JPropertyKeyedCollection*) == 0x8);
    // [NullableAttribute] Offset: 0x6778F8
    // private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
    // Size: 0x8
    // Offset: 0x58
    ::System::ComponentModel::PropertyChangedEventHandler* PropertyChanged;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::PropertyChangedEventHandler*) == 0x8);
    // [NullableAttribute] Offset: 0x677934
    // private System.ComponentModel.PropertyChangingEventHandler PropertyChanging
    // Size: 0x8
    // Offset: 0x60
    ::System::ComponentModel::PropertyChangingEventHandler* PropertyChanging;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::PropertyChangingEventHandler*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IDictionary_2<::StringW, ::Newtonsoft::Json::Linq::JToken*>
    operator ::System::Collections::Generic::IDictionary_2<::StringW, ::Newtonsoft::Json::Linq::JToken*>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::Newtonsoft::Json::Linq::JToken*>*>(this);
    }
    // Creating interface conversion operator: operator ::System::ComponentModel::ICustomTypeDescriptor
    operator ::System::ComponentModel::ICustomTypeDescriptor() noexcept {
      return *reinterpret_cast<::System::ComponentModel::ICustomTypeDescriptor*>(this);
    }
    // Get instance field reference: private readonly Newtonsoft.Json.Linq.JPropertyKeyedCollection _properties
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JPropertyKeyedCollection*& dyn__properties();
    // Get instance field reference: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& dyn_PropertyChanged();
    // Get instance field reference: private System.ComponentModel.PropertyChangingEventHandler PropertyChanging
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangingEventHandler*& dyn_PropertyChanging();
    // public Newtonsoft.Json.Linq.JToken get_Item(System.String propertyName)
    // Offset: 0xEDEF54
    ::Newtonsoft::Json::Linq::JToken* get_Item(::StringW propertyName);
    // public System.Void set_Item(System.String propertyName, Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEDEFD8
    void set_Item(::StringW propertyName, ::Newtonsoft::Json::Linq::JToken* value);
    // private System.Collections.Generic.ICollection`1<Newtonsoft.Json.Linq.JToken> System.Collections.Generic.IDictionary<System.String,Newtonsoft.Json.Linq.JToken>.get_Values()
    // Offset: 0xEDFB6C
    ::System::Collections::Generic::ICollection_1<::Newtonsoft::Json::Linq::JToken*>* System_Collections_Generic_IDictionary$System_String_Newtonsoft_Json_Linq_JToken$_get_Values();
    // private System.Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.get_IsReadOnly()
    // Offset: 0xEE0120
    bool System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_get_IsReadOnly();
    // public System.Void .ctor(Newtonsoft.Json.Linq.JObject other)
    // Offset: 0xEDE898
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JObject* New_ctor(::Newtonsoft::Json::Linq::JObject* other) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JObject*, creationType>(other)));
    }
    // System.Void InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty childProperty)
    // Offset: 0xEDED30
    void InternalPropertyChanged(::Newtonsoft::Json::Linq::JProperty* childProperty);
    // System.Void InternalPropertyChanging(Newtonsoft.Json.Linq.JProperty childProperty)
    // Offset: 0xEDEE80
    void InternalPropertyChanging(::Newtonsoft::Json::Linq::JProperty* childProperty);
    // public System.Collections.Generic.IEnumerable`1<Newtonsoft.Json.Linq.JProperty> Properties()
    // Offset: 0xEDEF08
    ::System::Collections::Generic::IEnumerable_1<::Newtonsoft::Json::Linq::JProperty*>* Properties();
    // public Newtonsoft.Json.Linq.JProperty Property(System.String name, System.StringComparison comparison)
    // Offset: 0xEDE1C4
    ::Newtonsoft::Json::Linq::JProperty* Property(::StringW name, ::System::StringComparison comparison);
    // static public Newtonsoft.Json.Linq.JObject Load(Newtonsoft.Json.JsonReader reader, Newtonsoft.Json.Linq.JsonLoadSettings settings)
    // Offset: 0xEDF160
    static ::Newtonsoft::Json::Linq::JObject* Load(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Linq::JsonLoadSettings* settings);
    // static public Newtonsoft.Json.Linq.JObject Parse(System.String json)
    // Offset: 0xEDF350
    static ::Newtonsoft::Json::Linq::JObject* Parse(::StringW json);
    // static public Newtonsoft.Json.Linq.JObject Parse(System.String json, Newtonsoft.Json.Linq.JsonLoadSettings settings)
    // Offset: 0xEDF358
    static ::Newtonsoft::Json::Linq::JObject* Parse(::StringW json, ::Newtonsoft::Json::Linq::JsonLoadSettings* settings);
    // static public Newtonsoft.Json.Linq.JObject FromObject(System.Object o)
    // Offset: 0xEDF518
    static ::Newtonsoft::Json::Linq::JObject* FromObject(::Il2CppObject* o);
    // static public Newtonsoft.Json.Linq.JObject FromObject(System.Object o, Newtonsoft.Json.JsonSerializer jsonSerializer)
    // Offset: 0xEDF544
    static ::Newtonsoft::Json::Linq::JObject* FromObject(::Il2CppObject* o, ::Newtonsoft::Json::JsonSerializer* jsonSerializer);
    // public System.Void Add(System.String propertyName, Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEDF0E0
    void Add(::StringW propertyName, ::Newtonsoft::Json::Linq::JToken* value);
    // public System.Boolean Remove(System.String propertyName)
    // Offset: 0xEDFA90
    bool Remove(::StringW propertyName);
    // public System.Boolean TryGetValue(System.String propertyName, out Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEDFB24
    bool TryGetValue(::StringW propertyName, ByRef<::Newtonsoft::Json::Linq::JToken*> value);
    // private System.Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair`2<System.String,Newtonsoft.Json.Linq.JToken> item)
    // Offset: 0xEDFBAC
    void System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_Add(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*> item);
    // private System.Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Clear()
    // Offset: 0xEDFC44
    void System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_Clear();
    // private System.Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair`2<System.String,Newtonsoft.Json.Linq.JToken> item)
    // Offset: 0xEDFC54
    bool System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_Contains(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*> item);
    // private System.Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair`2<System.String,Newtonsoft.Json.Linq.JToken>[] array, System.Int32 arrayIndex)
    // Offset: 0xEDFCD8
    void System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*>> array, int arrayIndex);
    // private System.Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair`2<System.String,Newtonsoft.Json.Linq.JToken> item)
    // Offset: 0xEE0128
    bool System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_Remove(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*> item);
    // public System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<System.String,Newtonsoft.Json.Linq.JToken>> GetEnumerator()
    // Offset: 0xEE0280
    ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*>>* GetEnumerator();
    // protected System.Void OnPropertyChanged(System.String propertyName)
    // Offset: 0xEE02EC
    void OnPropertyChanged(::StringW propertyName);
    // protected System.Void OnPropertyChanging(System.String propertyName)
    // Offset: 0xEE037C
    void OnPropertyChanging(::StringW propertyName);
    // private System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties()
    // Offset: 0xEE040C
    ::System::ComponentModel::PropertyDescriptorCollection* System_ComponentModel_ICustomTypeDescriptor_GetProperties();
    // private System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[] attributes)
    // Offset: 0xEE04B4
    ::System::ComponentModel::PropertyDescriptorCollection* System_ComponentModel_ICustomTypeDescriptor_GetProperties(::ArrayW<::System::Attribute*> attributes);
    // private System.ComponentModel.AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
    // Offset: 0xEE07F8
    ::System::ComponentModel::AttributeCollection* System_ComponentModel_ICustomTypeDescriptor_GetAttributes();
    // private System.ComponentModel.TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter()
    // Offset: 0xEE085C
    ::System::ComponentModel::TypeConverter* System_ComponentModel_ICustomTypeDescriptor_GetConverter();
    // private System.Object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor pd)
    // Offset: 0xEE08B4
    ::Il2CppObject* System_ComponentModel_ICustomTypeDescriptor_GetPropertyOwner(::System::ComponentModel::PropertyDescriptor* pd);
    // protected override System.Collections.Generic.IList`1<Newtonsoft.Json.Linq.JToken> get_ChildrenTokens()
    // Offset: 0xEDE804
    // Implemented from: Newtonsoft.Json.Linq.JContainer
    // Base method: System.Collections.Generic.IList`1<Newtonsoft.Json.Linq.JToken> JContainer::get_ChildrenTokens()
    ::System::Collections::Generic::IList_1<::Newtonsoft::Json::Linq::JToken*>* get_ChildrenTokens();
    // public override Newtonsoft.Json.Linq.JTokenType get_Type()
    // Offset: 0xEDEF00
    // Implemented from: Newtonsoft.Json.Linq.JToken
    // Base method: Newtonsoft.Json.Linq.JTokenType JToken::get_Type()
    ::Newtonsoft::Json::Linq::JTokenType get_Type();
    // public System.Void .ctor()
    // Offset: 0xEDDE7C
    // Implemented from: Newtonsoft.Json.Linq.JContainer
    // Base method: System.Void JContainer::.ctor()
    // Base method: System.Void JToken::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JObject* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JObject::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JObject*, creationType>()));
    }
    // override System.Int32 IndexOfItem(Newtonsoft.Json.Linq.JToken item)
    // Offset: 0xEDE904
    // Implemented from: Newtonsoft.Json.Linq.JContainer
    // Base method: System.Int32 JContainer::IndexOfItem(Newtonsoft.Json.Linq.JToken item)
    int IndexOfItem(::Newtonsoft::Json::Linq::JToken* item);
    // override System.Void InsertItem(System.Int32 index, Newtonsoft.Json.Linq.JToken item, System.Boolean skipParentCheck)
    // Offset: 0xEDE9D8
    // Implemented from: Newtonsoft.Json.Linq.JContainer
    // Base method: System.Void JContainer::InsertItem(System.Int32 index, Newtonsoft.Json.Linq.JToken item, System.Boolean skipParentCheck)
    void InsertItem(int index, ::Newtonsoft::Json::Linq::JToken* item, bool skipParentCheck);
    // override System.Void ValidateToken(Newtonsoft.Json.Linq.JToken o, Newtonsoft.Json.Linq.JToken existing)
    // Offset: 0xEDEA44
    // Implemented from: Newtonsoft.Json.Linq.JContainer
    // Base method: System.Void JContainer::ValidateToken(Newtonsoft.Json.Linq.JToken o, Newtonsoft.Json.Linq.JToken existing)
    void ValidateToken(::Newtonsoft::Json::Linq::JToken* o, ::Newtonsoft::Json::Linq::JToken* existing);
    // override Newtonsoft.Json.Linq.JToken CloneToken()
    // Offset: 0xEDEEA4
    // Implemented from: Newtonsoft.Json.Linq.JToken
    // Base method: Newtonsoft.Json.Linq.JToken JToken::CloneToken()
    ::Newtonsoft::Json::Linq::JToken* CloneToken();
    // public override System.Void WriteTo(Newtonsoft.Json.JsonWriter writer, params Newtonsoft.Json.JsonConverter[] converters)
    // Offset: 0xEDF8BC
    // Implemented from: Newtonsoft.Json.Linq.JToken
    // Base method: System.Void JToken::WriteTo(Newtonsoft.Json.JsonWriter writer, params Newtonsoft.Json.JsonConverter[] converters)
    void WriteTo(::Newtonsoft::Json::JsonWriter* writer, ::ArrayW<::Newtonsoft::Json::JsonConverter*> converters);
    // protected override System.Dynamic.DynamicMetaObject GetMetaObject(System.Linq.Expressions.Expression parameter)
    // Offset: 0xEE093C
    // Implemented from: Newtonsoft.Json.Linq.JToken
    // Base method: System.Dynamic.DynamicMetaObject JToken::GetMetaObject(System.Linq.Expressions.Expression parameter)
    ::System::Dynamic::DynamicMetaObject* GetMetaObject(::System::Linq::Expressions::Expression* parameter);
  }; // Newtonsoft.Json.Linq.JObject
  #pragma pack(pop)
  static check_size<sizeof(JObject), 96 + sizeof(::System::ComponentModel::PropertyChangingEventHandler*)> __Newtonsoft_Json_Linq_JObjectSizeCheck;
  static_assert(sizeof(JObject) == 0x68);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JToken* (Newtonsoft::Json::Linq::JObject::*)(::StringW)>(&Newtonsoft::Json::Linq::JObject::get_Item)> {
  static const MethodInfo* get() {
    static auto* propertyName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyName});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JObject::*)(::StringW, ::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JObject::set_Item)> {
  static const MethodInfo* get() {
    static auto* propertyName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyName, value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::System_Collections_Generic_IDictionary$System_String_Newtonsoft_Json_Linq_JToken$_get_Values
// Il2CppName: System.Collections.Generic.IDictionary<System.String,Newtonsoft.Json.Linq.JToken>.get_Values
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::ICollection_1<::Newtonsoft::Json::Linq::JToken*>* (Newtonsoft::Json::Linq::JObject::*)()>(&Newtonsoft::Json::Linq::JObject::System_Collections_Generic_IDictionary$System_String_Newtonsoft_Json_Linq_JToken$_get_Values)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "System.Collections.Generic.IDictionary<System.String,Newtonsoft.Json.Linq.JToken>.get_Values", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_get_IsReadOnly
// Il2CppName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JObject::*)()>(&Newtonsoft::Json::Linq::JObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_get_IsReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::InternalPropertyChanged
// Il2CppName: InternalPropertyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JObject::*)(::Newtonsoft::Json::Linq::JProperty*)>(&Newtonsoft::Json::Linq::JObject::InternalPropertyChanged)> {
  static const MethodInfo* get() {
    static auto* childProperty = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JProperty")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "InternalPropertyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{childProperty});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::InternalPropertyChanging
// Il2CppName: InternalPropertyChanging
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JObject::*)(::Newtonsoft::Json::Linq::JProperty*)>(&Newtonsoft::Json::Linq::JObject::InternalPropertyChanging)> {
  static const MethodInfo* get() {
    static auto* childProperty = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JProperty")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "InternalPropertyChanging", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{childProperty});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::Properties
// Il2CppName: Properties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::Newtonsoft::Json::Linq::JProperty*>* (Newtonsoft::Json::Linq::JObject::*)()>(&Newtonsoft::Json::Linq::JObject::Properties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "Properties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::Property
// Il2CppName: Property
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JProperty* (Newtonsoft::Json::Linq::JObject::*)(::StringW, ::System::StringComparison)>(&Newtonsoft::Json::Linq::JObject::Property)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* comparison = &::il2cpp_utils::GetClassFromName("System", "StringComparison")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "Property", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, comparison});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JObject* (*)(::Newtonsoft::Json::JsonReader*, ::Newtonsoft::Json::Linq::JsonLoadSettings*)>(&Newtonsoft::Json::Linq::JObject::Load)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonReader")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JsonLoadSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader, settings});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::Parse
// Il2CppName: Parse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JObject* (*)(::StringW)>(&Newtonsoft::Json::Linq::JObject::Parse)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "Parse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::Parse
// Il2CppName: Parse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JObject* (*)(::StringW, ::Newtonsoft::Json::Linq::JsonLoadSettings*)>(&Newtonsoft::Json::Linq::JObject::Parse)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JsonLoadSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "Parse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json, settings});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::FromObject
// Il2CppName: FromObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JObject* (*)(::Il2CppObject*)>(&Newtonsoft::Json::Linq::JObject::FromObject)> {
  static const MethodInfo* get() {
    static auto* o = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "FromObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{o});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::FromObject
// Il2CppName: FromObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JObject* (*)(::Il2CppObject*, ::Newtonsoft::Json::JsonSerializer*)>(&Newtonsoft::Json::Linq::JObject::FromObject)> {
  static const MethodInfo* get() {
    static auto* o = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* jsonSerializer = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonSerializer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "FromObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{o, jsonSerializer});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JObject::*)(::StringW, ::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JObject::Add)> {
  static const MethodInfo* get() {
    static auto* propertyName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyName, value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JObject::*)(::StringW)>(&Newtonsoft::Json::Linq::JObject::Remove)> {
  static const MethodInfo* get() {
    static auto* propertyName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyName});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::TryGetValue
// Il2CppName: TryGetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JObject::*)(::StringW, ByRef<::Newtonsoft::Json::Linq::JToken*>)>(&Newtonsoft::Json::Linq::JObject::TryGetValue)> {
  static const MethodInfo* get() {
    static auto* propertyName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "TryGetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyName, value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_Add
// Il2CppName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JObject::*)(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*>)>(&Newtonsoft::Json::Linq::JObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_Add)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_Clear
// Il2CppName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JObject::*)()>(&Newtonsoft::Json::Linq::JObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_Contains
// Il2CppName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JObject::*)(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*>)>(&Newtonsoft::Json::Linq::JObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_Contains)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_CopyTo
// Il2CppName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JObject::*)(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*>>, int)>(&Newtonsoft::Json::Linq::JObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_CopyTo)> {
  static const MethodInfo* get() {
    static auto* array = &il2cpp_functions::array_class_get(::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")}), 1)->byval_arg;
    static auto* arrayIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, arrayIndex});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_Remove
// Il2CppName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JObject::*)(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*>)>(&Newtonsoft::Json::Linq::JObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_Newtonsoft_Json_Linq_JToken$$_Remove)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Newtonsoft::Json::Linq::JToken*>>* (Newtonsoft::Json::Linq::JObject::*)()>(&Newtonsoft::Json::Linq::JObject::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::OnPropertyChanged
// Il2CppName: OnPropertyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JObject::*)(::StringW)>(&Newtonsoft::Json::Linq::JObject::OnPropertyChanged)> {
  static const MethodInfo* get() {
    static auto* propertyName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "OnPropertyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyName});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::OnPropertyChanging
// Il2CppName: OnPropertyChanging
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JObject::*)(::StringW)>(&Newtonsoft::Json::Linq::JObject::OnPropertyChanging)> {
  static const MethodInfo* get() {
    static auto* propertyName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "OnPropertyChanging", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyName});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::System_ComponentModel_ICustomTypeDescriptor_GetProperties
// Il2CppName: System.ComponentModel.ICustomTypeDescriptor.GetProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::PropertyDescriptorCollection* (Newtonsoft::Json::Linq::JObject::*)()>(&Newtonsoft::Json::Linq::JObject::System_ComponentModel_ICustomTypeDescriptor_GetProperties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "System.ComponentModel.ICustomTypeDescriptor.GetProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::System_ComponentModel_ICustomTypeDescriptor_GetProperties
// Il2CppName: System.ComponentModel.ICustomTypeDescriptor.GetProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::PropertyDescriptorCollection* (Newtonsoft::Json::Linq::JObject::*)(::ArrayW<::System::Attribute*>)>(&Newtonsoft::Json::Linq::JObject::System_ComponentModel_ICustomTypeDescriptor_GetProperties)> {
  static const MethodInfo* get() {
    static auto* attributes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Attribute"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "System.ComponentModel.ICustomTypeDescriptor.GetProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attributes});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::System_ComponentModel_ICustomTypeDescriptor_GetAttributes
// Il2CppName: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::AttributeCollection* (Newtonsoft::Json::Linq::JObject::*)()>(&Newtonsoft::Json::Linq::JObject::System_ComponentModel_ICustomTypeDescriptor_GetAttributes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "System.ComponentModel.ICustomTypeDescriptor.GetAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::System_ComponentModel_ICustomTypeDescriptor_GetConverter
// Il2CppName: System.ComponentModel.ICustomTypeDescriptor.GetConverter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::TypeConverter* (Newtonsoft::Json::Linq::JObject::*)()>(&Newtonsoft::Json::Linq::JObject::System_ComponentModel_ICustomTypeDescriptor_GetConverter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "System.ComponentModel.ICustomTypeDescriptor.GetConverter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::System_ComponentModel_ICustomTypeDescriptor_GetPropertyOwner
// Il2CppName: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Newtonsoft::Json::Linq::JObject::*)(::System::ComponentModel::PropertyDescriptor*)>(&Newtonsoft::Json::Linq::JObject::System_ComponentModel_ICustomTypeDescriptor_GetPropertyOwner)> {
  static const MethodInfo* get() {
    static auto* pd = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pd});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::get_ChildrenTokens
// Il2CppName: get_ChildrenTokens
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Linq::JToken*>* (Newtonsoft::Json::Linq::JObject::*)()>(&Newtonsoft::Json::Linq::JObject::get_ChildrenTokens)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "get_ChildrenTokens", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::get_Type
// Il2CppName: get_Type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JTokenType (Newtonsoft::Json::Linq::JObject::*)()>(&Newtonsoft::Json::Linq::JObject::get_Type)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "get_Type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::IndexOfItem
// Il2CppName: IndexOfItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Newtonsoft::Json::Linq::JObject::*)(::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JObject::IndexOfItem)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "IndexOfItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::InsertItem
// Il2CppName: InsertItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JObject::*)(int, ::Newtonsoft::Json::Linq::JToken*, bool)>(&Newtonsoft::Json::Linq::JObject::InsertItem)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* item = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    static auto* skipParentCheck = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "InsertItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, item, skipParentCheck});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::ValidateToken
// Il2CppName: ValidateToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JObject::*)(::Newtonsoft::Json::Linq::JToken*, ::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JObject::ValidateToken)> {
  static const MethodInfo* get() {
    static auto* o = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    static auto* existing = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "ValidateToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{o, existing});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::CloneToken
// Il2CppName: CloneToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JToken* (Newtonsoft::Json::Linq::JObject::*)()>(&Newtonsoft::Json::Linq::JObject::CloneToken)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "CloneToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::WriteTo
// Il2CppName: WriteTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JObject::*)(::Newtonsoft::Json::JsonWriter*, ::ArrayW<::Newtonsoft::Json::JsonConverter*>)>(&Newtonsoft::Json::Linq::JObject::WriteTo)> {
  static const MethodInfo* get() {
    static auto* writer = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonWriter")->byval_arg;
    static auto* converters = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonConverter"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "WriteTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writer, converters});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JObject::GetMetaObject
// Il2CppName: GetMetaObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (Newtonsoft::Json::Linq::JObject::*)(::System::Linq::Expressions::Expression*)>(&Newtonsoft::Json::Linq::JObject::GetMetaObject)> {
  static const MethodInfo* get() {
    static auto* parameter = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions", "Expression")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JObject*), "GetMetaObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parameter});
  }
};
