// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Newtonsoft.Json.IJsonLineInfo
#include "Newtonsoft/Json/IJsonLineInfo.hpp"
// Including type: System.Dynamic.IDynamicMetaObjectProvider
#include "System/Dynamic/IDynamicMetaObjectProvider.hpp"
// Including type: System.ICloneable
#include "System/ICloneable.hpp"
// Including type: Newtonsoft.Json.Linq.JTokenType
#include "Newtonsoft/Json/Linq/JTokenType.hpp"
// Including type: Newtonsoft.Json.Formatting
#include "Newtonsoft/Json/Formatting.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Numerics.BigInteger
#include "System/Numerics/BigInteger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Newtonsoft::Json::Linq
namespace Newtonsoft::Json::Linq {
  // Forward declaring type: JContainer
  class JContainer;
  // Forward declaring type: JEnumerable`1<T>
  template<typename T>
  struct JEnumerable_1;
  // Forward declaring type: JValue
  class JValue;
  // Forward declaring type: JsonLoadSettings
  class JsonLoadSettings;
}
// Forward declaring namespace: Newtonsoft::Json
namespace Newtonsoft::Json {
  // Forward declaring type: JsonWriter
  class JsonWriter;
  // Forward declaring type: JsonConverter
  class JsonConverter;
  // Forward declaring type: JsonReader
  class JsonReader;
  // Forward declaring type: JsonSerializer
  class JsonSerializer;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Uri
  class Uri;
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerator`1<T>
  template<typename T>
  class IEnumerator_1;
}
// Forward declaring namespace: System::Dynamic
namespace System::Dynamic {
  // Forward declaring type: DynamicMetaObject
  class DynamicMetaObject;
}
// Forward declaring namespace: System::Linq::Expressions
namespace System::Linq::Expressions {
  // Forward declaring type: Expression
  class Expression;
}
// Completed forward declares
// Type namespace: Newtonsoft.Json.Linq
namespace Newtonsoft::Json::Linq {
  // Forward declaring type: JToken
  class JToken;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Linq::JToken);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Linq::JToken*, "Newtonsoft.Json.Linq", "JToken");
// Type namespace: Newtonsoft.Json.Linq
namespace Newtonsoft::Json::Linq {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Newtonsoft.Json.Linq.JToken
  // [TokenAttribute] Offset: FFFFFFFF
  // [NullableContextAttribute] Offset: 674014
  // [DefaultMemberAttribute] Offset: 674014
  // [NullableAttribute] Offset: 674014
  class JToken : public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerable_1<::Newtonsoft::Json::Linq::JToken*>, public ::Newtonsoft::Json::IJsonLineInfo, public ::System::Dynamic::IDynamicMetaObjectProvider, public ::System::ICloneable*/ {
    public:
    // Nested type: ::Newtonsoft::Json::Linq::JToken::LineInfoAnnotation
    class LineInfoAnnotation;
    public:
    // [NullableAttribute] Offset: 0x677B1C
    // private Newtonsoft.Json.Linq.JContainer _parent
    // Size: 0x8
    // Offset: 0x10
    ::Newtonsoft::Json::Linq::JContainer* parent;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Linq::JContainer*) == 0x8);
    // [NullableAttribute] Offset: 0x677B30
    // private Newtonsoft.Json.Linq.JToken _previous
    // Size: 0x8
    // Offset: 0x18
    ::Newtonsoft::Json::Linq::JToken* previous;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Linq::JToken*) == 0x8);
    // [NullableAttribute] Offset: 0x677B44
    // private Newtonsoft.Json.Linq.JToken _next
    // Size: 0x8
    // Offset: 0x20
    ::Newtonsoft::Json::Linq::JToken* next;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Linq::JToken*) == 0x8);
    // [NullableAttribute] Offset: 0x677B58
    // private System.Object _annotations
    // Size: 0x8
    // Offset: 0x28
    ::Il2CppObject* annotations;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerable_1<::Newtonsoft::Json::Linq::JToken*>
    operator ::System::Collections::Generic::IEnumerable_1<::Newtonsoft::Json::Linq::JToken*>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::Newtonsoft::Json::Linq::JToken*>*>(this);
    }
    // Creating interface conversion operator: operator ::Newtonsoft::Json::IJsonLineInfo
    operator ::Newtonsoft::Json::IJsonLineInfo() noexcept {
      return *reinterpret_cast<::Newtonsoft::Json::IJsonLineInfo*>(this);
    }
    // Creating interface conversion operator: operator ::System::Dynamic::IDynamicMetaObjectProvider
    operator ::System::Dynamic::IDynamicMetaObjectProvider() noexcept {
      return *reinterpret_cast<::System::Dynamic::IDynamicMetaObjectProvider*>(this);
    }
    // Creating interface conversion operator: operator ::System::ICloneable
    operator ::System::ICloneable() noexcept {
      return *reinterpret_cast<::System::ICloneable*>(this);
    }
    // Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] BooleanTypes
    static ::ArrayW<::Newtonsoft::Json::Linq::JTokenType> _get_BooleanTypes();
    // Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] BooleanTypes
    static void _set_BooleanTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value);
    // Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] NumberTypes
    static ::ArrayW<::Newtonsoft::Json::Linq::JTokenType> _get_NumberTypes();
    // Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] NumberTypes
    static void _set_NumberTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value);
    // Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] BigIntegerTypes
    static ::ArrayW<::Newtonsoft::Json::Linq::JTokenType> _get_BigIntegerTypes();
    // Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] BigIntegerTypes
    static void _set_BigIntegerTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value);
    // Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] StringTypes
    static ::ArrayW<::Newtonsoft::Json::Linq::JTokenType> _get_StringTypes();
    // Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] StringTypes
    static void _set_StringTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value);
    // Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] GuidTypes
    static ::ArrayW<::Newtonsoft::Json::Linq::JTokenType> _get_GuidTypes();
    // Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] GuidTypes
    static void _set_GuidTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value);
    // Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] TimeSpanTypes
    static ::ArrayW<::Newtonsoft::Json::Linq::JTokenType> _get_TimeSpanTypes();
    // Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] TimeSpanTypes
    static void _set_TimeSpanTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value);
    // Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] UriTypes
    static ::ArrayW<::Newtonsoft::Json::Linq::JTokenType> _get_UriTypes();
    // Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] UriTypes
    static void _set_UriTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value);
    // Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] CharTypes
    static ::ArrayW<::Newtonsoft::Json::Linq::JTokenType> _get_CharTypes();
    // Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] CharTypes
    static void _set_CharTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value);
    // Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] DateTimeTypes
    static ::ArrayW<::Newtonsoft::Json::Linq::JTokenType> _get_DateTimeTypes();
    // Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] DateTimeTypes
    static void _set_DateTimeTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value);
    // Get static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] BytesTypes
    static ::ArrayW<::Newtonsoft::Json::Linq::JTokenType> _get_BytesTypes();
    // Set static field: static private readonly Newtonsoft.Json.Linq.JTokenType[] BytesTypes
    static void _set_BytesTypes(::ArrayW<::Newtonsoft::Json::Linq::JTokenType> value);
    // Get instance field reference: private Newtonsoft.Json.Linq.JContainer _parent
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JContainer*& dyn__parent();
    // Get instance field reference: private Newtonsoft.Json.Linq.JToken _previous
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JToken*& dyn__previous();
    // Get instance field reference: private Newtonsoft.Json.Linq.JToken _next
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JToken*& dyn__next();
    // Get instance field reference: private System.Object _annotations
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn__annotations();
    // public Newtonsoft.Json.Linq.JContainer get_Parent()
    // Offset: 0xEE2284
    ::Newtonsoft::Json::Linq::JContainer* get_Parent();
    // System.Void set_Parent(Newtonsoft.Json.Linq.JContainer value)
    // Offset: 0xEE228C
    void set_Parent(::Newtonsoft::Json::Linq::JContainer* value);
    // public Newtonsoft.Json.Linq.JToken get_Root()
    // Offset: 0xEDBD40
    ::Newtonsoft::Json::Linq::JToken* get_Root();
    // public Newtonsoft.Json.Linq.JTokenType get_Type()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Newtonsoft::Json::Linq::JTokenType get_Type();
    // public System.Boolean get_HasValues()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_HasValues();
    // public Newtonsoft.Json.Linq.JToken get_Next()
    // Offset: 0xEE2294
    ::Newtonsoft::Json::Linq::JToken* get_Next();
    // System.Void set_Next(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE229C
    void set_Next(::Newtonsoft::Json::Linq::JToken* value);
    // public Newtonsoft.Json.Linq.JToken get_Previous()
    // Offset: 0xEE22A4
    ::Newtonsoft::Json::Linq::JToken* get_Previous();
    // System.Void set_Previous(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE22AC
    void set_Previous(::Newtonsoft::Json::Linq::JToken* value);
    // public System.String get_Path()
    // Offset: 0xEE22B4
    ::StringW get_Path();
    // public Newtonsoft.Json.Linq.JToken get_First()
    // Offset: 0xEE28C0
    ::Newtonsoft::Json::Linq::JToken* get_First();
    // public Newtonsoft.Json.Linq.JToken get_Last()
    // Offset: 0xEE297C
    ::Newtonsoft::Json::Linq::JToken* get_Last();
    // private System.Int32 Newtonsoft.Json.IJsonLineInfo.get_LineNumber()
    // Offset: 0xEEAB34
    int Newtonsoft_Json_IJsonLineInfo_get_LineNumber();
    // private System.Int32 Newtonsoft.Json.IJsonLineInfo.get_LinePosition()
    // Offset: 0xEEAB8C
    int Newtonsoft_Json_IJsonLineInfo_get_LinePosition();
    // System.Void .ctor()
    // Offset: 0xEDB284
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JToken* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JToken*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0xEEACD0
    static void _cctor();
    // Newtonsoft.Json.Linq.JToken CloneToken()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Newtonsoft::Json::Linq::JToken* CloneToken();
    // public Newtonsoft.Json.Linq.JEnumerable`1<Newtonsoft.Json.Linq.JToken> Children()
    // Offset: 0xEE2A38
    ::Newtonsoft::Json::Linq::JEnumerable_1<::Newtonsoft::Json::Linq::JToken*> Children();
    // public System.Void Remove()
    // Offset: 0xEDFAB4
    void Remove();
    // public System.Void Replace(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEDE3F4
    void Replace(::Newtonsoft::Json::Linq::JToken* value);
    // public System.Void WriteTo(Newtonsoft.Json.JsonWriter writer, params Newtonsoft.Json.JsonConverter[] converters)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void WriteTo(::Newtonsoft::Json::JsonWriter* writer, ::ArrayW<::Newtonsoft::Json::JsonConverter*> converters);
    // public System.String ToString(Newtonsoft.Json.Formatting formatting, params Newtonsoft.Json.JsonConverter[] converters)
    // Offset: 0xEE2B74
    ::StringW ToString(::Newtonsoft::Json::Formatting formatting, ::ArrayW<::Newtonsoft::Json::JsonConverter*> converters);
    // static private Newtonsoft.Json.Linq.JValue EnsureValue(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE2D94
    static ::Newtonsoft::Json::Linq::JValue* EnsureValue(::Newtonsoft::Json::Linq::JToken* value);
    // static private System.String GetType(Newtonsoft.Json.Linq.JToken token)
    // Offset: 0xEE2EAC
    static ::StringW GetType(::Newtonsoft::Json::Linq::JToken* token);
    // static private System.Boolean ValidateToken(Newtonsoft.Json.Linq.JToken o, Newtonsoft.Json.Linq.JTokenType[] validTypes, System.Boolean nullable)
    // Offset: 0xEE2FC0
    static bool ValidateToken(::Newtonsoft::Json::Linq::JToken* o, ::ArrayW<::Newtonsoft::Json::Linq::JTokenType> validTypes, bool nullable);
    // static public System.Boolean op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE3084
    explicit operator bool();
    // static public System.DateTimeOffset op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE3324
    explicit operator ::System::DateTimeOffset();
    // static public System.Nullable`1<System.Boolean> op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE3604
    explicit operator ::System::Nullable_1<bool>();
    // static public System.Int64 op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE38D8
    explicit operator int64_t();
    // static public System.Nullable`1<System.DateTime> op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE3B44
    explicit operator ::System::Nullable_1<::System::DateTime>();
    // static public System.Nullable`1<System.DateTimeOffset> op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE3DD4
    explicit operator ::System::Nullable_1<::System::DateTimeOffset>();
    // static public System.Nullable`1<System.Decimal> op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE412C
    explicit operator ::System::Nullable_1<::System::Decimal>();
    // static public System.Nullable`1<System.Double> op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE43E8
    explicit operator ::System::Nullable_1<double>();
    // static public System.Nullable`1<System.Char> op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE468C
    explicit operator ::System::Nullable_1<::Il2CppChar>();
    // static public System.Int32 op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE492C
    explicit operator int();
    // static public System.Int16 op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE4B98
    explicit operator int16_t();
    // static public System.UInt16 op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE4E04
    explicit operator uint16_t();
    // static public System.Char op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE5070
    explicit operator ::Il2CppChar();
    // static public System.Byte op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE52DC
    explicit operator uint8_t();
    // static public System.SByte op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE5548
    explicit operator int8_t();
    // static public System.Nullable`1<System.Int32> op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE57B4
    explicit operator ::System::Nullable_1<int>();
    // static public System.Nullable`1<System.Int16> op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE5A54
    explicit operator ::System::Nullable_1<int16_t>();
    // static public System.Nullable`1<System.UInt16> op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE5CF4
    explicit operator ::System::Nullable_1<uint16_t>();
    // static public System.Nullable`1<System.Byte> op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE5F94
    explicit operator ::System::Nullable_1<uint8_t>();
    // static public System.Nullable`1<System.SByte> op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE6234
    explicit operator ::System::Nullable_1<int8_t>();
    // static public System.DateTime op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE64D4
    explicit operator ::System::DateTime();
    // static public System.Nullable`1<System.Int64> op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE672C
    explicit operator ::System::Nullable_1<int64_t>();
    // static public System.Nullable`1<System.Single> op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE69D4
    explicit operator ::System::Nullable_1<float>();
    // static public System.Decimal op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE6C70
    explicit operator ::System::Decimal();
    // static public System.Nullable`1<System.UInt32> op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE6EDC
    explicit operator ::System::Nullable_1<uint>();
    // static public System.Nullable`1<System.UInt64> op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE717C
    explicit operator ::System::Nullable_1<uint64_t>();
    // static public System.Double op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE7424
    explicit operator double();
    // static public System.Single op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE7690
    explicit operator float();
    // static public System.String op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE78FC
    explicit operator ::StringW();
    // static public System.UInt32 op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE7BE8
    explicit operator uint();
    // static public System.UInt64 op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE7E54
    explicit operator uint64_t();
    // static public System.Guid op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE80C0
    explicit operator ::System::Guid();
    // static public System.Nullable`1<System.Guid> op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE835C
    explicit operator ::System::Nullable_1<::System::Guid>();
    // static public System.TimeSpan op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE8634
    explicit operator ::System::TimeSpan();
    // static public System.Nullable`1<System.TimeSpan> op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE88B8
    explicit operator ::System::Nullable_1<::System::TimeSpan>();
    // static public System.Uri op_Explicit(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE8B74
    explicit operator ::System::Uri*();
    // static private System.Numerics.BigInteger ToBigInteger(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE8DE4
    static ::System::Numerics::BigInteger ToBigInteger(::Newtonsoft::Json::Linq::JToken* value);
    // static private System.Nullable`1<System.Numerics.BigInteger> ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken value)
    // Offset: 0xEE8FA4
    static ::System::Nullable_1<::System::Numerics::BigInteger> ToBigIntegerNullable(::Newtonsoft::Json::Linq::JToken* value);
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0xEE92F0
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // private System.Collections.Generic.IEnumerator`1<Newtonsoft.Json.Linq.JToken> System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator()
    // Offset: 0xEE9390
    ::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::Linq::JToken*>* System_Collections_Generic_IEnumerable$Newtonsoft_Json_Linq_JToken$_GetEnumerator();
    // public Newtonsoft.Json.JsonReader CreateReader()
    // Offset: 0xEE9404
    ::Newtonsoft::Json::JsonReader* CreateReader();
    // static Newtonsoft.Json.Linq.JToken FromObjectInternal(System.Object o, Newtonsoft.Json.JsonSerializer jsonSerializer)
    // Offset: 0xEDF6F4
    static ::Newtonsoft::Json::Linq::JToken* FromObjectInternal(::Il2CppObject* o, ::Newtonsoft::Json::JsonSerializer* jsonSerializer);
    // public System.Object ToObject(System.Type objectType)
    // Offset: 0xEE954C
    ::Il2CppObject* ToObject(::System::Type* objectType);
    // public System.Object ToObject(System.Type objectType, Newtonsoft.Json.JsonSerializer jsonSerializer)
    // Offset: 0xEEA340
    ::Il2CppObject* ToObject(::System::Type* objectType, ::Newtonsoft::Json::JsonSerializer* jsonSerializer);
    // static public Newtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader reader)
    // Offset: 0xEEA4E0
    static ::Newtonsoft::Json::Linq::JToken* ReadFrom(::Newtonsoft::Json::JsonReader* reader);
    // static public Newtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader reader, Newtonsoft.Json.Linq.JsonLoadSettings settings)
    // Offset: 0xEEA544
    static ::Newtonsoft::Json::Linq::JToken* ReadFrom(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Linq::JsonLoadSettings* settings);
    // System.Void SetLineInfo(Newtonsoft.Json.IJsonLineInfo lineInfo, Newtonsoft.Json.Linq.JsonLoadSettings settings)
    // Offset: 0xEDA6EC
    void SetLineInfo(::Newtonsoft::Json::IJsonLineInfo* lineInfo, ::Newtonsoft::Json::Linq::JsonLoadSettings* settings);
    // System.Void SetLineInfo(System.Int32 lineNumber, System.Int32 linePosition)
    // Offset: 0xEEA838
    void SetLineInfo(int lineNumber, int linePosition);
    // private System.Boolean Newtonsoft.Json.IJsonLineInfo.HasLineInfo()
    // Offset: 0xEEAADC
    bool Newtonsoft_Json_IJsonLineInfo_HasLineInfo();
    // protected System.Dynamic.DynamicMetaObject GetMetaObject(System.Linq.Expressions.Expression parameter)
    // Offset: 0xEEABE4
    ::System::Dynamic::DynamicMetaObject* GetMetaObject(::System::Linq::Expressions::Expression* parameter);
    // private System.Dynamic.DynamicMetaObject System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression parameter)
    // Offset: 0xEEACA8
    ::System::Dynamic::DynamicMetaObject* System_Dynamic_IDynamicMetaObjectProvider_GetMetaObject(::System::Linq::Expressions::Expression* parameter);
    // private System.Object System.ICloneable.Clone()
    // Offset: 0xEEACB8
    ::Il2CppObject* System_ICloneable_Clone();
    // public Newtonsoft.Json.Linq.JToken DeepClone()
    // Offset: 0xEEACC4
    ::Newtonsoft::Json::Linq::JToken* DeepClone();
    // public System.Void AddAnnotation(System.Object annotation)
    // Offset: 0xEEA8B0
    void AddAnnotation(::Il2CppObject* annotation);
    // public T Annotation()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    T Annotation() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::Annotation");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Annotation", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___generic__method);
    }
    // public override System.String ToString()
    // Offset: 0xEE2A9C
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // Newtonsoft.Json.Linq.JToken
  #pragma pack(pop)
  static check_size<sizeof(JToken), 40 + sizeof(::Il2CppObject*)> __Newtonsoft_Json_Linq_JTokenSizeCheck;
  static_assert(sizeof(JToken) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::get_Parent
// Il2CppName: get_Parent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JContainer* (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::get_Parent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "get_Parent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::set_Parent
// Il2CppName: set_Parent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JToken::*)(::Newtonsoft::Json::Linq::JContainer*)>(&Newtonsoft::Json::Linq::JToken::set_Parent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JContainer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "set_Parent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::get_Root
// Il2CppName: get_Root
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JToken* (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::get_Root)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "get_Root", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::get_Type
// Il2CppName: get_Type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JTokenType (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::get_Type)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "get_Type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::get_HasValues
// Il2CppName: get_HasValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::get_HasValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "get_HasValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::get_Next
// Il2CppName: get_Next
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JToken* (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::get_Next)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "get_Next", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::set_Next
// Il2CppName: set_Next
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JToken::*)(::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JToken::set_Next)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "set_Next", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::get_Previous
// Il2CppName: get_Previous
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JToken* (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::get_Previous)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "get_Previous", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::set_Previous
// Il2CppName: set_Previous
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JToken::*)(::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JToken::set_Previous)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "set_Previous", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::get_Path
// Il2CppName: get_Path
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::get_Path)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "get_Path", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::get_First
// Il2CppName: get_First
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JToken* (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::get_First)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "get_First", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::get_Last
// Il2CppName: get_Last
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JToken* (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::get_Last)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "get_Last", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::Newtonsoft_Json_IJsonLineInfo_get_LineNumber
// Il2CppName: Newtonsoft.Json.IJsonLineInfo.get_LineNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::Newtonsoft_Json_IJsonLineInfo_get_LineNumber)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "Newtonsoft.Json.IJsonLineInfo.get_LineNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::Newtonsoft_Json_IJsonLineInfo_get_LinePosition
// Il2CppName: Newtonsoft.Json.IJsonLineInfo.get_LinePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::Newtonsoft_Json_IJsonLineInfo_get_LinePosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "Newtonsoft.Json.IJsonLineInfo.get_LinePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Newtonsoft::Json::Linq::JToken::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::CloneToken
// Il2CppName: CloneToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JToken* (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::CloneToken)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "CloneToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::Children
// Il2CppName: Children
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JEnumerable_1<::Newtonsoft::Json::Linq::JToken*> (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::Children)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "Children", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::Remove)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::Replace
// Il2CppName: Replace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JToken::*)(::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JToken::Replace)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "Replace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::WriteTo
// Il2CppName: WriteTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JToken::*)(::Newtonsoft::Json::JsonWriter*, ::ArrayW<::Newtonsoft::Json::JsonConverter*>)>(&Newtonsoft::Json::Linq::JToken::WriteTo)> {
  static const MethodInfo* get() {
    static auto* writer = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonWriter")->byval_arg;
    static auto* converters = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonConverter"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "WriteTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writer, converters});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Newtonsoft::Json::Linq::JToken::*)(::Newtonsoft::Json::Formatting, ::ArrayW<::Newtonsoft::Json::JsonConverter*>)>(&Newtonsoft::Json::Linq::JToken::ToString)> {
  static const MethodInfo* get() {
    static auto* formatting = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "Formatting")->byval_arg;
    static auto* converters = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonConverter"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{formatting, converters});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::EnsureValue
// Il2CppName: EnsureValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JValue* (*)(::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JToken::EnsureValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "EnsureValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::GetType
// Il2CppName: GetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JToken::GetType)> {
  static const MethodInfo* get() {
    static auto* token = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "GetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{token});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::ValidateToken
// Il2CppName: ValidateToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Newtonsoft::Json::Linq::JToken*, ::ArrayW<::Newtonsoft::Json::Linq::JTokenType>, bool)>(&Newtonsoft::Json::Linq::JToken::ValidateToken)> {
  static const MethodInfo* get() {
    static auto* o = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    static auto* validTypes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JTokenType"), 1)->byval_arg;
    static auto* nullable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "ValidateToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{o, validTypes, nullable});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator bool
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::DateTimeOffset
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<bool>
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator int64_t
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<::System::DateTime>
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<::System::DateTimeOffset>
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<::System::Decimal>
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<double>
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<::Il2CppChar>
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator int
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator int16_t
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator uint16_t
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::Il2CppChar
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator uint8_t
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator int8_t
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<int>
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<int16_t>
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<uint16_t>
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<uint8_t>
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<int8_t>
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::DateTime
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<int64_t>
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<float>
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Decimal
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<uint>
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<uint64_t>
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator double
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator float
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::StringW
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator uint
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator uint64_t
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Guid
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<::System::Guid>
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::TimeSpan
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Nullable_1<::System::TimeSpan>
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::operator ::System::Uri*
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::ToBigInteger
// Il2CppName: ToBigInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Numerics::BigInteger (*)(::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JToken::ToBigInteger)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "ToBigInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::ToBigIntegerNullable
// Il2CppName: ToBigIntegerNullable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::System::Numerics::BigInteger> (*)(::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JToken::ToBigIntegerNullable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "ToBigIntegerNullable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::System_Collections_Generic_IEnumerable$Newtonsoft_Json_Linq_JToken$_GetEnumerator
// Il2CppName: System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::Linq::JToken*>* (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::System_Collections_Generic_IEnumerable$Newtonsoft_Json_Linq_JToken$_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::CreateReader
// Il2CppName: CreateReader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::JsonReader* (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::CreateReader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "CreateReader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::FromObjectInternal
// Il2CppName: FromObjectInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JToken* (*)(::Il2CppObject*, ::Newtonsoft::Json::JsonSerializer*)>(&Newtonsoft::Json::Linq::JToken::FromObjectInternal)> {
  static const MethodInfo* get() {
    static auto* o = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* jsonSerializer = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonSerializer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "FromObjectInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{o, jsonSerializer});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::ToObject
// Il2CppName: ToObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Newtonsoft::Json::Linq::JToken::*)(::System::Type*)>(&Newtonsoft::Json::Linq::JToken::ToObject)> {
  static const MethodInfo* get() {
    static auto* objectType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "ToObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectType});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::ToObject
// Il2CppName: ToObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Newtonsoft::Json::Linq::JToken::*)(::System::Type*, ::Newtonsoft::Json::JsonSerializer*)>(&Newtonsoft::Json::Linq::JToken::ToObject)> {
  static const MethodInfo* get() {
    static auto* objectType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* jsonSerializer = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonSerializer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "ToObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectType, jsonSerializer});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::ReadFrom
// Il2CppName: ReadFrom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JToken* (*)(::Newtonsoft::Json::JsonReader*)>(&Newtonsoft::Json::Linq::JToken::ReadFrom)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "ReadFrom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::ReadFrom
// Il2CppName: ReadFrom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JToken* (*)(::Newtonsoft::Json::JsonReader*, ::Newtonsoft::Json::Linq::JsonLoadSettings*)>(&Newtonsoft::Json::Linq::JToken::ReadFrom)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonReader")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JsonLoadSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "ReadFrom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader, settings});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::SetLineInfo
// Il2CppName: SetLineInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JToken::*)(::Newtonsoft::Json::IJsonLineInfo*, ::Newtonsoft::Json::Linq::JsonLoadSettings*)>(&Newtonsoft::Json::Linq::JToken::SetLineInfo)> {
  static const MethodInfo* get() {
    static auto* lineInfo = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "IJsonLineInfo")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JsonLoadSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "SetLineInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lineInfo, settings});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::SetLineInfo
// Il2CppName: SetLineInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JToken::*)(int, int)>(&Newtonsoft::Json::Linq::JToken::SetLineInfo)> {
  static const MethodInfo* get() {
    static auto* lineNumber = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* linePosition = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "SetLineInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lineNumber, linePosition});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::Newtonsoft_Json_IJsonLineInfo_HasLineInfo
// Il2CppName: Newtonsoft.Json.IJsonLineInfo.HasLineInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::Newtonsoft_Json_IJsonLineInfo_HasLineInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "Newtonsoft.Json.IJsonLineInfo.HasLineInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::GetMetaObject
// Il2CppName: GetMetaObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (Newtonsoft::Json::Linq::JToken::*)(::System::Linq::Expressions::Expression*)>(&Newtonsoft::Json::Linq::JToken::GetMetaObject)> {
  static const MethodInfo* get() {
    static auto* parameter = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions", "Expression")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "GetMetaObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parameter});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::System_Dynamic_IDynamicMetaObjectProvider_GetMetaObject
// Il2CppName: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (Newtonsoft::Json::Linq::JToken::*)(::System::Linq::Expressions::Expression*)>(&Newtonsoft::Json::Linq::JToken::System_Dynamic_IDynamicMetaObjectProvider_GetMetaObject)> {
  static const MethodInfo* get() {
    static auto* parameter = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions", "Expression")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parameter});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::System_ICloneable_Clone
// Il2CppName: System.ICloneable.Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::System_ICloneable_Clone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "System.ICloneable.Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::DeepClone
// Il2CppName: DeepClone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JToken* (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::DeepClone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "DeepClone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::AddAnnotation
// Il2CppName: AddAnnotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JToken::*)(::Il2CppObject*)>(&Newtonsoft::Json::Linq::JToken::AddAnnotation)> {
  static const MethodInfo* get() {
    static auto* annotation = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "AddAnnotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{annotation});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::Annotation
// Il2CppName: Annotation
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Newtonsoft::Json::Linq::JToken::*)()>(&Newtonsoft::Json::Linq::JToken::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JToken*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
