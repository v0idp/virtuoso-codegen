// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Facebook::WitAi::Events
namespace Facebook::WitAi::Events {
  // Forward declaring type: WitResponseEvent
  class WitResponseEvent;
  // Forward declaring type: WitErrorEvent
  class WitErrorEvent;
  // Forward declaring type: WitMicLevelChangedEvent
  class WitMicLevelChangedEvent;
  // Forward declaring type: WitRequestCreatedEvent
  class WitRequestCreatedEvent;
  // Forward declaring type: WitTranscriptionEvent
  class WitTranscriptionEvent;
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEvent
  class UnityEvent;
}
// Completed forward declares
// Type namespace: Facebook.WitAi.Events
namespace Facebook::WitAi::Events {
  // Forward declaring type: VoiceEvents
  class VoiceEvents;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Facebook::WitAi::Events::VoiceEvents);
DEFINE_IL2CPP_ARG_TYPE(::Facebook::WitAi::Events::VoiceEvents*, "Facebook.WitAi.Events", "VoiceEvents");
// Type namespace: Facebook.WitAi.Events
namespace Facebook::WitAi::Events {
  // Size: 0x78
  #pragma pack(push, 1)
  // Autogenerated type: Facebook.WitAi.Events.VoiceEvents
  // [TokenAttribute] Offset: FFFFFFFF
  class VoiceEvents : public ::Il2CppObject {
    public:
    public:
    // [HeaderAttribute] Offset: 0x6C76E0
    // [TooltipAttribute] Offset: 0x6C76E0
    // public Facebook.WitAi.Events.WitResponseEvent OnResponse
    // Size: 0x8
    // Offset: 0x10
    ::Facebook::WitAi::Events::WitResponseEvent* OnResponse;
    // Field size check
    static_assert(sizeof(::Facebook::WitAi::Events::WitResponseEvent*) == 0x8);
    // [TooltipAttribute] Offset: 0x6C7740
    // public Facebook.WitAi.Events.WitErrorEvent OnError
    // Size: 0x8
    // Offset: 0x18
    ::Facebook::WitAi::Events::WitErrorEvent* OnError;
    // Field size check
    static_assert(sizeof(::Facebook::WitAi::Events::WitErrorEvent*) == 0x8);
    // [HeaderAttribute] Offset: 0x6C7778
    // [TooltipAttribute] Offset: 0x6C7778
    // public Facebook.WitAi.Events.WitMicLevelChangedEvent OnMicLevelChanged
    // Size: 0x8
    // Offset: 0x20
    ::Facebook::WitAi::Events::WitMicLevelChangedEvent* OnMicLevelChanged;
    // Field size check
    static_assert(sizeof(::Facebook::WitAi::Events::WitMicLevelChangedEvent*) == 0x8);
    // [TooltipAttribute] Offset: 0x6C77D8
    // [HeaderAttribute] Offset: 0x6C77D8
    // public Facebook.WitAi.Events.WitRequestCreatedEvent OnRequestCreated
    // Size: 0x8
    // Offset: 0x28
    ::Facebook::WitAi::Events::WitRequestCreatedEvent* OnRequestCreated;
    // Field size check
    static_assert(sizeof(::Facebook::WitAi::Events::WitRequestCreatedEvent*) == 0x8);
    // [TooltipAttribute] Offset: 0x6C7838
    // public UnityEngine.Events.UnityEvent OnStartListening
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Events::UnityEvent* OnStartListening;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // [TooltipAttribute] Offset: 0x6C7870
    // public UnityEngine.Events.UnityEvent OnStoppedListening
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Events::UnityEvent* OnStoppedListening;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // [TooltipAttribute] Offset: 0x6C78A8
    // public UnityEngine.Events.UnityEvent OnStoppedListeningDueToInactivity
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Events::UnityEvent* OnStoppedListeningDueToInactivity;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // [TooltipAttribute] Offset: 0x6C78E0
    // public UnityEngine.Events.UnityEvent OnStoppedListeningDueToTimeout
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Events::UnityEvent* OnStoppedListeningDueToTimeout;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // [TooltipAttribute] Offset: 0x6C7918
    // public UnityEngine.Events.UnityEvent OnStoppedListeningDueToDeactivation
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Events::UnityEvent* OnStoppedListeningDueToDeactivation;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // [TooltipAttribute] Offset: 0x6C7950
    // public UnityEngine.Events.UnityEvent OnMicDataSent
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::Events::UnityEvent* OnMicDataSent;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // [TooltipAttribute] Offset: 0x6C7988
    // public UnityEngine.Events.UnityEvent OnMinimumWakeThresholdHit
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::Events::UnityEvent* OnMinimumWakeThresholdHit;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // [HeaderAttribute] Offset: 0x6C79C0
    // [TooltipAttribute] Offset: 0x6C79C0
    // public Facebook.WitAi.Events.WitTranscriptionEvent OnPartialTranscription
    // Size: 0x8
    // Offset: 0x68
    ::Facebook::WitAi::Events::WitTranscriptionEvent* OnPartialTranscription;
    // Field size check
    static_assert(sizeof(::Facebook::WitAi::Events::WitTranscriptionEvent*) == 0x8);
    // [TooltipAttribute] Offset: 0x6C7A20
    // public Facebook.WitAi.Events.WitTranscriptionEvent OnFullTranscription
    // Size: 0x8
    // Offset: 0x70
    ::Facebook::WitAi::Events::WitTranscriptionEvent* OnFullTranscription;
    // Field size check
    static_assert(sizeof(::Facebook::WitAi::Events::WitTranscriptionEvent*) == 0x8);
    public:
    // Get instance field reference: public Facebook.WitAi.Events.WitResponseEvent OnResponse
    [[deprecated]] ::Facebook::WitAi::Events::WitResponseEvent*& dyn_OnResponse();
    // Get instance field reference: public Facebook.WitAi.Events.WitErrorEvent OnError
    [[deprecated]] ::Facebook::WitAi::Events::WitErrorEvent*& dyn_OnError();
    // Get instance field reference: public Facebook.WitAi.Events.WitMicLevelChangedEvent OnMicLevelChanged
    [[deprecated]] ::Facebook::WitAi::Events::WitMicLevelChangedEvent*& dyn_OnMicLevelChanged();
    // Get instance field reference: public Facebook.WitAi.Events.WitRequestCreatedEvent OnRequestCreated
    [[deprecated]] ::Facebook::WitAi::Events::WitRequestCreatedEvent*& dyn_OnRequestCreated();
    // Get instance field reference: public UnityEngine.Events.UnityEvent OnStartListening
    [[deprecated]] ::UnityEngine::Events::UnityEvent*& dyn_OnStartListening();
    // Get instance field reference: public UnityEngine.Events.UnityEvent OnStoppedListening
    [[deprecated]] ::UnityEngine::Events::UnityEvent*& dyn_OnStoppedListening();
    // Get instance field reference: public UnityEngine.Events.UnityEvent OnStoppedListeningDueToInactivity
    [[deprecated]] ::UnityEngine::Events::UnityEvent*& dyn_OnStoppedListeningDueToInactivity();
    // Get instance field reference: public UnityEngine.Events.UnityEvent OnStoppedListeningDueToTimeout
    [[deprecated]] ::UnityEngine::Events::UnityEvent*& dyn_OnStoppedListeningDueToTimeout();
    // Get instance field reference: public UnityEngine.Events.UnityEvent OnStoppedListeningDueToDeactivation
    [[deprecated]] ::UnityEngine::Events::UnityEvent*& dyn_OnStoppedListeningDueToDeactivation();
    // Get instance field reference: public UnityEngine.Events.UnityEvent OnMicDataSent
    [[deprecated]] ::UnityEngine::Events::UnityEvent*& dyn_OnMicDataSent();
    // Get instance field reference: public UnityEngine.Events.UnityEvent OnMinimumWakeThresholdHit
    [[deprecated]] ::UnityEngine::Events::UnityEvent*& dyn_OnMinimumWakeThresholdHit();
    // Get instance field reference: public Facebook.WitAi.Events.WitTranscriptionEvent OnPartialTranscription
    [[deprecated]] ::Facebook::WitAi::Events::WitTranscriptionEvent*& dyn_OnPartialTranscription();
    // Get instance field reference: public Facebook.WitAi.Events.WitTranscriptionEvent OnFullTranscription
    [[deprecated]] ::Facebook::WitAi::Events::WitTranscriptionEvent*& dyn_OnFullTranscription();
    // public System.Void .ctor()
    // Offset: 0x1670728
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VoiceEvents* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Facebook::WitAi::Events::VoiceEvents::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VoiceEvents*, creationType>()));
    }
  }; // Facebook.WitAi.Events.VoiceEvents
  #pragma pack(pop)
  static check_size<sizeof(VoiceEvents), 112 + sizeof(::Facebook::WitAi::Events::WitTranscriptionEvent*)> __Facebook_WitAi_Events_VoiceEventsSizeCheck;
  static_assert(sizeof(VoiceEvents) == 0x78);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Facebook::WitAi::Events::VoiceEvents::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
