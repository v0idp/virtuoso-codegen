// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Facebook::WitAi::Lib
namespace Facebook::WitAi::Lib {
  // Forward declaring type: WitResponseNode
  class WitResponseNode;
}
// Completed forward declares
// Type namespace: Facebook.WitAi.Lib
namespace Facebook::WitAi::Lib {
  // Forward declaring type: WitResponseJson
  class WitResponseJson;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Facebook::WitAi::Lib::WitResponseJson);
DEFINE_IL2CPP_ARG_TYPE(::Facebook::WitAi::Lib::WitResponseJson*, "Facebook.WitAi.Lib", "WitResponseJson");
// Type namespace: Facebook.WitAi.Lib
namespace Facebook::WitAi::Lib {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Facebook.WitAi.Lib.WitResponseJson
  // [TokenAttribute] Offset: FFFFFFFF
  class WitResponseJson : public ::Il2CppObject {
    public:
    // static public Facebook.WitAi.Lib.WitResponseNode Parse(System.String aJSON)
    // Offset: 0x1676CF0
    static ::Facebook::WitAi::Lib::WitResponseNode* Parse(::StringW aJSON);
  }; // Facebook.WitAi.Lib.WitResponseJson
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseJson::Parse
// Il2CppName: Parse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Lib::WitResponseNode* (*)(::StringW)>(&Facebook::WitAi::Lib::WitResponseJson::Parse)> {
  static const MethodInfo* get() {
    static auto* aJSON = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseJson*), "Parse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aJSON});
  }
};
