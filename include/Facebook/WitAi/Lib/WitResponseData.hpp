// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Facebook.WitAi.Lib.WitResponseNode
#include "Facebook/WitAi/Lib/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: BinaryWriter
  class BinaryWriter;
}
// Completed forward declares
// Type namespace: Facebook.WitAi.Lib
namespace Facebook::WitAi::Lib {
  // Forward declaring type: WitResponseData
  class WitResponseData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Facebook::WitAi::Lib::WitResponseData);
DEFINE_IL2CPP_ARG_TYPE(::Facebook::WitAi::Lib::WitResponseData*, "Facebook.WitAi.Lib", "WitResponseData");
// Type namespace: Facebook.WitAi.Lib
namespace Facebook::WitAi::Lib {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Facebook.WitAi.Lib.WitResponseData
  // [TokenAttribute] Offset: FFFFFFFF
  class WitResponseData : public ::Facebook::WitAi::Lib::WitResponseNode {
    public:
    public:
    // private System.String m_Data
    // Size: 0x8
    // Offset: 0x10
    ::StringW m_Data;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating conversion operator: operator ::StringW
    constexpr operator ::StringW() const noexcept {
      return m_Data;
    }
    // Get instance field reference: private System.String m_Data
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Data();
    // public System.Void .ctor(System.String aData)
    // Offset: 0x1674FA4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WitResponseData* New_ctor(::StringW aData) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Facebook::WitAi::Lib::WitResponseData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WitResponseData*, creationType>(aData)));
    }
    // public System.Void .ctor(System.Single aData)
    // Offset: 0x1678F8C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WitResponseData* New_ctor(float aData) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Facebook::WitAi::Lib::WitResponseData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WitResponseData*, creationType>(aData)));
    }
    // public System.Void .ctor(System.Double aData)
    // Offset: 0x1678FD0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WitResponseData* New_ctor(double aData) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Facebook::WitAi::Lib::WitResponseData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WitResponseData*, creationType>(aData)));
    }
    // public System.Void .ctor(System.Boolean aData)
    // Offset: 0x1679014
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WitResponseData* New_ctor(bool aData) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Facebook::WitAi::Lib::WitResponseData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WitResponseData*, creationType>(aData)));
    }
    // public System.Void .ctor(System.Int32 aData)
    // Offset: 0x1679050
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WitResponseData* New_ctor(int aData) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Facebook::WitAi::Lib::WitResponseData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WitResponseData*, creationType>(aData)));
    }
    // public override System.String get_Value()
    // Offset: 0x1678F7C
    // Implemented from: Facebook.WitAi.Lib.WitResponseNode
    // Base method: System.String WitResponseNode::get_Value()
    ::StringW get_Value();
    // public override System.Void set_Value(System.String value)
    // Offset: 0x1678F84
    // Implemented from: Facebook.WitAi.Lib.WitResponseNode
    // Base method: System.Void WitResponseNode::set_Value(System.String value)
    void set_Value(::StringW value);
    // public override System.String ToString()
    // Offset: 0x167908C
    // Implemented from: Facebook.WitAi.Lib.WitResponseNode
    // Base method: System.String WitResponseNode::ToString()
    ::StringW ToString();
    // public override System.String ToString(System.String aPrefix)
    // Offset: 0x16790E8
    // Implemented from: Facebook.WitAi.Lib.WitResponseNode
    // Base method: System.String WitResponseNode::ToString(System.String aPrefix)
    ::StringW ToString(::StringW aPrefix);
    // public override System.Void Serialize(System.IO.BinaryWriter aWriter)
    // Offset: 0x1679144
    // Implemented from: Facebook.WitAi.Lib.WitResponseNode
    // Base method: System.Void WitResponseNode::Serialize(System.IO.BinaryWriter aWriter)
    void Serialize(::System::IO::BinaryWriter* aWriter);
  }; // Facebook.WitAi.Lib.WitResponseData
  #pragma pack(pop)
  static check_size<sizeof(WitResponseData), 16 + sizeof(::StringW)> __Facebook_WitAi_Lib_WitResponseDataSizeCheck;
  static_assert(sizeof(WitResponseData) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseData::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Facebook::WitAi::Lib::WitResponseData::*)()>(&Facebook::WitAi::Lib::WitResponseData::get_Value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseData*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseData::set_Value
// Il2CppName: set_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Facebook::WitAi::Lib::WitResponseData::*)(::StringW)>(&Facebook::WitAi::Lib::WitResponseData::set_Value)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseData*), "set_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseData::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Facebook::WitAi::Lib::WitResponseData::*)()>(&Facebook::WitAi::Lib::WitResponseData::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseData*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseData::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Facebook::WitAi::Lib::WitResponseData::*)(::StringW)>(&Facebook::WitAi::Lib::WitResponseData::ToString)> {
  static const MethodInfo* get() {
    static auto* aPrefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseData*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aPrefix});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseData::Serialize
// Il2CppName: Serialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Facebook::WitAi::Lib::WitResponseData::*)(::System::IO::BinaryWriter*)>(&Facebook::WitAi::Lib::WitResponseData::Serialize)> {
  static const MethodInfo* get() {
    static auto* aWriter = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseData*), "Serialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aWriter});
  }
};
