// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Facebook::WitAi::Lib
namespace Facebook::WitAi::Lib {
  // Forward declaring type: WitResponseArray
  class WitResponseArray;
  // Forward declaring type: WitResponseClass
  class WitResponseClass;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: BinaryWriter
  class BinaryWriter;
  // Forward declaring type: Stream
  class Stream;
  // Forward declaring type: BinaryReader
  class BinaryReader;
}
// Completed forward declares
// Type namespace: Facebook.WitAi.Lib
namespace Facebook::WitAi::Lib {
  // Forward declaring type: WitResponseNode
  class WitResponseNode;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Facebook::WitAi::Lib::WitResponseNode);
DEFINE_IL2CPP_ARG_TYPE(::Facebook::WitAi::Lib::WitResponseNode*, "Facebook.WitAi.Lib", "WitResponseNode");
// Type namespace: Facebook.WitAi.Lib
namespace Facebook::WitAi::Lib {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Facebook.WitAi.Lib.WitResponseNode
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 6C73D0
  class WitResponseNode : public ::Il2CppObject {
    public:
    // Nested type: ::Facebook::WitAi::Lib::WitResponseNode::$get_Childs$d__17
    class $get_Childs$d__17;
    // Nested type: ::Facebook::WitAi::Lib::WitResponseNode::$get_DeepChilds$d__19
    class $get_DeepChilds$d__19;
    // public Facebook.WitAi.Lib.WitResponseNode get_Item(System.Int32 aIndex)
    // Offset: 0x167B550
    ::Facebook::WitAi::Lib::WitResponseNode* get_Item(int aIndex);
    // public System.Void set_Item(System.Int32 aIndex, Facebook.WitAi.Lib.WitResponseNode value)
    // Offset: 0x167B558
    void set_Item(int aIndex, ::Facebook::WitAi::Lib::WitResponseNode* value);
    // public Facebook.WitAi.Lib.WitResponseNode get_Item(System.String aKey)
    // Offset: 0x167B55C
    ::Facebook::WitAi::Lib::WitResponseNode* get_Item(::StringW aKey);
    // public System.Void set_Item(System.String aKey, Facebook.WitAi.Lib.WitResponseNode value)
    // Offset: 0x167B564
    void set_Item(::StringW aKey, ::Facebook::WitAi::Lib::WitResponseNode* value);
    // public System.String get_Value()
    // Offset: 0x167B568
    ::StringW get_Value();
    // public System.Void set_Value(System.String value)
    // Offset: 0x167B5AC
    void set_Value(::StringW value);
    // public System.Int32 get_Count()
    // Offset: 0x167B5B0
    int get_Count();
    // public System.Collections.Generic.IEnumerable`1<Facebook.WitAi.Lib.WitResponseNode> get_Childs()
    // Offset: 0x167B634
    ::System::Collections::Generic::IEnumerable_1<::Facebook::WitAi::Lib::WitResponseNode*>* get_Childs();
    // public System.Collections.Generic.IEnumerable`1<Facebook.WitAi.Lib.WitResponseNode> get_DeepChilds()
    // Offset: 0x167B6D8
    ::System::Collections::Generic::IEnumerable_1<::Facebook::WitAi::Lib::WitResponseNode*>* get_DeepChilds();
    // public System.Int32 get_AsInt()
    // Offset: 0x167B814
    int get_AsInt();
    // public System.Void set_AsInt(System.Int32 value)
    // Offset: 0x167B854
    void set_AsInt(int value);
    // public System.Single get_AsFloat()
    // Offset: 0x167B894
    float get_AsFloat();
    // public System.Void set_AsFloat(System.Single value)
    // Offset: 0x167B8D8
    void set_AsFloat(float value);
    // public System.Double get_AsDouble()
    // Offset: 0x167B918
    double get_AsDouble();
    // public System.Void set_AsDouble(System.Double value)
    // Offset: 0x167B9B8
    void set_AsDouble(double value);
    // public System.Boolean get_AsBool()
    // Offset: 0x167B9F8
    bool get_AsBool();
    // public System.Void set_AsBool(System.Boolean value)
    // Offset: 0x167BABC
    void set_AsBool(bool value);
    // public Facebook.WitAi.Lib.WitResponseArray get_AsArray()
    // Offset: 0x167BB40
    ::Facebook::WitAi::Lib::WitResponseArray* get_AsArray();
    // public System.String[] get_AsStringArray()
    // Offset: 0x167BBBC
    ::ArrayW<::StringW> get_AsStringArray();
    // public Facebook.WitAi.Lib.WitResponseClass get_AsObject()
    // Offset: 0x167BD14
    ::Facebook::WitAi::Lib::WitResponseClass* get_AsObject();
    // public System.Void .ctor()
    // Offset: 0x1677920
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WitResponseNode* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Facebook::WitAi::Lib::WitResponseNode::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WitResponseNode*, creationType>()));
    }
    // public System.Void Add(System.String aKey, Facebook.WitAi.Lib.WitResponseNode aItem)
    // Offset: 0x167B54C
    void Add(::StringW aKey, ::Facebook::WitAi::Lib::WitResponseNode* aItem);
    // public System.Void Add(Facebook.WitAi.Lib.WitResponseNode aItem)
    // Offset: 0x167B5B8
    void Add(::Facebook::WitAi::Lib::WitResponseNode* aItem);
    // public Facebook.WitAi.Lib.WitResponseNode Remove(System.String aKey)
    // Offset: 0x167B61C
    ::Facebook::WitAi::Lib::WitResponseNode* Remove(::StringW aKey);
    // public Facebook.WitAi.Lib.WitResponseNode Remove(System.Int32 aIndex)
    // Offset: 0x167B624
    ::Facebook::WitAi::Lib::WitResponseNode* Remove(int aIndex);
    // public Facebook.WitAi.Lib.WitResponseNode Remove(Facebook.WitAi.Lib.WitResponseNode aNode)
    // Offset: 0x167B62C
    ::Facebook::WitAi::Lib::WitResponseNode* Remove(::Facebook::WitAi::Lib::WitResponseNode* aNode);
    // public System.String ToString(System.String aPrefix)
    // Offset: 0x167B7D0
    ::StringW ToString(::StringW aPrefix);
    // static System.String Escape(System.String aText)
    // Offset: 0x167875C
    static ::StringW Escape(::StringW aText);
    // static public Facebook.WitAi.Lib.WitResponseNode Parse(System.String aJSON)
    // Offset: 0x16797A8
    static ::Facebook::WitAi::Lib::WitResponseNode* Parse(::StringW aJSON);
    // public System.Void Serialize(System.IO.BinaryWriter aWriter)
    // Offset: 0x167BE90
    void Serialize(::System::IO::BinaryWriter* aWriter);
    // public System.Void SaveToStream(System.IO.Stream aData)
    // Offset: 0x167BE94
    void SaveToStream(::System::IO::Stream* aData);
    // public System.Void SaveToCompressedStream(System.IO.Stream aData)
    // Offset: 0x167BF10
    void SaveToCompressedStream(::System::IO::Stream* aData);
    // public System.Void SaveToCompressedFile(System.String aFileName)
    // Offset: 0x167BF64
    void SaveToCompressedFile(::StringW aFileName);
    // public System.String SaveToCompressedBase64()
    // Offset: 0x167BFB8
    ::StringW SaveToCompressedBase64();
    // public System.Void SaveToFile(System.String aFileName)
    // Offset: 0x167C00C
    void SaveToFile(::StringW aFileName);
    // public System.String SaveToBase64()
    // Offset: 0x167C19C
    ::StringW SaveToBase64();
    // static public Facebook.WitAi.Lib.WitResponseNode Deserialize(System.IO.BinaryReader aReader)
    // Offset: 0x167C370
    static ::Facebook::WitAi::Lib::WitResponseNode* Deserialize(::System::IO::BinaryReader* aReader);
    // static public Facebook.WitAi.Lib.WitResponseNode LoadFromCompressedFile(System.String aFileName)
    // Offset: 0x167C738
    static ::Facebook::WitAi::Lib::WitResponseNode* LoadFromCompressedFile(::StringW aFileName);
    // static public Facebook.WitAi.Lib.WitResponseNode LoadFromCompressedStream(System.IO.Stream aData)
    // Offset: 0x167C78C
    static ::Facebook::WitAi::Lib::WitResponseNode* LoadFromCompressedStream(::System::IO::Stream* aData);
    // static public Facebook.WitAi.Lib.WitResponseNode LoadFromCompressedBase64(System.String aBase64)
    // Offset: 0x167C7E0
    static ::Facebook::WitAi::Lib::WitResponseNode* LoadFromCompressedBase64(::StringW aBase64);
    // static public Facebook.WitAi.Lib.WitResponseNode LoadFromStream(System.IO.Stream aData)
    // Offset: 0x167C834
    static ::Facebook::WitAi::Lib::WitResponseNode* LoadFromStream(::System::IO::Stream* aData);
    // static public Facebook.WitAi.Lib.WitResponseNode LoadFromFile(System.String aFileName)
    // Offset: 0x167C994
    static ::Facebook::WitAi::Lib::WitResponseNode* LoadFromFile(::StringW aFileName);
    // static public Facebook.WitAi.Lib.WitResponseNode LoadFromBase64(System.String aBase64)
    // Offset: 0x167CAD4
    static ::Facebook::WitAi::Lib::WitResponseNode* LoadFromBase64(::StringW aBase64);
    // public override System.String ToString()
    // Offset: 0x167B78C
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x167BE84
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x167A274
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
  }; // Facebook.WitAi.Lib.WitResponseNode
  #pragma pack(pop)
  // static public System.Boolean op_Equality(Facebook.WitAi.Lib.WitResponseNode a, System.Object b)
  // Offset: 0x167BDF0
  bool operator ==(::Facebook::WitAi::Lib::WitResponseNode* a, ::Il2CppObject& b);
  // static public System.Boolean op_Inequality(Facebook.WitAi.Lib.WitResponseNode a, System.Object b)
  // Offset: 0x166FDA0
  bool operator !=(::Facebook::WitAi::Lib::WitResponseNode* a, ::Il2CppObject& b);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Lib::WitResponseNode* (Facebook::WitAi::Lib::WitResponseNode::*)(int)>(&Facebook::WitAi::Lib::WitResponseNode::get_Item)> {
  static const MethodInfo* get() {
    static auto* aIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aIndex});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Facebook::WitAi::Lib::WitResponseNode::*)(int, ::Facebook::WitAi::Lib::WitResponseNode*)>(&Facebook::WitAi::Lib::WitResponseNode::set_Item)> {
  static const MethodInfo* get() {
    static auto* aIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Lib", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aIndex, value});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Lib::WitResponseNode* (Facebook::WitAi::Lib::WitResponseNode::*)(::StringW)>(&Facebook::WitAi::Lib::WitResponseNode::get_Item)> {
  static const MethodInfo* get() {
    static auto* aKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aKey});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Facebook::WitAi::Lib::WitResponseNode::*)(::StringW, ::Facebook::WitAi::Lib::WitResponseNode*)>(&Facebook::WitAi::Lib::WitResponseNode::set_Item)> {
  static const MethodInfo* get() {
    static auto* aKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Lib", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aKey, value});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Facebook::WitAi::Lib::WitResponseNode::*)()>(&Facebook::WitAi::Lib::WitResponseNode::get_Value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::set_Value
// Il2CppName: set_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Facebook::WitAi::Lib::WitResponseNode::*)(::StringW)>(&Facebook::WitAi::Lib::WitResponseNode::set_Value)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "set_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Facebook::WitAi::Lib::WitResponseNode::*)()>(&Facebook::WitAi::Lib::WitResponseNode::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::get_Childs
// Il2CppName: get_Childs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::Facebook::WitAi::Lib::WitResponseNode*>* (Facebook::WitAi::Lib::WitResponseNode::*)()>(&Facebook::WitAi::Lib::WitResponseNode::get_Childs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "get_Childs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::get_DeepChilds
// Il2CppName: get_DeepChilds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::Facebook::WitAi::Lib::WitResponseNode*>* (Facebook::WitAi::Lib::WitResponseNode::*)()>(&Facebook::WitAi::Lib::WitResponseNode::get_DeepChilds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "get_DeepChilds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::get_AsInt
// Il2CppName: get_AsInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Facebook::WitAi::Lib::WitResponseNode::*)()>(&Facebook::WitAi::Lib::WitResponseNode::get_AsInt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "get_AsInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::set_AsInt
// Il2CppName: set_AsInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Facebook::WitAi::Lib::WitResponseNode::*)(int)>(&Facebook::WitAi::Lib::WitResponseNode::set_AsInt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "set_AsInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::get_AsFloat
// Il2CppName: get_AsFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Facebook::WitAi::Lib::WitResponseNode::*)()>(&Facebook::WitAi::Lib::WitResponseNode::get_AsFloat)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "get_AsFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::set_AsFloat
// Il2CppName: set_AsFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Facebook::WitAi::Lib::WitResponseNode::*)(float)>(&Facebook::WitAi::Lib::WitResponseNode::set_AsFloat)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "set_AsFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::get_AsDouble
// Il2CppName: get_AsDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (Facebook::WitAi::Lib::WitResponseNode::*)()>(&Facebook::WitAi::Lib::WitResponseNode::get_AsDouble)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "get_AsDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::set_AsDouble
// Il2CppName: set_AsDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Facebook::WitAi::Lib::WitResponseNode::*)(double)>(&Facebook::WitAi::Lib::WitResponseNode::set_AsDouble)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "set_AsDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::get_AsBool
// Il2CppName: get_AsBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Facebook::WitAi::Lib::WitResponseNode::*)()>(&Facebook::WitAi::Lib::WitResponseNode::get_AsBool)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "get_AsBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::set_AsBool
// Il2CppName: set_AsBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Facebook::WitAi::Lib::WitResponseNode::*)(bool)>(&Facebook::WitAi::Lib::WitResponseNode::set_AsBool)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "set_AsBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::get_AsArray
// Il2CppName: get_AsArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Lib::WitResponseArray* (Facebook::WitAi::Lib::WitResponseNode::*)()>(&Facebook::WitAi::Lib::WitResponseNode::get_AsArray)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "get_AsArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::get_AsStringArray
// Il2CppName: get_AsStringArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (Facebook::WitAi::Lib::WitResponseNode::*)()>(&Facebook::WitAi::Lib::WitResponseNode::get_AsStringArray)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "get_AsStringArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::get_AsObject
// Il2CppName: get_AsObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Lib::WitResponseClass* (Facebook::WitAi::Lib::WitResponseNode::*)()>(&Facebook::WitAi::Lib::WitResponseNode::get_AsObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "get_AsObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Facebook::WitAi::Lib::WitResponseNode::*)(::StringW, ::Facebook::WitAi::Lib::WitResponseNode*)>(&Facebook::WitAi::Lib::WitResponseNode::Add)> {
  static const MethodInfo* get() {
    static auto* aKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* aItem = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Lib", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aKey, aItem});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Facebook::WitAi::Lib::WitResponseNode::*)(::Facebook::WitAi::Lib::WitResponseNode*)>(&Facebook::WitAi::Lib::WitResponseNode::Add)> {
  static const MethodInfo* get() {
    static auto* aItem = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Lib", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aItem});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Lib::WitResponseNode* (Facebook::WitAi::Lib::WitResponseNode::*)(::StringW)>(&Facebook::WitAi::Lib::WitResponseNode::Remove)> {
  static const MethodInfo* get() {
    static auto* aKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aKey});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Lib::WitResponseNode* (Facebook::WitAi::Lib::WitResponseNode::*)(int)>(&Facebook::WitAi::Lib::WitResponseNode::Remove)> {
  static const MethodInfo* get() {
    static auto* aIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aIndex});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Lib::WitResponseNode* (Facebook::WitAi::Lib::WitResponseNode::*)(::Facebook::WitAi::Lib::WitResponseNode*)>(&Facebook::WitAi::Lib::WitResponseNode::Remove)> {
  static const MethodInfo* get() {
    static auto* aNode = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Lib", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aNode});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Facebook::WitAi::Lib::WitResponseNode::*)(::StringW)>(&Facebook::WitAi::Lib::WitResponseNode::ToString)> {
  static const MethodInfo* get() {
    static auto* aPrefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aPrefix});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::Escape
// Il2CppName: Escape
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&Facebook::WitAi::Lib::WitResponseNode::Escape)> {
  static const MethodInfo* get() {
    static auto* aText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "Escape", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aText});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::Parse
// Il2CppName: Parse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Lib::WitResponseNode* (*)(::StringW)>(&Facebook::WitAi::Lib::WitResponseNode::Parse)> {
  static const MethodInfo* get() {
    static auto* aJSON = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "Parse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aJSON});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::Serialize
// Il2CppName: Serialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Facebook::WitAi::Lib::WitResponseNode::*)(::System::IO::BinaryWriter*)>(&Facebook::WitAi::Lib::WitResponseNode::Serialize)> {
  static const MethodInfo* get() {
    static auto* aWriter = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "Serialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aWriter});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::SaveToStream
// Il2CppName: SaveToStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Facebook::WitAi::Lib::WitResponseNode::*)(::System::IO::Stream*)>(&Facebook::WitAi::Lib::WitResponseNode::SaveToStream)> {
  static const MethodInfo* get() {
    static auto* aData = &::il2cpp_utils::GetClassFromName("System.IO", "Stream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "SaveToStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aData});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::SaveToCompressedStream
// Il2CppName: SaveToCompressedStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Facebook::WitAi::Lib::WitResponseNode::*)(::System::IO::Stream*)>(&Facebook::WitAi::Lib::WitResponseNode::SaveToCompressedStream)> {
  static const MethodInfo* get() {
    static auto* aData = &::il2cpp_utils::GetClassFromName("System.IO", "Stream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "SaveToCompressedStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aData});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::SaveToCompressedFile
// Il2CppName: SaveToCompressedFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Facebook::WitAi::Lib::WitResponseNode::*)(::StringW)>(&Facebook::WitAi::Lib::WitResponseNode::SaveToCompressedFile)> {
  static const MethodInfo* get() {
    static auto* aFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "SaveToCompressedFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aFileName});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::SaveToCompressedBase64
// Il2CppName: SaveToCompressedBase64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Facebook::WitAi::Lib::WitResponseNode::*)()>(&Facebook::WitAi::Lib::WitResponseNode::SaveToCompressedBase64)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "SaveToCompressedBase64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::SaveToFile
// Il2CppName: SaveToFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Facebook::WitAi::Lib::WitResponseNode::*)(::StringW)>(&Facebook::WitAi::Lib::WitResponseNode::SaveToFile)> {
  static const MethodInfo* get() {
    static auto* aFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "SaveToFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aFileName});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::SaveToBase64
// Il2CppName: SaveToBase64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Facebook::WitAi::Lib::WitResponseNode::*)()>(&Facebook::WitAi::Lib::WitResponseNode::SaveToBase64)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "SaveToBase64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::Deserialize
// Il2CppName: Deserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Lib::WitResponseNode* (*)(::System::IO::BinaryReader*)>(&Facebook::WitAi::Lib::WitResponseNode::Deserialize)> {
  static const MethodInfo* get() {
    static auto* aReader = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "Deserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aReader});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::LoadFromCompressedFile
// Il2CppName: LoadFromCompressedFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Lib::WitResponseNode* (*)(::StringW)>(&Facebook::WitAi::Lib::WitResponseNode::LoadFromCompressedFile)> {
  static const MethodInfo* get() {
    static auto* aFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "LoadFromCompressedFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aFileName});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::LoadFromCompressedStream
// Il2CppName: LoadFromCompressedStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Lib::WitResponseNode* (*)(::System::IO::Stream*)>(&Facebook::WitAi::Lib::WitResponseNode::LoadFromCompressedStream)> {
  static const MethodInfo* get() {
    static auto* aData = &::il2cpp_utils::GetClassFromName("System.IO", "Stream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "LoadFromCompressedStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aData});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::LoadFromCompressedBase64
// Il2CppName: LoadFromCompressedBase64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Lib::WitResponseNode* (*)(::StringW)>(&Facebook::WitAi::Lib::WitResponseNode::LoadFromCompressedBase64)> {
  static const MethodInfo* get() {
    static auto* aBase64 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "LoadFromCompressedBase64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aBase64});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::LoadFromStream
// Il2CppName: LoadFromStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Lib::WitResponseNode* (*)(::System::IO::Stream*)>(&Facebook::WitAi::Lib::WitResponseNode::LoadFromStream)> {
  static const MethodInfo* get() {
    static auto* aData = &::il2cpp_utils::GetClassFromName("System.IO", "Stream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "LoadFromStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aData});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::LoadFromFile
// Il2CppName: LoadFromFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Lib::WitResponseNode* (*)(::StringW)>(&Facebook::WitAi::Lib::WitResponseNode::LoadFromFile)> {
  static const MethodInfo* get() {
    static auto* aFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "LoadFromFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aFileName});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::LoadFromBase64
// Il2CppName: LoadFromBase64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Lib::WitResponseNode* (*)(::StringW)>(&Facebook::WitAi::Lib::WitResponseNode::LoadFromBase64)> {
  static const MethodInfo* get() {
    static auto* aBase64 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "LoadFromBase64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aBase64});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Facebook::WitAi::Lib::WitResponseNode::*)()>(&Facebook::WitAi::Lib::WitResponseNode::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Facebook::WitAi::Lib::WitResponseNode::*)(::Il2CppObject*)>(&Facebook::WitAi::Lib::WitResponseNode::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Facebook::WitAi::Lib::WitResponseNode::*)()>(&Facebook::WitAi::Lib::WitResponseNode::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::Lib::WitResponseNode*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::operator ==
// Il2CppName: op_Equality
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Facebook::WitAi::Lib::WitResponseNode::operator !=
// Il2CppName: op_Inequality
// Cannot perform method pointer template specialization from operators!
