// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Facebook.WitAi.WitRequest
#include "Facebook/WitAi/WitRequest.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Facebook::WitAi::Data::Configuration
namespace Facebook::WitAi::Data::Configuration {
  // Forward declaring type: WitConfiguration
  class WitConfiguration;
}
// Forward declaring namespace: Facebook::WitAi::Configuration
namespace Facebook::WitAi::Configuration {
  // Forward declaring type: WitRequestOptions
  class WitRequestOptions;
}
// Completed forward declares
// Type namespace: Facebook.WitAi
namespace Facebook::WitAi {
  // Forward declaring type: WitRequestFactory
  class WitRequestFactory;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Facebook::WitAi::WitRequestFactory);
DEFINE_IL2CPP_ARG_TYPE(::Facebook::WitAi::WitRequestFactory*, "Facebook.WitAi", "WitRequestFactory");
// Type namespace: Facebook.WitAi
namespace Facebook::WitAi {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Facebook.WitAi.WitRequestFactory
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class WitRequestFactory : public ::Il2CppObject {
    public:
    // static private Facebook.WitAi.WitRequest/Facebook.WitAi.QueryParam QueryParam(System.String key, System.String value)
    // Offset: 0x1676DFC
    static ::Facebook::WitAi::WitRequest::QueryParam* QueryParam(::StringW key, ::StringW value);
    // static public Facebook.WitAi.WitRequest MessageRequest(Facebook.WitAi.Data.Configuration.WitConfiguration config, System.String query, Facebook.WitAi.Configuration.WitRequestOptions requestOptions)
    // Offset: 0x16739B0
    static ::Facebook::WitAi::WitRequest* MessageRequest(::Facebook::WitAi::Data::Configuration::WitConfiguration* config, ::StringW query, ::Facebook::WitAi::Configuration::WitRequestOptions* requestOptions);
    // static public Facebook.WitAi.WitRequest SpeechRequest(Facebook.WitAi.Data.Configuration.WitConfiguration config, Facebook.WitAi.Configuration.WitRequestOptions requestOptions)
    // Offset: 0x1673128
    static ::Facebook::WitAi::WitRequest* SpeechRequest(::Facebook::WitAi::Data::Configuration::WitConfiguration* config, ::Facebook::WitAi::Configuration::WitRequestOptions* requestOptions);
  }; // Facebook.WitAi.WitRequestFactory
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Facebook::WitAi::WitRequestFactory::QueryParam
// Il2CppName: QueryParam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::WitRequest::QueryParam* (*)(::StringW, ::StringW)>(&Facebook::WitAi::WitRequestFactory::QueryParam)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::WitRequestFactory*), "QueryParam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::WitRequestFactory::MessageRequest
// Il2CppName: MessageRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::WitRequest* (*)(::Facebook::WitAi::Data::Configuration::WitConfiguration*, ::StringW, ::Facebook::WitAi::Configuration::WitRequestOptions*)>(&Facebook::WitAi::WitRequestFactory::MessageRequest)> {
  static const MethodInfo* get() {
    static auto* config = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Data.Configuration", "WitConfiguration")->byval_arg;
    static auto* query = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* requestOptions = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Configuration", "WitRequestOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::WitRequestFactory*), "MessageRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{config, query, requestOptions});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::WitRequestFactory::SpeechRequest
// Il2CppName: SpeechRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::WitRequest* (*)(::Facebook::WitAi::Data::Configuration::WitConfiguration*, ::Facebook::WitAi::Configuration::WitRequestOptions*)>(&Facebook::WitAi::WitRequestFactory::SpeechRequest)> {
  static const MethodInfo* get() {
    static auto* config = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Data.Configuration", "WitConfiguration")->byval_arg;
    static auto* requestOptions = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Configuration", "WitRequestOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::WitRequestFactory*), "SpeechRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{config, requestOptions});
  }
};
