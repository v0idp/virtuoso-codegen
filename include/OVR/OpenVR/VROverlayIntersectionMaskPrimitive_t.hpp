// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType
#include "OVR/OpenVR/EVROverlayIntersectionMaskPrimitiveType.hpp"
// Including type: OVR.OpenVR.VROverlayIntersectionMaskPrimitive_Data_t
#include "OVR/OpenVR/VROverlayIntersectionMaskPrimitive_Data_t.hpp"
// Completed includes
// Type namespace: OVR.OpenVR
namespace OVR::OpenVR {
  // Forward declaring type: VROverlayIntersectionMaskPrimitive_t
  struct VROverlayIntersectionMaskPrimitive_t;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::OVR::OpenVR::VROverlayIntersectionMaskPrimitive_t, "OVR.OpenVR", "VROverlayIntersectionMaskPrimitive_t");
// Type namespace: OVR.OpenVR
namespace OVR::OpenVR {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: OVR.OpenVR.VROverlayIntersectionMaskPrimitive_t
  // [TokenAttribute] Offset: FFFFFFFF
  struct VROverlayIntersectionMaskPrimitive_t/*, public ::System::ValueType*/ {
    public:
    public:
    // public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType
    // Size: 0x4
    // Offset: 0x0
    ::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;
    // Field size check
    static_assert(sizeof(::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType) == 0x4);
    // public OVR.OpenVR.VROverlayIntersectionMaskPrimitive_Data_t m_Primitive
    // Size: 0xFFFFFFFF
    // Offset: 0x4
    ::OVR::OpenVR::VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
    public:
    // Creating value type constructor for type: VROverlayIntersectionMaskPrimitive_t
    constexpr VROverlayIntersectionMaskPrimitive_t(::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType_ = {}, ::OVR::OpenVR::VROverlayIntersectionMaskPrimitive_Data_t m_Primitive_ = {}) noexcept : m_nPrimitiveType{m_nPrimitiveType_}, m_Primitive{m_Primitive_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType
    [[deprecated("Use field access instead!")]] ::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType& dyn_m_nPrimitiveType();
    // Get instance field reference: public OVR.OpenVR.VROverlayIntersectionMaskPrimitive_Data_t m_Primitive
    [[deprecated("Use field access instead!")]] ::OVR::OpenVR::VROverlayIntersectionMaskPrimitive_Data_t& dyn_m_Primitive();
  }; // OVR.OpenVR.VROverlayIntersectionMaskPrimitive_t
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
