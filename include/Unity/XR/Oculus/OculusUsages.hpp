// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.InputFeatureUsage`1
#include "UnityEngine/XR/InputFeatureUsage_1.hpp"
// Completed includes
// Type namespace: Unity.XR.Oculus
namespace Unity::XR::Oculus {
  // Forward declaring type: OculusUsages
  class OculusUsages;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Unity::XR::Oculus::OculusUsages);
DEFINE_IL2CPP_ARG_TYPE(::Unity::XR::Oculus::OculusUsages*, "Unity.XR.Oculus", "OculusUsages");
// Type namespace: Unity.XR.Oculus
namespace Unity::XR::Oculus {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Unity.XR.Oculus.OculusUsages
  // [TokenAttribute] Offset: FFFFFFFF
  class OculusUsages : public ::Il2CppObject {
    public:
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> volumeUp
    static ::UnityEngine::XR::InputFeatureUsage_1<bool> _get_volumeUp();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> volumeUp
    static void _set_volumeUp(::UnityEngine::XR::InputFeatureUsage_1<bool> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> volumeDown
    static ::UnityEngine::XR::InputFeatureUsage_1<bool> _get_volumeDown();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> volumeDown
    static void _set_volumeDown(::UnityEngine::XR::InputFeatureUsage_1<bool> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> thumbrest
    static ::UnityEngine::XR::InputFeatureUsage_1<bool> _get_thumbrest();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> thumbrest
    static void _set_thumbrest(::UnityEngine::XR::InputFeatureUsage_1<bool> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> indexTouch
    static ::UnityEngine::XR::InputFeatureUsage_1<bool> _get_indexTouch();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> indexTouch
    static void _set_indexTouch(::UnityEngine::XR::InputFeatureUsage_1<bool> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> thumbTouch
    static ::UnityEngine::XR::InputFeatureUsage_1<bool> _get_thumbTouch();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> thumbTouch
    static void _set_thumbTouch(::UnityEngine::XR::InputFeatureUsage_1<bool> value);
    // static private System.Void .cctor()
    // Offset: 0x18DD7D0
    static void _cctor();
  }; // Unity.XR.Oculus.OculusUsages
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::XR::Oculus::OculusUsages::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Unity::XR::Oculus::OculusUsages::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::OculusUsages*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
