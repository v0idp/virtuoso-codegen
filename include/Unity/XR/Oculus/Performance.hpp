// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: Unity.XR.Oculus
namespace Unity::XR::Oculus {
  // Forward declaring type: Performance
  class Performance;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Unity::XR::Oculus::Performance);
DEFINE_IL2CPP_ARG_TYPE(::Unity::XR::Oculus::Performance*, "Unity.XR.Oculus", "Performance");
// Type namespace: Unity.XR.Oculus
namespace Unity::XR::Oculus {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Unity.XR.Oculus.Performance
  // [TokenAttribute] Offset: FFFFFFFF
  class Performance : public ::Il2CppObject {
    public:
    // Get static field: static private System.Single[] cachedDisplayAvailableFrequencies
    static ::ArrayW<float> _get_cachedDisplayAvailableFrequencies();
    // Set static field: static private System.Single[] cachedDisplayAvailableFrequencies
    static void _set_cachedDisplayAvailableFrequencies(::ArrayW<float> value);
    // static private System.Void .cctor()
    // Offset: 0x18DDBE4
    static void _cctor();
    // static public System.Boolean TrySetCPULevel(System.Int32 level)
    // Offset: 0x18DD944
    static bool TrySetCPULevel(int level);
    // static public System.Boolean TrySetGPULevel(System.Int32 level)
    // Offset: 0x18DD960
    static bool TrySetGPULevel(int level);
    // static public System.Boolean TryGetAvailableDisplayRefreshRates(out System.Single[] refreshRates)
    // Offset: 0x18DD97C
    static bool TryGetAvailableDisplayRefreshRates(ByRef<::ArrayW<float>> refreshRates);
    // static public System.Boolean TrySetDisplayRefreshRate(System.Single refreshRate)
    // Offset: 0x18DDBDC
    static bool TrySetDisplayRefreshRate(float refreshRate);
    // static public System.Boolean TryGetDisplayRefreshRate(out System.Single refreshRate)
    // Offset: 0x18DDBE0
    static bool TryGetDisplayRefreshRate(ByRef<float> refreshRate);
  }; // Unity.XR.Oculus.Performance
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::XR::Oculus::Performance::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Unity::XR::Oculus::Performance::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Performance*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Performance::TrySetCPULevel
// Il2CppName: TrySetCPULevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int)>(&Unity::XR::Oculus::Performance::TrySetCPULevel)> {
  static const MethodInfo* get() {
    static auto* level = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Performance*), "TrySetCPULevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{level});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Performance::TrySetGPULevel
// Il2CppName: TrySetGPULevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int)>(&Unity::XR::Oculus::Performance::TrySetGPULevel)> {
  static const MethodInfo* get() {
    static auto* level = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Performance*), "TrySetGPULevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{level});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Performance::TryGetAvailableDisplayRefreshRates
// Il2CppName: TryGetAvailableDisplayRefreshRates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::ArrayW<float>>)>(&Unity::XR::Oculus::Performance::TryGetAvailableDisplayRefreshRates)> {
  static const MethodInfo* get() {
    static auto* refreshRates = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Performance*), "TryGetAvailableDisplayRefreshRates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{refreshRates});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Performance::TrySetDisplayRefreshRate
// Il2CppName: TrySetDisplayRefreshRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(float)>(&Unity::XR::Oculus::Performance::TrySetDisplayRefreshRate)> {
  static const MethodInfo* get() {
    static auto* refreshRate = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Performance*), "TrySetDisplayRefreshRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{refreshRate});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Performance::TryGetDisplayRefreshRate
// Il2CppName: TryGetDisplayRefreshRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<float>)>(&Unity::XR::Oculus::Performance::TryGetDisplayRefreshRate)> {
  static const MethodInfo* get() {
    static auto* refreshRate = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Performance*), "TryGetDisplayRefreshRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{refreshRate});
  }
};
