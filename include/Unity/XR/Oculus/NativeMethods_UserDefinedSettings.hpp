// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Unity.XR.Oculus.NativeMethods
#include "Unity/XR/Oculus/NativeMethods.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Unity::XR::Oculus::NativeMethods::UserDefinedSettings, "Unity.XR.Oculus", "NativeMethods/UserDefinedSettings");
// Type namespace: Unity.XR.Oculus
namespace Unity::XR::Oculus {
  // Size: 0x14
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Unity.XR.Oculus.NativeMethods/Unity.XR.Oculus.UserDefinedSettings
  // [TokenAttribute] Offset: FFFFFFFF
  struct NativeMethods::UserDefinedSettings/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.UInt16 sharedDepthBuffer
    // Size: 0x2
    // Offset: 0x0
    uint16_t sharedDepthBuffer;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // public System.UInt16 dashSupport
    // Size: 0x2
    // Offset: 0x2
    uint16_t dashSupport;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // public System.UInt16 stereoRenderingMode
    // Size: 0x2
    // Offset: 0x4
    uint16_t stereoRenderingMode;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // public System.UInt16 colorSpace
    // Size: 0x2
    // Offset: 0x6
    uint16_t colorSpace;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // public System.UInt16 lowOverheadMode
    // Size: 0x2
    // Offset: 0x8
    uint16_t lowOverheadMode;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // public System.UInt16 protectedContext
    // Size: 0x2
    // Offset: 0xA
    uint16_t protectedContext;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // public System.UInt16 focusAware
    // Size: 0x2
    // Offset: 0xC
    uint16_t focusAware;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // public System.UInt16 optimizeBufferDiscards
    // Size: 0x2
    // Offset: 0xE
    uint16_t optimizeBufferDiscards;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // public System.UInt16 phaseSync
    // Size: 0x2
    // Offset: 0x10
    uint16_t phaseSync;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // public System.UInt16 subsampledLayout
    // Size: 0x2
    // Offset: 0x12
    uint16_t subsampledLayout;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    public:
    // Creating value type constructor for type: UserDefinedSettings
    constexpr UserDefinedSettings(uint16_t sharedDepthBuffer_ = {}, uint16_t dashSupport_ = {}, uint16_t stereoRenderingMode_ = {}, uint16_t colorSpace_ = {}, uint16_t lowOverheadMode_ = {}, uint16_t protectedContext_ = {}, uint16_t focusAware_ = {}, uint16_t optimizeBufferDiscards_ = {}, uint16_t phaseSync_ = {}, uint16_t subsampledLayout_ = {}) noexcept : sharedDepthBuffer{sharedDepthBuffer_}, dashSupport{dashSupport_}, stereoRenderingMode{stereoRenderingMode_}, colorSpace{colorSpace_}, lowOverheadMode{lowOverheadMode_}, protectedContext{protectedContext_}, focusAware{focusAware_}, optimizeBufferDiscards{optimizeBufferDiscards_}, phaseSync{phaseSync_}, subsampledLayout{subsampledLayout_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.UInt16 sharedDepthBuffer
    [[deprecated("Use field access instead!")]] uint16_t& dyn_sharedDepthBuffer();
    // Get instance field reference: public System.UInt16 dashSupport
    [[deprecated("Use field access instead!")]] uint16_t& dyn_dashSupport();
    // Get instance field reference: public System.UInt16 stereoRenderingMode
    [[deprecated("Use field access instead!")]] uint16_t& dyn_stereoRenderingMode();
    // Get instance field reference: public System.UInt16 colorSpace
    [[deprecated("Use field access instead!")]] uint16_t& dyn_colorSpace();
    // Get instance field reference: public System.UInt16 lowOverheadMode
    [[deprecated("Use field access instead!")]] uint16_t& dyn_lowOverheadMode();
    // Get instance field reference: public System.UInt16 protectedContext
    [[deprecated("Use field access instead!")]] uint16_t& dyn_protectedContext();
    // Get instance field reference: public System.UInt16 focusAware
    [[deprecated("Use field access instead!")]] uint16_t& dyn_focusAware();
    // Get instance field reference: public System.UInt16 optimizeBufferDiscards
    [[deprecated("Use field access instead!")]] uint16_t& dyn_optimizeBufferDiscards();
    // Get instance field reference: public System.UInt16 phaseSync
    [[deprecated("Use field access instead!")]] uint16_t& dyn_phaseSync();
    // Get instance field reference: public System.UInt16 subsampledLayout
    [[deprecated("Use field access instead!")]] uint16_t& dyn_subsampledLayout();
  }; // Unity.XR.Oculus.NativeMethods/Unity.XR.Oculus.UserDefinedSettings
  #pragma pack(pop)
  static check_size<sizeof(NativeMethods::UserDefinedSettings), 18 + sizeof(uint16_t)> __Unity_XR_Oculus_NativeMethods_UserDefinedSettingsSizeCheck;
  static_assert(sizeof(NativeMethods::UserDefinedSettings) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
