// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Unity::RemoteConfig
namespace Unity::RemoteConfig {
  // Forward declaring type: ConfigManagerImpl
  class ConfigManagerImpl;
  // Forward declaring type: RuntimeConfig
  class RuntimeConfig;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ValueType
  class ValueType;
}
// Completed forward declares
// Type namespace: Unity.RemoteConfig
namespace Unity::RemoteConfig {
  // Forward declaring type: ConfigManager
  class ConfigManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Unity::RemoteConfig::ConfigManager);
DEFINE_IL2CPP_ARG_TYPE(::Unity::RemoteConfig::ConfigManager*, "Unity.RemoteConfig", "ConfigManager");
// Type namespace: Unity.RemoteConfig
namespace Unity::RemoteConfig {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Unity.RemoteConfig.ConfigManager
  // [TokenAttribute] Offset: FFFFFFFF
  class ConfigManager : public ::Il2CppObject {
    public:
    // Get static field: static private Unity.RemoteConfig.ConfigManagerImpl _configmanagerImpl
    static ::Unity::RemoteConfig::ConfigManagerImpl* _get__configmanagerImpl();
    // Set static field: static private Unity.RemoteConfig.ConfigManagerImpl _configmanagerImpl
    static void _set__configmanagerImpl(::Unity::RemoteConfig::ConfigManagerImpl* value);
    // static public Unity.RemoteConfig.RuntimeConfig get_appConfig()
    // Offset: 0x18C15C4
    static ::Unity::RemoteConfig::RuntimeConfig* get_appConfig();
    // static private System.Void .cctor()
    // Offset: 0x18C1634
    static void _cctor();
    // static public System.Void FetchConfigs(T userAttributes, T2 appAttributes)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T, class T2>
    static void FetchConfigs(T userAttributes, T2 appAttributes) {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static_assert(std::is_convertible_v<T2, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::RemoteConfig::ConfigManager::FetchConfigs");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.RemoteConfig", "ConfigManager", "FetchConfigs", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userAttributes), ::il2cpp_utils::ExtractType(appAttributes)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, userAttributes, appAttributes);
    }
  }; // Unity.RemoteConfig.ConfigManager
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::RemoteConfig::ConfigManager::get_appConfig
// Il2CppName: get_appConfig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::RemoteConfig::RuntimeConfig* (*)()>(&Unity::RemoteConfig::ConfigManager::get_appConfig)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::RemoteConfig::ConfigManager*), "get_appConfig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::RemoteConfig::ConfigManager::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Unity::RemoteConfig::ConfigManager::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::RemoteConfig::ConfigManager*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::RemoteConfig::ConfigManager::FetchConfigs
// Il2CppName: FetchConfigs
// Cannot write MetadataGetter for generic methods!
