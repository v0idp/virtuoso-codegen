// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture
  class Texture;
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: Matrix4x4
  struct Matrix4x4;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: MaterialPropertyBlock
  class MaterialPropertyBlock;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: LightProbeProxyVolume
  class LightProbeProxyVolume;
  // Forward declaring type: RenderTexture
  class RenderTexture;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: ShadowCastingMode
  struct ShadowCastingMode;
  // Forward declaring type: LightProbeUsage
  struct LightProbeUsage;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Graphics
  class Graphics;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Graphics);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Graphics*, "UnityEngine", "Graphics");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Graphics
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: 65F744
  // [NativeHeaderAttribute] Offset: 65F744
  // [NativeHeaderAttribute] Offset: 65F744
  // [NativeHeaderAttribute] Offset: 65F744
  // [NativeHeaderAttribute] Offset: 65F744
  // [NativeHeaderAttribute] Offset: 65F744
  class Graphics : public ::Il2CppObject {
    public:
    // Get static field: static readonly System.Int32 kMaxDrawMeshInstanceCount
    static int _get_kMaxDrawMeshInstanceCount();
    // Set static field: static readonly System.Int32 kMaxDrawMeshInstanceCount
    static void _set_kMaxDrawMeshInstanceCount(int value);
    // static private System.Void .cctor()
    // Offset: 0x1129344
    static void _cctor();
    // static private System.Int32 Internal_GetMaxDrawMeshInstanceCount()
    // Offset: 0x1128A44
    static int Internal_GetMaxDrawMeshInstanceCount();
    // static private System.Void CopyTexture_Slice(UnityEngine.Texture src, System.Int32 srcElement, System.Int32 srcMip, UnityEngine.Texture dst, System.Int32 dstElement, System.Int32 dstMip)
    // Offset: 0x1128A78
    static void CopyTexture_Slice(::UnityEngine::Texture* src, int srcElement, int srcMip, ::UnityEngine::Texture* dst, int dstElement, int dstMip);
    // static private System.Void Internal_DrawMesh(UnityEngine.Mesh mesh, System.Int32 submeshIndex, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, System.Int32 layer, UnityEngine.Camera camera, UnityEngine.MaterialPropertyBlock properties, UnityEngine.Rendering.ShadowCastingMode castShadows, System.Boolean receiveShadows, UnityEngine.Transform probeAnchor, UnityEngine.Rendering.LightProbeUsage lightProbeUsage, UnityEngine.LightProbeProxyVolume lightProbeProxyVolume)
    // Offset: 0x1128AF8
    static void Internal_DrawMesh(::UnityEngine::Mesh* mesh, int submeshIndex, ::UnityEngine::Matrix4x4 matrix, ::UnityEngine::Material* material, int layer, ::UnityEngine::Camera* camera, ::UnityEngine::MaterialPropertyBlock* properties, ::UnityEngine::Rendering::ShadowCastingMode castShadows, bool receiveShadows, ::UnityEngine::Transform* probeAnchor, ::UnityEngine::Rendering::LightProbeUsage lightProbeUsage, ::UnityEngine::LightProbeProxyVolume* lightProbeProxyVolume);
    // static private System.Void Internal_BlitMaterial5(UnityEngine.Texture source, UnityEngine.RenderTexture dest, UnityEngine.Material mat, System.Int32 pass, System.Boolean setRT)
    // Offset: 0x1128CBC
    static void Internal_BlitMaterial5(::UnityEngine::Texture* source, ::UnityEngine::RenderTexture* dest, ::UnityEngine::Material* mat, int pass, bool setRT);
    // static private System.Void Blit2(UnityEngine.Texture source, UnityEngine.RenderTexture dest)
    // Offset: 0x1128D2C
    static void Blit2(::UnityEngine::Texture* source, ::UnityEngine::RenderTexture* dest);
    // static public System.Void CopyTexture(UnityEngine.Texture src, System.Int32 srcElement, System.Int32 srcMip, UnityEngine.Texture dst, System.Int32 dstElement, System.Int32 dstMip)
    // Offset: 0x1128D7C
    static void CopyTexture(::UnityEngine::Texture* src, int srcElement, int srcMip, ::UnityEngine::Texture* dst, int dstElement, int dstMip);
    // static public System.Void DrawMesh(UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, System.Int32 layer, UnityEngine.Camera camera, System.Int32 submeshIndex, UnityEngine.MaterialPropertyBlock properties, System.Boolean castShadows, System.Boolean receiveShadows, System.Boolean useLightProbes)
    // Offset: 0x1128E3C
    static void DrawMesh(::UnityEngine::Mesh* mesh, ::UnityEngine::Matrix4x4 matrix, ::UnityEngine::Material* material, int layer, ::UnityEngine::Camera* camera, int submeshIndex, ::UnityEngine::MaterialPropertyBlock* properties, bool castShadows, bool receiveShadows, bool useLightProbes);
    // static public System.Void DrawMesh(UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, System.Int32 layer, UnityEngine.Camera camera, System.Int32 submeshIndex, UnityEngine.MaterialPropertyBlock properties, UnityEngine.Rendering.ShadowCastingMode castShadows, System.Boolean receiveShadows, UnityEngine.Transform probeAnchor, UnityEngine.Rendering.LightProbeUsage lightProbeUsage, UnityEngine.LightProbeProxyVolume lightProbeProxyVolume)
    // Offset: 0x1128FE0
    static void DrawMesh(::UnityEngine::Mesh* mesh, ::UnityEngine::Matrix4x4 matrix, ::UnityEngine::Material* material, int layer, ::UnityEngine::Camera* camera, int submeshIndex, ::UnityEngine::MaterialPropertyBlock* properties, ::UnityEngine::Rendering::ShadowCastingMode castShadows, bool receiveShadows, ::UnityEngine::Transform* probeAnchor, ::UnityEngine::Rendering::LightProbeUsage lightProbeUsage, ::UnityEngine::LightProbeProxyVolume* lightProbeProxyVolume);
    // static public System.Void Blit(UnityEngine.Texture source, UnityEngine.RenderTexture dest)
    // Offset: 0x112918C
    static void Blit(::UnityEngine::Texture* source, ::UnityEngine::RenderTexture* dest);
    // static public System.Void Blit(UnityEngine.Texture source, UnityEngine.RenderTexture dest, UnityEngine.Material mat, System.Int32 pass)
    // Offset: 0x112921C
    static void Blit(::UnityEngine::Texture* source, ::UnityEngine::RenderTexture* dest, ::UnityEngine::Material* mat, int pass);
    // static public System.Void Blit(UnityEngine.Texture source, UnityEngine.RenderTexture dest, UnityEngine.Material mat)
    // Offset: 0x11292C8
    static void Blit(::UnityEngine::Texture* source, ::UnityEngine::RenderTexture* dest, ::UnityEngine::Material* mat);
    // static private System.Void Internal_DrawMesh_Injected(UnityEngine.Mesh mesh, System.Int32 submeshIndex, ref UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, System.Int32 layer, UnityEngine.Camera camera, UnityEngine.MaterialPropertyBlock properties, UnityEngine.Rendering.ShadowCastingMode castShadows, System.Boolean receiveShadows, UnityEngine.Transform probeAnchor, UnityEngine.Rendering.LightProbeUsage lightProbeUsage, UnityEngine.LightProbeProxyVolume lightProbeProxyVolume)
    // Offset: 0x1128BF4
    static void Internal_DrawMesh_Injected(::UnityEngine::Mesh* mesh, int submeshIndex, ByRef<::UnityEngine::Matrix4x4> matrix, ::UnityEngine::Material* material, int layer, ::UnityEngine::Camera* camera, ::UnityEngine::MaterialPropertyBlock* properties, ::UnityEngine::Rendering::ShadowCastingMode castShadows, bool receiveShadows, ::UnityEngine::Transform* probeAnchor, ::UnityEngine::Rendering::LightProbeUsage lightProbeUsage, ::UnityEngine::LightProbeProxyVolume* lightProbeProxyVolume);
  }; // UnityEngine.Graphics
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Graphics::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Graphics::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Graphics*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Graphics::Internal_GetMaxDrawMeshInstanceCount
// Il2CppName: Internal_GetMaxDrawMeshInstanceCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::Graphics::Internal_GetMaxDrawMeshInstanceCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Graphics*), "Internal_GetMaxDrawMeshInstanceCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Graphics::CopyTexture_Slice
// Il2CppName: CopyTexture_Slice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Texture*, int, int, ::UnityEngine::Texture*, int, int)>(&UnityEngine::Graphics::CopyTexture_Slice)> {
  static const MethodInfo* get() {
    static auto* src = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* srcElement = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* srcMip = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* dst = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* dstElement = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* dstMip = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Graphics*), "CopyTexture_Slice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{src, srcElement, srcMip, dst, dstElement, dstMip});
  }
};
// Writing MetadataGetter for method: UnityEngine::Graphics::Internal_DrawMesh
// Il2CppName: Internal_DrawMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Mesh*, int, ::UnityEngine::Matrix4x4, ::UnityEngine::Material*, int, ::UnityEngine::Camera*, ::UnityEngine::MaterialPropertyBlock*, ::UnityEngine::Rendering::ShadowCastingMode, bool, ::UnityEngine::Transform*, ::UnityEngine::Rendering::LightProbeUsage, ::UnityEngine::LightProbeProxyVolume*)>(&UnityEngine::Graphics::Internal_DrawMesh)> {
  static const MethodInfo* get() {
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* submeshIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* matrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* camera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* properties = &::il2cpp_utils::GetClassFromName("UnityEngine", "MaterialPropertyBlock")->byval_arg;
    static auto* castShadows = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ShadowCastingMode")->byval_arg;
    static auto* receiveShadows = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* probeAnchor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* lightProbeUsage = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LightProbeUsage")->byval_arg;
    static auto* lightProbeProxyVolume = &::il2cpp_utils::GetClassFromName("UnityEngine", "LightProbeProxyVolume")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Graphics*), "Internal_DrawMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mesh, submeshIndex, matrix, material, layer, camera, properties, castShadows, receiveShadows, probeAnchor, lightProbeUsage, lightProbeProxyVolume});
  }
};
// Writing MetadataGetter for method: UnityEngine::Graphics::Internal_BlitMaterial5
// Il2CppName: Internal_BlitMaterial5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Texture*, ::UnityEngine::RenderTexture*, ::UnityEngine::Material*, int, bool)>(&UnityEngine::Graphics::Internal_BlitMaterial5)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* dest = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    static auto* mat = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* pass = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* setRT = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Graphics*), "Internal_BlitMaterial5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, dest, mat, pass, setRT});
  }
};
// Writing MetadataGetter for method: UnityEngine::Graphics::Blit2
// Il2CppName: Blit2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Texture*, ::UnityEngine::RenderTexture*)>(&UnityEngine::Graphics::Blit2)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* dest = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Graphics*), "Blit2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, dest});
  }
};
// Writing MetadataGetter for method: UnityEngine::Graphics::CopyTexture
// Il2CppName: CopyTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Texture*, int, int, ::UnityEngine::Texture*, int, int)>(&UnityEngine::Graphics::CopyTexture)> {
  static const MethodInfo* get() {
    static auto* src = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* srcElement = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* srcMip = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* dst = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* dstElement = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* dstMip = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Graphics*), "CopyTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{src, srcElement, srcMip, dst, dstElement, dstMip});
  }
};
// Writing MetadataGetter for method: UnityEngine::Graphics::DrawMesh
// Il2CppName: DrawMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Mesh*, ::UnityEngine::Matrix4x4, ::UnityEngine::Material*, int, ::UnityEngine::Camera*, int, ::UnityEngine::MaterialPropertyBlock*, bool, bool, bool)>(&UnityEngine::Graphics::DrawMesh)> {
  static const MethodInfo* get() {
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* matrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* camera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* submeshIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* properties = &::il2cpp_utils::GetClassFromName("UnityEngine", "MaterialPropertyBlock")->byval_arg;
    static auto* castShadows = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* receiveShadows = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* useLightProbes = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Graphics*), "DrawMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mesh, matrix, material, layer, camera, submeshIndex, properties, castShadows, receiveShadows, useLightProbes});
  }
};
// Writing MetadataGetter for method: UnityEngine::Graphics::DrawMesh
// Il2CppName: DrawMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Mesh*, ::UnityEngine::Matrix4x4, ::UnityEngine::Material*, int, ::UnityEngine::Camera*, int, ::UnityEngine::MaterialPropertyBlock*, ::UnityEngine::Rendering::ShadowCastingMode, bool, ::UnityEngine::Transform*, ::UnityEngine::Rendering::LightProbeUsage, ::UnityEngine::LightProbeProxyVolume*)>(&UnityEngine::Graphics::DrawMesh)> {
  static const MethodInfo* get() {
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* matrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* camera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* submeshIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* properties = &::il2cpp_utils::GetClassFromName("UnityEngine", "MaterialPropertyBlock")->byval_arg;
    static auto* castShadows = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ShadowCastingMode")->byval_arg;
    static auto* receiveShadows = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* probeAnchor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* lightProbeUsage = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LightProbeUsage")->byval_arg;
    static auto* lightProbeProxyVolume = &::il2cpp_utils::GetClassFromName("UnityEngine", "LightProbeProxyVolume")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Graphics*), "DrawMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mesh, matrix, material, layer, camera, submeshIndex, properties, castShadows, receiveShadows, probeAnchor, lightProbeUsage, lightProbeProxyVolume});
  }
};
// Writing MetadataGetter for method: UnityEngine::Graphics::Blit
// Il2CppName: Blit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Texture*, ::UnityEngine::RenderTexture*)>(&UnityEngine::Graphics::Blit)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* dest = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Graphics*), "Blit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, dest});
  }
};
// Writing MetadataGetter for method: UnityEngine::Graphics::Blit
// Il2CppName: Blit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Texture*, ::UnityEngine::RenderTexture*, ::UnityEngine::Material*, int)>(&UnityEngine::Graphics::Blit)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* dest = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    static auto* mat = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* pass = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Graphics*), "Blit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, dest, mat, pass});
  }
};
// Writing MetadataGetter for method: UnityEngine::Graphics::Blit
// Il2CppName: Blit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Texture*, ::UnityEngine::RenderTexture*, ::UnityEngine::Material*)>(&UnityEngine::Graphics::Blit)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* dest = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    static auto* mat = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Graphics*), "Blit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, dest, mat});
  }
};
// Writing MetadataGetter for method: UnityEngine::Graphics::Internal_DrawMesh_Injected
// Il2CppName: Internal_DrawMesh_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Mesh*, int, ByRef<::UnityEngine::Matrix4x4>, ::UnityEngine::Material*, int, ::UnityEngine::Camera*, ::UnityEngine::MaterialPropertyBlock*, ::UnityEngine::Rendering::ShadowCastingMode, bool, ::UnityEngine::Transform*, ::UnityEngine::Rendering::LightProbeUsage, ::UnityEngine::LightProbeProxyVolume*)>(&UnityEngine::Graphics::Internal_DrawMesh_Injected)> {
  static const MethodInfo* get() {
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* submeshIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* matrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* camera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* properties = &::il2cpp_utils::GetClassFromName("UnityEngine", "MaterialPropertyBlock")->byval_arg;
    static auto* castShadows = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ShadowCastingMode")->byval_arg;
    static auto* receiveShadows = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* probeAnchor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* lightProbeUsage = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LightProbeUsage")->byval_arg;
    static auto* lightProbeProxyVolume = &::il2cpp_utils::GetClassFromName("UnityEngine", "LightProbeProxyVolume")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Graphics*), "Internal_DrawMesh_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mesh, submeshIndex, matrix, material, layer, camera, properties, castShadows, receiveShadows, probeAnchor, lightProbeUsage, lightProbeProxyVolume});
  }
};
