// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AndroidJavaObject
  class AndroidJavaObject;
}
// Forward declaring namespace: UnityEngine::Android
namespace UnityEngine::Android {
  // Forward declaring type: PermissionCallbacks
  class PermissionCallbacks;
}
// Completed forward declares
// Type namespace: UnityEngine.Android
namespace UnityEngine::Android {
  // Forward declaring type: Permission
  struct Permission;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Android::Permission, "UnityEngine.Android", "Permission");
// Type namespace: UnityEngine.Android
namespace UnityEngine::Android {
  // Size: 0x0
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Android.Permission
  // [TokenAttribute] Offset: FFFFFFFF
  struct Permission/*, public ::System::ValueType*/ {
    public:
    // Creating value type constructor for type: Permission
    constexpr Permission() noexcept {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get static field: static private UnityEngine.AndroidJavaObject m_UnityPermissions
    static ::UnityEngine::AndroidJavaObject* _get_m_UnityPermissions();
    // Set static field: static private UnityEngine.AndroidJavaObject m_UnityPermissions
    static void _set_m_UnityPermissions(::UnityEngine::AndroidJavaObject* value);
    // Get static field: static private UnityEngine.AndroidJavaObject m_Activity
    static ::UnityEngine::AndroidJavaObject* _get_m_Activity();
    // Set static field: static private UnityEngine.AndroidJavaObject m_Activity
    static void _set_m_Activity(::UnityEngine::AndroidJavaObject* value);
    // static private UnityEngine.AndroidJavaObject GetActivity()
    // Offset: 0x1873E84
    static ::UnityEngine::AndroidJavaObject* GetActivity();
    // static private UnityEngine.AndroidJavaObject GetUnityPermissions()
    // Offset: 0x1874058
    static ::UnityEngine::AndroidJavaObject* GetUnityPermissions();
    // static public System.Boolean HasUserAuthorizedPermission(System.String permission)
    // Offset: 0x18740FC
    static bool HasUserAuthorizedPermission(::StringW permission);
    // static public System.Void RequestUserPermission(System.String permission)
    // Offset: 0x1874228
    static void RequestUserPermission(::StringW permission);
    // static public System.Void RequestUserPermission(System.String permission, UnityEngine.Android.PermissionCallbacks callbacks)
    // Offset: 0x1874424
    static void RequestUserPermission(::StringW permission, ::UnityEngine::Android::PermissionCallbacks* callbacks);
    // static public System.Void RequestUserPermissions(System.String[] permissions, UnityEngine.Android.PermissionCallbacks callbacks)
    // Offset: 0x18742D4
    static void RequestUserPermissions(::ArrayW<::StringW> permissions, ::UnityEngine::Android::PermissionCallbacks* callbacks);
  }; // UnityEngine.Android.Permission
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Android::Permission::GetActivity
// Il2CppName: GetActivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AndroidJavaObject* (*)()>(&UnityEngine::Android::Permission::GetActivity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Android::Permission), "GetActivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Android::Permission::GetUnityPermissions
// Il2CppName: GetUnityPermissions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AndroidJavaObject* (*)()>(&UnityEngine::Android::Permission::GetUnityPermissions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Android::Permission), "GetUnityPermissions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Android::Permission::HasUserAuthorizedPermission
// Il2CppName: HasUserAuthorizedPermission
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&UnityEngine::Android::Permission::HasUserAuthorizedPermission)> {
  static const MethodInfo* get() {
    static auto* permission = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Android::Permission), "HasUserAuthorizedPermission", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{permission});
  }
};
// Writing MetadataGetter for method: UnityEngine::Android::Permission::RequestUserPermission
// Il2CppName: RequestUserPermission
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&UnityEngine::Android::Permission::RequestUserPermission)> {
  static const MethodInfo* get() {
    static auto* permission = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Android::Permission), "RequestUserPermission", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{permission});
  }
};
// Writing MetadataGetter for method: UnityEngine::Android::Permission::RequestUserPermission
// Il2CppName: RequestUserPermission
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::UnityEngine::Android::PermissionCallbacks*)>(&UnityEngine::Android::Permission::RequestUserPermission)> {
  static const MethodInfo* get() {
    static auto* permission = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* callbacks = &::il2cpp_utils::GetClassFromName("UnityEngine.Android", "PermissionCallbacks")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Android::Permission), "RequestUserPermission", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{permission, callbacks});
  }
};
// Writing MetadataGetter for method: UnityEngine::Android::Permission::RequestUserPermissions
// Il2CppName: RequestUserPermissions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<::StringW>, ::UnityEngine::Android::PermissionCallbacks*)>(&UnityEngine::Android::Permission::RequestUserPermissions)> {
  static const MethodInfo* get() {
    static auto* permissions = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* callbacks = &::il2cpp_utils::GetClassFromName("UnityEngine.Android", "PermissionCallbacks")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Android::Permission), "RequestUserPermissions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{permissions, callbacks});
  }
};
