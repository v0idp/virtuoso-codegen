// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.IntegratedSubsystem`1
#include "UnityEngine/IntegratedSubsystem_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR
namespace UnityEngine::XR {
  // Forward declaring type: XRDisplaySubsystemDescriptor
  class XRDisplaySubsystemDescriptor;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: UnityEngine.XR
namespace UnityEngine::XR {
  // Forward declaring type: XRDisplaySubsystem
  class XRDisplaySubsystem;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::XRDisplaySubsystem);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::XRDisplaySubsystem*, "UnityEngine.XR", "XRDisplaySubsystem");
// Type namespace: UnityEngine.XR
namespace UnityEngine::XR {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.XR.XRDisplaySubsystem
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: 6C923C
  // [NativeConditionalAttribute] Offset: 6C923C
  // [NativeTypeAttribute] Offset: 6C923C
  // [UsedByNativeCodeAttribute] Offset: 6C923C
  class XRDisplaySubsystem : public ::UnityEngine::IntegratedSubsystem_1<::UnityEngine::XR::XRDisplaySubsystemDescriptor*> {
    public:
    // Nested type: ::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass
    struct XRRenderPass;
    // Nested type: ::UnityEngine::XR::XRDisplaySubsystem::XRMirrorViewBlitDesc
    struct XRMirrorViewBlitDesc;
    public:
    // [DebuggerBrowsableAttribute] Offset: 0x6C9AF8
    // private System.Action`1<System.Boolean> displayFocusChanged
    // Size: 0x8
    // Offset: 0x20
    ::System::Action_1<bool>* displayFocusChanged;
    // Field size check
    static_assert(sizeof(::System::Action_1<bool>*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Action_1<bool>*
    constexpr operator ::System::Action_1<bool>*() const noexcept {
      return displayFocusChanged;
    }
    // Get instance field reference: private System.Action`1<System.Boolean> displayFocusChanged
    [[deprecated]] ::System::Action_1<bool>*& dyn_displayFocusChanged();
    // private System.Void InvokeDisplayFocusChanged(System.Boolean focus)
    // Offset: 0x18C69F4
    void InvokeDisplayFocusChanged(bool focus);
    // public System.Boolean TryGetAppGPUTimeLastFrame(out System.Single gpuTimeLastFrame)
    // Offset: 0x18C6A64
    bool TryGetAppGPUTimeLastFrame(ByRef<float> gpuTimeLastFrame);
    // public System.Boolean TryGetCompositorGPUTimeLastFrame(out System.Single gpuTimeLastFrameCompositor)
    // Offset: 0x18C6AB4
    bool TryGetCompositorGPUTimeLastFrame(ByRef<float> gpuTimeLastFrameCompositor);
    // public System.Boolean TryGetDisplayRefreshRate(out System.Single displayRefreshRate)
    // Offset: 0x18C6B04
    bool TryGetDisplayRefreshRate(ByRef<float> displayRefreshRate);
    // public System.Boolean TryGetMotionToPhoton(out System.Single motionToPhoton)
    // Offset: 0x18C6B54
    bool TryGetMotionToPhoton(ByRef<float> motionToPhoton);
    // public System.Void .ctor()
    // Offset: 0x18C6BA4
    // Implemented from: UnityEngine.IntegratedSubsystem`1
    // Base method: System.Void IntegratedSubsystem_1::.ctor()
    // Base method: System.Void IntegratedSubsystem::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XRDisplaySubsystem* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XRDisplaySubsystem*, creationType>()));
    }
  }; // UnityEngine.XR.XRDisplaySubsystem
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::XRDisplaySubsystem::InvokeDisplayFocusChanged
// Il2CppName: InvokeDisplayFocusChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::XRDisplaySubsystem::*)(bool)>(&UnityEngine::XR::XRDisplaySubsystem::InvokeDisplayFocusChanged)> {
  static const MethodInfo* get() {
    static auto* focus = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::XRDisplaySubsystem*), "InvokeDisplayFocusChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{focus});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::XRDisplaySubsystem::TryGetAppGPUTimeLastFrame
// Il2CppName: TryGetAppGPUTimeLastFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::XRDisplaySubsystem::*)(ByRef<float>)>(&UnityEngine::XR::XRDisplaySubsystem::TryGetAppGPUTimeLastFrame)> {
  static const MethodInfo* get() {
    static auto* gpuTimeLastFrame = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::XRDisplaySubsystem*), "TryGetAppGPUTimeLastFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gpuTimeLastFrame});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::XRDisplaySubsystem::TryGetCompositorGPUTimeLastFrame
// Il2CppName: TryGetCompositorGPUTimeLastFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::XRDisplaySubsystem::*)(ByRef<float>)>(&UnityEngine::XR::XRDisplaySubsystem::TryGetCompositorGPUTimeLastFrame)> {
  static const MethodInfo* get() {
    static auto* gpuTimeLastFrameCompositor = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::XRDisplaySubsystem*), "TryGetCompositorGPUTimeLastFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gpuTimeLastFrameCompositor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::XRDisplaySubsystem::TryGetDisplayRefreshRate
// Il2CppName: TryGetDisplayRefreshRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::XRDisplaySubsystem::*)(ByRef<float>)>(&UnityEngine::XR::XRDisplaySubsystem::TryGetDisplayRefreshRate)> {
  static const MethodInfo* get() {
    static auto* displayRefreshRate = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::XRDisplaySubsystem*), "TryGetDisplayRefreshRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{displayRefreshRate});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::XRDisplaySubsystem::TryGetMotionToPhoton
// Il2CppName: TryGetMotionToPhoton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::XRDisplaySubsystem::*)(ByRef<float>)>(&UnityEngine::XR::XRDisplaySubsystem::TryGetMotionToPhoton)> {
  static const MethodInfo* get() {
    static auto* motionToPhoton = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::XRDisplaySubsystem*), "TryGetMotionToPhoton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{motionToPhoton});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::XRDisplaySubsystem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
