// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Analytics
namespace UnityEngine::Analytics {
  // Forward declaring type: AnalyticsResult
  struct AnalyticsResult;
  // Forward declaring type: CustomEventData
  class CustomEventData;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IDictionary_2;
}
// Completed forward declares
// Type namespace: UnityEngine.Analytics
namespace UnityEngine::Analytics {
  // Forward declaring type: Analytics
  class Analytics;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Analytics::Analytics);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Analytics::Analytics*, "UnityEngine.Analytics", "Analytics");
// Type namespace: UnityEngine.Analytics
namespace UnityEngine::Analytics {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Analytics.Analytics
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: 6DE048
  // [NativeHeaderAttribute] Offset: 6DE048
  // [NativeHeaderAttribute] Offset: 6DE048
  class Analytics : public ::Il2CppObject {
    public:
    // static System.Boolean IsInitialized()
    // Offset: 0x1900FFC
    static bool IsInitialized();
    // static private UnityEngine.Analytics.AnalyticsResult SendCustomEventName(System.String customEventName)
    // Offset: 0x1901030
    static ::UnityEngine::Analytics::AnalyticsResult SendCustomEventName(::StringW customEventName);
    // static private UnityEngine.Analytics.AnalyticsResult SendCustomEvent(UnityEngine.Analytics.CustomEventData eventData)
    // Offset: 0x1901070
    static ::UnityEngine::Analytics::AnalyticsResult SendCustomEvent(::UnityEngine::Analytics::CustomEventData* eventData);
    // static public UnityEngine.Analytics.AnalyticsResult CustomEvent(System.String customEventName)
    // Offset: 0x19010B0
    static ::UnityEngine::Analytics::AnalyticsResult CustomEvent(::StringW customEventName);
    // static public UnityEngine.Analytics.AnalyticsResult CustomEvent(System.String customEventName, System.Collections.Generic.IDictionary`2<System.String,System.Object> eventData)
    // Offset: 0x190117C
    static ::UnityEngine::Analytics::AnalyticsResult CustomEvent(::StringW customEventName, ::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* eventData);
  }; // UnityEngine.Analytics.Analytics
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Analytics::Analytics::IsInitialized
// Il2CppName: IsInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::Analytics::Analytics::IsInitialized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Analytics::Analytics*), "IsInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Analytics::Analytics::SendCustomEventName
// Il2CppName: SendCustomEventName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Analytics::AnalyticsResult (*)(::StringW)>(&UnityEngine::Analytics::Analytics::SendCustomEventName)> {
  static const MethodInfo* get() {
    static auto* customEventName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Analytics::Analytics*), "SendCustomEventName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{customEventName});
  }
};
// Writing MetadataGetter for method: UnityEngine::Analytics::Analytics::SendCustomEvent
// Il2CppName: SendCustomEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Analytics::AnalyticsResult (*)(::UnityEngine::Analytics::CustomEventData*)>(&UnityEngine::Analytics::Analytics::SendCustomEvent)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.Analytics", "CustomEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Analytics::Analytics*), "SendCustomEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::Analytics::Analytics::CustomEvent
// Il2CppName: CustomEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Analytics::AnalyticsResult (*)(::StringW)>(&UnityEngine::Analytics::Analytics::CustomEvent)> {
  static const MethodInfo* get() {
    static auto* customEventName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Analytics::Analytics*), "CustomEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{customEventName});
  }
};
// Writing MetadataGetter for method: UnityEngine::Analytics::Analytics::CustomEvent
// Il2CppName: CustomEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Analytics::AnalyticsResult (*)(::StringW, ::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>*)>(&UnityEngine::Analytics::Analytics::CustomEvent)> {
  static const MethodInfo* get() {
    static auto* customEventName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* eventData = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Analytics::Analytics*), "CustomEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{customEventName, eventData});
  }
};
