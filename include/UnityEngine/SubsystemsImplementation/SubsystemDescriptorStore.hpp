// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: IntegratedSubsystemDescriptor
  class IntegratedSubsystemDescriptor;
  // Forward declaring type: SubsystemDescriptor
  class SubsystemDescriptor;
  // Forward declaring type: ISubsystemDescriptor
  class ISubsystemDescriptor;
}
// Forward declaring namespace: UnityEngine::SubsystemsImplementation
namespace UnityEngine::SubsystemsImplementation {
  // Forward declaring type: SubsystemDescriptorWithProvider
  class SubsystemDescriptorWithProvider;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Completed forward declares
// Type namespace: UnityEngine.SubsystemsImplementation
namespace UnityEngine::SubsystemsImplementation {
  // Forward declaring type: SubsystemDescriptorStore
  class SubsystemDescriptorStore;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore*, "UnityEngine.SubsystemsImplementation", "SubsystemDescriptorStore");
// Type namespace: UnityEngine.SubsystemsImplementation
namespace UnityEngine::SubsystemsImplementation {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.SubsystemsImplementation.SubsystemDescriptorStore
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: 6E03B8
  class SubsystemDescriptorStore : public ::Il2CppObject {
    public:
    // Get static field: static private System.Collections.Generic.List`1<UnityEngine.IntegratedSubsystemDescriptor> s_IntegratedDescriptors
    static ::System::Collections::Generic::List_1<::UnityEngine::IntegratedSubsystemDescriptor*>* _get_s_IntegratedDescriptors();
    // Set static field: static private System.Collections.Generic.List`1<UnityEngine.IntegratedSubsystemDescriptor> s_IntegratedDescriptors
    static void _set_s_IntegratedDescriptors(::System::Collections::Generic::List_1<::UnityEngine::IntegratedSubsystemDescriptor*>* value);
    // Get static field: static private System.Collections.Generic.List`1<UnityEngine.SubsystemsImplementation.SubsystemDescriptorWithProvider> s_StandaloneDescriptors
    static ::System::Collections::Generic::List_1<::UnityEngine::SubsystemsImplementation::SubsystemDescriptorWithProvider*>* _get_s_StandaloneDescriptors();
    // Set static field: static private System.Collections.Generic.List`1<UnityEngine.SubsystemsImplementation.SubsystemDescriptorWithProvider> s_StandaloneDescriptors
    static void _set_s_StandaloneDescriptors(::System::Collections::Generic::List_1<::UnityEngine::SubsystemsImplementation::SubsystemDescriptorWithProvider*>* value);
    // Get static field: static private System.Collections.Generic.List`1<UnityEngine.SubsystemDescriptor> s_DeprecatedDescriptors
    static ::System::Collections::Generic::List_1<::UnityEngine::SubsystemDescriptor*>* _get_s_DeprecatedDescriptors();
    // Set static field: static private System.Collections.Generic.List`1<UnityEngine.SubsystemDescriptor> s_DeprecatedDescriptors
    static void _set_s_DeprecatedDescriptors(::System::Collections::Generic::List_1<::UnityEngine::SubsystemDescriptor*>* value);
    // static private System.Void .cctor()
    // Offset: 0x1903F10
    static void _cctor();
    // static System.Void InitializeManagedDescriptor(System.IntPtr ptr, UnityEngine.IntegratedSubsystemDescriptor desc)
    // Offset: 0x1903CA0
    static void InitializeManagedDescriptor(::System::IntPtr ptr, ::UnityEngine::IntegratedSubsystemDescriptor* desc);
    // static System.Void ClearManagedDescriptors()
    // Offset: 0x1903D40
    static void ClearManagedDescriptors();
    // static private System.Void ReportSingleSubsystemAnalytics(System.String id)
    // Offset: 0x1903ED0
    static void ReportSingleSubsystemAnalytics(::StringW id);
    // static System.Void GetSubsystemDescriptors(System.Collections.Generic.List`1<T> descriptors)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void GetSubsystemDescriptors(::System::Collections::Generic::List_1<T>* descriptors) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<T>, ::UnityEngine::ISubsystemDescriptor>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore::GetSubsystemDescriptors");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SubsystemsImplementation", "SubsystemDescriptorStore", "GetSubsystemDescriptors", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(descriptors)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, descriptors);
    }
    // static private System.Void AddDescriptorSubset(System.Collections.Generic.List`1<TBaseTypeInList> copyFrom, System.Collections.Generic.List`1<TQueryType> copyTo)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TBaseTypeInList, class TQueryType>
    static void AddDescriptorSubset(::System::Collections::Generic::List_1<TBaseTypeInList>* copyFrom, ::System::Collections::Generic::List_1<TQueryType>* copyTo) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<TBaseTypeInList>, ::UnityEngine::ISubsystemDescriptor>);
      static_assert(std::is_convertible_v<std::remove_pointer_t<TQueryType>, ::UnityEngine::ISubsystemDescriptor>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore::AddDescriptorSubset");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SubsystemsImplementation", "SubsystemDescriptorStore", "AddDescriptorSubset", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TBaseTypeInList>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TQueryType>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(copyFrom), ::il2cpp_utils::ExtractType(copyTo)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TBaseTypeInList>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TQueryType>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, copyFrom, copyTo);
    }
    // static System.Void RegisterDescriptor(TDescriptor descriptor, System.Collections.Generic.List`1<TBaseTypeInList> storeInList)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TDescriptor, class TBaseTypeInList>
    static void RegisterDescriptor(TDescriptor descriptor, ::System::Collections::Generic::List_1<TBaseTypeInList>* storeInList) {
      static_assert(std::is_convertible_v<TDescriptor, TBaseTypeInList>);
      static_assert(std::is_convertible_v<std::remove_pointer_t<TBaseTypeInList>, ::UnityEngine::ISubsystemDescriptor>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore::RegisterDescriptor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SubsystemsImplementation", "SubsystemDescriptorStore", "RegisterDescriptor", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TDescriptor>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TBaseTypeInList>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(descriptor), ::il2cpp_utils::ExtractType(storeInList)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TDescriptor>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TBaseTypeInList>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, descriptor, storeInList);
    }
    // static System.Void RegisterDeprecatedDescriptor(UnityEngine.SubsystemDescriptor descriptor)
    // Offset: 0x1903AAC
    static void RegisterDeprecatedDescriptor(::UnityEngine::SubsystemDescriptor* descriptor);
  }; // UnityEngine.SubsystemsImplementation.SubsystemDescriptorStore
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore::InitializeManagedDescriptor
// Il2CppName: InitializeManagedDescriptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::UnityEngine::IntegratedSubsystemDescriptor*)>(&UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore::InitializeManagedDescriptor)> {
  static const MethodInfo* get() {
    static auto* ptr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* desc = &::il2cpp_utils::GetClassFromName("UnityEngine", "IntegratedSubsystemDescriptor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore*), "InitializeManagedDescriptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, desc});
  }
};
// Writing MetadataGetter for method: UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore::ClearManagedDescriptors
// Il2CppName: ClearManagedDescriptors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore::ClearManagedDescriptors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore*), "ClearManagedDescriptors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore::ReportSingleSubsystemAnalytics
// Il2CppName: ReportSingleSubsystemAnalytics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore::ReportSingleSubsystemAnalytics)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore*), "ReportSingleSubsystemAnalytics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore::GetSubsystemDescriptors
// Il2CppName: GetSubsystemDescriptors
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore::AddDescriptorSubset
// Il2CppName: AddDescriptorSubset
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore::RegisterDescriptor
// Il2CppName: RegisterDescriptor
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore::RegisterDeprecatedDescriptor
// Il2CppName: RegisterDeprecatedDescriptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::SubsystemDescriptor*)>(&UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore::RegisterDeprecatedDescriptor)> {
  static const MethodInfo* get() {
    static auto* descriptor = &::il2cpp_utils::GetClassFromName("UnityEngine", "SubsystemDescriptor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SubsystemsImplementation::SubsystemDescriptorStore*), "RegisterDeprecatedDescriptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{descriptor});
  }
};
