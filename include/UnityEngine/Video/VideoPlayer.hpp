// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Behaviour
#include "UnityEngine/Behaviour.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Video
namespace UnityEngine::Video {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AudioSource
  class AudioSource;
}
// Completed forward declares
// Type namespace: UnityEngine.Video
namespace UnityEngine::Video {
  // Forward declaring type: VideoPlayer
  class VideoPlayer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Video::VideoPlayer);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Video::VideoPlayer*, "UnityEngine.Video", "VideoPlayer");
// Type namespace: UnityEngine.Video
namespace UnityEngine::Video {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Video.VideoPlayer
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequiredByNativeCodeAttribute] Offset: 6D95E8
  // [RequireComponent] Offset: 6D95E8
  // [NativeHeaderAttribute] Offset: 6D95E8
  class VideoPlayer : public ::UnityEngine::Behaviour {
    public:
    // Nested type: ::UnityEngine::Video::VideoPlayer::EventHandler
    class EventHandler;
    // Nested type: ::UnityEngine::Video::VideoPlayer::ErrorEventHandler
    class ErrorEventHandler;
    // Nested type: ::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler
    class FrameReadyEventHandler;
    // Nested type: ::UnityEngine::Video::VideoPlayer::TimeEventHandler
    class TimeEventHandler;
    public:
    // [DebuggerBrowsableAttribute] Offset: 0x6D967C
    // private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler prepareCompleted
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Video::VideoPlayer::EventHandler* prepareCompleted;
    // Field size check
    static_assert(sizeof(::UnityEngine::Video::VideoPlayer::EventHandler*) == 0x8);
    // [DebuggerBrowsableAttribute] Offset: 0x6D96B8
    // private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler loopPointReached
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Video::VideoPlayer::EventHandler* loopPointReached;
    // Field size check
    static_assert(sizeof(::UnityEngine::Video::VideoPlayer::EventHandler*) == 0x8);
    // [DebuggerBrowsableAttribute] Offset: 0x6D96F4
    // private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler started
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Video::VideoPlayer::EventHandler* started;
    // Field size check
    static_assert(sizeof(::UnityEngine::Video::VideoPlayer::EventHandler*) == 0x8);
    // [DebuggerBrowsableAttribute] Offset: 0x6D9730
    // private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler frameDropped
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Video::VideoPlayer::EventHandler* frameDropped;
    // Field size check
    static_assert(sizeof(::UnityEngine::Video::VideoPlayer::EventHandler*) == 0x8);
    // [DebuggerBrowsableAttribute] Offset: 0x6D976C
    // private UnityEngine.Video.VideoPlayer/UnityEngine.Video.ErrorEventHandler errorReceived
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Video::VideoPlayer::ErrorEventHandler* errorReceived;
    // Field size check
    static_assert(sizeof(::UnityEngine::Video::VideoPlayer::ErrorEventHandler*) == 0x8);
    // [DebuggerBrowsableAttribute] Offset: 0x6D97A8
    // private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler seekCompleted
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Video::VideoPlayer::EventHandler* seekCompleted;
    // Field size check
    static_assert(sizeof(::UnityEngine::Video::VideoPlayer::EventHandler*) == 0x8);
    // [DebuggerBrowsableAttribute] Offset: 0x6D97E4
    // private UnityEngine.Video.VideoPlayer/UnityEngine.Video.TimeEventHandler clockResyncOccurred
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Video::VideoPlayer::TimeEventHandler* clockResyncOccurred;
    // Field size check
    static_assert(sizeof(::UnityEngine::Video::VideoPlayer::TimeEventHandler*) == 0x8);
    // [DebuggerBrowsableAttribute] Offset: 0x6D9820
    // private UnityEngine.Video.VideoPlayer/UnityEngine.Video.FrameReadyEventHandler frameReady
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler* frameReady;
    // Field size check
    static_assert(sizeof(::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler prepareCompleted
    [[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& dyn_prepareCompleted();
    // Get instance field reference: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler loopPointReached
    [[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& dyn_loopPointReached();
    // Get instance field reference: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler started
    [[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& dyn_started();
    // Get instance field reference: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler frameDropped
    [[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& dyn_frameDropped();
    // Get instance field reference: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.ErrorEventHandler errorReceived
    [[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::ErrorEventHandler*& dyn_errorReceived();
    // Get instance field reference: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler seekCompleted
    [[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& dyn_seekCompleted();
    // Get instance field reference: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.TimeEventHandler clockResyncOccurred
    [[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::TimeEventHandler*& dyn_clockResyncOccurred();
    // Get instance field reference: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.FrameReadyEventHandler frameReady
    [[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler*& dyn_frameReady();
    // public System.Void set_url(System.String value)
    // Offset: 0x190A2D8
    void set_url(::StringW value);
    // public System.Boolean get_isPrepared()
    // Offset: 0x190A368
    bool get_isPrepared();
    // public System.Boolean get_isPlaying()
    // Offset: 0x190A468
    bool get_isPlaying();
    // public System.Double get_time()
    // Offset: 0x190A4A8
    double get_time();
    // public System.Void set_time(System.Double value)
    // Offset: 0x190A4E8
    void set_time(double value);
    // public System.Double get_length()
    // Offset: 0x190A538
    double get_length();
    // public System.Void add_loopPointReached(UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler value)
    // Offset: 0x190A5D0
    void add_loopPointReached(::UnityEngine::Video::VideoPlayer::EventHandler* value);
    // public System.Void remove_loopPointReached(UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler value)
    // Offset: 0x190A670
    void remove_loopPointReached(::UnityEngine::Video::VideoPlayer::EventHandler* value);
    // public System.Void add_seekCompleted(UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler value)
    // Offset: 0x190A710
    void add_seekCompleted(::UnityEngine::Video::VideoPlayer::EventHandler* value);
    // public System.Void remove_seekCompleted(UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler value)
    // Offset: 0x190A7B0
    void remove_seekCompleted(::UnityEngine::Video::VideoPlayer::EventHandler* value);
    // public System.Void Prepare()
    // Offset: 0x190A328
    void Prepare();
    // public System.Void Play()
    // Offset: 0x190A3A8
    void Play();
    // public System.Void Pause()
    // Offset: 0x190A3E8
    void Pause();
    // public System.Void Stop()
    // Offset: 0x190A428
    void Stop();
    // public System.Void SetTargetAudioSource(System.UInt16 trackIndex, UnityEngine.AudioSource source)
    // Offset: 0x190A578
    void SetTargetAudioSource(uint16_t trackIndex, ::UnityEngine::AudioSource* source);
    // static private System.Void InvokePrepareCompletedCallback_Internal(UnityEngine.Video.VideoPlayer source)
    // Offset: 0x190A850
    static void InvokePrepareCompletedCallback_Internal(::UnityEngine::Video::VideoPlayer* source);
    // static private System.Void InvokeFrameReadyCallback_Internal(UnityEngine.Video.VideoPlayer source, System.Int64 frameIdx)
    // Offset: 0x190ABE8
    static void InvokeFrameReadyCallback_Internal(::UnityEngine::Video::VideoPlayer* source, int64_t frameIdx);
    // static private System.Void InvokeLoopPointReachedCallback_Internal(UnityEngine.Video.VideoPlayer source)
    // Offset: 0x190AFA0
    static void InvokeLoopPointReachedCallback_Internal(::UnityEngine::Video::VideoPlayer* source);
    // static private System.Void InvokeStartedCallback_Internal(UnityEngine.Video.VideoPlayer source)
    // Offset: 0x190AFC4
    static void InvokeStartedCallback_Internal(::UnityEngine::Video::VideoPlayer* source);
    // static private System.Void InvokeFrameDroppedCallback_Internal(UnityEngine.Video.VideoPlayer source)
    // Offset: 0x190AFE8
    static void InvokeFrameDroppedCallback_Internal(::UnityEngine::Video::VideoPlayer* source);
    // static private System.Void InvokeErrorReceivedCallback_Internal(UnityEngine.Video.VideoPlayer source, System.String errorStr)
    // Offset: 0x190B00C
    static void InvokeErrorReceivedCallback_Internal(::UnityEngine::Video::VideoPlayer* source, ::StringW errorStr);
    // static private System.Void InvokeSeekCompletedCallback_Internal(UnityEngine.Video.VideoPlayer source)
    // Offset: 0x190B3C4
    static void InvokeSeekCompletedCallback_Internal(::UnityEngine::Video::VideoPlayer* source);
    // static private System.Void InvokeClockResyncOccurredCallback_Internal(UnityEngine.Video.VideoPlayer source, System.Double seconds)
    // Offset: 0x190B3E8
    static void InvokeClockResyncOccurredCallback_Internal(::UnityEngine::Video::VideoPlayer* source, double seconds);
  }; // UnityEngine.Video.VideoPlayer
  #pragma pack(pop)
  static check_size<sizeof(VideoPlayer), 80 + sizeof(::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler*)> __UnityEngine_Video_VideoPlayerSizeCheck;
  static_assert(sizeof(VideoPlayer) == 0x58);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::set_url
// Il2CppName: set_url
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Video::VideoPlayer::*)(::StringW)>(&UnityEngine::Video::VideoPlayer::set_url)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "set_url", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::get_isPrepared
// Il2CppName: get_isPrepared
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Video::VideoPlayer::*)()>(&UnityEngine::Video::VideoPlayer::get_isPrepared)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "get_isPrepared", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::get_isPlaying
// Il2CppName: get_isPlaying
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Video::VideoPlayer::*)()>(&UnityEngine::Video::VideoPlayer::get_isPlaying)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "get_isPlaying", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::get_time
// Il2CppName: get_time
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (UnityEngine::Video::VideoPlayer::*)()>(&UnityEngine::Video::VideoPlayer::get_time)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "get_time", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::set_time
// Il2CppName: set_time
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Video::VideoPlayer::*)(double)>(&UnityEngine::Video::VideoPlayer::set_time)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "set_time", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::get_length
// Il2CppName: get_length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (UnityEngine::Video::VideoPlayer::*)()>(&UnityEngine::Video::VideoPlayer::get_length)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "get_length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::add_loopPointReached
// Il2CppName: add_loopPointReached
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Video::VideoPlayer::*)(::UnityEngine::Video::VideoPlayer::EventHandler*)>(&UnityEngine::Video::VideoPlayer::add_loopPointReached)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Video", "VideoPlayer/EventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "add_loopPointReached", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::remove_loopPointReached
// Il2CppName: remove_loopPointReached
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Video::VideoPlayer::*)(::UnityEngine::Video::VideoPlayer::EventHandler*)>(&UnityEngine::Video::VideoPlayer::remove_loopPointReached)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Video", "VideoPlayer/EventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "remove_loopPointReached", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::add_seekCompleted
// Il2CppName: add_seekCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Video::VideoPlayer::*)(::UnityEngine::Video::VideoPlayer::EventHandler*)>(&UnityEngine::Video::VideoPlayer::add_seekCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Video", "VideoPlayer/EventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "add_seekCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::remove_seekCompleted
// Il2CppName: remove_seekCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Video::VideoPlayer::*)(::UnityEngine::Video::VideoPlayer::EventHandler*)>(&UnityEngine::Video::VideoPlayer::remove_seekCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Video", "VideoPlayer/EventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "remove_seekCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::Prepare
// Il2CppName: Prepare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Video::VideoPlayer::*)()>(&UnityEngine::Video::VideoPlayer::Prepare)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "Prepare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::Play
// Il2CppName: Play
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Video::VideoPlayer::*)()>(&UnityEngine::Video::VideoPlayer::Play)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "Play", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::Pause
// Il2CppName: Pause
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Video::VideoPlayer::*)()>(&UnityEngine::Video::VideoPlayer::Pause)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "Pause", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::Stop
// Il2CppName: Stop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Video::VideoPlayer::*)()>(&UnityEngine::Video::VideoPlayer::Stop)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "Stop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::SetTargetAudioSource
// Il2CppName: SetTargetAudioSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Video::VideoPlayer::*)(uint16_t, ::UnityEngine::AudioSource*)>(&UnityEngine::Video::VideoPlayer::SetTargetAudioSource)> {
  static const MethodInfo* get() {
    static auto* trackIndex = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "AudioSource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "SetTargetAudioSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{trackIndex, source});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::InvokePrepareCompletedCallback_Internal
// Il2CppName: InvokePrepareCompletedCallback_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Video::VideoPlayer*)>(&UnityEngine::Video::VideoPlayer::InvokePrepareCompletedCallback_Internal)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Video", "VideoPlayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "InvokePrepareCompletedCallback_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::InvokeFrameReadyCallback_Internal
// Il2CppName: InvokeFrameReadyCallback_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Video::VideoPlayer*, int64_t)>(&UnityEngine::Video::VideoPlayer::InvokeFrameReadyCallback_Internal)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Video", "VideoPlayer")->byval_arg;
    static auto* frameIdx = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "InvokeFrameReadyCallback_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, frameIdx});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::InvokeLoopPointReachedCallback_Internal
// Il2CppName: InvokeLoopPointReachedCallback_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Video::VideoPlayer*)>(&UnityEngine::Video::VideoPlayer::InvokeLoopPointReachedCallback_Internal)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Video", "VideoPlayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "InvokeLoopPointReachedCallback_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::InvokeStartedCallback_Internal
// Il2CppName: InvokeStartedCallback_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Video::VideoPlayer*)>(&UnityEngine::Video::VideoPlayer::InvokeStartedCallback_Internal)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Video", "VideoPlayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "InvokeStartedCallback_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::InvokeFrameDroppedCallback_Internal
// Il2CppName: InvokeFrameDroppedCallback_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Video::VideoPlayer*)>(&UnityEngine::Video::VideoPlayer::InvokeFrameDroppedCallback_Internal)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Video", "VideoPlayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "InvokeFrameDroppedCallback_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::InvokeErrorReceivedCallback_Internal
// Il2CppName: InvokeErrorReceivedCallback_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Video::VideoPlayer*, ::StringW)>(&UnityEngine::Video::VideoPlayer::InvokeErrorReceivedCallback_Internal)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Video", "VideoPlayer")->byval_arg;
    static auto* errorStr = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "InvokeErrorReceivedCallback_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, errorStr});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::InvokeSeekCompletedCallback_Internal
// Il2CppName: InvokeSeekCompletedCallback_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Video::VideoPlayer*)>(&UnityEngine::Video::VideoPlayer::InvokeSeekCompletedCallback_Internal)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Video", "VideoPlayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "InvokeSeekCompletedCallback_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source});
  }
};
// Writing MetadataGetter for method: UnityEngine::Video::VideoPlayer::InvokeClockResyncOccurredCallback_Internal
// Il2CppName: InvokeClockResyncOccurredCallback_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Video::VideoPlayer*, double)>(&UnityEngine::Video::VideoPlayer::InvokeClockResyncOccurredCallback_Internal)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Video", "VideoPlayer")->byval_arg;
    static auto* seconds = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Video::VideoPlayer*), "InvokeClockResyncOccurredCallback_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, seconds});
  }
};
