// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MeshSubsetCombineUtility
#include "UnityEngine/MeshSubsetCombineUtility.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.MeshSubsetCombineUtility/UnityEngine.MeshInstance
#include "UnityEngine/MeshSubsetCombineUtility_MeshInstance.hpp"
// Including type: UnityEngine.MeshSubsetCombineUtility/UnityEngine.SubMeshInstance
#include "UnityEngine/MeshSubsetCombineUtility_SubMeshInstance.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::MeshSubsetCombineUtility::MeshContainer, "UnityEngine", "MeshSubsetCombineUtility/MeshContainer");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x80
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.MeshSubsetCombineUtility/UnityEngine.MeshContainer
  // [TokenAttribute] Offset: FFFFFFFF
  struct MeshSubsetCombineUtility::MeshContainer/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.GameObject gameObject
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::GameObject* gameObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.MeshSubsetCombineUtility/UnityEngine.MeshInstance instance
    // Size: 0x70
    // Offset: 0x8
    ::UnityEngine::MeshSubsetCombineUtility::MeshInstance instance;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshSubsetCombineUtility::MeshInstance) == 0x70);
    // public System.Collections.Generic.List`1<UnityEngine.MeshSubsetCombineUtility/UnityEngine.SubMeshInstance> subMeshInstances
    // Size: 0x8
    // Offset: 0x78
    ::System::Collections::Generic::List_1<::UnityEngine::MeshSubsetCombineUtility::SubMeshInstance>* subMeshInstances;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::MeshSubsetCombineUtility::SubMeshInstance>*) == 0x8);
    public:
    // Creating value type constructor for type: MeshContainer
    constexpr MeshContainer(::UnityEngine::GameObject* gameObject_ = {}, ::UnityEngine::MeshSubsetCombineUtility::MeshInstance instance_ = {}, ::System::Collections::Generic::List_1<::UnityEngine::MeshSubsetCombineUtility::SubMeshInstance>* subMeshInstances_ = {}) noexcept : gameObject{gameObject_}, instance{instance_}, subMeshInstances{subMeshInstances_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public UnityEngine.GameObject gameObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_gameObject();
    // Get instance field reference: public UnityEngine.MeshSubsetCombineUtility/UnityEngine.MeshInstance instance
    [[deprecated("Use field access instead!")]] ::UnityEngine::MeshSubsetCombineUtility::MeshInstance& dyn_instance();
    // Get instance field reference: public System.Collections.Generic.List`1<UnityEngine.MeshSubsetCombineUtility/UnityEngine.SubMeshInstance> subMeshInstances
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::MeshSubsetCombineUtility::SubMeshInstance>*& dyn_subMeshInstances();
  }; // UnityEngine.MeshSubsetCombineUtility/UnityEngine.MeshContainer
  #pragma pack(pop)
  static check_size<sizeof(MeshSubsetCombineUtility::MeshContainer), 120 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::MeshSubsetCombineUtility::SubMeshInstance>*)> __UnityEngine_MeshSubsetCombineUtility_MeshContainerSizeCheck;
  static_assert(sizeof(MeshSubsetCombineUtility::MeshContainer) == 0x80);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
