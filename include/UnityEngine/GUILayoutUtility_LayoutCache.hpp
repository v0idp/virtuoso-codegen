// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.GUILayoutUtility
#include "UnityEngine/GUILayoutUtility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GUILayoutGroup
  class GUILayoutGroup;
}
// Forward declaring namespace: UnityEngineInternal
namespace UnityEngineInternal {
  // Forward declaring type: GenericStack
  class GenericStack;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::GUILayoutUtility::LayoutCache);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::GUILayoutUtility::LayoutCache*, "UnityEngine", "GUILayoutUtility/LayoutCache");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.GUILayoutUtility/UnityEngine.LayoutCache
  // [TokenAttribute] Offset: FFFFFFFF
  // [DebuggerDisplayAttribute] Offset: 6BEF84
  class GUILayoutUtility::LayoutCache : public ::Il2CppObject {
    public:
    public:
    // [DebuggerBrowsableAttribute] Offset: 0x6BF7E4
    // private System.Int32 <id>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    int id;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: id and: topLevel
    char __padding0[0x4] = {};
    // UnityEngine.GUILayoutGroup topLevel
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::GUILayoutGroup* topLevel;
    // Field size check
    static_assert(sizeof(::UnityEngine::GUILayoutGroup*) == 0x8);
    // UnityEngineInternal.GenericStack layoutGroups
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngineInternal::GenericStack* layoutGroups;
    // Field size check
    static_assert(sizeof(::UnityEngineInternal::GenericStack*) == 0x8);
    // UnityEngine.GUILayoutGroup windows
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GUILayoutGroup* windows;
    // Field size check
    static_assert(sizeof(::UnityEngine::GUILayoutGroup*) == 0x8);
    public:
    // Get instance field reference: private System.Int32 <id>k__BackingField
    [[deprecated]] int& dyn_$id$k__BackingField();
    // Get instance field reference: UnityEngine.GUILayoutGroup topLevel
    [[deprecated]] ::UnityEngine::GUILayoutGroup*& dyn_topLevel();
    // Get instance field reference: UnityEngineInternal.GenericStack layoutGroups
    [[deprecated]] ::UnityEngineInternal::GenericStack*& dyn_layoutGroups();
    // Get instance field reference: UnityEngine.GUILayoutGroup windows
    [[deprecated]] ::UnityEngine::GUILayoutGroup*& dyn_windows();
    // private System.Void set_id(System.Int32 value)
    // Offset: 0x1881498
    void set_id(int value);
    // System.Void .ctor(System.Int32 instanceID)
    // Offset: 0x187D17C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GUILayoutUtility::LayoutCache* New_ctor(int instanceID) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GUILayoutUtility::LayoutCache::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GUILayoutUtility::LayoutCache*, creationType>(instanceID)));
    }
  }; // UnityEngine.GUILayoutUtility/UnityEngine.LayoutCache
  #pragma pack(pop)
  static check_size<sizeof(GUILayoutUtility::LayoutCache), 40 + sizeof(::UnityEngine::GUILayoutGroup*)> __UnityEngine_GUILayoutUtility_LayoutCacheSizeCheck;
  static_assert(sizeof(GUILayoutUtility::LayoutCache) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::GUILayoutUtility::LayoutCache::set_id
// Il2CppName: set_id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUILayoutUtility::LayoutCache::*)(int)>(&UnityEngine::GUILayoutUtility::LayoutCache::set_id)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutUtility::LayoutCache*), "set_id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUILayoutUtility::LayoutCache::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
