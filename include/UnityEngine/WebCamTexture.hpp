// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.WebCamDevice
#include "UnityEngine/WebCamDevice.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: WebCamTexture
  class WebCamTexture;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::WebCamTexture);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::WebCamTexture*, "UnityEngine", "WebCamTexture");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.WebCamTexture
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: 6C1AD0
  // [NativeHeaderAttribute] Offset: 6C1AD0
  // [NativeHeaderAttribute] Offset: 6C1AD0
  class WebCamTexture : public ::UnityEngine::Texture {
    public:
    // static public UnityEngine.WebCamDevice[] get_devices()
    // Offset: 0x18DAE70
    static ::ArrayW<::UnityEngine::WebCamDevice> get_devices();
    // public System.Boolean get_isPlaying()
    // Offset: 0x18DB050
    bool get_isPlaying();
    // public System.Void .ctor(System.String deviceName, System.Int32 requestedWidth, System.Int32 requestedHeight, System.Int32 requestedFPS)
    // Offset: 0x18DAEA4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebCamTexture* New_ctor(::StringW deviceName, int requestedWidth, int requestedHeight, int requestedFPS) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WebCamTexture::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebCamTexture*, creationType>(deviceName, requestedWidth, requestedHeight, requestedFPS)));
    }
    // public System.Void Play()
    // Offset: 0x18DAFD0
    void Play();
    // public System.Void Stop()
    // Offset: 0x18DB010
    void Stop();
    // public UnityEngine.Color32[] GetPixels32()
    // Offset: 0x18DB090
    ::ArrayW<::UnityEngine::Color32> GetPixels32();
    // public UnityEngine.Color32[] GetPixels32(UnityEngine.Color32[] colors)
    // Offset: 0x18DB0D4
    ::ArrayW<::UnityEngine::Color32> GetPixels32(::ArrayW<::UnityEngine::Color32> colors);
    // static private System.Void Internal_CreateWebCamTexture(UnityEngine.WebCamTexture self, System.String scriptingDevice, System.Int32 requestedWidth, System.Int32 requestedHeight, System.Int32 maxFramerate)
    // Offset: 0x18DAF60
    static void Internal_CreateWebCamTexture(::UnityEngine::WebCamTexture* self, ::StringW scriptingDevice, int requestedWidth, int requestedHeight, int maxFramerate);
  }; // UnityEngine.WebCamTexture
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::WebCamTexture::get_devices
// Il2CppName: get_devices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::WebCamDevice> (*)()>(&UnityEngine::WebCamTexture::get_devices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::WebCamTexture*), "get_devices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::WebCamTexture::get_isPlaying
// Il2CppName: get_isPlaying
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::WebCamTexture::*)()>(&UnityEngine::WebCamTexture::get_isPlaying)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::WebCamTexture*), "get_isPlaying", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::WebCamTexture::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::WebCamTexture::Play
// Il2CppName: Play
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::WebCamTexture::*)()>(&UnityEngine::WebCamTexture::Play)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::WebCamTexture*), "Play", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::WebCamTexture::Stop
// Il2CppName: Stop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::WebCamTexture::*)()>(&UnityEngine::WebCamTexture::Stop)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::WebCamTexture*), "Stop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::WebCamTexture::GetPixels32
// Il2CppName: GetPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Color32> (UnityEngine::WebCamTexture::*)()>(&UnityEngine::WebCamTexture::GetPixels32)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::WebCamTexture*), "GetPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::WebCamTexture::GetPixels32
// Il2CppName: GetPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Color32> (UnityEngine::WebCamTexture::*)(::ArrayW<::UnityEngine::Color32>)>(&UnityEngine::WebCamTexture::GetPixels32)> {
  static const MethodInfo* get() {
    static auto* colors = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Color32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::WebCamTexture*), "GetPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{colors});
  }
};
// Writing MetadataGetter for method: UnityEngine::WebCamTexture::Internal_CreateWebCamTexture
// Il2CppName: Internal_CreateWebCamTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::WebCamTexture*, ::StringW, int, int, int)>(&UnityEngine::WebCamTexture::Internal_CreateWebCamTexture)> {
  static const MethodInfo* get() {
    static auto* self = &::il2cpp_utils::GetClassFromName("UnityEngine", "WebCamTexture")->byval_arg;
    static auto* scriptingDevice = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* requestedWidth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* requestedHeight = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* maxFramerate = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::WebCamTexture*), "Internal_CreateWebCamTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{self, scriptingDevice, requestedWidth, requestedHeight, maxFramerate});
  }
};
