// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: HelpURLAttribute
  class HelpURLAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::HelpURLAttribute);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::HelpURLAttribute*, "UnityEngine", "HelpURLAttribute");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.HelpURLAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: 6611A0
  // [UsedByNativeCodeAttribute] Offset: 6611A0
  class HelpURLAttribute : public ::System::Attribute {
    public:
    public:
    // readonly System.String m_Url
    // Size: 0x8
    // Offset: 0x10
    ::StringW m_Url;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // readonly System.Boolean m_Dispatcher
    // Size: 0x1
    // Offset: 0x18
    bool m_Dispatcher;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_Dispatcher and: m_DispatchingFieldName
    char __padding1[0x7] = {};
    // readonly System.String m_DispatchingFieldName
    // Size: 0x8
    // Offset: 0x20
    ::StringW m_DispatchingFieldName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: readonly System.String m_Url
    [[deprecated]] ::StringW& dyn_m_Url();
    // Get instance field reference: readonly System.Boolean m_Dispatcher
    [[deprecated]] bool& dyn_m_Dispatcher();
    // Get instance field reference: readonly System.String m_DispatchingFieldName
    [[deprecated]] ::StringW& dyn_m_DispatchingFieldName();
    // public System.Void .ctor(System.String url)
    // Offset: 0x1129634
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HelpURLAttribute* New_ctor(::StringW url) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HelpURLAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HelpURLAttribute*, creationType>(url)));
    }
  }; // UnityEngine.HelpURLAttribute
  #pragma pack(pop)
  static check_size<sizeof(HelpURLAttribute), 32 + sizeof(::StringW)> __UnityEngine_HelpURLAttributeSizeCheck;
  static_assert(sizeof(HelpURLAttribute) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::HelpURLAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
