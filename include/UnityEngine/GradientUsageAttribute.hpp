// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.PropertyAttribute
#include "UnityEngine/PropertyAttribute.hpp"
// Including type: UnityEngine.ColorSpace
#include "UnityEngine/ColorSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GradientUsageAttribute
  class GradientUsageAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::GradientUsageAttribute);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::GradientUsageAttribute*, "UnityEngine", "GradientUsageAttribute");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.GradientUsageAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: 660E68
  class GradientUsageAttribute : public ::UnityEngine::PropertyAttribute {
    public:
    public:
    // public readonly System.Boolean hdr
    // Size: 0x1
    // Offset: 0x10
    bool hdr;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: hdr and: colorSpace
    char __padding0[0x3] = {};
    // public readonly UnityEngine.ColorSpace colorSpace
    // Size: 0x4
    // Offset: 0x14
    ::UnityEngine::ColorSpace colorSpace;
    // Field size check
    static_assert(sizeof(::UnityEngine::ColorSpace) == 0x4);
    public:
    // Get instance field reference: public readonly System.Boolean hdr
    [[deprecated("Use field access instead!")]] bool& dyn_hdr();
    // Get instance field reference: public readonly UnityEngine.ColorSpace colorSpace
    [[deprecated("Use field access instead!")]] ::UnityEngine::ColorSpace& dyn_colorSpace();
    // public System.Void .ctor(System.Boolean hdr)
    // Offset: 0x1128A08
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GradientUsageAttribute* New_ctor(bool hdr) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GradientUsageAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GradientUsageAttribute*, creationType>(hdr)));
    }
  }; // UnityEngine.GradientUsageAttribute
  #pragma pack(pop)
  static check_size<sizeof(GradientUsageAttribute), 20 + sizeof(::UnityEngine::ColorSpace)> __UnityEngine_GradientUsageAttributeSizeCheck;
  static_assert(sizeof(GradientUsageAttribute) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::GradientUsageAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
