// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.ServicePointScheduler
#include "System/Net/ServicePointScheduler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net
namespace System::Net {
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: TaskCompletionSource`1<TResult>
  template<typename TResult>
  class TaskCompletionSource_1;
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::ServicePointScheduler::AsyncManualResetEvent);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::ServicePointScheduler::AsyncManualResetEvent*, "System.Net", "ServicePointScheduler/AsyncManualResetEvent");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.ServicePointScheduler/System.Net.AsyncManualResetEvent
  // [TokenAttribute] Offset: FFFFFFFF
  class ServicePointScheduler::AsyncManualResetEvent : public ::Il2CppObject {
    public:
    // Nested type: ::System::Net::ServicePointScheduler::AsyncManualResetEvent::$WaitAsync$d__3
    struct $WaitAsync$d__3;
    // Nested type: ::System::Net::ServicePointScheduler::AsyncManualResetEvent::$$c
    class $$c;
    public:
    // private System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> m_tcs
    // Size: 0x8
    // Offset: 0x10
    ::System::Threading::Tasks::TaskCompletionSource_1<bool>* m_tcs;
    // Field size check
    static_assert(sizeof(::System::Threading::Tasks::TaskCompletionSource_1<bool>*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Threading::Tasks::TaskCompletionSource_1<bool>*
    constexpr operator ::System::Threading::Tasks::TaskCompletionSource_1<bool>*() const noexcept {
      return m_tcs;
    }
    // Get instance field reference: private System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> m_tcs
    [[deprecated]] ::System::Threading::Tasks::TaskCompletionSource_1<bool>*& dyn_m_tcs();
    // public System.Void .ctor(System.Boolean state)
    // Offset: 0x9FF118
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ServicePointScheduler::AsyncManualResetEvent* New_ctor(bool state) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServicePointScheduler::AsyncManualResetEvent::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ServicePointScheduler::AsyncManualResetEvent*, creationType>(state)));
    }
    // public System.Threading.Tasks.Task`1<System.Boolean> WaitAsync(System.Int32 millisecondTimeout)
    // Offset: 0x9FED50
    ::System::Threading::Tasks::Task_1<bool>* WaitAsync(int millisecondTimeout);
    // public System.Void Set()
    // Offset: 0x9FEE9C
    void Set();
    // public System.Void Reset()
    // Offset: 0x9FEC84
    void Reset();
  }; // System.Net.ServicePointScheduler/System.Net.AsyncManualResetEvent
  #pragma pack(pop)
  static check_size<sizeof(ServicePointScheduler::AsyncManualResetEvent), 16 + sizeof(::System::Threading::Tasks::TaskCompletionSource_1<bool>*)> __System_Net_ServicePointScheduler_AsyncManualResetEventSizeCheck;
  static_assert(sizeof(ServicePointScheduler::AsyncManualResetEvent) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::ServicePointScheduler::AsyncManualResetEvent::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::ServicePointScheduler::AsyncManualResetEvent::WaitAsync
// Il2CppName: WaitAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<bool>* (System::Net::ServicePointScheduler::AsyncManualResetEvent::*)(int)>(&System::Net::ServicePointScheduler::AsyncManualResetEvent::WaitAsync)> {
  static const MethodInfo* get() {
    static auto* millisecondTimeout = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::ServicePointScheduler::AsyncManualResetEvent*), "WaitAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{millisecondTimeout});
  }
};
// Writing MetadataGetter for method: System::Net::ServicePointScheduler::AsyncManualResetEvent::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::ServicePointScheduler::AsyncManualResetEvent::*)()>(&System::Net::ServicePointScheduler::AsyncManualResetEvent::Set)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::ServicePointScheduler::AsyncManualResetEvent*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::ServicePointScheduler::AsyncManualResetEvent::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::ServicePointScheduler::AsyncManualResetEvent::*)()>(&System::Net::ServicePointScheduler::AsyncManualResetEvent::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::ServicePointScheduler::AsyncManualResetEvent*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
