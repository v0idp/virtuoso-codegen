// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ComponentModel.ICustomTypeDescriptor
#include "System/ComponentModel/ICustomTypeDescriptor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Data
namespace System::Data {
  // Forward declaring type: DataView
  class DataView;
  // Forward declaring type: DataRow
  class DataRow;
  // Forward declaring type: DataRowVersion
  struct DataRowVersion;
  // Forward declaring type: DataColumn
  class DataColumn;
  // Forward declaring type: DataRelation
  class DataRelation;
}
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: PropertyChangedEventHandler
  class PropertyChangedEventHandler;
  // Forward declaring type: PropertyDescriptorCollection
  class PropertyDescriptorCollection;
  // Forward declaring type: AttributeCollection
  class AttributeCollection;
  // Forward declaring type: TypeConverter
  class TypeConverter;
  // Forward declaring type: PropertyDescriptor
  class PropertyDescriptor;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Attribute
  class Attribute;
}
// Completed forward declares
// Type namespace: System.Data
namespace System::Data {
  // Forward declaring type: DataRowView
  class DataRowView;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::DataRowView);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::DataRowView*, "System.Data", "DataRowView");
// Type namespace: System.Data
namespace System::Data {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.DataRowView
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 6BA168
  class DataRowView : public ::Il2CppObject/*, public ::System::ComponentModel::ICustomTypeDescriptor*/ {
    public:
    public:
    // private readonly System.Data.DataView _dataView
    // Size: 0x8
    // Offset: 0x10
    ::System::Data::DataView* dataView;
    // Field size check
    static_assert(sizeof(::System::Data::DataView*) == 0x8);
    // private readonly System.Data.DataRow _row
    // Size: 0x8
    // Offset: 0x18
    ::System::Data::DataRow* row;
    // Field size check
    static_assert(sizeof(::System::Data::DataRow*) == 0x8);
    // private System.Boolean _delayBeginEdit
    // Size: 0x1
    // Offset: 0x20
    bool delayBeginEdit;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: delayBeginEdit and: PropertyChanged
    char __padding2[0x7] = {};
    // private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
    // Size: 0x8
    // Offset: 0x28
    ::System::ComponentModel::PropertyChangedEventHandler* PropertyChanged;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::PropertyChangedEventHandler*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::ComponentModel::ICustomTypeDescriptor
    operator ::System::ComponentModel::ICustomTypeDescriptor() noexcept {
      return *reinterpret_cast<::System::ComponentModel::ICustomTypeDescriptor*>(this);
    }
    // Get static field: static private readonly System.ComponentModel.PropertyDescriptorCollection s_zeroPropertyDescriptorCollection
    static ::System::ComponentModel::PropertyDescriptorCollection* _get_s_zeroPropertyDescriptorCollection();
    // Set static field: static private readonly System.ComponentModel.PropertyDescriptorCollection s_zeroPropertyDescriptorCollection
    static void _set_s_zeroPropertyDescriptorCollection(::System::ComponentModel::PropertyDescriptorCollection* value);
    // Get instance field reference: private readonly System.Data.DataView _dataView
    [[deprecated("Use field access instead!")]] ::System::Data::DataView*& dyn__dataView();
    // Get instance field reference: private readonly System.Data.DataRow _row
    [[deprecated("Use field access instead!")]] ::System::Data::DataRow*& dyn__row();
    // Get instance field reference: private System.Boolean _delayBeginEdit
    [[deprecated("Use field access instead!")]] bool& dyn__delayBeginEdit();
    // Get instance field reference: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& dyn_PropertyChanged();
    // public System.Data.DataView get_DataView()
    // Offset: 0xFA28F8
    ::System::Data::DataView* get_DataView();
    // private System.Data.DataRowVersion get_RowVersionDefault()
    // Offset: 0xFA2900
    ::System::Data::DataRowVersion get_RowVersionDefault();
    // public System.Data.DataRow get_Row()
    // Offset: 0xFA2B68
    ::System::Data::DataRow* get_Row();
    // public System.Boolean get_IsNew()
    // Offset: 0xFA2BC8
    bool get_IsNew();
    // System.Void .ctor(System.Data.DataView dataView, System.Data.DataRow row)
    // Offset: 0xFA2894
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataRowView* New_ctor(::System::Data::DataView* dataView, ::System::Data::DataRow* row) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataRowView*, creationType>(dataView, row)));
    }
    // static private System.Void .cctor()
    // Offset: 0xFA2E30
    static void _cctor();
    // System.Int32 GetRecord()
    // Offset: 0xFA295C
    int GetRecord();
    // System.Boolean HasRecord()
    // Offset: 0xFA298C
    bool HasRecord();
    // System.Object GetColumnValue(System.Data.DataColumn column)
    // Offset: 0xF97588
    ::Il2CppObject* GetColumnValue(::System::Data::DataColumn* column);
    // System.Void SetColumnValue(System.Data.DataColumn column, System.Object value)
    // Offset: 0xF976AC
    void SetColumnValue(::System::Data::DataColumn* column, ::Il2CppObject* value);
    // public System.Data.DataView CreateChildView(System.Data.DataRelation relation, System.Boolean followParent)
    // Offset: 0xFA29BC
    ::System::Data::DataView* CreateChildView(::System::Data::DataRelation* relation, bool followParent);
    // public System.Data.DataView CreateChildView(System.Data.DataRelation relation)
    // Offset: 0xF9E430
    ::System::Data::DataView* CreateChildView(::System::Data::DataRelation* relation);
    // public System.Void EndEdit()
    // Offset: 0xFA2B70
    void EndEdit();
    // System.Void RaisePropertyChangedEvent(System.String propName)
    // Offset: 0xFA2BF0
    void RaisePropertyChangedEvent(::StringW propName);
    // private System.ComponentModel.AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
    // Offset: 0xFA2C80
    ::System::ComponentModel::AttributeCollection* System_ComponentModel_ICustomTypeDescriptor_GetAttributes();
    // private System.ComponentModel.TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter()
    // Offset: 0xFA2CDC
    ::System::ComponentModel::TypeConverter* System_ComponentModel_ICustomTypeDescriptor_GetConverter();
    // private System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties()
    // Offset: 0xFA2CE4
    ::System::ComponentModel::PropertyDescriptorCollection* System_ComponentModel_ICustomTypeDescriptor_GetProperties();
    // private System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[] attributes)
    // Offset: 0xFA2D8C
    ::System::ComponentModel::PropertyDescriptorCollection* System_ComponentModel_ICustomTypeDescriptor_GetProperties(::ArrayW<::System::Attribute*> attributes);
    // private System.Object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor pd)
    // Offset: 0xFA2E2C
    ::Il2CppObject* System_ComponentModel_ICustomTypeDescriptor_GetPropertyOwner(::System::ComponentModel::PropertyDescriptor* pd);
    // public override System.Boolean Equals(System.Object other)
    // Offset: 0xFA28CC
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object other)
    bool Equals(::Il2CppObject* other);
    // public override System.Int32 GetHashCode()
    // Offset: 0xFA28D8
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
  }; // System.Data.DataRowView
  #pragma pack(pop)
  static check_size<sizeof(DataRowView), 40 + sizeof(::System::ComponentModel::PropertyChangedEventHandler*)> __System_Data_DataRowViewSizeCheck;
  static_assert(sizeof(DataRowView) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::DataRowView::get_DataView
// Il2CppName: get_DataView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataView* (System::Data::DataRowView::*)()>(&System::Data::DataRowView::get_DataView)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), "get_DataView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRowView::get_RowVersionDefault
// Il2CppName: get_RowVersionDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataRowVersion (System::Data::DataRowView::*)()>(&System::Data::DataRowView::get_RowVersionDefault)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), "get_RowVersionDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRowView::get_Row
// Il2CppName: get_Row
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataRow* (System::Data::DataRowView::*)()>(&System::Data::DataRowView::get_Row)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), "get_Row", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRowView::get_IsNew
// Il2CppName: get_IsNew
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataRowView::*)()>(&System::Data::DataRowView::get_IsNew)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), "get_IsNew", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRowView::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DataRowView::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Data::DataRowView::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRowView::GetRecord
// Il2CppName: GetRecord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataRowView::*)()>(&System::Data::DataRowView::GetRecord)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), "GetRecord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRowView::HasRecord
// Il2CppName: HasRecord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataRowView::*)()>(&System::Data::DataRowView::HasRecord)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), "HasRecord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRowView::GetColumnValue
// Il2CppName: GetColumnValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::DataRowView::*)(::System::Data::DataColumn*)>(&System::Data::DataRowView::GetColumnValue)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), "GetColumnValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: System::Data::DataRowView::SetColumnValue
// Il2CppName: SetColumnValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRowView::*)(::System::Data::DataColumn*, ::Il2CppObject*)>(&System::Data::DataRowView::SetColumnValue)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), "SetColumnValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column, value});
  }
};
// Writing MetadataGetter for method: System::Data::DataRowView::CreateChildView
// Il2CppName: CreateChildView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataView* (System::Data::DataRowView::*)(::System::Data::DataRelation*, bool)>(&System::Data::DataRowView::CreateChildView)> {
  static const MethodInfo* get() {
    static auto* relation = &::il2cpp_utils::GetClassFromName("System.Data", "DataRelation")->byval_arg;
    static auto* followParent = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), "CreateChildView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{relation, followParent});
  }
};
// Writing MetadataGetter for method: System::Data::DataRowView::CreateChildView
// Il2CppName: CreateChildView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataView* (System::Data::DataRowView::*)(::System::Data::DataRelation*)>(&System::Data::DataRowView::CreateChildView)> {
  static const MethodInfo* get() {
    static auto* relation = &::il2cpp_utils::GetClassFromName("System.Data", "DataRelation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), "CreateChildView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{relation});
  }
};
// Writing MetadataGetter for method: System::Data::DataRowView::EndEdit
// Il2CppName: EndEdit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRowView::*)()>(&System::Data::DataRowView::EndEdit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), "EndEdit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRowView::RaisePropertyChangedEvent
// Il2CppName: RaisePropertyChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRowView::*)(::StringW)>(&System::Data::DataRowView::RaisePropertyChangedEvent)> {
  static const MethodInfo* get() {
    static auto* propName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), "RaisePropertyChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propName});
  }
};
// Writing MetadataGetter for method: System::Data::DataRowView::System_ComponentModel_ICustomTypeDescriptor_GetAttributes
// Il2CppName: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::AttributeCollection* (System::Data::DataRowView::*)()>(&System::Data::DataRowView::System_ComponentModel_ICustomTypeDescriptor_GetAttributes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), "System.ComponentModel.ICustomTypeDescriptor.GetAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRowView::System_ComponentModel_ICustomTypeDescriptor_GetConverter
// Il2CppName: System.ComponentModel.ICustomTypeDescriptor.GetConverter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::TypeConverter* (System::Data::DataRowView::*)()>(&System::Data::DataRowView::System_ComponentModel_ICustomTypeDescriptor_GetConverter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), "System.ComponentModel.ICustomTypeDescriptor.GetConverter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRowView::System_ComponentModel_ICustomTypeDescriptor_GetProperties
// Il2CppName: System.ComponentModel.ICustomTypeDescriptor.GetProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::PropertyDescriptorCollection* (System::Data::DataRowView::*)()>(&System::Data::DataRowView::System_ComponentModel_ICustomTypeDescriptor_GetProperties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), "System.ComponentModel.ICustomTypeDescriptor.GetProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRowView::System_ComponentModel_ICustomTypeDescriptor_GetProperties
// Il2CppName: System.ComponentModel.ICustomTypeDescriptor.GetProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::PropertyDescriptorCollection* (System::Data::DataRowView::*)(::ArrayW<::System::Attribute*>)>(&System::Data::DataRowView::System_ComponentModel_ICustomTypeDescriptor_GetProperties)> {
  static const MethodInfo* get() {
    static auto* attributes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Attribute"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), "System.ComponentModel.ICustomTypeDescriptor.GetProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attributes});
  }
};
// Writing MetadataGetter for method: System::Data::DataRowView::System_ComponentModel_ICustomTypeDescriptor_GetPropertyOwner
// Il2CppName: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::DataRowView::*)(::System::ComponentModel::PropertyDescriptor*)>(&System::Data::DataRowView::System_ComponentModel_ICustomTypeDescriptor_GetPropertyOwner)> {
  static const MethodInfo* get() {
    static auto* pd = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), "System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pd});
  }
};
// Writing MetadataGetter for method: System::Data::DataRowView::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataRowView::*)(::Il2CppObject*)>(&System::Data::DataRowView::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: System::Data::DataRowView::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataRowView::*)()>(&System::Data::DataRowView::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRowView*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
