// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Data.DataRowAction
#include "System/Data/DataRowAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Data
namespace System::Data {
  // Forward declaring type: DataTable
  class DataTable;
  // Forward declaring type: DataColumnCollection
  class DataColumnCollection;
  // Forward declaring type: DataColumn
  class DataColumn;
  // Forward declaring type: DataError
  class DataError;
  // Forward declaring type: DataRowState
  struct DataRowState;
  // Forward declaring type: DataRowVersion
  struct DataRowVersion;
  // Forward declaring type: DataRowBuilder
  class DataRowBuilder;
  // Forward declaring type: DataRelation
  class DataRelation;
  // Forward declaring type: DataKey
  struct DataKey;
  // Forward declaring type: DataViewRowState
  struct DataViewRowState;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: System.Data
namespace System::Data {
  // Forward declaring type: DataRow
  class DataRow;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::DataRow);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::DataRow*, "System.Data", "DataRow");
// Type namespace: System.Data
namespace System::Data {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.DataRow
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 6BA0D8
  class DataRow : public ::Il2CppObject {
    public:
    public:
    // private readonly System.Data.DataTable _table
    // Size: 0x8
    // Offset: 0x10
    ::System::Data::DataTable* table;
    // Field size check
    static_assert(sizeof(::System::Data::DataTable*) == 0x8);
    // private readonly System.Data.DataColumnCollection _columns
    // Size: 0x8
    // Offset: 0x18
    ::System::Data::DataColumnCollection* columns;
    // Field size check
    static_assert(sizeof(::System::Data::DataColumnCollection*) == 0x8);
    // System.Int32 _oldRecord
    // Size: 0x4
    // Offset: 0x20
    int oldRecord;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 _newRecord
    // Size: 0x4
    // Offset: 0x24
    int newRecord;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 _tempRecord
    // Size: 0x4
    // Offset: 0x28
    int tempRecord;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: tempRecord and: rowID
    char __padding4[0x4] = {};
    // System.Int64 _rowID
    // Size: 0x8
    // Offset: 0x30
    int64_t rowID;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // System.Data.DataRowAction _action
    // Size: 0x4
    // Offset: 0x38
    ::System::Data::DataRowAction action;
    // Field size check
    static_assert(sizeof(::System::Data::DataRowAction) == 0x4);
    // System.Boolean _inChangingEvent
    // Size: 0x1
    // Offset: 0x3C
    bool inChangingEvent;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Boolean _inDeletingEvent
    // Size: 0x1
    // Offset: 0x3D
    bool inDeletingEvent;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Boolean _inCascade
    // Size: 0x1
    // Offset: 0x3E
    bool inCascade;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: inCascade and: lastChangedColumn
    char __padding9[0x1] = {};
    // private System.Data.DataColumn _lastChangedColumn
    // Size: 0x8
    // Offset: 0x40
    ::System::Data::DataColumn* lastChangedColumn;
    // Field size check
    static_assert(sizeof(::System::Data::DataColumn*) == 0x8);
    // private System.Int32 _countColumnChange
    // Size: 0x4
    // Offset: 0x48
    int countColumnChange;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: countColumnChange and: error
    char __padding11[0x4] = {};
    // private System.Data.DataError _error
    // Size: 0x8
    // Offset: 0x50
    ::System::Data::DataError* error;
    // Field size check
    static_assert(sizeof(::System::Data::DataError*) == 0x8);
    // private System.Int32 _rbTreeNodeId
    // Size: 0x4
    // Offset: 0x58
    int rbTreeNodeId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // readonly System.Int32 _objectID
    // Size: 0x4
    // Offset: 0x5C
    int objectID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get static field: static private System.Int32 s_objectTypeCount
    static int _get_s_objectTypeCount();
    // Set static field: static private System.Int32 s_objectTypeCount
    static void _set_s_objectTypeCount(int value);
    // Get instance field reference: private readonly System.Data.DataTable _table
    [[deprecated("Use field access instead!")]] ::System::Data::DataTable*& dyn__table();
    // Get instance field reference: private readonly System.Data.DataColumnCollection _columns
    [[deprecated("Use field access instead!")]] ::System::Data::DataColumnCollection*& dyn__columns();
    // Get instance field reference: System.Int32 _oldRecord
    [[deprecated("Use field access instead!")]] int& dyn__oldRecord();
    // Get instance field reference: System.Int32 _newRecord
    [[deprecated("Use field access instead!")]] int& dyn__newRecord();
    // Get instance field reference: System.Int32 _tempRecord
    [[deprecated("Use field access instead!")]] int& dyn__tempRecord();
    // Get instance field reference: System.Int64 _rowID
    [[deprecated("Use field access instead!")]] int64_t& dyn__rowID();
    // Get instance field reference: System.Data.DataRowAction _action
    [[deprecated("Use field access instead!")]] ::System::Data::DataRowAction& dyn__action();
    // Get instance field reference: System.Boolean _inChangingEvent
    [[deprecated("Use field access instead!")]] bool& dyn__inChangingEvent();
    // Get instance field reference: System.Boolean _inDeletingEvent
    [[deprecated("Use field access instead!")]] bool& dyn__inDeletingEvent();
    // Get instance field reference: System.Boolean _inCascade
    [[deprecated("Use field access instead!")]] bool& dyn__inCascade();
    // Get instance field reference: private System.Data.DataColumn _lastChangedColumn
    [[deprecated("Use field access instead!")]] ::System::Data::DataColumn*& dyn__lastChangedColumn();
    // Get instance field reference: private System.Int32 _countColumnChange
    [[deprecated("Use field access instead!")]] int& dyn__countColumnChange();
    // Get instance field reference: private System.Data.DataError _error
    [[deprecated("Use field access instead!")]] ::System::Data::DataError*& dyn__error();
    // Get instance field reference: private System.Int32 _rbTreeNodeId
    [[deprecated("Use field access instead!")]] int& dyn__rbTreeNodeId();
    // Get instance field reference: readonly System.Int32 _objectID
    [[deprecated("Use field access instead!")]] int& dyn__objectID();
    // System.Data.DataColumn get_LastChangedColumn()
    // Offset: 0xF9E4E8
    ::System::Data::DataColumn* get_LastChangedColumn();
    // System.Void set_LastChangedColumn(System.Data.DataColumn value)
    // Offset: 0xF9E504
    void set_LastChangedColumn(::System::Data::DataColumn* value);
    // System.Boolean get_HasPropertyChanged()
    // Offset: 0xF9E518
    bool get_HasPropertyChanged();
    // System.Int32 get_RBTreeNodeId()
    // Offset: 0xF9E528
    int get_RBTreeNodeId();
    // System.Void set_RBTreeNodeId(System.Int32 value)
    // Offset: 0xF9E530
    void set_RBTreeNodeId(int value);
    // public System.String get_RowError()
    // Offset: 0xF9E5EC
    ::StringW get_RowError();
    // public System.Void set_RowError(System.String value)
    // Offset: 0xF9E64C
    void set_RowError(::StringW value);
    // System.Int64 get_rowID()
    // Offset: 0xF9E818
    int64_t get_rowID();
    // System.Void set_rowID(System.Int64 value)
    // Offset: 0xF9E820
    void set_rowID(int64_t value);
    // public System.Data.DataRowState get_RowState()
    // Offset: 0xF9E83C
    ::System::Data::DataRowState get_RowState();
    // public System.Data.DataTable get_Table()
    // Offset: 0xF9EA80
    ::System::Data::DataTable* get_Table();
    // public System.Void set_Item(System.String columnName, System.Object value)
    // Offset: 0xF9EB5C
    void set_Item(::StringW columnName, ::Il2CppObject* value);
    // public System.Object get_Item(System.Data.DataColumn column)
    // Offset: 0xF9EA40
    ::Il2CppObject* get_Item(::System::Data::DataColumn* column);
    // public System.Void set_Item(System.Data.DataColumn column, System.Object value)
    // Offset: 0xF9EBF8
    void set_Item(::System::Data::DataColumn* column, ::Il2CppObject* value);
    // public System.Object get_Item(System.Data.DataColumn column, System.Data.DataRowVersion version)
    // Offset: 0xF9F270
    ::Il2CppObject* get_Item(::System::Data::DataColumn* column, ::System::Data::DataRowVersion version);
    // public System.Void set_ItemArray(System.Object[] value)
    // Offset: 0xF9F328
    void set_ItemArray(::ArrayW<::Il2CppObject*> value);
    // public System.Boolean get_HasErrors()
    // Offset: 0xF9FE40
    bool get_HasErrors();
    // protected internal System.Void .ctor(System.Data.DataRowBuilder builder)
    // Offset: 0xF9E444
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataRow* New_ctor(::System::Data::DataRowBuilder* builder) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataRow*, creationType>(builder)));
    }
    // private System.Void RowErrorChanged()
    // Offset: 0xF9E7B8
    void RowErrorChanged();
    // System.Void CheckForLoops(System.Data.DataRelation rel)
    // Offset: 0xF9BF74
    void CheckForLoops(::System::Data::DataRelation* rel);
    // System.Int32 GetNestedParentCount()
    // Offset: 0xF9EA88
    int GetNestedParentCount();
    // public System.Void AcceptChanges()
    // Offset: 0xF9F704
    void AcceptChanges();
    // public System.Void BeginEdit()
    // Offset: 0xF9FA80
    void BeginEdit();
    // private System.Boolean BeginEditInternal()
    // Offset: 0xF9F014
    bool BeginEditInternal();
    // public System.Void CancelEdit()
    // Offset: 0xF9F120
    void CancelEdit();
    // private System.Void CheckColumn(System.Data.DataColumn column)
    // Offset: 0xF9EF1C
    void CheckColumn(::System::Data::DataColumn* column);
    // System.Void CheckInTable()
    // Offset: 0xF9FA84
    void CheckInTable();
    // public System.Void Delete()
    // Offset: 0xF9FAC4
    void Delete();
    // public System.Void EndEdit()
    // Offset: 0xF9F188
    void EndEdit();
    // public System.Void SetColumnError(System.Int32 columnIndex, System.String error)
    // Offset: 0xF9FB34
    void SetColumnError(int columnIndex, ::StringW error);
    // public System.Void SetColumnError(System.Data.DataColumn column, System.String error)
    // Offset: 0xF9FBA4
    void SetColumnError(::System::Data::DataColumn* column, ::StringW error);
    // public System.String GetColumnError(System.Data.DataColumn column)
    // Offset: 0xF9FD80
    ::StringW GetColumnError(::System::Data::DataColumn* column);
    // public System.Void ClearErrors()
    // Offset: 0xF9FE08
    void ClearErrors();
    // System.Void ClearError(System.Data.DataColumn column)
    // Offset: 0xF9687C
    void ClearError(::System::Data::DataColumn* column);
    // public System.Data.DataColumn[] GetColumnsInError()
    // Offset: 0xF9FE84
    ::ArrayW<::System::Data::DataColumn*> GetColumnsInError();
    // public System.Data.DataRow[] GetChildRows(System.Data.DataRelation relation)
    // Offset: 0xF9FF60
    ::ArrayW<::System::Data::DataRow*> GetChildRows(::System::Data::DataRelation* relation);
    // public System.Data.DataRow[] GetChildRows(System.Data.DataRelation relation, System.Data.DataRowVersion version)
    // Offset: 0xF9FF68
    ::ArrayW<::System::Data::DataRow*> GetChildRows(::System::Data::DataRelation* relation, ::System::Data::DataRowVersion version);
    // System.Data.DataColumn GetDataColumn(System.String columnName)
    // Offset: 0xF9EB8C
    ::System::Data::DataColumn* GetDataColumn(::StringW columnName);
    // public System.Data.DataRow GetParentRow(System.Data.DataRelation relation)
    // Offset: 0xF9C04C
    ::System::Data::DataRow* GetParentRow(::System::Data::DataRelation* relation);
    // public System.Data.DataRow GetParentRow(System.Data.DataRelation relation, System.Data.DataRowVersion version)
    // Offset: 0xFA0090
    ::System::Data::DataRow* GetParentRow(::System::Data::DataRelation* relation, ::System::Data::DataRowVersion version);
    // System.Data.DataRow GetNestedParentRow(System.Data.DataRowVersion version)
    // Offset: 0xFA01A8
    ::System::Data::DataRow* GetNestedParentRow(::System::Data::DataRowVersion version);
    // public System.Data.DataRow[] GetParentRows(System.Data.DataRelation relation)
    // Offset: 0xFA0270
    ::ArrayW<::System::Data::DataRow*> GetParentRows(::System::Data::DataRelation* relation);
    // public System.Data.DataRow[] GetParentRows(System.Data.DataRelation relation, System.Data.DataRowVersion version)
    // Offset: 0xFA0278
    ::ArrayW<::System::Data::DataRow*> GetParentRows(::System::Data::DataRelation* relation, ::System::Data::DataRowVersion version);
    // System.Object[] GetColumnValues(System.Data.DataColumn[] columns)
    // Offset: 0xFA03A0
    ::ArrayW<::Il2CppObject*> GetColumnValues(::ArrayW<::System::Data::DataColumn*> columns);
    // System.Object[] GetColumnValues(System.Data.DataColumn[] columns, System.Data.DataRowVersion version)
    // Offset: 0xFA03A8
    ::ArrayW<::Il2CppObject*> GetColumnValues(::ArrayW<::System::Data::DataColumn*> columns, ::System::Data::DataRowVersion version);
    // System.Object[] GetKeyValues(System.Data.DataKey key)
    // Offset: 0xFA0400
    ::ArrayW<::Il2CppObject*> GetKeyValues(::System::Data::DataKey key);
    // System.Object[] GetKeyValues(System.Data.DataKey key, System.Data.DataRowVersion version)
    // Offset: 0xF9A02C
    ::ArrayW<::Il2CppObject*> GetKeyValues(::System::Data::DataKey key, ::System::Data::DataRowVersion version);
    // System.Int32 GetCurrentRecordNo()
    // Offset: 0xFA042C
    int GetCurrentRecordNo();
    // System.Int32 GetDefaultRecord()
    // Offset: 0xF9EFAC
    int GetDefaultRecord();
    // System.Int32 GetOriginalRecordNo()
    // Offset: 0xFA046C
    int GetOriginalRecordNo();
    // private System.Int32 GetProposedRecordNo()
    // Offset: 0xF9F0E0
    int GetProposedRecordNo();
    // System.Int32 GetRecordFromVersion(System.Data.DataRowVersion version)
    // Offset: 0xF9F2C0
    int GetRecordFromVersion(::System::Data::DataRowVersion version);
    // System.Data.DataRowVersion GetDefaultRowVersion(System.Data.DataViewRowState viewState)
    // Offset: 0xFA04AC
    ::System::Data::DataRowVersion GetDefaultRowVersion(::System::Data::DataViewRowState viewState);
    // System.Data.DataViewRowState GetRecordState(System.Int32 record)
    // Offset: 0xFA04E8
    ::System::Data::DataViewRowState GetRecordState(int record);
    // System.Boolean HasKeyChanged(System.Data.DataKey key)
    // Offset: 0xFA0544
    bool HasKeyChanged(::System::Data::DataKey key);
    // System.Boolean HasKeyChanged(System.Data.DataKey key, System.Data.DataRowVersion version1, System.Data.DataRowVersion version2)
    // Offset: 0xFA0550
    bool HasKeyChanged(::System::Data::DataKey key, ::System::Data::DataRowVersion version1, ::System::Data::DataRowVersion version2);
    // public System.Boolean HasVersion(System.Data.DataRowVersion version)
    // Offset: 0xF9A258
    bool HasVersion(::System::Data::DataRowVersion version);
    // System.Boolean HaveValuesChanged(System.Data.DataColumn[] columns)
    // Offset: 0xFA05D8
    bool HaveValuesChanged(::ArrayW<::System::Data::DataColumn*> columns);
    // System.Boolean HaveValuesChanged(System.Data.DataColumn[] columns, System.Data.DataRowVersion version1, System.Data.DataRowVersion version2)
    // Offset: 0xFA05E4
    bool HaveValuesChanged(::ArrayW<::System::Data::DataColumn*> columns, ::System::Data::DataRowVersion version1, ::System::Data::DataRowVersion version2);
    // public System.Void RejectChanges()
    // Offset: 0xFA06A0
    void RejectChanges();
    // System.Void ResetLastChangedColumn()
    // Offset: 0xF9E830
    void ResetLastChangedColumn();
    // System.Void SetKeyValues(System.Data.DataKey key, System.Object[] keyValues)
    // Offset: 0xFA0CB8
    void SetKeyValues(::System::Data::DataKey key, ::ArrayW<::Il2CppObject*> keyValues);
    // System.Void SetNestedParentRow(System.Data.DataRow parentRow, System.Boolean setNonNested)
    // Offset: 0xFA0DDC
    void SetNestedParentRow(::System::Data::DataRow* parentRow, bool setNonNested);
    // System.Void SetParentRowToDBNull()
    // Offset: 0xFA1190
    void SetParentRowToDBNull();
    // System.Void SetParentRowToDBNull(System.Data.DataRelation relation)
    // Offset: 0xFA1438
    void SetParentRowToDBNull(::System::Data::DataRelation* relation);
    // System.Int32 CopyValuesIntoStore(System.Collections.ArrayList storeList, System.Collections.ArrayList nullbitList, System.Int32 storeIndex)
    // Offset: 0xFA15C4
    int CopyValuesIntoStore(::System::Collections::ArrayList* storeList, ::System::Collections::ArrayList* nullbitList, int storeIndex);
  }; // System.Data.DataRow
  #pragma pack(pop)
  static check_size<sizeof(DataRow), 92 + sizeof(int)> __System_Data_DataRowSizeCheck;
  static_assert(sizeof(DataRow) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::DataRow::get_LastChangedColumn
// Il2CppName: get_LastChangedColumn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataColumn* (System::Data::DataRow::*)()>(&System::Data::DataRow::get_LastChangedColumn)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "get_LastChangedColumn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::set_LastChangedColumn
// Il2CppName: set_LastChangedColumn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)(::System::Data::DataColumn*)>(&System::Data::DataRow::set_LastChangedColumn)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "set_LastChangedColumn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::get_HasPropertyChanged
// Il2CppName: get_HasPropertyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataRow::*)()>(&System::Data::DataRow::get_HasPropertyChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "get_HasPropertyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::get_RBTreeNodeId
// Il2CppName: get_RBTreeNodeId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataRow::*)()>(&System::Data::DataRow::get_RBTreeNodeId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "get_RBTreeNodeId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::set_RBTreeNodeId
// Il2CppName: set_RBTreeNodeId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)(int)>(&System::Data::DataRow::set_RBTreeNodeId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "set_RBTreeNodeId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::get_RowError
// Il2CppName: get_RowError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataRow::*)()>(&System::Data::DataRow::get_RowError)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "get_RowError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::set_RowError
// Il2CppName: set_RowError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)(::StringW)>(&System::Data::DataRow::set_RowError)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "set_RowError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::get_rowID
// Il2CppName: get_rowID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (System::Data::DataRow::*)()>(&System::Data::DataRow::get_rowID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "get_rowID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::set_rowID
// Il2CppName: set_rowID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)(int64_t)>(&System::Data::DataRow::set_rowID)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "set_rowID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::get_RowState
// Il2CppName: get_RowState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataRowState (System::Data::DataRow::*)()>(&System::Data::DataRow::get_RowState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "get_RowState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::get_Table
// Il2CppName: get_Table
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataTable* (System::Data::DataRow::*)()>(&System::Data::DataRow::get_Table)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "get_Table", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)(::StringW, ::Il2CppObject*)>(&System::Data::DataRow::set_Item)> {
  static const MethodInfo* get() {
    static auto* columnName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{columnName, value});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::DataRow::*)(::System::Data::DataColumn*)>(&System::Data::DataRow::get_Item)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)(::System::Data::DataColumn*, ::Il2CppObject*)>(&System::Data::DataRow::set_Item)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column, value});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::DataRow::*)(::System::Data::DataColumn*, ::System::Data::DataRowVersion)>(&System::Data::DataRow::get_Item)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    static auto* version = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowVersion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column, version});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::set_ItemArray
// Il2CppName: set_ItemArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)(::ArrayW<::Il2CppObject*>)>(&System::Data::DataRow::set_ItemArray)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "set_ItemArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::get_HasErrors
// Il2CppName: get_HasErrors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataRow::*)()>(&System::Data::DataRow::get_HasErrors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "get_HasErrors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DataRow::RowErrorChanged
// Il2CppName: RowErrorChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)()>(&System::Data::DataRow::RowErrorChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "RowErrorChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::CheckForLoops
// Il2CppName: CheckForLoops
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)(::System::Data::DataRelation*)>(&System::Data::DataRow::CheckForLoops)> {
  static const MethodInfo* get() {
    static auto* rel = &::il2cpp_utils::GetClassFromName("System.Data", "DataRelation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "CheckForLoops", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rel});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetNestedParentCount
// Il2CppName: GetNestedParentCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataRow::*)()>(&System::Data::DataRow::GetNestedParentCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetNestedParentCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::AcceptChanges
// Il2CppName: AcceptChanges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)()>(&System::Data::DataRow::AcceptChanges)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "AcceptChanges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::BeginEdit
// Il2CppName: BeginEdit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)()>(&System::Data::DataRow::BeginEdit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "BeginEdit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::BeginEditInternal
// Il2CppName: BeginEditInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataRow::*)()>(&System::Data::DataRow::BeginEditInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "BeginEditInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::CancelEdit
// Il2CppName: CancelEdit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)()>(&System::Data::DataRow::CancelEdit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "CancelEdit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::CheckColumn
// Il2CppName: CheckColumn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)(::System::Data::DataColumn*)>(&System::Data::DataRow::CheckColumn)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "CheckColumn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::CheckInTable
// Il2CppName: CheckInTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)()>(&System::Data::DataRow::CheckInTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "CheckInTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::Delete
// Il2CppName: Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)()>(&System::Data::DataRow::Delete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::EndEdit
// Il2CppName: EndEdit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)()>(&System::Data::DataRow::EndEdit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "EndEdit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::SetColumnError
// Il2CppName: SetColumnError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)(int, ::StringW)>(&System::Data::DataRow::SetColumnError)> {
  static const MethodInfo* get() {
    static auto* columnIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "SetColumnError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{columnIndex, error});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::SetColumnError
// Il2CppName: SetColumnError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)(::System::Data::DataColumn*, ::StringW)>(&System::Data::DataRow::SetColumnError)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "SetColumnError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column, error});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetColumnError
// Il2CppName: GetColumnError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataRow::*)(::System::Data::DataColumn*)>(&System::Data::DataRow::GetColumnError)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetColumnError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::ClearErrors
// Il2CppName: ClearErrors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)()>(&System::Data::DataRow::ClearErrors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "ClearErrors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::ClearError
// Il2CppName: ClearError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)(::System::Data::DataColumn*)>(&System::Data::DataRow::ClearError)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "ClearError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetColumnsInError
// Il2CppName: GetColumnsInError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Data::DataColumn*> (System::Data::DataRow::*)()>(&System::Data::DataRow::GetColumnsInError)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetColumnsInError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetChildRows
// Il2CppName: GetChildRows
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Data::DataRow*> (System::Data::DataRow::*)(::System::Data::DataRelation*)>(&System::Data::DataRow::GetChildRows)> {
  static const MethodInfo* get() {
    static auto* relation = &::il2cpp_utils::GetClassFromName("System.Data", "DataRelation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetChildRows", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{relation});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetChildRows
// Il2CppName: GetChildRows
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Data::DataRow*> (System::Data::DataRow::*)(::System::Data::DataRelation*, ::System::Data::DataRowVersion)>(&System::Data::DataRow::GetChildRows)> {
  static const MethodInfo* get() {
    static auto* relation = &::il2cpp_utils::GetClassFromName("System.Data", "DataRelation")->byval_arg;
    static auto* version = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowVersion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetChildRows", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{relation, version});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetDataColumn
// Il2CppName: GetDataColumn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataColumn* (System::Data::DataRow::*)(::StringW)>(&System::Data::DataRow::GetDataColumn)> {
  static const MethodInfo* get() {
    static auto* columnName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetDataColumn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{columnName});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetParentRow
// Il2CppName: GetParentRow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataRow* (System::Data::DataRow::*)(::System::Data::DataRelation*)>(&System::Data::DataRow::GetParentRow)> {
  static const MethodInfo* get() {
    static auto* relation = &::il2cpp_utils::GetClassFromName("System.Data", "DataRelation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetParentRow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{relation});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetParentRow
// Il2CppName: GetParentRow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataRow* (System::Data::DataRow::*)(::System::Data::DataRelation*, ::System::Data::DataRowVersion)>(&System::Data::DataRow::GetParentRow)> {
  static const MethodInfo* get() {
    static auto* relation = &::il2cpp_utils::GetClassFromName("System.Data", "DataRelation")->byval_arg;
    static auto* version = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowVersion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetParentRow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{relation, version});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetNestedParentRow
// Il2CppName: GetNestedParentRow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataRow* (System::Data::DataRow::*)(::System::Data::DataRowVersion)>(&System::Data::DataRow::GetNestedParentRow)> {
  static const MethodInfo* get() {
    static auto* version = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowVersion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetNestedParentRow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{version});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetParentRows
// Il2CppName: GetParentRows
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Data::DataRow*> (System::Data::DataRow::*)(::System::Data::DataRelation*)>(&System::Data::DataRow::GetParentRows)> {
  static const MethodInfo* get() {
    static auto* relation = &::il2cpp_utils::GetClassFromName("System.Data", "DataRelation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetParentRows", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{relation});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetParentRows
// Il2CppName: GetParentRows
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Data::DataRow*> (System::Data::DataRow::*)(::System::Data::DataRelation*, ::System::Data::DataRowVersion)>(&System::Data::DataRow::GetParentRows)> {
  static const MethodInfo* get() {
    static auto* relation = &::il2cpp_utils::GetClassFromName("System.Data", "DataRelation")->byval_arg;
    static auto* version = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowVersion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetParentRows", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{relation, version});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetColumnValues
// Il2CppName: GetColumnValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppObject*> (System::Data::DataRow::*)(::ArrayW<::System::Data::DataColumn*>)>(&System::Data::DataRow::GetColumnValues)> {
  static const MethodInfo* get() {
    static auto* columns = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Data", "DataColumn"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetColumnValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{columns});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetColumnValues
// Il2CppName: GetColumnValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppObject*> (System::Data::DataRow::*)(::ArrayW<::System::Data::DataColumn*>, ::System::Data::DataRowVersion)>(&System::Data::DataRow::GetColumnValues)> {
  static const MethodInfo* get() {
    static auto* columns = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Data", "DataColumn"), 1)->byval_arg;
    static auto* version = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowVersion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetColumnValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{columns, version});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetKeyValues
// Il2CppName: GetKeyValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppObject*> (System::Data::DataRow::*)(::System::Data::DataKey)>(&System::Data::DataRow::GetKeyValues)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System.Data", "DataKey")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetKeyValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetKeyValues
// Il2CppName: GetKeyValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppObject*> (System::Data::DataRow::*)(::System::Data::DataKey, ::System::Data::DataRowVersion)>(&System::Data::DataRow::GetKeyValues)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System.Data", "DataKey")->byval_arg;
    static auto* version = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowVersion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetKeyValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, version});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetCurrentRecordNo
// Il2CppName: GetCurrentRecordNo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataRow::*)()>(&System::Data::DataRow::GetCurrentRecordNo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetCurrentRecordNo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetDefaultRecord
// Il2CppName: GetDefaultRecord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataRow::*)()>(&System::Data::DataRow::GetDefaultRecord)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetDefaultRecord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetOriginalRecordNo
// Il2CppName: GetOriginalRecordNo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataRow::*)()>(&System::Data::DataRow::GetOriginalRecordNo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetOriginalRecordNo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetProposedRecordNo
// Il2CppName: GetProposedRecordNo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataRow::*)()>(&System::Data::DataRow::GetProposedRecordNo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetProposedRecordNo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetRecordFromVersion
// Il2CppName: GetRecordFromVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataRow::*)(::System::Data::DataRowVersion)>(&System::Data::DataRow::GetRecordFromVersion)> {
  static const MethodInfo* get() {
    static auto* version = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowVersion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetRecordFromVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{version});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetDefaultRowVersion
// Il2CppName: GetDefaultRowVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataRowVersion (System::Data::DataRow::*)(::System::Data::DataViewRowState)>(&System::Data::DataRow::GetDefaultRowVersion)> {
  static const MethodInfo* get() {
    static auto* viewState = &::il2cpp_utils::GetClassFromName("System.Data", "DataViewRowState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetDefaultRowVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{viewState});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::GetRecordState
// Il2CppName: GetRecordState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataViewRowState (System::Data::DataRow::*)(int)>(&System::Data::DataRow::GetRecordState)> {
  static const MethodInfo* get() {
    static auto* record = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "GetRecordState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{record});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::HasKeyChanged
// Il2CppName: HasKeyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataRow::*)(::System::Data::DataKey)>(&System::Data::DataRow::HasKeyChanged)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System.Data", "DataKey")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "HasKeyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::HasKeyChanged
// Il2CppName: HasKeyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataRow::*)(::System::Data::DataKey, ::System::Data::DataRowVersion, ::System::Data::DataRowVersion)>(&System::Data::DataRow::HasKeyChanged)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System.Data", "DataKey")->byval_arg;
    static auto* version1 = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowVersion")->byval_arg;
    static auto* version2 = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowVersion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "HasKeyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, version1, version2});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::HasVersion
// Il2CppName: HasVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataRow::*)(::System::Data::DataRowVersion)>(&System::Data::DataRow::HasVersion)> {
  static const MethodInfo* get() {
    static auto* version = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowVersion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "HasVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{version});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::HaveValuesChanged
// Il2CppName: HaveValuesChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataRow::*)(::ArrayW<::System::Data::DataColumn*>)>(&System::Data::DataRow::HaveValuesChanged)> {
  static const MethodInfo* get() {
    static auto* columns = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Data", "DataColumn"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "HaveValuesChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{columns});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::HaveValuesChanged
// Il2CppName: HaveValuesChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataRow::*)(::ArrayW<::System::Data::DataColumn*>, ::System::Data::DataRowVersion, ::System::Data::DataRowVersion)>(&System::Data::DataRow::HaveValuesChanged)> {
  static const MethodInfo* get() {
    static auto* columns = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Data", "DataColumn"), 1)->byval_arg;
    static auto* version1 = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowVersion")->byval_arg;
    static auto* version2 = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowVersion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "HaveValuesChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{columns, version1, version2});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::RejectChanges
// Il2CppName: RejectChanges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)()>(&System::Data::DataRow::RejectChanges)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "RejectChanges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::ResetLastChangedColumn
// Il2CppName: ResetLastChangedColumn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)()>(&System::Data::DataRow::ResetLastChangedColumn)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "ResetLastChangedColumn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::SetKeyValues
// Il2CppName: SetKeyValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)(::System::Data::DataKey, ::ArrayW<::Il2CppObject*>)>(&System::Data::DataRow::SetKeyValues)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System.Data", "DataKey")->byval_arg;
    static auto* keyValues = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "SetKeyValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, keyValues});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::SetNestedParentRow
// Il2CppName: SetNestedParentRow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)(::System::Data::DataRow*, bool)>(&System::Data::DataRow::SetNestedParentRow)> {
  static const MethodInfo* get() {
    static auto* parentRow = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    static auto* setNonNested = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "SetNestedParentRow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parentRow, setNonNested});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::SetParentRowToDBNull
// Il2CppName: SetParentRowToDBNull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)()>(&System::Data::DataRow::SetParentRowToDBNull)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "SetParentRowToDBNull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::SetParentRowToDBNull
// Il2CppName: SetParentRowToDBNull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRow::*)(::System::Data::DataRelation*)>(&System::Data::DataRow::SetParentRowToDBNull)> {
  static const MethodInfo* get() {
    static auto* relation = &::il2cpp_utils::GetClassFromName("System.Data", "DataRelation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "SetParentRowToDBNull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{relation});
  }
};
// Writing MetadataGetter for method: System::Data::DataRow::CopyValuesIntoStore
// Il2CppName: CopyValuesIntoStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataRow::*)(::System::Collections::ArrayList*, ::System::Collections::ArrayList*, int)>(&System::Data::DataRow::CopyValuesIntoStore)> {
  static const MethodInfo* get() {
    static auto* storeList = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    static auto* nullbitList = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    static auto* storeIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRow*), "CopyValuesIntoStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{storeList, nullbitList, storeIndex});
  }
};
