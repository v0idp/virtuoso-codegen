// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Data.DataKey
#include "System/Data/DataKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Data
namespace System::Data {
  // Forward declaring type: DataSet
  class DataSet;
  // Forward declaring type: PropertyCollection
  class PropertyCollection;
  // Forward declaring type: UniqueConstraint
  class UniqueConstraint;
  // Forward declaring type: ForeignKeyConstraint
  class ForeignKeyConstraint;
  // Forward declaring type: DataColumn
  class DataColumn;
  // Forward declaring type: DataTable
  class DataTable;
  // Forward declaring type: DataRow
  class DataRow;
  // Forward declaring type: DataRowVersion
  struct DataRowVersion;
}
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: PropertyChangedEventHandler
  class PropertyChangedEventHandler;
  // Forward declaring type: PropertyChangedEventArgs
  class PropertyChangedEventArgs;
}
// Completed forward declares
// Type namespace: System.Data
namespace System::Data {
  // Forward declaring type: DataRelation
  class DataRelation;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::DataRelation);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::DataRelation*, "System.Data", "DataRelation");
// Type namespace: System.Data
namespace System::Data {
  // Size: 0x88
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.DataRelation
  // [TokenAttribute] Offset: FFFFFFFF
  // [TypeConverterAttribute] Offset: 6B9F60
  // [DefaultPropertyAttribute] Offset: 6B9F60
  class DataRelation : public ::Il2CppObject {
    public:
    public:
    // private System.Data.DataSet _dataSet
    // Size: 0x8
    // Offset: 0x10
    ::System::Data::DataSet* dataSet;
    // Field size check
    static_assert(sizeof(::System::Data::DataSet*) == 0x8);
    // System.Data.PropertyCollection _extendedProperties
    // Size: 0x8
    // Offset: 0x18
    ::System::Data::PropertyCollection* extendedProperties;
    // Field size check
    static_assert(sizeof(::System::Data::PropertyCollection*) == 0x8);
    // System.String _relationName
    // Size: 0x8
    // Offset: 0x20
    ::StringW relationName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Data.DataKey _childKey
    // Size: 0x8
    // Offset: 0x28
    ::System::Data::DataKey childKey;
    // Field size check
    static_assert(sizeof(::System::Data::DataKey) == 0x8);
    // private System.Data.DataKey _parentKey
    // Size: 0x8
    // Offset: 0x30
    ::System::Data::DataKey parentKey;
    // Field size check
    static_assert(sizeof(::System::Data::DataKey) == 0x8);
    // private System.Data.UniqueConstraint _parentKeyConstraint
    // Size: 0x8
    // Offset: 0x38
    ::System::Data::UniqueConstraint* parentKeyConstraint;
    // Field size check
    static_assert(sizeof(::System::Data::UniqueConstraint*) == 0x8);
    // private System.Data.ForeignKeyConstraint _childKeyConstraint
    // Size: 0x8
    // Offset: 0x40
    ::System::Data::ForeignKeyConstraint* childKeyConstraint;
    // Field size check
    static_assert(sizeof(::System::Data::ForeignKeyConstraint*) == 0x8);
    // System.String[] _parentColumnNames
    // Size: 0x8
    // Offset: 0x48
    ::ArrayW<::StringW> parentColumnNames;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // System.String[] _childColumnNames
    // Size: 0x8
    // Offset: 0x50
    ::ArrayW<::StringW> childColumnNames;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // System.String _parentTableName
    // Size: 0x8
    // Offset: 0x58
    ::StringW parentTableName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.String _childTableName
    // Size: 0x8
    // Offset: 0x60
    ::StringW childTableName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.String _parentTableNamespace
    // Size: 0x8
    // Offset: 0x68
    ::StringW parentTableNamespace;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.String _childTableNamespace
    // Size: 0x8
    // Offset: 0x70
    ::StringW childTableNamespace;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.Boolean _nested
    // Size: 0x1
    // Offset: 0x78
    bool nested;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Boolean _createConstraints
    // Size: 0x1
    // Offset: 0x79
    bool createConstraints;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _checkMultipleNested
    // Size: 0x1
    // Offset: 0x7A
    bool checkMultipleNested;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: checkMultipleNested and: objectID
    char __padding15[0x1] = {};
    // private readonly System.Int32 _objectID
    // Size: 0x4
    // Offset: 0x7C
    int objectID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.ComponentModel.PropertyChangedEventHandler PropertyChanging
    // Size: 0x8
    // Offset: 0x80
    ::System::ComponentModel::PropertyChangedEventHandler* PropertyChanging;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::PropertyChangedEventHandler*) == 0x8);
    public:
    // Get static field: static private System.Int32 s_objectTypeCount
    static int _get_s_objectTypeCount();
    // Set static field: static private System.Int32 s_objectTypeCount
    static void _set_s_objectTypeCount(int value);
    // Get instance field reference: private System.Data.DataSet _dataSet
    [[deprecated]] ::System::Data::DataSet*& dyn__dataSet();
    // Get instance field reference: System.Data.PropertyCollection _extendedProperties
    [[deprecated]] ::System::Data::PropertyCollection*& dyn__extendedProperties();
    // Get instance field reference: System.String _relationName
    [[deprecated]] ::StringW& dyn__relationName();
    // Get instance field reference: private System.Data.DataKey _childKey
    [[deprecated]] ::System::Data::DataKey& dyn__childKey();
    // Get instance field reference: private System.Data.DataKey _parentKey
    [[deprecated]] ::System::Data::DataKey& dyn__parentKey();
    // Get instance field reference: private System.Data.UniqueConstraint _parentKeyConstraint
    [[deprecated]] ::System::Data::UniqueConstraint*& dyn__parentKeyConstraint();
    // Get instance field reference: private System.Data.ForeignKeyConstraint _childKeyConstraint
    [[deprecated]] ::System::Data::ForeignKeyConstraint*& dyn__childKeyConstraint();
    // Get instance field reference: System.String[] _parentColumnNames
    [[deprecated]] ::ArrayW<::StringW>& dyn__parentColumnNames();
    // Get instance field reference: System.String[] _childColumnNames
    [[deprecated]] ::ArrayW<::StringW>& dyn__childColumnNames();
    // Get instance field reference: System.String _parentTableName
    [[deprecated]] ::StringW& dyn__parentTableName();
    // Get instance field reference: System.String _childTableName
    [[deprecated]] ::StringW& dyn__childTableName();
    // Get instance field reference: System.String _parentTableNamespace
    [[deprecated]] ::StringW& dyn__parentTableNamespace();
    // Get instance field reference: System.String _childTableNamespace
    [[deprecated]] ::StringW& dyn__childTableNamespace();
    // Get instance field reference: System.Boolean _nested
    [[deprecated]] bool& dyn__nested();
    // Get instance field reference: System.Boolean _createConstraints
    [[deprecated]] bool& dyn__createConstraints();
    // Get instance field reference: private System.Boolean _checkMultipleNested
    [[deprecated]] bool& dyn__checkMultipleNested();
    // Get instance field reference: private readonly System.Int32 _objectID
    [[deprecated]] int& dyn__objectID();
    // Get instance field reference: private System.ComponentModel.PropertyChangedEventHandler PropertyChanging
    [[deprecated]] ::System::ComponentModel::PropertyChangedEventHandler*& dyn_PropertyChanging();
    // public System.Data.DataColumn[] get_ChildColumns()
    // Offset: 0xF99D0C
    ::ArrayW<::System::Data::DataColumn*> get_ChildColumns();
    // System.Data.DataColumn[] get_ChildColumnsReference()
    // Offset: 0xF99E40
    ::ArrayW<::System::Data::DataColumn*> get_ChildColumnsReference();
    // System.Data.DataKey get_ChildKey()
    // Offset: 0xF9691C
    ::System::Data::DataKey get_ChildKey();
    // public System.Data.DataTable get_ChildTable()
    // Offset: 0xF99E64
    ::System::Data::DataTable* get_ChildTable();
    // public System.Data.DataSet get_DataSet()
    // Offset: 0xF99E88
    ::System::Data::DataSet* get_DataSet();
    // System.String[] get_ParentColumnNames()
    // Offset: 0xF99EAC
    ::ArrayW<::StringW> get_ParentColumnNames();
    // System.String[] get_ChildColumnNames()
    // Offset: 0xF99EB4
    ::ArrayW<::StringW> get_ChildColumnNames();
    // public System.Data.DataColumn[] get_ParentColumns()
    // Offset: 0xF9A2FC
    ::ArrayW<::System::Data::DataColumn*> get_ParentColumns();
    // System.Data.DataColumn[] get_ParentColumnsReference()
    // Offset: 0xF9A320
    ::ArrayW<::System::Data::DataColumn*> get_ParentColumnsReference();
    // System.Data.DataKey get_ParentKey()
    // Offset: 0xF96940
    ::System::Data::DataKey get_ParentKey();
    // public System.Data.DataTable get_ParentTable()
    // Offset: 0xF9A328
    ::System::Data::DataTable* get_ParentTable();
    // public System.String get_RelationName()
    // Offset: 0xF9A34C
    ::StringW get_RelationName();
    // public System.Boolean get_Nested()
    // Offset: 0xF9AA84
    bool get_Nested();
    // public System.Void set_Nested(System.Boolean value)
    // Offset: 0xF9AAA8
    void set_Nested(bool value);
    // public System.Data.UniqueConstraint get_ParentKeyConstraint()
    // Offset: 0xF9C054
    ::System::Data::UniqueConstraint* get_ParentKeyConstraint();
    // public System.Data.ForeignKeyConstraint get_ChildKeyConstraint()
    // Offset: 0xF9C080
    ::System::Data::ForeignKeyConstraint* get_ChildKeyConstraint();
    // public System.Data.PropertyCollection get_ExtendedProperties()
    // Offset: 0xF9C0A4
    ::System::Data::PropertyCollection* get_ExtendedProperties();
    // System.Boolean get_CheckMultipleNested()
    // Offset: 0xF9C10C
    bool get_CheckMultipleNested();
    // System.Void set_CheckMultipleNested(System.Boolean value)
    // Offset: 0xF9C114
    void set_CheckMultipleNested(bool value);
    // System.Int32 get_ObjectID()
    // Offset: 0xF9CC68
    int get_ObjectID();
    // public System.Void .ctor(System.String relationName, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn, System.Boolean createConstraints)
    // Offset: 0xF9959C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataRelation* New_ctor(::StringW relationName, ::System::Data::DataColumn* parentColumn, ::System::Data::DataColumn* childColumn, bool createConstraints) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataRelation*, creationType>(relationName, parentColumn, childColumn, createConstraints)));
    }
    // public System.Void .ctor(System.String relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns)
    // Offset: 0xF99A84
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataRelation* New_ctor(::StringW relationName, ::ArrayW<::System::Data::DataColumn*> parentColumns, ::ArrayW<::System::Data::DataColumn*> childColumns) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataRelation*, creationType>(relationName, parentColumns, childColumns)));
    }
    // public System.Void .ctor(System.String relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns, System.Boolean createConstraints)
    // Offset: 0xF99A8C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataRelation* New_ctor(::StringW relationName, ::ArrayW<::System::Data::DataColumn*> parentColumns, ::ArrayW<::System::Data::DataColumn*> childColumns, bool createConstraints) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataRelation*, creationType>(relationName, parentColumns, childColumns, createConstraints)));
    }
    // public System.Void .ctor(System.String relationName, System.String parentTableName, System.String childTableName, System.String[] parentColumnNames, System.String[] childColumnNames, System.Boolean nested)
    // Offset: 0xF99B50
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataRelation* New_ctor(::StringW relationName, ::StringW parentTableName, ::StringW childTableName, ::ArrayW<::StringW> parentColumnNames, ::ArrayW<::StringW> childColumnNames, bool nested) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataRelation*, creationType>(relationName, parentTableName, childTableName, parentColumnNames, childColumnNames, nested)));
    }
    // public System.Void .ctor(System.String relationName, System.String parentTableName, System.String parentTableNamespace, System.String childTableName, System.String childTableNamespace, System.String[] parentColumnNames, System.String[] childColumnNames, System.Boolean nested)
    // Offset: 0xF99C24
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataRelation* New_ctor(::StringW relationName, ::StringW parentTableName, ::StringW parentTableNamespace, ::StringW childTableName, ::StringW childTableNamespace, ::ArrayW<::StringW> parentColumnNames, ::ArrayW<::StringW> childColumnNames, bool nested) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataRelation*, creationType>(relationName, parentTableName, parentTableNamespace, childTableName, childTableNamespace, parentColumnNames, childColumnNames, nested)));
    }
    // static private System.Boolean IsKeyNull(System.Object[] values)
    // Offset: 0xF99EBC
    static bool IsKeyNull(::ArrayW<::Il2CppObject*> values);
    // static System.Data.DataRow[] GetChildRows(System.Data.DataKey parentKey, System.Data.DataKey childKey, System.Data.DataRow parentRow, System.Data.DataRowVersion version)
    // Offset: 0xF99F8C
    static ::ArrayW<::System::Data::DataRow*> GetChildRows(::System::Data::DataKey parentKey, ::System::Data::DataKey childKey, ::System::Data::DataRow* parentRow, ::System::Data::DataRowVersion version);
    // static System.Data.DataRow[] GetParentRows(System.Data.DataKey parentKey, System.Data.DataKey childKey, System.Data.DataRow childRow, System.Data.DataRowVersion version)
    // Offset: 0xF9A05C
    static ::ArrayW<::System::Data::DataRow*> GetParentRows(::System::Data::DataKey parentKey, ::System::Data::DataKey childKey, ::System::Data::DataRow* childRow, ::System::Data::DataRowVersion version);
    // static System.Data.DataRow GetParentRow(System.Data.DataKey parentKey, System.Data.DataKey childKey, System.Data.DataRow childRow, System.Data.DataRowVersion version)
    // Offset: 0xF9A0FC
    static ::System::Data::DataRow* GetParentRow(::System::Data::DataKey parentKey, ::System::Data::DataKey childKey, ::System::Data::DataRow* childRow, ::System::Data::DataRowVersion version);
    // System.Void SetDataSet(System.Data.DataSet dataSet)
    // Offset: 0xF9A2E8
    void SetDataSet(::System::Data::DataSet* dataSet);
    // System.Void CheckNamespaceValidityForNestedRelations(System.String ns)
    // Offset: 0xF9A370
    void CheckNamespaceValidityForNestedRelations(::StringW ns);
    // System.Void CheckNestedRelations()
    // Offset: 0xF9A6E0
    void CheckNestedRelations();
    // System.Void SetParentKeyConstraint(System.Data.UniqueConstraint value)
    // Offset: 0xF9C078
    void SetParentKeyConstraint(::System::Data::UniqueConstraint* value);
    // System.Void SetChildKeyConstraint(System.Data.ForeignKeyConstraint value)
    // Offset: 0xF9C120
    void SetChildKeyConstraint(::System::Data::ForeignKeyConstraint* value);
    // System.Void CheckState()
    // Offset: 0xF9C128
    void CheckState();
    // protected System.Void CheckStateForProperty()
    // Offset: 0xF99D30
    void CheckStateForProperty();
    // private System.Void Create(System.String relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns, System.Boolean createConstraints)
    // Offset: 0xF997A8
    void Create(::StringW relationName, ::ArrayW<::System::Data::DataColumn*> parentColumns, ::ArrayW<::System::Data::DataColumn*> childColumns, bool createConstraints);
    // System.Data.DataRelation Clone(System.Data.DataSet destination)
    // Offset: 0xF9C36C
    ::System::Data::DataRelation* Clone(::System::Data::DataSet* destination);
    // protected internal System.Void OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs pcevent)
    // Offset: 0xF9C994
    void OnPropertyChanging(::System::ComponentModel::PropertyChangedEventArgs* pcevent);
    // protected internal System.Void RaisePropertyChanging(System.String name)
    // Offset: 0xF9BF04
    void RaisePropertyChanging(::StringW name);
    // System.Void ValidateMultipleNestedRelations()
    // Offset: 0xF9BA74
    void ValidateMultipleNestedRelations();
    // private System.Boolean IsAutoGenerated(System.Data.DataColumn col)
    // Offset: 0xF9CA80
    bool IsAutoGenerated(::System::Data::DataColumn* col);
    // public override System.String ToString()
    // Offset: 0xF9CA74
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // System.Data.DataRelation
  #pragma pack(pop)
  static check_size<sizeof(DataRelation), 128 + sizeof(::System::ComponentModel::PropertyChangedEventHandler*)> __System_Data_DataRelationSizeCheck;
  static_assert(sizeof(DataRelation) == 0x88);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::DataRelation::get_ChildColumns
// Il2CppName: get_ChildColumns
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Data::DataColumn*> (System::Data::DataRelation::*)()>(&System::Data::DataRelation::get_ChildColumns)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "get_ChildColumns", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::get_ChildColumnsReference
// Il2CppName: get_ChildColumnsReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Data::DataColumn*> (System::Data::DataRelation::*)()>(&System::Data::DataRelation::get_ChildColumnsReference)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "get_ChildColumnsReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::get_ChildKey
// Il2CppName: get_ChildKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataKey (System::Data::DataRelation::*)()>(&System::Data::DataRelation::get_ChildKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "get_ChildKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::get_ChildTable
// Il2CppName: get_ChildTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataTable* (System::Data::DataRelation::*)()>(&System::Data::DataRelation::get_ChildTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "get_ChildTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::get_DataSet
// Il2CppName: get_DataSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataSet* (System::Data::DataRelation::*)()>(&System::Data::DataRelation::get_DataSet)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "get_DataSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::get_ParentColumnNames
// Il2CppName: get_ParentColumnNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (System::Data::DataRelation::*)()>(&System::Data::DataRelation::get_ParentColumnNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "get_ParentColumnNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::get_ChildColumnNames
// Il2CppName: get_ChildColumnNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (System::Data::DataRelation::*)()>(&System::Data::DataRelation::get_ChildColumnNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "get_ChildColumnNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::get_ParentColumns
// Il2CppName: get_ParentColumns
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Data::DataColumn*> (System::Data::DataRelation::*)()>(&System::Data::DataRelation::get_ParentColumns)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "get_ParentColumns", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::get_ParentColumnsReference
// Il2CppName: get_ParentColumnsReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Data::DataColumn*> (System::Data::DataRelation::*)()>(&System::Data::DataRelation::get_ParentColumnsReference)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "get_ParentColumnsReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::get_ParentKey
// Il2CppName: get_ParentKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataKey (System::Data::DataRelation::*)()>(&System::Data::DataRelation::get_ParentKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "get_ParentKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::get_ParentTable
// Il2CppName: get_ParentTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataTable* (System::Data::DataRelation::*)()>(&System::Data::DataRelation::get_ParentTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "get_ParentTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::get_RelationName
// Il2CppName: get_RelationName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataRelation::*)()>(&System::Data::DataRelation::get_RelationName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "get_RelationName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::get_Nested
// Il2CppName: get_Nested
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataRelation::*)()>(&System::Data::DataRelation::get_Nested)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "get_Nested", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::set_Nested
// Il2CppName: set_Nested
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRelation::*)(bool)>(&System::Data::DataRelation::set_Nested)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "set_Nested", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::get_ParentKeyConstraint
// Il2CppName: get_ParentKeyConstraint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::UniqueConstraint* (System::Data::DataRelation::*)()>(&System::Data::DataRelation::get_ParentKeyConstraint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "get_ParentKeyConstraint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::get_ChildKeyConstraint
// Il2CppName: get_ChildKeyConstraint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::ForeignKeyConstraint* (System::Data::DataRelation::*)()>(&System::Data::DataRelation::get_ChildKeyConstraint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "get_ChildKeyConstraint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::get_ExtendedProperties
// Il2CppName: get_ExtendedProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::PropertyCollection* (System::Data::DataRelation::*)()>(&System::Data::DataRelation::get_ExtendedProperties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "get_ExtendedProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::get_CheckMultipleNested
// Il2CppName: get_CheckMultipleNested
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataRelation::*)()>(&System::Data::DataRelation::get_CheckMultipleNested)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "get_CheckMultipleNested", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::set_CheckMultipleNested
// Il2CppName: set_CheckMultipleNested
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRelation::*)(bool)>(&System::Data::DataRelation::set_CheckMultipleNested)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "set_CheckMultipleNested", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::get_ObjectID
// Il2CppName: get_ObjectID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataRelation::*)()>(&System::Data::DataRelation::get_ObjectID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "get_ObjectID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DataRelation::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DataRelation::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DataRelation::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DataRelation::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DataRelation::IsKeyNull
// Il2CppName: IsKeyNull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::ArrayW<::Il2CppObject*>)>(&System::Data::DataRelation::IsKeyNull)> {
  static const MethodInfo* get() {
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "IsKeyNull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{values});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::GetChildRows
// Il2CppName: GetChildRows
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Data::DataRow*> (*)(::System::Data::DataKey, ::System::Data::DataKey, ::System::Data::DataRow*, ::System::Data::DataRowVersion)>(&System::Data::DataRelation::GetChildRows)> {
  static const MethodInfo* get() {
    static auto* parentKey = &::il2cpp_utils::GetClassFromName("System.Data", "DataKey")->byval_arg;
    static auto* childKey = &::il2cpp_utils::GetClassFromName("System.Data", "DataKey")->byval_arg;
    static auto* parentRow = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    static auto* version = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowVersion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "GetChildRows", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parentKey, childKey, parentRow, version});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::GetParentRows
// Il2CppName: GetParentRows
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Data::DataRow*> (*)(::System::Data::DataKey, ::System::Data::DataKey, ::System::Data::DataRow*, ::System::Data::DataRowVersion)>(&System::Data::DataRelation::GetParentRows)> {
  static const MethodInfo* get() {
    static auto* parentKey = &::il2cpp_utils::GetClassFromName("System.Data", "DataKey")->byval_arg;
    static auto* childKey = &::il2cpp_utils::GetClassFromName("System.Data", "DataKey")->byval_arg;
    static auto* childRow = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    static auto* version = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowVersion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "GetParentRows", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parentKey, childKey, childRow, version});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::GetParentRow
// Il2CppName: GetParentRow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataRow* (*)(::System::Data::DataKey, ::System::Data::DataKey, ::System::Data::DataRow*, ::System::Data::DataRowVersion)>(&System::Data::DataRelation::GetParentRow)> {
  static const MethodInfo* get() {
    static auto* parentKey = &::il2cpp_utils::GetClassFromName("System.Data", "DataKey")->byval_arg;
    static auto* childKey = &::il2cpp_utils::GetClassFromName("System.Data", "DataKey")->byval_arg;
    static auto* childRow = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    static auto* version = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowVersion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "GetParentRow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parentKey, childKey, childRow, version});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::SetDataSet
// Il2CppName: SetDataSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRelation::*)(::System::Data::DataSet*)>(&System::Data::DataRelation::SetDataSet)> {
  static const MethodInfo* get() {
    static auto* dataSet = &::il2cpp_utils::GetClassFromName("System.Data", "DataSet")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "SetDataSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dataSet});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::CheckNamespaceValidityForNestedRelations
// Il2CppName: CheckNamespaceValidityForNestedRelations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRelation::*)(::StringW)>(&System::Data::DataRelation::CheckNamespaceValidityForNestedRelations)> {
  static const MethodInfo* get() {
    static auto* ns = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "CheckNamespaceValidityForNestedRelations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ns});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::CheckNestedRelations
// Il2CppName: CheckNestedRelations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRelation::*)()>(&System::Data::DataRelation::CheckNestedRelations)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "CheckNestedRelations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::SetParentKeyConstraint
// Il2CppName: SetParentKeyConstraint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRelation::*)(::System::Data::UniqueConstraint*)>(&System::Data::DataRelation::SetParentKeyConstraint)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Data", "UniqueConstraint")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "SetParentKeyConstraint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::SetChildKeyConstraint
// Il2CppName: SetChildKeyConstraint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRelation::*)(::System::Data::ForeignKeyConstraint*)>(&System::Data::DataRelation::SetChildKeyConstraint)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Data", "ForeignKeyConstraint")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "SetChildKeyConstraint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::CheckState
// Il2CppName: CheckState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRelation::*)()>(&System::Data::DataRelation::CheckState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "CheckState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::CheckStateForProperty
// Il2CppName: CheckStateForProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRelation::*)()>(&System::Data::DataRelation::CheckStateForProperty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "CheckStateForProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRelation::*)(::StringW, ::ArrayW<::System::Data::DataColumn*>, ::ArrayW<::System::Data::DataColumn*>, bool)>(&System::Data::DataRelation::Create)> {
  static const MethodInfo* get() {
    static auto* relationName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* parentColumns = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Data", "DataColumn"), 1)->byval_arg;
    static auto* childColumns = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Data", "DataColumn"), 1)->byval_arg;
    static auto* createConstraints = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{relationName, parentColumns, childColumns, createConstraints});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataRelation* (System::Data::DataRelation::*)(::System::Data::DataSet*)>(&System::Data::DataRelation::Clone)> {
  static const MethodInfo* get() {
    static auto* destination = &::il2cpp_utils::GetClassFromName("System.Data", "DataSet")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destination});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::OnPropertyChanging
// Il2CppName: OnPropertyChanging
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRelation::*)(::System::ComponentModel::PropertyChangedEventArgs*)>(&System::Data::DataRelation::OnPropertyChanging)> {
  static const MethodInfo* get() {
    static auto* pcevent = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyChangedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "OnPropertyChanging", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pcevent});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::RaisePropertyChanging
// Il2CppName: RaisePropertyChanging
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRelation::*)(::StringW)>(&System::Data::DataRelation::RaisePropertyChanging)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "RaisePropertyChanging", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::ValidateMultipleNestedRelations
// Il2CppName: ValidateMultipleNestedRelations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataRelation::*)()>(&System::Data::DataRelation::ValidateMultipleNestedRelations)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "ValidateMultipleNestedRelations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::IsAutoGenerated
// Il2CppName: IsAutoGenerated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataRelation::*)(::System::Data::DataColumn*)>(&System::Data::DataRelation::IsAutoGenerated)> {
  static const MethodInfo* get() {
    static auto* col = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "IsAutoGenerated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{col});
  }
};
// Writing MetadataGetter for method: System::Data::DataRelation::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataRelation::*)()>(&System::Data::DataRelation::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataRelation*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
