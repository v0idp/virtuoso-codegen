// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Data
namespace System::Data {
  // Forward declaring type: DataColumn
  class DataColumn;
}
// Completed forward declares
// Type namespace: System.Data
namespace System::Data {
  // Forward declaring type: DataError
  class DataError;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::DataError);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::DataError*, "System.Data", "DataError");
// Type namespace: System.Data
namespace System::Data {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.DataError
  // [TokenAttribute] Offset: FFFFFFFF
  class DataError : public ::Il2CppObject {
    public:
    // Nested type: ::System::Data::DataError::ColumnError
    struct ColumnError;
    // Size: 0x10
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: System.Data.DataError/System.Data.ColumnError
    // [TokenAttribute] Offset: FFFFFFFF
    struct ColumnError/*, public ::System::ValueType*/ {
      public:
      public:
      // System.Data.DataColumn _column
      // Size: 0x8
      // Offset: 0x0
      ::System::Data::DataColumn* column;
      // Field size check
      static_assert(sizeof(::System::Data::DataColumn*) == 0x8);
      // System.String _error
      // Size: 0x8
      // Offset: 0x8
      ::StringW error;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      public:
      // Creating value type constructor for type: ColumnError
      constexpr ColumnError(::System::Data::DataColumn* column_ = {}, ::StringW error_ = {}) noexcept : column{column_}, error{error_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: System.Data.DataColumn _column
      [[deprecated]] ::System::Data::DataColumn*& dyn__column();
      // Get instance field reference: System.String _error
      [[deprecated]] ::StringW& dyn__error();
    }; // System.Data.DataError/System.Data.ColumnError
    #pragma pack(pop)
    static check_size<sizeof(DataError::ColumnError), 8 + sizeof(::StringW)> __System_Data_DataError_ColumnErrorSizeCheck;
    static_assert(sizeof(DataError::ColumnError) == 0x10);
    public:
    // private System.String _rowError
    // Size: 0x8
    // Offset: 0x10
    ::StringW rowError;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Int32 _count
    // Size: 0x4
    // Offset: 0x18
    int count;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: count and: errorList
    char __padding1[0x4] = {};
    // private System.Data.DataError/System.Data.ColumnError[] _errorList
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::System::Data::DataError::ColumnError> errorList;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::Data::DataError::ColumnError>) == 0x8);
    public:
    // Get instance field reference: private System.String _rowError
    [[deprecated]] ::StringW& dyn__rowError();
    // Get instance field reference: private System.Int32 _count
    [[deprecated]] int& dyn__count();
    // Get instance field reference: private System.Data.DataError/System.Data.ColumnError[] _errorList
    [[deprecated]] ::ArrayW<::System::Data::DataError::ColumnError>& dyn__errorList();
    // System.String get_Text()
    // Offset: 0xF979D4
    ::StringW get_Text();
    // System.Void set_Text(System.String value)
    // Offset: 0xF979DC
    void set_Text(::StringW value);
    // System.Boolean get_HasErrors()
    // Offset: 0xF97A40
    bool get_HasErrors();
    // System.Void .ctor(System.String rowError)
    // Offset: 0xF978D0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataError* New_ctor(::StringW rowError) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataError::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataError*, creationType>(rowError)));
    }
    // System.Void SetColumnError(System.Data.DataColumn column, System.String error)
    // Offset: 0xF97A74
    void SetColumnError(::System::Data::DataColumn* column, ::StringW error);
    // System.String GetColumnError(System.Data.DataColumn column)
    // Offset: 0xF97DA8
    ::StringW GetColumnError(::System::Data::DataColumn* column);
    // System.Void Clear(System.Data.DataColumn column)
    // Offset: 0xF97B80
    void Clear(::System::Data::DataColumn* column);
    // System.Void Clear()
    // Offset: 0xF97E58
    void Clear();
    // System.Data.DataColumn[] GetColumnsInError()
    // Offset: 0xF97F10
    ::ArrayW<::System::Data::DataColumn*> GetColumnsInError();
    // private System.Void SetText(System.String errorText)
    // Offset: 0xF97970
    void SetText(::StringW errorText);
    // System.Int32 IndexOf(System.Data.DataColumn column)
    // Offset: 0xF97C4C
    int IndexOf(::System::Data::DataColumn* column);
    // System.Void .ctor()
    // Offset: 0xF97874
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataError* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataError::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataError*, creationType>()));
    }
  }; // System.Data.DataError
  #pragma pack(pop)
  static check_size<sizeof(DataError), 32 + sizeof(::ArrayW<::System::Data::DataError::ColumnError>)> __System_Data_DataErrorSizeCheck;
  static_assert(sizeof(DataError) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Data::DataError::ColumnError, "System.Data", "DataError/ColumnError");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::DataError::get_Text
// Il2CppName: get_Text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataError::*)()>(&System::Data::DataError::get_Text)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataError*), "get_Text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataError::set_Text
// Il2CppName: set_Text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataError::*)(::StringW)>(&System::Data::DataError::set_Text)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataError*), "set_Text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataError::get_HasErrors
// Il2CppName: get_HasErrors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataError::*)()>(&System::Data::DataError::get_HasErrors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataError*), "get_HasErrors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataError::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DataError::SetColumnError
// Il2CppName: SetColumnError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataError::*)(::System::Data::DataColumn*, ::StringW)>(&System::Data::DataError::SetColumnError)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataError*), "SetColumnError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column, error});
  }
};
// Writing MetadataGetter for method: System::Data::DataError::GetColumnError
// Il2CppName: GetColumnError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataError::*)(::System::Data::DataColumn*)>(&System::Data::DataError::GetColumnError)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataError*), "GetColumnError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: System::Data::DataError::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataError::*)(::System::Data::DataColumn*)>(&System::Data::DataError::Clear)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataError*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: System::Data::DataError::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataError::*)()>(&System::Data::DataError::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataError*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataError::GetColumnsInError
// Il2CppName: GetColumnsInError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Data::DataColumn*> (System::Data::DataError::*)()>(&System::Data::DataError::GetColumnsInError)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataError*), "GetColumnsInError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataError::SetText
// Il2CppName: SetText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataError::*)(::StringW)>(&System::Data::DataError::SetText)> {
  static const MethodInfo* get() {
    static auto* errorText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataError*), "SetText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{errorText});
  }
};
// Writing MetadataGetter for method: System::Data::DataError::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataError::*)(::System::Data::DataColumn*)>(&System::Data::DataError::IndexOf)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataError*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: System::Data::DataError::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
