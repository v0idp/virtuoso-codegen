// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: CollectionChangeEventArgs
  class CollectionChangeEventArgs;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Array
  class Array;
}
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: CultureInfo
  class CultureInfo;
}
// Completed forward declares
// Type namespace: System.Data
namespace System::Data {
  // Forward declaring type: InternalDataCollectionBase
  class InternalDataCollectionBase;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::InternalDataCollectionBase);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::InternalDataCollectionBase*, "System.Data", "InternalDataCollectionBase");
// Type namespace: System.Data
namespace System::Data {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.InternalDataCollectionBase
  // [TokenAttribute] Offset: FFFFFFFF
  class InternalDataCollectionBase : public ::Il2CppObject/*, public ::System::Collections::ICollection*/ {
    public:
    // Creating interface conversion operator: operator ::System::Collections::ICollection
    operator ::System::Collections::ICollection() noexcept {
      return *reinterpret_cast<::System::Collections::ICollection*>(this);
    }
    // Get static field: static readonly System.ComponentModel.CollectionChangeEventArgs s_refreshEventArgs
    static ::System::ComponentModel::CollectionChangeEventArgs* _get_s_refreshEventArgs();
    // Set static field: static readonly System.ComponentModel.CollectionChangeEventArgs s_refreshEventArgs
    static void _set_s_refreshEventArgs(::System::ComponentModel::CollectionChangeEventArgs* value);
    // public System.Int32 get_Count()
    // Offset: 0x13B6A68
    int get_Count();
    // public System.Object get_SyncRoot()
    // Offset: 0x13B6BCC
    ::Il2CppObject* get_SyncRoot();
    // protected System.Collections.ArrayList get_List()
    // Offset: 0x13B6BD0
    ::System::Collections::ArrayList* get_List();
    // static private System.Void .cctor()
    // Offset: 0x13B6BE0
    static void _cctor();
    // public System.Void CopyTo(System.Array ar, System.Int32 index)
    // Offset: 0x13B6A98
    void CopyTo(::System::Array* ar, int index);
    // public System.Collections.IEnumerator GetEnumerator()
    // Offset: 0x13B6AE4
    ::System::Collections::IEnumerator* GetEnumerator();
    // System.Int32 NamesEqual(System.String s1, System.String s2, System.Boolean fCaseSensitive, System.Globalization.CultureInfo locale)
    // Offset: 0x13B6B14
    int NamesEqual(::StringW s1, ::StringW s2, bool fCaseSensitive, ::System::Globalization::CultureInfo* locale);
    // public System.Void .ctor()
    // Offset: 0x13B6BD8
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InternalDataCollectionBase* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::InternalDataCollectionBase::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InternalDataCollectionBase*, creationType>()));
    }
  }; // System.Data.InternalDataCollectionBase
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::InternalDataCollectionBase::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::InternalDataCollectionBase::*)()>(&System::Data::InternalDataCollectionBase::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::InternalDataCollectionBase*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::InternalDataCollectionBase::get_SyncRoot
// Il2CppName: get_SyncRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::InternalDataCollectionBase::*)()>(&System::Data::InternalDataCollectionBase::get_SyncRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::InternalDataCollectionBase*), "get_SyncRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::InternalDataCollectionBase::get_List
// Il2CppName: get_List
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::ArrayList* (System::Data::InternalDataCollectionBase::*)()>(&System::Data::InternalDataCollectionBase::get_List)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::InternalDataCollectionBase*), "get_List", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::InternalDataCollectionBase::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Data::InternalDataCollectionBase::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::InternalDataCollectionBase*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::InternalDataCollectionBase::CopyTo
// Il2CppName: CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::InternalDataCollectionBase::*)(::System::Array*, int)>(&System::Data::InternalDataCollectionBase::CopyTo)> {
  static const MethodInfo* get() {
    static auto* ar = &::il2cpp_utils::GetClassFromName("System", "Array")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::InternalDataCollectionBase*), "CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ar, index});
  }
};
// Writing MetadataGetter for method: System::Data::InternalDataCollectionBase::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (System::Data::InternalDataCollectionBase::*)()>(&System::Data::InternalDataCollectionBase::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::InternalDataCollectionBase*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::InternalDataCollectionBase::NamesEqual
// Il2CppName: NamesEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::InternalDataCollectionBase::*)(::StringW, ::StringW, bool, ::System::Globalization::CultureInfo*)>(&System::Data::InternalDataCollectionBase::NamesEqual)> {
  static const MethodInfo* get() {
    static auto* s1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* s2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fCaseSensitive = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* locale = &::il2cpp_utils::GetClassFromName("System.Globalization", "CultureInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::InternalDataCollectionBase*), "NamesEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s1, s2, fCaseSensitive, locale});
  }
};
// Writing MetadataGetter for method: System::Data::InternalDataCollectionBase::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
