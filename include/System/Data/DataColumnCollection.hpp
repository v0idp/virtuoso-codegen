// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Data.InternalDataCollectionBase
#include "System/Data/InternalDataCollectionBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Data
namespace System::Data {
  // Forward declaring type: DataTable
  class DataTable;
  // Forward declaring type: DataColumn
  class DataColumn;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: CollectionChangeEventHandler
  class CollectionChangeEventHandler;
  // Forward declaring type: CollectionChangeEventArgs
  class CollectionChangeEventArgs;
}
// Completed forward declares
// Type namespace: System.Data
namespace System::Data {
  // Forward declaring type: DataColumnCollection
  class DataColumnCollection;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::DataColumnCollection);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::DataColumnCollection*, "System.Data", "DataColumnCollection");
// Type namespace: System.Data
namespace System::Data {
  // Size: 0x68
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.DataColumnCollection
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultEventAttribute] Offset: 6B9F00
  // [DefaultMemberAttribute] Offset: 6B9F00
  class DataColumnCollection : public ::System::Data::InternalDataCollectionBase {
    public:
    public:
    // private readonly System.Data.DataTable _table
    // Size: 0x8
    // Offset: 0x10
    ::System::Data::DataTable* table;
    // Field size check
    static_assert(sizeof(::System::Data::DataTable*) == 0x8);
    // private readonly System.Collections.ArrayList _list
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::ArrayList* list;
    // Field size check
    static_assert(sizeof(::System::Collections::ArrayList*) == 0x8);
    // private System.Int32 _defaultNameIndex
    // Size: 0x4
    // Offset: 0x20
    int defaultNameIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: defaultNameIndex and: delayedAddRangeColumns
    char __padding2[0x4] = {};
    // private System.Data.DataColumn[] _delayedAddRangeColumns
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::System::Data::DataColumn*> delayedAddRangeColumns;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::Data::DataColumn*>) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<System.String,System.Data.DataColumn> _columnFromName
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Data::DataColumn*>* columnFromName;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Data::DataColumn*>*) == 0x8);
    // private System.Boolean _fInClear
    // Size: 0x1
    // Offset: 0x38
    bool fInClear;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: fInClear and: columnsImplementingIChangeTracking
    char __padding5[0x7] = {};
    // private System.Data.DataColumn[] _columnsImplementingIChangeTracking
    // Size: 0x8
    // Offset: 0x40
    ::ArrayW<::System::Data::DataColumn*> columnsImplementingIChangeTracking;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::Data::DataColumn*>) == 0x8);
    // private System.Int32 _nColumnsImplementingIChangeTracking
    // Size: 0x4
    // Offset: 0x48
    int nColumnsImplementingIChangeTracking;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 _nColumnsImplementingIRevertibleChangeTracking
    // Size: 0x4
    // Offset: 0x4C
    int nColumnsImplementingIRevertibleChangeTracking;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.ComponentModel.CollectionChangeEventHandler CollectionChanged
    // Size: 0x8
    // Offset: 0x50
    ::System::ComponentModel::CollectionChangeEventHandler* CollectionChanged;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::CollectionChangeEventHandler*) == 0x8);
    // private System.ComponentModel.CollectionChangeEventHandler CollectionChanging
    // Size: 0x8
    // Offset: 0x58
    ::System::ComponentModel::CollectionChangeEventHandler* CollectionChanging;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::CollectionChangeEventHandler*) == 0x8);
    // private System.ComponentModel.CollectionChangeEventHandler ColumnPropertyChanged
    // Size: 0x8
    // Offset: 0x60
    ::System::ComponentModel::CollectionChangeEventHandler* ColumnPropertyChanged;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::CollectionChangeEventHandler*) == 0x8);
    public:
    // Get instance field reference: private readonly System.Data.DataTable _table
    [[deprecated]] ::System::Data::DataTable*& dyn__table();
    // Get instance field reference: private readonly System.Collections.ArrayList _list
    [[deprecated]] ::System::Collections::ArrayList*& dyn__list();
    // Get instance field reference: private System.Int32 _defaultNameIndex
    [[deprecated]] int& dyn__defaultNameIndex();
    // Get instance field reference: private System.Data.DataColumn[] _delayedAddRangeColumns
    [[deprecated]] ::ArrayW<::System::Data::DataColumn*>& dyn__delayedAddRangeColumns();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Data.DataColumn> _columnFromName
    [[deprecated]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Data::DataColumn*>*& dyn__columnFromName();
    // Get instance field reference: private System.Boolean _fInClear
    [[deprecated]] bool& dyn__fInClear();
    // Get instance field reference: private System.Data.DataColumn[] _columnsImplementingIChangeTracking
    [[deprecated]] ::ArrayW<::System::Data::DataColumn*>& dyn__columnsImplementingIChangeTracking();
    // Get instance field reference: private System.Int32 _nColumnsImplementingIChangeTracking
    [[deprecated]] int& dyn__nColumnsImplementingIChangeTracking();
    // Get instance field reference: private System.Int32 _nColumnsImplementingIRevertibleChangeTracking
    [[deprecated]] int& dyn__nColumnsImplementingIRevertibleChangeTracking();
    // Get instance field reference: private System.ComponentModel.CollectionChangeEventHandler CollectionChanged
    [[deprecated]] ::System::ComponentModel::CollectionChangeEventHandler*& dyn_CollectionChanged();
    // Get instance field reference: private System.ComponentModel.CollectionChangeEventHandler CollectionChanging
    [[deprecated]] ::System::ComponentModel::CollectionChangeEventHandler*& dyn_CollectionChanging();
    // Get instance field reference: private System.ComponentModel.CollectionChangeEventHandler ColumnPropertyChanged
    [[deprecated]] ::System::ComponentModel::CollectionChangeEventHandler*& dyn_ColumnPropertyChanged();
    // System.Data.DataColumn[] get_ColumnsImplementingIChangeTracking()
    // Offset: 0xF94A0C
    ::ArrayW<::System::Data::DataColumn*> get_ColumnsImplementingIChangeTracking();
    // System.Int32 get_ColumnsImplementingIChangeTrackingCount()
    // Offset: 0xF94A14
    int get_ColumnsImplementingIChangeTrackingCount();
    // System.Int32 get_ColumnsImplementingIRevertibleChangeTrackingCount()
    // Offset: 0xF94A1C
    int get_ColumnsImplementingIRevertibleChangeTrackingCount();
    // public System.Data.DataColumn get_Item(System.Int32 index)
    // Offset: 0xF94A24
    ::System::Data::DataColumn* get_Item(int index);
    // public System.Data.DataColumn get_Item(System.String name)
    // Offset: 0xF94B60
    ::System::Data::DataColumn* get_Item(::StringW name);
    // System.Data.DataColumn get_Item(System.String name, System.String ns)
    // Offset: 0xF94E1C
    ::System::Data::DataColumn* get_Item(::StringW name, ::StringW ns);
    // public System.Void add_CollectionChanged(System.ComponentModel.CollectionChangeEventHandler value)
    // Offset: 0xF955D4
    void add_CollectionChanged(::System::ComponentModel::CollectionChangeEventHandler* value);
    // public System.Void remove_CollectionChanged(System.ComponentModel.CollectionChangeEventHandler value)
    // Offset: 0xF95674
    void remove_CollectionChanged(::System::ComponentModel::CollectionChangeEventHandler* value);
    // System.Void add_ColumnPropertyChanged(System.ComponentModel.CollectionChangeEventHandler value)
    // Offset: 0xF95714
    void add_ColumnPropertyChanged(::System::ComponentModel::CollectionChangeEventHandler* value);
    // System.Void remove_ColumnPropertyChanged(System.ComponentModel.CollectionChangeEventHandler value)
    // Offset: 0xF957B4
    void remove_ColumnPropertyChanged(::System::ComponentModel::CollectionChangeEventHandler* value);
    // System.Void .ctor(System.Data.DataTable table)
    // Offset: 0xF9487C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataColumnCollection* New_ctor(::System::Data::DataTable* table) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataColumnCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataColumnCollection*, creationType>(table)));
    }
    // public System.Void Add(System.Data.DataColumn column)
    // Offset: 0xF94ECC
    void Add(::System::Data::DataColumn* column);
    // System.Void AddAt(System.Int32 index, System.Data.DataColumn column)
    // Offset: 0xF94ED8
    void AddAt(int index, ::System::Data::DataColumn* column);
    // private System.Void ArrayAdd(System.Data.DataColumn column)
    // Offset: 0xF954B8
    void ArrayAdd(::System::Data::DataColumn* column);
    // private System.Void ArrayAdd(System.Int32 index, System.Data.DataColumn column)
    // Offset: 0xF95474
    void ArrayAdd(int index, ::System::Data::DataColumn* column);
    // private System.Void ArrayRemove(System.Data.DataColumn column)
    // Offset: 0xF9589C
    void ArrayRemove(::System::Data::DataColumn* column);
    // System.String AssignName()
    // Offset: 0xF95AEC
    ::StringW AssignName();
    // private System.Void BaseAdd(System.Data.DataColumn column)
    // Offset: 0xF95168
    void BaseAdd(::System::Data::DataColumn* column);
    // private System.Void BaseGroupSwitch(System.Data.DataColumn[] oldArray, System.Int32 oldLength, System.Data.DataColumn[] newArray, System.Int32 newLength)
    // Offset: 0xF95F04
    void BaseGroupSwitch(::ArrayW<::System::Data::DataColumn*> oldArray, int oldLength, ::ArrayW<::System::Data::DataColumn*> newArray, int newLength);
    // private System.Void BaseRemove(System.Data.DataColumn column)
    // Offset: 0xF960FC
    void BaseRemove(::System::Data::DataColumn* column);
    // System.Boolean CanRemove(System.Data.DataColumn column, System.Boolean fThrowException)
    // Offset: 0xF961C4
    bool CanRemove(::System::Data::DataColumn* column, bool fThrowException);
    // private System.Void CheckIChangeTracking(System.Data.DataColumn column)
    // Offset: 0xF95854
    void CheckIChangeTracking(::System::Data::DataColumn* column);
    // public System.Void Clear()
    // Offset: 0xF96A38
    void Clear();
    // public System.Boolean Contains(System.String name)
    // Offset: 0xF96D74
    bool Contains(::StringW name);
    // System.Boolean Contains(System.String name, System.Boolean caseSensitive)
    // Offset: 0xF96E0C
    bool Contains(::StringW name, bool caseSensitive);
    // public System.Int32 IndexOf(System.String columnName)
    // Offset: 0xF96EB4
    int IndexOf(::StringW columnName);
    // System.Int32 IndexOfCaseInsensitive(System.String name)
    // Offset: 0xF94CB4
    int IndexOfCaseInsensitive(::StringW name);
    // private System.String MakeName(System.Int32 index)
    // Offset: 0xF95B8C
    ::StringW MakeName(int index);
    // private System.Void OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs ccevent)
    // Offset: 0xF95528
    void OnCollectionChanged(::System::ComponentModel::CollectionChangeEventArgs* ccevent);
    // private System.Void OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs ccevent)
    // Offset: 0xF95148
    void OnCollectionChanging(::System::ComponentModel::CollectionChangeEventArgs* ccevent);
    // System.Void OnColumnPropertyChanged(System.ComponentModel.CollectionChangeEventArgs ccevent)
    // Offset: 0xF96FC0
    void OnColumnPropertyChanged(::System::ComponentModel::CollectionChangeEventArgs* ccevent);
    // System.Void RegisterColumnName(System.String name, System.Data.DataColumn column)
    // Offset: 0xF95C58
    void RegisterColumnName(::StringW name, ::System::Data::DataColumn* column);
    // System.Boolean CanRegisterName(System.String name)
    // Offset: 0xF97014
    bool CanRegisterName(::StringW name);
    // public System.Void Remove(System.Data.DataColumn column)
    // Offset: 0xF97084
    void Remove(::System::Data::DataColumn* column);
    // System.Void UnregisterName(System.String name)
    // Offset: 0xF95E3C
    void UnregisterName(::StringW name);
    // private System.Void AddColumnsImplementingIChangeTrackingList(System.Data.DataColumn dataColumn)
    // Offset: 0xF96964
    void AddColumnsImplementingIChangeTrackingList(::System::Data::DataColumn* dataColumn);
    // private System.Void RemoveColumnsImplementingIChangeTrackingList(System.Data.DataColumn dataColumn)
    // Offset: 0xF959DC
    void RemoveColumnsImplementingIChangeTrackingList(::System::Data::DataColumn* dataColumn);
    // protected override System.Collections.ArrayList get_List()
    // Offset: 0xF94A04
    // Implemented from: System.Data.InternalDataCollectionBase
    // Base method: System.Collections.ArrayList InternalDataCollectionBase::get_List()
    ::System::Collections::ArrayList* get_List();
  }; // System.Data.DataColumnCollection
  #pragma pack(pop)
  static check_size<sizeof(DataColumnCollection), 96 + sizeof(::System::ComponentModel::CollectionChangeEventHandler*)> __System_Data_DataColumnCollectionSizeCheck;
  static_assert(sizeof(DataColumnCollection) == 0x68);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::DataColumnCollection::get_ColumnsImplementingIChangeTracking
// Il2CppName: get_ColumnsImplementingIChangeTracking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Data::DataColumn*> (System::Data::DataColumnCollection::*)()>(&System::Data::DataColumnCollection::get_ColumnsImplementingIChangeTracking)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "get_ColumnsImplementingIChangeTracking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::get_ColumnsImplementingIChangeTrackingCount
// Il2CppName: get_ColumnsImplementingIChangeTrackingCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataColumnCollection::*)()>(&System::Data::DataColumnCollection::get_ColumnsImplementingIChangeTrackingCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "get_ColumnsImplementingIChangeTrackingCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::get_ColumnsImplementingIRevertibleChangeTrackingCount
// Il2CppName: get_ColumnsImplementingIRevertibleChangeTrackingCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataColumnCollection::*)()>(&System::Data::DataColumnCollection::get_ColumnsImplementingIRevertibleChangeTrackingCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "get_ColumnsImplementingIRevertibleChangeTrackingCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataColumn* (System::Data::DataColumnCollection::*)(int)>(&System::Data::DataColumnCollection::get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataColumn* (System::Data::DataColumnCollection::*)(::StringW)>(&System::Data::DataColumnCollection::get_Item)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataColumn* (System::Data::DataColumnCollection::*)(::StringW, ::StringW)>(&System::Data::DataColumnCollection::get_Item)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ns = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, ns});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::add_CollectionChanged
// Il2CppName: add_CollectionChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(::System::ComponentModel::CollectionChangeEventHandler*)>(&System::Data::DataColumnCollection::add_CollectionChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "CollectionChangeEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "add_CollectionChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::remove_CollectionChanged
// Il2CppName: remove_CollectionChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(::System::ComponentModel::CollectionChangeEventHandler*)>(&System::Data::DataColumnCollection::remove_CollectionChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "CollectionChangeEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "remove_CollectionChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::add_ColumnPropertyChanged
// Il2CppName: add_ColumnPropertyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(::System::ComponentModel::CollectionChangeEventHandler*)>(&System::Data::DataColumnCollection::add_ColumnPropertyChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "CollectionChangeEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "add_ColumnPropertyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::remove_ColumnPropertyChanged
// Il2CppName: remove_ColumnPropertyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(::System::ComponentModel::CollectionChangeEventHandler*)>(&System::Data::DataColumnCollection::remove_ColumnPropertyChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "CollectionChangeEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "remove_ColumnPropertyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DataColumnCollection::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(::System::Data::DataColumn*)>(&System::Data::DataColumnCollection::Add)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::AddAt
// Il2CppName: AddAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(int, ::System::Data::DataColumn*)>(&System::Data::DataColumnCollection::AddAt)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "AddAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, column});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::ArrayAdd
// Il2CppName: ArrayAdd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(::System::Data::DataColumn*)>(&System::Data::DataColumnCollection::ArrayAdd)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "ArrayAdd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::ArrayAdd
// Il2CppName: ArrayAdd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(int, ::System::Data::DataColumn*)>(&System::Data::DataColumnCollection::ArrayAdd)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "ArrayAdd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, column});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::ArrayRemove
// Il2CppName: ArrayRemove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(::System::Data::DataColumn*)>(&System::Data::DataColumnCollection::ArrayRemove)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "ArrayRemove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::AssignName
// Il2CppName: AssignName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataColumnCollection::*)()>(&System::Data::DataColumnCollection::AssignName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "AssignName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::BaseAdd
// Il2CppName: BaseAdd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(::System::Data::DataColumn*)>(&System::Data::DataColumnCollection::BaseAdd)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "BaseAdd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::BaseGroupSwitch
// Il2CppName: BaseGroupSwitch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(::ArrayW<::System::Data::DataColumn*>, int, ::ArrayW<::System::Data::DataColumn*>, int)>(&System::Data::DataColumnCollection::BaseGroupSwitch)> {
  static const MethodInfo* get() {
    static auto* oldArray = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Data", "DataColumn"), 1)->byval_arg;
    static auto* oldLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* newArray = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Data", "DataColumn"), 1)->byval_arg;
    static auto* newLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "BaseGroupSwitch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oldArray, oldLength, newArray, newLength});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::BaseRemove
// Il2CppName: BaseRemove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(::System::Data::DataColumn*)>(&System::Data::DataColumnCollection::BaseRemove)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "BaseRemove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::CanRemove
// Il2CppName: CanRemove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumnCollection::*)(::System::Data::DataColumn*, bool)>(&System::Data::DataColumnCollection::CanRemove)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    static auto* fThrowException = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "CanRemove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column, fThrowException});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::CheckIChangeTracking
// Il2CppName: CheckIChangeTracking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(::System::Data::DataColumn*)>(&System::Data::DataColumnCollection::CheckIChangeTracking)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "CheckIChangeTracking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)()>(&System::Data::DataColumnCollection::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumnCollection::*)(::StringW)>(&System::Data::DataColumnCollection::Contains)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumnCollection::*)(::StringW, bool)>(&System::Data::DataColumnCollection::Contains)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* caseSensitive = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, caseSensitive});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataColumnCollection::*)(::StringW)>(&System::Data::DataColumnCollection::IndexOf)> {
  static const MethodInfo* get() {
    static auto* columnName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{columnName});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::IndexOfCaseInsensitive
// Il2CppName: IndexOfCaseInsensitive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataColumnCollection::*)(::StringW)>(&System::Data::DataColumnCollection::IndexOfCaseInsensitive)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "IndexOfCaseInsensitive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::MakeName
// Il2CppName: MakeName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataColumnCollection::*)(int)>(&System::Data::DataColumnCollection::MakeName)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "MakeName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::OnCollectionChanged
// Il2CppName: OnCollectionChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(::System::ComponentModel::CollectionChangeEventArgs*)>(&System::Data::DataColumnCollection::OnCollectionChanged)> {
  static const MethodInfo* get() {
    static auto* ccevent = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "CollectionChangeEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "OnCollectionChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ccevent});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::OnCollectionChanging
// Il2CppName: OnCollectionChanging
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(::System::ComponentModel::CollectionChangeEventArgs*)>(&System::Data::DataColumnCollection::OnCollectionChanging)> {
  static const MethodInfo* get() {
    static auto* ccevent = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "CollectionChangeEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "OnCollectionChanging", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ccevent});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::OnColumnPropertyChanged
// Il2CppName: OnColumnPropertyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(::System::ComponentModel::CollectionChangeEventArgs*)>(&System::Data::DataColumnCollection::OnColumnPropertyChanged)> {
  static const MethodInfo* get() {
    static auto* ccevent = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "CollectionChangeEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "OnColumnPropertyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ccevent});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::RegisterColumnName
// Il2CppName: RegisterColumnName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(::StringW, ::System::Data::DataColumn*)>(&System::Data::DataColumnCollection::RegisterColumnName)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "RegisterColumnName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, column});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::CanRegisterName
// Il2CppName: CanRegisterName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumnCollection::*)(::StringW)>(&System::Data::DataColumnCollection::CanRegisterName)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "CanRegisterName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(::System::Data::DataColumn*)>(&System::Data::DataColumnCollection::Remove)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::UnregisterName
// Il2CppName: UnregisterName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(::StringW)>(&System::Data::DataColumnCollection::UnregisterName)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "UnregisterName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::AddColumnsImplementingIChangeTrackingList
// Il2CppName: AddColumnsImplementingIChangeTrackingList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(::System::Data::DataColumn*)>(&System::Data::DataColumnCollection::AddColumnsImplementingIChangeTrackingList)> {
  static const MethodInfo* get() {
    static auto* dataColumn = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "AddColumnsImplementingIChangeTrackingList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dataColumn});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::RemoveColumnsImplementingIChangeTrackingList
// Il2CppName: RemoveColumnsImplementingIChangeTrackingList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumnCollection::*)(::System::Data::DataColumn*)>(&System::Data::DataColumnCollection::RemoveColumnsImplementingIChangeTrackingList)> {
  static const MethodInfo* get() {
    static auto* dataColumn = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "RemoveColumnsImplementingIChangeTrackingList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dataColumn});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumnCollection::get_List
// Il2CppName: get_List
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::ArrayList* (System::Data::DataColumnCollection::*)()>(&System::Data::DataColumnCollection::get_List)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumnCollection*), "get_List", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
