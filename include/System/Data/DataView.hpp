// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ComponentModel.MarshalByValueComponent
#include "System/ComponentModel/MarshalByValueComponent.hpp"
// Including type: System.ComponentModel.IBindingList
#include "System/ComponentModel/IBindingList.hpp"
// Including type: System.Data.DataViewRowState
#include "System/Data/DataViewRowState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Data
namespace System::Data {
  // Forward declaring type: DataViewManager
  class DataViewManager;
  // Forward declaring type: DataTable
  class DataTable;
  // Forward declaring type: Index
  class Index;
  // Forward declaring type: DataRow
  class DataRow;
  // Forward declaring type: IFilter
  class IFilter;
  // Forward declaring type: DataRowView
  class DataRowView;
  // Forward declaring type: DataViewListener
  class DataViewListener;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Comparison`1<T>
  template<typename T>
  class Comparison_1;
  // Forward declaring type: Array
  class Array;
}
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: ListChangedEventArgs
  class ListChangedEventArgs;
  // Forward declaring type: ListChangedEventHandler
  class ListChangedEventHandler;
  // Forward declaring type: ListChangedType
  struct ListChangedType;
  // Forward declaring type: CollectionChangeEventArgs
  class CollectionChangeEventArgs;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: System.Data
namespace System::Data {
  // Forward declaring type: DataView
  class DataView;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::DataView);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::DataView*, "System.Data", "DataView");
// Type namespace: System.Data
namespace System::Data {
  // Size: 0xAC
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.DataView
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultEventAttribute] Offset: 6BA344
  // [DefaultPropertyAttribute] Offset: 6BA344
  // [DefaultMemberAttribute] Offset: 6BA344
  class DataView : public ::System::ComponentModel::MarshalByValueComponent/*, public ::System::ComponentModel::IBindingList*/ {
    public:
    // Nested type: ::System::Data::DataView::DataRowReferenceComparer
    class DataRowReferenceComparer;
    public:
    // private System.Data.DataViewManager _dataViewManager
    // Size: 0x8
    // Offset: 0x20
    ::System::Data::DataViewManager* dataViewManager;
    // Field size check
    static_assert(sizeof(::System::Data::DataViewManager*) == 0x8);
    // private System.Data.DataTable _table
    // Size: 0x8
    // Offset: 0x28
    ::System::Data::DataTable* table;
    // Field size check
    static_assert(sizeof(::System::Data::DataTable*) == 0x8);
    // private System.Boolean _locked
    // Size: 0x1
    // Offset: 0x30
    bool locked;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: locked and: index
    char __padding2[0x7] = {};
    // private System.Data.Index _index
    // Size: 0x8
    // Offset: 0x38
    ::System::Data::Index* index;
    // Field size check
    static_assert(sizeof(::System::Data::Index*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.String,System.Data.Index> _findIndexes
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Data::Index*>* findIndexes;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Data::Index*>*) == 0x8);
    // private System.String _sort
    // Size: 0x8
    // Offset: 0x48
    ::StringW sort;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Comparison`1<System.Data.DataRow> _comparison
    // Size: 0x8
    // Offset: 0x50
    ::System::Comparison_1<::System::Data::DataRow*>* comparison;
    // Field size check
    static_assert(sizeof(::System::Comparison_1<::System::Data::DataRow*>*) == 0x8);
    // private System.Data.IFilter _rowFilter
    // Size: 0x8
    // Offset: 0x58
    ::System::Data::IFilter* rowFilter;
    // Field size check
    static_assert(sizeof(::System::Data::IFilter*) == 0x8);
    // private System.Data.DataViewRowState _recordStates
    // Size: 0x4
    // Offset: 0x60
    ::System::Data::DataViewRowState recordStates;
    // Field size check
    static_assert(sizeof(::System::Data::DataViewRowState) == 0x4);
    // private System.Boolean _shouldOpen
    // Size: 0x1
    // Offset: 0x64
    bool shouldOpen;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _open
    // Size: 0x1
    // Offset: 0x65
    bool open;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _allowNew
    // Size: 0x1
    // Offset: 0x66
    bool allowNew;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _allowEdit
    // Size: 0x1
    // Offset: 0x67
    bool allowEdit;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _allowDelete
    // Size: 0x1
    // Offset: 0x68
    bool allowDelete;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _applyDefaultSort
    // Size: 0x1
    // Offset: 0x69
    bool applyDefaultSort;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: applyDefaultSort and: addNewRow
    char __padding14[0x6] = {};
    // System.Data.DataRow _addNewRow
    // Size: 0x8
    // Offset: 0x70
    ::System::Data::DataRow* addNewRow;
    // Field size check
    static_assert(sizeof(::System::Data::DataRow*) == 0x8);
    // private System.ComponentModel.ListChangedEventArgs _addNewMoved
    // Size: 0x8
    // Offset: 0x78
    ::System::ComponentModel::ListChangedEventArgs* addNewMoved;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::ListChangedEventArgs*) == 0x8);
    // private System.ComponentModel.ListChangedEventHandler _onListChanged
    // Size: 0x8
    // Offset: 0x80
    ::System::ComponentModel::ListChangedEventHandler* onListChanged;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::ListChangedEventHandler*) == 0x8);
    // private System.Data.DataViewRowState _delayedRecordStates
    // Size: 0x4
    // Offset: 0x88
    ::System::Data::DataViewRowState delayedRecordStates;
    // Field size check
    static_assert(sizeof(::System::Data::DataViewRowState) == 0x4);
    // private System.Boolean _fEndInitInProgress
    // Size: 0x1
    // Offset: 0x8C
    bool fEndInitInProgress;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: fEndInitInProgress and: rowViewCache
    char __padding19[0x3] = {};
    // private System.Collections.Generic.Dictionary`2<System.Data.DataRow,System.Data.DataRowView> _rowViewCache
    // Size: 0x8
    // Offset: 0x90
    ::System::Collections::Generic::Dictionary_2<::System::Data::DataRow*, ::System::Data::DataRowView*>* rowViewCache;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::System::Data::DataRow*, ::System::Data::DataRowView*>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<System.Data.DataRow,System.Data.DataRowView> _rowViewBuffer
    // Size: 0x8
    // Offset: 0x98
    ::System::Collections::Generic::Dictionary_2<::System::Data::DataRow*, ::System::Data::DataRowView*>* rowViewBuffer;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::System::Data::DataRow*, ::System::Data::DataRowView*>*) == 0x8);
    // private System.Data.DataViewListener _dvListener
    // Size: 0x8
    // Offset: 0xA0
    ::System::Data::DataViewListener* dvListener;
    // Field size check
    static_assert(sizeof(::System::Data::DataViewListener*) == 0x8);
    // private readonly System.Int32 _objectID
    // Size: 0x4
    // Offset: 0xA8
    int objectID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating interface conversion operator: operator ::System::ComponentModel::IBindingList
    operator ::System::ComponentModel::IBindingList() noexcept {
      return *reinterpret_cast<::System::ComponentModel::IBindingList*>(this);
    }
    // Get static field: static System.ComponentModel.ListChangedEventArgs s_resetEventArgs
    static ::System::ComponentModel::ListChangedEventArgs* _get_s_resetEventArgs();
    // Set static field: static System.ComponentModel.ListChangedEventArgs s_resetEventArgs
    static void _set_s_resetEventArgs(::System::ComponentModel::ListChangedEventArgs* value);
    // Get static field: static private System.Int32 s_objectTypeCount
    static int _get_s_objectTypeCount();
    // Set static field: static private System.Int32 s_objectTypeCount
    static void _set_s_objectTypeCount(int value);
    // Get instance field reference: private System.Data.DataViewManager _dataViewManager
    [[deprecated]] ::System::Data::DataViewManager*& dyn__dataViewManager();
    // Get instance field reference: private System.Data.DataTable _table
    [[deprecated]] ::System::Data::DataTable*& dyn__table();
    // Get instance field reference: private System.Boolean _locked
    [[deprecated]] bool& dyn__locked();
    // Get instance field reference: private System.Data.Index _index
    [[deprecated]] ::System::Data::Index*& dyn__index();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,System.Data.Index> _findIndexes
    [[deprecated]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Data::Index*>*& dyn__findIndexes();
    // Get instance field reference: private System.String _sort
    [[deprecated]] ::StringW& dyn__sort();
    // Get instance field reference: private System.Comparison`1<System.Data.DataRow> _comparison
    [[deprecated]] ::System::Comparison_1<::System::Data::DataRow*>*& dyn__comparison();
    // Get instance field reference: private System.Data.IFilter _rowFilter
    [[deprecated]] ::System::Data::IFilter*& dyn__rowFilter();
    // Get instance field reference: private System.Data.DataViewRowState _recordStates
    [[deprecated]] ::System::Data::DataViewRowState& dyn__recordStates();
    // Get instance field reference: private System.Boolean _shouldOpen
    [[deprecated]] bool& dyn__shouldOpen();
    // Get instance field reference: private System.Boolean _open
    [[deprecated]] bool& dyn__open();
    // Get instance field reference: private System.Boolean _allowNew
    [[deprecated]] bool& dyn__allowNew();
    // Get instance field reference: private System.Boolean _allowEdit
    [[deprecated]] bool& dyn__allowEdit();
    // Get instance field reference: private System.Boolean _allowDelete
    [[deprecated]] bool& dyn__allowDelete();
    // Get instance field reference: private System.Boolean _applyDefaultSort
    [[deprecated]] bool& dyn__applyDefaultSort();
    // Get instance field reference: System.Data.DataRow _addNewRow
    [[deprecated]] ::System::Data::DataRow*& dyn__addNewRow();
    // Get instance field reference: private System.ComponentModel.ListChangedEventArgs _addNewMoved
    [[deprecated]] ::System::ComponentModel::ListChangedEventArgs*& dyn__addNewMoved();
    // Get instance field reference: private System.ComponentModel.ListChangedEventHandler _onListChanged
    [[deprecated]] ::System::ComponentModel::ListChangedEventHandler*& dyn__onListChanged();
    // Get instance field reference: private System.Data.DataViewRowState _delayedRecordStates
    [[deprecated]] ::System::Data::DataViewRowState& dyn__delayedRecordStates();
    // Get instance field reference: private System.Boolean _fEndInitInProgress
    [[deprecated]] bool& dyn__fEndInitInProgress();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.Data.DataRow,System.Data.DataRowView> _rowViewCache
    [[deprecated]] ::System::Collections::Generic::Dictionary_2<::System::Data::DataRow*, ::System::Data::DataRowView*>*& dyn__rowViewCache();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<System.Data.DataRow,System.Data.DataRowView> _rowViewBuffer
    [[deprecated]] ::System::Collections::Generic::Dictionary_2<::System::Data::DataRow*, ::System::Data::DataRowView*>*& dyn__rowViewBuffer();
    // Get instance field reference: private System.Data.DataViewListener _dvListener
    [[deprecated]] ::System::Data::DataViewListener*& dyn__dvListener();
    // Get instance field reference: private readonly System.Int32 _objectID
    [[deprecated]] int& dyn__objectID();
    // public System.Boolean get_AllowDelete()
    // Offset: 0x12E4124
    bool get_AllowDelete();
    // public System.Boolean get_AllowNew()
    // Offset: 0x12E412C
    bool get_AllowNew();
    // public System.Int32 get_Count()
    // Offset: 0x12E4134
    int get_Count();
    // private System.Int32 get_CountFromIndex()
    // Offset: 0x12E4188
    int get_CountFromIndex();
    // public System.Data.DataViewManager get_DataViewManager()
    // Offset: 0x12E41A4
    ::System::Data::DataViewManager* get_DataViewManager();
    // protected System.Boolean get_IsOpen()
    // Offset: 0x12E41AC
    bool get_IsOpen();
    // public System.Data.DataViewRowState get_RowStateFilter()
    // Offset: 0x12E41B4
    ::System::Data::DataViewRowState get_RowStateFilter();
    // public System.String get_Sort()
    // Offset: 0x12E41BC
    ::StringW get_Sort();
    // System.Comparison`1<System.Data.DataRow> get_SortComparison()
    // Offset: 0x12E4214
    ::System::Comparison_1<::System::Data::DataRow*>* get_SortComparison();
    // private System.Object System.Collections.ICollection.get_SyncRoot()
    // Offset: 0x12E421C
    ::Il2CppObject* System_Collections_ICollection_get_SyncRoot();
    // public System.Data.DataTable get_Table()
    // Offset: 0x12E4220
    ::System::Data::DataTable* get_Table();
    // private System.Object System.Collections.IList.get_Item(System.Int32 recordIndex)
    // Offset: 0x12E4228
    ::Il2CppObject* System_Collections_IList_get_Item(int recordIndex);
    // private System.Void System.Collections.IList.set_Item(System.Int32 recordIndex, System.Object value)
    // Offset: 0x12E4278
    void System_Collections_IList_set_Item(int recordIndex, ::Il2CppObject* value);
    // public System.Data.DataRowView get_Item(System.Int32 recordIndex)
    // Offset: 0x12E4250
    ::System::Data::DataRowView* get_Item(int recordIndex);
    // private System.Boolean System.Collections.IList.get_IsReadOnly()
    // Offset: 0x12E50A8
    bool System_Collections_IList_get_IsReadOnly();
    // private System.Boolean System.Collections.IList.get_IsFixedSize()
    // Offset: 0x12E50B0
    bool System_Collections_IList_get_IsFixedSize();
    // System.Int32 get_ObjectID()
    // Offset: 0x12E7118
    int get_ObjectID();
    // System.Void .ctor(System.Data.DataTable table, System.Boolean locked)
    // Offset: 0x12E3BF8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataView* New_ctor(::System::Data::DataTable* table, bool locked) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataView*, creationType>(table, locked)));
    }
    // public System.Data.DataRowView AddNew()
    // Offset: 0x12E43F4
    ::System::Data::DataRowView* AddNew();
    // private System.Void CheckOpen()
    // Offset: 0x12E46C0
    void CheckOpen();
    // protected System.Void Close()
    // Offset: 0x12E4854
    void Close();
    // public System.Void CopyTo(System.Array array, System.Int32 index)
    // Offset: 0x12E48B4
    void CopyTo(::System::Array* array, int index);
    // private System.Void CopyTo(System.Data.DataRowView[] array, System.Int32 index)
    // Offset: 0x12E4A50
    void CopyTo(::ArrayW<::System::Data::DataRowView*> array, int index);
    // public System.Void Delete(System.Int32 index)
    // Offset: 0x12E4C10
    void Delete(int index);
    // System.Void Delete(System.Data.DataRow row)
    // Offset: 0x12E4C38
    void Delete(::System::Data::DataRow* row);
    // System.Void FinishAddNew(System.Boolean success)
    // Offset: 0x12E4DF8
    void FinishAddNew(bool success);
    // public System.Collections.IEnumerator GetEnumerator()
    // Offset: 0x12E5028
    ::System::Collections::IEnumerator* GetEnumerator();
    // private System.Int32 System.Collections.IList.Add(System.Object value)
    // Offset: 0x12E50B8
    int System_Collections_IList_Add(::Il2CppObject* value);
    // private System.Void System.Collections.IList.Clear()
    // Offset: 0x12E5158
    void System_Collections_IList_Clear();
    // private System.Boolean System.Collections.IList.Contains(System.Object value)
    // Offset: 0x12E51C8
    bool System_Collections_IList_Contains(::Il2CppObject* value);
    // private System.Int32 System.Collections.IList.IndexOf(System.Object value)
    // Offset: 0x12E5260
    int System_Collections_IList_IndexOf(::Il2CppObject* value);
    // System.Int32 IndexOf(System.Data.DataRowView rowview)
    // Offset: 0x12E473C
    int IndexOf(::System::Data::DataRowView* rowview);
    // private System.Int32 IndexOfDataRowView(System.Data.DataRowView rowview)
    // Offset: 0x12E52EC
    int IndexOfDataRowView(::System::Data::DataRowView* rowview);
    // private System.Void System.Collections.IList.Insert(System.Int32 index, System.Object value)
    // Offset: 0x12E5348
    void System_Collections_IList_Insert(int index, ::Il2CppObject* value);
    // private System.Void System.Collections.IList.Remove(System.Object value)
    // Offset: 0x12E53B8
    void System_Collections_IList_Remove(::Il2CppObject* value);
    // private System.Void System.Collections.IList.RemoveAt(System.Int32 index)
    // Offset: 0x12E552C
    void System_Collections_IList_RemoveAt(int index);
    // System.Data.IFilter GetFilter()
    // Offset: 0x12E5554
    ::System::Data::IFilter* GetFilter();
    // private System.Int32 GetRecord(System.Int32 recordIndex)
    // Offset: 0x12E555C
    int GetRecord(int recordIndex);
    // System.Data.DataRow GetRow(System.Int32 index)
    // Offset: 0x12E42E8
    ::System::Data::DataRow* GetRow(int index);
    // private System.Data.DataRowView GetRowView(System.Int32 record)
    // Offset: 0x12E4A10
    ::System::Data::DataRowView* GetRowView(int record);
    // private System.Data.DataRowView GetRowView(System.Data.DataRow dr)
    // Offset: 0x12E4390
    ::System::Data::DataRowView* GetRowView(::System::Data::DataRow* dr);
    // protected System.Void IndexListChanged(System.Object sender, System.ComponentModel.ListChangedEventArgs e)
    // Offset: 0x12E5724
    void IndexListChanged(::Il2CppObject* sender, ::System::ComponentModel::ListChangedEventArgs* e);
    // System.Void IndexListChangedInternal(System.ComponentModel.ListChangedEventArgs e)
    // Offset: 0x12E57B8
    void IndexListChangedInternal(::System::ComponentModel::ListChangedEventArgs* e);
    // System.Void MaintainDataView(System.ComponentModel.ListChangedType changedType, System.Data.DataRow row, System.Boolean trackAddRemove)
    // Offset: 0x12E5874
    void MaintainDataView(::System::ComponentModel::ListChangedType changedType, ::System::Data::DataRow* row, bool trackAddRemove);
    // protected System.Void OnListChanged(System.ComponentModel.ListChangedEventArgs e)
    // Offset: 0x12E5D24
    void OnListChanged(::System::ComponentModel::ListChangedEventArgs* e);
    // protected System.Void Reset()
    // Offset: 0x12E60B0
    void Reset();
    // System.Void ResetRowViewCache()
    // Offset: 0x12E5AD0
    void ResetRowViewCache();
    // System.Void SetDataViewManager(System.Data.DataViewManager dataViewManager)
    // Offset: 0x12E60D8
    void SetDataViewManager(::System::Data::DataViewManager* dataViewManager);
    // System.Void SetIndex(System.String newSort, System.Data.DataViewRowState newRowStates, System.Data.IFilter newRowFilter)
    // Offset: 0x12E636C
    void SetIndex(::StringW newSort, ::System::Data::DataViewRowState newRowStates, ::System::Data::IFilter* newRowFilter);
    // System.Void SetIndex2(System.String newSort, System.Data.DataViewRowState newRowStates, System.Data.IFilter newRowFilter, System.Boolean fireEvent)
    // Offset: 0x12E6374
    void SetIndex2(::StringW newSort, ::System::Data::DataViewRowState newRowStates, ::System::Data::IFilter* newRowFilter, bool fireEvent);
    // protected System.Void UpdateIndex()
    // Offset: 0x12E4898
    void UpdateIndex();
    // protected System.Void UpdateIndex(System.Boolean force)
    // Offset: 0x12E68B8
    void UpdateIndex(bool force);
    // System.Void UpdateIndex(System.Boolean force, System.Boolean fireEvent)
    // Offset: 0x12E6584
    void UpdateIndex(bool force, bool fireEvent);
    // System.Void ChildRelationCollectionChanged(System.Object sender, System.ComponentModel.CollectionChangeEventArgs e)
    // Offset: 0x12E6AB4
    void ChildRelationCollectionChanged(::Il2CppObject* sender, ::System::ComponentModel::CollectionChangeEventArgs* e);
    // System.Void ParentRelationCollectionChanged(System.Object sender, System.ComponentModel.CollectionChangeEventArgs e)
    // Offset: 0x12E6CD0
    void ParentRelationCollectionChanged(::Il2CppObject* sender, ::System::ComponentModel::CollectionChangeEventArgs* e);
    // protected System.Void ColumnCollectionChanged(System.Object sender, System.ComponentModel.CollectionChangeEventArgs e)
    // Offset: 0x12E6EEC
    void ColumnCollectionChanged(::Il2CppObject* sender, ::System::ComponentModel::CollectionChangeEventArgs* e);
    // System.Void ColumnCollectionChangedInternal(System.Object sender, System.ComponentModel.CollectionChangeEventArgs e)
    // Offset: 0x12E7108
    void ColumnCollectionChangedInternal(::Il2CppObject* sender, ::System::ComponentModel::CollectionChangeEventArgs* e);
    // static private System.Void .cctor()
    // Offset: 0x12E7120
    // Implemented from: System.ComponentModel.MarshalByValueComponent
    // Base method: System.Void MarshalByValueComponent::.cctor()
    static void _cctor();
    // protected override System.Void Dispose(System.Boolean disposing)
    // Offset: 0x12E4FF0
    // Implemented from: System.ComponentModel.MarshalByValueComponent
    // Base method: System.Void MarshalByValueComponent::Dispose(System.Boolean disposing)
    void Dispose(bool disposing);
  }; // System.Data.DataView
  #pragma pack(pop)
  static check_size<sizeof(DataView), 168 + sizeof(int)> __System_Data_DataViewSizeCheck;
  static_assert(sizeof(DataView) == 0xAC);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::DataView::get_AllowDelete
// Il2CppName: get_AllowDelete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataView::*)()>(&System::Data::DataView::get_AllowDelete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "get_AllowDelete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::get_AllowNew
// Il2CppName: get_AllowNew
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataView::*)()>(&System::Data::DataView::get_AllowNew)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "get_AllowNew", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataView::*)()>(&System::Data::DataView::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::get_CountFromIndex
// Il2CppName: get_CountFromIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataView::*)()>(&System::Data::DataView::get_CountFromIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "get_CountFromIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::get_DataViewManager
// Il2CppName: get_DataViewManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataViewManager* (System::Data::DataView::*)()>(&System::Data::DataView::get_DataViewManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "get_DataViewManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::get_IsOpen
// Il2CppName: get_IsOpen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataView::*)()>(&System::Data::DataView::get_IsOpen)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "get_IsOpen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::get_RowStateFilter
// Il2CppName: get_RowStateFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataViewRowState (System::Data::DataView::*)()>(&System::Data::DataView::get_RowStateFilter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "get_RowStateFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::get_Sort
// Il2CppName: get_Sort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataView::*)()>(&System::Data::DataView::get_Sort)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "get_Sort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::get_SortComparison
// Il2CppName: get_SortComparison
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Comparison_1<::System::Data::DataRow*>* (System::Data::DataView::*)()>(&System::Data::DataView::get_SortComparison)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "get_SortComparison", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::System_Collections_ICollection_get_SyncRoot
// Il2CppName: System.Collections.ICollection.get_SyncRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::DataView::*)()>(&System::Data::DataView::System_Collections_ICollection_get_SyncRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::get_Table
// Il2CppName: get_Table
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataTable* (System::Data::DataView::*)()>(&System::Data::DataView::get_Table)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "get_Table", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::System_Collections_IList_get_Item
// Il2CppName: System.Collections.IList.get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::DataView::*)(int)>(&System::Data::DataView::System_Collections_IList_get_Item)> {
  static const MethodInfo* get() {
    static auto* recordIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "System.Collections.IList.get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordIndex});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::System_Collections_IList_set_Item
// Il2CppName: System.Collections.IList.set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(int, ::Il2CppObject*)>(&System::Data::DataView::System_Collections_IList_set_Item)> {
  static const MethodInfo* get() {
    static auto* recordIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "System.Collections.IList.set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordIndex, value});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataRowView* (System::Data::DataView::*)(int)>(&System::Data::DataView::get_Item)> {
  static const MethodInfo* get() {
    static auto* recordIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordIndex});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::System_Collections_IList_get_IsReadOnly
// Il2CppName: System.Collections.IList.get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataView::*)()>(&System::Data::DataView::System_Collections_IList_get_IsReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::System_Collections_IList_get_IsFixedSize
// Il2CppName: System.Collections.IList.get_IsFixedSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataView::*)()>(&System::Data::DataView::System_Collections_IList_get_IsFixedSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "System.Collections.IList.get_IsFixedSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::get_ObjectID
// Il2CppName: get_ObjectID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataView::*)()>(&System::Data::DataView::get_ObjectID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "get_ObjectID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DataView::AddNew
// Il2CppName: AddNew
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataRowView* (System::Data::DataView::*)()>(&System::Data::DataView::AddNew)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "AddNew", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::CheckOpen
// Il2CppName: CheckOpen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)()>(&System::Data::DataView::CheckOpen)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "CheckOpen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::Close
// Il2CppName: Close
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)()>(&System::Data::DataView::Close)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "Close", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::CopyTo
// Il2CppName: CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(::System::Array*, int)>(&System::Data::DataView::CopyTo)> {
  static const MethodInfo* get() {
    static auto* array = &::il2cpp_utils::GetClassFromName("System", "Array")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, index});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::CopyTo
// Il2CppName: CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(::ArrayW<::System::Data::DataRowView*>, int)>(&System::Data::DataView::CopyTo)> {
  static const MethodInfo* get() {
    static auto* array = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Data", "DataRowView"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, index});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::Delete
// Il2CppName: Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(int)>(&System::Data::DataView::Delete)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::Delete
// Il2CppName: Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(::System::Data::DataRow*)>(&System::Data::DataView::Delete)> {
  static const MethodInfo* get() {
    static auto* row = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{row});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::FinishAddNew
// Il2CppName: FinishAddNew
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(bool)>(&System::Data::DataView::FinishAddNew)> {
  static const MethodInfo* get() {
    static auto* success = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "FinishAddNew", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{success});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (System::Data::DataView::*)()>(&System::Data::DataView::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::System_Collections_IList_Add
// Il2CppName: System.Collections.IList.Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataView::*)(::Il2CppObject*)>(&System::Data::DataView::System_Collections_IList_Add)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "System.Collections.IList.Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::System_Collections_IList_Clear
// Il2CppName: System.Collections.IList.Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)()>(&System::Data::DataView::System_Collections_IList_Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "System.Collections.IList.Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::System_Collections_IList_Contains
// Il2CppName: System.Collections.IList.Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataView::*)(::Il2CppObject*)>(&System::Data::DataView::System_Collections_IList_Contains)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "System.Collections.IList.Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::System_Collections_IList_IndexOf
// Il2CppName: System.Collections.IList.IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataView::*)(::Il2CppObject*)>(&System::Data::DataView::System_Collections_IList_IndexOf)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataView::*)(::System::Data::DataRowView*)>(&System::Data::DataView::IndexOf)> {
  static const MethodInfo* get() {
    static auto* rowview = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rowview});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::IndexOfDataRowView
// Il2CppName: IndexOfDataRowView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataView::*)(::System::Data::DataRowView*)>(&System::Data::DataView::IndexOfDataRowView)> {
  static const MethodInfo* get() {
    static auto* rowview = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "IndexOfDataRowView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rowview});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::System_Collections_IList_Insert
// Il2CppName: System.Collections.IList.Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(int, ::Il2CppObject*)>(&System::Data::DataView::System_Collections_IList_Insert)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "System.Collections.IList.Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::System_Collections_IList_Remove
// Il2CppName: System.Collections.IList.Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(::Il2CppObject*)>(&System::Data::DataView::System_Collections_IList_Remove)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "System.Collections.IList.Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::System_Collections_IList_RemoveAt
// Il2CppName: System.Collections.IList.RemoveAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(int)>(&System::Data::DataView::System_Collections_IList_RemoveAt)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "System.Collections.IList.RemoveAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::GetFilter
// Il2CppName: GetFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::IFilter* (System::Data::DataView::*)()>(&System::Data::DataView::GetFilter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "GetFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::GetRecord
// Il2CppName: GetRecord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataView::*)(int)>(&System::Data::DataView::GetRecord)> {
  static const MethodInfo* get() {
    static auto* recordIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "GetRecord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordIndex});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::GetRow
// Il2CppName: GetRow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataRow* (System::Data::DataView::*)(int)>(&System::Data::DataView::GetRow)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "GetRow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::GetRowView
// Il2CppName: GetRowView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataRowView* (System::Data::DataView::*)(int)>(&System::Data::DataView::GetRowView)> {
  static const MethodInfo* get() {
    static auto* record = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "GetRowView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{record});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::GetRowView
// Il2CppName: GetRowView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataRowView* (System::Data::DataView::*)(::System::Data::DataRow*)>(&System::Data::DataView::GetRowView)> {
  static const MethodInfo* get() {
    static auto* dr = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "GetRowView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dr});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::IndexListChanged
// Il2CppName: IndexListChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(::Il2CppObject*, ::System::ComponentModel::ListChangedEventArgs*)>(&System::Data::DataView::IndexListChanged)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "ListChangedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "IndexListChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, e});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::IndexListChangedInternal
// Il2CppName: IndexListChangedInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(::System::ComponentModel::ListChangedEventArgs*)>(&System::Data::DataView::IndexListChangedInternal)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "ListChangedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "IndexListChangedInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::MaintainDataView
// Il2CppName: MaintainDataView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(::System::ComponentModel::ListChangedType, ::System::Data::DataRow*, bool)>(&System::Data::DataView::MaintainDataView)> {
  static const MethodInfo* get() {
    static auto* changedType = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "ListChangedType")->byval_arg;
    static auto* row = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    static auto* trackAddRemove = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "MaintainDataView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{changedType, row, trackAddRemove});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::OnListChanged
// Il2CppName: OnListChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(::System::ComponentModel::ListChangedEventArgs*)>(&System::Data::DataView::OnListChanged)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "ListChangedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "OnListChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)()>(&System::Data::DataView::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::ResetRowViewCache
// Il2CppName: ResetRowViewCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)()>(&System::Data::DataView::ResetRowViewCache)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "ResetRowViewCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::SetDataViewManager
// Il2CppName: SetDataViewManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(::System::Data::DataViewManager*)>(&System::Data::DataView::SetDataViewManager)> {
  static const MethodInfo* get() {
    static auto* dataViewManager = &::il2cpp_utils::GetClassFromName("System.Data", "DataViewManager")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "SetDataViewManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dataViewManager});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::SetIndex
// Il2CppName: SetIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(::StringW, ::System::Data::DataViewRowState, ::System::Data::IFilter*)>(&System::Data::DataView::SetIndex)> {
  static const MethodInfo* get() {
    static auto* newSort = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* newRowStates = &::il2cpp_utils::GetClassFromName("System.Data", "DataViewRowState")->byval_arg;
    static auto* newRowFilter = &::il2cpp_utils::GetClassFromName("System.Data", "IFilter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "SetIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newSort, newRowStates, newRowFilter});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::SetIndex2
// Il2CppName: SetIndex2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(::StringW, ::System::Data::DataViewRowState, ::System::Data::IFilter*, bool)>(&System::Data::DataView::SetIndex2)> {
  static const MethodInfo* get() {
    static auto* newSort = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* newRowStates = &::il2cpp_utils::GetClassFromName("System.Data", "DataViewRowState")->byval_arg;
    static auto* newRowFilter = &::il2cpp_utils::GetClassFromName("System.Data", "IFilter")->byval_arg;
    static auto* fireEvent = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "SetIndex2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newSort, newRowStates, newRowFilter, fireEvent});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::UpdateIndex
// Il2CppName: UpdateIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)()>(&System::Data::DataView::UpdateIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "UpdateIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::UpdateIndex
// Il2CppName: UpdateIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(bool)>(&System::Data::DataView::UpdateIndex)> {
  static const MethodInfo* get() {
    static auto* force = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "UpdateIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{force});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::UpdateIndex
// Il2CppName: UpdateIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(bool, bool)>(&System::Data::DataView::UpdateIndex)> {
  static const MethodInfo* get() {
    static auto* force = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* fireEvent = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "UpdateIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{force, fireEvent});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::ChildRelationCollectionChanged
// Il2CppName: ChildRelationCollectionChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(::Il2CppObject*, ::System::ComponentModel::CollectionChangeEventArgs*)>(&System::Data::DataView::ChildRelationCollectionChanged)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "CollectionChangeEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "ChildRelationCollectionChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, e});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::ParentRelationCollectionChanged
// Il2CppName: ParentRelationCollectionChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(::Il2CppObject*, ::System::ComponentModel::CollectionChangeEventArgs*)>(&System::Data::DataView::ParentRelationCollectionChanged)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "CollectionChangeEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "ParentRelationCollectionChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, e});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::ColumnCollectionChanged
// Il2CppName: ColumnCollectionChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(::Il2CppObject*, ::System::ComponentModel::CollectionChangeEventArgs*)>(&System::Data::DataView::ColumnCollectionChanged)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "CollectionChangeEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "ColumnCollectionChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, e});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::ColumnCollectionChangedInternal
// Il2CppName: ColumnCollectionChangedInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(::Il2CppObject*, ::System::ComponentModel::CollectionChangeEventArgs*)>(&System::Data::DataView::ColumnCollectionChangedInternal)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "CollectionChangeEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "ColumnCollectionChangedInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, e});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Data::DataView::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataView::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataView::*)(bool)>(&System::Data::DataView::Dispose)> {
  static const MethodInfo* get() {
    static auto* disposing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataView*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{disposing});
  }
};
