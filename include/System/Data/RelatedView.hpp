// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Data.DataView
#include "System/Data/DataView.hpp"
// Including type: System.Data.IFilter
#include "System/Data/IFilter.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Data.DataKey
#include "System/Data/DataKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Data
namespace System::Data {
  // Forward declaring type: DataRowView
  class DataRowView;
  // Forward declaring type: DataColumn
  class DataColumn;
  // Forward declaring type: DataRow
  class DataRow;
  // Forward declaring type: DataRowVersion
  struct DataRowVersion;
  // Skipping declaration: DataViewRowState because it is already included!
}
// Completed forward declares
// Type namespace: System.Data
namespace System::Data {
  // Forward declaring type: RelatedView
  class RelatedView;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::RelatedView);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::RelatedView*, "System.Data", "RelatedView");
// Type namespace: System.Data
namespace System::Data {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Data.RelatedView
  // [TokenAttribute] Offset: FFFFFFFF
  class RelatedView : public ::System::Data::DataView/*, public ::System::Data::IFilter*/ {
    public:
    // Writing base type padding for base size: 0xAC to desired offset: 0xB0
    char ___base_padding[0x4] = {};
    public:
    // private readonly System.Nullable`1<System.Data.DataKey> _parentKey
    // Size: 0xFFFFFFFF
    // Offset: 0xB0
    ::System::Nullable_1<::System::Data::DataKey> parentKey;
    // private readonly System.Data.DataKey _childKey
    // Size: 0x8
    // Offset: 0xC0
    ::System::Data::DataKey childKey;
    // Field size check
    static_assert(sizeof(::System::Data::DataKey) == 0x8);
    // private readonly System.Data.DataRowView _parentRowView
    // Size: 0x8
    // Offset: 0xC8
    ::System::Data::DataRowView* parentRowView;
    // Field size check
    static_assert(sizeof(::System::Data::DataRowView*) == 0x8);
    // private readonly System.Object[] _filterValues
    // Size: 0x8
    // Offset: 0xD0
    ::ArrayW<::Il2CppObject*> filterValues;
    // Field size check
    static_assert(sizeof(::ArrayW<::Il2CppObject*>) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Data::IFilter
    operator ::System::Data::IFilter() noexcept {
      return *reinterpret_cast<::System::Data::IFilter*>(this);
    }
    // Get instance field reference: private readonly System.Nullable`1<System.Data.DataKey> _parentKey
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::Data::DataKey>& dyn__parentKey();
    // Get instance field reference: private readonly System.Data.DataKey _childKey
    [[deprecated("Use field access instead!")]] ::System::Data::DataKey& dyn__childKey();
    // Get instance field reference: private readonly System.Data.DataRowView _parentRowView
    [[deprecated("Use field access instead!")]] ::System::Data::DataRowView*& dyn__parentRowView();
    // Get instance field reference: private readonly System.Object[] _filterValues
    [[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& dyn__filterValues();
    // public System.Void .ctor(System.Data.DataColumn[] columns, System.Object[] values)
    // Offset: 0x1219844
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RelatedView* New_ctor(::ArrayW<::System::Data::DataColumn*> columns, ::ArrayW<::Il2CppObject*> values) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RelatedView::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RelatedView*, creationType>(columns, values)));
    }
    // public System.Void .ctor(System.Data.DataRowView parentRowView, System.Data.DataKey parentKey, System.Data.DataColumn[] childKeyColumns)
    // Offset: 0x1219978
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RelatedView* New_ctor(::System::Data::DataRowView* parentRowView, ::System::Data::DataKey parentKey, ::ArrayW<::System::Data::DataColumn*> childKeyColumns) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RelatedView::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RelatedView*, creationType>(parentRowView, parentKey, childKeyColumns)));
    }
    // private System.Object[] GetParentValues()
    // Offset: 0x1219A94
    ::ArrayW<::Il2CppObject*> GetParentValues();
    // public System.Boolean Invoke(System.Data.DataRow row, System.Data.DataRowVersion version)
    // Offset: 0x1219B48
    bool Invoke(::System::Data::DataRow* row, ::System::Data::DataRowVersion version);
    // override System.Data.IFilter GetFilter()
    // Offset: 0x1219CD4
    // Implemented from: System.Data.DataView
    // Base method: System.Data.IFilter DataView::GetFilter()
    ::System::Data::IFilter* GetFilter();
    // public override System.Data.DataRowView AddNew()
    // Offset: 0x1219CD8
    // Implemented from: System.Data.DataView
    // Base method: System.Data.DataRowView DataView::AddNew()
    ::System::Data::DataRowView* AddNew();
    // override System.Void SetIndex(System.String newSort, System.Data.DataViewRowState newRowStates, System.Data.IFilter newRowFilter)
    // Offset: 0x1219D3C
    // Implemented from: System.Data.DataView
    // Base method: System.Void DataView::SetIndex(System.String newSort, System.Data.DataViewRowState newRowStates, System.Data.IFilter newRowFilter)
    void SetIndex(::StringW newSort, ::System::Data::DataViewRowState newRowStates, ::System::Data::IFilter* newRowFilter);
  }; // System.Data.RelatedView
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::RelatedView::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::RelatedView::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::RelatedView::GetParentValues
// Il2CppName: GetParentValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppObject*> (System::Data::RelatedView::*)()>(&System::Data::RelatedView::GetParentValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::RelatedView*), "GetParentValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::RelatedView::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::RelatedView::*)(::System::Data::DataRow*, ::System::Data::DataRowVersion)>(&System::Data::RelatedView::Invoke)> {
  static const MethodInfo* get() {
    static auto* row = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    static auto* version = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowVersion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::RelatedView*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{row, version});
  }
};
// Writing MetadataGetter for method: System::Data::RelatedView::GetFilter
// Il2CppName: GetFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::IFilter* (System::Data::RelatedView::*)()>(&System::Data::RelatedView::GetFilter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::RelatedView*), "GetFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::RelatedView::AddNew
// Il2CppName: AddNew
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataRowView* (System::Data::RelatedView::*)()>(&System::Data::RelatedView::AddNew)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::RelatedView*), "AddNew", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::RelatedView::SetIndex
// Il2CppName: SetIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::RelatedView::*)(::StringW, ::System::Data::DataViewRowState, ::System::Data::IFilter*)>(&System::Data::RelatedView::SetIndex)> {
  static const MethodInfo* get() {
    static auto* newSort = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* newRowStates = &::il2cpp_utils::GetClassFromName("System.Data", "DataViewRowState")->byval_arg;
    static auto* newRowFilter = &::il2cpp_utils::GetClassFromName("System.Data", "IFilter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::RelatedView*), "SetIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newSort, newRowStates, newRowFilter});
  }
};
