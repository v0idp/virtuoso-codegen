// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Data.DataException
#include "System/Data/DataException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: System.Data
namespace System::Data {
  // Forward declaring type: DuplicateNameException
  class DuplicateNameException;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::DuplicateNameException);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::DuplicateNameException*, "System.Data", "DuplicateNameException");
// Type namespace: System.Data
namespace System::Data {
  // Size: 0x88
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.DuplicateNameException
  // [TokenAttribute] Offset: FFFFFFFF
  class DuplicateNameException : public ::System::Data::DataException {
    public:
    // protected System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x12ED5B0
    // Implemented from: System.Data.DataException
    // Base method: System.Void DataException::.ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DuplicateNameException* New_ctor(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DuplicateNameException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DuplicateNameException*, creationType>(info, context)));
    }
    // public System.Void .ctor()
    // Offset: 0x12ED5F8
    // Implemented from: System.Data.DataException
    // Base method: System.Void DataException::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DuplicateNameException* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DuplicateNameException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DuplicateNameException*, creationType>()));
    }
    // public System.Void .ctor(System.String s)
    // Offset: 0x12ED658
    // Implemented from: System.Data.DataException
    // Base method: System.Void DataException::.ctor(System.String s)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DuplicateNameException* New_ctor(::StringW s) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DuplicateNameException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DuplicateNameException*, creationType>(s)));
    }
  }; // System.Data.DuplicateNameException
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::DuplicateNameException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DuplicateNameException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DuplicateNameException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
