// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Forward declaring namespace: System::Data
namespace System::Data {
  // Forward declaring type: DataSet
  class DataSet;
  // Forward declaring type: DataTable
  class DataTable;
}
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlReader
  class XmlReader;
}
// Completed forward declares
// Type namespace: System.Data
namespace System::Data {
  // Forward declaring type: XMLDiffLoader
  class XMLDiffLoader;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::XMLDiffLoader);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::XMLDiffLoader*, "System.Data", "XMLDiffLoader");
// Type namespace: System.Data
namespace System::Data {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.XMLDiffLoader
  // [TokenAttribute] Offset: FFFFFFFF
  class XMLDiffLoader : public ::Il2CppObject {
    public:
    public:
    // private System.Collections.ArrayList _tables
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::ArrayList* tables;
    // Field size check
    static_assert(sizeof(::System::Collections::ArrayList*) == 0x8);
    // private System.Data.DataSet _dataSet
    // Size: 0x8
    // Offset: 0x18
    ::System::Data::DataSet* dataSet;
    // Field size check
    static_assert(sizeof(::System::Data::DataSet*) == 0x8);
    // private System.Data.DataTable _dataTable
    // Size: 0x8
    // Offset: 0x20
    ::System::Data::DataTable* dataTable;
    // Field size check
    static_assert(sizeof(::System::Data::DataTable*) == 0x8);
    public:
    // Get instance field reference: private System.Collections.ArrayList _tables
    [[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& dyn__tables();
    // Get instance field reference: private System.Data.DataSet _dataSet
    [[deprecated("Use field access instead!")]] ::System::Data::DataSet*& dyn__dataSet();
    // Get instance field reference: private System.Data.DataTable _dataTable
    [[deprecated("Use field access instead!")]] ::System::Data::DataTable*& dyn__dataTable();
    // public System.Void .ctor()
    // Offset: 0x11C5040
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XMLDiffLoader* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLDiffLoader::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XMLDiffLoader*, creationType>()));
    }
    // System.Void LoadDiffGram(System.Data.DataSet ds, System.Xml.XmlReader dataTextReader)
    // Offset: 0x11C29F0
    void LoadDiffGram(::System::Data::DataSet* ds, ::System::Xml::XmlReader* dataTextReader);
    // private System.Void CreateTablesHierarchy(System.Data.DataTable dt)
    // Offset: 0x11C3248
    void CreateTablesHierarchy(::System::Data::DataTable* dt);
    // System.Void LoadDiffGram(System.Data.DataTable dt, System.Xml.XmlReader dataTextReader)
    // Offset: 0x11C3598
    void LoadDiffGram(::System::Data::DataTable* dt, ::System::Xml::XmlReader* dataTextReader);
    // System.Void ProcessDiffs(System.Data.DataSet ds, System.Xml.XmlReader ssync)
    // Offset: 0x11C2B98
    void ProcessDiffs(::System::Data::DataSet* ds, ::System::Xml::XmlReader* ssync);
    // System.Void ProcessDiffs(System.Collections.ArrayList tableList, System.Xml.XmlReader ssync)
    // Offset: 0x11C3794
    void ProcessDiffs(::System::Collections::ArrayList* tableList, ::System::Xml::XmlReader* ssync);
    // System.Void ProcessErrors(System.Data.DataSet ds, System.Xml.XmlReader ssync)
    // Offset: 0x11C2E80
    void ProcessErrors(::System::Data::DataSet* ds, ::System::Xml::XmlReader* ssync);
    // System.Void ProcessErrors(System.Collections.ArrayList dt, System.Xml.XmlReader ssync)
    // Offset: 0x11C3A70
    void ProcessErrors(::System::Collections::ArrayList* dt, ::System::Xml::XmlReader* ssync);
    // private System.Data.DataTable GetTable(System.String tableName, System.String ns)
    // Offset: 0x11C4E68
    ::System::Data::DataTable* GetTable(::StringW tableName, ::StringW ns);
    // private System.Int32 ReadOldRowData(System.Data.DataSet ds, ref System.Data.DataTable table, ref System.Int32 pos, System.Xml.XmlReader row)
    // Offset: 0x11C3FAC
    int ReadOldRowData(::System::Data::DataSet* ds, ByRef<::System::Data::DataTable*> table, ByRef<int> pos, ::System::Xml::XmlReader* row);
    // System.Void SkipWhitespaces(System.Xml.XmlReader reader)
    // Offset: 0x11C3F40
    void SkipWhitespaces(::System::Xml::XmlReader* reader);
  }; // System.Data.XMLDiffLoader
  #pragma pack(pop)
  static check_size<sizeof(XMLDiffLoader), 32 + sizeof(::System::Data::DataTable*)> __System_Data_XMLDiffLoaderSizeCheck;
  static_assert(sizeof(XMLDiffLoader) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::XMLDiffLoader::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::XMLDiffLoader::LoadDiffGram
// Il2CppName: LoadDiffGram
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::XMLDiffLoader::*)(::System::Data::DataSet*, ::System::Xml::XmlReader*)>(&System::Data::XMLDiffLoader::LoadDiffGram)> {
  static const MethodInfo* get() {
    static auto* ds = &::il2cpp_utils::GetClassFromName("System.Data", "DataSet")->byval_arg;
    static auto* dataTextReader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::XMLDiffLoader*), "LoadDiffGram", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ds, dataTextReader});
  }
};
// Writing MetadataGetter for method: System::Data::XMLDiffLoader::CreateTablesHierarchy
// Il2CppName: CreateTablesHierarchy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::XMLDiffLoader::*)(::System::Data::DataTable*)>(&System::Data::XMLDiffLoader::CreateTablesHierarchy)> {
  static const MethodInfo* get() {
    static auto* dt = &::il2cpp_utils::GetClassFromName("System.Data", "DataTable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::XMLDiffLoader*), "CreateTablesHierarchy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dt});
  }
};
// Writing MetadataGetter for method: System::Data::XMLDiffLoader::LoadDiffGram
// Il2CppName: LoadDiffGram
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::XMLDiffLoader::*)(::System::Data::DataTable*, ::System::Xml::XmlReader*)>(&System::Data::XMLDiffLoader::LoadDiffGram)> {
  static const MethodInfo* get() {
    static auto* dt = &::il2cpp_utils::GetClassFromName("System.Data", "DataTable")->byval_arg;
    static auto* dataTextReader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::XMLDiffLoader*), "LoadDiffGram", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dt, dataTextReader});
  }
};
// Writing MetadataGetter for method: System::Data::XMLDiffLoader::ProcessDiffs
// Il2CppName: ProcessDiffs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::XMLDiffLoader::*)(::System::Data::DataSet*, ::System::Xml::XmlReader*)>(&System::Data::XMLDiffLoader::ProcessDiffs)> {
  static const MethodInfo* get() {
    static auto* ds = &::il2cpp_utils::GetClassFromName("System.Data", "DataSet")->byval_arg;
    static auto* ssync = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::XMLDiffLoader*), "ProcessDiffs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ds, ssync});
  }
};
// Writing MetadataGetter for method: System::Data::XMLDiffLoader::ProcessDiffs
// Il2CppName: ProcessDiffs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::XMLDiffLoader::*)(::System::Collections::ArrayList*, ::System::Xml::XmlReader*)>(&System::Data::XMLDiffLoader::ProcessDiffs)> {
  static const MethodInfo* get() {
    static auto* tableList = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    static auto* ssync = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::XMLDiffLoader*), "ProcessDiffs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tableList, ssync});
  }
};
// Writing MetadataGetter for method: System::Data::XMLDiffLoader::ProcessErrors
// Il2CppName: ProcessErrors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::XMLDiffLoader::*)(::System::Data::DataSet*, ::System::Xml::XmlReader*)>(&System::Data::XMLDiffLoader::ProcessErrors)> {
  static const MethodInfo* get() {
    static auto* ds = &::il2cpp_utils::GetClassFromName("System.Data", "DataSet")->byval_arg;
    static auto* ssync = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::XMLDiffLoader*), "ProcessErrors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ds, ssync});
  }
};
// Writing MetadataGetter for method: System::Data::XMLDiffLoader::ProcessErrors
// Il2CppName: ProcessErrors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::XMLDiffLoader::*)(::System::Collections::ArrayList*, ::System::Xml::XmlReader*)>(&System::Data::XMLDiffLoader::ProcessErrors)> {
  static const MethodInfo* get() {
    static auto* dt = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    static auto* ssync = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::XMLDiffLoader*), "ProcessErrors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dt, ssync});
  }
};
// Writing MetadataGetter for method: System::Data::XMLDiffLoader::GetTable
// Il2CppName: GetTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataTable* (System::Data::XMLDiffLoader::*)(::StringW, ::StringW)>(&System::Data::XMLDiffLoader::GetTable)> {
  static const MethodInfo* get() {
    static auto* tableName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ns = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::XMLDiffLoader*), "GetTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tableName, ns});
  }
};
// Writing MetadataGetter for method: System::Data::XMLDiffLoader::ReadOldRowData
// Il2CppName: ReadOldRowData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::XMLDiffLoader::*)(::System::Data::DataSet*, ByRef<::System::Data::DataTable*>, ByRef<int>, ::System::Xml::XmlReader*)>(&System::Data::XMLDiffLoader::ReadOldRowData)> {
  static const MethodInfo* get() {
    static auto* ds = &::il2cpp_utils::GetClassFromName("System.Data", "DataSet")->byval_arg;
    static auto* table = &::il2cpp_utils::GetClassFromName("System.Data", "DataTable")->this_arg;
    static auto* pos = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* row = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::XMLDiffLoader*), "ReadOldRowData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ds, table, pos, row});
  }
};
// Writing MetadataGetter for method: System::Data::XMLDiffLoader::SkipWhitespaces
// Il2CppName: SkipWhitespaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::XMLDiffLoader::*)(::System::Xml::XmlReader*)>(&System::Data::XMLDiffLoader::SkipWhitespaces)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::XMLDiffLoader*), "SkipWhitespaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader});
  }
};
