// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.Data.DataRowAction
#include "System/Data/DataRowAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Data
namespace System::Data {
  // Forward declaring type: DataRow
  class DataRow;
}
// Completed forward declares
// Type namespace: System.Data
namespace System::Data {
  // Forward declaring type: DataRowChangeEventArgs
  class DataRowChangeEventArgs;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::DataRowChangeEventArgs);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::DataRowChangeEventArgs*, "System.Data", "DataRowChangeEventArgs");
// Type namespace: System.Data
namespace System::Data {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.DataRowChangeEventArgs
  // [TokenAttribute] Offset: FFFFFFFF
  class DataRowChangeEventArgs : public ::System::EventArgs {
    public:
    public:
    // private readonly System.Data.DataRow <Row>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::System::Data::DataRow* Row;
    // Field size check
    static_assert(sizeof(::System::Data::DataRow*) == 0x8);
    // private readonly System.Data.DataRowAction <Action>k__BackingField
    // Size: 0x4
    // Offset: 0x18
    ::System::Data::DataRowAction Action;
    // Field size check
    static_assert(sizeof(::System::Data::DataRowAction) == 0x4);
    public:
    // Get instance field reference: private readonly System.Data.DataRow <Row>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Data::DataRow*& dyn_$Row$k__BackingField();
    // Get instance field reference: private readonly System.Data.DataRowAction <Action>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Data::DataRowAction& dyn_$Action$k__BackingField();
    // public System.Void .ctor(System.Data.DataRow row, System.Data.DataRowAction action)
    // Offset: 0xFA1900
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataRowChangeEventArgs* New_ctor(::System::Data::DataRow* row, ::System::Data::DataRowAction action) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowChangeEventArgs::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataRowChangeEventArgs*, creationType>(row, action)));
    }
  }; // System.Data.DataRowChangeEventArgs
  #pragma pack(pop)
  static check_size<sizeof(DataRowChangeEventArgs), 24 + sizeof(::System::Data::DataRowAction)> __System_Data_DataRowChangeEventArgsSizeCheck;
  static_assert(sizeof(DataRowChangeEventArgs) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::DataRowChangeEventArgs::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
