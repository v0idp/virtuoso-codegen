// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Data.Constraint
#include "System/Data/Constraint.hpp"
// Including type: System.Data.Rule
#include "System/Data/Rule.hpp"
// Including type: System.Data.AcceptRejectRule
#include "System/Data/AcceptRejectRule.hpp"
// Including type: System.Data.DataKey
#include "System/Data/DataKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Data
namespace System::Data {
  // Forward declaring type: DataColumn
  class DataColumn;
  // Forward declaring type: DataTable
  class DataTable;
  // Forward declaring type: DataRow
  class DataRow;
  // Forward declaring type: DataRowAction
  struct DataRowAction;
  // Forward declaring type: DataRelation
  class DataRelation;
  // Forward declaring type: ConstraintCollection
  class ConstraintCollection;
  // Forward declaring type: DataSet
  class DataSet;
}
// Completed forward declares
// Type namespace: System.Data
namespace System::Data {
  // Forward declaring type: ForeignKeyConstraint
  class ForeignKeyConstraint;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::ForeignKeyConstraint);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::ForeignKeyConstraint*, "System.Data", "ForeignKeyConstraint");
// Type namespace: System.Data
namespace System::Data {
  // Size: 0x78
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.ForeignKeyConstraint
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultPropertyAttribute] Offset: 6BA470
  class ForeignKeyConstraint : public ::System::Data::Constraint {
    public:
    public:
    // System.Data.Rule _deleteRule
    // Size: 0x4
    // Offset: 0x38
    ::System::Data::Rule deleteRule;
    // Field size check
    static_assert(sizeof(::System::Data::Rule) == 0x4);
    // System.Data.Rule _updateRule
    // Size: 0x4
    // Offset: 0x3C
    ::System::Data::Rule updateRule;
    // Field size check
    static_assert(sizeof(::System::Data::Rule) == 0x4);
    // System.Data.AcceptRejectRule _acceptRejectRule
    // Size: 0x4
    // Offset: 0x40
    ::System::Data::AcceptRejectRule acceptRejectRule;
    // Field size check
    static_assert(sizeof(::System::Data::AcceptRejectRule) == 0x4);
    // Padding between fields: acceptRejectRule and: childKey
    char __padding2[0x4] = {};
    // private System.Data.DataKey _childKey
    // Size: 0x8
    // Offset: 0x48
    ::System::Data::DataKey childKey;
    // Field size check
    static_assert(sizeof(::System::Data::DataKey) == 0x8);
    // private System.Data.DataKey _parentKey
    // Size: 0x8
    // Offset: 0x50
    ::System::Data::DataKey parentKey;
    // Field size check
    static_assert(sizeof(::System::Data::DataKey) == 0x8);
    // System.String _constraintName
    // Size: 0x8
    // Offset: 0x58
    ::StringW constraintName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.String[] _parentColumnNames
    // Size: 0x8
    // Offset: 0x60
    ::ArrayW<::StringW> parentColumnNames;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // System.String[] _childColumnNames
    // Size: 0x8
    // Offset: 0x68
    ::ArrayW<::StringW> childColumnNames;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // System.String _parentTableName
    // Size: 0x8
    // Offset: 0x70
    ::StringW parentTableName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: System.Data.Rule _deleteRule
    [[deprecated("Use field access instead!")]] ::System::Data::Rule& dyn__deleteRule();
    // Get instance field reference: System.Data.Rule _updateRule
    [[deprecated("Use field access instead!")]] ::System::Data::Rule& dyn__updateRule();
    // Get instance field reference: System.Data.AcceptRejectRule _acceptRejectRule
    [[deprecated("Use field access instead!")]] ::System::Data::AcceptRejectRule& dyn__acceptRejectRule();
    // Get instance field reference: private System.Data.DataKey _childKey
    [[deprecated("Use field access instead!")]] ::System::Data::DataKey& dyn__childKey();
    // Get instance field reference: private System.Data.DataKey _parentKey
    [[deprecated("Use field access instead!")]] ::System::Data::DataKey& dyn__parentKey();
    // Get instance field reference: System.String _constraintName
    [[deprecated("Use field access instead!")]] ::StringW& dyn__constraintName();
    // Get instance field reference: System.String[] _parentColumnNames
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn__parentColumnNames();
    // Get instance field reference: System.String[] _childColumnNames
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn__childColumnNames();
    // Get instance field reference: System.String _parentTableName
    [[deprecated("Use field access instead!")]] ::StringW& dyn__parentTableName();
    // System.Data.DataKey get_ChildKey()
    // Offset: 0x12F6824
    ::System::Data::DataKey get_ChildKey();
    // public System.Data.DataColumn[] get_Columns()
    // Offset: 0x12F684C
    ::ArrayW<::System::Data::DataColumn*> get_Columns();
    // System.String[] get_ParentColumnNames()
    // Offset: 0x12F68A4
    ::ArrayW<::StringW> get_ParentColumnNames();
    // System.String[] get_ChildColumnNames()
    // Offset: 0x12F68B0
    ::ArrayW<::StringW> get_ChildColumnNames();
    // public System.Data.AcceptRejectRule get_AcceptRejectRule()
    // Offset: 0x12F835C
    ::System::Data::AcceptRejectRule get_AcceptRejectRule();
    // public System.Void set_AcceptRejectRule(System.Data.AcceptRejectRule value)
    // Offset: 0x12F8384
    void set_AcceptRejectRule(::System::Data::AcceptRejectRule value);
    // public System.Data.Rule get_DeleteRule()
    // Offset: 0x12F913C
    ::System::Data::Rule get_DeleteRule();
    // public System.Void set_DeleteRule(System.Data.Rule value)
    // Offset: 0x12F9164
    void set_DeleteRule(::System::Data::Rule value);
    // public System.Data.DataColumn[] get_RelatedColumns()
    // Offset: 0x12F92E0
    ::ArrayW<::System::Data::DataColumn*> get_RelatedColumns();
    // System.Data.DataColumn[] get_RelatedColumnsReference()
    // Offset: 0x12F8B40
    ::ArrayW<::System::Data::DataColumn*> get_RelatedColumnsReference();
    // System.Data.DataKey get_ParentKey()
    // Offset: 0x12F7D04
    ::System::Data::DataKey get_ParentKey();
    // public System.Data.DataTable get_RelatedTable()
    // Offset: 0x12F93DC
    ::System::Data::DataTable* get_RelatedTable();
    // public System.Data.Rule get_UpdateRule()
    // Offset: 0x12F9408
    ::System::Data::Rule get_UpdateRule();
    // public System.Void set_UpdateRule(System.Data.Rule value)
    // Offset: 0x12F9430
    void set_UpdateRule(::System::Data::Rule value);
    // public System.Void .ctor(System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns)
    // Offset: 0x12F6598
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ForeignKeyConstraint* New_ctor(::ArrayW<::System::Data::DataColumn*> parentColumns, ::ArrayW<::System::Data::DataColumn*> childColumns) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ForeignKeyConstraint*, creationType>(parentColumns, childColumns)));
    }
    // public System.Void .ctor(System.String constraintName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns)
    // Offset: 0x12F65E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ForeignKeyConstraint* New_ctor(::StringW constraintName, ::ArrayW<::System::Data::DataColumn*> parentColumns, ::ArrayW<::System::Data::DataColumn*> childColumns) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ForeignKeyConstraint*, creationType>(constraintName, parentColumns, childColumns)));
    }
    // public System.Void .ctor(System.String constraintName, System.String parentTableName, System.String[] parentColumnNames, System.String[] childColumnNames, System.Data.AcceptRejectRule acceptRejectRule, System.Data.Rule deleteRule, System.Data.Rule updateRule)
    // Offset: 0x12F67B4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ForeignKeyConstraint* New_ctor(::StringW constraintName, ::StringW parentTableName, ::ArrayW<::StringW> parentColumnNames, ::ArrayW<::StringW> childColumnNames, ::System::Data::AcceptRejectRule acceptRejectRule, ::System::Data::Rule deleteRule, ::System::Data::Rule updateRule) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ForeignKeyConstraint*, creationType>(constraintName, parentTableName, parentColumnNames, childColumnNames, acceptRejectRule, deleteRule, updateRule)));
    }
    // System.Boolean IsKeyNull(System.Object[] values)
    // Offset: 0x12F69E8
    bool IsKeyNull(::ArrayW<::Il2CppObject*> values);
    // System.Void CascadeCommit(System.Data.DataRow row)
    // Offset: 0x12F6E2C
    void CascadeCommit(::System::Data::DataRow* row);
    // System.Void CascadeDelete(System.Data.DataRow row)
    // Offset: 0x12F6FA8
    void CascadeDelete(::System::Data::DataRow* row);
    // System.Void CascadeRollback(System.Data.DataRow row)
    // Offset: 0x12F749C
    void CascadeRollback(::System::Data::DataRow* row);
    // System.Void CascadeUpdate(System.Data.DataRow row)
    // Offset: 0x12F76AC
    void CascadeUpdate(::System::Data::DataRow* row);
    // System.Void CheckCanClearParentTable(System.Data.DataTable table)
    // Offset: 0x12F7B6C
    void CheckCanClearParentTable(::System::Data::DataTable* table);
    // System.Void CheckCanRemoveParentRow(System.Data.DataRow row)
    // Offset: 0x12F7C50
    void CheckCanRemoveParentRow(::System::Data::DataRow* row);
    // System.Void CheckCascade(System.Data.DataRow row, System.Data.DataRowAction action)
    // Offset: 0x12F7D2C
    void CheckCascade(::System::Data::DataRow* row, ::System::Data::DataRowAction action);
    // private System.Void NonVirtualCheckState()
    // Offset: 0x12F80FC
    void NonVirtualCheckState();
    // System.Data.ForeignKeyConstraint Clone(System.Data.DataTable destination)
    // Offset: 0x12F8B68
    ::System::Data::ForeignKeyConstraint* Clone(::System::Data::DataTable* destination);
    // private System.Void Create(System.String relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns)
    // Offset: 0x12F6634
    void Create(::StringW relationName, ::ArrayW<::System::Data::DataColumn*> parentColumns, ::ArrayW<::System::Data::DataColumn*> childColumns);
    // System.Data.DataRelation FindParentRelation()
    // Offset: 0x12F930C
    ::System::Data::DataRelation* FindParentRelation();
    // public override System.Data.DataTable get_Table()
    // Offset: 0x12F6878
    // Implemented from: System.Data.Constraint
    // Base method: System.Data.DataTable Constraint::get_Table()
    ::System::Data::DataTable* get_Table();
    // override System.Void CheckCanAddToCollection(System.Data.ConstraintCollection constraints)
    // Offset: 0x12F68BC
    // Implemented from: System.Data.Constraint
    // Base method: System.Void Constraint::CheckCanAddToCollection(System.Data.ConstraintCollection constraints)
    void CheckCanAddToCollection(::System::Data::ConstraintCollection* constraints);
    // override System.Boolean CanBeRemovedFromCollection(System.Data.ConstraintCollection constraints, System.Boolean fThrowException)
    // Offset: 0x12F69E0
    // Implemented from: System.Data.Constraint
    // Base method: System.Boolean Constraint::CanBeRemovedFromCollection(System.Data.ConstraintCollection constraints, System.Boolean fThrowException)
    bool CanBeRemovedFromCollection(::System::Data::ConstraintCollection* constraints, bool fThrowException);
    // override System.Boolean IsConstraintViolated()
    // Offset: 0x12F6AB8
    // Implemented from: System.Data.Constraint
    // Base method: System.Boolean Constraint::IsConstraintViolated()
    bool IsConstraintViolated();
    // override System.Boolean CanEnableConstraint()
    // Offset: 0x12F6CBC
    // Implemented from: System.Data.Constraint
    // Base method: System.Boolean Constraint::CanEnableConstraint()
    bool CanEnableConstraint();
    // override System.Void CheckConstraint(System.Data.DataRow childRow, System.Data.DataRowAction action)
    // Offset: 0x12F7E14
    // Implemented from: System.Data.Constraint
    // Base method: System.Void Constraint::CheckConstraint(System.Data.DataRow childRow, System.Data.DataRowAction action)
    void CheckConstraint(::System::Data::DataRow* childRow, ::System::Data::DataRowAction action);
    // override System.Void CheckState()
    // Offset: 0x12F8358
    // Implemented from: System.Data.Constraint
    // Base method: System.Void Constraint::CheckState()
    void CheckState();
    // override System.Boolean ContainsColumn(System.Data.DataColumn column)
    // Offset: 0x12F8404
    // Implemented from: System.Data.Constraint
    // Base method: System.Boolean Constraint::ContainsColumn(System.Data.DataColumn column)
    bool ContainsColumn(::System::Data::DataColumn* column);
    // override System.Data.Constraint Clone(System.Data.DataSet destination)
    // Offset: 0x12F8450
    // Implemented from: System.Data.Constraint
    // Base method: System.Data.Constraint Constraint::Clone(System.Data.DataSet destination)
    ::System::Data::Constraint* Clone(::System::Data::DataSet* destination);
    // override System.Data.Constraint Clone(System.Data.DataSet destination, System.Boolean ignorNSforTableLookup)
    // Offset: 0x12F8460
    // Implemented from: System.Data.Constraint
    // Base method: System.Data.Constraint Constraint::Clone(System.Data.DataSet destination, System.Boolean ignorNSforTableLookup)
    ::System::Data::Constraint* Clone(::System::Data::DataSet* destination, bool ignorNSforTableLookup);
    // public override System.Boolean Equals(System.Object key)
    // Offset: 0x12F91E4
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object key)
    bool Equals(::Il2CppObject* key);
    // public override System.Int32 GetHashCode()
    // Offset: 0x12F92D8
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
  }; // System.Data.ForeignKeyConstraint
  #pragma pack(pop)
  static check_size<sizeof(ForeignKeyConstraint), 112 + sizeof(::StringW)> __System_Data_ForeignKeyConstraintSizeCheck;
  static_assert(sizeof(ForeignKeyConstraint) == 0x78);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::get_ChildKey
// Il2CppName: get_ChildKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataKey (System::Data::ForeignKeyConstraint::*)()>(&System::Data::ForeignKeyConstraint::get_ChildKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "get_ChildKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::get_Columns
// Il2CppName: get_Columns
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Data::DataColumn*> (System::Data::ForeignKeyConstraint::*)()>(&System::Data::ForeignKeyConstraint::get_Columns)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "get_Columns", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::get_ParentColumnNames
// Il2CppName: get_ParentColumnNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (System::Data::ForeignKeyConstraint::*)()>(&System::Data::ForeignKeyConstraint::get_ParentColumnNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "get_ParentColumnNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::get_ChildColumnNames
// Il2CppName: get_ChildColumnNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (System::Data::ForeignKeyConstraint::*)()>(&System::Data::ForeignKeyConstraint::get_ChildColumnNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "get_ChildColumnNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::get_AcceptRejectRule
// Il2CppName: get_AcceptRejectRule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::AcceptRejectRule (System::Data::ForeignKeyConstraint::*)()>(&System::Data::ForeignKeyConstraint::get_AcceptRejectRule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "get_AcceptRejectRule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::set_AcceptRejectRule
// Il2CppName: set_AcceptRejectRule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::ForeignKeyConstraint::*)(::System::Data::AcceptRejectRule)>(&System::Data::ForeignKeyConstraint::set_AcceptRejectRule)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Data", "AcceptRejectRule")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "set_AcceptRejectRule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::get_DeleteRule
// Il2CppName: get_DeleteRule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::Rule (System::Data::ForeignKeyConstraint::*)()>(&System::Data::ForeignKeyConstraint::get_DeleteRule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "get_DeleteRule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::set_DeleteRule
// Il2CppName: set_DeleteRule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::ForeignKeyConstraint::*)(::System::Data::Rule)>(&System::Data::ForeignKeyConstraint::set_DeleteRule)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Data", "Rule")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "set_DeleteRule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::get_RelatedColumns
// Il2CppName: get_RelatedColumns
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Data::DataColumn*> (System::Data::ForeignKeyConstraint::*)()>(&System::Data::ForeignKeyConstraint::get_RelatedColumns)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "get_RelatedColumns", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::get_RelatedColumnsReference
// Il2CppName: get_RelatedColumnsReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Data::DataColumn*> (System::Data::ForeignKeyConstraint::*)()>(&System::Data::ForeignKeyConstraint::get_RelatedColumnsReference)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "get_RelatedColumnsReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::get_ParentKey
// Il2CppName: get_ParentKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataKey (System::Data::ForeignKeyConstraint::*)()>(&System::Data::ForeignKeyConstraint::get_ParentKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "get_ParentKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::get_RelatedTable
// Il2CppName: get_RelatedTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataTable* (System::Data::ForeignKeyConstraint::*)()>(&System::Data::ForeignKeyConstraint::get_RelatedTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "get_RelatedTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::get_UpdateRule
// Il2CppName: get_UpdateRule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::Rule (System::Data::ForeignKeyConstraint::*)()>(&System::Data::ForeignKeyConstraint::get_UpdateRule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "get_UpdateRule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::set_UpdateRule
// Il2CppName: set_UpdateRule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::ForeignKeyConstraint::*)(::System::Data::Rule)>(&System::Data::ForeignKeyConstraint::set_UpdateRule)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Data", "Rule")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "set_UpdateRule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::IsKeyNull
// Il2CppName: IsKeyNull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::ForeignKeyConstraint::*)(::ArrayW<::Il2CppObject*>)>(&System::Data::ForeignKeyConstraint::IsKeyNull)> {
  static const MethodInfo* get() {
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "IsKeyNull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{values});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::CascadeCommit
// Il2CppName: CascadeCommit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::ForeignKeyConstraint::*)(::System::Data::DataRow*)>(&System::Data::ForeignKeyConstraint::CascadeCommit)> {
  static const MethodInfo* get() {
    static auto* row = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "CascadeCommit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{row});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::CascadeDelete
// Il2CppName: CascadeDelete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::ForeignKeyConstraint::*)(::System::Data::DataRow*)>(&System::Data::ForeignKeyConstraint::CascadeDelete)> {
  static const MethodInfo* get() {
    static auto* row = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "CascadeDelete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{row});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::CascadeRollback
// Il2CppName: CascadeRollback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::ForeignKeyConstraint::*)(::System::Data::DataRow*)>(&System::Data::ForeignKeyConstraint::CascadeRollback)> {
  static const MethodInfo* get() {
    static auto* row = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "CascadeRollback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{row});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::CascadeUpdate
// Il2CppName: CascadeUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::ForeignKeyConstraint::*)(::System::Data::DataRow*)>(&System::Data::ForeignKeyConstraint::CascadeUpdate)> {
  static const MethodInfo* get() {
    static auto* row = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "CascadeUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{row});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::CheckCanClearParentTable
// Il2CppName: CheckCanClearParentTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::ForeignKeyConstraint::*)(::System::Data::DataTable*)>(&System::Data::ForeignKeyConstraint::CheckCanClearParentTable)> {
  static const MethodInfo* get() {
    static auto* table = &::il2cpp_utils::GetClassFromName("System.Data", "DataTable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "CheckCanClearParentTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{table});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::CheckCanRemoveParentRow
// Il2CppName: CheckCanRemoveParentRow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::ForeignKeyConstraint::*)(::System::Data::DataRow*)>(&System::Data::ForeignKeyConstraint::CheckCanRemoveParentRow)> {
  static const MethodInfo* get() {
    static auto* row = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "CheckCanRemoveParentRow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{row});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::CheckCascade
// Il2CppName: CheckCascade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::ForeignKeyConstraint::*)(::System::Data::DataRow*, ::System::Data::DataRowAction)>(&System::Data::ForeignKeyConstraint::CheckCascade)> {
  static const MethodInfo* get() {
    static auto* row = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    static auto* action = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "CheckCascade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{row, action});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::NonVirtualCheckState
// Il2CppName: NonVirtualCheckState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::ForeignKeyConstraint::*)()>(&System::Data::ForeignKeyConstraint::NonVirtualCheckState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "NonVirtualCheckState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::ForeignKeyConstraint* (System::Data::ForeignKeyConstraint::*)(::System::Data::DataTable*)>(&System::Data::ForeignKeyConstraint::Clone)> {
  static const MethodInfo* get() {
    static auto* destination = &::il2cpp_utils::GetClassFromName("System.Data", "DataTable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destination});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::ForeignKeyConstraint::*)(::StringW, ::ArrayW<::System::Data::DataColumn*>, ::ArrayW<::System::Data::DataColumn*>)>(&System::Data::ForeignKeyConstraint::Create)> {
  static const MethodInfo* get() {
    static auto* relationName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* parentColumns = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Data", "DataColumn"), 1)->byval_arg;
    static auto* childColumns = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Data", "DataColumn"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{relationName, parentColumns, childColumns});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::FindParentRelation
// Il2CppName: FindParentRelation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataRelation* (System::Data::ForeignKeyConstraint::*)()>(&System::Data::ForeignKeyConstraint::FindParentRelation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "FindParentRelation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::get_Table
// Il2CppName: get_Table
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataTable* (System::Data::ForeignKeyConstraint::*)()>(&System::Data::ForeignKeyConstraint::get_Table)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "get_Table", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::CheckCanAddToCollection
// Il2CppName: CheckCanAddToCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::ForeignKeyConstraint::*)(::System::Data::ConstraintCollection*)>(&System::Data::ForeignKeyConstraint::CheckCanAddToCollection)> {
  static const MethodInfo* get() {
    static auto* constraints = &::il2cpp_utils::GetClassFromName("System.Data", "ConstraintCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "CheckCanAddToCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{constraints});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::CanBeRemovedFromCollection
// Il2CppName: CanBeRemovedFromCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::ForeignKeyConstraint::*)(::System::Data::ConstraintCollection*, bool)>(&System::Data::ForeignKeyConstraint::CanBeRemovedFromCollection)> {
  static const MethodInfo* get() {
    static auto* constraints = &::il2cpp_utils::GetClassFromName("System.Data", "ConstraintCollection")->byval_arg;
    static auto* fThrowException = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "CanBeRemovedFromCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{constraints, fThrowException});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::IsConstraintViolated
// Il2CppName: IsConstraintViolated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::ForeignKeyConstraint::*)()>(&System::Data::ForeignKeyConstraint::IsConstraintViolated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "IsConstraintViolated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::CanEnableConstraint
// Il2CppName: CanEnableConstraint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::ForeignKeyConstraint::*)()>(&System::Data::ForeignKeyConstraint::CanEnableConstraint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "CanEnableConstraint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::CheckConstraint
// Il2CppName: CheckConstraint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::ForeignKeyConstraint::*)(::System::Data::DataRow*, ::System::Data::DataRowAction)>(&System::Data::ForeignKeyConstraint::CheckConstraint)> {
  static const MethodInfo* get() {
    static auto* childRow = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    static auto* action = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "CheckConstraint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{childRow, action});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::CheckState
// Il2CppName: CheckState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::ForeignKeyConstraint::*)()>(&System::Data::ForeignKeyConstraint::CheckState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "CheckState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::ContainsColumn
// Il2CppName: ContainsColumn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::ForeignKeyConstraint::*)(::System::Data::DataColumn*)>(&System::Data::ForeignKeyConstraint::ContainsColumn)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "ContainsColumn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::Constraint* (System::Data::ForeignKeyConstraint::*)(::System::Data::DataSet*)>(&System::Data::ForeignKeyConstraint::Clone)> {
  static const MethodInfo* get() {
    static auto* destination = &::il2cpp_utils::GetClassFromName("System.Data", "DataSet")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destination});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::Constraint* (System::Data::ForeignKeyConstraint::*)(::System::Data::DataSet*, bool)>(&System::Data::ForeignKeyConstraint::Clone)> {
  static const MethodInfo* get() {
    static auto* destination = &::il2cpp_utils::GetClassFromName("System.Data", "DataSet")->byval_arg;
    static auto* ignorNSforTableLookup = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destination, ignorNSforTableLookup});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::ForeignKeyConstraint::*)(::Il2CppObject*)>(&System::Data::ForeignKeyConstraint::Equals)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: System::Data::ForeignKeyConstraint::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::ForeignKeyConstraint::*)()>(&System::Data::ForeignKeyConstraint::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::ForeignKeyConstraint*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
