// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Data
namespace System::Data {
  // Forward declaring type: DataTable
  class DataTable;
}
// Completed forward declares
// Type namespace: System.Data
namespace System::Data {
  // Forward declaring type: MergeFailedEventArgs
  class MergeFailedEventArgs;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::MergeFailedEventArgs);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::MergeFailedEventArgs*, "System.Data", "MergeFailedEventArgs");
// Type namespace: System.Data
namespace System::Data {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.MergeFailedEventArgs
  // [TokenAttribute] Offset: FFFFFFFF
  class MergeFailedEventArgs : public ::System::EventArgs {
    public:
    public:
    // private readonly System.Data.DataTable <Table>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::System::Data::DataTable* Table;
    // Field size check
    static_assert(sizeof(::System::Data::DataTable*) == 0x8);
    // private readonly System.String <Conflict>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::StringW Conflict;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: private readonly System.Data.DataTable <Table>k__BackingField
    [[deprecated]] ::System::Data::DataTable*& dyn_$Table$k__BackingField();
    // Get instance field reference: private readonly System.String <Conflict>k__BackingField
    [[deprecated]] ::StringW& dyn_$Conflict$k__BackingField();
    // public System.String get_Conflict()
    // Offset: 0x13B7AB8
    ::StringW get_Conflict();
    // public System.Void .ctor(System.Data.DataTable table, System.String conflict)
    // Offset: 0x13B7A3C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MergeFailedEventArgs* New_ctor(::System::Data::DataTable* table, ::StringW conflict) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MergeFailedEventArgs::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MergeFailedEventArgs*, creationType>(table, conflict)));
    }
  }; // System.Data.MergeFailedEventArgs
  #pragma pack(pop)
  static check_size<sizeof(MergeFailedEventArgs), 24 + sizeof(::StringW)> __System_Data_MergeFailedEventArgsSizeCheck;
  static_assert(sizeof(MergeFailedEventArgs) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::MergeFailedEventArgs::get_Conflict
// Il2CppName: get_Conflict
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::MergeFailedEventArgs::*)()>(&System::Data::MergeFailedEventArgs::get_Conflict)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::MergeFailedEventArgs*), "get_Conflict", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::MergeFailedEventArgs::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
