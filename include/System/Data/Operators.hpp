// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: System.Data
namespace System::Data {
  // Forward declaring type: Operators
  class Operators;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::Operators);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::Operators*, "System.Data", "Operators");
// Type namespace: System.Data
namespace System::Data {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.Operators
  // [TokenAttribute] Offset: FFFFFFFF
  class Operators : public ::Il2CppObject {
    public:
    // Get static field: static private readonly System.Int32[] s_priority
    static ::ArrayW<int> _get_s_priority();
    // Set static field: static private readonly System.Int32[] s_priority
    static void _set_s_priority(::ArrayW<int> value);
    // Get static field: static private readonly System.String[] s_looks
    static ::ArrayW<::StringW> _get_s_looks();
    // Set static field: static private readonly System.String[] s_looks
    static void _set_s_looks(::ArrayW<::StringW> value);
    // static private System.Void .cctor()
    // Offset: 0x13C14D8
    static void _cctor();
    // static System.Boolean IsArithmetical(System.Int32 op)
    // Offset: 0x13C12B8
    static bool IsArithmetical(int op);
    // static System.Boolean IsLogical(System.Int32 op)
    // Offset: 0x13C12E4
    static bool IsLogical(int op);
    // static System.Boolean IsRelational(System.Int32 op)
    // Offset: 0x13C1324
    static bool IsRelational(int op);
    // static System.Int32 Priority(System.Int32 op)
    // Offset: 0x13C1334
    static int Priority(int op);
    // static System.String ToString(System.Int32 op)
    // Offset: 0x13C13FC
    static ::StringW ToString(int op);
  }; // System.Data.Operators
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::Operators::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Data::Operators::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::Operators*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::Operators::IsArithmetical
// Il2CppName: IsArithmetical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int)>(&System::Data::Operators::IsArithmetical)> {
  static const MethodInfo* get() {
    static auto* op = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Operators*), "IsArithmetical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{op});
  }
};
// Writing MetadataGetter for method: System::Data::Operators::IsLogical
// Il2CppName: IsLogical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int)>(&System::Data::Operators::IsLogical)> {
  static const MethodInfo* get() {
    static auto* op = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Operators*), "IsLogical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{op});
  }
};
// Writing MetadataGetter for method: System::Data::Operators::IsRelational
// Il2CppName: IsRelational
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int)>(&System::Data::Operators::IsRelational)> {
  static const MethodInfo* get() {
    static auto* op = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Operators*), "IsRelational", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{op});
  }
};
// Writing MetadataGetter for method: System::Data::Operators::Priority
// Il2CppName: Priority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&System::Data::Operators::Priority)> {
  static const MethodInfo* get() {
    static auto* op = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Operators*), "Priority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{op});
  }
};
// Writing MetadataGetter for method: System::Data::Operators::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int)>(&System::Data::Operators::ToString)> {
  static const MethodInfo* get() {
    static auto* op = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Operators*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{op});
  }
};
