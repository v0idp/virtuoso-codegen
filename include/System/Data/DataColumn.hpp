// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ComponentModel.MarshalByValueComponent
#include "System/ComponentModel/MarshalByValueComponent.hpp"
// Including type: System.Data.Common.StorageType
#include "System/Data/Common/StorageType.hpp"
// Including type: System.Data.DataSetDateTime
#include "System/Data/DataSetDateTime.hpp"
// Including type: System.Data.MappingType
#include "System/Data/MappingType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: IFormatProvider
  class IFormatProvider;
}
// Forward declaring namespace: System::Data
namespace System::Data {
  // Forward declaring type: DataExpression
  class DataExpression;
  // Forward declaring type: Index
  class Index;
  // Forward declaring type: DataTable
  class DataTable;
  // Forward declaring type: PropertyCollection
  class PropertyCollection;
  // Forward declaring type: AutoIncrementValue
  class AutoIncrementValue;
  // Forward declaring type: SimpleType
  class SimpleType;
  // Forward declaring type: DataRow
  class DataRow;
  // Forward declaring type: DataRowVersion
  struct DataRowVersion;
  // Forward declaring type: DataRowAction
  struct DataRowAction;
  // Forward declaring type: AggregateType
  struct AggregateType;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System::Data::Common
namespace System::Data::Common {
  // Forward declaring type: DataStorage
  class DataStorage;
}
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: PropertyChangedEventHandler
  class PropertyChangedEventHandler;
  // Forward declaring type: PropertyChangedEventArgs
  class PropertyChangedEventArgs;
}
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: CultureInfo
  class CultureInfo;
}
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlReader
  class XmlReader;
  // Forward declaring type: XmlWriter
  class XmlWriter;
}
// Forward declaring namespace: System::Xml::Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlRootAttribute
  class XmlRootAttribute;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: BitArray
  class BitArray;
}
// Completed forward declares
// Type namespace: System.Data
namespace System::Data {
  // Forward declaring type: DataColumn
  class DataColumn;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::DataColumn);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::DataColumn*, "System.Data", "DataColumn");
// Type namespace: System.Data
namespace System::Data {
  // Size: 0xF0
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.DataColumn
  // [TokenAttribute] Offset: FFFFFFFF
  // [DesignTimeVisibleAttribute] Offset: 6B9E78
  // [ToolboxItemAttribute] Offset: 6B9E78
  // [DefaultMemberAttribute] Offset: 6B9E78
  // [DefaultPropertyAttribute] Offset: 6B9E78
  class DataColumn : public ::System::ComponentModel::MarshalByValueComponent {
    public:
    public:
    // private System.Boolean _allowNull
    // Size: 0x1
    // Offset: 0x20
    bool allowNull;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: allowNull and: caption
    char __padding0[0x7] = {};
    // private System.String _caption
    // Size: 0x8
    // Offset: 0x28
    ::StringW caption;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String _columnName
    // Size: 0x8
    // Offset: 0x30
    ::StringW columnName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Type _dataType
    // Size: 0x8
    // Offset: 0x38
    ::System::Type* dataType;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    // private System.Data.Common.StorageType _storageType
    // Size: 0x4
    // Offset: 0x40
    ::System::Data::Common::StorageType storageType;
    // Field size check
    static_assert(sizeof(::System::Data::Common::StorageType) == 0x4);
    // Padding between fields: storageType and: defaultValue
    char __padding4[0x4] = {};
    // System.Object _defaultValue
    // Size: 0x8
    // Offset: 0x48
    ::Il2CppObject* defaultValue;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.Data.DataSetDateTime _dateTimeMode
    // Size: 0x4
    // Offset: 0x50
    ::System::Data::DataSetDateTime dateTimeMode;
    // Field size check
    static_assert(sizeof(::System::Data::DataSetDateTime) == 0x4);
    // Padding between fields: dateTimeMode and: expression
    char __padding6[0x4] = {};
    // private System.Data.DataExpression _expression
    // Size: 0x8
    // Offset: 0x58
    ::System::Data::DataExpression* expression;
    // Field size check
    static_assert(sizeof(::System::Data::DataExpression*) == 0x8);
    // private System.Int32 _maxLength
    // Size: 0x4
    // Offset: 0x60
    int maxLength;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 _ordinal
    // Size: 0x4
    // Offset: 0x64
    int ordinal;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean _readOnly
    // Size: 0x1
    // Offset: 0x68
    bool readOnly;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: readOnly and: sortIndex
    char __padding10[0x7] = {};
    // System.Data.Index _sortIndex
    // Size: 0x8
    // Offset: 0x70
    ::System::Data::Index* sortIndex;
    // Field size check
    static_assert(sizeof(::System::Data::Index*) == 0x8);
    // System.Data.DataTable _table
    // Size: 0x8
    // Offset: 0x78
    ::System::Data::DataTable* table;
    // Field size check
    static_assert(sizeof(::System::Data::DataTable*) == 0x8);
    // private System.Boolean _unique
    // Size: 0x1
    // Offset: 0x80
    bool unique;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: unique and: columnMapping
    char __padding13[0x3] = {};
    // System.Data.MappingType _columnMapping
    // Size: 0x4
    // Offset: 0x84
    ::System::Data::MappingType columnMapping;
    // Field size check
    static_assert(sizeof(::System::Data::MappingType) == 0x4);
    // System.Int32 _hashCode
    // Size: 0x4
    // Offset: 0x88
    int hashCode;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 _errors
    // Size: 0x4
    // Offset: 0x8C
    int errors;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean _isSqlType
    // Size: 0x1
    // Offset: 0x90
    bool isSqlType;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _implementsINullable
    // Size: 0x1
    // Offset: 0x91
    bool implementsINullable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _implementsIChangeTracking
    // Size: 0x1
    // Offset: 0x92
    bool implementsIChangeTracking;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _implementsIRevertibleChangeTracking
    // Size: 0x1
    // Offset: 0x93
    bool implementsIRevertibleChangeTracking;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _implementsIXMLSerializable
    // Size: 0x1
    // Offset: 0x94
    bool implementsIXMLSerializable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _defaultValueIsNull
    // Size: 0x1
    // Offset: 0x95
    bool defaultValueIsNull;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: defaultValueIsNull and: dependentColumns
    char __padding22[0x2] = {};
    // System.Collections.Generic.List`1<System.Data.DataColumn> _dependentColumns
    // Size: 0x8
    // Offset: 0x98
    ::System::Collections::Generic::List_1<::System::Data::DataColumn*>* dependentColumns;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::System::Data::DataColumn*>*) == 0x8);
    // System.Data.PropertyCollection _extendedProperties
    // Size: 0x8
    // Offset: 0xA0
    ::System::Data::PropertyCollection* extendedProperties;
    // Field size check
    static_assert(sizeof(::System::Data::PropertyCollection*) == 0x8);
    // private System.Data.Common.DataStorage _storage
    // Size: 0x8
    // Offset: 0xA8
    ::System::Data::Common::DataStorage* storage;
    // Field size check
    static_assert(sizeof(::System::Data::Common::DataStorage*) == 0x8);
    // private System.Data.AutoIncrementValue _autoInc
    // Size: 0x8
    // Offset: 0xB0
    ::System::Data::AutoIncrementValue* autoInc;
    // Field size check
    static_assert(sizeof(::System::Data::AutoIncrementValue*) == 0x8);
    // System.String _columnUri
    // Size: 0x8
    // Offset: 0xB8
    ::StringW columnUri;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String _columnPrefix
    // Size: 0x8
    // Offset: 0xC0
    ::StringW columnPrefix;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.String _encodedColumnName
    // Size: 0x8
    // Offset: 0xC8
    ::StringW encodedColumnName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.Data.SimpleType _simpleType
    // Size: 0x8
    // Offset: 0xD0
    ::System::Data::SimpleType* simpleType;
    // Field size check
    static_assert(sizeof(::System::Data::SimpleType*) == 0x8);
    // private readonly System.Int32 _objectID
    // Size: 0x4
    // Offset: 0xD8
    int objectID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: objectID and: XmlDataType
    char __padding31[0x4] = {};
    // private System.String <XmlDataType>k__BackingField
    // Size: 0x8
    // Offset: 0xE0
    ::StringW XmlDataType;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.ComponentModel.PropertyChangedEventHandler PropertyChanging
    // Size: 0x8
    // Offset: 0xE8
    ::System::ComponentModel::PropertyChangedEventHandler* PropertyChanging;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::PropertyChangedEventHandler*) == 0x8);
    public:
    // Get static field: static private System.Int32 s_objectTypeCount
    static int _get_s_objectTypeCount();
    // Set static field: static private System.Int32 s_objectTypeCount
    static void _set_s_objectTypeCount(int value);
    // Get instance field reference: private System.Boolean _allowNull
    [[deprecated("Use field access instead!")]] bool& dyn__allowNull();
    // Get instance field reference: private System.String _caption
    [[deprecated("Use field access instead!")]] ::StringW& dyn__caption();
    // Get instance field reference: private System.String _columnName
    [[deprecated("Use field access instead!")]] ::StringW& dyn__columnName();
    // Get instance field reference: private System.Type _dataType
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn__dataType();
    // Get instance field reference: private System.Data.Common.StorageType _storageType
    [[deprecated("Use field access instead!")]] ::System::Data::Common::StorageType& dyn__storageType();
    // Get instance field reference: System.Object _defaultValue
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn__defaultValue();
    // Get instance field reference: private System.Data.DataSetDateTime _dateTimeMode
    [[deprecated("Use field access instead!")]] ::System::Data::DataSetDateTime& dyn__dateTimeMode();
    // Get instance field reference: private System.Data.DataExpression _expression
    [[deprecated("Use field access instead!")]] ::System::Data::DataExpression*& dyn__expression();
    // Get instance field reference: private System.Int32 _maxLength
    [[deprecated("Use field access instead!")]] int& dyn__maxLength();
    // Get instance field reference: private System.Int32 _ordinal
    [[deprecated("Use field access instead!")]] int& dyn__ordinal();
    // Get instance field reference: private System.Boolean _readOnly
    [[deprecated("Use field access instead!")]] bool& dyn__readOnly();
    // Get instance field reference: System.Data.Index _sortIndex
    [[deprecated("Use field access instead!")]] ::System::Data::Index*& dyn__sortIndex();
    // Get instance field reference: System.Data.DataTable _table
    [[deprecated("Use field access instead!")]] ::System::Data::DataTable*& dyn__table();
    // Get instance field reference: private System.Boolean _unique
    [[deprecated("Use field access instead!")]] bool& dyn__unique();
    // Get instance field reference: System.Data.MappingType _columnMapping
    [[deprecated("Use field access instead!")]] ::System::Data::MappingType& dyn__columnMapping();
    // Get instance field reference: System.Int32 _hashCode
    [[deprecated("Use field access instead!")]] int& dyn__hashCode();
    // Get instance field reference: System.Int32 _errors
    [[deprecated("Use field access instead!")]] int& dyn__errors();
    // Get instance field reference: private System.Boolean _isSqlType
    [[deprecated("Use field access instead!")]] bool& dyn__isSqlType();
    // Get instance field reference: private System.Boolean _implementsINullable
    [[deprecated("Use field access instead!")]] bool& dyn__implementsINullable();
    // Get instance field reference: private System.Boolean _implementsIChangeTracking
    [[deprecated("Use field access instead!")]] bool& dyn__implementsIChangeTracking();
    // Get instance field reference: private System.Boolean _implementsIRevertibleChangeTracking
    [[deprecated("Use field access instead!")]] bool& dyn__implementsIRevertibleChangeTracking();
    // Get instance field reference: private System.Boolean _implementsIXMLSerializable
    [[deprecated("Use field access instead!")]] bool& dyn__implementsIXMLSerializable();
    // Get instance field reference: private System.Boolean _defaultValueIsNull
    [[deprecated("Use field access instead!")]] bool& dyn__defaultValueIsNull();
    // Get instance field reference: System.Collections.Generic.List`1<System.Data.DataColumn> _dependentColumns
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Data::DataColumn*>*& dyn__dependentColumns();
    // Get instance field reference: System.Data.PropertyCollection _extendedProperties
    [[deprecated("Use field access instead!")]] ::System::Data::PropertyCollection*& dyn__extendedProperties();
    // Get instance field reference: private System.Data.Common.DataStorage _storage
    [[deprecated("Use field access instead!")]] ::System::Data::Common::DataStorage*& dyn__storage();
    // Get instance field reference: private System.Data.AutoIncrementValue _autoInc
    [[deprecated("Use field access instead!")]] ::System::Data::AutoIncrementValue*& dyn__autoInc();
    // Get instance field reference: System.String _columnUri
    [[deprecated("Use field access instead!")]] ::StringW& dyn__columnUri();
    // Get instance field reference: private System.String _columnPrefix
    [[deprecated("Use field access instead!")]] ::StringW& dyn__columnPrefix();
    // Get instance field reference: System.String _encodedColumnName
    [[deprecated("Use field access instead!")]] ::StringW& dyn__encodedColumnName();
    // Get instance field reference: System.Data.SimpleType _simpleType
    [[deprecated("Use field access instead!")]] ::System::Data::SimpleType*& dyn__simpleType();
    // Get instance field reference: private readonly System.Int32 _objectID
    [[deprecated("Use field access instead!")]] int& dyn__objectID();
    // Get instance field reference: private System.String <XmlDataType>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$XmlDataType$k__BackingField();
    // Get instance field reference: private System.ComponentModel.PropertyChangedEventHandler PropertyChanging
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& dyn_PropertyChanging();
    // public System.Boolean get_AllowDBNull()
    // Offset: 0x14B6070
    bool get_AllowDBNull();
    // public System.Void set_AllowDBNull(System.Boolean value)
    // Offset: 0x14B6078
    void set_AllowDBNull(bool value);
    // public System.Boolean get_AutoIncrement()
    // Offset: 0x14B662C
    bool get_AutoIncrement();
    // public System.Void set_AutoIncrement(System.Boolean value)
    // Offset: 0x14B664C
    void set_AutoIncrement(bool value);
    // System.Object get_AutoIncrementCurrent()
    // Offset: 0x14B7508
    ::Il2CppObject* get_AutoIncrementCurrent();
    // System.Void set_AutoIncrementCurrent(System.Object value)
    // Offset: 0x14B759C
    void set_AutoIncrementCurrent(::Il2CppObject* value);
    // System.Data.AutoIncrementValue get_AutoInc()
    // Offset: 0x14B7400
    ::System::Data::AutoIncrementValue* get_AutoInc();
    // public System.Int64 get_AutoIncrementSeed()
    // Offset: 0x14B7584
    int64_t get_AutoIncrementSeed();
    // public System.Void set_AutoIncrementSeed(System.Int64 value)
    // Offset: 0x14B7720
    void set_AutoIncrementSeed(int64_t value);
    // public System.Int64 get_AutoIncrementStep()
    // Offset: 0x14B781C
    int64_t get_AutoIncrementStep();
    // public System.Void set_AutoIncrementStep(System.Int64 value)
    // Offset: 0x14B7838
    void set_AutoIncrementStep(int64_t value);
    // public System.String get_Caption()
    // Offset: 0x14B793C
    ::StringW get_Caption();
    // public System.Void set_Caption(System.String value)
    // Offset: 0x14B7954
    void set_Caption(::StringW value);
    // public System.String get_ColumnName()
    // Offset: 0x14B7A5C
    ::StringW get_ColumnName();
    // public System.Void set_ColumnName(System.String value)
    // Offset: 0x14B7A64
    void set_ColumnName(::StringW value);
    // System.String get_EncodedColumnName()
    // Offset: 0x14B7E40
    ::StringW get_EncodedColumnName();
    // System.IFormatProvider get_FormatProvider()
    // Offset: 0x14B76A8
    ::System::IFormatProvider* get_FormatProvider();
    // System.Globalization.CultureInfo get_Locale()
    // Offset: 0x14B79E4
    ::System::Globalization::CultureInfo* get_Locale();
    // System.Int32 get_ObjectID()
    // Offset: 0x14B7EB8
    int get_ObjectID();
    // public System.String get_Prefix()
    // Offset: 0x14B7EC0
    ::StringW get_Prefix();
    // public System.Void set_Prefix(System.String value)
    // Offset: 0x14B7EC8
    void set_Prefix(::StringW value);
    // System.Boolean get_Computed()
    // Offset: 0x14A2468
    bool get_Computed();
    // System.Data.DataExpression get_DataExpression()
    // Offset: 0x14B8180
    ::System::Data::DataExpression* get_DataExpression();
    // public System.Type get_DataType()
    // Offset: 0x14B8188
    ::System::Type* get_DataType();
    // public System.Void set_DataType(System.Type value)
    // Offset: 0x14B6B50
    void set_DataType(::System::Type* value);
    // public System.Data.DataSetDateTime get_DateTimeMode()
    // Offset: 0x14B873C
    ::System::Data::DataSetDateTime get_DateTimeMode();
    // public System.Void set_DateTimeMode(System.Data.DataSetDateTime value)
    // Offset: 0x14B8744
    void set_DateTimeMode(::System::Data::DataSetDateTime value);
    // public System.Object get_DefaultValue()
    // Offset: 0x14B82D0
    ::Il2CppObject* get_DefaultValue();
    // public System.Void set_DefaultValue(System.Object value)
    // Offset: 0x14B8408
    void set_DefaultValue(::Il2CppObject* value);
    // System.Boolean get_DefaultValueIsNull()
    // Offset: 0x14B8888
    bool get_DefaultValueIsNull();
    // public System.String get_Expression()
    // Offset: 0x14B8890
    ::StringW get_Expression();
    // public System.Void set_Expression(System.String value)
    // Offset: 0x14B585C
    void set_Expression(::StringW value);
    // public System.Data.PropertyCollection get_ExtendedProperties()
    // Offset: 0x14B8B84
    ::System::Data::PropertyCollection* get_ExtendedProperties();
    // System.Boolean get_HasData()
    // Offset: 0x14B6B40
    bool get_HasData();
    // System.Boolean get_ImplementsINullable()
    // Offset: 0x14B8BEC
    bool get_ImplementsINullable();
    // System.Boolean get_ImplementsIChangeTracking()
    // Offset: 0x14B8BF4
    bool get_ImplementsIChangeTracking();
    // System.Boolean get_ImplementsIRevertibleChangeTracking()
    // Offset: 0x14B8BFC
    bool get_ImplementsIRevertibleChangeTracking();
    // System.Boolean get_IsValueType()
    // Offset: 0x14B8C04
    bool get_IsValueType();
    // System.Boolean get_IsSqlType()
    // Offset: 0x14B8C20
    bool get_IsSqlType();
    // public System.Int32 get_MaxLength()
    // Offset: 0x14B8CB8
    int get_MaxLength();
    // public System.Void set_MaxLength(System.Int32 value)
    // Offset: 0x14B8CC0
    void set_MaxLength(int value);
    // public System.String get_Namespace()
    // Offset: 0x14B937C
    ::StringW get_Namespace();
    // public System.Void set_Namespace(System.String value)
    // Offset: 0x14B93F8
    void set_Namespace(::StringW value);
    // public System.Int32 get_Ordinal()
    // Offset: 0x14B9538
    int get_Ordinal();
    // public System.Boolean get_ReadOnly()
    // Offset: 0x14B9678
    bool get_ReadOnly();
    // public System.Void set_ReadOnly(System.Boolean value)
    // Offset: 0x14B88F0
    void set_ReadOnly(bool value);
    // private System.Data.Index get_SortIndex()
    // Offset: 0x14B9680
    ::System::Data::Index* get_SortIndex();
    // public System.Data.DataTable get_Table()
    // Offset: 0x14B9750
    ::System::Data::DataTable* get_Table();
    // System.Object get_Item(System.Int32 record)
    // Offset: 0x14B8120
    ::Il2CppObject* get_Item(int record);
    // System.Void set_Item(System.Int32 record, System.Object value)
    // Offset: 0x14B9834
    void set_Item(int record, ::Il2CppObject* value);
    // public System.Boolean get_Unique()
    // Offset: 0x14B9B10
    bool get_Unique();
    // public System.Void set_Unique(System.Boolean value)
    // Offset: 0x14B9B18
    void set_Unique(bool value);
    // System.String get_XmlDataType()
    // Offset: 0x14BA000
    ::StringW get_XmlDataType();
    // System.Void set_XmlDataType(System.String value)
    // Offset: 0x14BA008
    void set_XmlDataType(::StringW value);
    // System.Data.SimpleType get_SimpleType()
    // Offset: 0x14BA010
    ::System::Data::SimpleType* get_SimpleType();
    // System.Void set_SimpleType(System.Data.SimpleType value)
    // Offset: 0x14B56EC
    void set_SimpleType(::System::Data::SimpleType* value);
    // public System.Data.MappingType get_ColumnMapping()
    // Offset: 0x14BA018
    ::System::Data::MappingType get_ColumnMapping();
    // public System.Void set_ColumnMapping(System.Data.MappingType value)
    // Offset: 0x14BA020
    void set_ColumnMapping(::System::Data::MappingType value);
    // System.Boolean get_IsCustomType()
    // Offset: 0x14BABBC
    bool get_IsCustomType();
    // System.Boolean get_ImplementsIXMLSerializable()
    // Offset: 0x14BAD14
    bool get_ImplementsIXMLSerializable();
    // public System.Void .ctor()
    // Offset: 0x14B531C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataColumn* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataColumn::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataColumn*, creationType>()));
    }
    // public System.Void .ctor(System.String columnName, System.Type dataType)
    // Offset: 0x14B56E0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataColumn* New_ctor(::StringW columnName, ::System::Type* dataType) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataColumn::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataColumn*, creationType>(columnName, dataType)));
    }
    // public System.Void .ctor(System.String columnName, System.Type dataType, System.String expr, System.Data.MappingType type)
    // Offset: 0x14B53B0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataColumn* New_ctor(::StringW columnName, ::System::Type* dataType, ::StringW expr, ::System::Data::MappingType type) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataColumn::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataColumn*, creationType>(columnName, dataType, expr, type)));
    }
    // private System.Void UpdateColumnType(System.Type type, System.Data.Common.StorageType typeCode)
    // Offset: 0x14B5734
    void UpdateColumnType(::System::Type* type, ::System::Data::Common::StorageType typeCode);
    // System.String GetColumnValueAsString(System.Data.DataRow row, System.Data.DataRowVersion version)
    // Offset: 0x14B804C
    ::StringW GetColumnValueAsString(::System::Data::DataRow* row, ::System::Data::DataRowVersion version);
    // private System.Void SetMaxLengthSimpleType()
    // Offset: 0x14B8C28
    void SetMaxLengthSimpleType();
    // System.Void SetOrdinalInternal(System.Int32 ordinal)
    // Offset: 0x14B9540
    void SetOrdinalInternal(int ordinal);
    // System.Void SetTable(System.Data.DataTable table)
    // Offset: 0x14B9758
    void SetTable(::System::Data::DataTable* table);
    // private System.Data.DataRow GetDataRow(System.Int32 index)
    // Offset: 0x14B980C
    ::System::Data::DataRow* GetDataRow(int index);
    // System.Void InitializeRecord(System.Int32 record)
    // Offset: 0x14B8B44
    void InitializeRecord(int record);
    // System.Void SetValue(System.Int32 record, System.Object value)
    // Offset: 0x14B99CC
    void SetValue(int record, ::Il2CppObject* value);
    // System.Void FreeRecord(System.Int32 record)
    // Offset: 0x14B9AEC
    void FreeRecord(int record);
    // System.Void InternalUnique(System.Boolean value)
    // Offset: 0x14B9FF4
    void InternalUnique(bool value);
    // System.Void CheckColumnConstraint(System.Data.DataRow row, System.Data.DataRowAction action)
    // Offset: 0x14BA274
    void CheckColumnConstraint(::System::Data::DataRow* row, ::System::Data::DataRowAction action);
    // System.Boolean CheckMaxLength()
    // Offset: 0x14B9034
    bool CheckMaxLength();
    // System.Void CheckMaxLength(System.Data.DataRow dr)
    // Offset: 0x14BA34C
    void CheckMaxLength(::System::Data::DataRow* dr);
    // protected internal System.Void CheckNotAllowNull()
    // Offset: 0x14B6214
    void CheckNotAllowNull();
    // System.Void CheckNullable(System.Data.DataRow row)
    // Offset: 0x14BA2CC
    void CheckNullable(::System::Data::DataRow* row);
    // protected System.Void CheckUnique()
    // Offset: 0x14B9F98
    void CheckUnique();
    // System.Int32 Compare(System.Int32 record1, System.Int32 record2)
    // Offset: 0x14BA3F0
    int Compare(int record1, int record2);
    // System.Boolean CompareValueTo(System.Int32 record1, System.Object value, System.Boolean checkType)
    // Offset: 0x14BA410
    bool CompareValueTo(int record1, ::Il2CppObject* value, bool checkType);
    // System.Int32 CompareValueTo(System.Int32 record1, System.Object value)
    // Offset: 0x14BA610
    int CompareValueTo(int record1, ::Il2CppObject* value);
    // System.Object ConvertValue(System.Object value)
    // Offset: 0x14BA630
    ::Il2CppObject* ConvertValue(::Il2CppObject* value);
    // System.Void Copy(System.Int32 srcRecordNo, System.Int32 dstRecordNo)
    // Offset: 0x14BA650
    void Copy(int srcRecordNo, int dstRecordNo);
    // System.Data.DataColumn Clone()
    // Offset: 0x14BA670
    ::System::Data::DataColumn* Clone();
    // System.Object GetAggregateValue(System.Int32[] records, System.Data.AggregateType kind)
    // Offset: 0x14A22A8
    ::Il2CppObject* GetAggregateValue(::ArrayW<int> records, ::System::Data::AggregateType kind);
    // private System.Int32 GetStringLength(System.Int32 record)
    // Offset: 0x14BA3D0
    int GetStringLength(int record);
    // System.Void Init(System.Int32 record)
    // Offset: 0x14BAB20
    void Init(int record);
    // static System.Boolean IsAutoIncrementType(System.Type dataType)
    // Offset: 0x14B6818
    static bool IsAutoIncrementType(::System::Type* dataType);
    // System.Boolean IsValueCustomTypeInstance(System.Object value)
    // Offset: 0x14BAC3C
    bool IsValueCustomTypeInstance(::Il2CppObject* value);
    // System.Boolean IsInRelation()
    // Offset: 0x14B8190
    bool IsInRelation();
    // System.Boolean IsMaxLengthViolated()
    // Offset: 0x14BAD1C
    bool IsMaxLengthViolated();
    // System.Boolean IsNotAllowDBNullViolated()
    // Offset: 0x14BB234
    bool IsNotAllowDBNullViolated();
    // protected System.Void OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs pcevent)
    // Offset: 0x14BB37C
    void OnPropertyChanging(::System::ComponentModel::PropertyChangedEventArgs* pcevent);
    // protected internal System.Void RaisePropertyChanging(System.String name)
    // Offset: 0x14B7DC8
    void RaisePropertyChanging(::StringW name);
    // private System.Void InsureStorage()
    // Offset: 0x14BB39C
    void InsureStorage();
    // System.Void SetCapacity(System.Int32 capacity)
    // Offset: 0x14BB428
    void SetCapacity(int capacity);
    // System.Void OnSetDataSet()
    // Offset: 0x14BB468
    void OnSetDataSet();
    // System.Object ConvertXmlToObject(System.String s)
    // Offset: 0x14BB4E4
    ::Il2CppObject* ConvertXmlToObject(::StringW s);
    // System.Object ConvertXmlToObject(System.Xml.XmlReader xmlReader, System.Xml.Serialization.XmlRootAttribute xmlAttrib)
    // Offset: 0x14BB524
    ::Il2CppObject* ConvertXmlToObject(::System::Xml::XmlReader* xmlReader, ::System::Xml::Serialization::XmlRootAttribute* xmlAttrib);
    // System.String ConvertObjectToXml(System.Object value)
    // Offset: 0x14B8140
    ::StringW ConvertObjectToXml(::Il2CppObject* value);
    // System.Void ConvertObjectToXml(System.Object value, System.Xml.XmlWriter xmlWriter, System.Xml.Serialization.XmlRootAttribute xmlAttrib)
    // Offset: 0x14BB574
    void ConvertObjectToXml(::Il2CppObject* value, ::System::Xml::XmlWriter* xmlWriter, ::System::Xml::Serialization::XmlRootAttribute* xmlAttrib);
    // System.Object GetEmptyColumnStore(System.Int32 recordCount)
    // Offset: 0x14BB5CC
    ::Il2CppObject* GetEmptyColumnStore(int recordCount);
    // System.Void CopyValueIntoStore(System.Int32 record, System.Object store, System.Collections.BitArray nullbits, System.Int32 storeIndex)
    // Offset: 0x14BB604
    void CopyValueIntoStore(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex);
    // System.Void SetStorage(System.Object store, System.Collections.BitArray nullbits)
    // Offset: 0x14BB620
    void SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits);
    // System.Void AddDependentColumn(System.Data.DataColumn expressionColumn)
    // Offset: 0x14BB668
    void AddDependentColumn(::System::Data::DataColumn* expressionColumn);
    // System.Void RemoveDependentColumn(System.Data.DataColumn expressionColumn)
    // Offset: 0x14BB728
    void RemoveDependentColumn(::System::Data::DataColumn* expressionColumn);
    // System.Void HandleDependentColumnList(System.Data.DataExpression oldExpression, System.Data.DataExpression newExpression)
    // Offset: 0x14B89F4
    void HandleDependentColumnList(::System::Data::DataExpression* oldExpression, ::System::Data::DataExpression* newExpression);
    // public override System.String ToString()
    // Offset: 0x14BB46C
    // Implemented from: System.ComponentModel.MarshalByValueComponent
    // Base method: System.String MarshalByValueComponent::ToString()
    ::StringW ToString();
  }; // System.Data.DataColumn
  #pragma pack(pop)
  static check_size<sizeof(DataColumn), 232 + sizeof(::System::ComponentModel::PropertyChangedEventHandler*)> __System_Data_DataColumnSizeCheck;
  static_assert(sizeof(DataColumn) == 0xF0);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::DataColumn::get_AllowDBNull
// Il2CppName: get_AllowDBNull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_AllowDBNull)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_AllowDBNull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_AllowDBNull
// Il2CppName: set_AllowDBNull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(bool)>(&System::Data::DataColumn::set_AllowDBNull)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_AllowDBNull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_AutoIncrement
// Il2CppName: get_AutoIncrement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_AutoIncrement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_AutoIncrement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_AutoIncrement
// Il2CppName: set_AutoIncrement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(bool)>(&System::Data::DataColumn::set_AutoIncrement)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_AutoIncrement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_AutoIncrementCurrent
// Il2CppName: get_AutoIncrementCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_AutoIncrementCurrent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_AutoIncrementCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_AutoIncrementCurrent
// Il2CppName: set_AutoIncrementCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::Il2CppObject*)>(&System::Data::DataColumn::set_AutoIncrementCurrent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_AutoIncrementCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_AutoInc
// Il2CppName: get_AutoInc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::AutoIncrementValue* (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_AutoInc)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_AutoInc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_AutoIncrementSeed
// Il2CppName: get_AutoIncrementSeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_AutoIncrementSeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_AutoIncrementSeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_AutoIncrementSeed
// Il2CppName: set_AutoIncrementSeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(int64_t)>(&System::Data::DataColumn::set_AutoIncrementSeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_AutoIncrementSeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_AutoIncrementStep
// Il2CppName: get_AutoIncrementStep
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_AutoIncrementStep)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_AutoIncrementStep", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_AutoIncrementStep
// Il2CppName: set_AutoIncrementStep
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(int64_t)>(&System::Data::DataColumn::set_AutoIncrementStep)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_AutoIncrementStep", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_Caption
// Il2CppName: get_Caption
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_Caption)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_Caption", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_Caption
// Il2CppName: set_Caption
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::StringW)>(&System::Data::DataColumn::set_Caption)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_Caption", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_ColumnName
// Il2CppName: get_ColumnName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_ColumnName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_ColumnName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_ColumnName
// Il2CppName: set_ColumnName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::StringW)>(&System::Data::DataColumn::set_ColumnName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_ColumnName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_EncodedColumnName
// Il2CppName: get_EncodedColumnName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_EncodedColumnName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_EncodedColumnName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_FormatProvider
// Il2CppName: get_FormatProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IFormatProvider* (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_FormatProvider)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_FormatProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_Locale
// Il2CppName: get_Locale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::CultureInfo* (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_Locale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_Locale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_ObjectID
// Il2CppName: get_ObjectID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_ObjectID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_ObjectID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_Prefix
// Il2CppName: get_Prefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_Prefix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_Prefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_Prefix
// Il2CppName: set_Prefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::StringW)>(&System::Data::DataColumn::set_Prefix)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_Prefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_Computed
// Il2CppName: get_Computed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_Computed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_Computed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_DataExpression
// Il2CppName: get_DataExpression
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataExpression* (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_DataExpression)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_DataExpression", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_DataType
// Il2CppName: get_DataType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_DataType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_DataType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_DataType
// Il2CppName: set_DataType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::System::Type*)>(&System::Data::DataColumn::set_DataType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_DataType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_DateTimeMode
// Il2CppName: get_DateTimeMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataSetDateTime (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_DateTimeMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_DateTimeMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_DateTimeMode
// Il2CppName: set_DateTimeMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::System::Data::DataSetDateTime)>(&System::Data::DataColumn::set_DateTimeMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Data", "DataSetDateTime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_DateTimeMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_DefaultValue
// Il2CppName: get_DefaultValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_DefaultValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_DefaultValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_DefaultValue
// Il2CppName: set_DefaultValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::Il2CppObject*)>(&System::Data::DataColumn::set_DefaultValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_DefaultValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_DefaultValueIsNull
// Il2CppName: get_DefaultValueIsNull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_DefaultValueIsNull)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_DefaultValueIsNull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_Expression
// Il2CppName: get_Expression
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_Expression)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_Expression", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_Expression
// Il2CppName: set_Expression
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::StringW)>(&System::Data::DataColumn::set_Expression)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_Expression", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_ExtendedProperties
// Il2CppName: get_ExtendedProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::PropertyCollection* (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_ExtendedProperties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_ExtendedProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_HasData
// Il2CppName: get_HasData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_HasData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_HasData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_ImplementsINullable
// Il2CppName: get_ImplementsINullable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_ImplementsINullable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_ImplementsINullable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_ImplementsIChangeTracking
// Il2CppName: get_ImplementsIChangeTracking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_ImplementsIChangeTracking)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_ImplementsIChangeTracking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_ImplementsIRevertibleChangeTracking
// Il2CppName: get_ImplementsIRevertibleChangeTracking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_ImplementsIRevertibleChangeTracking)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_ImplementsIRevertibleChangeTracking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_IsValueType
// Il2CppName: get_IsValueType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_IsValueType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_IsValueType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_IsSqlType
// Il2CppName: get_IsSqlType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_IsSqlType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_IsSqlType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_MaxLength
// Il2CppName: get_MaxLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_MaxLength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_MaxLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_MaxLength
// Il2CppName: set_MaxLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(int)>(&System::Data::DataColumn::set_MaxLength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_MaxLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_Namespace
// Il2CppName: get_Namespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_Namespace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_Namespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_Namespace
// Il2CppName: set_Namespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::StringW)>(&System::Data::DataColumn::set_Namespace)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_Namespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_Ordinal
// Il2CppName: get_Ordinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_Ordinal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_Ordinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_ReadOnly
// Il2CppName: get_ReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_ReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_ReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_ReadOnly
// Il2CppName: set_ReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(bool)>(&System::Data::DataColumn::set_ReadOnly)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_ReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_SortIndex
// Il2CppName: get_SortIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::Index* (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_SortIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_SortIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_Table
// Il2CppName: get_Table
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataTable* (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_Table)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_Table", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::DataColumn::*)(int)>(&System::Data::DataColumn::get_Item)> {
  static const MethodInfo* get() {
    static auto* record = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{record});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(int, ::Il2CppObject*)>(&System::Data::DataColumn::set_Item)> {
  static const MethodInfo* get() {
    static auto* record = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{record, value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_Unique
// Il2CppName: get_Unique
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_Unique)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_Unique", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_Unique
// Il2CppName: set_Unique
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(bool)>(&System::Data::DataColumn::set_Unique)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_Unique", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_XmlDataType
// Il2CppName: get_XmlDataType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_XmlDataType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_XmlDataType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_XmlDataType
// Il2CppName: set_XmlDataType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::StringW)>(&System::Data::DataColumn::set_XmlDataType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_XmlDataType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_SimpleType
// Il2CppName: get_SimpleType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::SimpleType* (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_SimpleType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_SimpleType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_SimpleType
// Il2CppName: set_SimpleType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::System::Data::SimpleType*)>(&System::Data::DataColumn::set_SimpleType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Data", "SimpleType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_SimpleType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_ColumnMapping
// Il2CppName: get_ColumnMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::MappingType (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_ColumnMapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_ColumnMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::set_ColumnMapping
// Il2CppName: set_ColumnMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::System::Data::MappingType)>(&System::Data::DataColumn::set_ColumnMapping)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Data", "MappingType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "set_ColumnMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_IsCustomType
// Il2CppName: get_IsCustomType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_IsCustomType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_IsCustomType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::get_ImplementsIXMLSerializable
// Il2CppName: get_ImplementsIXMLSerializable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)()>(&System::Data::DataColumn::get_ImplementsIXMLSerializable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "get_ImplementsIXMLSerializable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DataColumn::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DataColumn::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DataColumn::UpdateColumnType
// Il2CppName: UpdateColumnType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::System::Type*, ::System::Data::Common::StorageType)>(&System::Data::DataColumn::UpdateColumnType)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* typeCode = &::il2cpp_utils::GetClassFromName("System.Data.Common", "StorageType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "UpdateColumnType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, typeCode});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::GetColumnValueAsString
// Il2CppName: GetColumnValueAsString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataColumn::*)(::System::Data::DataRow*, ::System::Data::DataRowVersion)>(&System::Data::DataColumn::GetColumnValueAsString)> {
  static const MethodInfo* get() {
    static auto* row = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    static auto* version = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowVersion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "GetColumnValueAsString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{row, version});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::SetMaxLengthSimpleType
// Il2CppName: SetMaxLengthSimpleType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)()>(&System::Data::DataColumn::SetMaxLengthSimpleType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "SetMaxLengthSimpleType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::SetOrdinalInternal
// Il2CppName: SetOrdinalInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(int)>(&System::Data::DataColumn::SetOrdinalInternal)> {
  static const MethodInfo* get() {
    static auto* ordinal = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "SetOrdinalInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ordinal});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::SetTable
// Il2CppName: SetTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::System::Data::DataTable*)>(&System::Data::DataColumn::SetTable)> {
  static const MethodInfo* get() {
    static auto* table = &::il2cpp_utils::GetClassFromName("System.Data", "DataTable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "SetTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{table});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::GetDataRow
// Il2CppName: GetDataRow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataRow* (System::Data::DataColumn::*)(int)>(&System::Data::DataColumn::GetDataRow)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "GetDataRow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::InitializeRecord
// Il2CppName: InitializeRecord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(int)>(&System::Data::DataColumn::InitializeRecord)> {
  static const MethodInfo* get() {
    static auto* record = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "InitializeRecord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{record});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::SetValue
// Il2CppName: SetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(int, ::Il2CppObject*)>(&System::Data::DataColumn::SetValue)> {
  static const MethodInfo* get() {
    static auto* record = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "SetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{record, value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::FreeRecord
// Il2CppName: FreeRecord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(int)>(&System::Data::DataColumn::FreeRecord)> {
  static const MethodInfo* get() {
    static auto* record = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "FreeRecord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{record});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::InternalUnique
// Il2CppName: InternalUnique
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(bool)>(&System::Data::DataColumn::InternalUnique)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "InternalUnique", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::CheckColumnConstraint
// Il2CppName: CheckColumnConstraint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::System::Data::DataRow*, ::System::Data::DataRowAction)>(&System::Data::DataColumn::CheckColumnConstraint)> {
  static const MethodInfo* get() {
    static auto* row = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    static auto* action = &::il2cpp_utils::GetClassFromName("System.Data", "DataRowAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "CheckColumnConstraint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{row, action});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::CheckMaxLength
// Il2CppName: CheckMaxLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)()>(&System::Data::DataColumn::CheckMaxLength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "CheckMaxLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::CheckMaxLength
// Il2CppName: CheckMaxLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::System::Data::DataRow*)>(&System::Data::DataColumn::CheckMaxLength)> {
  static const MethodInfo* get() {
    static auto* dr = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "CheckMaxLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dr});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::CheckNotAllowNull
// Il2CppName: CheckNotAllowNull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)()>(&System::Data::DataColumn::CheckNotAllowNull)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "CheckNotAllowNull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::CheckNullable
// Il2CppName: CheckNullable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::System::Data::DataRow*)>(&System::Data::DataColumn::CheckNullable)> {
  static const MethodInfo* get() {
    static auto* row = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "CheckNullable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{row});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::CheckUnique
// Il2CppName: CheckUnique
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)()>(&System::Data::DataColumn::CheckUnique)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "CheckUnique", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataColumn::*)(int, int)>(&System::Data::DataColumn::Compare)> {
  static const MethodInfo* get() {
    static auto* record1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* record2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{record1, record2});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::CompareValueTo
// Il2CppName: CompareValueTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)(int, ::Il2CppObject*, bool)>(&System::Data::DataColumn::CompareValueTo)> {
  static const MethodInfo* get() {
    static auto* record1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* checkType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "CompareValueTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{record1, value, checkType});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::CompareValueTo
// Il2CppName: CompareValueTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataColumn::*)(int, ::Il2CppObject*)>(&System::Data::DataColumn::CompareValueTo)> {
  static const MethodInfo* get() {
    static auto* record1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "CompareValueTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{record1, value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::ConvertValue
// Il2CppName: ConvertValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::DataColumn::*)(::Il2CppObject*)>(&System::Data::DataColumn::ConvertValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "ConvertValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(int, int)>(&System::Data::DataColumn::Copy)> {
  static const MethodInfo* get() {
    static auto* srcRecordNo = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* dstRecordNo = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{srcRecordNo, dstRecordNo});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataColumn* (System::Data::DataColumn::*)()>(&System::Data::DataColumn::Clone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::GetAggregateValue
// Il2CppName: GetAggregateValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::DataColumn::*)(::ArrayW<int>, ::System::Data::AggregateType)>(&System::Data::DataColumn::GetAggregateValue)> {
  static const MethodInfo* get() {
    static auto* records = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    static auto* kind = &::il2cpp_utils::GetClassFromName("System.Data", "AggregateType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "GetAggregateValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{records, kind});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::GetStringLength
// Il2CppName: GetStringLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataColumn::*)(int)>(&System::Data::DataColumn::GetStringLength)> {
  static const MethodInfo* get() {
    static auto* record = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "GetStringLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{record});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(int)>(&System::Data::DataColumn::Init)> {
  static const MethodInfo* get() {
    static auto* record = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{record});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::IsAutoIncrementType
// Il2CppName: IsAutoIncrementType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Type*)>(&System::Data::DataColumn::IsAutoIncrementType)> {
  static const MethodInfo* get() {
    static auto* dataType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "IsAutoIncrementType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dataType});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::IsValueCustomTypeInstance
// Il2CppName: IsValueCustomTypeInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)(::Il2CppObject*)>(&System::Data::DataColumn::IsValueCustomTypeInstance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "IsValueCustomTypeInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::IsInRelation
// Il2CppName: IsInRelation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)()>(&System::Data::DataColumn::IsInRelation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "IsInRelation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::IsMaxLengthViolated
// Il2CppName: IsMaxLengthViolated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)()>(&System::Data::DataColumn::IsMaxLengthViolated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "IsMaxLengthViolated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::IsNotAllowDBNullViolated
// Il2CppName: IsNotAllowDBNullViolated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataColumn::*)()>(&System::Data::DataColumn::IsNotAllowDBNullViolated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "IsNotAllowDBNullViolated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::OnPropertyChanging
// Il2CppName: OnPropertyChanging
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::System::ComponentModel::PropertyChangedEventArgs*)>(&System::Data::DataColumn::OnPropertyChanging)> {
  static const MethodInfo* get() {
    static auto* pcevent = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyChangedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "OnPropertyChanging", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pcevent});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::RaisePropertyChanging
// Il2CppName: RaisePropertyChanging
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::StringW)>(&System::Data::DataColumn::RaisePropertyChanging)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "RaisePropertyChanging", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::InsureStorage
// Il2CppName: InsureStorage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)()>(&System::Data::DataColumn::InsureStorage)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "InsureStorage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::SetCapacity
// Il2CppName: SetCapacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(int)>(&System::Data::DataColumn::SetCapacity)> {
  static const MethodInfo* get() {
    static auto* capacity = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "SetCapacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{capacity});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::OnSetDataSet
// Il2CppName: OnSetDataSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)()>(&System::Data::DataColumn::OnSetDataSet)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "OnSetDataSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::ConvertXmlToObject
// Il2CppName: ConvertXmlToObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::DataColumn::*)(::StringW)>(&System::Data::DataColumn::ConvertXmlToObject)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "ConvertXmlToObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::ConvertXmlToObject
// Il2CppName: ConvertXmlToObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::DataColumn::*)(::System::Xml::XmlReader*, ::System::Xml::Serialization::XmlRootAttribute*)>(&System::Data::DataColumn::ConvertXmlToObject)> {
  static const MethodInfo* get() {
    static auto* xmlReader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    static auto* xmlAttrib = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlRootAttribute")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "ConvertXmlToObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{xmlReader, xmlAttrib});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::ConvertObjectToXml
// Il2CppName: ConvertObjectToXml
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataColumn::*)(::Il2CppObject*)>(&System::Data::DataColumn::ConvertObjectToXml)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "ConvertObjectToXml", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::ConvertObjectToXml
// Il2CppName: ConvertObjectToXml
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::Il2CppObject*, ::System::Xml::XmlWriter*, ::System::Xml::Serialization::XmlRootAttribute*)>(&System::Data::DataColumn::ConvertObjectToXml)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* xmlWriter = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlWriter")->byval_arg;
    static auto* xmlAttrib = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlRootAttribute")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "ConvertObjectToXml", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, xmlWriter, xmlAttrib});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::GetEmptyColumnStore
// Il2CppName: GetEmptyColumnStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::DataColumn::*)(int)>(&System::Data::DataColumn::GetEmptyColumnStore)> {
  static const MethodInfo* get() {
    static auto* recordCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "GetEmptyColumnStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordCount});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::CopyValueIntoStore
// Il2CppName: CopyValueIntoStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(int, ::Il2CppObject*, ::System::Collections::BitArray*, int)>(&System::Data::DataColumn::CopyValueIntoStore)> {
  static const MethodInfo* get() {
    static auto* record = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* store = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* nullbits = &::il2cpp_utils::GetClassFromName("System.Collections", "BitArray")->byval_arg;
    static auto* storeIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "CopyValueIntoStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{record, store, nullbits, storeIndex});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::SetStorage
// Il2CppName: SetStorage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::Il2CppObject*, ::System::Collections::BitArray*)>(&System::Data::DataColumn::SetStorage)> {
  static const MethodInfo* get() {
    static auto* store = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* nullbits = &::il2cpp_utils::GetClassFromName("System.Collections", "BitArray")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "SetStorage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{store, nullbits});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::AddDependentColumn
// Il2CppName: AddDependentColumn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::System::Data::DataColumn*)>(&System::Data::DataColumn::AddDependentColumn)> {
  static const MethodInfo* get() {
    static auto* expressionColumn = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "AddDependentColumn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{expressionColumn});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::RemoveDependentColumn
// Il2CppName: RemoveDependentColumn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::System::Data::DataColumn*)>(&System::Data::DataColumn::RemoveDependentColumn)> {
  static const MethodInfo* get() {
    static auto* expressionColumn = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "RemoveDependentColumn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{expressionColumn});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::HandleDependentColumnList
// Il2CppName: HandleDependentColumnList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataColumn::*)(::System::Data::DataExpression*, ::System::Data::DataExpression*)>(&System::Data::DataColumn::HandleDependentColumnList)> {
  static const MethodInfo* get() {
    static auto* oldExpression = &::il2cpp_utils::GetClassFromName("System.Data", "DataExpression")->byval_arg;
    static auto* newExpression = &::il2cpp_utils::GetClassFromName("System.Data", "DataExpression")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "HandleDependentColumnList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oldExpression, newExpression});
  }
};
// Writing MetadataGetter for method: System::Data::DataColumn::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataColumn::*)()>(&System::Data::DataColumn::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataColumn*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
