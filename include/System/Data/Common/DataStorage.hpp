// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Data.Common.StorageType
#include "System/Data/Common/StorageType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Data
namespace System::Data {
  // Forward declaring type: DataColumn
  class DataColumn;
  // Forward declaring type: DataTable
  class DataTable;
  // Forward declaring type: DataSetDateTime
  struct DataSetDateTime;
  // Forward declaring type: AggregateType
  struct AggregateType;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Tuple`4<T1, T2, T3, T4>
  template<typename T1, typename T2, typename T3, typename T4>
  class Tuple_4;
  // Forward declaring type: IFormatProvider
  class IFormatProvider;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: BitArray
  class BitArray;
}
// Forward declaring namespace: System::Collections::Concurrent
namespace System::Collections::Concurrent {
  // Forward declaring type: ConcurrentDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class ConcurrentDictionary_2;
}
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlReader
  class XmlReader;
  // Forward declaring type: XmlWriter
  class XmlWriter;
}
// Forward declaring namespace: System::Xml::Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlRootAttribute
  class XmlRootAttribute;
}
// Completed forward declares
// Type namespace: System.Data.Common
namespace System::Data::Common {
  // Forward declaring type: DataStorage
  class DataStorage;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::Common::DataStorage);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::Common::DataStorage*, "System.Data.Common", "DataStorage");
// Type namespace: System.Data.Common
namespace System::Data::Common {
  // Size: 0x4C
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.Common.DataStorage
  // [TokenAttribute] Offset: FFFFFFFF
  class DataStorage : public ::Il2CppObject {
    public:
    public:
    // readonly System.Data.DataColumn _column
    // Size: 0x8
    // Offset: 0x10
    ::System::Data::DataColumn* column;
    // Field size check
    static_assert(sizeof(::System::Data::DataColumn*) == 0x8);
    // readonly System.Data.DataTable _table
    // Size: 0x8
    // Offset: 0x18
    ::System::Data::DataTable* table;
    // Field size check
    static_assert(sizeof(::System::Data::DataTable*) == 0x8);
    // readonly System.Type _dataType
    // Size: 0x8
    // Offset: 0x20
    ::System::Type* dataType;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    // readonly System.Data.Common.StorageType _storageTypeCode
    // Size: 0x4
    // Offset: 0x28
    ::System::Data::Common::StorageType storageTypeCode;
    // Field size check
    static_assert(sizeof(::System::Data::Common::StorageType) == 0x4);
    // Padding between fields: storageTypeCode and: dbNullBits
    char __padding3[0x4] = {};
    // private System.Collections.BitArray _dbNullBits
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::BitArray* dbNullBits;
    // Field size check
    static_assert(sizeof(::System::Collections::BitArray*) == 0x8);
    // private readonly System.Object _defaultValue
    // Size: 0x8
    // Offset: 0x38
    ::Il2CppObject* defaultValue;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // readonly System.Object _nullValue
    // Size: 0x8
    // Offset: 0x40
    ::Il2CppObject* nullValue;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // readonly System.Boolean _isCloneable
    // Size: 0x1
    // Offset: 0x48
    bool isCloneable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // readonly System.Boolean _isCustomDefinedType
    // Size: 0x1
    // Offset: 0x49
    bool isCustomDefinedType;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // readonly System.Boolean _isStringType
    // Size: 0x1
    // Offset: 0x4A
    bool isStringType;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // readonly System.Boolean _isValueType
    // Size: 0x1
    // Offset: 0x4B
    bool isValueType;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get static field: static private readonly System.Type[] s_storageClassType
    static ::ArrayW<::System::Type*> _get_s_storageClassType();
    // Set static field: static private readonly System.Type[] s_storageClassType
    static void _set_s_storageClassType(::ArrayW<::System::Type*> value);
    // Get static field: static private readonly System.Func`2<System.Type,System.Tuple`4<System.Boolean,System.Boolean,System.Boolean,System.Boolean>> s_inspectTypeForInterfaces
    static ::System::Func_2<::System::Type*, ::System::Tuple_4<bool, bool, bool, bool>*>* _get_s_inspectTypeForInterfaces();
    // Set static field: static private readonly System.Func`2<System.Type,System.Tuple`4<System.Boolean,System.Boolean,System.Boolean,System.Boolean>> s_inspectTypeForInterfaces
    static void _set_s_inspectTypeForInterfaces(::System::Func_2<::System::Type*, ::System::Tuple_4<bool, bool, bool, bool>*>* value);
    // Get static field: static private readonly System.Collections.Concurrent.ConcurrentDictionary`2<System.Type,System.Tuple`4<System.Boolean,System.Boolean,System.Boolean,System.Boolean>> s_typeImplementsInterface
    static ::System::Collections::Concurrent::ConcurrentDictionary_2<::System::Type*, ::System::Tuple_4<bool, bool, bool, bool>*>* _get_s_typeImplementsInterface();
    // Set static field: static private readonly System.Collections.Concurrent.ConcurrentDictionary`2<System.Type,System.Tuple`4<System.Boolean,System.Boolean,System.Boolean,System.Boolean>> s_typeImplementsInterface
    static void _set_s_typeImplementsInterface(::System::Collections::Concurrent::ConcurrentDictionary_2<::System::Type*, ::System::Tuple_4<bool, bool, bool, bool>*>* value);
    // Get instance field reference: readonly System.Data.DataColumn _column
    [[deprecated("Use field access instead!")]] ::System::Data::DataColumn*& dyn__column();
    // Get instance field reference: readonly System.Data.DataTable _table
    [[deprecated("Use field access instead!")]] ::System::Data::DataTable*& dyn__table();
    // Get instance field reference: readonly System.Type _dataType
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn__dataType();
    // Get instance field reference: readonly System.Data.Common.StorageType _storageTypeCode
    [[deprecated("Use field access instead!")]] ::System::Data::Common::StorageType& dyn__storageTypeCode();
    // Get instance field reference: private System.Collections.BitArray _dbNullBits
    [[deprecated("Use field access instead!")]] ::System::Collections::BitArray*& dyn__dbNullBits();
    // Get instance field reference: private readonly System.Object _defaultValue
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn__defaultValue();
    // Get instance field reference: readonly System.Object _nullValue
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn__nullValue();
    // Get instance field reference: readonly System.Boolean _isCloneable
    [[deprecated("Use field access instead!")]] bool& dyn__isCloneable();
    // Get instance field reference: readonly System.Boolean _isCustomDefinedType
    [[deprecated("Use field access instead!")]] bool& dyn__isCustomDefinedType();
    // Get instance field reference: readonly System.Boolean _isStringType
    [[deprecated("Use field access instead!")]] bool& dyn__isStringType();
    // Get instance field reference: readonly System.Boolean _isValueType
    [[deprecated("Use field access instead!")]] bool& dyn__isValueType();
    // System.Data.DataSetDateTime get_DateTimeMode()
    // Offset: 0x103F5FC
    ::System::Data::DataSetDateTime get_DateTimeMode();
    // System.IFormatProvider get_FormatProvider()
    // Offset: 0x103F618
    ::System::IFormatProvider* get_FormatProvider();
    // protected System.Void .ctor(System.Data.DataColumn column, System.Type type, System.Object defaultValue, System.Data.Common.StorageType storageType)
    // Offset: 0x103F3C0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataStorage* New_ctor(::System::Data::DataColumn* column, ::System::Type* type, ::Il2CppObject* defaultValue, ::System::Data::Common::StorageType storageType) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataStorage*, creationType>(column, type, defaultValue, storageType)));
    }
    // protected System.Void .ctor(System.Data.DataColumn column, System.Type type, System.Object defaultValue, System.Object nullValue, System.Data.Common.StorageType storageType)
    // Offset: 0x103F58C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataStorage* New_ctor(::System::Data::DataColumn* column, ::System::Type* type, ::Il2CppObject* defaultValue, ::Il2CppObject* nullValue, ::System::Data::Common::StorageType storageType) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataStorage*, creationType>(column, type, defaultValue, nullValue, storageType)));
    }
    // protected System.Void .ctor(System.Data.DataColumn column, System.Type type, System.Object defaultValue, System.Object nullValue, System.Boolean isICloneable, System.Data.Common.StorageType storageType)
    // Offset: 0x103F460
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataStorage* New_ctor(::System::Data::DataColumn* column, ::System::Type* type, ::Il2CppObject* defaultValue, ::Il2CppObject* nullValue, bool isICloneable, ::System::Data::Common::StorageType storageType) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataStorage*, creationType>(column, type, defaultValue, nullValue, isICloneable, storageType)));
    }
    // static private System.Void .cctor()
    // Offset: 0x1040D34
    static void _cctor();
    // public System.Object Aggregate(System.Int32[] recordNos, System.Data.AggregateType kind)
    // Offset: 0x103F6CC
    ::Il2CppObject* Aggregate(::ArrayW<int> recordNos, ::System::Data::AggregateType kind);
    // public System.Object AggregateCount(System.Int32[] recordNos)
    // Offset: 0x103F6E0
    ::Il2CppObject* AggregateCount(::ArrayW<int> recordNos);
    // protected System.Int32 CompareBits(System.Int32 recordNo1, System.Int32 recordNo2)
    // Offset: 0x103F7B8
    int CompareBits(int recordNo1, int recordNo2);
    // public System.Int32 Compare(System.Int32 recordNo1, System.Int32 recordNo2)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int Compare(int recordNo1, int recordNo2);
    // public System.Int32 CompareValueTo(System.Int32 recordNo1, System.Object value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int CompareValueTo(int recordNo1, ::Il2CppObject* value);
    // public System.Object ConvertValue(System.Object value)
    // Offset: 0x103F824
    ::Il2CppObject* ConvertValue(::Il2CppObject* value);
    // protected System.Void CopyBits(System.Int32 srcRecordNo, System.Int32 dstRecordNo)
    // Offset: 0x103F82C
    void CopyBits(int srcRecordNo, int dstRecordNo);
    // public System.Void Copy(System.Int32 recordNo1, System.Int32 recordNo2)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Copy(int recordNo1, int recordNo2);
    // public System.Object Get(System.Int32 recordNo)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Il2CppObject* Get(int recordNo);
    // protected System.Object GetBits(System.Int32 recordNo)
    // Offset: 0x103F870
    ::Il2CppObject* GetBits(int recordNo);
    // public System.Int32 GetStringLength(System.Int32 record)
    // Offset: 0x103F8B4
    int GetStringLength(int record);
    // protected System.Boolean HasValue(System.Int32 recordNo)
    // Offset: 0x103F8BC
    bool HasValue(int recordNo);
    // public System.Boolean IsNull(System.Int32 recordNo)
    // Offset: 0x103F8E8
    bool IsNull(int recordNo);
    // public System.Void Set(System.Int32 recordNo, System.Object value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Set(int recordNo, ::Il2CppObject* value);
    // protected System.Void SetNullBit(System.Int32 recordNo, System.Boolean flag)
    // Offset: 0x103F904
    void SetNullBit(int recordNo, bool flag);
    // public System.Void SetCapacity(System.Int32 capacity)
    // Offset: 0x103F924
    void SetCapacity(int capacity);
    // public System.Object ConvertXmlToObject(System.String s)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Il2CppObject* ConvertXmlToObject(::StringW s);
    // public System.Object ConvertXmlToObject(System.Xml.XmlReader xmlReader, System.Xml.Serialization.XmlRootAttribute xmlAttrib)
    // Offset: 0x103F9B0
    ::Il2CppObject* ConvertXmlToObject(::System::Xml::XmlReader* xmlReader, ::System::Xml::Serialization::XmlRootAttribute* xmlAttrib);
    // public System.String ConvertObjectToXml(System.Object value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW ConvertObjectToXml(::Il2CppObject* value);
    // public System.Void ConvertObjectToXml(System.Object value, System.Xml.XmlWriter xmlWriter, System.Xml.Serialization.XmlRootAttribute xmlAttrib)
    // Offset: 0x103F9FC
    void ConvertObjectToXml(::Il2CppObject* value, ::System::Xml::XmlWriter* xmlWriter, ::System::Xml::Serialization::XmlRootAttribute* xmlAttrib);
    // static public System.Data.Common.DataStorage CreateStorage(System.Data.DataColumn column, System.Type dataType, System.Data.Common.StorageType typeCode)
    // Offset: 0x103FA44
    static ::System::Data::Common::DataStorage* CreateStorage(::System::Data::DataColumn* column, ::System::Type* dataType, ::System::Data::Common::StorageType typeCode);
    // static System.Data.Common.StorageType GetStorageType(System.Type dataType)
    // Offset: 0x1040208
    static ::System::Data::Common::StorageType GetStorageType(::System::Type* dataType);
    // static System.Type GetTypeStorage(System.Data.Common.StorageType storageType)
    // Offset: 0x1040358
    static ::System::Type* GetTypeStorage(::System::Data::Common::StorageType storageType);
    // static System.Boolean IsTypeCustomType(System.Type type)
    // Offset: 0x10403E8
    static bool IsTypeCustomType(::System::Type* type);
    // static System.Boolean IsTypeCustomType(System.Data.Common.StorageType typeCode)
    // Offset: 0x103F598
    static bool IsTypeCustomType(::System::Data::Common::StorageType typeCode);
    // static System.Boolean IsSqlType(System.Data.Common.StorageType storageType)
    // Offset: 0x1040468
    static bool IsSqlType(::System::Data::Common::StorageType storageType);
    // static public System.Boolean IsSqlType(System.Type dataType)
    // Offset: 0x1040474
    static bool IsSqlType(::System::Type* dataType);
    // static private System.Boolean DetermineIfValueType(System.Data.Common.StorageType typeCode, System.Type dataType)
    // Offset: 0x103F5B8
    static bool DetermineIfValueType(::System::Data::Common::StorageType typeCode, ::System::Type* dataType);
    // static System.Void ImplementsInterfaces(System.Data.Common.StorageType typeCode, System.Type dataType, out System.Boolean sqlType, out System.Boolean nullable, out System.Boolean xmlSerializable, out System.Boolean changeTracking, out System.Boolean revertibleChangeTracking)
    // Offset: 0x1040598
    static void ImplementsInterfaces(::System::Data::Common::StorageType typeCode, ::System::Type* dataType, ByRef<bool> sqlType, ByRef<bool> nullable, ByRef<bool> xmlSerializable, ByRef<bool> changeTracking, ByRef<bool> revertibleChangeTracking);
    // static private System.Tuple`4<System.Boolean,System.Boolean,System.Boolean,System.Boolean> InspectTypeForInterfaces(System.Type dataType)
    // Offset: 0x1040700
    static ::System::Tuple_4<bool, bool, bool, bool>* InspectTypeForInterfaces(::System::Type* dataType);
    // static System.Boolean ImplementsINullableValue(System.Data.Common.StorageType typeCode, System.Type dataType)
    // Offset: 0x10408C4
    static bool ImplementsINullableValue(::System::Data::Common::StorageType typeCode, ::System::Type* dataType);
    // static public System.Boolean IsObjectNull(System.Object value)
    // Offset: 0x10409B0
    static bool IsObjectNull(::Il2CppObject* value);
    // static public System.Boolean IsObjectSqlNull(System.Object value)
    // Offset: 0x1040A64
    static bool IsObjectSqlNull(::Il2CppObject* value);
    // System.Object GetEmptyStorageInternal(System.Int32 recordCount)
    // Offset: 0x1040B24
    ::Il2CppObject* GetEmptyStorageInternal(int recordCount);
    // System.Void CopyValueInternal(System.Int32 record, System.Object store, System.Collections.BitArray nullbits, System.Int32 storeIndex)
    // Offset: 0x1040B34
    void CopyValueInternal(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex);
    // System.Void SetStorageInternal(System.Object store, System.Collections.BitArray nullbits)
    // Offset: 0x1040B44
    void SetStorageInternal(::Il2CppObject* store, ::System::Collections::BitArray* nullbits);
    // protected System.Object GetEmptyStorage(System.Int32 recordCount)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Il2CppObject* GetEmptyStorage(int recordCount);
    // protected System.Void CopyValue(System.Int32 record, System.Object store, System.Collections.BitArray nullbits, System.Int32 storeIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex);
    // protected System.Void SetStorage(System.Object store, System.Collections.BitArray nullbits)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits);
    // protected System.Void SetNullStorage(System.Collections.BitArray nullbits)
    // Offset: 0x1040B54
    void SetNullStorage(::System::Collections::BitArray* nullbits);
    // static System.Type GetType(System.String value)
    // Offset: 0x1040B5C
    static ::System::Type* GetType(::StringW value);
    // static System.String GetQualifiedName(System.Type type)
    // Offset: 0x1040CB4
    static ::StringW GetQualifiedName(::System::Type* type);
  }; // System.Data.Common.DataStorage
  #pragma pack(pop)
  static check_size<sizeof(DataStorage), 75 + sizeof(bool)> __System_Data_Common_DataStorageSizeCheck;
  static_assert(sizeof(DataStorage) == 0x4C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::Common::DataStorage::get_DateTimeMode
// Il2CppName: get_DateTimeMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataSetDateTime (System::Data::Common::DataStorage::*)()>(&System::Data::Common::DataStorage::get_DateTimeMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "get_DateTimeMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::get_FormatProvider
// Il2CppName: get_FormatProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IFormatProvider* (System::Data::Common::DataStorage::*)()>(&System::Data::Common::DataStorage::get_FormatProvider)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "get_FormatProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::Common::DataStorage::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::Common::DataStorage::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::Common::DataStorage::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Data::Common::DataStorage::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::Aggregate
// Il2CppName: Aggregate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::Common::DataStorage::*)(::ArrayW<int>, ::System::Data::AggregateType)>(&System::Data::Common::DataStorage::Aggregate)> {
  static const MethodInfo* get() {
    static auto* recordNos = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    static auto* kind = &::il2cpp_utils::GetClassFromName("System.Data", "AggregateType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "Aggregate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordNos, kind});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::AggregateCount
// Il2CppName: AggregateCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::Common::DataStorage::*)(::ArrayW<int>)>(&System::Data::Common::DataStorage::AggregateCount)> {
  static const MethodInfo* get() {
    static auto* recordNos = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "AggregateCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordNos});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::CompareBits
// Il2CppName: CompareBits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::Common::DataStorage::*)(int, int)>(&System::Data::Common::DataStorage::CompareBits)> {
  static const MethodInfo* get() {
    static auto* recordNo1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* recordNo2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "CompareBits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordNo1, recordNo2});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::Common::DataStorage::*)(int, int)>(&System::Data::Common::DataStorage::Compare)> {
  static const MethodInfo* get() {
    static auto* recordNo1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* recordNo2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordNo1, recordNo2});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::CompareValueTo
// Il2CppName: CompareValueTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::Common::DataStorage::*)(int, ::Il2CppObject*)>(&System::Data::Common::DataStorage::CompareValueTo)> {
  static const MethodInfo* get() {
    static auto* recordNo1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "CompareValueTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordNo1, value});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::ConvertValue
// Il2CppName: ConvertValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::Common::DataStorage::*)(::Il2CppObject*)>(&System::Data::Common::DataStorage::ConvertValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "ConvertValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::CopyBits
// Il2CppName: CopyBits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::Common::DataStorage::*)(int, int)>(&System::Data::Common::DataStorage::CopyBits)> {
  static const MethodInfo* get() {
    static auto* srcRecordNo = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* dstRecordNo = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "CopyBits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{srcRecordNo, dstRecordNo});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::Common::DataStorage::*)(int, int)>(&System::Data::Common::DataStorage::Copy)> {
  static const MethodInfo* get() {
    static auto* recordNo1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* recordNo2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordNo1, recordNo2});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::Common::DataStorage::*)(int)>(&System::Data::Common::DataStorage::Get)> {
  static const MethodInfo* get() {
    static auto* recordNo = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordNo});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::GetBits
// Il2CppName: GetBits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::Common::DataStorage::*)(int)>(&System::Data::Common::DataStorage::GetBits)> {
  static const MethodInfo* get() {
    static auto* recordNo = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "GetBits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordNo});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::GetStringLength
// Il2CppName: GetStringLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::Common::DataStorage::*)(int)>(&System::Data::Common::DataStorage::GetStringLength)> {
  static const MethodInfo* get() {
    static auto* record = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "GetStringLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{record});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::HasValue
// Il2CppName: HasValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::Common::DataStorage::*)(int)>(&System::Data::Common::DataStorage::HasValue)> {
  static const MethodInfo* get() {
    static auto* recordNo = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "HasValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordNo});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::IsNull
// Il2CppName: IsNull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::Common::DataStorage::*)(int)>(&System::Data::Common::DataStorage::IsNull)> {
  static const MethodInfo* get() {
    static auto* recordNo = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "IsNull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordNo});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::Common::DataStorage::*)(int, ::Il2CppObject*)>(&System::Data::Common::DataStorage::Set)> {
  static const MethodInfo* get() {
    static auto* recordNo = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordNo, value});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::SetNullBit
// Il2CppName: SetNullBit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::Common::DataStorage::*)(int, bool)>(&System::Data::Common::DataStorage::SetNullBit)> {
  static const MethodInfo* get() {
    static auto* recordNo = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* flag = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "SetNullBit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordNo, flag});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::SetCapacity
// Il2CppName: SetCapacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::Common::DataStorage::*)(int)>(&System::Data::Common::DataStorage::SetCapacity)> {
  static const MethodInfo* get() {
    static auto* capacity = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "SetCapacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{capacity});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::ConvertXmlToObject
// Il2CppName: ConvertXmlToObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::Common::DataStorage::*)(::StringW)>(&System::Data::Common::DataStorage::ConvertXmlToObject)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "ConvertXmlToObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::ConvertXmlToObject
// Il2CppName: ConvertXmlToObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::Common::DataStorage::*)(::System::Xml::XmlReader*, ::System::Xml::Serialization::XmlRootAttribute*)>(&System::Data::Common::DataStorage::ConvertXmlToObject)> {
  static const MethodInfo* get() {
    static auto* xmlReader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    static auto* xmlAttrib = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlRootAttribute")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "ConvertXmlToObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{xmlReader, xmlAttrib});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::ConvertObjectToXml
// Il2CppName: ConvertObjectToXml
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::Common::DataStorage::*)(::Il2CppObject*)>(&System::Data::Common::DataStorage::ConvertObjectToXml)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "ConvertObjectToXml", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::ConvertObjectToXml
// Il2CppName: ConvertObjectToXml
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::Common::DataStorage::*)(::Il2CppObject*, ::System::Xml::XmlWriter*, ::System::Xml::Serialization::XmlRootAttribute*)>(&System::Data::Common::DataStorage::ConvertObjectToXml)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* xmlWriter = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlWriter")->byval_arg;
    static auto* xmlAttrib = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlRootAttribute")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "ConvertObjectToXml", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, xmlWriter, xmlAttrib});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::CreateStorage
// Il2CppName: CreateStorage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::Common::DataStorage* (*)(::System::Data::DataColumn*, ::System::Type*, ::System::Data::Common::StorageType)>(&System::Data::Common::DataStorage::CreateStorage)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("System.Data", "DataColumn")->byval_arg;
    static auto* dataType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* typeCode = &::il2cpp_utils::GetClassFromName("System.Data.Common", "StorageType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "CreateStorage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column, dataType, typeCode});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::GetStorageType
// Il2CppName: GetStorageType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::Common::StorageType (*)(::System::Type*)>(&System::Data::Common::DataStorage::GetStorageType)> {
  static const MethodInfo* get() {
    static auto* dataType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "GetStorageType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dataType});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::GetTypeStorage
// Il2CppName: GetTypeStorage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (*)(::System::Data::Common::StorageType)>(&System::Data::Common::DataStorage::GetTypeStorage)> {
  static const MethodInfo* get() {
    static auto* storageType = &::il2cpp_utils::GetClassFromName("System.Data.Common", "StorageType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "GetTypeStorage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{storageType});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::IsTypeCustomType
// Il2CppName: IsTypeCustomType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Type*)>(&System::Data::Common::DataStorage::IsTypeCustomType)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "IsTypeCustomType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::IsTypeCustomType
// Il2CppName: IsTypeCustomType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Data::Common::StorageType)>(&System::Data::Common::DataStorage::IsTypeCustomType)> {
  static const MethodInfo* get() {
    static auto* typeCode = &::il2cpp_utils::GetClassFromName("System.Data.Common", "StorageType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "IsTypeCustomType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeCode});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::IsSqlType
// Il2CppName: IsSqlType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Data::Common::StorageType)>(&System::Data::Common::DataStorage::IsSqlType)> {
  static const MethodInfo* get() {
    static auto* storageType = &::il2cpp_utils::GetClassFromName("System.Data.Common", "StorageType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "IsSqlType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{storageType});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::IsSqlType
// Il2CppName: IsSqlType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Type*)>(&System::Data::Common::DataStorage::IsSqlType)> {
  static const MethodInfo* get() {
    static auto* dataType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "IsSqlType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dataType});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::DetermineIfValueType
// Il2CppName: DetermineIfValueType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Data::Common::StorageType, ::System::Type*)>(&System::Data::Common::DataStorage::DetermineIfValueType)> {
  static const MethodInfo* get() {
    static auto* typeCode = &::il2cpp_utils::GetClassFromName("System.Data.Common", "StorageType")->byval_arg;
    static auto* dataType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "DetermineIfValueType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeCode, dataType});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::ImplementsInterfaces
// Il2CppName: ImplementsInterfaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Data::Common::StorageType, ::System::Type*, ByRef<bool>, ByRef<bool>, ByRef<bool>, ByRef<bool>, ByRef<bool>)>(&System::Data::Common::DataStorage::ImplementsInterfaces)> {
  static const MethodInfo* get() {
    static auto* typeCode = &::il2cpp_utils::GetClassFromName("System.Data.Common", "StorageType")->byval_arg;
    static auto* dataType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* sqlType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    static auto* nullable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    static auto* xmlSerializable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    static auto* changeTracking = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    static auto* revertibleChangeTracking = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "ImplementsInterfaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeCode, dataType, sqlType, nullable, xmlSerializable, changeTracking, revertibleChangeTracking});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::InspectTypeForInterfaces
// Il2CppName: InspectTypeForInterfaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Tuple_4<bool, bool, bool, bool>* (*)(::System::Type*)>(&System::Data::Common::DataStorage::InspectTypeForInterfaces)> {
  static const MethodInfo* get() {
    static auto* dataType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "InspectTypeForInterfaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dataType});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::ImplementsINullableValue
// Il2CppName: ImplementsINullableValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Data::Common::StorageType, ::System::Type*)>(&System::Data::Common::DataStorage::ImplementsINullableValue)> {
  static const MethodInfo* get() {
    static auto* typeCode = &::il2cpp_utils::GetClassFromName("System.Data.Common", "StorageType")->byval_arg;
    static auto* dataType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "ImplementsINullableValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeCode, dataType});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::IsObjectNull
// Il2CppName: IsObjectNull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppObject*)>(&System::Data::Common::DataStorage::IsObjectNull)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "IsObjectNull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::IsObjectSqlNull
// Il2CppName: IsObjectSqlNull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppObject*)>(&System::Data::Common::DataStorage::IsObjectSqlNull)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "IsObjectSqlNull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::GetEmptyStorageInternal
// Il2CppName: GetEmptyStorageInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::Common::DataStorage::*)(int)>(&System::Data::Common::DataStorage::GetEmptyStorageInternal)> {
  static const MethodInfo* get() {
    static auto* recordCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "GetEmptyStorageInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordCount});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::CopyValueInternal
// Il2CppName: CopyValueInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::Common::DataStorage::*)(int, ::Il2CppObject*, ::System::Collections::BitArray*, int)>(&System::Data::Common::DataStorage::CopyValueInternal)> {
  static const MethodInfo* get() {
    static auto* record = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* store = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* nullbits = &::il2cpp_utils::GetClassFromName("System.Collections", "BitArray")->byval_arg;
    static auto* storeIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "CopyValueInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{record, store, nullbits, storeIndex});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::SetStorageInternal
// Il2CppName: SetStorageInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::Common::DataStorage::*)(::Il2CppObject*, ::System::Collections::BitArray*)>(&System::Data::Common::DataStorage::SetStorageInternal)> {
  static const MethodInfo* get() {
    static auto* store = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* nullbits = &::il2cpp_utils::GetClassFromName("System.Collections", "BitArray")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "SetStorageInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{store, nullbits});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::GetEmptyStorage
// Il2CppName: GetEmptyStorage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::Common::DataStorage::*)(int)>(&System::Data::Common::DataStorage::GetEmptyStorage)> {
  static const MethodInfo* get() {
    static auto* recordCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "GetEmptyStorage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordCount});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::CopyValue
// Il2CppName: CopyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::Common::DataStorage::*)(int, ::Il2CppObject*, ::System::Collections::BitArray*, int)>(&System::Data::Common::DataStorage::CopyValue)> {
  static const MethodInfo* get() {
    static auto* record = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* store = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* nullbits = &::il2cpp_utils::GetClassFromName("System.Collections", "BitArray")->byval_arg;
    static auto* storeIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "CopyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{record, store, nullbits, storeIndex});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::SetStorage
// Il2CppName: SetStorage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::Common::DataStorage::*)(::Il2CppObject*, ::System::Collections::BitArray*)>(&System::Data::Common::DataStorage::SetStorage)> {
  static const MethodInfo* get() {
    static auto* store = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* nullbits = &::il2cpp_utils::GetClassFromName("System.Collections", "BitArray")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "SetStorage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{store, nullbits});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::SetNullStorage
// Il2CppName: SetNullStorage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::Common::DataStorage::*)(::System::Collections::BitArray*)>(&System::Data::Common::DataStorage::SetNullStorage)> {
  static const MethodInfo* get() {
    static auto* nullbits = &::il2cpp_utils::GetClassFromName("System.Collections", "BitArray")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "SetNullStorage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nullbits});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::GetType
// Il2CppName: GetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (*)(::StringW)>(&System::Data::Common::DataStorage::GetType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "GetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::Common::DataStorage::GetQualifiedName
// Il2CppName: GetQualifiedName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::Type*)>(&System::Data::Common::DataStorage::GetQualifiedName)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::DataStorage*), "GetQualifiedName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
