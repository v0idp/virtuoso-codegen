// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: TypeConverter
  class TypeConverter;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlAttributeCollection
  class XmlAttributeCollection;
  // Forward declaring type: XmlNode
  class XmlNode;
  // Forward declaring type: XmlElement
  class XmlElement;
}
// Forward declaring namespace: System::Data
namespace System::Data {
  // Forward declaring type: DataTable
  class DataTable;
}
// Completed forward declares
// Type namespace: System.Data
namespace System::Data {
  // Forward declaring type: XMLSchema
  class XMLSchema;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::XMLSchema);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::XMLSchema*, "System.Data", "XMLSchema");
// Type namespace: System.Data
namespace System::Data {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.XMLSchema
  // [TokenAttribute] Offset: FFFFFFFF
  class XMLSchema : public ::Il2CppObject {
    public:
    // static System.ComponentModel.TypeConverter GetConverter(System.Type type)
    // Offset: 0x11C5048
    static ::System::ComponentModel::TypeConverter* GetConverter(::System::Type* type);
    // static System.Void SetProperties(System.Object instance, System.Xml.XmlAttributeCollection attrs)
    // Offset: 0x11C11A4
    static void SetProperties(::Il2CppObject* instance, ::System::Xml::XmlAttributeCollection* attrs);
    // static System.Boolean FEqualIdentity(System.Xml.XmlNode node, System.String name, System.String ns)
    // Offset: 0x11BEEB0
    static bool FEqualIdentity(::System::Xml::XmlNode* node, ::StringW name, ::StringW ns);
    // static System.Boolean GetBooleanAttribute(System.Xml.XmlElement element, System.String attrName, System.String attrNS, System.Boolean defVal)
    // Offset: 0x11C50AC
    static bool GetBooleanAttribute(::System::Xml::XmlElement* element, ::StringW attrName, ::StringW attrNS, bool defVal);
    // static System.String GenUniqueColumnName(System.String proposedName, System.Data.DataTable table)
    // Offset: 0x11C0CCC
    static ::StringW GenUniqueColumnName(::StringW proposedName, ::System::Data::DataTable* table);
    // public System.Void .ctor()
    // Offset: 0x11BEC90
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XMLSchema* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLSchema::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XMLSchema*, creationType>()));
    }
  }; // System.Data.XMLSchema
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::XMLSchema::GetConverter
// Il2CppName: GetConverter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::TypeConverter* (*)(::System::Type*)>(&System::Data::XMLSchema::GetConverter)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::XMLSchema*), "GetConverter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: System::Data::XMLSchema::SetProperties
// Il2CppName: SetProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::System::Xml::XmlAttributeCollection*)>(&System::Data::XMLSchema::SetProperties)> {
  static const MethodInfo* get() {
    static auto* instance = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* attrs = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlAttributeCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::XMLSchema*), "SetProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instance, attrs});
  }
};
// Writing MetadataGetter for method: System::Data::XMLSchema::FEqualIdentity
// Il2CppName: FEqualIdentity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Xml::XmlNode*, ::StringW, ::StringW)>(&System::Data::XMLSchema::FEqualIdentity)> {
  static const MethodInfo* get() {
    static auto* node = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlNode")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ns = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::XMLSchema*), "FEqualIdentity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{node, name, ns});
  }
};
// Writing MetadataGetter for method: System::Data::XMLSchema::GetBooleanAttribute
// Il2CppName: GetBooleanAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Xml::XmlElement*, ::StringW, ::StringW, bool)>(&System::Data::XMLSchema::GetBooleanAttribute)> {
  static const MethodInfo* get() {
    static auto* element = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlElement")->byval_arg;
    static auto* attrName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* attrNS = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* defVal = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::XMLSchema*), "GetBooleanAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{element, attrName, attrNS, defVal});
  }
};
// Writing MetadataGetter for method: System::Data::XMLSchema::GenUniqueColumnName
// Il2CppName: GenUniqueColumnName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::System::Data::DataTable*)>(&System::Data::XMLSchema::GenUniqueColumnName)> {
  static const MethodInfo* get() {
    static auto* proposedName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* table = &::il2cpp_utils::GetClassFromName("System.Data", "DataTable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::XMLSchema*), "GenUniqueColumnName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{proposedName, table});
  }
};
// Writing MetadataGetter for method: System::Data::XMLSchema::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
