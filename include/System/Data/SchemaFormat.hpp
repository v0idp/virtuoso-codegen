// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System.Data
namespace System::Data {
  // Forward declaring type: SchemaFormat
  struct SchemaFormat;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Data::SchemaFormat, "System.Data", "SchemaFormat");
// Type namespace: System.Data
namespace System::Data {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.SchemaFormat
  // [TokenAttribute] Offset: FFFFFFFF
  struct SchemaFormat/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: SchemaFormat
    constexpr SchemaFormat(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.Data.SchemaFormat Public
    static constexpr const int Public = 1;
    // Get static field: static public System.Data.SchemaFormat Public
    static ::System::Data::SchemaFormat _get_Public();
    // Set static field: static public System.Data.SchemaFormat Public
    static void _set_Public(::System::Data::SchemaFormat value);
    // static field const value: static public System.Data.SchemaFormat Remoting
    static constexpr const int Remoting = 2;
    // Get static field: static public System.Data.SchemaFormat Remoting
    static ::System::Data::SchemaFormat _get_Remoting();
    // Set static field: static public System.Data.SchemaFormat Remoting
    static void _set_Remoting(::System::Data::SchemaFormat value);
    // static field const value: static public System.Data.SchemaFormat WebService
    static constexpr const int WebService = 3;
    // Get static field: static public System.Data.SchemaFormat WebService
    static ::System::Data::SchemaFormat _get_WebService();
    // Set static field: static public System.Data.SchemaFormat WebService
    static void _set_WebService(::System::Data::SchemaFormat value);
    // static field const value: static public System.Data.SchemaFormat RemotingSkipSchema
    static constexpr const int RemotingSkipSchema = 4;
    // Get static field: static public System.Data.SchemaFormat RemotingSkipSchema
    static ::System::Data::SchemaFormat _get_RemotingSkipSchema();
    // Set static field: static public System.Data.SchemaFormat RemotingSkipSchema
    static void _set_RemotingSkipSchema(::System::Data::SchemaFormat value);
    // static field const value: static public System.Data.SchemaFormat WebServiceSkipSchema
    static constexpr const int WebServiceSkipSchema = 5;
    // Get static field: static public System.Data.SchemaFormat WebServiceSkipSchema
    static ::System::Data::SchemaFormat _get_WebServiceSkipSchema();
    // Set static field: static public System.Data.SchemaFormat WebServiceSkipSchema
    static void _set_WebServiceSkipSchema(::System::Data::SchemaFormat value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // System.Data.SchemaFormat
  #pragma pack(pop)
  static check_size<sizeof(SchemaFormat), 0 + sizeof(int)> __System_Data_SchemaFormatSizeCheck;
  static_assert(sizeof(SchemaFormat) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
