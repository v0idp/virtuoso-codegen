// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Dynamic.BindingRestrictions
#include "System/Dynamic/BindingRestrictions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Linq::Expressions
namespace System::Linq::Expressions {
  // Forward declaring type: Expression
  class Expression;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Dynamic::BindingRestrictions::MergedRestriction);
DEFINE_IL2CPP_ARG_TYPE(::System::Dynamic::BindingRestrictions::MergedRestriction*, "System.Dynamic", "BindingRestrictions/MergedRestriction");
// Type namespace: System.Dynamic
namespace System::Dynamic {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Dynamic.BindingRestrictions/System.Dynamic.MergedRestriction
  // [TokenAttribute] Offset: FFFFFFFF
  class BindingRestrictions::MergedRestriction : public ::System::Dynamic::BindingRestrictions {
    public:
    public:
    // readonly System.Dynamic.BindingRestrictions Left
    // Size: 0x8
    // Offset: 0x10
    ::System::Dynamic::BindingRestrictions* Left;
    // Field size check
    static_assert(sizeof(::System::Dynamic::BindingRestrictions*) == 0x8);
    // readonly System.Dynamic.BindingRestrictions Right
    // Size: 0x8
    // Offset: 0x18
    ::System::Dynamic::BindingRestrictions* Right;
    // Field size check
    static_assert(sizeof(::System::Dynamic::BindingRestrictions*) == 0x8);
    public:
    // Get instance field reference: readonly System.Dynamic.BindingRestrictions Left
    [[deprecated("Use field access instead!")]] ::System::Dynamic::BindingRestrictions*& dyn_Left();
    // Get instance field reference: readonly System.Dynamic.BindingRestrictions Right
    [[deprecated("Use field access instead!")]] ::System::Dynamic::BindingRestrictions*& dyn_Right();
    // System.Void .ctor(System.Dynamic.BindingRestrictions left, System.Dynamic.BindingRestrictions right)
    // Offset: 0xEA5F58
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BindingRestrictions::MergedRestriction* New_ctor(::System::Dynamic::BindingRestrictions* left, ::System::Dynamic::BindingRestrictions* right) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Dynamic::BindingRestrictions::MergedRestriction::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BindingRestrictions::MergedRestriction*, creationType>(left, right)));
    }
    // override System.Linq.Expressions.Expression GetExpression()
    // Offset: 0xEA5FD4
    // Implemented from: System.Dynamic.BindingRestrictions
    // Base method: System.Linq.Expressions.Expression BindingRestrictions::GetExpression()
    ::System::Linq::Expressions::Expression* GetExpression();
  }; // System.Dynamic.BindingRestrictions/System.Dynamic.MergedRestriction
  #pragma pack(pop)
  static check_size<sizeof(BindingRestrictions::MergedRestriction), 24 + sizeof(::System::Dynamic::BindingRestrictions*)> __System_Dynamic_BindingRestrictions_MergedRestrictionSizeCheck;
  static_assert(sizeof(BindingRestrictions::MergedRestriction) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Dynamic::BindingRestrictions::MergedRestriction::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Dynamic::BindingRestrictions::MergedRestriction::GetExpression
// Il2CppName: GetExpression
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Linq::Expressions::Expression* (System::Dynamic::BindingRestrictions::MergedRestriction::*)()>(&System::Dynamic::BindingRestrictions::MergedRestriction::GetExpression)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::BindingRestrictions::MergedRestriction*), "GetExpression", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
