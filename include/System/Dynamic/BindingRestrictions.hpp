// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Dynamic
namespace System::Dynamic {
  // Forward declaring type: DynamicMetaObject
  class DynamicMetaObject;
}
// Forward declaring namespace: System::Linq::Expressions
namespace System::Linq::Expressions {
  // Forward declaring type: Expression
  class Expression;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: System.Dynamic
namespace System::Dynamic {
  // Forward declaring type: BindingRestrictions
  class BindingRestrictions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Dynamic::BindingRestrictions);
DEFINE_IL2CPP_ARG_TYPE(::System::Dynamic::BindingRestrictions*, "System.Dynamic", "BindingRestrictions");
// Type namespace: System.Dynamic
namespace System::Dynamic {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Dynamic.BindingRestrictions
  // [TokenAttribute] Offset: FFFFFFFF
  // [DebuggerDisplayAttribute] Offset: 6A18B0
  // [DebuggerTypeProxyAttribute] Offset: 6A18B0
  class BindingRestrictions : public ::Il2CppObject {
    public:
    // Nested type: ::System::Dynamic::BindingRestrictions::TestBuilder
    class TestBuilder;
    // Nested type: ::System::Dynamic::BindingRestrictions::MergedRestriction
    class MergedRestriction;
    // Nested type: ::System::Dynamic::BindingRestrictions::CustomRestriction
    class CustomRestriction;
    // Nested type: ::System::Dynamic::BindingRestrictions::TypeRestriction
    class TypeRestriction;
    // Nested type: ::System::Dynamic::BindingRestrictions::InstanceRestriction
    class InstanceRestriction;
    // Nested type: ::System::Dynamic::BindingRestrictions::BindingRestrictionsProxy
    class BindingRestrictionsProxy;
    // Get static field: static public readonly System.Dynamic.BindingRestrictions Empty
    static ::System::Dynamic::BindingRestrictions* _get_Empty();
    // Set static field: static public readonly System.Dynamic.BindingRestrictions Empty
    static void _set_Empty(::System::Dynamic::BindingRestrictions* value);
    // private System.Void .ctor()
    // Offset: 0x11F3FA0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BindingRestrictions* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Dynamic::BindingRestrictions::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BindingRestrictions*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x11F4354
    static void _cctor();
    // System.Linq.Expressions.Expression GetExpression()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Linq::Expressions::Expression* GetExpression();
    // public System.Dynamic.BindingRestrictions Merge(System.Dynamic.BindingRestrictions restrictions)
    // Offset: 0x11F3FA8
    ::System::Dynamic::BindingRestrictions* Merge(::System::Dynamic::BindingRestrictions* restrictions);
    // static public System.Dynamic.BindingRestrictions GetTypeRestriction(System.Linq.Expressions.Expression expression, System.Type type)
    // Offset: 0x11F40FC
    static ::System::Dynamic::BindingRestrictions* GetTypeRestriction(::System::Linq::Expressions::Expression* expression, ::System::Type* type);
    // static System.Dynamic.BindingRestrictions GetTypeRestriction(System.Dynamic.DynamicMetaObject obj)
    // Offset: 0x11F41AC
    static ::System::Dynamic::BindingRestrictions* GetTypeRestriction(::System::Dynamic::DynamicMetaObject* obj);
    // static public System.Dynamic.BindingRestrictions GetInstanceRestriction(System.Linq.Expressions.Expression expression, System.Object instance)
    // Offset: 0x11F4274
    static ::System::Dynamic::BindingRestrictions* GetInstanceRestriction(::System::Linq::Expressions::Expression* expression, ::Il2CppObject* instance);
    // public System.Linq.Expressions.Expression ToExpression()
    // Offset: 0x11F4348
    ::System::Linq::Expressions::Expression* ToExpression();
  }; // System.Dynamic.BindingRestrictions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Dynamic::BindingRestrictions::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Dynamic::BindingRestrictions::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Dynamic::BindingRestrictions::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::BindingRestrictions*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::BindingRestrictions::GetExpression
// Il2CppName: GetExpression
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Linq::Expressions::Expression* (System::Dynamic::BindingRestrictions::*)()>(&System::Dynamic::BindingRestrictions::GetExpression)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::BindingRestrictions*), "GetExpression", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::BindingRestrictions::Merge
// Il2CppName: Merge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::BindingRestrictions* (System::Dynamic::BindingRestrictions::*)(::System::Dynamic::BindingRestrictions*)>(&System::Dynamic::BindingRestrictions::Merge)> {
  static const MethodInfo* get() {
    static auto* restrictions = &::il2cpp_utils::GetClassFromName("System.Dynamic", "BindingRestrictions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::BindingRestrictions*), "Merge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{restrictions});
  }
};
// Writing MetadataGetter for method: System::Dynamic::BindingRestrictions::GetTypeRestriction
// Il2CppName: GetTypeRestriction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::BindingRestrictions* (*)(::System::Linq::Expressions::Expression*, ::System::Type*)>(&System::Dynamic::BindingRestrictions::GetTypeRestriction)> {
  static const MethodInfo* get() {
    static auto* expression = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions", "Expression")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::BindingRestrictions*), "GetTypeRestriction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{expression, type});
  }
};
// Writing MetadataGetter for method: System::Dynamic::BindingRestrictions::GetTypeRestriction
// Il2CppName: GetTypeRestriction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::BindingRestrictions* (*)(::System::Dynamic::DynamicMetaObject*)>(&System::Dynamic::BindingRestrictions::GetTypeRestriction)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System.Dynamic", "DynamicMetaObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::BindingRestrictions*), "GetTypeRestriction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: System::Dynamic::BindingRestrictions::GetInstanceRestriction
// Il2CppName: GetInstanceRestriction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::BindingRestrictions* (*)(::System::Linq::Expressions::Expression*, ::Il2CppObject*)>(&System::Dynamic::BindingRestrictions::GetInstanceRestriction)> {
  static const MethodInfo* get() {
    static auto* expression = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions", "Expression")->byval_arg;
    static auto* instance = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::BindingRestrictions*), "GetInstanceRestriction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{expression, instance});
  }
};
// Writing MetadataGetter for method: System::Dynamic::BindingRestrictions::ToExpression
// Il2CppName: ToExpression
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Linq::Expressions::Expression* (System::Dynamic::BindingRestrictions::*)()>(&System::Dynamic::BindingRestrictions::ToExpression)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::BindingRestrictions*), "ToExpression", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
