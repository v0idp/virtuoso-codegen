// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Dynamic.ExpandoObject
#include "System/Dynamic/ExpandoObject.hpp"
// Including type: System.Dynamic.DynamicMetaObject
#include "System/Dynamic/DynamicMetaObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Dynamic
namespace System::Dynamic {
  // Forward declaring type: DynamicMetaObjectBinder
  class DynamicMetaObjectBinder;
  // Forward declaring type: ExpandoClass
  class ExpandoClass;
  // Forward declaring type: BindingRestrictions
  class BindingRestrictions;
  // Forward declaring type: GetMemberBinder
  class GetMemberBinder;
  // Forward declaring type: SetMemberBinder
  class SetMemberBinder;
}
// Forward declaring namespace: System::Linq::Expressions
namespace System::Linq::Expressions {
  // Forward declaring type: Expression
  class Expression;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Dynamic::ExpandoObject::MetaExpando);
DEFINE_IL2CPP_ARG_TYPE(::System::Dynamic::ExpandoObject::MetaExpando*, "System.Dynamic", "ExpandoObject/MetaExpando");
// Type namespace: System.Dynamic
namespace System::Dynamic {
  // Size: 0x29
  #pragma pack(push, 1)
  // Autogenerated type: System.Dynamic.ExpandoObject/System.Dynamic.MetaExpando
  // [TokenAttribute] Offset: FFFFFFFF
  class ExpandoObject::MetaExpando : public ::System::Dynamic::DynamicMetaObject {
    public:
    // Nested type: ::System::Dynamic::ExpandoObject::MetaExpando::$GetDynamicMemberNames$d__6
    class $GetDynamicMemberNames$d__6;
    // public System.Dynamic.ExpandoObject get_Value()
    // Offset: 0x16A3BCC
    ::System::Dynamic::ExpandoObject* get_Value();
    // public System.Void .ctor(System.Linq.Expressions.Expression expression, System.Dynamic.ExpandoObject value)
    // Offset: 0x16A34D8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ExpandoObject::MetaExpando* New_ctor(::System::Linq::Expressions::Expression* expression, ::System::Dynamic::ExpandoObject* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Dynamic::ExpandoObject::MetaExpando::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ExpandoObject::MetaExpando*, creationType>(expression, value)));
    }
    // private System.Dynamic.DynamicMetaObject BindGetOrInvokeMember(System.Dynamic.DynamicMetaObjectBinder binder, System.String name, System.Boolean ignoreCase, System.Dynamic.DynamicMetaObject fallback, System.Func`2<System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject> fallbackInvoke)
    // Offset: 0x16A3594
    ::System::Dynamic::DynamicMetaObject* BindGetOrInvokeMember(::System::Dynamic::DynamicMetaObjectBinder* binder, ::StringW name, bool ignoreCase, ::System::Dynamic::DynamicMetaObject* fallback, ::System::Func_2<::System::Dynamic::DynamicMetaObject*, ::System::Dynamic::DynamicMetaObject*>* fallbackInvoke);
    // private System.Dynamic.DynamicMetaObject AddDynamicTestAndDefer(System.Dynamic.DynamicMetaObjectBinder binder, System.Dynamic.ExpandoClass klass, System.Dynamic.ExpandoClass originalClass, System.Dynamic.DynamicMetaObject succeeds)
    // Offset: 0x16A3CF4
    ::System::Dynamic::DynamicMetaObject* AddDynamicTestAndDefer(::System::Dynamic::DynamicMetaObjectBinder* binder, ::System::Dynamic::ExpandoClass* klass, ::System::Dynamic::ExpandoClass* originalClass, ::System::Dynamic::DynamicMetaObject* succeeds);
    // private System.Dynamic.ExpandoClass GetClassEnsureIndex(System.String name, System.Boolean caseInsensitive, System.Dynamic.ExpandoObject obj, out System.Dynamic.ExpandoClass klass, out System.Int32 index)
    // Offset: 0x16A44A4
    ::System::Dynamic::ExpandoClass* GetClassEnsureIndex(::StringW name, bool caseInsensitive, ::System::Dynamic::ExpandoObject* obj, ByRef<::System::Dynamic::ExpandoClass*> klass, ByRef<int> index);
    // private System.Linq.Expressions.Expression GetLimitedSelf()
    // Offset: 0x16A3C2C
    ::System::Linq::Expressions::Expression* GetLimitedSelf();
    // private System.Dynamic.BindingRestrictions GetRestrictions()
    // Offset: 0x16A460C
    ::System::Dynamic::BindingRestrictions* GetRestrictions();
    // public override System.Dynamic.DynamicMetaObject BindGetMember(System.Dynamic.GetMemberBinder binder)
    // Offset: 0x16A3FF4
    // Implemented from: System.Dynamic.DynamicMetaObject
    // Base method: System.Dynamic.DynamicMetaObject DynamicMetaObject::BindGetMember(System.Dynamic.GetMemberBinder binder)
    ::System::Dynamic::DynamicMetaObject* BindGetMember(::System::Dynamic::GetMemberBinder* binder);
    // public override System.Dynamic.DynamicMetaObject BindSetMember(System.Dynamic.SetMemberBinder binder, System.Dynamic.DynamicMetaObject value)
    // Offset: 0x16A408C
    // Implemented from: System.Dynamic.DynamicMetaObject
    // Base method: System.Dynamic.DynamicMetaObject DynamicMetaObject::BindSetMember(System.Dynamic.SetMemberBinder binder, System.Dynamic.DynamicMetaObject value)
    ::System::Dynamic::DynamicMetaObject* BindSetMember(::System::Dynamic::SetMemberBinder* binder, ::System::Dynamic::DynamicMetaObject* value);
    // public override System.Collections.Generic.IEnumerable`1<System.String> GetDynamicMemberNames()
    // Offset: 0x16A4558
    // Implemented from: System.Dynamic.DynamicMetaObject
    // Base method: System.Collections.Generic.IEnumerable`1<System.String> DynamicMetaObject::GetDynamicMemberNames()
    ::System::Collections::Generic::IEnumerable_1<::StringW>* GetDynamicMemberNames();
  }; // System.Dynamic.ExpandoObject/System.Dynamic.MetaExpando
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::MetaExpando::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::ExpandoObject* (System::Dynamic::ExpandoObject::MetaExpando::*)()>(&System::Dynamic::ExpandoObject::MetaExpando::get_Value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject::MetaExpando*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::MetaExpando::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::MetaExpando::BindGetOrInvokeMember
// Il2CppName: BindGetOrInvokeMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (System::Dynamic::ExpandoObject::MetaExpando::*)(::System::Dynamic::DynamicMetaObjectBinder*, ::StringW, bool, ::System::Dynamic::DynamicMetaObject*, ::System::Func_2<::System::Dynamic::DynamicMetaObject*, ::System::Dynamic::DynamicMetaObject*>*)>(&System::Dynamic::ExpandoObject::MetaExpando::BindGetOrInvokeMember)> {
  static const MethodInfo* get() {
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Dynamic", "DynamicMetaObjectBinder")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* fallback = &::il2cpp_utils::GetClassFromName("System.Dynamic", "DynamicMetaObject")->byval_arg;
    static auto* fallbackInvoke = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System.Dynamic", "DynamicMetaObject"), ::il2cpp_utils::GetClassFromName("System.Dynamic", "DynamicMetaObject")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject::MetaExpando*), "BindGetOrInvokeMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binder, name, ignoreCase, fallback, fallbackInvoke});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::MetaExpando::AddDynamicTestAndDefer
// Il2CppName: AddDynamicTestAndDefer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (System::Dynamic::ExpandoObject::MetaExpando::*)(::System::Dynamic::DynamicMetaObjectBinder*, ::System::Dynamic::ExpandoClass*, ::System::Dynamic::ExpandoClass*, ::System::Dynamic::DynamicMetaObject*)>(&System::Dynamic::ExpandoObject::MetaExpando::AddDynamicTestAndDefer)> {
  static const MethodInfo* get() {
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Dynamic", "DynamicMetaObjectBinder")->byval_arg;
    static auto* klass = &::il2cpp_utils::GetClassFromName("System.Dynamic", "ExpandoClass")->byval_arg;
    static auto* originalClass = &::il2cpp_utils::GetClassFromName("System.Dynamic", "ExpandoClass")->byval_arg;
    static auto* succeeds = &::il2cpp_utils::GetClassFromName("System.Dynamic", "DynamicMetaObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject::MetaExpando*), "AddDynamicTestAndDefer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binder, klass, originalClass, succeeds});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::MetaExpando::GetClassEnsureIndex
// Il2CppName: GetClassEnsureIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::ExpandoClass* (System::Dynamic::ExpandoObject::MetaExpando::*)(::StringW, bool, ::System::Dynamic::ExpandoObject*, ByRef<::System::Dynamic::ExpandoClass*>, ByRef<int>)>(&System::Dynamic::ExpandoObject::MetaExpando::GetClassEnsureIndex)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* caseInsensitive = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System.Dynamic", "ExpandoObject")->byval_arg;
    static auto* klass = &::il2cpp_utils::GetClassFromName("System.Dynamic", "ExpandoClass")->this_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject::MetaExpando*), "GetClassEnsureIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, caseInsensitive, obj, klass, index});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::MetaExpando::GetLimitedSelf
// Il2CppName: GetLimitedSelf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Linq::Expressions::Expression* (System::Dynamic::ExpandoObject::MetaExpando::*)()>(&System::Dynamic::ExpandoObject::MetaExpando::GetLimitedSelf)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject::MetaExpando*), "GetLimitedSelf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::MetaExpando::GetRestrictions
// Il2CppName: GetRestrictions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::BindingRestrictions* (System::Dynamic::ExpandoObject::MetaExpando::*)()>(&System::Dynamic::ExpandoObject::MetaExpando::GetRestrictions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject::MetaExpando*), "GetRestrictions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::MetaExpando::BindGetMember
// Il2CppName: BindGetMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (System::Dynamic::ExpandoObject::MetaExpando::*)(::System::Dynamic::GetMemberBinder*)>(&System::Dynamic::ExpandoObject::MetaExpando::BindGetMember)> {
  static const MethodInfo* get() {
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Dynamic", "GetMemberBinder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject::MetaExpando*), "BindGetMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binder});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::MetaExpando::BindSetMember
// Il2CppName: BindSetMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (System::Dynamic::ExpandoObject::MetaExpando::*)(::System::Dynamic::SetMemberBinder*, ::System::Dynamic::DynamicMetaObject*)>(&System::Dynamic::ExpandoObject::MetaExpando::BindSetMember)> {
  static const MethodInfo* get() {
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Dynamic", "SetMemberBinder")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Dynamic", "DynamicMetaObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject::MetaExpando*), "BindSetMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binder, value});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::MetaExpando::GetDynamicMemberNames
// Il2CppName: GetDynamicMemberNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::StringW>* (System::Dynamic::ExpandoObject::MetaExpando::*)()>(&System::Dynamic::ExpandoObject::MetaExpando::GetDynamicMemberNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject::MetaExpando*), "GetDynamicMemberNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
