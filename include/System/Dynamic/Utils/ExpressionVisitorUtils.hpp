// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Linq::Expressions
namespace System::Linq::Expressions {
  // Forward declaring type: Expression
  class Expression;
  // Forward declaring type: ExpressionVisitor
  class ExpressionVisitor;
  // Forward declaring type: BlockExpression
  class BlockExpression;
  // Forward declaring type: ParameterExpression
  class ParameterExpression;
  // Forward declaring type: IParameterProvider
  class IParameterProvider;
  // Forward declaring type: IArgumentProvider
  class IArgumentProvider;
}
// Completed forward declares
// Type namespace: System.Dynamic.Utils
namespace System::Dynamic::Utils {
  // Forward declaring type: ExpressionVisitorUtils
  class ExpressionVisitorUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Dynamic::Utils::ExpressionVisitorUtils);
DEFINE_IL2CPP_ARG_TYPE(::System::Dynamic::Utils::ExpressionVisitorUtils*, "System.Dynamic.Utils", "ExpressionVisitorUtils");
// Type namespace: System.Dynamic.Utils
namespace System::Dynamic::Utils {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Dynamic.Utils.ExpressionVisitorUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class ExpressionVisitorUtils : public ::Il2CppObject {
    public:
    // static public System.Linq.Expressions.Expression[] VisitBlockExpressions(System.Linq.Expressions.ExpressionVisitor visitor, System.Linq.Expressions.BlockExpression block)
    // Offset: 0xF13D9C
    static ::ArrayW<::System::Linq::Expressions::Expression*> VisitBlockExpressions(::System::Linq::Expressions::ExpressionVisitor* visitor, ::System::Linq::Expressions::BlockExpression* block);
    // static public System.Linq.Expressions.ParameterExpression[] VisitParameters(System.Linq.Expressions.ExpressionVisitor visitor, System.Linq.Expressions.IParameterProvider nodes, System.String callerName)
    // Offset: 0xF13F4C
    static ::ArrayW<::System::Linq::Expressions::ParameterExpression*> VisitParameters(::System::Linq::Expressions::ExpressionVisitor* visitor, ::System::Linq::Expressions::IParameterProvider* nodes, ::StringW callerName);
    // static public System.Linq.Expressions.Expression[] VisitArguments(System.Linq.Expressions.ExpressionVisitor visitor, System.Linq.Expressions.IArgumentProvider nodes)
    // Offset: 0xF14224
    static ::ArrayW<::System::Linq::Expressions::Expression*> VisitArguments(::System::Linq::Expressions::ExpressionVisitor* visitor, ::System::Linq::Expressions::IArgumentProvider* nodes);
  }; // System.Dynamic.Utils.ExpressionVisitorUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Dynamic::Utils::ExpressionVisitorUtils::VisitBlockExpressions
// Il2CppName: VisitBlockExpressions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Linq::Expressions::Expression*> (*)(::System::Linq::Expressions::ExpressionVisitor*, ::System::Linq::Expressions::BlockExpression*)>(&System::Dynamic::Utils::ExpressionVisitorUtils::VisitBlockExpressions)> {
  static const MethodInfo* get() {
    static auto* visitor = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions", "ExpressionVisitor")->byval_arg;
    static auto* block = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions", "BlockExpression")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::Utils::ExpressionVisitorUtils*), "VisitBlockExpressions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{visitor, block});
  }
};
// Writing MetadataGetter for method: System::Dynamic::Utils::ExpressionVisitorUtils::VisitParameters
// Il2CppName: VisitParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Linq::Expressions::ParameterExpression*> (*)(::System::Linq::Expressions::ExpressionVisitor*, ::System::Linq::Expressions::IParameterProvider*, ::StringW)>(&System::Dynamic::Utils::ExpressionVisitorUtils::VisitParameters)> {
  static const MethodInfo* get() {
    static auto* visitor = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions", "ExpressionVisitor")->byval_arg;
    static auto* nodes = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions", "IParameterProvider")->byval_arg;
    static auto* callerName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::Utils::ExpressionVisitorUtils*), "VisitParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{visitor, nodes, callerName});
  }
};
// Writing MetadataGetter for method: System::Dynamic::Utils::ExpressionVisitorUtils::VisitArguments
// Il2CppName: VisitArguments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Linq::Expressions::Expression*> (*)(::System::Linq::Expressions::ExpressionVisitor*, ::System::Linq::Expressions::IArgumentProvider*)>(&System::Dynamic::Utils::ExpressionVisitorUtils::VisitArguments)> {
  static const MethodInfo* get() {
    static auto* visitor = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions", "ExpressionVisitor")->byval_arg;
    static auto* nodes = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions", "IArgumentProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::Utils::ExpressionVisitorUtils*), "VisitArguments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{visitor, nodes});
  }
};
