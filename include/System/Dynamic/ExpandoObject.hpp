// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Dynamic.IDynamicMetaObjectProvider
#include "System/Dynamic/IDynamicMetaObjectProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Dynamic
namespace System::Dynamic {
  // Forward declaring type: ExpandoClass
  class ExpandoClass;
  // Forward declaring type: DynamicMetaObject
  class DynamicMetaObject;
}
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: PropertyChangedEventHandler
  class PropertyChangedEventHandler;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MethodInfo
  class MethodInfo;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Skipping declaration: ICollection`1 because it is already included!
  // Forward declaring type: IEnumerator`1<T>
  template<typename T>
  class IEnumerator_1;
}
// Forward declaring namespace: System::Linq::Expressions
namespace System::Linq::Expressions {
  // Forward declaring type: Expression
  class Expression;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: System.Dynamic
namespace System::Dynamic {
  // Forward declaring type: ExpandoObject
  class ExpandoObject;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Dynamic::ExpandoObject);
DEFINE_IL2CPP_ARG_TYPE(::System::Dynamic::ExpandoObject*, "System.Dynamic", "ExpandoObject");
// Type namespace: System.Dynamic
namespace System::Dynamic {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: System.Dynamic.ExpandoObject
  // [TokenAttribute] Offset: FFFFFFFF
  class ExpandoObject : public ::Il2CppObject/*, public ::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>, public ::System::Dynamic::IDynamicMetaObjectProvider*/ {
    public:
    // Nested type: ::System::Dynamic::ExpandoObject::ValueCollectionDebugView
    class ValueCollectionDebugView;
    // Nested type: ::System::Dynamic::ExpandoObject::ValueCollection
    class ValueCollection;
    // Nested type: ::System::Dynamic::ExpandoObject::MetaExpando
    class MetaExpando;
    // Nested type: ::System::Dynamic::ExpandoObject::ExpandoData
    class ExpandoData;
    // Nested type: ::System::Dynamic::ExpandoObject::$GetExpandoEnumerator$d__51
    class $GetExpandoEnumerator$d__51;
    public:
    // readonly System.Object LockObject
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppObject* LockObject;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.Dynamic.ExpandoObject/System.Dynamic.ExpandoData _data
    // Size: 0x8
    // Offset: 0x18
    ::System::Dynamic::ExpandoObject::ExpandoData* data;
    // Field size check
    static_assert(sizeof(::System::Dynamic::ExpandoObject::ExpandoData*) == 0x8);
    // private System.Int32 _count
    // Size: 0x4
    // Offset: 0x20
    int count;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: count and: propertyChanged
    char __padding2[0x4] = {};
    // private System.ComponentModel.PropertyChangedEventHandler _propertyChanged
    // Size: 0x8
    // Offset: 0x28
    ::System::ComponentModel::PropertyChangedEventHandler* propertyChanged;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::PropertyChangedEventHandler*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>
    operator ::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>*>(this);
    }
    // Creating interface conversion operator: operator ::System::Dynamic::IDynamicMetaObjectProvider
    operator ::System::Dynamic::IDynamicMetaObjectProvider() noexcept {
      return *reinterpret_cast<::System::Dynamic::IDynamicMetaObjectProvider*>(this);
    }
    // Get static field: static private readonly System.Reflection.MethodInfo ExpandoTryGetValue
    static ::System::Reflection::MethodInfo* _get_ExpandoTryGetValue();
    // Set static field: static private readonly System.Reflection.MethodInfo ExpandoTryGetValue
    static void _set_ExpandoTryGetValue(::System::Reflection::MethodInfo* value);
    // Get static field: static private readonly System.Reflection.MethodInfo ExpandoTrySetValue
    static ::System::Reflection::MethodInfo* _get_ExpandoTrySetValue();
    // Set static field: static private readonly System.Reflection.MethodInfo ExpandoTrySetValue
    static void _set_ExpandoTrySetValue(::System::Reflection::MethodInfo* value);
    // Get static field: static private readonly System.Reflection.MethodInfo ExpandoTryDeleteValue
    static ::System::Reflection::MethodInfo* _get_ExpandoTryDeleteValue();
    // Set static field: static private readonly System.Reflection.MethodInfo ExpandoTryDeleteValue
    static void _set_ExpandoTryDeleteValue(::System::Reflection::MethodInfo* value);
    // Get static field: static private readonly System.Reflection.MethodInfo ExpandoPromoteClass
    static ::System::Reflection::MethodInfo* _get_ExpandoPromoteClass();
    // Set static field: static private readonly System.Reflection.MethodInfo ExpandoPromoteClass
    static void _set_ExpandoPromoteClass(::System::Reflection::MethodInfo* value);
    // Get static field: static private readonly System.Reflection.MethodInfo ExpandoCheckVersion
    static ::System::Reflection::MethodInfo* _get_ExpandoCheckVersion();
    // Set static field: static private readonly System.Reflection.MethodInfo ExpandoCheckVersion
    static void _set_ExpandoCheckVersion(::System::Reflection::MethodInfo* value);
    // Get static field: static readonly System.Object Uninitialized
    static ::Il2CppObject* _get_Uninitialized();
    // Set static field: static readonly System.Object Uninitialized
    static void _set_Uninitialized(::Il2CppObject* value);
    // Get instance field reference: readonly System.Object LockObject
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_LockObject();
    // Get instance field reference: private System.Dynamic.ExpandoObject/System.Dynamic.ExpandoData _data
    [[deprecated("Use field access instead!")]] ::System::Dynamic::ExpandoObject::ExpandoData*& dyn__data();
    // Get instance field reference: private System.Int32 _count
    [[deprecated("Use field access instead!")]] int& dyn__count();
    // Get instance field reference: private System.ComponentModel.PropertyChangedEventHandler _propertyChanged
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& dyn__propertyChanged();
    // System.Dynamic.ExpandoClass get_Class()
    // Offset: 0x15B6DE0
    ::System::Dynamic::ExpandoClass* get_Class();
    // private System.Collections.Generic.ICollection`1<System.Object> System.Collections.Generic.IDictionary<System.String,System.Object>.get_Values()
    // Offset: 0x15B7070
    ::System::Collections::Generic::ICollection_1<::Il2CppObject*>* System_Collections_Generic_IDictionary$System_String_System_Object$_get_Values();
    // private System.Object System.Collections.Generic.IDictionary<System.String,System.Object>.get_Item(System.String key)
    // Offset: 0x15B70D0
    ::Il2CppObject* System_Collections_Generic_IDictionary$System_String_System_Object$_get_Item(::StringW key);
    // private System.Void System.Collections.Generic.IDictionary<System.String,System.Object>.set_Item(System.String key, System.Object value)
    // Offset: 0x15B7138
    void System_Collections_Generic_IDictionary$System_String_System_Object$_set_Item(::StringW key, ::Il2CppObject* value);
    // private System.Int32 System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_Count()
    // Offset: 0x15B7280
    int System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_get_Count();
    // private System.Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_IsReadOnly()
    // Offset: 0x15B7288
    bool System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_get_IsReadOnly();
    // public System.Void .ctor()
    // Offset: 0x15B6468
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ExpandoObject* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Dynamic::ExpandoObject::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ExpandoObject*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x15B7AC8
    static void _cctor();
    // System.Boolean TryGetValue(System.Object indexClass, System.Int32 index, System.String name, System.Boolean ignoreCase, out System.Object value)
    // Offset: 0x15B650C
    bool TryGetValue(::Il2CppObject* indexClass, int index, ::StringW name, bool ignoreCase, ByRef<::Il2CppObject*> value);
    // System.Void TrySetValue(System.Object indexClass, System.Int32 index, System.Object value, System.String name, System.Boolean ignoreCase, System.Boolean add)
    // Offset: 0x15B6644
    void TrySetValue(::Il2CppObject* indexClass, int index, ::Il2CppObject* value, ::StringW name, bool ignoreCase, bool add);
    // System.Boolean TryDeleteValue(System.Object indexClass, System.Int32 index, System.String name, System.Boolean ignoreCase, System.Object deleteValue)
    // Offset: 0x15B6A10
    bool TryDeleteValue(::Il2CppObject* indexClass, int index, ::StringW name, bool ignoreCase, ::Il2CppObject* deleteValue);
    // System.Boolean IsDeletedMember(System.Int32 index)
    // Offset: 0x15B6D24
    bool IsDeletedMember(int index);
    // private System.Dynamic.ExpandoObject/System.Dynamic.ExpandoData PromoteClassCore(System.Dynamic.ExpandoClass oldClass, System.Dynamic.ExpandoClass newClass)
    // Offset: 0x15B69CC
    ::System::Dynamic::ExpandoObject::ExpandoData* PromoteClassCore(::System::Dynamic::ExpandoClass* oldClass, ::System::Dynamic::ExpandoClass* newClass);
    // System.Void PromoteClass(System.Object oldClass, System.Object newClass)
    // Offset: 0x15B6DFC
    void PromoteClass(::Il2CppObject* oldClass, ::Il2CppObject* newClass);
    // private System.Dynamic.DynamicMetaObject System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression parameter)
    // Offset: 0x15B6F68
    ::System::Dynamic::DynamicMetaObject* System_Dynamic_IDynamicMetaObjectProvider_GetMetaObject(::System::Linq::Expressions::Expression* parameter);
    // private System.Void TryAddMember(System.String key, System.Object value)
    // Offset: 0x15B6FD8
    void TryAddMember(::StringW key, ::Il2CppObject* value);
    // private System.Boolean TryGetValueForKey(System.String key, out System.Object value)
    // Offset: 0x15B7058
    bool TryGetValueForKey(::StringW key, ByRef<::Il2CppObject*> value);
    // private System.Void System.Collections.Generic.IDictionary<System.String,System.Object>.Add(System.String key, System.Object value)
    // Offset: 0x15B71B8
    void System_Collections_Generic_IDictionary$System_String_System_Object$_Add(::StringW key, ::Il2CppObject* value);
    // private System.Boolean System.Collections.Generic.IDictionary<System.String,System.Object>.Remove(System.String key)
    // Offset: 0x15B71BC
    bool System_Collections_Generic_IDictionary$System_String_System_Object$_Remove(::StringW key);
    // private System.Boolean System.Collections.Generic.IDictionary<System.String,System.Object>.TryGetValue(System.String key, out System.Object value)
    // Offset: 0x15B7268
    bool System_Collections_Generic_IDictionary$System_String_System_Object$_TryGetValue(::StringW key, ByRef<::Il2CppObject*> value);
    // private System.Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add(System.Collections.Generic.KeyValuePair`2<System.String,System.Object> item)
    // Offset: 0x15B7290
    void System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_Add(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*> item);
    // private System.Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Clear()
    // Offset: 0x15B72F4
    void System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_Clear();
    // private System.Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains(System.Collections.Generic.KeyValuePair`2<System.String,System.Object> item)
    // Offset: 0x15B7530
    bool System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_Contains(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*> item);
    // private System.Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo(System.Collections.Generic.KeyValuePair`2<System.String,System.Object>[] array, System.Int32 arrayIndex)
    // Offset: 0x15B75D0
    void System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*>> array, int arrayIndex);
    // private System.Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove(System.Collections.Generic.KeyValuePair`2<System.String,System.Object> item)
    // Offset: 0x15B799C
    bool System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_Remove(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*> item);
    // private System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<System.String,System.Object>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator()
    // Offset: 0x15B7A0C
    ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*>>* System_Collections_Generic_IEnumerable$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_GetEnumerator();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x15B7AAC
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // private System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<System.String,System.Object>> GetExpandoEnumerator(System.Dynamic.ExpandoObject/System.Dynamic.ExpandoData data, System.Int32 version)
    // Offset: 0x15B7A28
    ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*>>* GetExpandoEnumerator(::System::Dynamic::ExpandoObject::ExpandoData* data, int version);
  }; // System.Dynamic.ExpandoObject
  #pragma pack(pop)
  static check_size<sizeof(ExpandoObject), 40 + sizeof(::System::ComponentModel::PropertyChangedEventHandler*)> __System_Dynamic_ExpandoObjectSizeCheck;
  static_assert(sizeof(ExpandoObject) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::get_Class
// Il2CppName: get_Class
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::ExpandoClass* (System::Dynamic::ExpandoObject::*)()>(&System::Dynamic::ExpandoObject::get_Class)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "get_Class", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::System_Collections_Generic_IDictionary$System_String_System_Object$_get_Values
// Il2CppName: System.Collections.Generic.IDictionary<System.String,System.Object>.get_Values
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::ICollection_1<::Il2CppObject*>* (System::Dynamic::ExpandoObject::*)()>(&System::Dynamic::ExpandoObject::System_Collections_Generic_IDictionary$System_String_System_Object$_get_Values)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "System.Collections.Generic.IDictionary<System.String,System.Object>.get_Values", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::System_Collections_Generic_IDictionary$System_String_System_Object$_get_Item
// Il2CppName: System.Collections.Generic.IDictionary<System.String,System.Object>.get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Dynamic::ExpandoObject::*)(::StringW)>(&System::Dynamic::ExpandoObject::System_Collections_Generic_IDictionary$System_String_System_Object$_get_Item)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "System.Collections.Generic.IDictionary<System.String,System.Object>.get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::System_Collections_Generic_IDictionary$System_String_System_Object$_set_Item
// Il2CppName: System.Collections.Generic.IDictionary<System.String,System.Object>.set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Dynamic::ExpandoObject::*)(::StringW, ::Il2CppObject*)>(&System::Dynamic::ExpandoObject::System_Collections_Generic_IDictionary$System_String_System_Object$_set_Item)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "System.Collections.Generic.IDictionary<System.String,System.Object>.set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_get_Count
// Il2CppName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Dynamic::ExpandoObject::*)()>(&System::Dynamic::ExpandoObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_get_IsReadOnly
// Il2CppName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Dynamic::ExpandoObject::*)()>(&System::Dynamic::ExpandoObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_get_IsReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Dynamic::ExpandoObject::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::TryGetValue
// Il2CppName: TryGetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Dynamic::ExpandoObject::*)(::Il2CppObject*, int, ::StringW, bool, ByRef<::Il2CppObject*>)>(&System::Dynamic::ExpandoObject::TryGetValue)> {
  static const MethodInfo* get() {
    static auto* indexClass = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "TryGetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{indexClass, index, name, ignoreCase, value});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::TrySetValue
// Il2CppName: TrySetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Dynamic::ExpandoObject::*)(::Il2CppObject*, int, ::Il2CppObject*, ::StringW, bool, bool)>(&System::Dynamic::ExpandoObject::TrySetValue)> {
  static const MethodInfo* get() {
    static auto* indexClass = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* add = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "TrySetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{indexClass, index, value, name, ignoreCase, add});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::TryDeleteValue
// Il2CppName: TryDeleteValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Dynamic::ExpandoObject::*)(::Il2CppObject*, int, ::StringW, bool, ::Il2CppObject*)>(&System::Dynamic::ExpandoObject::TryDeleteValue)> {
  static const MethodInfo* get() {
    static auto* indexClass = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* deleteValue = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "TryDeleteValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{indexClass, index, name, ignoreCase, deleteValue});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::IsDeletedMember
// Il2CppName: IsDeletedMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Dynamic::ExpandoObject::*)(int)>(&System::Dynamic::ExpandoObject::IsDeletedMember)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "IsDeletedMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::PromoteClassCore
// Il2CppName: PromoteClassCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::ExpandoObject::ExpandoData* (System::Dynamic::ExpandoObject::*)(::System::Dynamic::ExpandoClass*, ::System::Dynamic::ExpandoClass*)>(&System::Dynamic::ExpandoObject::PromoteClassCore)> {
  static const MethodInfo* get() {
    static auto* oldClass = &::il2cpp_utils::GetClassFromName("System.Dynamic", "ExpandoClass")->byval_arg;
    static auto* newClass = &::il2cpp_utils::GetClassFromName("System.Dynamic", "ExpandoClass")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "PromoteClassCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oldClass, newClass});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::PromoteClass
// Il2CppName: PromoteClass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Dynamic::ExpandoObject::*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Dynamic::ExpandoObject::PromoteClass)> {
  static const MethodInfo* get() {
    static auto* oldClass = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* newClass = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "PromoteClass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oldClass, newClass});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::System_Dynamic_IDynamicMetaObjectProvider_GetMetaObject
// Il2CppName: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (System::Dynamic::ExpandoObject::*)(::System::Linq::Expressions::Expression*)>(&System::Dynamic::ExpandoObject::System_Dynamic_IDynamicMetaObjectProvider_GetMetaObject)> {
  static const MethodInfo* get() {
    static auto* parameter = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions", "Expression")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parameter});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::TryAddMember
// Il2CppName: TryAddMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Dynamic::ExpandoObject::*)(::StringW, ::Il2CppObject*)>(&System::Dynamic::ExpandoObject::TryAddMember)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "TryAddMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::TryGetValueForKey
// Il2CppName: TryGetValueForKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Dynamic::ExpandoObject::*)(::StringW, ByRef<::Il2CppObject*>)>(&System::Dynamic::ExpandoObject::TryGetValueForKey)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "TryGetValueForKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::System_Collections_Generic_IDictionary$System_String_System_Object$_Add
// Il2CppName: System.Collections.Generic.IDictionary<System.String,System.Object>.Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Dynamic::ExpandoObject::*)(::StringW, ::Il2CppObject*)>(&System::Dynamic::ExpandoObject::System_Collections_Generic_IDictionary$System_String_System_Object$_Add)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "System.Collections.Generic.IDictionary<System.String,System.Object>.Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::System_Collections_Generic_IDictionary$System_String_System_Object$_Remove
// Il2CppName: System.Collections.Generic.IDictionary<System.String,System.Object>.Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Dynamic::ExpandoObject::*)(::StringW)>(&System::Dynamic::ExpandoObject::System_Collections_Generic_IDictionary$System_String_System_Object$_Remove)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "System.Collections.Generic.IDictionary<System.String,System.Object>.Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::System_Collections_Generic_IDictionary$System_String_System_Object$_TryGetValue
// Il2CppName: System.Collections.Generic.IDictionary<System.String,System.Object>.TryGetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Dynamic::ExpandoObject::*)(::StringW, ByRef<::Il2CppObject*>)>(&System::Dynamic::ExpandoObject::System_Collections_Generic_IDictionary$System_String_System_Object$_TryGetValue)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "System.Collections.Generic.IDictionary<System.String,System.Object>.TryGetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_Add
// Il2CppName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Dynamic::ExpandoObject::*)(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*>)>(&System::Dynamic::ExpandoObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_Add)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_Clear
// Il2CppName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Dynamic::ExpandoObject::*)()>(&System::Dynamic::ExpandoObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_Contains
// Il2CppName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Dynamic::ExpandoObject::*)(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*>)>(&System::Dynamic::ExpandoObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_Contains)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_CopyTo
// Il2CppName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Dynamic::ExpandoObject::*)(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*>>, int)>(&System::Dynamic::ExpandoObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_CopyTo)> {
  static const MethodInfo* get() {
    static auto* array = &il2cpp_functions::array_class_get(::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")}), 1)->byval_arg;
    static auto* arrayIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, arrayIndex});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_Remove
// Il2CppName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Dynamic::ExpandoObject::*)(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*>)>(&System::Dynamic::ExpandoObject::System_Collections_Generic_ICollection$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_Remove)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::System_Collections_Generic_IEnumerable$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_GetEnumerator
// Il2CppName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*>>* (System::Dynamic::ExpandoObject::*)()>(&System::Dynamic::ExpandoObject::System_Collections_Generic_IEnumerable$System_Collections_Generic_KeyValuePair$System_String_System_Object$$_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (System::Dynamic::ExpandoObject::*)()>(&System::Dynamic::ExpandoObject::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::GetExpandoEnumerator
// Il2CppName: GetExpandoEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*>>* (System::Dynamic::ExpandoObject::*)(::System::Dynamic::ExpandoObject::ExpandoData*, int)>(&System::Dynamic::ExpandoObject::GetExpandoEnumerator)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Dynamic", "ExpandoObject/ExpandoData")->byval_arg;
    static auto* version = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject*), "GetExpandoEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, version});
  }
};
