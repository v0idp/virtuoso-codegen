// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.IXmlLineInfo
#include "System/Xml/IXmlLineInfo.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.Schema.IXmlSchemaInfo
#include "System/Xml/Schema/IXmlSchemaInfo.hpp"
// Including type: System.Xml.XmlCharType
#include "System/Xml/XmlCharType.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlValueGetter
  class XmlValueGetter;
  // Forward declaring type: XmlSchemaValidator
  class XmlSchemaValidator;
  // Forward declaring type: ValidationEventHandler
  class ValidationEventHandler;
  // Forward declaring type: Parser
  class Parser;
  // Forward declaring type: XmlSchemaInfo
  class XmlSchemaInfo;
  // Forward declaring type: XmlSchemaValidity
  struct XmlSchemaValidity;
  // Forward declaring type: XmlSchemaSimpleType
  class XmlSchemaSimpleType;
  // Forward declaring type: XmlSchemaType
  class XmlSchemaType;
  // Forward declaring type: XmlSchemaElement
  class XmlSchemaElement;
  // Forward declaring type: XmlSchemaAttribute
  class XmlSchemaAttribute;
  // Forward declaring type: XmlSchemaObject
  class XmlSchemaObject;
}
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlResolver
  class XmlResolver;
  // Forward declaring type: XmlNamespaceManager
  class XmlNamespaceManager;
  // Forward declaring type: ValidatingReaderNodeData
  class ValidatingReaderNodeData;
  // Forward declaring type: AttributePSVIInfo
  class AttributePSVIInfo;
  // Forward declaring type: XmlNameTable
  class XmlNameTable;
  // Forward declaring type: XsdCachingReader
  class XsdCachingReader;
  // Forward declaring type: ReadContentAsBinaryHelper
  class ReadContentAsBinaryHelper;
  // Forward declaring type: XmlReaderSettings
  class XmlReaderSettings;
  // Forward declaring type: XmlNamespaceScope
  struct XmlNamespaceScope;
  // Forward declaring type: XmlNodeType
  struct XmlNodeType;
  // Forward declaring type: XmlSpace
  struct XmlSpace;
  // Forward declaring type: ReadState
  struct ReadState;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IDictionary_2;
}
// Completed forward declares
// Type namespace: System.Xml
namespace System::Xml {
  // Forward declaring type: XsdValidatingReader
  class XsdValidatingReader;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::XsdValidatingReader);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::XsdValidatingReader*, "System.Xml", "XsdValidatingReader");
// Type namespace: System.Xml
namespace System::Xml {
  // Size: 0x124
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.XsdValidatingReader
  // [TokenAttribute] Offset: FFFFFFFF
  class XsdValidatingReader : public ::System::Xml::XmlReader/*, public ::System::Xml::IXmlLineInfo, public ::System::Xml::IXmlNamespaceResolver, public ::System::Xml::Schema::IXmlSchemaInfo*/ {
    public:
    // Nested type: ::System::Xml::XsdValidatingReader::ValidatingReaderState
    struct ValidatingReaderState;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState
    // [TokenAttribute] Offset: FFFFFFFF
    struct ValidatingReaderState/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: ValidatingReaderState
      constexpr ValidatingReaderState(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState None
      static constexpr const int None = 0;
      // Get static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState None
      static ::System::Xml::XsdValidatingReader::ValidatingReaderState _get_None();
      // Set static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState None
      static void _set_None(::System::Xml::XsdValidatingReader::ValidatingReaderState value);
      // static field const value: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState Init
      static constexpr const int Init = 1;
      // Get static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState Init
      static ::System::Xml::XsdValidatingReader::ValidatingReaderState _get_Init();
      // Set static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState Init
      static void _set_Init(::System::Xml::XsdValidatingReader::ValidatingReaderState value);
      // static field const value: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState Read
      static constexpr const int Read = 2;
      // Get static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState Read
      static ::System::Xml::XsdValidatingReader::ValidatingReaderState _get_Read();
      // Set static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState Read
      static void _set_Read(::System::Xml::XsdValidatingReader::ValidatingReaderState value);
      // static field const value: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState OnDefaultAttribute
      static constexpr const int OnDefaultAttribute = -1;
      // Get static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState OnDefaultAttribute
      static ::System::Xml::XsdValidatingReader::ValidatingReaderState _get_OnDefaultAttribute();
      // Set static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState OnDefaultAttribute
      static void _set_OnDefaultAttribute(::System::Xml::XsdValidatingReader::ValidatingReaderState value);
      // static field const value: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState OnReadAttributeValue
      static constexpr const int OnReadAttributeValue = -2;
      // Get static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState OnReadAttributeValue
      static ::System::Xml::XsdValidatingReader::ValidatingReaderState _get_OnReadAttributeValue();
      // Set static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState OnReadAttributeValue
      static void _set_OnReadAttributeValue(::System::Xml::XsdValidatingReader::ValidatingReaderState value);
      // static field const value: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState OnAttribute
      static constexpr const int OnAttribute = 3;
      // Get static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState OnAttribute
      static ::System::Xml::XsdValidatingReader::ValidatingReaderState _get_OnAttribute();
      // Set static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState OnAttribute
      static void _set_OnAttribute(::System::Xml::XsdValidatingReader::ValidatingReaderState value);
      // static field const value: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState ClearAttributes
      static constexpr const int ClearAttributes = 4;
      // Get static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState ClearAttributes
      static ::System::Xml::XsdValidatingReader::ValidatingReaderState _get_ClearAttributes();
      // Set static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState ClearAttributes
      static void _set_ClearAttributes(::System::Xml::XsdValidatingReader::ValidatingReaderState value);
      // static field const value: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState ParseInlineSchema
      static constexpr const int ParseInlineSchema = 5;
      // Get static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState ParseInlineSchema
      static ::System::Xml::XsdValidatingReader::ValidatingReaderState _get_ParseInlineSchema();
      // Set static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState ParseInlineSchema
      static void _set_ParseInlineSchema(::System::Xml::XsdValidatingReader::ValidatingReaderState value);
      // static field const value: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState ReadAhead
      static constexpr const int ReadAhead = 6;
      // Get static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState ReadAhead
      static ::System::Xml::XsdValidatingReader::ValidatingReaderState _get_ReadAhead();
      // Set static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState ReadAhead
      static void _set_ReadAhead(::System::Xml::XsdValidatingReader::ValidatingReaderState value);
      // static field const value: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState OnReadBinaryContent
      static constexpr const int OnReadBinaryContent = 7;
      // Get static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState OnReadBinaryContent
      static ::System::Xml::XsdValidatingReader::ValidatingReaderState _get_OnReadBinaryContent();
      // Set static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState OnReadBinaryContent
      static void _set_OnReadBinaryContent(::System::Xml::XsdValidatingReader::ValidatingReaderState value);
      // static field const value: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState ReaderClosed
      static constexpr const int ReaderClosed = 8;
      // Get static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState ReaderClosed
      static ::System::Xml::XsdValidatingReader::ValidatingReaderState _get_ReaderClosed();
      // Set static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState ReaderClosed
      static void _set_ReaderClosed(::System::Xml::XsdValidatingReader::ValidatingReaderState value);
      // static field const value: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState EOF
      static constexpr const int _EOF = 9;
      // Get static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState EOF
      static ::System::Xml::XsdValidatingReader::ValidatingReaderState _get_EOF();
      // Set static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState EOF
      static void _set_EOF(::System::Xml::XsdValidatingReader::ValidatingReaderState value);
      // static field const value: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState Error
      static constexpr const int Error = 10;
      // Get static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState Error
      static ::System::Xml::XsdValidatingReader::ValidatingReaderState _get_Error();
      // Set static field: static public System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState Error
      static void _set_Error(::System::Xml::XsdValidatingReader::ValidatingReaderState value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated]] int& dyn_value__();
    }; // System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState
    #pragma pack(pop)
    static check_size<sizeof(XsdValidatingReader::ValidatingReaderState), 0 + sizeof(int)> __System_Xml_XsdValidatingReader_ValidatingReaderStateSizeCheck;
    static_assert(sizeof(XsdValidatingReader::ValidatingReaderState) == 0x4);
    public:
    // private System.Xml.XmlReader coreReader
    // Size: 0x8
    // Offset: 0x10
    ::System::Xml::XmlReader* coreReader;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlReader*) == 0x8);
    // private System.Xml.IXmlNamespaceResolver coreReaderNSResolver
    // Size: 0x8
    // Offset: 0x18
    ::System::Xml::IXmlNamespaceResolver* coreReaderNSResolver;
    // Field size check
    static_assert(sizeof(::System::Xml::IXmlNamespaceResolver*) == 0x8);
    // private System.Xml.IXmlNamespaceResolver thisNSResolver
    // Size: 0x8
    // Offset: 0x20
    ::System::Xml::IXmlNamespaceResolver* thisNSResolver;
    // Field size check
    static_assert(sizeof(::System::Xml::IXmlNamespaceResolver*) == 0x8);
    // private System.Xml.Schema.XmlSchemaValidator validator
    // Size: 0x8
    // Offset: 0x28
    ::System::Xml::Schema::XmlSchemaValidator* validator;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchemaValidator*) == 0x8);
    // private System.Xml.XmlResolver xmlResolver
    // Size: 0x8
    // Offset: 0x30
    ::System::Xml::XmlResolver* xmlResolver;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlResolver*) == 0x8);
    // private System.Xml.Schema.ValidationEventHandler validationEvent
    // Size: 0x8
    // Offset: 0x38
    ::System::Xml::Schema::ValidationEventHandler* validationEvent;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::ValidationEventHandler*) == 0x8);
    // private System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState validationState
    // Size: 0x4
    // Offset: 0x40
    ::System::Xml::XsdValidatingReader::ValidatingReaderState validationState;
    // Field size check
    static_assert(sizeof(::System::Xml::XsdValidatingReader::ValidatingReaderState) == 0x4);
    // Padding between fields: validationState and: valueGetter
    char __padding6[0x4] = {};
    // private System.Xml.Schema.XmlValueGetter valueGetter
    // Size: 0x8
    // Offset: 0x48
    ::System::Xml::Schema::XmlValueGetter* valueGetter;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlValueGetter*) == 0x8);
    // private System.Xml.XmlNamespaceManager nsManager
    // Size: 0x8
    // Offset: 0x50
    ::System::Xml::XmlNamespaceManager* nsManager;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlNamespaceManager*) == 0x8);
    // private System.Boolean manageNamespaces
    // Size: 0x1
    // Offset: 0x58
    bool manageNamespaces;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean processInlineSchema
    // Size: 0x1
    // Offset: 0x59
    bool processInlineSchema;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean replayCache
    // Size: 0x1
    // Offset: 0x5A
    bool replayCache;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: replayCache and: cachedNode
    char __padding11[0x5] = {};
    // private System.Xml.ValidatingReaderNodeData cachedNode
    // Size: 0x8
    // Offset: 0x60
    ::System::Xml::ValidatingReaderNodeData* cachedNode;
    // Field size check
    static_assert(sizeof(::System::Xml::ValidatingReaderNodeData*) == 0x8);
    // private System.Xml.AttributePSVIInfo attributePSVI
    // Size: 0x8
    // Offset: 0x68
    ::System::Xml::AttributePSVIInfo* attributePSVI;
    // Field size check
    static_assert(sizeof(::System::Xml::AttributePSVIInfo*) == 0x8);
    // private System.Int32 attributeCount
    // Size: 0x4
    // Offset: 0x70
    int attributeCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 coreReaderAttributeCount
    // Size: 0x4
    // Offset: 0x74
    int coreReaderAttributeCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 currentAttrIndex
    // Size: 0x4
    // Offset: 0x78
    int currentAttrIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: currentAttrIndex and: attributePSVINodes
    char __padding16[0x4] = {};
    // private System.Xml.AttributePSVIInfo[] attributePSVINodes
    // Size: 0x8
    // Offset: 0x80
    ::ArrayW<::System::Xml::AttributePSVIInfo*> attributePSVINodes;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::Xml::AttributePSVIInfo*>) == 0x8);
    // private System.Collections.ArrayList defaultAttributes
    // Size: 0x8
    // Offset: 0x88
    ::System::Collections::ArrayList* defaultAttributes;
    // Field size check
    static_assert(sizeof(::System::Collections::ArrayList*) == 0x8);
    // private System.Xml.Schema.Parser inlineSchemaParser
    // Size: 0x8
    // Offset: 0x90
    ::System::Xml::Schema::Parser* inlineSchemaParser;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::Parser*) == 0x8);
    // private System.Object atomicValue
    // Size: 0x8
    // Offset: 0x98
    ::Il2CppObject* atomicValue;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.Xml.Schema.XmlSchemaInfo xmlSchemaInfo
    // Size: 0x8
    // Offset: 0xA0
    ::System::Xml::Schema::XmlSchemaInfo* xmlSchemaInfo;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchemaInfo*) == 0x8);
    // private System.String originalAtomicValueString
    // Size: 0x8
    // Offset: 0xA8
    ::StringW originalAtomicValueString;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Xml.XmlNameTable coreReaderNameTable
    // Size: 0x8
    // Offset: 0xB0
    ::System::Xml::XmlNameTable* coreReaderNameTable;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlNameTable*) == 0x8);
    // private System.Xml.XsdCachingReader cachingReader
    // Size: 0x8
    // Offset: 0xB8
    ::System::Xml::XsdCachingReader* cachingReader;
    // Field size check
    static_assert(sizeof(::System::Xml::XsdCachingReader*) == 0x8);
    // private System.Xml.ValidatingReaderNodeData textNode
    // Size: 0x8
    // Offset: 0xC0
    ::System::Xml::ValidatingReaderNodeData* textNode;
    // Field size check
    static_assert(sizeof(::System::Xml::ValidatingReaderNodeData*) == 0x8);
    // private System.String NsXmlNs
    // Size: 0x8
    // Offset: 0xC8
    ::StringW NsXmlNs;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String NsXs
    // Size: 0x8
    // Offset: 0xD0
    ::StringW NsXs;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String NsXsi
    // Size: 0x8
    // Offset: 0xD8
    ::StringW NsXsi;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String XsiType
    // Size: 0x8
    // Offset: 0xE0
    ::StringW XsiType;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String XsiNil
    // Size: 0x8
    // Offset: 0xE8
    ::StringW XsiNil;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String XsdSchema
    // Size: 0x8
    // Offset: 0xF0
    ::StringW XsdSchema;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String XsiSchemaLocation
    // Size: 0x8
    // Offset: 0xF8
    ::StringW XsiSchemaLocation;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String XsiNoNamespaceSchemaLocation
    // Size: 0x8
    // Offset: 0x100
    ::StringW XsiNoNamespaceSchemaLocation;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Xml.XmlCharType xmlCharType
    // Size: 0x8
    // Offset: 0x108
    ::System::Xml::XmlCharType xmlCharType;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlCharType) == 0x8);
    // private System.Xml.IXmlLineInfo lineInfo
    // Size: 0x8
    // Offset: 0x110
    ::System::Xml::IXmlLineInfo* lineInfo;
    // Field size check
    static_assert(sizeof(::System::Xml::IXmlLineInfo*) == 0x8);
    // private System.Xml.ReadContentAsBinaryHelper readBinaryHelper
    // Size: 0x8
    // Offset: 0x118
    ::System::Xml::ReadContentAsBinaryHelper* readBinaryHelper;
    // Field size check
    static_assert(sizeof(::System::Xml::ReadContentAsBinaryHelper*) == 0x8);
    // private System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState savedState
    // Size: 0x4
    // Offset: 0x120
    ::System::Xml::XsdValidatingReader::ValidatingReaderState savedState;
    // Field size check
    static_assert(sizeof(::System::Xml::XsdValidatingReader::ValidatingReaderState) == 0x4);
    public:
    // Creating interface conversion operator: operator ::System::Xml::IXmlLineInfo
    operator ::System::Xml::IXmlLineInfo() noexcept {
      return *reinterpret_cast<::System::Xml::IXmlLineInfo*>(this);
    }
    // Creating interface conversion operator: operator ::System::Xml::IXmlNamespaceResolver
    operator ::System::Xml::IXmlNamespaceResolver() noexcept {
      return *reinterpret_cast<::System::Xml::IXmlNamespaceResolver*>(this);
    }
    // Creating interface conversion operator: operator ::System::Xml::Schema::IXmlSchemaInfo
    operator ::System::Xml::Schema::IXmlSchemaInfo() noexcept {
      return *reinterpret_cast<::System::Xml::Schema::IXmlSchemaInfo*>(this);
    }
    // Get static field: static private System.Type TypeOfString
    static ::System::Type* _get_TypeOfString();
    // Set static field: static private System.Type TypeOfString
    static void _set_TypeOfString(::System::Type* value);
    // Get instance field reference: private System.Xml.XmlReader coreReader
    [[deprecated]] ::System::Xml::XmlReader*& dyn_coreReader();
    // Get instance field reference: private System.Xml.IXmlNamespaceResolver coreReaderNSResolver
    [[deprecated]] ::System::Xml::IXmlNamespaceResolver*& dyn_coreReaderNSResolver();
    // Get instance field reference: private System.Xml.IXmlNamespaceResolver thisNSResolver
    [[deprecated]] ::System::Xml::IXmlNamespaceResolver*& dyn_thisNSResolver();
    // Get instance field reference: private System.Xml.Schema.XmlSchemaValidator validator
    [[deprecated]] ::System::Xml::Schema::XmlSchemaValidator*& dyn_validator();
    // Get instance field reference: private System.Xml.XmlResolver xmlResolver
    [[deprecated]] ::System::Xml::XmlResolver*& dyn_xmlResolver();
    // Get instance field reference: private System.Xml.Schema.ValidationEventHandler validationEvent
    [[deprecated]] ::System::Xml::Schema::ValidationEventHandler*& dyn_validationEvent();
    // Get instance field reference: private System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState validationState
    [[deprecated]] ::System::Xml::XsdValidatingReader::ValidatingReaderState& dyn_validationState();
    // Get instance field reference: private System.Xml.Schema.XmlValueGetter valueGetter
    [[deprecated]] ::System::Xml::Schema::XmlValueGetter*& dyn_valueGetter();
    // Get instance field reference: private System.Xml.XmlNamespaceManager nsManager
    [[deprecated]] ::System::Xml::XmlNamespaceManager*& dyn_nsManager();
    // Get instance field reference: private System.Boolean manageNamespaces
    [[deprecated]] bool& dyn_manageNamespaces();
    // Get instance field reference: private System.Boolean processInlineSchema
    [[deprecated]] bool& dyn_processInlineSchema();
    // Get instance field reference: private System.Boolean replayCache
    [[deprecated]] bool& dyn_replayCache();
    // Get instance field reference: private System.Xml.ValidatingReaderNodeData cachedNode
    [[deprecated]] ::System::Xml::ValidatingReaderNodeData*& dyn_cachedNode();
    // Get instance field reference: private System.Xml.AttributePSVIInfo attributePSVI
    [[deprecated]] ::System::Xml::AttributePSVIInfo*& dyn_attributePSVI();
    // Get instance field reference: private System.Int32 attributeCount
    [[deprecated]] int& dyn_attributeCount();
    // Get instance field reference: private System.Int32 coreReaderAttributeCount
    [[deprecated]] int& dyn_coreReaderAttributeCount();
    // Get instance field reference: private System.Int32 currentAttrIndex
    [[deprecated]] int& dyn_currentAttrIndex();
    // Get instance field reference: private System.Xml.AttributePSVIInfo[] attributePSVINodes
    [[deprecated]] ::ArrayW<::System::Xml::AttributePSVIInfo*>& dyn_attributePSVINodes();
    // Get instance field reference: private System.Collections.ArrayList defaultAttributes
    [[deprecated]] ::System::Collections::ArrayList*& dyn_defaultAttributes();
    // Get instance field reference: private System.Xml.Schema.Parser inlineSchemaParser
    [[deprecated]] ::System::Xml::Schema::Parser*& dyn_inlineSchemaParser();
    // Get instance field reference: private System.Object atomicValue
    [[deprecated]] ::Il2CppObject*& dyn_atomicValue();
    // Get instance field reference: private System.Xml.Schema.XmlSchemaInfo xmlSchemaInfo
    [[deprecated]] ::System::Xml::Schema::XmlSchemaInfo*& dyn_xmlSchemaInfo();
    // Get instance field reference: private System.String originalAtomicValueString
    [[deprecated]] ::StringW& dyn_originalAtomicValueString();
    // Get instance field reference: private System.Xml.XmlNameTable coreReaderNameTable
    [[deprecated]] ::System::Xml::XmlNameTable*& dyn_coreReaderNameTable();
    // Get instance field reference: private System.Xml.XsdCachingReader cachingReader
    [[deprecated]] ::System::Xml::XsdCachingReader*& dyn_cachingReader();
    // Get instance field reference: private System.Xml.ValidatingReaderNodeData textNode
    [[deprecated]] ::System::Xml::ValidatingReaderNodeData*& dyn_textNode();
    // Get instance field reference: private System.String NsXmlNs
    [[deprecated]] ::StringW& dyn_NsXmlNs();
    // Get instance field reference: private System.String NsXs
    [[deprecated]] ::StringW& dyn_NsXs();
    // Get instance field reference: private System.String NsXsi
    [[deprecated]] ::StringW& dyn_NsXsi();
    // Get instance field reference: private System.String XsiType
    [[deprecated]] ::StringW& dyn_XsiType();
    // Get instance field reference: private System.String XsiNil
    [[deprecated]] ::StringW& dyn_XsiNil();
    // Get instance field reference: private System.String XsdSchema
    [[deprecated]] ::StringW& dyn_XsdSchema();
    // Get instance field reference: private System.String XsiSchemaLocation
    [[deprecated]] ::StringW& dyn_XsiSchemaLocation();
    // Get instance field reference: private System.String XsiNoNamespaceSchemaLocation
    [[deprecated]] ::StringW& dyn_XsiNoNamespaceSchemaLocation();
    // Get instance field reference: private System.Xml.XmlCharType xmlCharType
    [[deprecated]] ::System::Xml::XmlCharType& dyn_xmlCharType();
    // Get instance field reference: private System.Xml.IXmlLineInfo lineInfo
    [[deprecated]] ::System::Xml::IXmlLineInfo*& dyn_lineInfo();
    // Get instance field reference: private System.Xml.ReadContentAsBinaryHelper readBinaryHelper
    [[deprecated]] ::System::Xml::ReadContentAsBinaryHelper*& dyn_readBinaryHelper();
    // Get instance field reference: private System.Xml.XsdValidatingReader/System.Xml.ValidatingReaderState savedState
    [[deprecated]] ::System::Xml::XsdValidatingReader::ValidatingReaderState& dyn_savedState();
    // private System.Boolean System.Xml.Schema.IXmlSchemaInfo.get_IsDefault()
    // Offset: 0xED68F0
    bool System_Xml_Schema_IXmlSchemaInfo_get_IsDefault();
    // private System.Boolean System.Xml.Schema.IXmlSchemaInfo.get_IsNil()
    // Offset: 0xED6C00
    bool System_Xml_Schema_IXmlSchemaInfo_get_IsNil();
    // private System.Xml.Schema.XmlSchemaValidity System.Xml.Schema.IXmlSchemaInfo.get_Validity()
    // Offset: 0xED6C58
    ::System::Xml::Schema::XmlSchemaValidity System_Xml_Schema_IXmlSchemaInfo_get_Validity();
    // private System.Xml.Schema.XmlSchemaSimpleType System.Xml.Schema.IXmlSchemaInfo.get_MemberType()
    // Offset: 0xED6CF8
    ::System::Xml::Schema::XmlSchemaSimpleType* System_Xml_Schema_IXmlSchemaInfo_get_MemberType();
    // private System.Xml.Schema.XmlSchemaType System.Xml.Schema.IXmlSchemaInfo.get_SchemaType()
    // Offset: 0xED6E80
    ::System::Xml::Schema::XmlSchemaType* System_Xml_Schema_IXmlSchemaInfo_get_SchemaType();
    // private System.Xml.Schema.XmlSchemaElement System.Xml.Schema.IXmlSchemaInfo.get_SchemaElement()
    // Offset: 0xED6EE8
    ::System::Xml::Schema::XmlSchemaElement* System_Xml_Schema_IXmlSchemaInfo_get_SchemaElement();
    // private System.Xml.Schema.XmlSchemaAttribute System.Xml.Schema.IXmlSchemaInfo.get_SchemaAttribute()
    // Offset: 0xED6F48
    ::System::Xml::Schema::XmlSchemaAttribute* System_Xml_Schema_IXmlSchemaInfo_get_SchemaAttribute();
    // public System.Int32 get_LineNumber()
    // Offset: 0xED6FA0
    int get_LineNumber();
    // public System.Int32 get_LinePosition()
    // Offset: 0xED705C
    int get_LinePosition();
    // private System.Xml.Schema.XmlSchemaInfo get_AttributeSchemaInfo()
    // Offset: 0xED5428
    ::System::Xml::Schema::XmlSchemaInfo* get_AttributeSchemaInfo();
    // System.Void .ctor(System.Xml.XmlReader reader, System.Xml.XmlResolver xmlResolver, System.Xml.XmlReaderSettings readerSettings, System.Xml.Schema.XmlSchemaObject partialValidationType)
    // Offset: 0xED47D4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XsdValidatingReader* New_ctor(::System::Xml::XmlReader* reader, ::System::Xml::XmlResolver* xmlResolver, ::System::Xml::XmlReaderSettings* readerSettings, ::System::Xml::Schema::XmlSchemaObject* partialValidationType) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XsdValidatingReader::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XsdValidatingReader*, creationType>(reader, xmlResolver, readerSettings, partialValidationType)));
    }
    // System.Void .ctor(System.Xml.XmlReader reader, System.Xml.XmlResolver xmlResolver, System.Xml.XmlReaderSettings readerSettings)
    // Offset: 0xED4E84
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XsdValidatingReader* New_ctor(::System::Xml::XmlReader* reader, ::System::Xml::XmlResolver* xmlResolver, ::System::Xml::XmlReaderSettings* readerSettings) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XsdValidatingReader::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XsdValidatingReader*, creationType>(reader, xmlResolver, readerSettings)));
    }
    // private System.Void Init()
    // Offset: 0xED4960
    void Init();
    // private System.Void SetupValidator(System.Xml.XmlReaderSettings readerSettings, System.Xml.XmlReader reader, System.Xml.Schema.XmlSchemaObject partialValidationType)
    // Offset: 0xED4C7C
    void SetupValidator(::System::Xml::XmlReaderSettings* readerSettings, ::System::Xml::XmlReader* reader, ::System::Xml::Schema::XmlSchemaObject* partialValidationType);
    // public System.Boolean HasLineInfo()
    // Offset: 0xED6F98
    bool HasLineInfo();
    // private System.Collections.Generic.IDictionary`2<System.String,System.String> System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope scope)
    // Offset: 0xED7118
    ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* System_Xml_IXmlNamespaceResolver_GetNamespacesInScope(::System::Xml::XmlNamespaceScope scope);
    // private System.String System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String prefix)
    // Offset: 0xED71EC
    ::StringW System_Xml_IXmlNamespaceResolver_LookupNamespace(::StringW prefix);
    // private System.String System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String namespaceName)
    // Offset: 0xED72C4
    ::StringW System_Xml_IXmlNamespaceResolver_LookupPrefix(::StringW namespaceName);
    // private System.Object GetStringValue()
    // Offset: 0xED739C
    ::Il2CppObject* GetStringValue();
    // private System.Void ProcessReaderEvent()
    // Offset: 0xED61C0
    void ProcessReaderEvent();
    // private System.Void ProcessElementEvent()
    // Offset: 0xED73BC
    void ProcessElementEvent();
    // private System.Void ProcessEndElementEvent()
    // Offset: 0xED7858
    void ProcessEndElementEvent();
    // private System.Void ValidateAttributes()
    // Offset: 0xED79EC
    void ValidateAttributes();
    // private System.Void ClearAttributesInfo()
    // Offset: 0xED6444
    void ClearAttributesInfo();
    // private System.Xml.AttributePSVIInfo GetAttributePSVI(System.String name)
    // Offset: 0xED5A58
    ::System::Xml::AttributePSVIInfo* GetAttributePSVI(::StringW name);
    // private System.Xml.AttributePSVIInfo GetAttributePSVI(System.String localName, System.String ns)
    // Offset: 0xED7E7C
    ::System::Xml::AttributePSVIInfo* GetAttributePSVI(::StringW localName, ::StringW ns);
    // private System.Xml.ValidatingReaderNodeData GetDefaultAttribute(System.String name, System.Boolean updatePosition)
    // Offset: 0xED54BC
    ::System::Xml::ValidatingReaderNodeData* GetDefaultAttribute(::StringW name, bool updatePosition);
    // private System.Xml.ValidatingReaderNodeData GetDefaultAttribute(System.String attrLocalName, System.String ns, System.Boolean updatePosition)
    // Offset: 0xED5760
    ::System::Xml::ValidatingReaderNodeData* GetDefaultAttribute(::StringW attrLocalName, ::StringW ns, bool updatePosition);
    // private System.Xml.AttributePSVIInfo AddAttributePSVI(System.Int32 attIndex)
    // Offset: 0xED7D14
    ::System::Xml::AttributePSVIInfo* AddAttributePSVI(int attIndex);
    // private System.Boolean IsXSDRoot(System.String localName, System.String ns)
    // Offset: 0xED7998
    bool IsXSDRoot(::StringW localName, ::StringW ns);
    // private System.Void ProcessInlineSchema()
    // Offset: 0xED6388
    void ProcessInlineSchema();
    // private System.Void ReadAheadForMemberType()
    // Offset: 0xED7F38
    void ReadAheadForMemberType();
    // private System.Void GetIsDefault()
    // Offset: 0xED6984
    void GetIsDefault();
    // private System.Void GetMemberType()
    // Offset: 0xED6D84
    void GetMemberType();
    // private System.Xml.XsdCachingReader GetCachingReader()
    // Offset: 0xED7C2C
    ::System::Xml::XsdCachingReader* GetCachingReader();
    // System.Xml.ValidatingReaderNodeData CreateDummyTextNode(System.String attributeValue, System.Int32 depth)
    // Offset: 0xED685C
    ::System::Xml::ValidatingReaderNodeData* CreateDummyTextNode(::StringW attributeValue, int depth);
    // System.Void CachingCallBack(System.Xml.XsdCachingReader cachingReader)
    // Offset: 0xED8104
    void CachingCallBack(::System::Xml::XsdCachingReader* cachingReader);
    // private System.String GetOriginalAtomicValueStringOfElement()
    // Offset: 0xED7B98
    ::StringW GetOriginalAtomicValueStringOfElement();
    // public override System.Xml.XmlReaderSettings get_Settings()
    // Offset: 0xED4E8C
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Xml.XmlReaderSettings XmlReader::get_Settings()
    ::System::Xml::XmlReaderSettings* get_Settings();
    // public override System.Xml.XmlNodeType get_NodeType()
    // Offset: 0xED4F60
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Xml.XmlNodeType XmlReader::get_NodeType()
    ::System::Xml::XmlNodeType get_NodeType();
    // public override System.String get_Name()
    // Offset: 0xED4FEC
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::get_Name()
    ::StringW get_Name();
    // public override System.String get_LocalName()
    // Offset: 0xED512C
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::get_LocalName()
    ::StringW get_LocalName();
    // public override System.String get_NamespaceURI()
    // Offset: 0xED516C
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::get_NamespaceURI()
    ::StringW get_NamespaceURI();
    // public override System.String get_Prefix()
    // Offset: 0xED51AC
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::get_Prefix()
    ::StringW get_Prefix();
    // public override System.String get_Value()
    // Offset: 0xED51EC
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::get_Value()
    ::StringW get_Value();
    // public override System.Int32 get_Depth()
    // Offset: 0xED522C
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Int32 XmlReader::get_Depth()
    int get_Depth();
    // public override System.String get_BaseURI()
    // Offset: 0xED526C
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::get_BaseURI()
    ::StringW get_BaseURI();
    // public override System.Boolean get_IsEmptyElement()
    // Offset: 0xED5290
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::get_IsEmptyElement()
    bool get_IsEmptyElement();
    // public override System.Boolean get_IsDefault()
    // Offset: 0xED52B4
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::get_IsDefault()
    bool get_IsDefault();
    // public override System.Char get_QuoteChar()
    // Offset: 0xED52EC
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Char XmlReader::get_QuoteChar()
    ::Il2CppChar get_QuoteChar();
    // public override System.Xml.XmlSpace get_XmlSpace()
    // Offset: 0xED5310
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Xml.XmlSpace XmlReader::get_XmlSpace()
    ::System::Xml::XmlSpace get_XmlSpace();
    // public override System.String get_XmlLang()
    // Offset: 0xED5334
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::get_XmlLang()
    ::StringW get_XmlLang();
    // public override System.Xml.Schema.IXmlSchemaInfo get_SchemaInfo()
    // Offset: 0xED5358
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Xml.Schema.IXmlSchemaInfo XmlReader::get_SchemaInfo()
    ::System::Xml::Schema::IXmlSchemaInfo* get_SchemaInfo();
    // public override System.Type get_ValueType()
    // Offset: 0xED535C
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Type XmlReader::get_ValueType()
    ::System::Type* get_ValueType();
    // public override System.Int32 get_AttributeCount()
    // Offset: 0xED5444
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Int32 XmlReader::get_AttributeCount()
    int get_AttributeCount();
    // public override System.Boolean get_EOF()
    // Offset: 0xED648C
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::get_EOF()
    bool get_EOF();
    // public override System.Xml.ReadState get_ReadState()
    // Offset: 0xED64F0
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Xml.ReadState XmlReader::get_ReadState()
    ::System::Xml::ReadState get_ReadState();
    // public override System.Xml.XmlNameTable get_NameTable()
    // Offset: 0xED6698
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Xml.XmlNameTable XmlReader::get_NameTable()
    ::System::Xml::XmlNameTable* get_NameTable();
    // public override System.String GetAttribute(System.String name)
    // Offset: 0xED544C
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::GetAttribute(System.String name)
    ::StringW GetAttribute(::StringW name);
    // public override System.String GetAttribute(System.String name, System.String namespaceURI)
    // Offset: 0xED5654
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::GetAttribute(System.String name, System.String namespaceURI)
    ::StringW GetAttribute(::StringW name, ::StringW namespaceURI);
    // public override System.String GetAttribute(System.Int32 i)
    // Offset: 0xED58B0
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::GetAttribute(System.Int32 i)
    ::StringW GetAttribute(int i);
    // public override System.Boolean MoveToAttribute(System.String name)
    // Offset: 0xED599C
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::MoveToAttribute(System.String name)
    bool MoveToAttribute(::StringW name);
    // public override System.Void MoveToAttribute(System.Int32 i)
    // Offset: 0xED5BF8
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Void XmlReader::MoveToAttribute(System.Int32 i)
    void MoveToAttribute(int i);
    // public override System.Boolean MoveToFirstAttribute()
    // Offset: 0xED5D80
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::MoveToFirstAttribute()
    bool MoveToFirstAttribute();
    // public override System.Boolean MoveToNextAttribute()
    // Offset: 0xED5EC0
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::MoveToNextAttribute()
    bool MoveToNextAttribute();
    // public override System.Boolean MoveToElement()
    // Offset: 0xED6004
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::MoveToElement()
    bool MoveToElement();
    // public override System.Boolean Read()
    // Offset: 0xED6064
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::Read()
    bool Read();
    // public override System.Void Close()
    // Offset: 0xED64B0
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Void XmlReader::Close()
    void Close();
    // public override System.Void Skip()
    // Offset: 0xED6528
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Void XmlReader::Skip()
    void Skip();
    // public override System.String LookupNamespace(System.String prefix)
    // Offset: 0xED66A0
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::LookupNamespace(System.String prefix)
    ::StringW LookupNamespace(::StringW prefix);
    // public override System.Void ResolveEntity()
    // Offset: 0xED6760
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Void XmlReader::ResolveEntity()
    void ResolveEntity();
    // public override System.Boolean ReadAttributeValue()
    // Offset: 0xED67A0
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::ReadAttributeValue()
    bool ReadAttributeValue();
  }; // System.Xml.XsdValidatingReader
  #pragma pack(pop)
  static check_size<sizeof(XsdValidatingReader), 288 + sizeof(::System::Xml::XsdValidatingReader::ValidatingReaderState)> __System_Xml_XsdValidatingReaderSizeCheck;
  static_assert(sizeof(XsdValidatingReader) == 0x124);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::XsdValidatingReader::ValidatingReaderState, "System.Xml", "XsdValidatingReader/ValidatingReaderState");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::System_Xml_Schema_IXmlSchemaInfo_get_IsDefault
// Il2CppName: System.Xml.Schema.IXmlSchemaInfo.get_IsDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::System_Xml_Schema_IXmlSchemaInfo_get_IsDefault)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "System.Xml.Schema.IXmlSchemaInfo.get_IsDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::System_Xml_Schema_IXmlSchemaInfo_get_IsNil
// Il2CppName: System.Xml.Schema.IXmlSchemaInfo.get_IsNil
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::System_Xml_Schema_IXmlSchemaInfo_get_IsNil)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "System.Xml.Schema.IXmlSchemaInfo.get_IsNil", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::System_Xml_Schema_IXmlSchemaInfo_get_Validity
// Il2CppName: System.Xml.Schema.IXmlSchemaInfo.get_Validity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaValidity (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::System_Xml_Schema_IXmlSchemaInfo_get_Validity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "System.Xml.Schema.IXmlSchemaInfo.get_Validity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::System_Xml_Schema_IXmlSchemaInfo_get_MemberType
// Il2CppName: System.Xml.Schema.IXmlSchemaInfo.get_MemberType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaSimpleType* (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::System_Xml_Schema_IXmlSchemaInfo_get_MemberType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "System.Xml.Schema.IXmlSchemaInfo.get_MemberType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::System_Xml_Schema_IXmlSchemaInfo_get_SchemaType
// Il2CppName: System.Xml.Schema.IXmlSchemaInfo.get_SchemaType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaType* (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::System_Xml_Schema_IXmlSchemaInfo_get_SchemaType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "System.Xml.Schema.IXmlSchemaInfo.get_SchemaType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::System_Xml_Schema_IXmlSchemaInfo_get_SchemaElement
// Il2CppName: System.Xml.Schema.IXmlSchemaInfo.get_SchemaElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaElement* (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::System_Xml_Schema_IXmlSchemaInfo_get_SchemaElement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "System.Xml.Schema.IXmlSchemaInfo.get_SchemaElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::System_Xml_Schema_IXmlSchemaInfo_get_SchemaAttribute
// Il2CppName: System.Xml.Schema.IXmlSchemaInfo.get_SchemaAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaAttribute* (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::System_Xml_Schema_IXmlSchemaInfo_get_SchemaAttribute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "System.Xml.Schema.IXmlSchemaInfo.get_SchemaAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_LineNumber
// Il2CppName: get_LineNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_LineNumber)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_LineNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_LinePosition
// Il2CppName: get_LinePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_LinePosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_LinePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_AttributeSchemaInfo
// Il2CppName: get_AttributeSchemaInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaInfo* (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_AttributeSchemaInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_AttributeSchemaInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::Init)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::SetupValidator
// Il2CppName: SetupValidator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XsdValidatingReader::*)(::System::Xml::XmlReaderSettings*, ::System::Xml::XmlReader*, ::System::Xml::Schema::XmlSchemaObject*)>(&System::Xml::XsdValidatingReader::SetupValidator)> {
  static const MethodInfo* get() {
    static auto* readerSettings = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReaderSettings")->byval_arg;
    static auto* reader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    static auto* partialValidationType = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSchemaObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "SetupValidator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{readerSettings, reader, partialValidationType});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::HasLineInfo
// Il2CppName: HasLineInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::HasLineInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "HasLineInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::System_Xml_IXmlNamespaceResolver_GetNamespacesInScope
// Il2CppName: System.Xml.IXmlNamespaceResolver.GetNamespacesInScope
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* (System::Xml::XsdValidatingReader::*)(::System::Xml::XmlNamespaceScope)>(&System::Xml::XsdValidatingReader::System_Xml_IXmlNamespaceResolver_GetNamespacesInScope)> {
  static const MethodInfo* get() {
    static auto* scope = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlNamespaceScope")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "System.Xml.IXmlNamespaceResolver.GetNamespacesInScope", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scope});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::System_Xml_IXmlNamespaceResolver_LookupNamespace
// Il2CppName: System.Xml.IXmlNamespaceResolver.LookupNamespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XsdValidatingReader::*)(::StringW)>(&System::Xml::XsdValidatingReader::System_Xml_IXmlNamespaceResolver_LookupNamespace)> {
  static const MethodInfo* get() {
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "System.Xml.IXmlNamespaceResolver.LookupNamespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::System_Xml_IXmlNamespaceResolver_LookupPrefix
// Il2CppName: System.Xml.IXmlNamespaceResolver.LookupPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XsdValidatingReader::*)(::StringW)>(&System::Xml::XsdValidatingReader::System_Xml_IXmlNamespaceResolver_LookupPrefix)> {
  static const MethodInfo* get() {
    static auto* namespaceName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "System.Xml.IXmlNamespaceResolver.LookupPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{namespaceName});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::GetStringValue
// Il2CppName: GetStringValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::GetStringValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "GetStringValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::ProcessReaderEvent
// Il2CppName: ProcessReaderEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::ProcessReaderEvent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "ProcessReaderEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::ProcessElementEvent
// Il2CppName: ProcessElementEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::ProcessElementEvent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "ProcessElementEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::ProcessEndElementEvent
// Il2CppName: ProcessEndElementEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::ProcessEndElementEvent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "ProcessEndElementEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::ValidateAttributes
// Il2CppName: ValidateAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::ValidateAttributes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "ValidateAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::ClearAttributesInfo
// Il2CppName: ClearAttributesInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::ClearAttributesInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "ClearAttributesInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::GetAttributePSVI
// Il2CppName: GetAttributePSVI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::AttributePSVIInfo* (System::Xml::XsdValidatingReader::*)(::StringW)>(&System::Xml::XsdValidatingReader::GetAttributePSVI)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "GetAttributePSVI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::GetAttributePSVI
// Il2CppName: GetAttributePSVI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::AttributePSVIInfo* (System::Xml::XsdValidatingReader::*)(::StringW, ::StringW)>(&System::Xml::XsdValidatingReader::GetAttributePSVI)> {
  static const MethodInfo* get() {
    static auto* localName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ns = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "GetAttributePSVI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{localName, ns});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::GetDefaultAttribute
// Il2CppName: GetDefaultAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::ValidatingReaderNodeData* (System::Xml::XsdValidatingReader::*)(::StringW, bool)>(&System::Xml::XsdValidatingReader::GetDefaultAttribute)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* updatePosition = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "GetDefaultAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, updatePosition});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::GetDefaultAttribute
// Il2CppName: GetDefaultAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::ValidatingReaderNodeData* (System::Xml::XsdValidatingReader::*)(::StringW, ::StringW, bool)>(&System::Xml::XsdValidatingReader::GetDefaultAttribute)> {
  static const MethodInfo* get() {
    static auto* attrLocalName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ns = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* updatePosition = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "GetDefaultAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attrLocalName, ns, updatePosition});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::AddAttributePSVI
// Il2CppName: AddAttributePSVI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::AttributePSVIInfo* (System::Xml::XsdValidatingReader::*)(int)>(&System::Xml::XsdValidatingReader::AddAttributePSVI)> {
  static const MethodInfo* get() {
    static auto* attIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "AddAttributePSVI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attIndex});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::IsXSDRoot
// Il2CppName: IsXSDRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XsdValidatingReader::*)(::StringW, ::StringW)>(&System::Xml::XsdValidatingReader::IsXSDRoot)> {
  static const MethodInfo* get() {
    static auto* localName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ns = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "IsXSDRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{localName, ns});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::ProcessInlineSchema
// Il2CppName: ProcessInlineSchema
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::ProcessInlineSchema)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "ProcessInlineSchema", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::ReadAheadForMemberType
// Il2CppName: ReadAheadForMemberType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::ReadAheadForMemberType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "ReadAheadForMemberType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::GetIsDefault
// Il2CppName: GetIsDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::GetIsDefault)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "GetIsDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::GetMemberType
// Il2CppName: GetMemberType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::GetMemberType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "GetMemberType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::GetCachingReader
// Il2CppName: GetCachingReader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XsdCachingReader* (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::GetCachingReader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "GetCachingReader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::CreateDummyTextNode
// Il2CppName: CreateDummyTextNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::ValidatingReaderNodeData* (System::Xml::XsdValidatingReader::*)(::StringW, int)>(&System::Xml::XsdValidatingReader::CreateDummyTextNode)> {
  static const MethodInfo* get() {
    static auto* attributeValue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* depth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "CreateDummyTextNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attributeValue, depth});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::CachingCallBack
// Il2CppName: CachingCallBack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XsdValidatingReader::*)(::System::Xml::XsdCachingReader*)>(&System::Xml::XsdValidatingReader::CachingCallBack)> {
  static const MethodInfo* get() {
    static auto* cachingReader = &::il2cpp_utils::GetClassFromName("System.Xml", "XsdCachingReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "CachingCallBack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cachingReader});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::GetOriginalAtomicValueStringOfElement
// Il2CppName: GetOriginalAtomicValueStringOfElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::GetOriginalAtomicValueStringOfElement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "GetOriginalAtomicValueStringOfElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_Settings
// Il2CppName: get_Settings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XmlReaderSettings* (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_Settings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_Settings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_NodeType
// Il2CppName: get_NodeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XmlNodeType (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_NodeType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_NodeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_Name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_LocalName
// Il2CppName: get_LocalName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_LocalName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_LocalName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_NamespaceURI
// Il2CppName: get_NamespaceURI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_NamespaceURI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_NamespaceURI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_Prefix
// Il2CppName: get_Prefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_Prefix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_Prefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_Value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_Depth
// Il2CppName: get_Depth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_Depth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_Depth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_BaseURI
// Il2CppName: get_BaseURI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_BaseURI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_BaseURI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_IsEmptyElement
// Il2CppName: get_IsEmptyElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_IsEmptyElement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_IsEmptyElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_IsDefault
// Il2CppName: get_IsDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_IsDefault)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_IsDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_QuoteChar
// Il2CppName: get_QuoteChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_QuoteChar)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_QuoteChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_XmlSpace
// Il2CppName: get_XmlSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XmlSpace (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_XmlSpace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_XmlSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_XmlLang
// Il2CppName: get_XmlLang
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_XmlLang)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_XmlLang", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_SchemaInfo
// Il2CppName: get_SchemaInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::IXmlSchemaInfo* (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_SchemaInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_SchemaInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_ValueType
// Il2CppName: get_ValueType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_ValueType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_ValueType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_AttributeCount
// Il2CppName: get_AttributeCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_AttributeCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_AttributeCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_EOF
// Il2CppName: get_EOF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_EOF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_EOF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_ReadState
// Il2CppName: get_ReadState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::ReadState (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_ReadState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_ReadState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::get_NameTable
// Il2CppName: get_NameTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XmlNameTable* (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::get_NameTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "get_NameTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::GetAttribute
// Il2CppName: GetAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XsdValidatingReader::*)(::StringW)>(&System::Xml::XsdValidatingReader::GetAttribute)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "GetAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::GetAttribute
// Il2CppName: GetAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XsdValidatingReader::*)(::StringW, ::StringW)>(&System::Xml::XsdValidatingReader::GetAttribute)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* namespaceURI = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "GetAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, namespaceURI});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::GetAttribute
// Il2CppName: GetAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XsdValidatingReader::*)(int)>(&System::Xml::XsdValidatingReader::GetAttribute)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "GetAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::MoveToAttribute
// Il2CppName: MoveToAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XsdValidatingReader::*)(::StringW)>(&System::Xml::XsdValidatingReader::MoveToAttribute)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "MoveToAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::MoveToAttribute
// Il2CppName: MoveToAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XsdValidatingReader::*)(int)>(&System::Xml::XsdValidatingReader::MoveToAttribute)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "MoveToAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::MoveToFirstAttribute
// Il2CppName: MoveToFirstAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::MoveToFirstAttribute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "MoveToFirstAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::MoveToNextAttribute
// Il2CppName: MoveToNextAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::MoveToNextAttribute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "MoveToNextAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::MoveToElement
// Il2CppName: MoveToElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::MoveToElement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "MoveToElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::Read)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::Close
// Il2CppName: Close
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::Close)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "Close", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::Skip
// Il2CppName: Skip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::Skip)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "Skip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::LookupNamespace
// Il2CppName: LookupNamespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XsdValidatingReader::*)(::StringW)>(&System::Xml::XsdValidatingReader::LookupNamespace)> {
  static const MethodInfo* get() {
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "LookupNamespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::ResolveEntity
// Il2CppName: ResolveEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::ResolveEntity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "ResolveEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XsdValidatingReader::ReadAttributeValue
// Il2CppName: ReadAttributeValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XsdValidatingReader::*)()>(&System::Xml::XsdValidatingReader::ReadAttributeValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XsdValidatingReader*), "ReadAttributeValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
