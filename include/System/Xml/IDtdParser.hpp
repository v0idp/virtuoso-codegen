// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: IDtdInfo
  class IDtdInfo;
  // Forward declaring type: IDtdParserAdapter
  class IDtdParserAdapter;
}
// Completed forward declares
// Type namespace: System.Xml
namespace System::Xml {
  // Forward declaring type: IDtdParser
  class IDtdParser;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::IDtdParser);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::IDtdParser*, "System.Xml", "IDtdParser");
// Type namespace: System.Xml
namespace System::Xml {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.IDtdParser
  // [TokenAttribute] Offset: FFFFFFFF
  class IDtdParser {
    public:
    // public System.Xml.IDtdInfo ParseInternalDtd(System.Xml.IDtdParserAdapter adapter, System.Boolean saveInternalSubset)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Xml::IDtdInfo* ParseInternalDtd(::System::Xml::IDtdParserAdapter* adapter, bool saveInternalSubset);
    // public System.Xml.IDtdInfo ParseFreeFloatingDtd(System.String baseUri, System.String docTypeName, System.String publicId, System.String systemId, System.String internalSubset, System.Xml.IDtdParserAdapter adapter)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Xml::IDtdInfo* ParseFreeFloatingDtd(::StringW baseUri, ::StringW docTypeName, ::StringW publicId, ::StringW systemId, ::StringW internalSubset, ::System::Xml::IDtdParserAdapter* adapter);
  }; // System.Xml.IDtdParser
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::IDtdParser::ParseInternalDtd
// Il2CppName: ParseInternalDtd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::IDtdInfo* (System::Xml::IDtdParser::*)(::System::Xml::IDtdParserAdapter*, bool)>(&System::Xml::IDtdParser::ParseInternalDtd)> {
  static const MethodInfo* get() {
    static auto* adapter = &::il2cpp_utils::GetClassFromName("System.Xml", "IDtdParserAdapter")->byval_arg;
    static auto* saveInternalSubset = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::IDtdParser*), "ParseInternalDtd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{adapter, saveInternalSubset});
  }
};
// Writing MetadataGetter for method: System::Xml::IDtdParser::ParseFreeFloatingDtd
// Il2CppName: ParseFreeFloatingDtd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::IDtdInfo* (System::Xml::IDtdParser::*)(::StringW, ::StringW, ::StringW, ::StringW, ::StringW, ::System::Xml::IDtdParserAdapter*)>(&System::Xml::IDtdParser::ParseFreeFloatingDtd)> {
  static const MethodInfo* get() {
    static auto* baseUri = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* docTypeName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* publicId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* systemId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* internalSubset = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* adapter = &::il2cpp_utils::GetClassFromName("System.Xml", "IDtdParserAdapter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::IDtdParser*), "ParseFreeFloatingDtd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{baseUri, docTypeName, publicId, systemId, internalSubset, adapter});
  }
};
