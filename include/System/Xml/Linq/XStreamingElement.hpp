// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Linq
namespace System::Xml::Linq {
  // Forward declaring type: XName
  class XName;
}
// Completed forward declares
// Type namespace: System.Xml.Linq
namespace System::Xml::Linq {
  // Forward declaring type: XStreamingElement
  class XStreamingElement;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Linq::XStreamingElement);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Linq::XStreamingElement*, "System.Xml.Linq", "XStreamingElement");
// Type namespace: System.Xml.Linq
namespace System::Xml::Linq {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Linq.XStreamingElement
  // [TokenAttribute] Offset: FFFFFFFF
  class XStreamingElement : public ::Il2CppObject {
    public:
    public:
    // System.Xml.Linq.XName name
    // Size: 0x8
    // Offset: 0x10
    ::System::Xml::Linq::XName* name;
    // Field size check
    static_assert(sizeof(::System::Xml::Linq::XName*) == 0x8);
    // System.Object content
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppObject* content;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    public:
    // Get instance field reference: System.Xml.Linq.XName name
    [[deprecated]] ::System::Xml::Linq::XName*& dyn_name();
    // Get instance field reference: System.Object content
    [[deprecated]] ::Il2CppObject*& dyn_content();
  }; // System.Xml.Linq.XStreamingElement
  #pragma pack(pop)
  static check_size<sizeof(XStreamingElement), 24 + sizeof(::Il2CppObject*)> __System_Xml_Linq_XStreamingElementSizeCheck;
  static_assert(sizeof(XStreamingElement) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
