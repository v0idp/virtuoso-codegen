// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: AttributePSVIInfo
  class AttributePSVIInfo;
  // Forward declaring type: XmlNameTable
  class XmlNameTable;
  // Forward declaring type: IXmlLineInfo
  class IXmlLineInfo;
}
// Completed forward declares
// Type namespace: System.Xml
namespace System::Xml {
  // Forward declaring type: ValidatingReaderNodeData
  class ValidatingReaderNodeData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::ValidatingReaderNodeData);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::ValidatingReaderNodeData*, "System.Xml", "ValidatingReaderNodeData");
// Type namespace: System.Xml
namespace System::Xml {
  // Size: 0x5C
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.ValidatingReaderNodeData
  // [TokenAttribute] Offset: FFFFFFFF
  class ValidatingReaderNodeData : public ::Il2CppObject {
    public:
    public:
    // private System.String localName
    // Size: 0x8
    // Offset: 0x10
    ::StringW localName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String namespaceUri
    // Size: 0x8
    // Offset: 0x18
    ::StringW namespaceUri;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String prefix
    // Size: 0x8
    // Offset: 0x20
    ::StringW prefix;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String nameWPrefix
    // Size: 0x8
    // Offset: 0x28
    ::StringW nameWPrefix;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String rawValue
    // Size: 0x8
    // Offset: 0x30
    ::StringW rawValue;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String originalStringValue
    // Size: 0x8
    // Offset: 0x38
    ::StringW originalStringValue;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Int32 depth
    // Size: 0x4
    // Offset: 0x40
    int depth;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: depth and: attributePSVIInfo
    char __padding6[0x4] = {};
    // private System.Xml.AttributePSVIInfo attributePSVIInfo
    // Size: 0x8
    // Offset: 0x48
    ::System::Xml::AttributePSVIInfo* attributePSVIInfo;
    // Field size check
    static_assert(sizeof(::System::Xml::AttributePSVIInfo*) == 0x8);
    // private System.Xml.XmlNodeType nodeType
    // Size: 0x4
    // Offset: 0x50
    ::System::Xml::XmlNodeType nodeType;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlNodeType) == 0x4);
    // private System.Int32 lineNo
    // Size: 0x4
    // Offset: 0x54
    int lineNo;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 linePos
    // Size: 0x4
    // Offset: 0x58
    int linePos;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: private System.String localName
    [[deprecated]] ::StringW& dyn_localName();
    // Get instance field reference: private System.String namespaceUri
    [[deprecated]] ::StringW& dyn_namespaceUri();
    // Get instance field reference: private System.String prefix
    [[deprecated]] ::StringW& dyn_prefix();
    // Get instance field reference: private System.String nameWPrefix
    [[deprecated]] ::StringW& dyn_nameWPrefix();
    // Get instance field reference: private System.String rawValue
    [[deprecated]] ::StringW& dyn_rawValue();
    // Get instance field reference: private System.String originalStringValue
    [[deprecated]] ::StringW& dyn_originalStringValue();
    // Get instance field reference: private System.Int32 depth
    [[deprecated]] int& dyn_depth();
    // Get instance field reference: private System.Xml.AttributePSVIInfo attributePSVIInfo
    [[deprecated]] ::System::Xml::AttributePSVIInfo*& dyn_attributePSVIInfo();
    // Get instance field reference: private System.Xml.XmlNodeType nodeType
    [[deprecated]] ::System::Xml::XmlNodeType& dyn_nodeType();
    // Get instance field reference: private System.Int32 lineNo
    [[deprecated]] int& dyn_lineNo();
    // Get instance field reference: private System.Int32 linePos
    [[deprecated]] int& dyn_linePos();
    // public System.String get_LocalName()
    // Offset: 0xF7978C
    ::StringW get_LocalName();
    // public System.Void set_LocalName(System.String value)
    // Offset: 0xF79794
    void set_LocalName(::StringW value);
    // public System.String get_Namespace()
    // Offset: 0xF7979C
    ::StringW get_Namespace();
    // public System.Void set_Namespace(System.String value)
    // Offset: 0xF797A4
    void set_Namespace(::StringW value);
    // public System.String get_Prefix()
    // Offset: 0xF797AC
    ::StringW get_Prefix();
    // public System.Void set_Prefix(System.String value)
    // Offset: 0xF797B4
    void set_Prefix(::StringW value);
    // public System.Int32 get_Depth()
    // Offset: 0xF7985C
    int get_Depth();
    // public System.Void set_Depth(System.Int32 value)
    // Offset: 0xF79864
    void set_Depth(int value);
    // public System.String get_RawValue()
    // Offset: 0xF7986C
    ::StringW get_RawValue();
    // public System.Void set_RawValue(System.String value)
    // Offset: 0xF79874
    void set_RawValue(::StringW value);
    // public System.String get_OriginalStringValue()
    // Offset: 0xF7987C
    ::StringW get_OriginalStringValue();
    // public System.Xml.XmlNodeType get_NodeType()
    // Offset: 0xF79884
    ::System::Xml::XmlNodeType get_NodeType();
    // public System.Void set_NodeType(System.Xml.XmlNodeType value)
    // Offset: 0xF7988C
    void set_NodeType(::System::Xml::XmlNodeType value);
    // public System.Xml.AttributePSVIInfo get_AttInfo()
    // Offset: 0xF79894
    ::System::Xml::AttributePSVIInfo* get_AttInfo();
    // public System.Void set_AttInfo(System.Xml.AttributePSVIInfo value)
    // Offset: 0xF7989C
    void set_AttInfo(::System::Xml::AttributePSVIInfo* value);
    // public System.Int32 get_LineNumber()
    // Offset: 0xF798A4
    int get_LineNumber();
    // public System.Int32 get_LinePosition()
    // Offset: 0xF798AC
    int get_LinePosition();
    // public System.Void .ctor(System.Xml.XmlNodeType nodeType)
    // Offset: 0xF7975C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ValidatingReaderNodeData* New_ctor(::System::Xml::XmlNodeType nodeType) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidatingReaderNodeData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ValidatingReaderNodeData*, creationType>(nodeType)));
    }
    // public System.String GetAtomizedNameWPrefix(System.Xml.XmlNameTable nameTable)
    // Offset: 0xF797BC
    ::StringW GetAtomizedNameWPrefix(::System::Xml::XmlNameTable* nameTable);
    // System.Void Clear(System.Xml.XmlNodeType nodeType)
    // Offset: 0xF796BC
    void Clear(::System::Xml::XmlNodeType nodeType);
    // System.Void SetLineInfo(System.Int32 lineNo, System.Int32 linePos)
    // Offset: 0xF798B4
    void SetLineInfo(int lineNo, int linePos);
    // System.Void SetLineInfo(System.Xml.IXmlLineInfo lineInfo)
    // Offset: 0xF798BC
    void SetLineInfo(::System::Xml::IXmlLineInfo* lineInfo);
    // System.Void SetItemData(System.String localName, System.String prefix, System.String ns, System.Int32 depth)
    // Offset: 0xF799E0
    void SetItemData(::StringW localName, ::StringW prefix, ::StringW ns, int depth);
    // System.Void SetItemData(System.String value)
    // Offset: 0xF79A60
    void SetItemData(::StringW value);
    // System.Void SetItemData(System.String value, System.String originalStringValue)
    // Offset: 0xF79A68
    void SetItemData(::StringW value, ::StringW originalStringValue);
    // public System.Void .ctor()
    // Offset: 0xF79690
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ValidatingReaderNodeData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidatingReaderNodeData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ValidatingReaderNodeData*, creationType>()));
    }
  }; // System.Xml.ValidatingReaderNodeData
  #pragma pack(pop)
  static check_size<sizeof(ValidatingReaderNodeData), 88 + sizeof(int)> __System_Xml_ValidatingReaderNodeDataSizeCheck;
  static_assert(sizeof(ValidatingReaderNodeData) == 0x5C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::get_LocalName
// Il2CppName: get_LocalName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::ValidatingReaderNodeData::*)()>(&System::Xml::ValidatingReaderNodeData::get_LocalName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "get_LocalName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::set_LocalName
// Il2CppName: set_LocalName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::ValidatingReaderNodeData::*)(::StringW)>(&System::Xml::ValidatingReaderNodeData::set_LocalName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "set_LocalName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::get_Namespace
// Il2CppName: get_Namespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::ValidatingReaderNodeData::*)()>(&System::Xml::ValidatingReaderNodeData::get_Namespace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "get_Namespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::set_Namespace
// Il2CppName: set_Namespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::ValidatingReaderNodeData::*)(::StringW)>(&System::Xml::ValidatingReaderNodeData::set_Namespace)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "set_Namespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::get_Prefix
// Il2CppName: get_Prefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::ValidatingReaderNodeData::*)()>(&System::Xml::ValidatingReaderNodeData::get_Prefix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "get_Prefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::set_Prefix
// Il2CppName: set_Prefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::ValidatingReaderNodeData::*)(::StringW)>(&System::Xml::ValidatingReaderNodeData::set_Prefix)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "set_Prefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::get_Depth
// Il2CppName: get_Depth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::ValidatingReaderNodeData::*)()>(&System::Xml::ValidatingReaderNodeData::get_Depth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "get_Depth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::set_Depth
// Il2CppName: set_Depth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::ValidatingReaderNodeData::*)(int)>(&System::Xml::ValidatingReaderNodeData::set_Depth)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "set_Depth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::get_RawValue
// Il2CppName: get_RawValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::ValidatingReaderNodeData::*)()>(&System::Xml::ValidatingReaderNodeData::get_RawValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "get_RawValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::set_RawValue
// Il2CppName: set_RawValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::ValidatingReaderNodeData::*)(::StringW)>(&System::Xml::ValidatingReaderNodeData::set_RawValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "set_RawValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::get_OriginalStringValue
// Il2CppName: get_OriginalStringValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::ValidatingReaderNodeData::*)()>(&System::Xml::ValidatingReaderNodeData::get_OriginalStringValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "get_OriginalStringValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::get_NodeType
// Il2CppName: get_NodeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XmlNodeType (System::Xml::ValidatingReaderNodeData::*)()>(&System::Xml::ValidatingReaderNodeData::get_NodeType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "get_NodeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::set_NodeType
// Il2CppName: set_NodeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::ValidatingReaderNodeData::*)(::System::Xml::XmlNodeType)>(&System::Xml::ValidatingReaderNodeData::set_NodeType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlNodeType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "set_NodeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::get_AttInfo
// Il2CppName: get_AttInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::AttributePSVIInfo* (System::Xml::ValidatingReaderNodeData::*)()>(&System::Xml::ValidatingReaderNodeData::get_AttInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "get_AttInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::set_AttInfo
// Il2CppName: set_AttInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::ValidatingReaderNodeData::*)(::System::Xml::AttributePSVIInfo*)>(&System::Xml::ValidatingReaderNodeData::set_AttInfo)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Xml", "AttributePSVIInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "set_AttInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::get_LineNumber
// Il2CppName: get_LineNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::ValidatingReaderNodeData::*)()>(&System::Xml::ValidatingReaderNodeData::get_LineNumber)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "get_LineNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::get_LinePosition
// Il2CppName: get_LinePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::ValidatingReaderNodeData::*)()>(&System::Xml::ValidatingReaderNodeData::get_LinePosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "get_LinePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::GetAtomizedNameWPrefix
// Il2CppName: GetAtomizedNameWPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::ValidatingReaderNodeData::*)(::System::Xml::XmlNameTable*)>(&System::Xml::ValidatingReaderNodeData::GetAtomizedNameWPrefix)> {
  static const MethodInfo* get() {
    static auto* nameTable = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlNameTable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "GetAtomizedNameWPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameTable});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::ValidatingReaderNodeData::*)(::System::Xml::XmlNodeType)>(&System::Xml::ValidatingReaderNodeData::Clear)> {
  static const MethodInfo* get() {
    static auto* nodeType = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlNodeType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nodeType});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::SetLineInfo
// Il2CppName: SetLineInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::ValidatingReaderNodeData::*)(int, int)>(&System::Xml::ValidatingReaderNodeData::SetLineInfo)> {
  static const MethodInfo* get() {
    static auto* lineNo = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* linePos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "SetLineInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lineNo, linePos});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::SetLineInfo
// Il2CppName: SetLineInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::ValidatingReaderNodeData::*)(::System::Xml::IXmlLineInfo*)>(&System::Xml::ValidatingReaderNodeData::SetLineInfo)> {
  static const MethodInfo* get() {
    static auto* lineInfo = &::il2cpp_utils::GetClassFromName("System.Xml", "IXmlLineInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "SetLineInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lineInfo});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::SetItemData
// Il2CppName: SetItemData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::ValidatingReaderNodeData::*)(::StringW, ::StringW, ::StringW, int)>(&System::Xml::ValidatingReaderNodeData::SetItemData)> {
  static const MethodInfo* get() {
    static auto* localName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ns = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* depth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "SetItemData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{localName, prefix, ns, depth});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::SetItemData
// Il2CppName: SetItemData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::ValidatingReaderNodeData::*)(::StringW)>(&System::Xml::ValidatingReaderNodeData::SetItemData)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "SetItemData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::SetItemData
// Il2CppName: SetItemData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::ValidatingReaderNodeData::*)(::StringW, ::StringW)>(&System::Xml::ValidatingReaderNodeData::SetItemData)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* originalStringValue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ValidatingReaderNodeData*), "SetItemData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, originalStringValue});
  }
};
// Writing MetadataGetter for method: System::Xml::ValidatingReaderNodeData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
