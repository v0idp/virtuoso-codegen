// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.XmlAsyncCheckReaderWithLineInfoNS
#include "System/Xml/XmlAsyncCheckReaderWithLineInfoNS.hpp"
// Including type: System.Xml.Schema.IXmlSchemaInfo
#include "System/Xml/Schema/IXmlSchemaInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlSchemaValidity
  struct XmlSchemaValidity;
  // Forward declaring type: XmlSchemaSimpleType
  class XmlSchemaSimpleType;
  // Forward declaring type: XmlSchemaType
  class XmlSchemaType;
  // Forward declaring type: XmlSchemaElement
  class XmlSchemaElement;
  // Forward declaring type: XmlSchemaAttribute
  class XmlSchemaAttribute;
}
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Skipping declaration: XmlReader because it is already included!
}
// Completed forward declares
// Type namespace: System.Xml
namespace System::Xml {
  // Forward declaring type: XmlAsyncCheckReaderWithLineInfoNSSchema
  class XmlAsyncCheckReaderWithLineInfoNSSchema;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema*, "System.Xml", "XmlAsyncCheckReaderWithLineInfoNSSchema");
// Type namespace: System.Xml
namespace System::Xml {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.XmlAsyncCheckReaderWithLineInfoNSSchema
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlAsyncCheckReaderWithLineInfoNSSchema : public ::System::Xml::XmlAsyncCheckReaderWithLineInfoNS/*, public ::System::Xml::Schema::IXmlSchemaInfo*/ {
    public:
    public:
    // private readonly System.Xml.Schema.IXmlSchemaInfo readerAsIXmlSchemaInfo
    // Size: 0x8
    // Offset: 0x30
    ::System::Xml::Schema::IXmlSchemaInfo* readerAsIXmlSchemaInfo;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::IXmlSchemaInfo*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Xml::Schema::IXmlSchemaInfo
    operator ::System::Xml::Schema::IXmlSchemaInfo() noexcept {
      return *reinterpret_cast<::System::Xml::Schema::IXmlSchemaInfo*>(this);
    }
    // Get instance field reference: private readonly System.Xml.Schema.IXmlSchemaInfo readerAsIXmlSchemaInfo
    [[deprecated("Use field access instead!")]] ::System::Xml::Schema::IXmlSchemaInfo*& dyn_readerAsIXmlSchemaInfo();
    // private System.Xml.Schema.XmlSchemaValidity System.Xml.Schema.IXmlSchemaInfo.get_Validity()
    // Offset: 0x11B53B4
    ::System::Xml::Schema::XmlSchemaValidity System_Xml_Schema_IXmlSchemaInfo_get_Validity();
    // private System.Boolean System.Xml.Schema.IXmlSchemaInfo.get_IsDefault()
    // Offset: 0x11B5460
    bool System_Xml_Schema_IXmlSchemaInfo_get_IsDefault();
    // private System.Boolean System.Xml.Schema.IXmlSchemaInfo.get_IsNil()
    // Offset: 0x11B5510
    bool System_Xml_Schema_IXmlSchemaInfo_get_IsNil();
    // private System.Xml.Schema.XmlSchemaSimpleType System.Xml.Schema.IXmlSchemaInfo.get_MemberType()
    // Offset: 0x11B55C0
    ::System::Xml::Schema::XmlSchemaSimpleType* System_Xml_Schema_IXmlSchemaInfo_get_MemberType();
    // private System.Xml.Schema.XmlSchemaType System.Xml.Schema.IXmlSchemaInfo.get_SchemaType()
    // Offset: 0x11B5670
    ::System::Xml::Schema::XmlSchemaType* System_Xml_Schema_IXmlSchemaInfo_get_SchemaType();
    // private System.Xml.Schema.XmlSchemaElement System.Xml.Schema.IXmlSchemaInfo.get_SchemaElement()
    // Offset: 0x11B5720
    ::System::Xml::Schema::XmlSchemaElement* System_Xml_Schema_IXmlSchemaInfo_get_SchemaElement();
    // private System.Xml.Schema.XmlSchemaAttribute System.Xml.Schema.IXmlSchemaInfo.get_SchemaAttribute()
    // Offset: 0x11B57D0
    ::System::Xml::Schema::XmlSchemaAttribute* System_Xml_Schema_IXmlSchemaInfo_get_SchemaAttribute();
    // public System.Void .ctor(System.Xml.XmlReader reader)
    // Offset: 0x11B40D8
    // Implemented from: System.Xml.XmlAsyncCheckReaderWithLineInfoNS
    // Base method: System.Void XmlAsyncCheckReaderWithLineInfoNS::.ctor(System.Xml.XmlReader reader)
    // Base method: System.Void XmlAsyncCheckReaderWithLineInfo::.ctor(System.Xml.XmlReader reader)
    // Base method: System.Void XmlAsyncCheckReader::.ctor(System.Xml.XmlReader reader)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlAsyncCheckReaderWithLineInfoNSSchema* New_ctor(::System::Xml::XmlReader* reader) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlAsyncCheckReaderWithLineInfoNSSchema*, creationType>(reader)));
    }
  }; // System.Xml.XmlAsyncCheckReaderWithLineInfoNSSchema
  #pragma pack(pop)
  static check_size<sizeof(XmlAsyncCheckReaderWithLineInfoNSSchema), 48 + sizeof(::System::Xml::Schema::IXmlSchemaInfo*)> __System_Xml_XmlAsyncCheckReaderWithLineInfoNSSchemaSizeCheck;
  static_assert(sizeof(XmlAsyncCheckReaderWithLineInfoNSSchema) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::System_Xml_Schema_IXmlSchemaInfo_get_Validity
// Il2CppName: System.Xml.Schema.IXmlSchemaInfo.get_Validity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaValidity (System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::*)()>(&System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::System_Xml_Schema_IXmlSchemaInfo_get_Validity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema*), "System.Xml.Schema.IXmlSchemaInfo.get_Validity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::System_Xml_Schema_IXmlSchemaInfo_get_IsDefault
// Il2CppName: System.Xml.Schema.IXmlSchemaInfo.get_IsDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::*)()>(&System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::System_Xml_Schema_IXmlSchemaInfo_get_IsDefault)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema*), "System.Xml.Schema.IXmlSchemaInfo.get_IsDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::System_Xml_Schema_IXmlSchemaInfo_get_IsNil
// Il2CppName: System.Xml.Schema.IXmlSchemaInfo.get_IsNil
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::*)()>(&System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::System_Xml_Schema_IXmlSchemaInfo_get_IsNil)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema*), "System.Xml.Schema.IXmlSchemaInfo.get_IsNil", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::System_Xml_Schema_IXmlSchemaInfo_get_MemberType
// Il2CppName: System.Xml.Schema.IXmlSchemaInfo.get_MemberType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaSimpleType* (System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::*)()>(&System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::System_Xml_Schema_IXmlSchemaInfo_get_MemberType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema*), "System.Xml.Schema.IXmlSchemaInfo.get_MemberType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::System_Xml_Schema_IXmlSchemaInfo_get_SchemaType
// Il2CppName: System.Xml.Schema.IXmlSchemaInfo.get_SchemaType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaType* (System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::*)()>(&System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::System_Xml_Schema_IXmlSchemaInfo_get_SchemaType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema*), "System.Xml.Schema.IXmlSchemaInfo.get_SchemaType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::System_Xml_Schema_IXmlSchemaInfo_get_SchemaElement
// Il2CppName: System.Xml.Schema.IXmlSchemaInfo.get_SchemaElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaElement* (System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::*)()>(&System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::System_Xml_Schema_IXmlSchemaInfo_get_SchemaElement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema*), "System.Xml.Schema.IXmlSchemaInfo.get_SchemaElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::System_Xml_Schema_IXmlSchemaInfo_get_SchemaAttribute
// Il2CppName: System.Xml.Schema.IXmlSchemaInfo.get_SchemaAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaAttribute* (System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::*)()>(&System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::System_Xml_Schema_IXmlSchemaInfo_get_SchemaAttribute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema*), "System.Xml.Schema.IXmlSchemaInfo.get_SchemaAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlAsyncCheckReaderWithLineInfoNSSchema::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
