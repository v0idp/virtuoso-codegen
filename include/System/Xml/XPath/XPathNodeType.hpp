// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System.Xml.XPath
namespace System::Xml::XPath {
  // Forward declaring type: XPathNodeType
  struct XPathNodeType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::XPath::XPathNodeType, "System.Xml.XPath", "XPathNodeType");
// Type namespace: System.Xml.XPath
namespace System::Xml::XPath {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.XPath.XPathNodeType
  // [TokenAttribute] Offset: FFFFFFFF
  struct XPathNodeType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: XPathNodeType
    constexpr XPathNodeType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.Xml.XPath.XPathNodeType Root
    static constexpr const int Root = 0;
    // Get static field: static public System.Xml.XPath.XPathNodeType Root
    static ::System::Xml::XPath::XPathNodeType _get_Root();
    // Set static field: static public System.Xml.XPath.XPathNodeType Root
    static void _set_Root(::System::Xml::XPath::XPathNodeType value);
    // static field const value: static public System.Xml.XPath.XPathNodeType Element
    static constexpr const int Element = 1;
    // Get static field: static public System.Xml.XPath.XPathNodeType Element
    static ::System::Xml::XPath::XPathNodeType _get_Element();
    // Set static field: static public System.Xml.XPath.XPathNodeType Element
    static void _set_Element(::System::Xml::XPath::XPathNodeType value);
    // static field const value: static public System.Xml.XPath.XPathNodeType Attribute
    static constexpr const int Attribute = 2;
    // Get static field: static public System.Xml.XPath.XPathNodeType Attribute
    static ::System::Xml::XPath::XPathNodeType _get_Attribute();
    // Set static field: static public System.Xml.XPath.XPathNodeType Attribute
    static void _set_Attribute(::System::Xml::XPath::XPathNodeType value);
    // static field const value: static public System.Xml.XPath.XPathNodeType Namespace
    static constexpr const int Namespace = 3;
    // Get static field: static public System.Xml.XPath.XPathNodeType Namespace
    static ::System::Xml::XPath::XPathNodeType _get_Namespace();
    // Set static field: static public System.Xml.XPath.XPathNodeType Namespace
    static void _set_Namespace(::System::Xml::XPath::XPathNodeType value);
    // static field const value: static public System.Xml.XPath.XPathNodeType Text
    static constexpr const int Text = 4;
    // Get static field: static public System.Xml.XPath.XPathNodeType Text
    static ::System::Xml::XPath::XPathNodeType _get_Text();
    // Set static field: static public System.Xml.XPath.XPathNodeType Text
    static void _set_Text(::System::Xml::XPath::XPathNodeType value);
    // static field const value: static public System.Xml.XPath.XPathNodeType SignificantWhitespace
    static constexpr const int SignificantWhitespace = 5;
    // Get static field: static public System.Xml.XPath.XPathNodeType SignificantWhitespace
    static ::System::Xml::XPath::XPathNodeType _get_SignificantWhitespace();
    // Set static field: static public System.Xml.XPath.XPathNodeType SignificantWhitespace
    static void _set_SignificantWhitespace(::System::Xml::XPath::XPathNodeType value);
    // static field const value: static public System.Xml.XPath.XPathNodeType Whitespace
    static constexpr const int Whitespace = 6;
    // Get static field: static public System.Xml.XPath.XPathNodeType Whitespace
    static ::System::Xml::XPath::XPathNodeType _get_Whitespace();
    // Set static field: static public System.Xml.XPath.XPathNodeType Whitespace
    static void _set_Whitespace(::System::Xml::XPath::XPathNodeType value);
    // static field const value: static public System.Xml.XPath.XPathNodeType ProcessingInstruction
    static constexpr const int ProcessingInstruction = 7;
    // Get static field: static public System.Xml.XPath.XPathNodeType ProcessingInstruction
    static ::System::Xml::XPath::XPathNodeType _get_ProcessingInstruction();
    // Set static field: static public System.Xml.XPath.XPathNodeType ProcessingInstruction
    static void _set_ProcessingInstruction(::System::Xml::XPath::XPathNodeType value);
    // static field const value: static public System.Xml.XPath.XPathNodeType Comment
    static constexpr const int Comment = 8;
    // Get static field: static public System.Xml.XPath.XPathNodeType Comment
    static ::System::Xml::XPath::XPathNodeType _get_Comment();
    // Set static field: static public System.Xml.XPath.XPathNodeType Comment
    static void _set_Comment(::System::Xml::XPath::XPathNodeType value);
    // static field const value: static public System.Xml.XPath.XPathNodeType All
    static constexpr const int All = 9;
    // Get static field: static public System.Xml.XPath.XPathNodeType All
    static ::System::Xml::XPath::XPathNodeType _get_All();
    // Set static field: static public System.Xml.XPath.XPathNodeType All
    static void _set_All(::System::Xml::XPath::XPathNodeType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // System.Xml.XPath.XPathNodeType
  #pragma pack(pop)
  static check_size<sizeof(XPathNodeType), 0 + sizeof(int)> __System_Xml_XPath_XPathNodeTypeSizeCheck;
  static_assert(sizeof(XPathNodeType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
