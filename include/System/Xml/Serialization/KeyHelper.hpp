// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: KeyHelper
  class KeyHelper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Serialization::KeyHelper);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Serialization::KeyHelper*, "System.Xml.Serialization", "KeyHelper");
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Serialization.KeyHelper
  // [TokenAttribute] Offset: FFFFFFFF
  class KeyHelper : public ::Il2CppObject {
    public:
    // static public System.Void AddField(System.Text.StringBuilder sb, System.Int32 n, System.String val)
    // Offset: 0xAF27D0
    static void AddField(::System::Text::StringBuilder* sb, int n, ::StringW val);
    // static public System.Void AddField(System.Text.StringBuilder sb, System.Int32 n, System.String val, System.String def)
    // Offset: 0xAF27D8
    static void AddField(::System::Text::StringBuilder* sb, int n, ::StringW val, ::StringW def);
    // static public System.Void AddField(System.Text.StringBuilder sb, System.Int32 n, System.Boolean val)
    // Offset: 0xAF28D0
    static void AddField(::System::Text::StringBuilder* sb, int n, bool val);
    // static public System.Void AddField(System.Text.StringBuilder sb, System.Int32 n, System.Boolean val, System.Boolean def)
    // Offset: 0xAF28DC
    static void AddField(::System::Text::StringBuilder* sb, int n, bool val, bool def);
    // static public System.Void AddField(System.Text.StringBuilder sb, System.Int32 n, System.Int32 val, System.Int32 def)
    // Offset: 0xAF2928
    static void AddField(::System::Text::StringBuilder* sb, int n, int val, int def);
    // static public System.Void AddField(System.Text.StringBuilder sb, System.Int32 n, System.Type val)
    // Offset: 0xAF29F4
    static void AddField(::System::Text::StringBuilder* sb, int n, ::System::Type* val);
  }; // System.Xml.Serialization.KeyHelper
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Serialization::KeyHelper::AddField
// Il2CppName: AddField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Text::StringBuilder*, int, ::StringW)>(&System::Xml::Serialization::KeyHelper::AddField)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* n = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::KeyHelper*), "AddField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, n, val});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::KeyHelper::AddField
// Il2CppName: AddField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Text::StringBuilder*, int, ::StringW, ::StringW)>(&System::Xml::Serialization::KeyHelper::AddField)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* n = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* def = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::KeyHelper*), "AddField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, n, val, def});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::KeyHelper::AddField
// Il2CppName: AddField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Text::StringBuilder*, int, bool)>(&System::Xml::Serialization::KeyHelper::AddField)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* n = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::KeyHelper*), "AddField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, n, val});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::KeyHelper::AddField
// Il2CppName: AddField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Text::StringBuilder*, int, bool, bool)>(&System::Xml::Serialization::KeyHelper::AddField)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* n = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* def = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::KeyHelper*), "AddField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, n, val, def});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::KeyHelper::AddField
// Il2CppName: AddField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Text::StringBuilder*, int, int, int)>(&System::Xml::Serialization::KeyHelper::AddField)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* n = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* def = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::KeyHelper*), "AddField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, n, val, def});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::KeyHelper::AddField
// Il2CppName: AddField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Text::StringBuilder*, int, ::System::Type*)>(&System::Xml::Serialization::KeyHelper::AddField)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* n = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::KeyHelper*), "AddField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, n, val});
  }
};
