// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlSchemaProviderAttribute
  class XmlSchemaProviderAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Serialization::XmlSchemaProviderAttribute);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Serialization::XmlSchemaProviderAttribute*, "System.Xml.Serialization", "XmlSchemaProviderAttribute");
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Size: 0x19
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Serialization.XmlSchemaProviderAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: 6A46A4
  class XmlSchemaProviderAttribute : public ::System::Attribute {
    public:
    public:
    // private System.String _methodName
    // Size: 0x8
    // Offset: 0x10
    ::StringW methodName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean _isAny
    // Size: 0x1
    // Offset: 0x18
    bool isAny;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private System.String _methodName
    [[deprecated]] ::StringW& dyn__methodName();
    // Get instance field reference: private System.Boolean _isAny
    [[deprecated]] bool& dyn__isAny();
    // public System.String get_MethodName()
    // Offset: 0xF2EB70
    ::StringW get_MethodName();
    // public System.Boolean get_IsAny()
    // Offset: 0xF2EB78
    bool get_IsAny();
    // public System.Void set_IsAny(System.Boolean value)
    // Offset: 0xF2EB80
    void set_IsAny(bool value);
    // public System.Void .ctor(System.String methodName)
    // Offset: 0xF2EB44
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlSchemaProviderAttribute* New_ctor(::StringW methodName) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSchemaProviderAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlSchemaProviderAttribute*, creationType>(methodName)));
    }
  }; // System.Xml.Serialization.XmlSchemaProviderAttribute
  #pragma pack(pop)
  static check_size<sizeof(XmlSchemaProviderAttribute), 24 + sizeof(bool)> __System_Xml_Serialization_XmlSchemaProviderAttributeSizeCheck;
  static_assert(sizeof(XmlSchemaProviderAttribute) == 0x19);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSchemaProviderAttribute::get_MethodName
// Il2CppName: get_MethodName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Serialization::XmlSchemaProviderAttribute::*)()>(&System::Xml::Serialization::XmlSchemaProviderAttribute::get_MethodName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSchemaProviderAttribute*), "get_MethodName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSchemaProviderAttribute::get_IsAny
// Il2CppName: get_IsAny
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Serialization::XmlSchemaProviderAttribute::*)()>(&System::Xml::Serialization::XmlSchemaProviderAttribute::get_IsAny)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSchemaProviderAttribute*), "get_IsAny", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSchemaProviderAttribute::set_IsAny
// Il2CppName: set_IsAny
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSchemaProviderAttribute::*)(bool)>(&System::Xml::Serialization::XmlSchemaProviderAttribute::set_IsAny)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSchemaProviderAttribute*), "set_IsAny", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSchemaProviderAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
