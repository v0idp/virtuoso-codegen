// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: TypeMember
  class TypeMember;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Serialization::TypeMember);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Serialization::TypeMember*, "System.Xml.Serialization", "TypeMember");
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Serialization.TypeMember
  // [TokenAttribute] Offset: FFFFFFFF
  class TypeMember : public ::Il2CppObject {
    public:
    public:
    // private System.Type type
    // Size: 0x8
    // Offset: 0x10
    ::System::Type* type;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    // private System.String member
    // Size: 0x8
    // Offset: 0x18
    ::StringW member;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: private System.Type type
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn_type();
    // Get instance field reference: private System.String member
    [[deprecated("Use field access instead!")]] ::StringW& dyn_member();
    // System.Void .ctor(System.Type type, System.String member)
    // Offset: 0xF72A1C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TypeMember* New_ctor(::System::Type* type, ::StringW member) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::TypeMember::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TypeMember*, creationType>(type, member)));
    }
    // static public System.Boolean Equals(System.Xml.Serialization.TypeMember tm1, System.Xml.Serialization.TypeMember tm2)
    // Offset: 0xF72B28
    static bool Equals(::System::Xml::Serialization::TypeMember* tm1, ::System::Xml::Serialization::TypeMember* tm2);
    // public override System.Int32 GetHashCode()
    // Offset: 0xF72A54
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0xF72AA8
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.String ToString()
    // Offset: 0xF72BE0
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // System.Xml.Serialization.TypeMember
  #pragma pack(pop)
  static check_size<sizeof(TypeMember), 24 + sizeof(::StringW)> __System_Xml_Serialization_TypeMemberSizeCheck;
  static_assert(sizeof(TypeMember) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Serialization::TypeMember::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Serialization::TypeMember::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Xml::Serialization::TypeMember*, ::System::Xml::Serialization::TypeMember*)>(&System::Xml::Serialization::TypeMember::Equals)> {
  static const MethodInfo* get() {
    static auto* tm1 = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "TypeMember")->byval_arg;
    static auto* tm2 = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "TypeMember")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::TypeMember*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tm1, tm2});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::TypeMember::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::Serialization::TypeMember::*)()>(&System::Xml::Serialization::TypeMember::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::TypeMember*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::TypeMember::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Serialization::TypeMember::*)(::Il2CppObject*)>(&System::Xml::Serialization::TypeMember::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::TypeMember*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::TypeMember::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Serialization::TypeMember::*)()>(&System::Xml::Serialization::TypeMember::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::TypeMember*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
