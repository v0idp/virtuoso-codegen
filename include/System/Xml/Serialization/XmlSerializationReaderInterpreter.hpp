// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Serialization.XmlSerializationReader
#include "System/Xml/Serialization/XmlSerializationReader.hpp"
// Including type: System.Xml.Serialization.SerializationFormat
#include "System/Xml/Serialization/SerializationFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlMapping
  class XmlMapping;
  // Forward declaring type: XmlTypeMapping
  class XmlTypeMapping;
  // Forward declaring type: XmlMembersMapping
  class XmlMembersMapping;
  // Forward declaring type: ClassMap
  class ClassMap;
  // Forward declaring type: XmlTypeMapMember
  class XmlTypeMapMember;
  // Forward declaring type: TypeData
  class TypeData;
  // Forward declaring type: XmlTypeMapElementInfo
  class XmlTypeMapElementInfo;
}
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlQualifiedName
  class XmlQualifiedName;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlSerializationReaderInterpreter
  class XmlSerializationReaderInterpreter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Serialization::XmlSerializationReaderInterpreter);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Serialization::XmlSerializationReaderInterpreter*, "System.Xml.Serialization", "XmlSerializationReaderInterpreter");
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Size: 0xDC
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Serialization.XmlSerializationReaderInterpreter
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlSerializationReaderInterpreter : public ::System::Xml::Serialization::XmlSerializationReader {
    public:
    // Nested type: ::System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupCallbackInfo
    class FixupCallbackInfo;
    // Nested type: ::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReaderCallbackInfo
    class ReaderCallbackInfo;
    public:
    // private System.Xml.Serialization.XmlMapping _typeMap
    // Size: 0x8
    // Offset: 0xD0
    ::System::Xml::Serialization::XmlMapping* typeMap;
    // Field size check
    static_assert(sizeof(::System::Xml::Serialization::XmlMapping*) == 0x8);
    // private System.Xml.Serialization.SerializationFormat _format
    // Size: 0x4
    // Offset: 0xD8
    ::System::Xml::Serialization::SerializationFormat format;
    // Field size check
    static_assert(sizeof(::System::Xml::Serialization::SerializationFormat) == 0x4);
    public:
    // Get static field: static private readonly System.Xml.XmlQualifiedName AnyType
    static ::System::Xml::XmlQualifiedName* _get_AnyType();
    // Set static field: static private readonly System.Xml.XmlQualifiedName AnyType
    static void _set_AnyType(::System::Xml::XmlQualifiedName* value);
    // Get static field: static private readonly System.Object[] empty_array
    static ::ArrayW<::Il2CppObject*> _get_empty_array();
    // Set static field: static private readonly System.Object[] empty_array
    static void _set_empty_array(::ArrayW<::Il2CppObject*> value);
    // Get instance field reference: private System.Xml.Serialization.XmlMapping _typeMap
    [[deprecated]] ::System::Xml::Serialization::XmlMapping*& dyn__typeMap();
    // Get instance field reference: private System.Xml.Serialization.SerializationFormat _format
    [[deprecated]] ::System::Xml::Serialization::SerializationFormat& dyn__format();
    // public System.Void .ctor(System.Xml.Serialization.XmlMapping typeMap)
    // Offset: 0x131E7B4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlSerializationReaderInterpreter* New_ctor(::System::Xml::Serialization::XmlMapping* typeMap) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlSerializationReaderInterpreter*, creationType>(typeMap)));
    }
    // static private System.Void .cctor()
    // Offset: 0x1324200
    static void _cctor();
    // public System.Object ReadRoot()
    // Offset: 0x131EB84
    ::Il2CppObject* ReadRoot();
    // private System.Object ReadEncodedObject(System.Xml.Serialization.XmlTypeMapping typeMap)
    // Offset: 0x131ED70
    ::Il2CppObject* ReadEncodedObject(::System::Xml::Serialization::XmlTypeMapping* typeMap);
    // protected System.Object ReadMessage(System.Xml.Serialization.XmlMembersMapping typeMap)
    // Offset: 0x131EE74
    ::Il2CppObject* ReadMessage(::System::Xml::Serialization::XmlMembersMapping* typeMap);
    // private System.Object ReadRoot(System.Xml.Serialization.XmlTypeMapping rootMap)
    // Offset: 0x131EC90
    ::Il2CppObject* ReadRoot(::System::Xml::Serialization::XmlTypeMapping* rootMap);
    // protected System.Object ReadObject(System.Xml.Serialization.XmlTypeMapping typeMap, System.Boolean isNullable, System.Boolean checkType)
    // Offset: 0x132191C
    ::Il2CppObject* ReadObject(::System::Xml::Serialization::XmlTypeMapping* typeMap, bool isNullable, bool checkType);
    // protected System.Object ReadClassInstance(System.Xml.Serialization.XmlTypeMapping typeMap, System.Boolean isNullable, System.Boolean checkType)
    // Offset: 0x13220D8
    ::Il2CppObject* ReadClassInstance(::System::Xml::Serialization::XmlTypeMapping* typeMap, bool isNullable, bool checkType);
    // protected System.Void ReadClassInstanceMembers(System.Xml.Serialization.XmlTypeMapping typeMap, System.Object ob)
    // Offset: 0x1322410
    void ReadClassInstanceMembers(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::Il2CppObject* ob);
    // private System.Void ReadAttributeMembers(System.Xml.Serialization.ClassMap map, System.Object ob, System.Boolean isValueList)
    // Offset: 0x131F46C
    void ReadAttributeMembers(::System::Xml::Serialization::ClassMap* map, ::Il2CppObject* ob, bool isValueList);
    // private System.Void ReadMembers(System.Xml.Serialization.ClassMap map, System.Object ob, System.Boolean isValueList, System.Boolean readBySoapOrder)
    // Offset: 0x131F88C
    void ReadMembers(::System::Xml::Serialization::ClassMap* map, ::Il2CppObject* ob, bool isValueList, bool readBySoapOrder);
    // private System.Void SetListMembersDefaults(System.Xml.Serialization.ClassMap map, System.Object ob, System.Boolean isValueList)
    // Offset: 0x1322C70
    void SetListMembersDefaults(::System::Xml::Serialization::ClassMap* map, ::Il2CppObject* ob, bool isValueList);
    // System.Void FixupMembers(System.Xml.Serialization.ClassMap map, System.Object obfixup, System.Boolean isValueList)
    // Offset: 0x1323214
    void FixupMembers(::System::Xml::Serialization::ClassMap* map, ::Il2CppObject* obfixup, bool isValueList);
    // protected System.Void ProcessUnknownAttribute(System.Object target)
    // Offset: 0x13235EC
    void ProcessUnknownAttribute(::Il2CppObject* target);
    // protected System.Void ProcessUnknownElement(System.Object target)
    // Offset: 0x13235F4
    void ProcessUnknownElement(::Il2CppObject* target);
    // private System.Boolean IsReadOnly(System.Xml.Serialization.XmlTypeMapMember member, System.Xml.Serialization.TypeData memType, System.Object ob, System.Boolean isValueList)
    // Offset: 0x1322DC4
    bool IsReadOnly(::System::Xml::Serialization::XmlTypeMapMember* member, ::System::Xml::Serialization::TypeData* memType, ::Il2CppObject* ob, bool isValueList);
    // private System.Void SetMemberValue(System.Xml.Serialization.XmlTypeMapMember member, System.Object ob, System.Object value, System.Boolean isValueList)
    // Offset: 0x1322624
    void SetMemberValue(::System::Xml::Serialization::XmlTypeMapMember* member, ::Il2CppObject* ob, ::Il2CppObject* value, bool isValueList);
    // private System.Void SetMemberValueFromAttr(System.Xml.Serialization.XmlTypeMapMember member, System.Object ob, System.Object value, System.Boolean isValueList)
    // Offset: 0x131F398
    void SetMemberValueFromAttr(::System::Xml::Serialization::XmlTypeMapMember* member, ::Il2CppObject* ob, ::Il2CppObject* value, bool isValueList);
    // private System.Object GetMemberValue(System.Xml.Serialization.XmlTypeMapMember member, System.Object ob, System.Boolean isValueList)
    // Offset: 0x13227B8
    ::Il2CppObject* GetMemberValue(::System::Xml::Serialization::XmlTypeMapMember* member, ::Il2CppObject* ob, bool isValueList);
    // private System.Object ReadObjectElement(System.Xml.Serialization.XmlTypeMapElementInfo elem)
    // Offset: 0x1322F88
    ::Il2CppObject* ReadObjectElement(::System::Xml::Serialization::XmlTypeMapElementInfo* elem);
    // private System.Object ReadPrimitiveValue(System.Xml.Serialization.XmlTypeMapElementInfo elem)
    // Offset: 0x13238FC
    ::Il2CppObject* ReadPrimitiveValue(::System::Xml::Serialization::XmlTypeMapElementInfo* elem);
    // private System.Object GetValueFromXmlString(System.String value, System.Xml.Serialization.TypeData typeData, System.Xml.Serialization.XmlTypeMapping typeMap)
    // Offset: 0x13224BC
    ::Il2CppObject* GetValueFromXmlString(::StringW value, ::System::Xml::Serialization::TypeData* typeData, ::System::Xml::Serialization::XmlTypeMapping* typeMap);
    // private System.Object ReadListElement(System.Xml.Serialization.XmlTypeMapping typeMap, System.Boolean isNullable, System.Object list, System.Boolean canCreateInstance)
    // Offset: 0x1321A1C
    ::Il2CppObject* ReadListElement(::System::Xml::Serialization::XmlTypeMapping* typeMap, bool isNullable, ::Il2CppObject* list, bool canCreateInstance);
    // private System.Object ReadListString(System.Xml.Serialization.XmlTypeMapping typeMap, System.String values)
    // Offset: 0x1323A14
    ::Il2CppObject* ReadListString(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::StringW values);
    // private System.Void AddListValue(System.Xml.Serialization.TypeData listType, ref System.Object list, System.Int32 index, System.Object value, System.Boolean canCreateInstance)
    // Offset: 0x1322968
    void AddListValue(::System::Xml::Serialization::TypeData* listType, ByRef<::Il2CppObject*> list, int index, ::Il2CppObject* value, bool canCreateInstance);
    // static private System.Object CreateInstance(System.Type type, System.Boolean nonPublic)
    // Offset: 0x1322404
    static ::Il2CppObject* CreateInstance(::System::Type* type, bool nonPublic);
    // private System.Object CreateInstance(System.Type type)
    // Offset: 0x131F328
    ::Il2CppObject* CreateInstance(::System::Type* type);
    // private System.Object CreateList(System.Type listType)
    // Offset: 0x1322EC4
    ::Il2CppObject* CreateList(::System::Type* listType);
    // private System.Object InitializeList(System.Xml.Serialization.TypeData listType)
    // Offset: 0x1322E2C
    ::Il2CppObject* InitializeList(::System::Xml::Serialization::TypeData* listType);
    // private System.Void FillList(System.Object list, System.Object items)
    // Offset: 0x1323DD4
    void FillList(::Il2CppObject* list, ::Il2CppObject* items);
    // private System.Void CopyEnumerableList(System.Object source, System.Object dest)
    // Offset: 0x1323DE4
    void CopyEnumerableList(::Il2CppObject* source, ::Il2CppObject* dest);
    // private System.Object ReadXmlNodeElement(System.Xml.Serialization.XmlTypeMapping typeMap, System.Boolean isNullable)
    // Offset: 0x1321900
    ::Il2CppObject* ReadXmlNodeElement(::System::Xml::Serialization::XmlTypeMapping* typeMap, bool isNullable);
    // private System.Object ReadXmlNode(System.Xml.Serialization.TypeData type, System.Boolean wrapped)
    // Offset: 0x1323144
    ::Il2CppObject* ReadXmlNode(::System::Xml::Serialization::TypeData* type, bool wrapped);
    // private System.Object ReadPrimitiveElement(System.Xml.Serialization.XmlTypeMapping typeMap, System.Boolean isNullable)
    // Offset: 0x1321DEC
    ::Il2CppObject* ReadPrimitiveElement(::System::Xml::Serialization::XmlTypeMapping* typeMap, bool isNullable);
    // private System.Object ReadEnumElement(System.Xml.Serialization.XmlTypeMapping typeMap, System.Boolean isNullable)
    // Offset: 0x1321EBC
    ::Il2CppObject* ReadEnumElement(::System::Xml::Serialization::XmlTypeMapping* typeMap, bool isNullable);
    // private System.Object GetEnumValue(System.Xml.Serialization.XmlTypeMapping typeMap, System.String val)
    // Offset: 0x1323C80
    ::Il2CppObject* GetEnumValue(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::StringW val);
    // private System.Object ReadXmlSerializableElement(System.Xml.Serialization.XmlTypeMapping typeMap, System.Boolean isNullable)
    // Offset: 0x1321F34
    ::Il2CppObject* ReadXmlSerializableElement(::System::Xml::Serialization::XmlTypeMapping* typeMap, bool isNullable);
    // protected override System.Void InitCallbacks()
    // Offset: 0x131E7F0
    // Implemented from: System.Xml.Serialization.XmlSerializationReader
    // Base method: System.Void XmlSerializationReader::InitCallbacks()
    void InitCallbacks();
    // protected override System.Void InitIDs()
    // Offset: 0x131EB80
    // Implemented from: System.Xml.Serialization.XmlSerializationReader
    // Base method: System.Void XmlSerializationReader::InitIDs()
    void InitIDs();
  }; // System.Xml.Serialization.XmlSerializationReaderInterpreter
  #pragma pack(pop)
  static check_size<sizeof(XmlSerializationReaderInterpreter), 216 + sizeof(::System::Xml::Serialization::SerializationFormat)> __System_Xml_Serialization_XmlSerializationReaderInterpreterSizeCheck;
  static_assert(sizeof(XmlSerializationReaderInterpreter) == 0xDC);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadRoot
// Il2CppName: ReadRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)()>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ReadRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadEncodedObject
// Il2CppName: ReadEncodedObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadEncodedObject)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ReadEncodedObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadMessage
// Il2CppName: ReadMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::XmlMembersMapping*)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadMessage)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlMembersMapping")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ReadMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadRoot
// Il2CppName: ReadRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadRoot)> {
  static const MethodInfo* get() {
    static auto* rootMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ReadRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rootMap});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadObject
// Il2CppName: ReadObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*, bool, bool)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadObject)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* isNullable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* checkType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ReadObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap, isNullable, checkType});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadClassInstance
// Il2CppName: ReadClassInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*, bool, bool)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadClassInstance)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* isNullable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* checkType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ReadClassInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap, isNullable, checkType});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadClassInstanceMembers
// Il2CppName: ReadClassInstanceMembers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*, ::Il2CppObject*)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadClassInstanceMembers)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ReadClassInstanceMembers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap, ob});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadAttributeMembers
// Il2CppName: ReadAttributeMembers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::ClassMap*, ::Il2CppObject*, bool)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadAttributeMembers)> {
  static const MethodInfo* get() {
    static auto* map = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "ClassMap")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* isValueList = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ReadAttributeMembers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{map, ob, isValueList});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadMembers
// Il2CppName: ReadMembers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::ClassMap*, ::Il2CppObject*, bool, bool)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadMembers)> {
  static const MethodInfo* get() {
    static auto* map = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "ClassMap")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* isValueList = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* readBySoapOrder = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ReadMembers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{map, ob, isValueList, readBySoapOrder});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::SetListMembersDefaults
// Il2CppName: SetListMembersDefaults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::ClassMap*, ::Il2CppObject*, bool)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::SetListMembersDefaults)> {
  static const MethodInfo* get() {
    static auto* map = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "ClassMap")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* isValueList = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "SetListMembersDefaults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{map, ob, isValueList});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupMembers
// Il2CppName: FixupMembers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::ClassMap*, ::Il2CppObject*, bool)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupMembers)> {
  static const MethodInfo* get() {
    static auto* map = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "ClassMap")->byval_arg;
    static auto* obfixup = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* isValueList = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "FixupMembers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{map, obfixup, isValueList});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ProcessUnknownAttribute
// Il2CppName: ProcessUnknownAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::Il2CppObject*)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ProcessUnknownAttribute)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ProcessUnknownAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ProcessUnknownElement
// Il2CppName: ProcessUnknownElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::Il2CppObject*)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ProcessUnknownElement)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ProcessUnknownElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::IsReadOnly
// Il2CppName: IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::XmlTypeMapMember*, ::System::Xml::Serialization::TypeData*, ::Il2CppObject*, bool)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::IsReadOnly)> {
  static const MethodInfo* get() {
    static auto* member = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapMember")->byval_arg;
    static auto* memType = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "TypeData")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* isValueList = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{member, memType, ob, isValueList});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::SetMemberValue
// Il2CppName: SetMemberValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::XmlTypeMapMember*, ::Il2CppObject*, ::Il2CppObject*, bool)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::SetMemberValue)> {
  static const MethodInfo* get() {
    static auto* member = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapMember")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* isValueList = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "SetMemberValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{member, ob, value, isValueList});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::SetMemberValueFromAttr
// Il2CppName: SetMemberValueFromAttr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::XmlTypeMapMember*, ::Il2CppObject*, ::Il2CppObject*, bool)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::SetMemberValueFromAttr)> {
  static const MethodInfo* get() {
    static auto* member = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapMember")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* isValueList = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "SetMemberValueFromAttr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{member, ob, value, isValueList});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::GetMemberValue
// Il2CppName: GetMemberValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::XmlTypeMapMember*, ::Il2CppObject*, bool)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::GetMemberValue)> {
  static const MethodInfo* get() {
    static auto* member = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapMember")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* isValueList = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "GetMemberValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{member, ob, isValueList});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadObjectElement
// Il2CppName: ReadObjectElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::XmlTypeMapElementInfo*)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadObjectElement)> {
  static const MethodInfo* get() {
    static auto* elem = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapElementInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ReadObjectElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{elem});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadPrimitiveValue
// Il2CppName: ReadPrimitiveValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::XmlTypeMapElementInfo*)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadPrimitiveValue)> {
  static const MethodInfo* get() {
    static auto* elem = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapElementInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ReadPrimitiveValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{elem});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::GetValueFromXmlString
// Il2CppName: GetValueFromXmlString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::StringW, ::System::Xml::Serialization::TypeData*, ::System::Xml::Serialization::XmlTypeMapping*)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::GetValueFromXmlString)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* typeData = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "TypeData")->byval_arg;
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "GetValueFromXmlString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, typeData, typeMap});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadListElement
// Il2CppName: ReadListElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*, bool, ::Il2CppObject*, bool)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadListElement)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* isNullable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* list = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* canCreateInstance = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ReadListElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap, isNullable, list, canCreateInstance});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadListString
// Il2CppName: ReadListString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*, ::StringW)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadListString)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* values = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ReadListString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap, values});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::AddListValue
// Il2CppName: AddListValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::TypeData*, ByRef<::Il2CppObject*>, int, ::Il2CppObject*, bool)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::AddListValue)> {
  static const MethodInfo* get() {
    static auto* listType = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "TypeData")->byval_arg;
    static auto* list = &::il2cpp_utils::GetClassFromName("System", "Object")->this_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* canCreateInstance = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "AddListValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{listType, list, index, value, canCreateInstance});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::CreateInstance
// Il2CppName: CreateInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Type*, bool)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::CreateInstance)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* nonPublic = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "CreateInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, nonPublic});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::CreateInstance
// Il2CppName: CreateInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Type*)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::CreateInstance)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "CreateInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::CreateList
// Il2CppName: CreateList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Type*)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::CreateList)> {
  static const MethodInfo* get() {
    static auto* listType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "CreateList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{listType});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::InitializeList
// Il2CppName: InitializeList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::TypeData*)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::InitializeList)> {
  static const MethodInfo* get() {
    static auto* listType = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "TypeData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "InitializeList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{listType});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::FillList
// Il2CppName: FillList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::FillList)> {
  static const MethodInfo* get() {
    static auto* list = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* items = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "FillList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{list, items});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::CopyEnumerableList
// Il2CppName: CopyEnumerableList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::CopyEnumerableList)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* dest = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "CopyEnumerableList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, dest});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadXmlNodeElement
// Il2CppName: ReadXmlNodeElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*, bool)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadXmlNodeElement)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* isNullable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ReadXmlNodeElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap, isNullable});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadXmlNode
// Il2CppName: ReadXmlNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::TypeData*, bool)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadXmlNode)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "TypeData")->byval_arg;
    static auto* wrapped = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ReadXmlNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, wrapped});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadPrimitiveElement
// Il2CppName: ReadPrimitiveElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*, bool)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadPrimitiveElement)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* isNullable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ReadPrimitiveElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap, isNullable});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadEnumElement
// Il2CppName: ReadEnumElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*, bool)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadEnumElement)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* isNullable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ReadEnumElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap, isNullable});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::GetEnumValue
// Il2CppName: GetEnumValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*, ::StringW)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::GetEnumValue)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "GetEnumValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap, val});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadXmlSerializableElement
// Il2CppName: ReadXmlSerializableElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*, bool)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ReadXmlSerializableElement)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* isNullable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "ReadXmlSerializableElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap, isNullable});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::InitCallbacks
// Il2CppName: InitCallbacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)()>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::InitCallbacks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "InitCallbacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::InitIDs
// Il2CppName: InitIDs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationReaderInterpreter::*)()>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::InitIDs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter*), "InitIDs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
