// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Serialization.XmlSerializationWriter
#include "System/Xml/Serialization/XmlSerializationWriter.hpp"
// Including type: System.Xml.Serialization.SerializationFormat
#include "System/Xml/Serialization/SerializationFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlMapping
  class XmlMapping;
  // Forward declaring type: XmlTypeMapping
  class XmlTypeMapping;
  // Forward declaring type: XmlMembersMapping
  class XmlMembersMapping;
  // Forward declaring type: ClassMap
  class ClassMap;
  // Forward declaring type: XmlTypeMapMember
  class XmlTypeMapMember;
  // Forward declaring type: XmlTypeMapElementInfo
  class XmlTypeMapElementInfo;
  // Forward declaring type: TypeData
  class TypeData;
  // Forward declaring type: ListMap
  class ListMap;
  // Forward declaring type: XmlTypeMapMemberAnyElement
  class XmlTypeMapMemberAnyElement;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlQualifiedName
  class XmlQualifiedName;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlSerializationWriterInterpreter
  class XmlSerializationWriterInterpreter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Serialization::XmlSerializationWriterInterpreter);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Serialization::XmlSerializationWriterInterpreter*, "System.Xml.Serialization", "XmlSerializationWriterInterpreter");
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Size: 0x54
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Serialization.XmlSerializationWriterInterpreter
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlSerializationWriterInterpreter : public ::System::Xml::Serialization::XmlSerializationWriter {
    public:
    // Nested type: ::System::Xml::Serialization::XmlSerializationWriterInterpreter::CallbackInfo
    class CallbackInfo;
    public:
    // private System.Xml.Serialization.XmlMapping _typeMap
    // Size: 0x8
    // Offset: 0x48
    ::System::Xml::Serialization::XmlMapping* typeMap;
    // Field size check
    static_assert(sizeof(::System::Xml::Serialization::XmlMapping*) == 0x8);
    // private System.Xml.Serialization.SerializationFormat _format
    // Size: 0x4
    // Offset: 0x50
    ::System::Xml::Serialization::SerializationFormat format;
    // Field size check
    static_assert(sizeof(::System::Xml::Serialization::SerializationFormat) == 0x4);
    public:
    // Get instance field reference: private System.Xml.Serialization.XmlMapping _typeMap
    [[deprecated]] ::System::Xml::Serialization::XmlMapping*& dyn__typeMap();
    // Get instance field reference: private System.Xml.Serialization.SerializationFormat _format
    [[deprecated]] ::System::Xml::Serialization::SerializationFormat& dyn__format();
    // public System.Void .ctor(System.Xml.Serialization.XmlMapping typeMap)
    // Offset: 0x1327B74
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlSerializationWriterInterpreter* New_ctor(::System::Xml::Serialization::XmlMapping* typeMap) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationWriterInterpreter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlSerializationWriterInterpreter*, creationType>(typeMap)));
    }
    // public System.Void WriteRoot(System.Object ob)
    // Offset: 0x1327F68
    void WriteRoot(::Il2CppObject* ob);
    // protected System.Void WriteObject(System.Xml.Serialization.XmlTypeMapping typeMap, System.Object ob, System.String element, System.String namesp, System.Boolean isNullable, System.Boolean needType, System.Boolean writeWrappingElem)
    // Offset: 0x1328168
    void WriteObject(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::Il2CppObject* ob, ::StringW element, ::StringW namesp, bool isNullable, bool needType, bool writeWrappingElem);
    // protected System.Void WriteMessage(System.Xml.Serialization.XmlMembersMapping membersMap, System.Object[] parameters)
    // Offset: 0x1328890
    void WriteMessage(::System::Xml::Serialization::XmlMembersMapping* membersMap, ::ArrayW<::Il2CppObject*> parameters);
    // protected System.Void WriteObjectElement(System.Xml.Serialization.XmlTypeMapping typeMap, System.Object ob, System.String element, System.String namesp)
    // Offset: 0x1328ACC
    void WriteObjectElement(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::Il2CppObject* ob, ::StringW element, ::StringW namesp);
    // protected System.Void WriteObjectElementAttributes(System.Xml.Serialization.XmlTypeMapping typeMap, System.Object ob)
    // Offset: 0x1328BF8
    void WriteObjectElementAttributes(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::Il2CppObject* ob);
    // protected System.Void WriteObjectElementElements(System.Xml.Serialization.XmlTypeMapping typeMap, System.Object ob)
    // Offset: 0x132939C
    void WriteObjectElementElements(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::Il2CppObject* ob);
    // private System.Void WriteMembers(System.Xml.Serialization.ClassMap map, System.Object ob, System.Boolean isValueList)
    // Offset: 0x1328A84
    void WriteMembers(::System::Xml::Serialization::ClassMap* map, ::Il2CppObject* ob, bool isValueList);
    // private System.Void WriteAttributeMembers(System.Xml.Serialization.ClassMap map, System.Object ob, System.Boolean isValueList)
    // Offset: 0x1328CA0
    void WriteAttributeMembers(::System::Xml::Serialization::ClassMap* map, ::Il2CppObject* ob, bool isValueList);
    // private System.Void WriteElementMembers(System.Xml.Serialization.ClassMap map, System.Object ob, System.Boolean isValueList)
    // Offset: 0x1329444
    void WriteElementMembers(::System::Xml::Serialization::ClassMap* map, ::Il2CppObject* ob, bool isValueList);
    // private System.Object GetMemberValue(System.Xml.Serialization.XmlTypeMapMember member, System.Object ob, System.Boolean isValueList)
    // Offset: 0x1329DE4
    ::Il2CppObject* GetMemberValue(::System::Xml::Serialization::XmlTypeMapMember* member, ::Il2CppObject* ob, bool isValueList);
    // private System.Boolean MemberHasValue(System.Xml.Serialization.XmlTypeMapMember member, System.Object ob, System.Boolean isValueList)
    // Offset: 0x1329B88
    bool MemberHasValue(::System::Xml::Serialization::XmlTypeMapMember* member, ::Il2CppObject* ob, bool isValueList);
    // private System.Void WriteMemberElement(System.Xml.Serialization.XmlTypeMapElementInfo elem, System.Object memberValue)
    // Offset: 0x132A12C
    void WriteMemberElement(::System::Xml::Serialization::XmlTypeMapElementInfo* elem, ::Il2CppObject* memberValue);
    // static System.Object ImplicitConvert(System.Object obj, System.Type type)
    // Offset: 0x13235FC
    static ::Il2CppObject* ImplicitConvert(::Il2CppObject* obj, ::System::Type* type);
    // private System.Void WritePrimitiveValueLiteral(System.Object memberValue, System.String name, System.String ns, System.Xml.Serialization.XmlTypeMapping mappedType, System.Xml.Serialization.TypeData typeData, System.Boolean wrapped, System.Boolean isNullable)
    // Offset: 0x132B47C
    void WritePrimitiveValueLiteral(::Il2CppObject* memberValue, ::StringW name, ::StringW ns, ::System::Xml::Serialization::XmlTypeMapping* mappedType, ::System::Xml::Serialization::TypeData* typeData, bool wrapped, bool isNullable);
    // private System.Void WritePrimitiveValueEncoded(System.Object memberValue, System.String name, System.String ns, System.Xml.XmlQualifiedName xsiType, System.Xml.Serialization.XmlTypeMapping mappedType, System.Xml.Serialization.TypeData typeData, System.Boolean wrapped, System.Boolean isNullable)
    // Offset: 0x132B740
    void WritePrimitiveValueEncoded(::Il2CppObject* memberValue, ::StringW name, ::StringW ns, ::System::Xml::XmlQualifiedName* xsiType, ::System::Xml::Serialization::XmlTypeMapping* mappedType, ::System::Xml::Serialization::TypeData* typeData, bool wrapped, bool isNullable);
    // protected System.Void WriteListElement(System.Xml.Serialization.XmlTypeMapping typeMap, System.Object ob, System.String element, System.String namesp)
    // Offset: 0x132BA10
    void WriteListElement(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::Il2CppObject* ob, ::StringW element, ::StringW namesp);
    // private System.Void WriteListContent(System.Object container, System.Xml.Serialization.TypeData listType, System.Xml.Serialization.ListMap map, System.Object ob, System.Text.StringBuilder targetString)
    // Offset: 0x132A694
    void WriteListContent(::Il2CppObject* container, ::System::Xml::Serialization::TypeData* listType, ::System::Xml::Serialization::ListMap* map, ::Il2CppObject* ob, ::System::Text::StringBuilder* targetString);
    // private System.Int32 GetListCount(System.Xml.Serialization.TypeData listType, System.Object ob)
    // Offset: 0x132BC08
    int GetListCount(::System::Xml::Serialization::TypeData* listType, ::Il2CppObject* ob);
    // private System.Void WriteAnyElementContent(System.Xml.Serialization.XmlTypeMapMemberAnyElement member, System.Object memberValue)
    // Offset: 0x132AE74
    void WriteAnyElementContent(::System::Xml::Serialization::XmlTypeMapMemberAnyElement* member, ::Il2CppObject* memberValue);
    // protected System.Void WritePrimitiveElement(System.Xml.Serialization.XmlTypeMapping typeMap, System.Object ob, System.String element, System.String namesp)
    // Offset: 0x132BD44
    void WritePrimitiveElement(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::Il2CppObject* ob, ::StringW element, ::StringW namesp);
    // protected System.Void WriteEnumElement(System.Xml.Serialization.XmlTypeMapping typeMap, System.Object ob, System.String element, System.String namesp)
    // Offset: 0x132BD8C
    void WriteEnumElement(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::Il2CppObject* ob, ::StringW element, ::StringW namesp);
    // private System.String GetStringValue(System.Xml.Serialization.XmlTypeMapping typeMap, System.Xml.Serialization.TypeData type, System.Object value)
    // Offset: 0x1329EBC
    ::StringW GetStringValue(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::System::Xml::Serialization::TypeData* type, ::Il2CppObject* value);
    // private System.String GetEnumXmlValue(System.Xml.Serialization.XmlTypeMapping typeMap, System.Object ob)
    // Offset: 0x132BDC8
    ::StringW GetEnumXmlValue(::System::Xml::Serialization::XmlTypeMapping* typeMap, ::Il2CppObject* ob);
    // protected override System.Void InitCallbacks()
    // Offset: 0x1327BAC
    // Implemented from: System.Xml.Serialization.XmlSerializationWriter
    // Base method: System.Void XmlSerializationWriter::InitCallbacks()
    void InitCallbacks();
  }; // System.Xml.Serialization.XmlSerializationWriterInterpreter
  #pragma pack(pop)
  static check_size<sizeof(XmlSerializationWriterInterpreter), 80 + sizeof(::System::Xml::Serialization::SerializationFormat)> __System_Xml_Serialization_XmlSerializationWriterInterpreterSizeCheck;
  static_assert(sizeof(XmlSerializationWriterInterpreter) == 0x54);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteRoot
// Il2CppName: WriteRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::Il2CppObject*)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteRoot)> {
  static const MethodInfo* get() {
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "WriteRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ob});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteObject
// Il2CppName: WriteObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*, ::Il2CppObject*, ::StringW, ::StringW, bool, bool, bool)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteObject)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* element = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* namesp = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isNullable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* needType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* writeWrappingElem = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "WriteObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap, ob, element, namesp, isNullable, needType, writeWrappingElem});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteMessage
// Il2CppName: WriteMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::System::Xml::Serialization::XmlMembersMapping*, ::ArrayW<::Il2CppObject*>)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteMessage)> {
  static const MethodInfo* get() {
    static auto* membersMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlMembersMapping")->byval_arg;
    static auto* parameters = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "WriteMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{membersMap, parameters});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteObjectElement
// Il2CppName: WriteObjectElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*, ::Il2CppObject*, ::StringW, ::StringW)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteObjectElement)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* element = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* namesp = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "WriteObjectElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap, ob, element, namesp});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteObjectElementAttributes
// Il2CppName: WriteObjectElementAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*, ::Il2CppObject*)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteObjectElementAttributes)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "WriteObjectElementAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap, ob});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteObjectElementElements
// Il2CppName: WriteObjectElementElements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*, ::Il2CppObject*)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteObjectElementElements)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "WriteObjectElementElements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap, ob});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteMembers
// Il2CppName: WriteMembers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::System::Xml::Serialization::ClassMap*, ::Il2CppObject*, bool)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteMembers)> {
  static const MethodInfo* get() {
    static auto* map = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "ClassMap")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* isValueList = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "WriteMembers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{map, ob, isValueList});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteAttributeMembers
// Il2CppName: WriteAttributeMembers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::System::Xml::Serialization::ClassMap*, ::Il2CppObject*, bool)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteAttributeMembers)> {
  static const MethodInfo* get() {
    static auto* map = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "ClassMap")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* isValueList = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "WriteAttributeMembers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{map, ob, isValueList});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteElementMembers
// Il2CppName: WriteElementMembers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::System::Xml::Serialization::ClassMap*, ::Il2CppObject*, bool)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteElementMembers)> {
  static const MethodInfo* get() {
    static auto* map = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "ClassMap")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* isValueList = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "WriteElementMembers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{map, ob, isValueList});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::GetMemberValue
// Il2CppName: GetMemberValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::System::Xml::Serialization::XmlTypeMapMember*, ::Il2CppObject*, bool)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::GetMemberValue)> {
  static const MethodInfo* get() {
    static auto* member = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapMember")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* isValueList = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "GetMemberValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{member, ob, isValueList});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::MemberHasValue
// Il2CppName: MemberHasValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::System::Xml::Serialization::XmlTypeMapMember*, ::Il2CppObject*, bool)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::MemberHasValue)> {
  static const MethodInfo* get() {
    static auto* member = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapMember")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* isValueList = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "MemberHasValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{member, ob, isValueList});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteMemberElement
// Il2CppName: WriteMemberElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::System::Xml::Serialization::XmlTypeMapElementInfo*, ::Il2CppObject*)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteMemberElement)> {
  static const MethodInfo* get() {
    static auto* elem = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapElementInfo")->byval_arg;
    static auto* memberValue = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "WriteMemberElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{elem, memberValue});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::ImplicitConvert
// Il2CppName: ImplicitConvert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::Il2CppObject*, ::System::Type*)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::ImplicitConvert)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "ImplicitConvert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, type});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::WritePrimitiveValueLiteral
// Il2CppName: WritePrimitiveValueLiteral
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::Il2CppObject*, ::StringW, ::StringW, ::System::Xml::Serialization::XmlTypeMapping*, ::System::Xml::Serialization::TypeData*, bool, bool)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::WritePrimitiveValueLiteral)> {
  static const MethodInfo* get() {
    static auto* memberValue = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ns = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* mappedType = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* typeData = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "TypeData")->byval_arg;
    static auto* wrapped = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* isNullable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "WritePrimitiveValueLiteral", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{memberValue, name, ns, mappedType, typeData, wrapped, isNullable});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::WritePrimitiveValueEncoded
// Il2CppName: WritePrimitiveValueEncoded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::Il2CppObject*, ::StringW, ::StringW, ::System::Xml::XmlQualifiedName*, ::System::Xml::Serialization::XmlTypeMapping*, ::System::Xml::Serialization::TypeData*, bool, bool)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::WritePrimitiveValueEncoded)> {
  static const MethodInfo* get() {
    static auto* memberValue = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ns = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* xsiType = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlQualifiedName")->byval_arg;
    static auto* mappedType = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* typeData = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "TypeData")->byval_arg;
    static auto* wrapped = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* isNullable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "WritePrimitiveValueEncoded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{memberValue, name, ns, xsiType, mappedType, typeData, wrapped, isNullable});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteListElement
// Il2CppName: WriteListElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*, ::Il2CppObject*, ::StringW, ::StringW)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteListElement)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* element = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* namesp = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "WriteListElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap, ob, element, namesp});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteListContent
// Il2CppName: WriteListContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::Il2CppObject*, ::System::Xml::Serialization::TypeData*, ::System::Xml::Serialization::ListMap*, ::Il2CppObject*, ::System::Text::StringBuilder*)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteListContent)> {
  static const MethodInfo* get() {
    static auto* container = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* listType = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "TypeData")->byval_arg;
    static auto* map = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "ListMap")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* targetString = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "WriteListContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{container, listType, map, ob, targetString});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::GetListCount
// Il2CppName: GetListCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::System::Xml::Serialization::TypeData*, ::Il2CppObject*)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::GetListCount)> {
  static const MethodInfo* get() {
    static auto* listType = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "TypeData")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "GetListCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{listType, ob});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteAnyElementContent
// Il2CppName: WriteAnyElementContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::System::Xml::Serialization::XmlTypeMapMemberAnyElement*, ::Il2CppObject*)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteAnyElementContent)> {
  static const MethodInfo* get() {
    static auto* member = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapMemberAnyElement")->byval_arg;
    static auto* memberValue = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "WriteAnyElementContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{member, memberValue});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::WritePrimitiveElement
// Il2CppName: WritePrimitiveElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*, ::Il2CppObject*, ::StringW, ::StringW)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::WritePrimitiveElement)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* element = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* namesp = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "WritePrimitiveElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap, ob, element, namesp});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteEnumElement
// Il2CppName: WriteEnumElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*, ::Il2CppObject*, ::StringW, ::StringW)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::WriteEnumElement)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* element = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* namesp = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "WriteEnumElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap, ob, element, namesp});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::GetStringValue
// Il2CppName: GetStringValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*, ::System::Xml::Serialization::TypeData*, ::Il2CppObject*)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::GetStringValue)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "TypeData")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "GetStringValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap, type, value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::GetEnumXmlValue
// Il2CppName: GetEnumXmlValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)(::System::Xml::Serialization::XmlTypeMapping*, ::Il2CppObject*)>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::GetEnumXmlValue)> {
  static const MethodInfo* get() {
    static auto* typeMap = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "GetEnumXmlValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeMap, ob});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationWriterInterpreter::InitCallbacks
// Il2CppName: InitCallbacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationWriterInterpreter::*)()>(&System::Xml::Serialization::XmlSerializationWriterInterpreter::InitCallbacks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationWriterInterpreter*), "InitCallbacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
