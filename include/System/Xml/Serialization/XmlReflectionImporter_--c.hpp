// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Serialization.XmlReflectionImporter
#include "System/Xml/Serialization/XmlReflectionImporter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Comparison`1<T>
  template<typename T>
  class Comparison_1;
}
// Forward declaring namespace: System::Xml::Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlReflectionMember
  class XmlReflectionMember;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Serialization::XmlReflectionImporter::$$c);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Serialization::XmlReflectionImporter::$$c*, "System.Xml.Serialization", "XmlReflectionImporter/<>c");
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Serialization.XmlReflectionImporter/System.Xml.Serialization.<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class XmlReflectionImporter::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Xml.Serialization.XmlReflectionImporter/System.Xml.Serialization.<>c <>9
    static ::System::Xml::Serialization::XmlReflectionImporter::$$c* _get_$$9();
    // Set static field: static public readonly System.Xml.Serialization.XmlReflectionImporter/System.Xml.Serialization.<>c <>9
    static void _set_$$9(::System::Xml::Serialization::XmlReflectionImporter::$$c* value);
    // Get static field: static public System.Comparison`1<System.Xml.Serialization.XmlReflectionMember> <>9__28_0
    static ::System::Comparison_1<::System::Xml::Serialization::XmlReflectionMember*>* _get_$$9__28_0();
    // Set static field: static public System.Comparison`1<System.Xml.Serialization.XmlReflectionMember> <>9__28_0
    static void _set_$$9__28_0(::System::Comparison_1<::System::Xml::Serialization::XmlReflectionMember*>* value);
    // static private System.Void .cctor()
    // Offset: 0xC21578
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0xC215D8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlReflectionImporter::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlReflectionImporter::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlReflectionImporter::$$c*, creationType>()));
    }
    // System.Int32 <ImportClassMapping>b__28_0(System.Xml.Serialization.XmlReflectionMember m1, System.Xml.Serialization.XmlReflectionMember m2)
    // Offset: 0xC215E0
    int $ImportClassMapping$b__28_0(::System::Xml::Serialization::XmlReflectionMember* m1, ::System::Xml::Serialization::XmlReflectionMember* m2);
  }; // System.Xml.Serialization.XmlReflectionImporter/System.Xml.Serialization.<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Serialization::XmlReflectionImporter::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Xml::Serialization::XmlReflectionImporter::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlReflectionImporter::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlReflectionImporter::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Serialization::XmlReflectionImporter::$$c::$ImportClassMapping$b__28_0
// Il2CppName: <ImportClassMapping>b__28_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::Serialization::XmlReflectionImporter::$$c::*)(::System::Xml::Serialization::XmlReflectionMember*, ::System::Xml::Serialization::XmlReflectionMember*)>(&System::Xml::Serialization::XmlReflectionImporter::$$c::$ImportClassMapping$b__28_0)> {
  static const MethodInfo* get() {
    static auto* m1 = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlReflectionMember")->byval_arg;
    static auto* m2 = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlReflectionMember")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlReflectionImporter::$$c*), "<ImportClassMapping>b__28_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{m1, m2});
  }
};
