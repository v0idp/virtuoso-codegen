// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: TypeData
  class TypeData;
}
// Completed forward declares
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlCustomFormatter
  class XmlCustomFormatter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Serialization::XmlCustomFormatter);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Serialization::XmlCustomFormatter*, "System.Xml.Serialization", "XmlCustomFormatter");
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Serialization.XmlCustomFormatter
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlCustomFormatter : public ::Il2CppObject {
    public:
    // Get static field: static private System.String[] allTimeFormats
    static ::ArrayW<::StringW> _get_allTimeFormats();
    // Set static field: static private System.String[] allTimeFormats
    static void _set_allTimeFormats(::ArrayW<::StringW> value);
    // static private System.Void .cctor()
    // Offset: 0x1198F8C
    static void _cctor();
    // static System.String FromEnum(System.Int64 value, System.String[] values, System.Int64[] ids, System.String typeName)
    // Offset: 0x1197FC4
    static ::StringW FromEnum(int64_t value, ::ArrayW<::StringW> values, ::ArrayW<int64_t> ids, ::StringW typeName);
    // static System.String FromXmlName(System.String name)
    // Offset: 0x11982B0
    static ::StringW FromXmlName(::StringW name);
    // static System.String FromXmlNCName(System.String ncName)
    // Offset: 0x1198310
    static ::StringW FromXmlNCName(::StringW ncName);
    // static System.String ToXmlString(System.Xml.Serialization.TypeData type, System.Object value)
    // Offset: 0x1185E08
    static ::StringW ToXmlString(::System::Xml::Serialization::TypeData* type, ::Il2CppObject* value);
    // static System.Object FromXmlString(System.Xml.Serialization.TypeData type, System.String value)
    // Offset: 0x1198370
    static ::Il2CppObject* FromXmlString(::System::Xml::Serialization::TypeData* type, ::StringW value);
  }; // System.Xml.Serialization.XmlCustomFormatter
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Serialization::XmlCustomFormatter::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Xml::Serialization::XmlCustomFormatter::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlCustomFormatter*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlCustomFormatter::FromEnum
// Il2CppName: FromEnum
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int64_t, ::ArrayW<::StringW>, ::ArrayW<int64_t>, ::StringW)>(&System::Xml::Serialization::XmlCustomFormatter::FromEnum)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* ids = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int64"), 1)->byval_arg;
    static auto* typeName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlCustomFormatter*), "FromEnum", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, values, ids, typeName});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlCustomFormatter::FromXmlName
// Il2CppName: FromXmlName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&System::Xml::Serialization::XmlCustomFormatter::FromXmlName)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlCustomFormatter*), "FromXmlName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlCustomFormatter::FromXmlNCName
// Il2CppName: FromXmlNCName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&System::Xml::Serialization::XmlCustomFormatter::FromXmlNCName)> {
  static const MethodInfo* get() {
    static auto* ncName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlCustomFormatter*), "FromXmlNCName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ncName});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlCustomFormatter::ToXmlString
// Il2CppName: ToXmlString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::Xml::Serialization::TypeData*, ::Il2CppObject*)>(&System::Xml::Serialization::XmlCustomFormatter::ToXmlString)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "TypeData")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlCustomFormatter*), "ToXmlString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlCustomFormatter::FromXmlString
// Il2CppName: FromXmlString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Xml::Serialization::TypeData*, ::StringW)>(&System::Xml::Serialization::XmlCustomFormatter::FromXmlString)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "TypeData")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlCustomFormatter*), "FromXmlString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, value});
  }
};
