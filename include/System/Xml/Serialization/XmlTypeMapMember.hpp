// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: TypeData
  class TypeData;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MemberInfo
  class MemberInfo;
  // Forward declaring type: MethodInfo
  class MethodInfo;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlTypeMapMember
  class XmlTypeMapMember;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Serialization::XmlTypeMapMember);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Serialization::XmlTypeMapMember*, "System.Xml.Serialization", "XmlTypeMapMember");
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Size: 0x54
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Serialization.XmlTypeMapMember
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlTypeMapMember : public ::Il2CppObject {
    public:
    public:
    // private System.String _name
    // Size: 0x8
    // Offset: 0x10
    ::StringW name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Int32 _index
    // Size: 0x4
    // Offset: 0x18
    int index;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 _globalIndex
    // Size: 0x4
    // Offset: 0x1C
    int globalIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 _specifiedGlobalIndex
    // Size: 0x4
    // Offset: 0x20
    int specifiedGlobalIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: specifiedGlobalIndex and: typeData
    char __padding3[0x4] = {};
    // private System.Xml.Serialization.TypeData _typeData
    // Size: 0x8
    // Offset: 0x28
    ::System::Xml::Serialization::TypeData* typeData;
    // Field size check
    static_assert(sizeof(::System::Xml::Serialization::TypeData*) == 0x8);
    // private System.Reflection.MemberInfo _member
    // Size: 0x8
    // Offset: 0x30
    ::System::Reflection::MemberInfo* member;
    // Field size check
    static_assert(sizeof(::System::Reflection::MemberInfo*) == 0x8);
    // private System.Reflection.MemberInfo _specifiedMember
    // Size: 0x8
    // Offset: 0x38
    ::System::Reflection::MemberInfo* specifiedMember;
    // Field size check
    static_assert(sizeof(::System::Reflection::MemberInfo*) == 0x8);
    // private System.Reflection.MethodInfo _shouldSerialize
    // Size: 0x8
    // Offset: 0x40
    ::System::Reflection::MethodInfo* shouldSerialize;
    // Field size check
    static_assert(sizeof(::System::Reflection::MethodInfo*) == 0x8);
    // private System.Object _defaultValue
    // Size: 0x8
    // Offset: 0x48
    ::Il2CppObject* defaultValue;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.Int32 _flags
    // Size: 0x4
    // Offset: 0x50
    int flags;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: private System.String _name
    [[deprecated]] ::StringW& dyn__name();
    // Get instance field reference: private System.Int32 _index
    [[deprecated]] int& dyn__index();
    // Get instance field reference: private System.Int32 _globalIndex
    [[deprecated]] int& dyn__globalIndex();
    // Get instance field reference: private System.Int32 _specifiedGlobalIndex
    [[deprecated]] int& dyn__specifiedGlobalIndex();
    // Get instance field reference: private System.Xml.Serialization.TypeData _typeData
    [[deprecated]] ::System::Xml::Serialization::TypeData*& dyn__typeData();
    // Get instance field reference: private System.Reflection.MemberInfo _member
    [[deprecated]] ::System::Reflection::MemberInfo*& dyn__member();
    // Get instance field reference: private System.Reflection.MemberInfo _specifiedMember
    [[deprecated]] ::System::Reflection::MemberInfo*& dyn__specifiedMember();
    // Get instance field reference: private System.Reflection.MethodInfo _shouldSerialize
    [[deprecated]] ::System::Reflection::MethodInfo*& dyn__shouldSerialize();
    // Get instance field reference: private System.Object _defaultValue
    [[deprecated]] ::Il2CppObject*& dyn__defaultValue();
    // Get instance field reference: private System.Int32 _flags
    [[deprecated]] int& dyn__flags();
    // public System.String get_Name()
    // Offset: 0x1086F0C
    ::StringW get_Name();
    // public System.Void set_Name(System.String value)
    // Offset: 0x1086F14
    void set_Name(::StringW value);
    // public System.Object get_DefaultValue()
    // Offset: 0x1086F1C
    ::Il2CppObject* get_DefaultValue();
    // public System.Void set_DefaultValue(System.Object value)
    // Offset: 0x1086F24
    void set_DefaultValue(::Il2CppObject* value);
    // public System.Xml.Serialization.TypeData get_TypeData()
    // Offset: 0x10877BC
    ::System::Xml::Serialization::TypeData* get_TypeData();
    // public System.Void set_TypeData(System.Xml.Serialization.TypeData value)
    // Offset: 0x10877C4
    void set_TypeData(::System::Xml::Serialization::TypeData* value);
    // public System.Int32 get_Index()
    // Offset: 0x10877CC
    int get_Index();
    // public System.Void set_Index(System.Int32 value)
    // Offset: 0x10877D4
    void set_Index(int value);
    // public System.Int32 get_GlobalIndex()
    // Offset: 0x10877DC
    int get_GlobalIndex();
    // public System.Void set_GlobalIndex(System.Int32 value)
    // Offset: 0x10877E4
    void set_GlobalIndex(int value);
    // public System.Boolean get_IsOptionalValueType()
    // Offset: 0x10877EC
    bool get_IsOptionalValueType();
    // public System.Void set_IsOptionalValueType(System.Boolean value)
    // Offset: 0x10877F8
    void set_IsOptionalValueType(bool value);
    // public System.Boolean get_IsReturnValue()
    // Offset: 0x1087824
    bool get_IsReturnValue();
    // public System.Void set_IsReturnValue(System.Boolean value)
    // Offset: 0x1087830
    void set_IsReturnValue(bool value);
    // public System.Boolean IsReadOnly(System.Type type)
    // Offset: 0x1086F2C
    bool IsReadOnly(::System::Type* type);
    // static public System.Object GetValue(System.Object ob, System.String name)
    // Offset: 0x1087250
    static ::Il2CppObject* GetValue(::Il2CppObject* ob, ::StringW name);
    // public System.Object GetValue(System.Object ob)
    // Offset: 0x10873AC
    ::Il2CppObject* GetValue(::Il2CppObject* ob);
    // public System.Void SetValue(System.Object ob, System.Object value)
    // Offset: 0x10874F4
    void SetValue(::Il2CppObject* ob, ::Il2CppObject* value);
    // static public System.Void SetValue(System.Object ob, System.String name, System.Object value)
    // Offset: 0x1087658
    static void SetValue(::Il2CppObject* ob, ::StringW name, ::Il2CppObject* value);
    // private System.Void InitMember(System.Type type)
    // Offset: 0x1086FEC
    void InitMember(::System::Type* type);
    // public System.Void CheckOptionalValueType(System.Type type)
    // Offset: 0x108785C
    void CheckOptionalValueType(::System::Type* type);
    // public System.Boolean GetValueSpecified(System.Object ob)
    // Offset: 0x10878E0
    bool GetValueSpecified(::Il2CppObject* ob);
    // public System.Void SetValueSpecified(System.Object ob, System.Boolean value)
    // Offset: 0x1087B54
    void SetValueSpecified(::Il2CppObject* ob, bool value);
    // public System.Void .ctor()
    // Offset: 0x1086E90
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlTypeMapMember* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMember::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlTypeMapMember*, creationType>()));
    }
  }; // System.Xml.Serialization.XmlTypeMapMember
  #pragma pack(pop)
  static check_size<sizeof(XmlTypeMapMember), 80 + sizeof(int)> __System_Xml_Serialization_XmlTypeMapMemberSizeCheck;
  static_assert(sizeof(XmlTypeMapMember) == 0x54);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Serialization::XmlTypeMapMember::*)()>(&System::Xml::Serialization::XmlTypeMapMember::get_Name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::set_Name
// Il2CppName: set_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlTypeMapMember::*)(::StringW)>(&System::Xml::Serialization::XmlTypeMapMember::set_Name)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "set_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::get_DefaultValue
// Il2CppName: get_DefaultValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlTypeMapMember::*)()>(&System::Xml::Serialization::XmlTypeMapMember::get_DefaultValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "get_DefaultValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::set_DefaultValue
// Il2CppName: set_DefaultValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlTypeMapMember::*)(::Il2CppObject*)>(&System::Xml::Serialization::XmlTypeMapMember::set_DefaultValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "set_DefaultValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::get_TypeData
// Il2CppName: get_TypeData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Serialization::TypeData* (System::Xml::Serialization::XmlTypeMapMember::*)()>(&System::Xml::Serialization::XmlTypeMapMember::get_TypeData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "get_TypeData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::set_TypeData
// Il2CppName: set_TypeData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlTypeMapMember::*)(::System::Xml::Serialization::TypeData*)>(&System::Xml::Serialization::XmlTypeMapMember::set_TypeData)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "TypeData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "set_TypeData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::get_Index
// Il2CppName: get_Index
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::Serialization::XmlTypeMapMember::*)()>(&System::Xml::Serialization::XmlTypeMapMember::get_Index)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "get_Index", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::set_Index
// Il2CppName: set_Index
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlTypeMapMember::*)(int)>(&System::Xml::Serialization::XmlTypeMapMember::set_Index)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "set_Index", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::get_GlobalIndex
// Il2CppName: get_GlobalIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::Serialization::XmlTypeMapMember::*)()>(&System::Xml::Serialization::XmlTypeMapMember::get_GlobalIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "get_GlobalIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::set_GlobalIndex
// Il2CppName: set_GlobalIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlTypeMapMember::*)(int)>(&System::Xml::Serialization::XmlTypeMapMember::set_GlobalIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "set_GlobalIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::get_IsOptionalValueType
// Il2CppName: get_IsOptionalValueType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Serialization::XmlTypeMapMember::*)()>(&System::Xml::Serialization::XmlTypeMapMember::get_IsOptionalValueType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "get_IsOptionalValueType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::set_IsOptionalValueType
// Il2CppName: set_IsOptionalValueType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlTypeMapMember::*)(bool)>(&System::Xml::Serialization::XmlTypeMapMember::set_IsOptionalValueType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "set_IsOptionalValueType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::get_IsReturnValue
// Il2CppName: get_IsReturnValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Serialization::XmlTypeMapMember::*)()>(&System::Xml::Serialization::XmlTypeMapMember::get_IsReturnValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "get_IsReturnValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::set_IsReturnValue
// Il2CppName: set_IsReturnValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlTypeMapMember::*)(bool)>(&System::Xml::Serialization::XmlTypeMapMember::set_IsReturnValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "set_IsReturnValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::IsReadOnly
// Il2CppName: IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Serialization::XmlTypeMapMember::*)(::System::Type*)>(&System::Xml::Serialization::XmlTypeMapMember::IsReadOnly)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::GetValue
// Il2CppName: GetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::Il2CppObject*, ::StringW)>(&System::Xml::Serialization::XmlTypeMapMember::GetValue)> {
  static const MethodInfo* get() {
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "GetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ob, name});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::GetValue
// Il2CppName: GetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlTypeMapMember::*)(::Il2CppObject*)>(&System::Xml::Serialization::XmlTypeMapMember::GetValue)> {
  static const MethodInfo* get() {
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "GetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ob});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::SetValue
// Il2CppName: SetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlTypeMapMember::*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Xml::Serialization::XmlTypeMapMember::SetValue)> {
  static const MethodInfo* get() {
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "SetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ob, value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::SetValue
// Il2CppName: SetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::StringW, ::Il2CppObject*)>(&System::Xml::Serialization::XmlTypeMapMember::SetValue)> {
  static const MethodInfo* get() {
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "SetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ob, name, value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::InitMember
// Il2CppName: InitMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlTypeMapMember::*)(::System::Type*)>(&System::Xml::Serialization::XmlTypeMapMember::InitMember)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "InitMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::CheckOptionalValueType
// Il2CppName: CheckOptionalValueType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlTypeMapMember::*)(::System::Type*)>(&System::Xml::Serialization::XmlTypeMapMember::CheckOptionalValueType)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "CheckOptionalValueType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::GetValueSpecified
// Il2CppName: GetValueSpecified
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Serialization::XmlTypeMapMember::*)(::Il2CppObject*)>(&System::Xml::Serialization::XmlTypeMapMember::GetValueSpecified)> {
  static const MethodInfo* get() {
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "GetValueSpecified", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ob});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::SetValueSpecified
// Il2CppName: SetValueSpecified
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlTypeMapMember::*)(::Il2CppObject*, bool)>(&System::Xml::Serialization::XmlTypeMapMember::SetValueSpecified)> {
  static const MethodInfo* get() {
    static auto* ob = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMember*), "SetValueSpecified", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ob, value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMember::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
