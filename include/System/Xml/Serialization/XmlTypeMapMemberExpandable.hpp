// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapMemberElement
#include "System/Xml/Serialization/XmlTypeMapMemberElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlTypeMapMemberExpandable
  class XmlTypeMapMemberExpandable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Serialization::XmlTypeMapMemberExpandable);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Serialization::XmlTypeMapMemberExpandable*, "System.Xml.Serialization", "XmlTypeMapMemberExpandable");
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Size: 0x7C
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Serialization.XmlTypeMapMemberExpandable
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlTypeMapMemberExpandable : public ::System::Xml::Serialization::XmlTypeMapMemberElement {
    public:
    public:
    // private System.Int32 _flatArrayIndex
    // Size: 0x4
    // Offset: 0x78
    int flatArrayIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return flatArrayIndex;
    }
    // Get instance field reference: private System.Int32 _flatArrayIndex
    [[deprecated("Use field access instead!")]] int& dyn__flatArrayIndex();
    // public System.Int32 get_FlatArrayIndex()
    // Offset: 0x1088BB8
    int get_FlatArrayIndex();
    // public System.Void set_FlatArrayIndex(System.Int32 value)
    // Offset: 0x1088BC0
    void set_FlatArrayIndex(int value);
    // public System.Void .ctor()
    // Offset: 0x1088478
    // Implemented from: System.Xml.Serialization.XmlTypeMapMemberElement
    // Base method: System.Void XmlTypeMapMemberElement::.ctor()
    // Base method: System.Void XmlTypeMapMember::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlTypeMapMemberExpandable* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberExpandable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlTypeMapMemberExpandable*, creationType>()));
    }
  }; // System.Xml.Serialization.XmlTypeMapMemberExpandable
  #pragma pack(pop)
  static check_size<sizeof(XmlTypeMapMemberExpandable), 120 + sizeof(int)> __System_Xml_Serialization_XmlTypeMapMemberExpandableSizeCheck;
  static_assert(sizeof(XmlTypeMapMemberExpandable) == 0x7C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMemberExpandable::get_FlatArrayIndex
// Il2CppName: get_FlatArrayIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::Serialization::XmlTypeMapMemberExpandable::*)()>(&System::Xml::Serialization::XmlTypeMapMemberExpandable::get_FlatArrayIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMemberExpandable*), "get_FlatArrayIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMemberExpandable::set_FlatArrayIndex
// Il2CppName: set_FlatArrayIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlTypeMapMemberExpandable::*)(int)>(&System::Xml::Serialization::XmlTypeMapMemberExpandable::set_FlatArrayIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMemberExpandable*), "set_FlatArrayIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMemberExpandable::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
