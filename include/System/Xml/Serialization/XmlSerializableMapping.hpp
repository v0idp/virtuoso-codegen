// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapping
#include "System/Xml/Serialization/XmlTypeMapping.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlSchema
  class XmlSchema;
  // Forward declaring type: XmlSchemaComplexType
  class XmlSchemaComplexType;
}
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlQualifiedName
  class XmlQualifiedName;
}
// Forward declaring namespace: System::Xml::Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlRootAttribute
  class XmlRootAttribute;
  // Forward declaring type: TypeData
  class TypeData;
}
// Completed forward declares
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlSerializableMapping
  class XmlSerializableMapping;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Serialization::XmlSerializableMapping);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Serialization::XmlSerializableMapping*, "System.Xml.Serialization", "XmlSerializableMapping");
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Size: 0x90
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Serialization.XmlSerializableMapping
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlSerializableMapping : public ::System::Xml::Serialization::XmlTypeMapping {
    public:
    public:
    // private System.Xml.Schema.XmlSchema _schema
    // Size: 0x8
    // Offset: 0x78
    ::System::Xml::Schema::XmlSchema* schema;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchema*) == 0x8);
    // private System.Xml.Schema.XmlSchemaComplexType _schemaType
    // Size: 0x8
    // Offset: 0x80
    ::System::Xml::Schema::XmlSchemaComplexType* schemaType;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchemaComplexType*) == 0x8);
    // private System.Xml.XmlQualifiedName _schemaTypeName
    // Size: 0x8
    // Offset: 0x88
    ::System::Xml::XmlQualifiedName* schemaTypeName;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    public:
    // Get instance field reference: private System.Xml.Schema.XmlSchema _schema
    [[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchema*& dyn__schema();
    // Get instance field reference: private System.Xml.Schema.XmlSchemaComplexType _schemaType
    [[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaComplexType*& dyn__schemaType();
    // Get instance field reference: private System.Xml.XmlQualifiedName _schemaTypeName
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn__schemaTypeName();
    // System.Void .ctor(System.Xml.Serialization.XmlRootAttribute root, System.String elementName, System.String ns, System.Xml.Serialization.TypeData typeData, System.String xmlType, System.String xmlTypeNamespace)
    // Offset: 0xF4366C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlSerializableMapping* New_ctor(::System::Xml::Serialization::XmlRootAttribute* root, ::StringW elementName, ::StringW ns, ::System::Xml::Serialization::TypeData* typeData, ::StringW xmlType, ::StringW xmlTypeNamespace) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializableMapping::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlSerializableMapping*, creationType>(root, elementName, ns, typeData, xmlType, xmlTypeNamespace)));
    }
  }; // System.Xml.Serialization.XmlSerializableMapping
  #pragma pack(pop)
  static check_size<sizeof(XmlSerializableMapping), 136 + sizeof(::System::Xml::XmlQualifiedName*)> __System_Xml_Serialization_XmlSerializableMappingSizeCheck;
  static_assert(sizeof(XmlSerializableMapping) == 0x90);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializableMapping::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
