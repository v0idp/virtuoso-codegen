// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlRootAttribute
  class XmlRootAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Serialization::XmlRootAttribute);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Serialization::XmlRootAttribute*, "System.Xml.Serialization", "XmlRootAttribute");
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Serialization.XmlRootAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: 6A4690
  class XmlRootAttribute : public ::System::Attribute {
    public:
    public:
    // private System.String dataType
    // Size: 0x8
    // Offset: 0x10
    ::StringW dataType;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String elementName
    // Size: 0x8
    // Offset: 0x18
    ::StringW elementName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean isNullable
    // Size: 0x1
    // Offset: 0x20
    bool isNullable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isNullable and: ns
    char __padding2[0x7] = {};
    // private System.String ns
    // Size: 0x8
    // Offset: 0x28
    ::StringW ns;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: private System.String dataType
    [[deprecated]] ::StringW& dyn_dataType();
    // Get instance field reference: private System.String elementName
    [[deprecated]] ::StringW& dyn_elementName();
    // Get instance field reference: private System.Boolean isNullable
    [[deprecated]] bool& dyn_isNullable();
    // Get instance field reference: private System.String ns
    [[deprecated]] ::StringW& dyn_ns();
    // public System.String get_DataType()
    // Offset: 0x1106B50
    ::StringW get_DataType();
    // public System.Void set_DataType(System.String value)
    // Offset: 0x1106BA8
    void set_DataType(::StringW value);
    // public System.String get_ElementName()
    // Offset: 0x1106BB0
    ::StringW get_ElementName();
    // public System.Void set_ElementName(System.String value)
    // Offset: 0x1106C08
    void set_ElementName(::StringW value);
    // public System.Boolean get_IsNullable()
    // Offset: 0x1106C10
    bool get_IsNullable();
    // public System.Void set_IsNullable(System.Boolean value)
    // Offset: 0x1106C18
    void set_IsNullable(bool value);
    // public System.String get_Namespace()
    // Offset: 0x1106C24
    ::StringW get_Namespace();
    // public System.Void set_Namespace(System.String value)
    // Offset: 0x1106C2C
    void set_Namespace(::StringW value);
    // public System.Void .ctor(System.String elementName)
    // Offset: 0x1106B1C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlRootAttribute* New_ctor(::StringW elementName) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlRootAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlRootAttribute*, creationType>(elementName)));
    }
    // System.Void AddKeyHash(System.Text.StringBuilder sb)
    // Offset: 0x1106C34
    void AddKeyHash(::System::Text::StringBuilder* sb);
    // public System.Void .ctor()
    // Offset: 0x1106B0C
    // Implemented from: System.Attribute
    // Base method: System.Void Attribute::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlRootAttribute* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlRootAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlRootAttribute*, creationType>()));
    }
  }; // System.Xml.Serialization.XmlRootAttribute
  #pragma pack(pop)
  static check_size<sizeof(XmlRootAttribute), 40 + sizeof(::StringW)> __System_Xml_Serialization_XmlRootAttributeSizeCheck;
  static_assert(sizeof(XmlRootAttribute) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Serialization::XmlRootAttribute::get_DataType
// Il2CppName: get_DataType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Serialization::XmlRootAttribute::*)()>(&System::Xml::Serialization::XmlRootAttribute::get_DataType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlRootAttribute*), "get_DataType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlRootAttribute::set_DataType
// Il2CppName: set_DataType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlRootAttribute::*)(::StringW)>(&System::Xml::Serialization::XmlRootAttribute::set_DataType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlRootAttribute*), "set_DataType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlRootAttribute::get_ElementName
// Il2CppName: get_ElementName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Serialization::XmlRootAttribute::*)()>(&System::Xml::Serialization::XmlRootAttribute::get_ElementName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlRootAttribute*), "get_ElementName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlRootAttribute::set_ElementName
// Il2CppName: set_ElementName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlRootAttribute::*)(::StringW)>(&System::Xml::Serialization::XmlRootAttribute::set_ElementName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlRootAttribute*), "set_ElementName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlRootAttribute::get_IsNullable
// Il2CppName: get_IsNullable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Serialization::XmlRootAttribute::*)()>(&System::Xml::Serialization::XmlRootAttribute::get_IsNullable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlRootAttribute*), "get_IsNullable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlRootAttribute::set_IsNullable
// Il2CppName: set_IsNullable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlRootAttribute::*)(bool)>(&System::Xml::Serialization::XmlRootAttribute::set_IsNullable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlRootAttribute*), "set_IsNullable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlRootAttribute::get_Namespace
// Il2CppName: get_Namespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Serialization::XmlRootAttribute::*)()>(&System::Xml::Serialization::XmlRootAttribute::get_Namespace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlRootAttribute*), "get_Namespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlRootAttribute::set_Namespace
// Il2CppName: set_Namespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlRootAttribute::*)(::StringW)>(&System::Xml::Serialization::XmlRootAttribute::set_Namespace)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlRootAttribute*), "set_Namespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlRootAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Serialization::XmlRootAttribute::AddKeyHash
// Il2CppName: AddKeyHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlRootAttribute::*)(::System::Text::StringBuilder*)>(&System::Xml::Serialization::XmlRootAttribute::AddKeyHash)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlRootAttribute*), "AddKeyHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlRootAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
