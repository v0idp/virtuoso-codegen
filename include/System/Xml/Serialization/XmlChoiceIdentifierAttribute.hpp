// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlChoiceIdentifierAttribute
  class XmlChoiceIdentifierAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Serialization::XmlChoiceIdentifierAttribute);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Serialization::XmlChoiceIdentifierAttribute*, "System.Xml.Serialization", "XmlChoiceIdentifierAttribute");
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Serialization.XmlChoiceIdentifierAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: 6A4550
  class XmlChoiceIdentifierAttribute : public ::System::Attribute {
    public:
    public:
    // private System.String memberName
    // Size: 0x8
    // Offset: 0x10
    ::StringW memberName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating conversion operator: operator ::StringW
    constexpr operator ::StringW() const noexcept {
      return memberName;
    }
    // Get instance field reference: private System.String memberName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_memberName();
    // public System.String get_MemberName()
    // Offset: 0x1190A10
    ::StringW get_MemberName();
    // System.Void AddKeyHash(System.Text.StringBuilder sb)
    // Offset: 0x1186D04
    void AddKeyHash(::System::Text::StringBuilder* sb);
  }; // System.Xml.Serialization.XmlChoiceIdentifierAttribute
  #pragma pack(pop)
  static check_size<sizeof(XmlChoiceIdentifierAttribute), 16 + sizeof(::StringW)> __System_Xml_Serialization_XmlChoiceIdentifierAttributeSizeCheck;
  static_assert(sizeof(XmlChoiceIdentifierAttribute) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Serialization::XmlChoiceIdentifierAttribute::get_MemberName
// Il2CppName: get_MemberName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Serialization::XmlChoiceIdentifierAttribute::*)()>(&System::Xml::Serialization::XmlChoiceIdentifierAttribute::get_MemberName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlChoiceIdentifierAttribute*), "get_MemberName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlChoiceIdentifierAttribute::AddKeyHash
// Il2CppName: AddKeyHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlChoiceIdentifierAttribute::*)(::System::Text::StringBuilder*)>(&System::Xml::Serialization::XmlChoiceIdentifierAttribute::AddKeyHash)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlChoiceIdentifierAttribute*), "AddKeyHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb});
  }
};
