// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Serialization.XmlSerializationReader
#include "System/Xml/Serialization/XmlSerializationReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Array
  class Array;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup*, "System.Xml.Serialization", "XmlSerializationReader/CollectionItemFixup");
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.CollectionItemFixup
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlSerializationReader::CollectionItemFixup : public ::Il2CppObject {
    public:
    public:
    // private System.Array list
    // Size: 0x8
    // Offset: 0x10
    ::System::Array* list;
    // Field size check
    static_assert(sizeof(::System::Array*) == 0x8);
    // private System.Int32 index
    // Size: 0x4
    // Offset: 0x18
    int index;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: index and: id
    char __padding1[0x4] = {};
    // private System.String id
    // Size: 0x8
    // Offset: 0x20
    ::StringW id;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: private System.Array list
    [[deprecated]] ::System::Array*& dyn_list();
    // Get instance field reference: private System.Int32 index
    [[deprecated]] int& dyn_index();
    // Get instance field reference: private System.String id
    [[deprecated]] ::StringW& dyn_id();
    // public System.Array get_Collection()
    // Offset: 0xC2210C
    ::System::Array* get_Collection();
    // public System.Int32 get_Index()
    // Offset: 0xC22114
    int get_Index();
    // public System.String get_Id()
    // Offset: 0xC2211C
    ::StringW get_Id();
    // public System.Void .ctor(System.Array list, System.Int32 index, System.String id)
    // Offset: 0xC220C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlSerializationReader::CollectionItemFixup* New_ctor(::System::Array* list, int index, ::StringW id) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlSerializationReader::CollectionItemFixup*, creationType>(list, index, id)));
    }
  }; // System.Xml.Serialization.XmlSerializationReader/System.Xml.Serialization.CollectionItemFixup
  #pragma pack(pop)
  static check_size<sizeof(XmlSerializationReader::CollectionItemFixup), 32 + sizeof(::StringW)> __System_Xml_Serialization_XmlSerializationReader_CollectionItemFixupSizeCheck;
  static_assert(sizeof(XmlSerializationReader::CollectionItemFixup) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::get_Collection
// Il2CppName: get_Collection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Array* (System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::*)()>(&System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::get_Collection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup*), "get_Collection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::get_Index
// Il2CppName: get_Index
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::*)()>(&System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::get_Index)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup*), "get_Index", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::get_Id
// Il2CppName: get_Id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::*)()>(&System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::get_Id)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup*), "get_Id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReader::CollectionItemFixup::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
