// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Serialization.XmlTypeMapMember
#include "System/Xml/Serialization/XmlTypeMapMember.hpp"
// Including type: System.Xml.Schema.XmlSchemaForm
#include "System/Xml/Schema/XmlSchemaForm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlTypeMapping
  class XmlTypeMapping;
}
// Completed forward declares
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlTypeMapMemberAttribute
  class XmlTypeMapMemberAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Serialization::XmlTypeMapMemberAttribute);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Serialization::XmlTypeMapMemberAttribute*, "System.Xml.Serialization", "XmlTypeMapMemberAttribute");
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Size: 0x78
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Serialization.XmlTypeMapMemberAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlTypeMapMemberAttribute : public ::System::Xml::Serialization::XmlTypeMapMember {
    public:
    // Writing base type padding for base size: 0x54 to desired offset: 0x58
    char ___base_padding[0x4] = {};
    public:
    // private System.String _attributeName
    // Size: 0x8
    // Offset: 0x58
    ::StringW attributeName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String _namespace
    // Size: 0x8
    // Offset: 0x60
    ::StringW _namespace;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Xml.Schema.XmlSchemaForm _form
    // Size: 0x4
    // Offset: 0x68
    ::System::Xml::Schema::XmlSchemaForm form;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchemaForm) == 0x4);
    // Padding between fields: form and: mappedType
    char __padding2[0x4] = {};
    // private System.Xml.Serialization.XmlTypeMapping _mappedType
    // Size: 0x8
    // Offset: 0x70
    ::System::Xml::Serialization::XmlTypeMapping* mappedType;
    // Field size check
    static_assert(sizeof(::System::Xml::Serialization::XmlTypeMapping*) == 0x8);
    public:
    // Get instance field reference: private System.String _attributeName
    [[deprecated]] ::StringW& dyn__attributeName();
    // Get instance field reference: private System.String _namespace
    [[deprecated]] ::StringW& dyn__namespace();
    // Get instance field reference: private System.Xml.Schema.XmlSchemaForm _form
    [[deprecated]] ::System::Xml::Schema::XmlSchemaForm& dyn__form();
    // Get instance field reference: private System.Xml.Serialization.XmlTypeMapping _mappedType
    [[deprecated]] ::System::Xml::Serialization::XmlTypeMapping*& dyn__mappedType();
    // public System.String get_AttributeName()
    // Offset: 0x10884CC
    ::StringW get_AttributeName();
    // public System.Void set_AttributeName(System.String value)
    // Offset: 0x10884D4
    void set_AttributeName(::StringW value);
    // public System.String get_Namespace()
    // Offset: 0x10884DC
    ::StringW get_Namespace();
    // public System.Void set_Namespace(System.String value)
    // Offset: 0x10884E4
    void set_Namespace(::StringW value);
    // public System.Void set_Form(System.Xml.Schema.XmlSchemaForm value)
    // Offset: 0x10884EC
    void set_Form(::System::Xml::Schema::XmlSchemaForm value);
    // public System.Xml.Serialization.XmlTypeMapping get_MappedType()
    // Offset: 0x10884F4
    ::System::Xml::Serialization::XmlTypeMapping* get_MappedType();
    // public System.Void set_MappedType(System.Xml.Serialization.XmlTypeMapping value)
    // Offset: 0x10884FC
    void set_MappedType(::System::Xml::Serialization::XmlTypeMapping* value);
    // public System.Void .ctor()
    // Offset: 0x108847C
    // Implemented from: System.Xml.Serialization.XmlTypeMapMember
    // Base method: System.Void XmlTypeMapMember::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlTypeMapMemberAttribute* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeMapMemberAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlTypeMapMemberAttribute*, creationType>()));
    }
  }; // System.Xml.Serialization.XmlTypeMapMemberAttribute
  #pragma pack(pop)
  static check_size<sizeof(XmlTypeMapMemberAttribute), 112 + sizeof(::System::Xml::Serialization::XmlTypeMapping*)> __System_Xml_Serialization_XmlTypeMapMemberAttributeSizeCheck;
  static_assert(sizeof(XmlTypeMapMemberAttribute) == 0x78);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMemberAttribute::get_AttributeName
// Il2CppName: get_AttributeName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Serialization::XmlTypeMapMemberAttribute::*)()>(&System::Xml::Serialization::XmlTypeMapMemberAttribute::get_AttributeName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMemberAttribute*), "get_AttributeName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMemberAttribute::set_AttributeName
// Il2CppName: set_AttributeName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlTypeMapMemberAttribute::*)(::StringW)>(&System::Xml::Serialization::XmlTypeMapMemberAttribute::set_AttributeName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMemberAttribute*), "set_AttributeName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMemberAttribute::get_Namespace
// Il2CppName: get_Namespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Serialization::XmlTypeMapMemberAttribute::*)()>(&System::Xml::Serialization::XmlTypeMapMemberAttribute::get_Namespace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMemberAttribute*), "get_Namespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMemberAttribute::set_Namespace
// Il2CppName: set_Namespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlTypeMapMemberAttribute::*)(::StringW)>(&System::Xml::Serialization::XmlTypeMapMemberAttribute::set_Namespace)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMemberAttribute*), "set_Namespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMemberAttribute::set_Form
// Il2CppName: set_Form
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlTypeMapMemberAttribute::*)(::System::Xml::Schema::XmlSchemaForm)>(&System::Xml::Serialization::XmlTypeMapMemberAttribute::set_Form)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSchemaForm")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMemberAttribute*), "set_Form", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMemberAttribute::get_MappedType
// Il2CppName: get_MappedType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Serialization::XmlTypeMapping* (System::Xml::Serialization::XmlTypeMapMemberAttribute::*)()>(&System::Xml::Serialization::XmlTypeMapMemberAttribute::get_MappedType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMemberAttribute*), "get_MappedType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMemberAttribute::set_MappedType
// Il2CppName: set_MappedType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlTypeMapMemberAttribute::*)(::System::Xml::Serialization::XmlTypeMapping*)>(&System::Xml::Serialization::XmlTypeMapMemberAttribute::set_MappedType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlTypeMapping")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlTypeMapMemberAttribute*), "set_MappedType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlTypeMapMemberAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
