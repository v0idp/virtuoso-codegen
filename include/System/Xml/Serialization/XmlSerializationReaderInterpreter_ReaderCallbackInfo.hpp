// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Serialization.XmlSerializationReaderInterpreter
#include "System/Xml/Serialization/XmlSerializationReaderInterpreter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlTypeMapping
  class XmlTypeMapping;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReaderCallbackInfo);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReaderCallbackInfo*, "System.Xml.Serialization", "XmlSerializationReaderInterpreter/ReaderCallbackInfo");
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Serialization.XmlSerializationReaderInterpreter/System.Xml.Serialization.ReaderCallbackInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlSerializationReaderInterpreter::ReaderCallbackInfo : public ::Il2CppObject {
    public:
    public:
    // private System.Xml.Serialization.XmlSerializationReaderInterpreter _sri
    // Size: 0x8
    // Offset: 0x10
    ::System::Xml::Serialization::XmlSerializationReaderInterpreter* sri;
    // Field size check
    static_assert(sizeof(::System::Xml::Serialization::XmlSerializationReaderInterpreter*) == 0x8);
    // private System.Xml.Serialization.XmlTypeMapping _typeMap
    // Size: 0x8
    // Offset: 0x18
    ::System::Xml::Serialization::XmlTypeMapping* typeMap;
    // Field size check
    static_assert(sizeof(::System::Xml::Serialization::XmlTypeMapping*) == 0x8);
    public:
    // Get instance field reference: private System.Xml.Serialization.XmlSerializationReaderInterpreter _sri
    [[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlSerializationReaderInterpreter*& dyn__sri();
    // Get instance field reference: private System.Xml.Serialization.XmlTypeMapping _typeMap
    [[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlTypeMapping*& dyn__typeMap();
    // public System.Void .ctor(System.Xml.Serialization.XmlSerializationReaderInterpreter sri, System.Xml.Serialization.XmlTypeMapping typeMap)
    // Offset: 0xC22238
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlSerializationReaderInterpreter::ReaderCallbackInfo* New_ctor(::System::Xml::Serialization::XmlSerializationReaderInterpreter* sri, ::System::Xml::Serialization::XmlTypeMapping* typeMap) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::ReaderCallbackInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlSerializationReaderInterpreter::ReaderCallbackInfo*, creationType>(sri, typeMap)));
    }
    // System.Object ReadObject()
    // Offset: 0xC22270
    ::Il2CppObject* ReadObject();
  }; // System.Xml.Serialization.XmlSerializationReaderInterpreter/System.Xml.Serialization.ReaderCallbackInfo
  #pragma pack(pop)
  static check_size<sizeof(XmlSerializationReaderInterpreter::ReaderCallbackInfo), 24 + sizeof(::System::Xml::Serialization::XmlTypeMapping*)> __System_Xml_Serialization_XmlSerializationReaderInterpreter_ReaderCallbackInfoSizeCheck;
  static_assert(sizeof(XmlSerializationReaderInterpreter::ReaderCallbackInfo) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReaderCallbackInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::ReaderCallbackInfo::ReadObject
// Il2CppName: ReadObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Serialization::XmlSerializationReaderInterpreter::ReaderCallbackInfo::*)()>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::ReaderCallbackInfo::ReadObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter::ReaderCallbackInfo*), "ReadObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
