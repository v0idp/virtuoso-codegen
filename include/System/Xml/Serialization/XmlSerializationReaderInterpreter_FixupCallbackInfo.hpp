// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Serialization.XmlSerializationReaderInterpreter
#include "System/Xml/Serialization/XmlSerializationReaderInterpreter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: ClassMap
  class ClassMap;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupCallbackInfo);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupCallbackInfo*, "System.Xml.Serialization", "XmlSerializationReaderInterpreter/FixupCallbackInfo");
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Serialization.XmlSerializationReaderInterpreter/System.Xml.Serialization.FixupCallbackInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlSerializationReaderInterpreter::FixupCallbackInfo : public ::Il2CppObject {
    public:
    public:
    // private System.Xml.Serialization.XmlSerializationReaderInterpreter _sri
    // Size: 0x8
    // Offset: 0x10
    ::System::Xml::Serialization::XmlSerializationReaderInterpreter* sri;
    // Field size check
    static_assert(sizeof(::System::Xml::Serialization::XmlSerializationReaderInterpreter*) == 0x8);
    // private System.Xml.Serialization.ClassMap _map
    // Size: 0x8
    // Offset: 0x18
    ::System::Xml::Serialization::ClassMap* map;
    // Field size check
    static_assert(sizeof(::System::Xml::Serialization::ClassMap*) == 0x8);
    // private System.Boolean _isValueList
    // Size: 0x1
    // Offset: 0x20
    bool isValueList;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private System.Xml.Serialization.XmlSerializationReaderInterpreter _sri
    [[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlSerializationReaderInterpreter*& dyn__sri();
    // Get instance field reference: private System.Xml.Serialization.ClassMap _map
    [[deprecated("Use field access instead!")]] ::System::Xml::Serialization::ClassMap*& dyn__map();
    // Get instance field reference: private System.Boolean _isValueList
    [[deprecated("Use field access instead!")]] bool& dyn__isValueList();
    // public System.Void .ctor(System.Xml.Serialization.XmlSerializationReaderInterpreter sri, System.Xml.Serialization.ClassMap map, System.Boolean isValueList)
    // Offset: 0xC221C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlSerializationReaderInterpreter::FixupCallbackInfo* New_ctor(::System::Xml::Serialization::XmlSerializationReaderInterpreter* sri, ::System::Xml::Serialization::ClassMap* map, bool isValueList) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupCallbackInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlSerializationReaderInterpreter::FixupCallbackInfo*, creationType>(sri, map, isValueList)));
    }
    // public System.Void FixupMembers(System.Object fixup)
    // Offset: 0xC2220C
    void FixupMembers(::Il2CppObject* fixup);
  }; // System.Xml.Serialization.XmlSerializationReaderInterpreter/System.Xml.Serialization.FixupCallbackInfo
  #pragma pack(pop)
  static check_size<sizeof(XmlSerializationReaderInterpreter::FixupCallbackInfo), 32 + sizeof(bool)> __System_Xml_Serialization_XmlSerializationReaderInterpreter_FixupCallbackInfoSizeCheck;
  static_assert(sizeof(XmlSerializationReaderInterpreter::FixupCallbackInfo) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupCallbackInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupCallbackInfo::FixupMembers
// Il2CppName: FixupMembers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupCallbackInfo::*)(::Il2CppObject*)>(&System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupCallbackInfo::FixupMembers)> {
  static const MethodInfo* get() {
    static auto* fixup = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlSerializationReaderInterpreter::FixupCallbackInfo*), "FixupMembers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fixup});
  }
};
