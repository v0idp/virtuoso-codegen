// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.CollectionBase
#include "System/Collections/CollectionBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlAnyElementAttribute
  class XmlAnyElementAttribute;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlAnyElementAttributes
  class XmlAnyElementAttributes;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Serialization::XmlAnyElementAttributes);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Serialization::XmlAnyElementAttributes*, "System.Xml.Serialization", "XmlAnyElementAttributes");
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Serialization.XmlAnyElementAttributes
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 6A4448
  class XmlAnyElementAttributes : public ::System::Collections::CollectionBase {
    public:
    // public System.Xml.Serialization.XmlAnyElementAttribute get_Item(System.Int32 index)
    // Offset: 0x11B2EC0
    ::System::Xml::Serialization::XmlAnyElementAttribute* get_Item(int index);
    // System.Int32 get_Order()
    // Offset: 0x11B317C
    int get_Order();
    // public System.Int32 Add(System.Xml.Serialization.XmlAnyElementAttribute attribute)
    // Offset: 0x11B2FD4
    int Add(::System::Xml::Serialization::XmlAnyElementAttribute* attribute);
    // System.Void AddKeyHash(System.Text.StringBuilder sb)
    // Offset: 0x11B30A0
    void AddKeyHash(::System::Text::StringBuilder* sb);
    // public System.Void .ctor()
    // Offset: 0x11B3434
    // Implemented from: System.Collections.CollectionBase
    // Base method: System.Void CollectionBase::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlAnyElementAttributes* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAnyElementAttributes::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlAnyElementAttributes*, creationType>()));
    }
  }; // System.Xml.Serialization.XmlAnyElementAttributes
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Serialization::XmlAnyElementAttributes::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Serialization::XmlAnyElementAttribute* (System::Xml::Serialization::XmlAnyElementAttributes::*)(int)>(&System::Xml::Serialization::XmlAnyElementAttributes::get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlAnyElementAttributes*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlAnyElementAttributes::get_Order
// Il2CppName: get_Order
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::Serialization::XmlAnyElementAttributes::*)()>(&System::Xml::Serialization::XmlAnyElementAttributes::get_Order)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlAnyElementAttributes*), "get_Order", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlAnyElementAttributes::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::Serialization::XmlAnyElementAttributes::*)(::System::Xml::Serialization::XmlAnyElementAttribute*)>(&System::Xml::Serialization::XmlAnyElementAttributes::Add)> {
  static const MethodInfo* get() {
    static auto* attribute = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlAnyElementAttribute")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlAnyElementAttributes*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attribute});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlAnyElementAttributes::AddKeyHash
// Il2CppName: AddKeyHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlAnyElementAttributes::*)(::System::Text::StringBuilder*)>(&System::Xml::Serialization::XmlAnyElementAttributes::AddKeyHash)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlAnyElementAttributes*), "AddKeyHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb});
  }
};
// Writing MetadataGetter for method: System::Xml::Serialization::XmlAnyElementAttributes::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
