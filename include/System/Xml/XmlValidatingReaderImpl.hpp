// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.IXmlLineInfo
#include "System/Xml/IXmlLineInfo.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.ValidationType
#include "System/Xml/ValidationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlParserContext
  class XmlParserContext;
  // Forward declaring type: XmlTextReaderImpl
  class XmlTextReaderImpl;
  // Forward declaring type: ReadContentAsBinaryHelper
  class ReadContentAsBinaryHelper;
  // Forward declaring type: XmlResolver
  class XmlResolver;
  // Forward declaring type: XmlNamespaceScope
  struct XmlNamespaceScope;
  // Forward declaring type: IDtdDefaultAttributeInfo
  class IDtdDefaultAttributeInfo;
  // Forward declaring type: XmlReaderSettings
  class XmlReaderSettings;
  // Forward declaring type: XmlNodeType
  struct XmlNodeType;
  // Forward declaring type: XmlSpace
  struct XmlSpace;
  // Forward declaring type: ReadState
  struct ReadState;
  // Forward declaring type: XmlNameTable
  class XmlNameTable;
  // Forward declaring type: XmlNamespaceManager
  class XmlNamespaceManager;
  // Forward declaring type: IDtdInfo
  class IDtdInfo;
}
// Forward declaring namespace: System::Xml::Schema
namespace System::Xml::Schema {
  // Forward declaring type: BaseValidator
  class BaseValidator;
  // Forward declaring type: XmlSchemaCollection
  class XmlSchemaCollection;
  // Forward declaring type: ValidationEventHandler
  class ValidationEventHandler;
  // Forward declaring type: SchemaAttDef
  class SchemaAttDef;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IDictionary_2;
}
// Completed forward declares
// Type namespace: System.Xml
namespace System::Xml {
  // Forward declaring type: XmlValidatingReaderImpl
  class XmlValidatingReaderImpl;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::XmlValidatingReaderImpl);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::XmlValidatingReaderImpl*, "System.Xml", "XmlValidatingReaderImpl");
// Type namespace: System.Xml
namespace System::Xml {
  // Size: 0x68
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.XmlValidatingReaderImpl
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlValidatingReaderImpl : public ::System::Xml::XmlReader/*, public ::System::Xml::IXmlLineInfo, public ::System::Xml::IXmlNamespaceResolver*/ {
    public:
    // Nested type: ::System::Xml::XmlValidatingReaderImpl::ParsingFunction
    struct ParsingFunction;
    // Nested type: ::System::Xml::XmlValidatingReaderImpl::ValidationEventHandling
    class ValidationEventHandling;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction
    // [TokenAttribute] Offset: FFFFFFFF
    struct ParsingFunction/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: ParsingFunction
      constexpr ParsingFunction(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction Read
      static constexpr const int Read = 0;
      // Get static field: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction Read
      static ::System::Xml::XmlValidatingReaderImpl::ParsingFunction _get_Read();
      // Set static field: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction Read
      static void _set_Read(::System::Xml::XmlValidatingReaderImpl::ParsingFunction value);
      // static field const value: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction Init
      static constexpr const int Init = 1;
      // Get static field: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction Init
      static ::System::Xml::XmlValidatingReaderImpl::ParsingFunction _get_Init();
      // Set static field: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction Init
      static void _set_Init(::System::Xml::XmlValidatingReaderImpl::ParsingFunction value);
      // static field const value: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction ParseDtdFromContext
      static constexpr const int ParseDtdFromContext = 2;
      // Get static field: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction ParseDtdFromContext
      static ::System::Xml::XmlValidatingReaderImpl::ParsingFunction _get_ParseDtdFromContext();
      // Set static field: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction ParseDtdFromContext
      static void _set_ParseDtdFromContext(::System::Xml::XmlValidatingReaderImpl::ParsingFunction value);
      // static field const value: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction ResolveEntityInternally
      static constexpr const int ResolveEntityInternally = 3;
      // Get static field: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction ResolveEntityInternally
      static ::System::Xml::XmlValidatingReaderImpl::ParsingFunction _get_ResolveEntityInternally();
      // Set static field: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction ResolveEntityInternally
      static void _set_ResolveEntityInternally(::System::Xml::XmlValidatingReaderImpl::ParsingFunction value);
      // static field const value: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction InReadBinaryContent
      static constexpr const int InReadBinaryContent = 4;
      // Get static field: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction InReadBinaryContent
      static ::System::Xml::XmlValidatingReaderImpl::ParsingFunction _get_InReadBinaryContent();
      // Set static field: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction InReadBinaryContent
      static void _set_InReadBinaryContent(::System::Xml::XmlValidatingReaderImpl::ParsingFunction value);
      // static field const value: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction ReaderClosed
      static constexpr const int ReaderClosed = 5;
      // Get static field: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction ReaderClosed
      static ::System::Xml::XmlValidatingReaderImpl::ParsingFunction _get_ReaderClosed();
      // Set static field: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction ReaderClosed
      static void _set_ReaderClosed(::System::Xml::XmlValidatingReaderImpl::ParsingFunction value);
      // static field const value: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction Error
      static constexpr const int Error = 6;
      // Get static field: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction Error
      static ::System::Xml::XmlValidatingReaderImpl::ParsingFunction _get_Error();
      // Set static field: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction Error
      static void _set_Error(::System::Xml::XmlValidatingReaderImpl::ParsingFunction value);
      // static field const value: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction None
      static constexpr const int None = 7;
      // Get static field: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction None
      static ::System::Xml::XmlValidatingReaderImpl::ParsingFunction _get_None();
      // Set static field: static public System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction None
      static void _set_None(::System::Xml::XmlValidatingReaderImpl::ParsingFunction value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated]] int& dyn_value__();
    }; // System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction
    #pragma pack(pop)
    static check_size<sizeof(XmlValidatingReaderImpl::ParsingFunction), 0 + sizeof(int)> __System_Xml_XmlValidatingReaderImpl_ParsingFunctionSizeCheck;
    static_assert(sizeof(XmlValidatingReaderImpl::ParsingFunction) == 0x4);
    public:
    // private System.Xml.XmlReader coreReader
    // Size: 0x8
    // Offset: 0x10
    ::System::Xml::XmlReader* coreReader;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlReader*) == 0x8);
    // private System.Xml.XmlTextReaderImpl coreReaderImpl
    // Size: 0x8
    // Offset: 0x18
    ::System::Xml::XmlTextReaderImpl* coreReaderImpl;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlTextReaderImpl*) == 0x8);
    // private System.Xml.IXmlNamespaceResolver coreReaderNSResolver
    // Size: 0x8
    // Offset: 0x20
    ::System::Xml::IXmlNamespaceResolver* coreReaderNSResolver;
    // Field size check
    static_assert(sizeof(::System::Xml::IXmlNamespaceResolver*) == 0x8);
    // private System.Xml.ValidationType validationType
    // Size: 0x4
    // Offset: 0x28
    ::System::Xml::ValidationType validationType;
    // Field size check
    static_assert(sizeof(::System::Xml::ValidationType) == 0x4);
    // Padding between fields: validationType and: validator
    char __padding3[0x4] = {};
    // private System.Xml.Schema.BaseValidator validator
    // Size: 0x8
    // Offset: 0x30
    ::System::Xml::Schema::BaseValidator* validator;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::BaseValidator*) == 0x8);
    // private System.Xml.Schema.XmlSchemaCollection schemaCollection
    // Size: 0x8
    // Offset: 0x38
    ::System::Xml::Schema::XmlSchemaCollection* schemaCollection;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchemaCollection*) == 0x8);
    // private System.Boolean processIdentityConstraints
    // Size: 0x1
    // Offset: 0x40
    bool processIdentityConstraints;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: processIdentityConstraints and: parsingFunction
    char __padding6[0x3] = {};
    // private System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction parsingFunction
    // Size: 0x4
    // Offset: 0x44
    ::System::Xml::XmlValidatingReaderImpl::ParsingFunction parsingFunction;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlValidatingReaderImpl::ParsingFunction) == 0x4);
    // private System.Xml.XmlValidatingReaderImpl/System.Xml.ValidationEventHandling eventHandling
    // Size: 0x8
    // Offset: 0x48
    ::System::Xml::XmlValidatingReaderImpl::ValidationEventHandling* eventHandling;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlValidatingReaderImpl::ValidationEventHandling*) == 0x8);
    // private System.Xml.XmlParserContext parserContext
    // Size: 0x8
    // Offset: 0x50
    ::System::Xml::XmlParserContext* parserContext;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlParserContext*) == 0x8);
    // private System.Xml.ReadContentAsBinaryHelper readBinaryHelper
    // Size: 0x8
    // Offset: 0x58
    ::System::Xml::ReadContentAsBinaryHelper* readBinaryHelper;
    // Field size check
    static_assert(sizeof(::System::Xml::ReadContentAsBinaryHelper*) == 0x8);
    // private System.Xml.XmlReader outerReader
    // Size: 0x8
    // Offset: 0x60
    ::System::Xml::XmlReader* outerReader;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlReader*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Xml::IXmlLineInfo
    operator ::System::Xml::IXmlLineInfo() noexcept {
      return *reinterpret_cast<::System::Xml::IXmlLineInfo*>(this);
    }
    // Creating interface conversion operator: operator ::System::Xml::IXmlNamespaceResolver
    operator ::System::Xml::IXmlNamespaceResolver() noexcept {
      return *reinterpret_cast<::System::Xml::IXmlNamespaceResolver*>(this);
    }
    // Get static field: static private System.Xml.XmlResolver s_tempResolver
    static ::System::Xml::XmlResolver* _get_s_tempResolver();
    // Set static field: static private System.Xml.XmlResolver s_tempResolver
    static void _set_s_tempResolver(::System::Xml::XmlResolver* value);
    // Get instance field reference: private System.Xml.XmlReader coreReader
    [[deprecated]] ::System::Xml::XmlReader*& dyn_coreReader();
    // Get instance field reference: private System.Xml.XmlTextReaderImpl coreReaderImpl
    [[deprecated]] ::System::Xml::XmlTextReaderImpl*& dyn_coreReaderImpl();
    // Get instance field reference: private System.Xml.IXmlNamespaceResolver coreReaderNSResolver
    [[deprecated]] ::System::Xml::IXmlNamespaceResolver*& dyn_coreReaderNSResolver();
    // Get instance field reference: private System.Xml.ValidationType validationType
    [[deprecated]] ::System::Xml::ValidationType& dyn_validationType();
    // Get instance field reference: private System.Xml.Schema.BaseValidator validator
    [[deprecated]] ::System::Xml::Schema::BaseValidator*& dyn_validator();
    // Get instance field reference: private System.Xml.Schema.XmlSchemaCollection schemaCollection
    [[deprecated]] ::System::Xml::Schema::XmlSchemaCollection*& dyn_schemaCollection();
    // Get instance field reference: private System.Boolean processIdentityConstraints
    [[deprecated]] bool& dyn_processIdentityConstraints();
    // Get instance field reference: private System.Xml.XmlValidatingReaderImpl/System.Xml.ParsingFunction parsingFunction
    [[deprecated]] ::System::Xml::XmlValidatingReaderImpl::ParsingFunction& dyn_parsingFunction();
    // Get instance field reference: private System.Xml.XmlValidatingReaderImpl/System.Xml.ValidationEventHandling eventHandling
    [[deprecated]] ::System::Xml::XmlValidatingReaderImpl::ValidationEventHandling*& dyn_eventHandling();
    // Get instance field reference: private System.Xml.XmlParserContext parserContext
    [[deprecated]] ::System::Xml::XmlParserContext*& dyn_parserContext();
    // Get instance field reference: private System.Xml.ReadContentAsBinaryHelper readBinaryHelper
    [[deprecated]] ::System::Xml::ReadContentAsBinaryHelper*& dyn_readBinaryHelper();
    // Get instance field reference: private System.Xml.XmlReader outerReader
    [[deprecated]] ::System::Xml::XmlReader*& dyn_outerReader();
    // public System.Int32 get_LineNumber()
    // Offset: 0x1095DAC
    int get_LineNumber();
    // public System.Int32 get_LinePosition()
    // Offset: 0x1095EA8
    int get_LinePosition();
    // System.Xml.ValidationType get_ValidationType()
    // Offset: 0x1096138
    ::System::Xml::ValidationType get_ValidationType();
    // System.Xml.Schema.XmlSchemaCollection get_Schemas()
    // Offset: 0x1096140
    ::System::Xml::Schema::XmlSchemaCollection* get_Schemas();
    // System.Boolean get_Namespaces()
    // Offset: 0x1094D3C
    bool get_Namespaces();
    // System.Xml.Schema.BaseValidator get_Validator()
    // Offset: 0x10961C8
    ::System::Xml::Schema::BaseValidator* get_Validator();
    // System.Void set_Validator(System.Xml.Schema.BaseValidator value)
    // Offset: 0x10961D0
    void set_Validator(::System::Xml::Schema::BaseValidator* value);
    // System.Boolean get_StandAlone()
    // Offset: 0x10961FC
    bool get_StandAlone();
    // System.Void set_SchemaTypeObject(System.Object value)
    // Offset: 0x1096218
    void set_SchemaTypeObject(::Il2CppObject* value);
    // System.Object get_TypedValueObject()
    // Offset: 0x1096234
    ::Il2CppObject* get_TypedValueObject();
    // System.Void set_TypedValueObject(System.Object value)
    // Offset: 0x1096250
    void set_TypedValueObject(::Il2CppObject* value);
    // System.Void .ctor(System.Xml.XmlReader reader, System.Xml.Schema.ValidationEventHandler settingsEventHandler, System.Boolean processIdentityConstraints)
    // Offset: 0x1094D58
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlValidatingReaderImpl* New_ctor(::System::Xml::XmlReader* reader, ::System::Xml::Schema::ValidationEventHandler* settingsEventHandler, bool processIdentityConstraints) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlValidatingReaderImpl::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlValidatingReaderImpl*, creationType>(reader, settingsEventHandler, processIdentityConstraints)));
    }
    // System.Void MoveOffEntityReference()
    // Offset: 0x1095CC8
    void MoveOffEntityReference();
    // public System.Boolean HasLineInfo()
    // Offset: 0x1095DA4
    bool HasLineInfo();
    // private System.Collections.Generic.IDictionary`2<System.String,System.String> System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope scope)
    // Offset: 0x1095FA4
    ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* System_Xml_IXmlNamespaceResolver_GetNamespacesInScope(::System::Xml::XmlNamespaceScope scope);
    // private System.String System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String prefix)
    // Offset: 0x1096064
    ::StringW System_Xml_IXmlNamespaceResolver_LookupNamespace(::StringW prefix);
    // private System.String System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String namespaceName)
    // Offset: 0x1096074
    ::StringW System_Xml_IXmlNamespaceResolver_LookupPrefix(::StringW namespaceName);
    // System.Collections.Generic.IDictionary`2<System.String,System.String> GetNamespacesInScope(System.Xml.XmlNamespaceScope scope)
    // Offset: 0x1095FA8
    ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* GetNamespacesInScope(::System::Xml::XmlNamespaceScope scope);
    // System.String LookupPrefix(System.String namespaceName)
    // Offset: 0x1096078
    ::StringW LookupPrefix(::StringW namespaceName);
    // private System.Void ParseDtdFromParserContext()
    // Offset: 0x10959B0
    void ParseDtdFromParserContext();
    // private System.Void ValidateDtd()
    // Offset: 0x1096148
    void ValidateDtd();
    // private System.Void ResolveEntityInternally()
    // Offset: 0x1095B30
    void ResolveEntityInternally();
    // private System.Void SetupValidation(System.Xml.ValidationType valType)
    // Offset: 0x109518C
    void SetupValidation(::System::Xml::ValidationType valType);
    // private System.Xml.XmlResolver GetResolver()
    // Offset: 0x10950B4
    ::System::Xml::XmlResolver* GetResolver();
    // private System.Void ProcessCoreReaderEvent()
    // Offset: 0x10958B4
    void ProcessCoreReaderEvent();
    // System.Boolean AddDefaultAttribute(System.Xml.Schema.SchemaAttDef attdef)
    // Offset: 0x109626C
    bool AddDefaultAttribute(::System::Xml::Schema::SchemaAttDef* attdef);
    // System.Void ValidateDefaultAttributeOnUse(System.Xml.IDtdDefaultAttributeInfo defaultAttribute, System.Xml.XmlTextReaderImpl coreReader)
    // Offset: 0x10962AC
    void ValidateDefaultAttributeOnUse(::System::Xml::IDtdDefaultAttributeInfo* defaultAttribute, ::System::Xml::XmlTextReaderImpl* coreReader);
    // public override System.Xml.XmlReaderSettings get_Settings()
    // Offset: 0x10952CC
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Xml.XmlReaderSettings XmlReader::get_Settings()
    ::System::Xml::XmlReaderSettings* get_Settings();
    // public override System.Xml.XmlNodeType get_NodeType()
    // Offset: 0x10953A0
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Xml.XmlNodeType XmlReader::get_NodeType()
    ::System::Xml::XmlNodeType get_NodeType();
    // public override System.String get_Name()
    // Offset: 0x10953C0
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::get_Name()
    ::StringW get_Name();
    // public override System.String get_LocalName()
    // Offset: 0x10953E0
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::get_LocalName()
    ::StringW get_LocalName();
    // public override System.String get_NamespaceURI()
    // Offset: 0x1095400
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::get_NamespaceURI()
    ::StringW get_NamespaceURI();
    // public override System.String get_Prefix()
    // Offset: 0x1095420
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::get_Prefix()
    ::StringW get_Prefix();
    // public override System.String get_Value()
    // Offset: 0x1095440
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::get_Value()
    ::StringW get_Value();
    // public override System.Int32 get_Depth()
    // Offset: 0x1095460
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Int32 XmlReader::get_Depth()
    int get_Depth();
    // public override System.String get_BaseURI()
    // Offset: 0x1095480
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::get_BaseURI()
    ::StringW get_BaseURI();
    // public override System.Boolean get_IsEmptyElement()
    // Offset: 0x10954A4
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::get_IsEmptyElement()
    bool get_IsEmptyElement();
    // public override System.Boolean get_IsDefault()
    // Offset: 0x10954C8
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::get_IsDefault()
    bool get_IsDefault();
    // public override System.Char get_QuoteChar()
    // Offset: 0x10954EC
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Char XmlReader::get_QuoteChar()
    ::Il2CppChar get_QuoteChar();
    // public override System.Xml.XmlSpace get_XmlSpace()
    // Offset: 0x1095510
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Xml.XmlSpace XmlReader::get_XmlSpace()
    ::System::Xml::XmlSpace get_XmlSpace();
    // public override System.String get_XmlLang()
    // Offset: 0x1095534
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::get_XmlLang()
    ::StringW get_XmlLang();
    // public override System.Xml.ReadState get_ReadState()
    // Offset: 0x1095558
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Xml.ReadState XmlReader::get_ReadState()
    ::System::Xml::ReadState get_ReadState();
    // public override System.Boolean get_EOF()
    // Offset: 0x1095590
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::get_EOF()
    bool get_EOF();
    // public override System.Xml.XmlNameTable get_NameTable()
    // Offset: 0x10955B4
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Xml.XmlNameTable XmlReader::get_NameTable()
    ::System::Xml::XmlNameTable* get_NameTable();
    // public override System.Int32 get_AttributeCount()
    // Offset: 0x10955D8
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Int32 XmlReader::get_AttributeCount()
    int get_AttributeCount();
    // public override System.Boolean get_CanResolveEntity()
    // Offset: 0x1095C8C
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::get_CanResolveEntity()
    bool get_CanResolveEntity();
    // override System.Xml.XmlNamespaceManager get_NamespaceManager()
    // Offset: 0x10961D8
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Xml.XmlNamespaceManager XmlReader::get_NamespaceManager()
    ::System::Xml::XmlNamespaceManager* get_NamespaceManager();
    // override System.Xml.IDtdInfo get_DtdInfo()
    // Offset: 0x1096288
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Xml.IDtdInfo XmlReader::get_DtdInfo()
    ::System::Xml::IDtdInfo* get_DtdInfo();
    // public override System.String GetAttribute(System.String name)
    // Offset: 0x10955FC
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::GetAttribute(System.String name)
    ::StringW GetAttribute(::StringW name);
    // public override System.String GetAttribute(System.String localName, System.String namespaceURI)
    // Offset: 0x1095620
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::GetAttribute(System.String localName, System.String namespaceURI)
    ::StringW GetAttribute(::StringW localName, ::StringW namespaceURI);
    // public override System.String GetAttribute(System.Int32 i)
    // Offset: 0x1095644
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::GetAttribute(System.Int32 i)
    ::StringW GetAttribute(int i);
    // public override System.Boolean MoveToAttribute(System.String name)
    // Offset: 0x1095668
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::MoveToAttribute(System.String name)
    bool MoveToAttribute(::StringW name);
    // public override System.Void MoveToAttribute(System.Int32 i)
    // Offset: 0x10956B4
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Void XmlReader::MoveToAttribute(System.Int32 i)
    void MoveToAttribute(int i);
    // public override System.Boolean MoveToFirstAttribute()
    // Offset: 0x10956F0
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::MoveToFirstAttribute()
    bool MoveToFirstAttribute();
    // public override System.Boolean MoveToNextAttribute()
    // Offset: 0x109573C
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::MoveToNextAttribute()
    bool MoveToNextAttribute();
    // public override System.Boolean MoveToElement()
    // Offset: 0x1095788
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::MoveToElement()
    bool MoveToElement();
    // public override System.Boolean Read()
    // Offset: 0x10957D4
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::Read()
    bool Read();
    // public override System.Void Close()
    // Offset: 0x1095BBC
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Void XmlReader::Close()
    void Close();
    // public override System.String LookupNamespace(System.String prefix)
    // Offset: 0x1095BFC
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::LookupNamespace(System.String prefix)
    ::StringW LookupNamespace(::StringW prefix);
    // public override System.Boolean ReadAttributeValue()
    // Offset: 0x1095C20
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::ReadAttributeValue()
    bool ReadAttributeValue();
    // public override System.Void ResolveEntity()
    // Offset: 0x1095C94
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Void XmlReader::ResolveEntity()
    void ResolveEntity();
    // public override System.String ReadString()
    // Offset: 0x1095D7C
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::ReadString()
    ::StringW ReadString();
  }; // System.Xml.XmlValidatingReaderImpl
  #pragma pack(pop)
  static check_size<sizeof(XmlValidatingReaderImpl), 96 + sizeof(::System::Xml::XmlReader*)> __System_Xml_XmlValidatingReaderImplSizeCheck;
  static_assert(sizeof(XmlValidatingReaderImpl) == 0x68);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::XmlValidatingReaderImpl::ParsingFunction, "System.Xml", "XmlValidatingReaderImpl/ParsingFunction");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_LineNumber
// Il2CppName: get_LineNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_LineNumber)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_LineNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_LinePosition
// Il2CppName: get_LinePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_LinePosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_LinePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_ValidationType
// Il2CppName: get_ValidationType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::ValidationType (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_ValidationType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_ValidationType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_Schemas
// Il2CppName: get_Schemas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaCollection* (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_Schemas)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_Schemas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_Namespaces
// Il2CppName: get_Namespaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_Namespaces)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_Namespaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_Validator
// Il2CppName: get_Validator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::BaseValidator* (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_Validator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_Validator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::set_Validator
// Il2CppName: set_Validator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlValidatingReaderImpl::*)(::System::Xml::Schema::BaseValidator*)>(&System::Xml::XmlValidatingReaderImpl::set_Validator)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "BaseValidator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "set_Validator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_StandAlone
// Il2CppName: get_StandAlone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_StandAlone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_StandAlone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::set_SchemaTypeObject
// Il2CppName: set_SchemaTypeObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlValidatingReaderImpl::*)(::Il2CppObject*)>(&System::Xml::XmlValidatingReaderImpl::set_SchemaTypeObject)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "set_SchemaTypeObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_TypedValueObject
// Il2CppName: get_TypedValueObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_TypedValueObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_TypedValueObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::set_TypedValueObject
// Il2CppName: set_TypedValueObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlValidatingReaderImpl::*)(::Il2CppObject*)>(&System::Xml::XmlValidatingReaderImpl::set_TypedValueObject)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "set_TypedValueObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::MoveOffEntityReference
// Il2CppName: MoveOffEntityReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::MoveOffEntityReference)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "MoveOffEntityReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::HasLineInfo
// Il2CppName: HasLineInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::HasLineInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "HasLineInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::System_Xml_IXmlNamespaceResolver_GetNamespacesInScope
// Il2CppName: System.Xml.IXmlNamespaceResolver.GetNamespacesInScope
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* (System::Xml::XmlValidatingReaderImpl::*)(::System::Xml::XmlNamespaceScope)>(&System::Xml::XmlValidatingReaderImpl::System_Xml_IXmlNamespaceResolver_GetNamespacesInScope)> {
  static const MethodInfo* get() {
    static auto* scope = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlNamespaceScope")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "System.Xml.IXmlNamespaceResolver.GetNamespacesInScope", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scope});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::System_Xml_IXmlNamespaceResolver_LookupNamespace
// Il2CppName: System.Xml.IXmlNamespaceResolver.LookupNamespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReaderImpl::*)(::StringW)>(&System::Xml::XmlValidatingReaderImpl::System_Xml_IXmlNamespaceResolver_LookupNamespace)> {
  static const MethodInfo* get() {
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "System.Xml.IXmlNamespaceResolver.LookupNamespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::System_Xml_IXmlNamespaceResolver_LookupPrefix
// Il2CppName: System.Xml.IXmlNamespaceResolver.LookupPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReaderImpl::*)(::StringW)>(&System::Xml::XmlValidatingReaderImpl::System_Xml_IXmlNamespaceResolver_LookupPrefix)> {
  static const MethodInfo* get() {
    static auto* namespaceName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "System.Xml.IXmlNamespaceResolver.LookupPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{namespaceName});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::GetNamespacesInScope
// Il2CppName: GetNamespacesInScope
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* (System::Xml::XmlValidatingReaderImpl::*)(::System::Xml::XmlNamespaceScope)>(&System::Xml::XmlValidatingReaderImpl::GetNamespacesInScope)> {
  static const MethodInfo* get() {
    static auto* scope = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlNamespaceScope")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "GetNamespacesInScope", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scope});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::LookupPrefix
// Il2CppName: LookupPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReaderImpl::*)(::StringW)>(&System::Xml::XmlValidatingReaderImpl::LookupPrefix)> {
  static const MethodInfo* get() {
    static auto* namespaceName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "LookupPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{namespaceName});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::ParseDtdFromParserContext
// Il2CppName: ParseDtdFromParserContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::ParseDtdFromParserContext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "ParseDtdFromParserContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::ValidateDtd
// Il2CppName: ValidateDtd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::ValidateDtd)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "ValidateDtd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::ResolveEntityInternally
// Il2CppName: ResolveEntityInternally
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::ResolveEntityInternally)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "ResolveEntityInternally", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::SetupValidation
// Il2CppName: SetupValidation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlValidatingReaderImpl::*)(::System::Xml::ValidationType)>(&System::Xml::XmlValidatingReaderImpl::SetupValidation)> {
  static const MethodInfo* get() {
    static auto* valType = &::il2cpp_utils::GetClassFromName("System.Xml", "ValidationType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "SetupValidation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{valType});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::GetResolver
// Il2CppName: GetResolver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XmlResolver* (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::GetResolver)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "GetResolver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::ProcessCoreReaderEvent
// Il2CppName: ProcessCoreReaderEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::ProcessCoreReaderEvent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "ProcessCoreReaderEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::AddDefaultAttribute
// Il2CppName: AddDefaultAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReaderImpl::*)(::System::Xml::Schema::SchemaAttDef*)>(&System::Xml::XmlValidatingReaderImpl::AddDefaultAttribute)> {
  static const MethodInfo* get() {
    static auto* attdef = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "SchemaAttDef")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "AddDefaultAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attdef});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::ValidateDefaultAttributeOnUse
// Il2CppName: ValidateDefaultAttributeOnUse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlValidatingReaderImpl::*)(::System::Xml::IDtdDefaultAttributeInfo*, ::System::Xml::XmlTextReaderImpl*)>(&System::Xml::XmlValidatingReaderImpl::ValidateDefaultAttributeOnUse)> {
  static const MethodInfo* get() {
    static auto* defaultAttribute = &::il2cpp_utils::GetClassFromName("System.Xml", "IDtdDefaultAttributeInfo")->byval_arg;
    static auto* coreReader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlTextReaderImpl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "ValidateDefaultAttributeOnUse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{defaultAttribute, coreReader});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_Settings
// Il2CppName: get_Settings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XmlReaderSettings* (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_Settings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_Settings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_NodeType
// Il2CppName: get_NodeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XmlNodeType (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_NodeType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_NodeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_Name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_LocalName
// Il2CppName: get_LocalName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_LocalName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_LocalName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_NamespaceURI
// Il2CppName: get_NamespaceURI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_NamespaceURI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_NamespaceURI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_Prefix
// Il2CppName: get_Prefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_Prefix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_Prefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_Value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_Depth
// Il2CppName: get_Depth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_Depth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_Depth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_BaseURI
// Il2CppName: get_BaseURI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_BaseURI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_BaseURI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_IsEmptyElement
// Il2CppName: get_IsEmptyElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_IsEmptyElement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_IsEmptyElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_IsDefault
// Il2CppName: get_IsDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_IsDefault)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_IsDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_QuoteChar
// Il2CppName: get_QuoteChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_QuoteChar)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_QuoteChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_XmlSpace
// Il2CppName: get_XmlSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XmlSpace (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_XmlSpace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_XmlSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_XmlLang
// Il2CppName: get_XmlLang
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_XmlLang)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_XmlLang", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_ReadState
// Il2CppName: get_ReadState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::ReadState (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_ReadState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_ReadState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_EOF
// Il2CppName: get_EOF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_EOF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_EOF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_NameTable
// Il2CppName: get_NameTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XmlNameTable* (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_NameTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_NameTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_AttributeCount
// Il2CppName: get_AttributeCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_AttributeCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_AttributeCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_CanResolveEntity
// Il2CppName: get_CanResolveEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_CanResolveEntity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_CanResolveEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_NamespaceManager
// Il2CppName: get_NamespaceManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XmlNamespaceManager* (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_NamespaceManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_NamespaceManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::get_DtdInfo
// Il2CppName: get_DtdInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::IDtdInfo* (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::get_DtdInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "get_DtdInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::GetAttribute
// Il2CppName: GetAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReaderImpl::*)(::StringW)>(&System::Xml::XmlValidatingReaderImpl::GetAttribute)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "GetAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::GetAttribute
// Il2CppName: GetAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReaderImpl::*)(::StringW, ::StringW)>(&System::Xml::XmlValidatingReaderImpl::GetAttribute)> {
  static const MethodInfo* get() {
    static auto* localName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* namespaceURI = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "GetAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{localName, namespaceURI});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::GetAttribute
// Il2CppName: GetAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReaderImpl::*)(int)>(&System::Xml::XmlValidatingReaderImpl::GetAttribute)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "GetAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::MoveToAttribute
// Il2CppName: MoveToAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReaderImpl::*)(::StringW)>(&System::Xml::XmlValidatingReaderImpl::MoveToAttribute)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "MoveToAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::MoveToAttribute
// Il2CppName: MoveToAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlValidatingReaderImpl::*)(int)>(&System::Xml::XmlValidatingReaderImpl::MoveToAttribute)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "MoveToAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::MoveToFirstAttribute
// Il2CppName: MoveToFirstAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::MoveToFirstAttribute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "MoveToFirstAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::MoveToNextAttribute
// Il2CppName: MoveToNextAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::MoveToNextAttribute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "MoveToNextAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::MoveToElement
// Il2CppName: MoveToElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::MoveToElement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "MoveToElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::Read)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::Close
// Il2CppName: Close
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::Close)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "Close", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::LookupNamespace
// Il2CppName: LookupNamespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReaderImpl::*)(::StringW)>(&System::Xml::XmlValidatingReaderImpl::LookupNamespace)> {
  static const MethodInfo* get() {
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "LookupNamespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::ReadAttributeValue
// Il2CppName: ReadAttributeValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::ReadAttributeValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "ReadAttributeValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::ResolveEntity
// Il2CppName: ResolveEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::ResolveEntity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "ResolveEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReaderImpl::ReadString
// Il2CppName: ReadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReaderImpl::*)()>(&System::Xml::XmlValidatingReaderImpl::ReadString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReaderImpl*), "ReadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
