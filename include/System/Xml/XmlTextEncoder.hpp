// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.XmlCharType
#include "System/Xml/XmlCharType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: TextWriter
  class TextWriter;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: System.Xml
namespace System::Xml {
  // Forward declaring type: XmlTextEncoder
  class XmlTextEncoder;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::XmlTextEncoder);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::XmlTextEncoder*, "System.Xml", "XmlTextEncoder");
// Type namespace: System.Xml
namespace System::Xml {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.XmlTextEncoder
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlTextEncoder : public ::Il2CppObject {
    public:
    public:
    // private System.IO.TextWriter textWriter
    // Size: 0x8
    // Offset: 0x10
    ::System::IO::TextWriter* textWriter;
    // Field size check
    static_assert(sizeof(::System::IO::TextWriter*) == 0x8);
    // private System.Boolean inAttribute
    // Size: 0x1
    // Offset: 0x18
    bool inAttribute;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: inAttribute and: quoteChar
    char __padding1[0x1] = {};
    // private System.Char quoteChar
    // Size: 0x2
    // Offset: 0x1A
    ::Il2CppChar quoteChar;
    // Field size check
    static_assert(sizeof(::Il2CppChar) == 0x2);
    // Padding between fields: quoteChar and: attrValue
    char __padding2[0x4] = {};
    // private System.Text.StringBuilder attrValue
    // Size: 0x8
    // Offset: 0x20
    ::System::Text::StringBuilder* attrValue;
    // Field size check
    static_assert(sizeof(::System::Text::StringBuilder*) == 0x8);
    // private System.Boolean cacheAttrValue
    // Size: 0x1
    // Offset: 0x28
    bool cacheAttrValue;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: cacheAttrValue and: xmlCharType
    char __padding4[0x7] = {};
    // private System.Xml.XmlCharType xmlCharType
    // Size: 0x8
    // Offset: 0x30
    ::System::Xml::XmlCharType xmlCharType;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlCharType) == 0x8);
    public:
    // Get instance field reference: private System.IO.TextWriter textWriter
    [[deprecated]] ::System::IO::TextWriter*& dyn_textWriter();
    // Get instance field reference: private System.Boolean inAttribute
    [[deprecated]] bool& dyn_inAttribute();
    // Get instance field reference: private System.Char quoteChar
    [[deprecated]] ::Il2CppChar& dyn_quoteChar();
    // Get instance field reference: private System.Text.StringBuilder attrValue
    [[deprecated]] ::System::Text::StringBuilder*& dyn_attrValue();
    // Get instance field reference: private System.Boolean cacheAttrValue
    [[deprecated]] bool& dyn_cacheAttrValue();
    // Get instance field reference: private System.Xml.XmlCharType xmlCharType
    [[deprecated]] ::System::Xml::XmlCharType& dyn_xmlCharType();
    // System.Void set_QuoteChar(System.Char value)
    // Offset: 0x155E9B0
    void set_QuoteChar(::Il2CppChar value);
    // System.String get_AttributeValue()
    // Offset: 0x155EA98
    ::StringW get_AttributeValue();
    // System.Void .ctor(System.IO.TextWriter textWriter)
    // Offset: 0x155E970
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlTextEncoder* New_ctor(::System::IO::TextWriter* textWriter) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextEncoder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlTextEncoder*, creationType>(textWriter)));
    }
    // System.Void StartAttribute(System.Boolean cacheAttrValue)
    // Offset: 0x155E9B8
    void StartAttribute(bool cacheAttrValue);
    // System.Void EndAttribute()
    // Offset: 0x155EA54
    void EndAttribute();
    // System.Void WriteSurrogateChar(System.Char lowChar, System.Char highChar)
    // Offset: 0x155EB10
    void WriteSurrogateChar(::Il2CppChar lowChar, ::Il2CppChar highChar);
    // System.Void Write(System.Char[] array, System.Int32 offset, System.Int32 count)
    // Offset: 0x155EBF8
    void Write(::ArrayW<::Il2CppChar> array, int offset, int count);
    // System.Void WriteSurrogateCharEntity(System.Char lowChar, System.Char highChar)
    // Offset: 0x155F134
    void WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar);
    // System.Void Write(System.String text)
    // Offset: 0x155F2F0
    void Write(::StringW text);
    // System.Void WriteRawWithSurrogateChecking(System.String text)
    // Offset: 0x155F844
    void WriteRawWithSurrogateChecking(::StringW text);
    // System.Void WriteRaw(System.Char[] array, System.Int32 offset, System.Int32 count)
    // Offset: 0x155FA90
    void WriteRaw(::ArrayW<::Il2CppChar> array, int offset, int count);
    // System.Void WriteCharEntity(System.Char ch)
    // Offset: 0x155FBC0
    void WriteCharEntity(::Il2CppChar ch);
    // System.Void WriteEntityRef(System.String name)
    // Offset: 0x155FDA8
    void WriteEntityRef(::StringW name);
    // private System.Void WriteStringFragment(System.String str, System.Int32 offset, System.Int32 count, System.Char[] helperBuffer)
    // Offset: 0x155F790
    void WriteStringFragment(::StringW str, int offset, int count, ::ArrayW<::Il2CppChar> helperBuffer);
    // private System.Void WriteCharEntityImpl(System.Char ch)
    // Offset: 0x155F040
    void WriteCharEntityImpl(::Il2CppChar ch);
    // private System.Void WriteCharEntityImpl(System.String strVal)
    // Offset: 0x155FD04
    void WriteCharEntityImpl(::StringW strVal);
    // private System.Void WriteEntityRefImpl(System.String name)
    // Offset: 0x155F0C0
    void WriteEntityRefImpl(::StringW name);
  }; // System.Xml.XmlTextEncoder
  #pragma pack(pop)
  static check_size<sizeof(XmlTextEncoder), 48 + sizeof(::System::Xml::XmlCharType)> __System_Xml_XmlTextEncoderSizeCheck;
  static_assert(sizeof(XmlTextEncoder) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::XmlTextEncoder::set_QuoteChar
// Il2CppName: set_QuoteChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlTextEncoder::*)(::Il2CppChar)>(&System::Xml::XmlTextEncoder::set_QuoteChar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlTextEncoder*), "set_QuoteChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlTextEncoder::get_AttributeValue
// Il2CppName: get_AttributeValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlTextEncoder::*)()>(&System::Xml::XmlTextEncoder::get_AttributeValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlTextEncoder*), "get_AttributeValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlTextEncoder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::XmlTextEncoder::StartAttribute
// Il2CppName: StartAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlTextEncoder::*)(bool)>(&System::Xml::XmlTextEncoder::StartAttribute)> {
  static const MethodInfo* get() {
    static auto* cacheAttrValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlTextEncoder*), "StartAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cacheAttrValue});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlTextEncoder::EndAttribute
// Il2CppName: EndAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlTextEncoder::*)()>(&System::Xml::XmlTextEncoder::EndAttribute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlTextEncoder*), "EndAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlTextEncoder::WriteSurrogateChar
// Il2CppName: WriteSurrogateChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlTextEncoder::*)(::Il2CppChar, ::Il2CppChar)>(&System::Xml::XmlTextEncoder::WriteSurrogateChar)> {
  static const MethodInfo* get() {
    static auto* lowChar = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* highChar = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlTextEncoder*), "WriteSurrogateChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lowChar, highChar});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlTextEncoder::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlTextEncoder::*)(::ArrayW<::Il2CppChar>, int, int)>(&System::Xml::XmlTextEncoder::Write)> {
  static const MethodInfo* get() {
    static auto* array = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlTextEncoder*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, offset, count});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlTextEncoder::WriteSurrogateCharEntity
// Il2CppName: WriteSurrogateCharEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlTextEncoder::*)(::Il2CppChar, ::Il2CppChar)>(&System::Xml::XmlTextEncoder::WriteSurrogateCharEntity)> {
  static const MethodInfo* get() {
    static auto* lowChar = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* highChar = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlTextEncoder*), "WriteSurrogateCharEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lowChar, highChar});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlTextEncoder::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlTextEncoder::*)(::StringW)>(&System::Xml::XmlTextEncoder::Write)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlTextEncoder*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlTextEncoder::WriteRawWithSurrogateChecking
// Il2CppName: WriteRawWithSurrogateChecking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlTextEncoder::*)(::StringW)>(&System::Xml::XmlTextEncoder::WriteRawWithSurrogateChecking)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlTextEncoder*), "WriteRawWithSurrogateChecking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlTextEncoder::WriteRaw
// Il2CppName: WriteRaw
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlTextEncoder::*)(::ArrayW<::Il2CppChar>, int, int)>(&System::Xml::XmlTextEncoder::WriteRaw)> {
  static const MethodInfo* get() {
    static auto* array = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlTextEncoder*), "WriteRaw", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, offset, count});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlTextEncoder::WriteCharEntity
// Il2CppName: WriteCharEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlTextEncoder::*)(::Il2CppChar)>(&System::Xml::XmlTextEncoder::WriteCharEntity)> {
  static const MethodInfo* get() {
    static auto* ch = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlTextEncoder*), "WriteCharEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ch});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlTextEncoder::WriteEntityRef
// Il2CppName: WriteEntityRef
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlTextEncoder::*)(::StringW)>(&System::Xml::XmlTextEncoder::WriteEntityRef)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlTextEncoder*), "WriteEntityRef", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlTextEncoder::WriteStringFragment
// Il2CppName: WriteStringFragment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlTextEncoder::*)(::StringW, int, int, ::ArrayW<::Il2CppChar>)>(&System::Xml::XmlTextEncoder::WriteStringFragment)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* helperBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlTextEncoder*), "WriteStringFragment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, offset, count, helperBuffer});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlTextEncoder::WriteCharEntityImpl
// Il2CppName: WriteCharEntityImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlTextEncoder::*)(::Il2CppChar)>(&System::Xml::XmlTextEncoder::WriteCharEntityImpl)> {
  static const MethodInfo* get() {
    static auto* ch = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlTextEncoder*), "WriteCharEntityImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ch});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlTextEncoder::WriteCharEntityImpl
// Il2CppName: WriteCharEntityImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlTextEncoder::*)(::StringW)>(&System::Xml::XmlTextEncoder::WriteCharEntityImpl)> {
  static const MethodInfo* get() {
    static auto* strVal = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlTextEncoder*), "WriteCharEntityImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{strVal});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlTextEncoder::WriteEntityRefImpl
// Il2CppName: WriteEntityRefImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlTextEncoder::*)(::StringW)>(&System::Xml::XmlTextEncoder::WriteEntityRefImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlTextEncoder*), "WriteEntityRefImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
