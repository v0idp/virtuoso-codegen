// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlValidatingReaderImpl
  class XmlValidatingReaderImpl;
  // Forward declaring type: XmlNodeType
  struct XmlNodeType;
  // Forward declaring type: ReadState
  struct ReadState;
  // Forward declaring type: XmlNameTable
  class XmlNameTable;
}
// Completed forward declares
// Type namespace: System.Xml
namespace System::Xml {
  // Forward declaring type: XmlValidatingReader
  class XmlValidatingReader;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::XmlValidatingReader);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::XmlValidatingReader*, "System.Xml", "XmlValidatingReader");
// Type namespace: System.Xml
namespace System::Xml {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.XmlValidatingReader
  // [TokenAttribute] Offset: FFFFFFFF
  // [ObsoleteAttribute] Offset: 6A41B0
  class XmlValidatingReader : public ::System::Xml::XmlReader {
    public:
    public:
    // private System.Xml.XmlValidatingReaderImpl impl
    // Size: 0x8
    // Offset: 0x10
    ::System::Xml::XmlValidatingReaderImpl* impl;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlValidatingReaderImpl*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Xml::XmlValidatingReaderImpl*
    constexpr operator ::System::Xml::XmlValidatingReaderImpl*() const noexcept {
      return impl;
    }
    // Get instance field reference: private System.Xml.XmlValidatingReaderImpl impl
    [[deprecated]] ::System::Xml::XmlValidatingReaderImpl*& dyn_impl();
    // public System.Boolean get_Namespaces()
    // Offset: 0x1094D14
    bool get_Namespaces();
    // public override System.Xml.XmlNodeType get_NodeType()
    // Offset: 0x10949D8
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Xml.XmlNodeType XmlReader::get_NodeType()
    ::System::Xml::XmlNodeType get_NodeType();
    // public override System.String get_LocalName()
    // Offset: 0x10949F8
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::get_LocalName()
    ::StringW get_LocalName();
    // public override System.String get_NamespaceURI()
    // Offset: 0x1094A18
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::get_NamespaceURI()
    ::StringW get_NamespaceURI();
    // public override System.String get_Prefix()
    // Offset: 0x1094A38
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::get_Prefix()
    ::StringW get_Prefix();
    // public override System.String get_Value()
    // Offset: 0x1094A58
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::get_Value()
    ::StringW get_Value();
    // public override System.Int32 get_Depth()
    // Offset: 0x1094A78
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Int32 XmlReader::get_Depth()
    int get_Depth();
    // public override System.String get_BaseURI()
    // Offset: 0x1094A98
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::get_BaseURI()
    ::StringW get_BaseURI();
    // public override System.Boolean get_IsEmptyElement()
    // Offset: 0x1094ABC
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::get_IsEmptyElement()
    bool get_IsEmptyElement();
    // public override System.Int32 get_AttributeCount()
    // Offset: 0x1094AE0
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Int32 XmlReader::get_AttributeCount()
    int get_AttributeCount();
    // public override System.Boolean get_EOF()
    // Offset: 0x1094C48
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::get_EOF()
    bool get_EOF();
    // public override System.Xml.ReadState get_ReadState()
    // Offset: 0x1094C6C
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Xml.ReadState XmlReader::get_ReadState()
    ::System::Xml::ReadState get_ReadState();
    // public override System.Xml.XmlNameTable get_NameTable()
    // Offset: 0x1094C90
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Xml.XmlNameTable XmlReader::get_NameTable()
    ::System::Xml::XmlNameTable* get_NameTable();
    // public override System.String GetAttribute(System.String name)
    // Offset: 0x1094B04
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::GetAttribute(System.String name)
    ::StringW GetAttribute(::StringW name);
    // public override System.String GetAttribute(System.String localName, System.String namespaceURI)
    // Offset: 0x1094B28
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::GetAttribute(System.String localName, System.String namespaceURI)
    ::StringW GetAttribute(::StringW localName, ::StringW namespaceURI);
    // public override System.String GetAttribute(System.Int32 i)
    // Offset: 0x1094B4C
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::GetAttribute(System.Int32 i)
    ::StringW GetAttribute(int i);
    // public override System.Boolean MoveToAttribute(System.String name)
    // Offset: 0x1094B70
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::MoveToAttribute(System.String name)
    bool MoveToAttribute(::StringW name);
    // public override System.Boolean MoveToFirstAttribute()
    // Offset: 0x1094B94
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::MoveToFirstAttribute()
    bool MoveToFirstAttribute();
    // public override System.Boolean MoveToNextAttribute()
    // Offset: 0x1094BB8
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::MoveToNextAttribute()
    bool MoveToNextAttribute();
    // public override System.Boolean MoveToElement()
    // Offset: 0x1094BDC
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::MoveToElement()
    bool MoveToElement();
    // public override System.Boolean ReadAttributeValue()
    // Offset: 0x1094C00
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::ReadAttributeValue()
    bool ReadAttributeValue();
    // public override System.Boolean Read()
    // Offset: 0x1094C24
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Boolean XmlReader::Read()
    bool Read();
    // public override System.String LookupNamespace(System.String prefix)
    // Offset: 0x1094CB4
    // Implemented from: System.Xml.XmlReader
    // Base method: System.String XmlReader::LookupNamespace(System.String prefix)
    ::StringW LookupNamespace(::StringW prefix);
    // public override System.Void ResolveEntity()
    // Offset: 0x1094CF0
    // Implemented from: System.Xml.XmlReader
    // Base method: System.Void XmlReader::ResolveEntity()
    void ResolveEntity();
  }; // System.Xml.XmlValidatingReader
  #pragma pack(pop)
  static check_size<sizeof(XmlValidatingReader), 16 + sizeof(::System::Xml::XmlValidatingReaderImpl*)> __System_Xml_XmlValidatingReaderSizeCheck;
  static_assert(sizeof(XmlValidatingReader) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::get_Namespaces
// Il2CppName: get_Namespaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReader::*)()>(&System::Xml::XmlValidatingReader::get_Namespaces)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "get_Namespaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::get_NodeType
// Il2CppName: get_NodeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XmlNodeType (System::Xml::XmlValidatingReader::*)()>(&System::Xml::XmlValidatingReader::get_NodeType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "get_NodeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::get_LocalName
// Il2CppName: get_LocalName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReader::*)()>(&System::Xml::XmlValidatingReader::get_LocalName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "get_LocalName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::get_NamespaceURI
// Il2CppName: get_NamespaceURI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReader::*)()>(&System::Xml::XmlValidatingReader::get_NamespaceURI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "get_NamespaceURI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::get_Prefix
// Il2CppName: get_Prefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReader::*)()>(&System::Xml::XmlValidatingReader::get_Prefix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "get_Prefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReader::*)()>(&System::Xml::XmlValidatingReader::get_Value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::get_Depth
// Il2CppName: get_Depth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::XmlValidatingReader::*)()>(&System::Xml::XmlValidatingReader::get_Depth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "get_Depth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::get_BaseURI
// Il2CppName: get_BaseURI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReader::*)()>(&System::Xml::XmlValidatingReader::get_BaseURI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "get_BaseURI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::get_IsEmptyElement
// Il2CppName: get_IsEmptyElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReader::*)()>(&System::Xml::XmlValidatingReader::get_IsEmptyElement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "get_IsEmptyElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::get_AttributeCount
// Il2CppName: get_AttributeCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::XmlValidatingReader::*)()>(&System::Xml::XmlValidatingReader::get_AttributeCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "get_AttributeCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::get_EOF
// Il2CppName: get_EOF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReader::*)()>(&System::Xml::XmlValidatingReader::get_EOF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "get_EOF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::get_ReadState
// Il2CppName: get_ReadState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::ReadState (System::Xml::XmlValidatingReader::*)()>(&System::Xml::XmlValidatingReader::get_ReadState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "get_ReadState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::get_NameTable
// Il2CppName: get_NameTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XmlNameTable* (System::Xml::XmlValidatingReader::*)()>(&System::Xml::XmlValidatingReader::get_NameTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "get_NameTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::GetAttribute
// Il2CppName: GetAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReader::*)(::StringW)>(&System::Xml::XmlValidatingReader::GetAttribute)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "GetAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::GetAttribute
// Il2CppName: GetAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReader::*)(::StringW, ::StringW)>(&System::Xml::XmlValidatingReader::GetAttribute)> {
  static const MethodInfo* get() {
    static auto* localName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* namespaceURI = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "GetAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{localName, namespaceURI});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::GetAttribute
// Il2CppName: GetAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReader::*)(int)>(&System::Xml::XmlValidatingReader::GetAttribute)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "GetAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::MoveToAttribute
// Il2CppName: MoveToAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReader::*)(::StringW)>(&System::Xml::XmlValidatingReader::MoveToAttribute)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "MoveToAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::MoveToFirstAttribute
// Il2CppName: MoveToFirstAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReader::*)()>(&System::Xml::XmlValidatingReader::MoveToFirstAttribute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "MoveToFirstAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::MoveToNextAttribute
// Il2CppName: MoveToNextAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReader::*)()>(&System::Xml::XmlValidatingReader::MoveToNextAttribute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "MoveToNextAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::MoveToElement
// Il2CppName: MoveToElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReader::*)()>(&System::Xml::XmlValidatingReader::MoveToElement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "MoveToElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::ReadAttributeValue
// Il2CppName: ReadAttributeValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReader::*)()>(&System::Xml::XmlValidatingReader::ReadAttributeValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "ReadAttributeValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::XmlValidatingReader::*)()>(&System::Xml::XmlValidatingReader::Read)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::LookupNamespace
// Il2CppName: LookupNamespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::XmlValidatingReader::*)(::StringW)>(&System::Xml::XmlValidatingReader::LookupNamespace)> {
  static const MethodInfo* get() {
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "LookupNamespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::XmlValidatingReader::ResolveEntity
// Il2CppName: ResolveEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::XmlValidatingReader::*)()>(&System::Xml::XmlValidatingReader::ResolveEntity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlValidatingReader*), "ResolveEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
