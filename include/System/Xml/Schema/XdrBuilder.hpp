// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Schema.SchemaBuilder
#include "System/Xml/Schema/SchemaBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Schema
namespace System::Xml::Schema {
  // Forward declaring type: SchemaInfo
  class SchemaInfo;
  // Forward declaring type: ParticleContentValidator
  class ParticleContentValidator;
  // Forward declaring type: SchemaNames
  class SchemaNames;
  // Forward declaring type: ValidationEventHandler
  class ValidationEventHandler;
  // Forward declaring type: SchemaAttDef
  class SchemaAttDef;
  // Forward declaring type: XmlSchemaDatatype
  class XmlSchemaDatatype;
  // Forward declaring type: XmlSeverityType
  struct XmlSeverityType;
  // Forward declaring type: XmlSchemaException
  class XmlSchemaException;
}
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlReader
  class XmlReader;
  // Forward declaring type: PositionInfo
  class PositionInfo;
  // Forward declaring type: HWStack
  class HWStack;
  // Forward declaring type: XmlNameTable
  class XmlNameTable;
  // Forward declaring type: XmlNamespaceManager
  class XmlNamespaceManager;
  // Forward declaring type: XmlResolver
  class XmlResolver;
  // Forward declaring type: XmlQualifiedName
  class XmlQualifiedName;
  // Forward declaring type: XmlNode
  class XmlNode;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Completed forward declares
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Forward declaring type: XdrBuilder
  class XdrBuilder;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Schema::XdrBuilder);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::XdrBuilder*, "System.Xml.Schema", "XdrBuilder");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0xC8
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Schema.XdrBuilder
  // [TokenAttribute] Offset: FFFFFFFF
  class XdrBuilder : public ::System::Xml::Schema::SchemaBuilder {
    public:
    // Nested type: ::System::Xml::Schema::XdrBuilder::DeclBaseInfo
    class DeclBaseInfo;
    // Nested type: ::System::Xml::Schema::XdrBuilder::GroupContent
    class GroupContent;
    // Nested type: ::System::Xml::Schema::XdrBuilder::ElementContent
    class ElementContent;
    // Nested type: ::System::Xml::Schema::XdrBuilder::AttributeContent
    class AttributeContent;
    // Nested type: ::System::Xml::Schema::XdrBuilder::XdrBuildFunction
    class XdrBuildFunction;
    // Nested type: ::System::Xml::Schema::XdrBuilder::XdrInitFunction
    class XdrInitFunction;
    // Nested type: ::System::Xml::Schema::XdrBuilder::XdrBeginChildFunction
    class XdrBeginChildFunction;
    // Nested type: ::System::Xml::Schema::XdrBuilder::XdrEndChildFunction
    class XdrEndChildFunction;
    // Nested type: ::System::Xml::Schema::XdrBuilder::XdrAttributeEntry
    class XdrAttributeEntry;
    // Nested type: ::System::Xml::Schema::XdrBuilder::XdrEntry
    class XdrEntry;
    public:
    // private System.Xml.Schema.SchemaInfo _SchemaInfo
    // Size: 0x8
    // Offset: 0x10
    ::System::Xml::Schema::SchemaInfo* SchemaInfo;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::SchemaInfo*) == 0x8);
    // private System.String _TargetNamespace
    // Size: 0x8
    // Offset: 0x18
    ::StringW TargetNamespace;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Xml.XmlReader _reader
    // Size: 0x8
    // Offset: 0x20
    ::System::Xml::XmlReader* reader;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlReader*) == 0x8);
    // private System.Xml.PositionInfo positionInfo
    // Size: 0x8
    // Offset: 0x28
    ::System::Xml::PositionInfo* positionInfo;
    // Field size check
    static_assert(sizeof(::System::Xml::PositionInfo*) == 0x8);
    // private System.Xml.Schema.ParticleContentValidator _contentValidator
    // Size: 0x8
    // Offset: 0x30
    ::System::Xml::Schema::ParticleContentValidator* contentValidator;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::ParticleContentValidator*) == 0x8);
    // private System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrEntry _CurState
    // Size: 0x8
    // Offset: 0x38
    ::System::Xml::Schema::XdrBuilder::XdrEntry* CurState;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XdrBuilder::XdrEntry*) == 0x8);
    // private System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrEntry _NextState
    // Size: 0x8
    // Offset: 0x40
    ::System::Xml::Schema::XdrBuilder::XdrEntry* NextState;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XdrBuilder::XdrEntry*) == 0x8);
    // private System.Xml.HWStack _StateHistory
    // Size: 0x8
    // Offset: 0x48
    ::System::Xml::HWStack* StateHistory;
    // Field size check
    static_assert(sizeof(::System::Xml::HWStack*) == 0x8);
    // private System.Xml.HWStack _GroupStack
    // Size: 0x8
    // Offset: 0x50
    ::System::Xml::HWStack* GroupStack;
    // Field size check
    static_assert(sizeof(::System::Xml::HWStack*) == 0x8);
    // private System.String _XdrName
    // Size: 0x8
    // Offset: 0x58
    ::StringW XdrName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String _XdrPrefix
    // Size: 0x8
    // Offset: 0x60
    ::StringW XdrPrefix;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Xml.Schema.XdrBuilder/System.Xml.Schema.ElementContent _ElementDef
    // Size: 0x8
    // Offset: 0x68
    ::System::Xml::Schema::XdrBuilder::ElementContent* ElementDef;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XdrBuilder::ElementContent*) == 0x8);
    // private System.Xml.Schema.XdrBuilder/System.Xml.Schema.GroupContent _GroupDef
    // Size: 0x8
    // Offset: 0x70
    ::System::Xml::Schema::XdrBuilder::GroupContent* GroupDef;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XdrBuilder::GroupContent*) == 0x8);
    // private System.Xml.Schema.XdrBuilder/System.Xml.Schema.AttributeContent _AttributeDef
    // Size: 0x8
    // Offset: 0x78
    ::System::Xml::Schema::XdrBuilder::AttributeContent* AttributeDef;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XdrBuilder::AttributeContent*) == 0x8);
    // private System.Xml.Schema.XdrBuilder/System.Xml.Schema.DeclBaseInfo _UndefinedAttributeTypes
    // Size: 0x8
    // Offset: 0x80
    ::System::Xml::Schema::XdrBuilder::DeclBaseInfo* UndefinedAttributeTypes;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XdrBuilder::DeclBaseInfo*) == 0x8);
    // private System.Xml.Schema.XdrBuilder/System.Xml.Schema.DeclBaseInfo _BaseDecl
    // Size: 0x8
    // Offset: 0x88
    ::System::Xml::Schema::XdrBuilder::DeclBaseInfo* BaseDecl;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XdrBuilder::DeclBaseInfo*) == 0x8);
    // private System.Xml.XmlNameTable _NameTable
    // Size: 0x8
    // Offset: 0x90
    ::System::Xml::XmlNameTable* NameTable;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlNameTable*) == 0x8);
    // private System.Xml.Schema.SchemaNames _SchemaNames
    // Size: 0x8
    // Offset: 0x98
    ::System::Xml::Schema::SchemaNames* SchemaNames;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::SchemaNames*) == 0x8);
    // private System.Xml.XmlNamespaceManager _CurNsMgr
    // Size: 0x8
    // Offset: 0xA0
    ::System::Xml::XmlNamespaceManager* CurNsMgr;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlNamespaceManager*) == 0x8);
    // private System.String _Text
    // Size: 0x8
    // Offset: 0xA8
    ::StringW Text;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Xml.Schema.ValidationEventHandler validationEventHandler
    // Size: 0x8
    // Offset: 0xB0
    ::System::Xml::Schema::ValidationEventHandler* validationEventHandler;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::ValidationEventHandler*) == 0x8);
    // private System.Collections.Hashtable _UndeclaredElements
    // Size: 0x8
    // Offset: 0xB8
    ::System::Collections::Hashtable* UndeclaredElements;
    // Field size check
    static_assert(sizeof(::System::Collections::Hashtable*) == 0x8);
    // private System.Xml.XmlResolver xmlResolver
    // Size: 0x8
    // Offset: 0xC0
    ::System::Xml::XmlResolver* xmlResolver;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlResolver*) == 0x8);
    public:
    // Get static field: static private readonly System.Int32[] S_XDR_Root_Element
    static ::ArrayW<int> _get_S_XDR_Root_Element();
    // Set static field: static private readonly System.Int32[] S_XDR_Root_Element
    static void _set_S_XDR_Root_Element(::ArrayW<int> value);
    // Get static field: static private readonly System.Int32[] S_XDR_Root_SubElements
    static ::ArrayW<int> _get_S_XDR_Root_SubElements();
    // Set static field: static private readonly System.Int32[] S_XDR_Root_SubElements
    static void _set_S_XDR_Root_SubElements(::ArrayW<int> value);
    // Get static field: static private readonly System.Int32[] S_XDR_ElementType_SubElements
    static ::ArrayW<int> _get_S_XDR_ElementType_SubElements();
    // Set static field: static private readonly System.Int32[] S_XDR_ElementType_SubElements
    static void _set_S_XDR_ElementType_SubElements(::ArrayW<int> value);
    // Get static field: static private readonly System.Int32[] S_XDR_AttributeType_SubElements
    static ::ArrayW<int> _get_S_XDR_AttributeType_SubElements();
    // Set static field: static private readonly System.Int32[] S_XDR_AttributeType_SubElements
    static void _set_S_XDR_AttributeType_SubElements(::ArrayW<int> value);
    // Get static field: static private readonly System.Int32[] S_XDR_Group_SubElements
    static ::ArrayW<int> _get_S_XDR_Group_SubElements();
    // Set static field: static private readonly System.Int32[] S_XDR_Group_SubElements
    static void _set_S_XDR_Group_SubElements(::ArrayW<int> value);
    // Get static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_Root_Attributes
    static ::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> _get_S_XDR_Root_Attributes();
    // Set static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_Root_Attributes
    static void _set_S_XDR_Root_Attributes(::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> value);
    // Get static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_ElementType_Attributes
    static ::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> _get_S_XDR_ElementType_Attributes();
    // Set static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_ElementType_Attributes
    static void _set_S_XDR_ElementType_Attributes(::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> value);
    // Get static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_AttributeType_Attributes
    static ::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> _get_S_XDR_AttributeType_Attributes();
    // Set static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_AttributeType_Attributes
    static void _set_S_XDR_AttributeType_Attributes(::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> value);
    // Get static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_Element_Attributes
    static ::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> _get_S_XDR_Element_Attributes();
    // Set static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_Element_Attributes
    static void _set_S_XDR_Element_Attributes(::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> value);
    // Get static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_Attribute_Attributes
    static ::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> _get_S_XDR_Attribute_Attributes();
    // Set static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_Attribute_Attributes
    static void _set_S_XDR_Attribute_Attributes(::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> value);
    // Get static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_Group_Attributes
    static ::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> _get_S_XDR_Group_Attributes();
    // Set static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_Group_Attributes
    static void _set_S_XDR_Group_Attributes(::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> value);
    // Get static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_ElementDataType_Attributes
    static ::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> _get_S_XDR_ElementDataType_Attributes();
    // Set static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_ElementDataType_Attributes
    static void _set_S_XDR_ElementDataType_Attributes(::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> value);
    // Get static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_AttributeDataType_Attributes
    static ::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> _get_S_XDR_AttributeDataType_Attributes();
    // Set static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_AttributeDataType_Attributes
    static void _set_S_XDR_AttributeDataType_Attributes(::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> value);
    // Get static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrEntry[] S_SchemaEntries
    static ::ArrayW<::System::Xml::Schema::XdrBuilder::XdrEntry*> _get_S_SchemaEntries();
    // Set static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrEntry[] S_SchemaEntries
    static void _set_S_SchemaEntries(::ArrayW<::System::Xml::Schema::XdrBuilder::XdrEntry*> value);
    // Get instance field reference: private System.Xml.Schema.SchemaInfo _SchemaInfo
    [[deprecated]] ::System::Xml::Schema::SchemaInfo*& dyn__SchemaInfo();
    // Get instance field reference: private System.String _TargetNamespace
    [[deprecated]] ::StringW& dyn__TargetNamespace();
    // Get instance field reference: private System.Xml.XmlReader _reader
    [[deprecated]] ::System::Xml::XmlReader*& dyn__reader();
    // Get instance field reference: private System.Xml.PositionInfo positionInfo
    [[deprecated]] ::System::Xml::PositionInfo*& dyn_positionInfo();
    // Get instance field reference: private System.Xml.Schema.ParticleContentValidator _contentValidator
    [[deprecated]] ::System::Xml::Schema::ParticleContentValidator*& dyn__contentValidator();
    // Get instance field reference: private System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrEntry _CurState
    [[deprecated]] ::System::Xml::Schema::XdrBuilder::XdrEntry*& dyn__CurState();
    // Get instance field reference: private System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrEntry _NextState
    [[deprecated]] ::System::Xml::Schema::XdrBuilder::XdrEntry*& dyn__NextState();
    // Get instance field reference: private System.Xml.HWStack _StateHistory
    [[deprecated]] ::System::Xml::HWStack*& dyn__StateHistory();
    // Get instance field reference: private System.Xml.HWStack _GroupStack
    [[deprecated]] ::System::Xml::HWStack*& dyn__GroupStack();
    // Get instance field reference: private System.String _XdrName
    [[deprecated]] ::StringW& dyn__XdrName();
    // Get instance field reference: private System.String _XdrPrefix
    [[deprecated]] ::StringW& dyn__XdrPrefix();
    // Get instance field reference: private System.Xml.Schema.XdrBuilder/System.Xml.Schema.ElementContent _ElementDef
    [[deprecated]] ::System::Xml::Schema::XdrBuilder::ElementContent*& dyn__ElementDef();
    // Get instance field reference: private System.Xml.Schema.XdrBuilder/System.Xml.Schema.GroupContent _GroupDef
    [[deprecated]] ::System::Xml::Schema::XdrBuilder::GroupContent*& dyn__GroupDef();
    // Get instance field reference: private System.Xml.Schema.XdrBuilder/System.Xml.Schema.AttributeContent _AttributeDef
    [[deprecated]] ::System::Xml::Schema::XdrBuilder::AttributeContent*& dyn__AttributeDef();
    // Get instance field reference: private System.Xml.Schema.XdrBuilder/System.Xml.Schema.DeclBaseInfo _UndefinedAttributeTypes
    [[deprecated]] ::System::Xml::Schema::XdrBuilder::DeclBaseInfo*& dyn__UndefinedAttributeTypes();
    // Get instance field reference: private System.Xml.Schema.XdrBuilder/System.Xml.Schema.DeclBaseInfo _BaseDecl
    [[deprecated]] ::System::Xml::Schema::XdrBuilder::DeclBaseInfo*& dyn__BaseDecl();
    // Get instance field reference: private System.Xml.XmlNameTable _NameTable
    [[deprecated]] ::System::Xml::XmlNameTable*& dyn__NameTable();
    // Get instance field reference: private System.Xml.Schema.SchemaNames _SchemaNames
    [[deprecated]] ::System::Xml::Schema::SchemaNames*& dyn__SchemaNames();
    // Get instance field reference: private System.Xml.XmlNamespaceManager _CurNsMgr
    [[deprecated]] ::System::Xml::XmlNamespaceManager*& dyn__CurNsMgr();
    // Get instance field reference: private System.String _Text
    [[deprecated]] ::StringW& dyn__Text();
    // Get instance field reference: private System.Xml.Schema.ValidationEventHandler validationEventHandler
    [[deprecated]] ::System::Xml::Schema::ValidationEventHandler*& dyn_validationEventHandler();
    // Get instance field reference: private System.Collections.Hashtable _UndeclaredElements
    [[deprecated]] ::System::Collections::Hashtable*& dyn__UndeclaredElements();
    // Get instance field reference: private System.Xml.XmlResolver xmlResolver
    [[deprecated]] ::System::Xml::XmlResolver*& dyn_xmlResolver();
    // System.Void set_XmlResolver(System.Xml.XmlResolver value)
    // Offset: 0x11A6160
    void set_XmlResolver(::System::Xml::XmlResolver* value);
    // System.Void .ctor(System.Xml.XmlReader reader, System.Xml.XmlNamespaceManager curmgr, System.Xml.Schema.SchemaInfo sinfo, System.String targetNamspace, System.Xml.XmlNameTable nameTable, System.Xml.Schema.SchemaNames schemaNames, System.Xml.Schema.ValidationEventHandler eventhandler)
    // Offset: 0x11A4F90
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XdrBuilder* New_ctor(::System::Xml::XmlReader* reader, ::System::Xml::XmlNamespaceManager* curmgr, ::System::Xml::Schema::SchemaInfo* sinfo, ::StringW targetNamspace, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::Schema::SchemaNames* schemaNames, ::System::Xml::Schema::ValidationEventHandler* eventhandler) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XdrBuilder*, creationType>(reader, curmgr, sinfo, targetNamspace, nameTable, schemaNames, eventhandler)));
    }
    // static private System.Void .cctor()
    // Offset: 0x11AA724
    static void _cctor();
    // private System.Boolean LoadSchema(System.String uri)
    // Offset: 0x11A5B00
    bool LoadSchema(::StringW uri);
    // static System.Boolean IsXdrSchema(System.String uri)
    // Offset: 0x11A5A44
    static bool IsXdrSchema(::StringW uri);
    // private System.Void Push()
    // Offset: 0x11A5480
    void Push();
    // private System.Void Pop()
    // Offset: 0x11A63B4
    void Pop();
    // private System.Void PushGroupInfo()
    // Offset: 0x11A6428
    void PushGroupInfo();
    // private System.Void PopGroupInfo()
    // Offset: 0x11A6488
    void PopGroupInfo();
    // static private System.Void XDR_InitRoot(System.Xml.Schema.XdrBuilder builder, System.Object obj)
    // Offset: 0x11A64FC
    static void XDR_InitRoot(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj);
    // static private System.Void XDR_BuildRoot_Name(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A6548
    static void XDR_BuildRoot_Name(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildRoot_ID(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A65C4
    static void XDR_BuildRoot_ID(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BeginRoot(System.Xml.Schema.XdrBuilder builder)
    // Offset: 0x11A65C8
    static void XDR_BeginRoot(::System::Xml::Schema::XdrBuilder* builder);
    // static private System.Void XDR_EndRoot(System.Xml.Schema.XdrBuilder builder)
    // Offset: 0x11A66A8
    static void XDR_EndRoot(::System::Xml::Schema::XdrBuilder* builder);
    // static private System.Void XDR_InitElementType(System.Xml.Schema.XdrBuilder builder, System.Object obj)
    // Offset: 0x11A6BE8
    static void XDR_InitElementType(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj);
    // static private System.Void XDR_BuildElementType_Name(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A6D40
    static void XDR_BuildElementType_Name(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildElementType_Content(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A6F08
    static void XDR_BuildElementType_Content(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildElementType_Model(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A714C
    static void XDR_BuildElementType_Model(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildElementType_Order(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A72E8
    static void XDR_BuildElementType_Order(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildElementType_DtType(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A74D0
    static void XDR_BuildElementType_DtType(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildElementType_DtValues(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A7648
    static void XDR_BuildElementType_DtValues(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildElementType_DtMaxLength(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A7730
    static void XDR_BuildElementType_DtMaxLength(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildElementType_DtMinLength(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A78FC
    static void XDR_BuildElementType_DtMinLength(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BeginElementType(System.Xml.Schema.XdrBuilder builder)
    // Offset: 0x11A7AC8
    static void XDR_BeginElementType(::System::Xml::Schema::XdrBuilder* builder);
    // static private System.Void XDR_EndElementType(System.Xml.Schema.XdrBuilder builder)
    // Offset: 0x11A7DB8
    static void XDR_EndElementType(::System::Xml::Schema::XdrBuilder* builder);
    // static private System.Void XDR_InitAttributeType(System.Xml.Schema.XdrBuilder builder, System.Object obj)
    // Offset: 0x11A81B0
    static void XDR_InitAttributeType(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj);
    // static private System.Void XDR_BuildAttributeType_Name(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A82A0
    static void XDR_BuildAttributeType_Name(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildAttributeType_Required(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A84E4
    static void XDR_BuildAttributeType_Required(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildAttributeType_Default(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A867C
    static void XDR_BuildAttributeType_Default(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildAttributeType_DtType(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A86A0
    static void XDR_BuildAttributeType_DtType(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildAttributeType_DtValues(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A88B8
    static void XDR_BuildAttributeType_DtValues(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildAttributeType_DtMaxLength(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A89A0
    static void XDR_BuildAttributeType_DtMaxLength(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildAttributeType_DtMinLength(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A8A28
    static void XDR_BuildAttributeType_DtMinLength(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BeginAttributeType(System.Xml.Schema.XdrBuilder builder)
    // Offset: 0x11A8AB0
    static void XDR_BeginAttributeType(::System::Xml::Schema::XdrBuilder* builder);
    // static private System.Void XDR_EndAttributeType(System.Xml.Schema.XdrBuilder builder)
    // Offset: 0x11A8B2C
    static void XDR_EndAttributeType(::System::Xml::Schema::XdrBuilder* builder);
    // static private System.Void XDR_InitElement(System.Xml.Schema.XdrBuilder builder, System.Object obj)
    // Offset: 0x11A8E84
    static void XDR_InitElement(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj);
    // static private System.Void XDR_BuildElement_Type(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A8F30
    static void XDR_BuildElement_Type(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildElement_MinOccurs(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A9184
    static void XDR_BuildElement_MinOccurs(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildElement_MaxOccurs(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A9310
    static void XDR_BuildElement_MaxOccurs(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_EndElement(System.Xml.Schema.XdrBuilder builder)
    // Offset: 0x11A94CC
    static void XDR_EndElement(::System::Xml::Schema::XdrBuilder* builder);
    // static private System.Void XDR_InitAttribute(System.Xml.Schema.XdrBuilder builder, System.Object obj)
    // Offset: 0x11A95B8
    static void XDR_InitAttribute(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj);
    // static private System.Void XDR_BuildAttribute_Type(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A962C
    static void XDR_BuildAttribute_Type(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildAttribute_Required(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A96D8
    static void XDR_BuildAttribute_Required(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildAttribute_Default(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A9768
    static void XDR_BuildAttribute_Default(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BeginAttribute(System.Xml.Schema.XdrBuilder builder)
    // Offset: 0x11A978C
    static void XDR_BeginAttribute(::System::Xml::Schema::XdrBuilder* builder);
    // static private System.Void XDR_EndAttribute(System.Xml.Schema.XdrBuilder builder)
    // Offset: 0x11A9A5C
    static void XDR_EndAttribute(::System::Xml::Schema::XdrBuilder* builder);
    // static private System.Void XDR_InitGroup(System.Xml.Schema.XdrBuilder builder, System.Object obj)
    // Offset: 0x11A9A80
    static void XDR_InitGroup(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj);
    // static private System.Void XDR_BuildGroup_Order(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A9B5C
    static void XDR_BuildGroup_Order(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildGroup_MinOccurs(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A9C58
    static void XDR_BuildGroup_MinOccurs(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_BuildGroup_MaxOccurs(System.Xml.Schema.XdrBuilder builder, System.Object obj, System.String prefix)
    // Offset: 0x11A9CF0
    static void XDR_BuildGroup_MaxOccurs(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix);
    // static private System.Void XDR_EndGroup(System.Xml.Schema.XdrBuilder builder)
    // Offset: 0x11A9D88
    static void XDR_EndGroup(::System::Xml::Schema::XdrBuilder* builder);
    // static private System.Void XDR_InitElementDtType(System.Xml.Schema.XdrBuilder builder, System.Object obj)
    // Offset: 0x11A9EC4
    static void XDR_InitElementDtType(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj);
    // static private System.Void XDR_EndElementDtType(System.Xml.Schema.XdrBuilder builder)
    // Offset: 0x11A9F64
    static void XDR_EndElementDtType(::System::Xml::Schema::XdrBuilder* builder);
    // static private System.Void XDR_InitAttributeDtType(System.Xml.Schema.XdrBuilder builder, System.Object obj)
    // Offset: 0x11AA040
    static void XDR_InitAttributeDtType(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj);
    // static private System.Void XDR_EndAttributeDtType(System.Xml.Schema.XdrBuilder builder)
    // Offset: 0x11AA0B0
    static void XDR_EndAttributeDtType(::System::Xml::Schema::XdrBuilder* builder);
    // private System.Boolean GetNextState(System.Xml.XmlQualifiedName qname)
    // Offset: 0x11A52C8
    bool GetNextState(::System::Xml::XmlQualifiedName* qname);
    // private System.Boolean IsSkipableElement(System.Xml.XmlQualifiedName qname)
    // Offset: 0x11A54D4
    bool IsSkipableElement(::System::Xml::XmlQualifiedName* qname);
    // private System.Boolean IsSkipableAttribute(System.Xml.XmlQualifiedName qname)
    // Offset: 0x11A601C
    bool IsSkipableAttribute(::System::Xml::XmlQualifiedName* qname);
    // private System.Int32 GetOrder(System.Xml.XmlQualifiedName qname)
    // Offset: 0x11A7398
    int GetOrder(::System::Xml::XmlQualifiedName* qname);
    // private System.Void AddOrder()
    // Offset: 0x11A90C4
    void AddOrder();
    // static private System.Boolean IsYes(System.Object obj, System.Xml.Schema.XdrBuilder builder)
    // Offset: 0x11A8570
    static bool IsYes(::Il2CppObject* obj, ::System::Xml::Schema::XdrBuilder* builder);
    // static private System.UInt32 ParseMinOccurs(System.Object obj, System.Xml.Schema.XdrBuilder builder)
    // Offset: 0x11A920C
    static uint ParseMinOccurs(::Il2CppObject* obj, ::System::Xml::Schema::XdrBuilder* builder);
    // static private System.UInt32 ParseMaxOccurs(System.Object obj, System.Xml.Schema.XdrBuilder builder)
    // Offset: 0x11A9398
    static uint ParseMaxOccurs(::Il2CppObject* obj, ::System::Xml::Schema::XdrBuilder* builder);
    // static private System.Void HandleMinMax(System.Xml.Schema.ParticleContentValidator pContent, System.UInt32 cMin, System.UInt32 cMax)
    // Offset: 0x11A9588
    static void HandleMinMax(::System::Xml::Schema::ParticleContentValidator* pContent, uint cMin, uint cMax);
    // static private System.Void ParseDtMaxLength(ref System.UInt32 cVal, System.Object obj, System.Xml.Schema.XdrBuilder builder)
    // Offset: 0x11A77B8
    static void ParseDtMaxLength(ByRef<uint> cVal, ::Il2CppObject* obj, ::System::Xml::Schema::XdrBuilder* builder);
    // static private System.Void ParseDtMinLength(ref System.UInt32 cVal, System.Object obj, System.Xml.Schema.XdrBuilder builder)
    // Offset: 0x11A7984
    static void ParseDtMinLength(ByRef<uint> cVal, ::Il2CppObject* obj, ::System::Xml::Schema::XdrBuilder* builder);
    // static private System.Void CompareMinMaxLength(System.UInt32 cMin, System.UInt32 cMax, System.Xml.Schema.XdrBuilder builder)
    // Offset: 0x11A8124
    static void CompareMinMaxLength(uint cMin, uint cMax, ::System::Xml::Schema::XdrBuilder* builder);
    // static private System.Boolean ParseInteger(System.String str, ref System.UInt32 n)
    // Offset: 0x11AA194
    static bool ParseInteger(::StringW str, ByRef<uint> n);
    // private System.Void XDR_CheckAttributeDefault(System.Xml.Schema.XdrBuilder/System.Xml.Schema.DeclBaseInfo decl, System.Xml.Schema.SchemaAttDef pAttdef)
    // Offset: 0x11A6B40
    void XDR_CheckAttributeDefault(::System::Xml::Schema::XdrBuilder::DeclBaseInfo* decl, ::System::Xml::Schema::SchemaAttDef* pAttdef);
    // private System.Void SetAttributePresence(System.Xml.Schema.SchemaAttDef pAttdef, System.Boolean fRequired)
    // Offset: 0x11A8E34
    void SetAttributePresence(::System::Xml::Schema::SchemaAttDef* pAttdef, bool fRequired);
    // private System.Int32 GetContent(System.Xml.XmlQualifiedName qname)
    // Offset: 0x11A6FB0
    int GetContent(::System::Xml::XmlQualifiedName* qname);
    // private System.Boolean GetModel(System.Xml.XmlQualifiedName qname)
    // Offset: 0x11A71F8
    bool GetModel(::System::Xml::XmlQualifiedName* qname);
    // private System.Xml.Schema.XmlSchemaDatatype CheckDatatype(System.String str)
    // Offset: 0x11A8764
    ::System::Xml::Schema::XmlSchemaDatatype* CheckDatatype(::StringW str);
    // private System.Void CheckDefaultAttValue(System.Xml.Schema.SchemaAttDef attDef)
    // Offset: 0x11A8D40
    void CheckDefaultAttValue(::System::Xml::Schema::SchemaAttDef* attDef);
    // private System.Boolean IsGlobal(System.Int32 flags)
    // Offset: 0x11A5A38
    bool IsGlobal(int flags);
    // private System.Void SendValidationEvent(System.String code, System.String[] args, System.Xml.Schema.XmlSeverityType severity)
    // Offset: 0x11A6168
    void SendValidationEvent(::StringW code, ::ArrayW<::StringW> args, ::System::Xml::Schema::XmlSeverityType severity);
    // private System.Void SendValidationEvent(System.String code)
    // Offset: 0x11A75E4
    void SendValidationEvent(::StringW code);
    // private System.Void SendValidationEvent(System.String code, System.String msg)
    // Offset: 0x11A55A0
    void SendValidationEvent(::StringW code, ::StringW msg);
    // private System.Void SendValidationEvent(System.Xml.Schema.XmlSchemaException e, System.Xml.Schema.XmlSeverityType severity)
    // Offset: 0x11AA64C
    void SendValidationEvent(::System::Xml::Schema::XmlSchemaException* e, ::System::Xml::Schema::XmlSeverityType severity);
    // override System.Boolean ProcessElement(System.String prefix, System.String name, System.String ns)
    // Offset: 0x11A5190
    // Implemented from: System.Xml.Schema.SchemaBuilder
    // Base method: System.Boolean SchemaBuilder::ProcessElement(System.String prefix, System.String name, System.String ns)
    bool ProcessElement(::StringW prefix, ::StringW name, ::StringW ns);
    // override System.Void ProcessAttribute(System.String prefix, System.String name, System.String ns, System.String value)
    // Offset: 0x11A5694
    // Implemented from: System.Xml.Schema.SchemaBuilder
    // Base method: System.Void SchemaBuilder::ProcessAttribute(System.String prefix, System.String name, System.String ns, System.String value)
    void ProcessAttribute(::StringW prefix, ::StringW name, ::StringW ns, ::StringW value);
    // override System.Boolean IsContentParsed()
    // Offset: 0x11A6260
    // Implemented from: System.Xml.Schema.SchemaBuilder
    // Base method: System.Boolean SchemaBuilder::IsContentParsed()
    bool IsContentParsed();
    // override System.Void ProcessMarkup(System.Xml.XmlNode[] markup)
    // Offset: 0x11A6268
    // Implemented from: System.Xml.Schema.SchemaBuilder
    // Base method: System.Void SchemaBuilder::ProcessMarkup(System.Xml.XmlNode[] markup)
    void ProcessMarkup(::ArrayW<::System::Xml::XmlNode*> markup);
    // override System.Void ProcessCData(System.String value)
    // Offset: 0x11A62C4
    // Implemented from: System.Xml.Schema.SchemaBuilder
    // Base method: System.Void SchemaBuilder::ProcessCData(System.String value)
    void ProcessCData(::StringW value);
    // override System.Void StartChildren()
    // Offset: 0x11A6348
    // Implemented from: System.Xml.Schema.SchemaBuilder
    // Base method: System.Void SchemaBuilder::StartChildren()
    void StartChildren();
    // override System.Void EndChildren()
    // Offset: 0x11A6374
    // Implemented from: System.Xml.Schema.SchemaBuilder
    // Base method: System.Void SchemaBuilder::EndChildren()
    void EndChildren();
  }; // System.Xml.Schema.XdrBuilder
  #pragma pack(pop)
  static check_size<sizeof(XdrBuilder), 192 + sizeof(::System::Xml::XmlResolver*)> __System_Xml_Schema_XdrBuilderSizeCheck;
  static_assert(sizeof(XdrBuilder) == 0xC8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::set_XmlResolver
// Il2CppName: set_XmlResolver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XdrBuilder::*)(::System::Xml::XmlResolver*)>(&System::Xml::Schema::XdrBuilder::set_XmlResolver)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlResolver")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "set_XmlResolver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Xml::Schema::XdrBuilder::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::LoadSchema
// Il2CppName: LoadSchema
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Schema::XdrBuilder::*)(::StringW)>(&System::Xml::Schema::XdrBuilder::LoadSchema)> {
  static const MethodInfo* get() {
    static auto* uri = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "LoadSchema", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uri});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::IsXdrSchema
// Il2CppName: IsXdrSchema
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&System::Xml::Schema::XdrBuilder::IsXdrSchema)> {
  static const MethodInfo* get() {
    static auto* uri = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "IsXdrSchema", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uri});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::Push
// Il2CppName: Push
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XdrBuilder::*)()>(&System::Xml::Schema::XdrBuilder::Push)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "Push", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::Pop
// Il2CppName: Pop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XdrBuilder::*)()>(&System::Xml::Schema::XdrBuilder::Pop)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "Pop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::PushGroupInfo
// Il2CppName: PushGroupInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XdrBuilder::*)()>(&System::Xml::Schema::XdrBuilder::PushGroupInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "PushGroupInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::PopGroupInfo
// Il2CppName: PopGroupInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XdrBuilder::*)()>(&System::Xml::Schema::XdrBuilder::PopGroupInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "PopGroupInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_InitRoot
// Il2CppName: XDR_InitRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*)>(&System::Xml::Schema::XdrBuilder::XDR_InitRoot)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_InitRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildRoot_Name
// Il2CppName: XDR_BuildRoot_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildRoot_Name)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildRoot_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildRoot_ID
// Il2CppName: XDR_BuildRoot_ID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildRoot_ID)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildRoot_ID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BeginRoot
// Il2CppName: XDR_BeginRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*)>(&System::Xml::Schema::XdrBuilder::XDR_BeginRoot)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BeginRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_EndRoot
// Il2CppName: XDR_EndRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*)>(&System::Xml::Schema::XdrBuilder::XDR_EndRoot)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_EndRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_InitElementType
// Il2CppName: XDR_InitElementType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*)>(&System::Xml::Schema::XdrBuilder::XDR_InitElementType)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_InitElementType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildElementType_Name
// Il2CppName: XDR_BuildElementType_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildElementType_Name)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildElementType_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildElementType_Content
// Il2CppName: XDR_BuildElementType_Content
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildElementType_Content)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildElementType_Content", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildElementType_Model
// Il2CppName: XDR_BuildElementType_Model
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildElementType_Model)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildElementType_Model", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildElementType_Order
// Il2CppName: XDR_BuildElementType_Order
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildElementType_Order)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildElementType_Order", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildElementType_DtType
// Il2CppName: XDR_BuildElementType_DtType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildElementType_DtType)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildElementType_DtType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildElementType_DtValues
// Il2CppName: XDR_BuildElementType_DtValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildElementType_DtValues)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildElementType_DtValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildElementType_DtMaxLength
// Il2CppName: XDR_BuildElementType_DtMaxLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildElementType_DtMaxLength)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildElementType_DtMaxLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildElementType_DtMinLength
// Il2CppName: XDR_BuildElementType_DtMinLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildElementType_DtMinLength)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildElementType_DtMinLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BeginElementType
// Il2CppName: XDR_BeginElementType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*)>(&System::Xml::Schema::XdrBuilder::XDR_BeginElementType)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BeginElementType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_EndElementType
// Il2CppName: XDR_EndElementType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*)>(&System::Xml::Schema::XdrBuilder::XDR_EndElementType)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_EndElementType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_InitAttributeType
// Il2CppName: XDR_InitAttributeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*)>(&System::Xml::Schema::XdrBuilder::XDR_InitAttributeType)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_InitAttributeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_Name
// Il2CppName: XDR_BuildAttributeType_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_Name)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildAttributeType_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_Required
// Il2CppName: XDR_BuildAttributeType_Required
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_Required)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildAttributeType_Required", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_Default
// Il2CppName: XDR_BuildAttributeType_Default
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_Default)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildAttributeType_Default", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_DtType
// Il2CppName: XDR_BuildAttributeType_DtType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_DtType)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildAttributeType_DtType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_DtValues
// Il2CppName: XDR_BuildAttributeType_DtValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_DtValues)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildAttributeType_DtValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_DtMaxLength
// Il2CppName: XDR_BuildAttributeType_DtMaxLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_DtMaxLength)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildAttributeType_DtMaxLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_DtMinLength
// Il2CppName: XDR_BuildAttributeType_DtMinLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_DtMinLength)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildAttributeType_DtMinLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BeginAttributeType
// Il2CppName: XDR_BeginAttributeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*)>(&System::Xml::Schema::XdrBuilder::XDR_BeginAttributeType)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BeginAttributeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_EndAttributeType
// Il2CppName: XDR_EndAttributeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*)>(&System::Xml::Schema::XdrBuilder::XDR_EndAttributeType)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_EndAttributeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_InitElement
// Il2CppName: XDR_InitElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*)>(&System::Xml::Schema::XdrBuilder::XDR_InitElement)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_InitElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildElement_Type
// Il2CppName: XDR_BuildElement_Type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildElement_Type)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildElement_Type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildElement_MinOccurs
// Il2CppName: XDR_BuildElement_MinOccurs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildElement_MinOccurs)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildElement_MinOccurs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildElement_MaxOccurs
// Il2CppName: XDR_BuildElement_MaxOccurs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildElement_MaxOccurs)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildElement_MaxOccurs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_EndElement
// Il2CppName: XDR_EndElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*)>(&System::Xml::Schema::XdrBuilder::XDR_EndElement)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_EndElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_InitAttribute
// Il2CppName: XDR_InitAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*)>(&System::Xml::Schema::XdrBuilder::XDR_InitAttribute)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_InitAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildAttribute_Type
// Il2CppName: XDR_BuildAttribute_Type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildAttribute_Type)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildAttribute_Type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildAttribute_Required
// Il2CppName: XDR_BuildAttribute_Required
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildAttribute_Required)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildAttribute_Required", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildAttribute_Default
// Il2CppName: XDR_BuildAttribute_Default
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildAttribute_Default)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildAttribute_Default", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BeginAttribute
// Il2CppName: XDR_BeginAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*)>(&System::Xml::Schema::XdrBuilder::XDR_BeginAttribute)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BeginAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_EndAttribute
// Il2CppName: XDR_EndAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*)>(&System::Xml::Schema::XdrBuilder::XDR_EndAttribute)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_EndAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_InitGroup
// Il2CppName: XDR_InitGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*)>(&System::Xml::Schema::XdrBuilder::XDR_InitGroup)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_InitGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildGroup_Order
// Il2CppName: XDR_BuildGroup_Order
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildGroup_Order)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildGroup_Order", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildGroup_MinOccurs
// Il2CppName: XDR_BuildGroup_MinOccurs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildGroup_MinOccurs)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildGroup_MinOccurs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_BuildGroup_MaxOccurs
// Il2CppName: XDR_BuildGroup_MaxOccurs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*, ::StringW)>(&System::Xml::Schema::XdrBuilder::XDR_BuildGroup_MaxOccurs)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_BuildGroup_MaxOccurs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj, prefix});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_EndGroup
// Il2CppName: XDR_EndGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*)>(&System::Xml::Schema::XdrBuilder::XDR_EndGroup)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_EndGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_InitElementDtType
// Il2CppName: XDR_InitElementDtType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*)>(&System::Xml::Schema::XdrBuilder::XDR_InitElementDtType)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_InitElementDtType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_EndElementDtType
// Il2CppName: XDR_EndElementDtType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*)>(&System::Xml::Schema::XdrBuilder::XDR_EndElementDtType)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_EndElementDtType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_InitAttributeDtType
// Il2CppName: XDR_InitAttributeDtType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*, ::Il2CppObject*)>(&System::Xml::Schema::XdrBuilder::XDR_InitAttributeDtType)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_InitAttributeDtType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, obj});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_EndAttributeDtType
// Il2CppName: XDR_EndAttributeDtType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder*)>(&System::Xml::Schema::XdrBuilder::XDR_EndAttributeDtType)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_EndAttributeDtType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::GetNextState
// Il2CppName: GetNextState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Schema::XdrBuilder::*)(::System::Xml::XmlQualifiedName*)>(&System::Xml::Schema::XdrBuilder::GetNextState)> {
  static const MethodInfo* get() {
    static auto* qname = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlQualifiedName")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "GetNextState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{qname});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::IsSkipableElement
// Il2CppName: IsSkipableElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Schema::XdrBuilder::*)(::System::Xml::XmlQualifiedName*)>(&System::Xml::Schema::XdrBuilder::IsSkipableElement)> {
  static const MethodInfo* get() {
    static auto* qname = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlQualifiedName")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "IsSkipableElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{qname});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::IsSkipableAttribute
// Il2CppName: IsSkipableAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Schema::XdrBuilder::*)(::System::Xml::XmlQualifiedName*)>(&System::Xml::Schema::XdrBuilder::IsSkipableAttribute)> {
  static const MethodInfo* get() {
    static auto* qname = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlQualifiedName")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "IsSkipableAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{qname});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::GetOrder
// Il2CppName: GetOrder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::Schema::XdrBuilder::*)(::System::Xml::XmlQualifiedName*)>(&System::Xml::Schema::XdrBuilder::GetOrder)> {
  static const MethodInfo* get() {
    static auto* qname = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlQualifiedName")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "GetOrder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{qname});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::AddOrder
// Il2CppName: AddOrder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XdrBuilder::*)()>(&System::Xml::Schema::XdrBuilder::AddOrder)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "AddOrder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::IsYes
// Il2CppName: IsYes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppObject*, ::System::Xml::Schema::XdrBuilder*)>(&System::Xml::Schema::XdrBuilder::IsYes)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "IsYes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, builder});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::ParseMinOccurs
// Il2CppName: ParseMinOccurs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::Il2CppObject*, ::System::Xml::Schema::XdrBuilder*)>(&System::Xml::Schema::XdrBuilder::ParseMinOccurs)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "ParseMinOccurs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, builder});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::ParseMaxOccurs
// Il2CppName: ParseMaxOccurs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::Il2CppObject*, ::System::Xml::Schema::XdrBuilder*)>(&System::Xml::Schema::XdrBuilder::ParseMaxOccurs)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "ParseMaxOccurs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, builder});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::HandleMinMax
// Il2CppName: HandleMinMax
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::ParticleContentValidator*, uint, uint)>(&System::Xml::Schema::XdrBuilder::HandleMinMax)> {
  static const MethodInfo* get() {
    static auto* pContent = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "ParticleContentValidator")->byval_arg;
    static auto* cMin = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* cMax = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "HandleMinMax", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pContent, cMin, cMax});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::ParseDtMaxLength
// Il2CppName: ParseDtMaxLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<uint>, ::Il2CppObject*, ::System::Xml::Schema::XdrBuilder*)>(&System::Xml::Schema::XdrBuilder::ParseDtMaxLength)> {
  static const MethodInfo* get() {
    static auto* cVal = &::il2cpp_utils::GetClassFromName("System", "UInt32")->this_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "ParseDtMaxLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cVal, obj, builder});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::ParseDtMinLength
// Il2CppName: ParseDtMinLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<uint>, ::Il2CppObject*, ::System::Xml::Schema::XdrBuilder*)>(&System::Xml::Schema::XdrBuilder::ParseDtMinLength)> {
  static const MethodInfo* get() {
    static auto* cVal = &::il2cpp_utils::GetClassFromName("System", "UInt32")->this_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "ParseDtMinLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cVal, obj, builder});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::CompareMinMaxLength
// Il2CppName: CompareMinMaxLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint, uint, ::System::Xml::Schema::XdrBuilder*)>(&System::Xml::Schema::XdrBuilder::CompareMinMaxLength)> {
  static const MethodInfo* get() {
    static auto* cMin = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* cMax = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "CompareMinMaxLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cMin, cMax, builder});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::ParseInteger
// Il2CppName: ParseInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ByRef<uint>)>(&System::Xml::Schema::XdrBuilder::ParseInteger)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* n = &::il2cpp_utils::GetClassFromName("System", "UInt32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "ParseInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, n});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::XDR_CheckAttributeDefault
// Il2CppName: XDR_CheckAttributeDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XdrBuilder::*)(::System::Xml::Schema::XdrBuilder::DeclBaseInfo*, ::System::Xml::Schema::SchemaAttDef*)>(&System::Xml::Schema::XdrBuilder::XDR_CheckAttributeDefault)> {
  static const MethodInfo* get() {
    static auto* decl = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder/DeclBaseInfo")->byval_arg;
    static auto* pAttdef = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "SchemaAttDef")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "XDR_CheckAttributeDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{decl, pAttdef});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::SetAttributePresence
// Il2CppName: SetAttributePresence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XdrBuilder::*)(::System::Xml::Schema::SchemaAttDef*, bool)>(&System::Xml::Schema::XdrBuilder::SetAttributePresence)> {
  static const MethodInfo* get() {
    static auto* pAttdef = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "SchemaAttDef")->byval_arg;
    static auto* fRequired = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "SetAttributePresence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pAttdef, fRequired});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::GetContent
// Il2CppName: GetContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::Schema::XdrBuilder::*)(::System::Xml::XmlQualifiedName*)>(&System::Xml::Schema::XdrBuilder::GetContent)> {
  static const MethodInfo* get() {
    static auto* qname = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlQualifiedName")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "GetContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{qname});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::GetModel
// Il2CppName: GetModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Schema::XdrBuilder::*)(::System::Xml::XmlQualifiedName*)>(&System::Xml::Schema::XdrBuilder::GetModel)> {
  static const MethodInfo* get() {
    static auto* qname = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlQualifiedName")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "GetModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{qname});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::CheckDatatype
// Il2CppName: CheckDatatype
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaDatatype* (System::Xml::Schema::XdrBuilder::*)(::StringW)>(&System::Xml::Schema::XdrBuilder::CheckDatatype)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "CheckDatatype", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::CheckDefaultAttValue
// Il2CppName: CheckDefaultAttValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XdrBuilder::*)(::System::Xml::Schema::SchemaAttDef*)>(&System::Xml::Schema::XdrBuilder::CheckDefaultAttValue)> {
  static const MethodInfo* get() {
    static auto* attDef = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "SchemaAttDef")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "CheckDefaultAttValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attDef});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::IsGlobal
// Il2CppName: IsGlobal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Schema::XdrBuilder::*)(int)>(&System::Xml::Schema::XdrBuilder::IsGlobal)> {
  static const MethodInfo* get() {
    static auto* flags = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "IsGlobal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{flags});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::SendValidationEvent
// Il2CppName: SendValidationEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XdrBuilder::*)(::StringW, ::ArrayW<::StringW>, ::System::Xml::Schema::XmlSeverityType)>(&System::Xml::Schema::XdrBuilder::SendValidationEvent)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* args = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* severity = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSeverityType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "SendValidationEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code, args, severity});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::SendValidationEvent
// Il2CppName: SendValidationEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XdrBuilder::*)(::StringW)>(&System::Xml::Schema::XdrBuilder::SendValidationEvent)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "SendValidationEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::SendValidationEvent
// Il2CppName: SendValidationEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XdrBuilder::*)(::StringW, ::StringW)>(&System::Xml::Schema::XdrBuilder::SendValidationEvent)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* msg = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "SendValidationEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code, msg});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::SendValidationEvent
// Il2CppName: SendValidationEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XdrBuilder::*)(::System::Xml::Schema::XmlSchemaException*, ::System::Xml::Schema::XmlSeverityType)>(&System::Xml::Schema::XdrBuilder::SendValidationEvent)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSchemaException")->byval_arg;
    static auto* severity = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSeverityType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "SendValidationEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e, severity});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::ProcessElement
// Il2CppName: ProcessElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Schema::XdrBuilder::*)(::StringW, ::StringW, ::StringW)>(&System::Xml::Schema::XdrBuilder::ProcessElement)> {
  static const MethodInfo* get() {
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ns = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "ProcessElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefix, name, ns});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::ProcessAttribute
// Il2CppName: ProcessAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XdrBuilder::*)(::StringW, ::StringW, ::StringW, ::StringW)>(&System::Xml::Schema::XdrBuilder::ProcessAttribute)> {
  static const MethodInfo* get() {
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ns = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "ProcessAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefix, name, ns, value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::IsContentParsed
// Il2CppName: IsContentParsed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Schema::XdrBuilder::*)()>(&System::Xml::Schema::XdrBuilder::IsContentParsed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "IsContentParsed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::ProcessMarkup
// Il2CppName: ProcessMarkup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XdrBuilder::*)(::ArrayW<::System::Xml::XmlNode*>)>(&System::Xml::Schema::XdrBuilder::ProcessMarkup)> {
  static const MethodInfo* get() {
    static auto* markup = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Xml", "XmlNode"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "ProcessMarkup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{markup});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::ProcessCData
// Il2CppName: ProcessCData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XdrBuilder::*)(::StringW)>(&System::Xml::Schema::XdrBuilder::ProcessCData)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "ProcessCData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::StartChildren
// Il2CppName: StartChildren
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XdrBuilder::*)()>(&System::Xml::Schema::XdrBuilder::StartChildren)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "StartChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::EndChildren
// Il2CppName: EndChildren
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XdrBuilder::*)()>(&System::Xml::Schema::XdrBuilder::EndChildren)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder*), "EndChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
