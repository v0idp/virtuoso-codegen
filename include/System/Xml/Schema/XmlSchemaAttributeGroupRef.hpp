// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnnotated
#include "System/Xml/Schema/XmlSchemaAnnotated.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlQualifiedName
  class XmlQualifiedName;
}
// Completed forward declares
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlSchemaAttributeGroupRef
  class XmlSchemaAttributeGroupRef;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Schema::XmlSchemaAttributeGroupRef);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::XmlSchemaAttributeGroupRef*, "System.Xml.Schema", "XmlSchemaAttributeGroupRef");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Schema.XmlSchemaAttributeGroupRef
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlSchemaAttributeGroupRef : public ::System::Xml::Schema::XmlSchemaAnnotated {
    public:
    public:
    // private System.Xml.XmlQualifiedName refName
    // Size: 0x8
    // Offset: 0x50
    ::System::Xml::XmlQualifiedName* refName;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Xml::XmlQualifiedName*
    constexpr operator ::System::Xml::XmlQualifiedName*() const noexcept {
      return refName;
    }
    // Get instance field reference: private System.Xml.XmlQualifiedName refName
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_refName();
    // public System.Xml.XmlQualifiedName get_RefName()
    // Offset: 0x110A04C
    ::System::Xml::XmlQualifiedName* get_RefName();
    // public System.Void set_RefName(System.Xml.XmlQualifiedName value)
    // Offset: 0x110A054
    void set_RefName(::System::Xml::XmlQualifiedName* value);
    // public System.Void .ctor()
    // Offset: 0x110A100
    // Implemented from: System.Xml.Schema.XmlSchemaAnnotated
    // Base method: System.Void XmlSchemaAnnotated::.ctor()
    // Base method: System.Void XmlSchemaObject::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlSchemaAttributeGroupRef* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaAttributeGroupRef::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlSchemaAttributeGroupRef*, creationType>()));
    }
  }; // System.Xml.Schema.XmlSchemaAttributeGroupRef
  #pragma pack(pop)
  static check_size<sizeof(XmlSchemaAttributeGroupRef), 80 + sizeof(::System::Xml::XmlQualifiedName*)> __System_Xml_Schema_XmlSchemaAttributeGroupRefSizeCheck;
  static_assert(sizeof(XmlSchemaAttributeGroupRef) == 0x58);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroupRef::get_RefName
// Il2CppName: get_RefName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XmlQualifiedName* (System::Xml::Schema::XmlSchemaAttributeGroupRef::*)()>(&System::Xml::Schema::XmlSchemaAttributeGroupRef::get_RefName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroupRef*), "get_RefName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroupRef::set_RefName
// Il2CppName: set_RefName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaAttributeGroupRef::*)(::System::Xml::XmlQualifiedName*)>(&System::Xml::Schema::XmlSchemaAttributeGroupRef::set_RefName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlQualifiedName")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroupRef*), "set_RefName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroupRef::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
