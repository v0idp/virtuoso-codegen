// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Forward declaring type: XsdDateTimeFlags
  struct XsdDateTimeFlags;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::XsdDateTimeFlags, "System.Xml.Schema", "XsdDateTimeFlags");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Schema.XsdDateTimeFlags
  // [TokenAttribute] Offset: FFFFFFFF
  // [FlagsAttribute] Offset: FFFFFFFF
  struct XsdDateTimeFlags/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: XsdDateTimeFlags
    constexpr XsdDateTimeFlags(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.Xml.Schema.XsdDateTimeFlags DateTime
    static constexpr const int DateTime = 1;
    // Get static field: static public System.Xml.Schema.XsdDateTimeFlags DateTime
    static ::System::Xml::Schema::XsdDateTimeFlags _get_DateTime();
    // Set static field: static public System.Xml.Schema.XsdDateTimeFlags DateTime
    static void _set_DateTime(::System::Xml::Schema::XsdDateTimeFlags value);
    // static field const value: static public System.Xml.Schema.XsdDateTimeFlags Time
    static constexpr const int Time = 2;
    // Get static field: static public System.Xml.Schema.XsdDateTimeFlags Time
    static ::System::Xml::Schema::XsdDateTimeFlags _get_Time();
    // Set static field: static public System.Xml.Schema.XsdDateTimeFlags Time
    static void _set_Time(::System::Xml::Schema::XsdDateTimeFlags value);
    // static field const value: static public System.Xml.Schema.XsdDateTimeFlags Date
    static constexpr const int Date = 4;
    // Get static field: static public System.Xml.Schema.XsdDateTimeFlags Date
    static ::System::Xml::Schema::XsdDateTimeFlags _get_Date();
    // Set static field: static public System.Xml.Schema.XsdDateTimeFlags Date
    static void _set_Date(::System::Xml::Schema::XsdDateTimeFlags value);
    // static field const value: static public System.Xml.Schema.XsdDateTimeFlags GYearMonth
    static constexpr const int GYearMonth = 8;
    // Get static field: static public System.Xml.Schema.XsdDateTimeFlags GYearMonth
    static ::System::Xml::Schema::XsdDateTimeFlags _get_GYearMonth();
    // Set static field: static public System.Xml.Schema.XsdDateTimeFlags GYearMonth
    static void _set_GYearMonth(::System::Xml::Schema::XsdDateTimeFlags value);
    // static field const value: static public System.Xml.Schema.XsdDateTimeFlags GYear
    static constexpr const int GYear = 16;
    // Get static field: static public System.Xml.Schema.XsdDateTimeFlags GYear
    static ::System::Xml::Schema::XsdDateTimeFlags _get_GYear();
    // Set static field: static public System.Xml.Schema.XsdDateTimeFlags GYear
    static void _set_GYear(::System::Xml::Schema::XsdDateTimeFlags value);
    // static field const value: static public System.Xml.Schema.XsdDateTimeFlags GMonthDay
    static constexpr const int GMonthDay = 32;
    // Get static field: static public System.Xml.Schema.XsdDateTimeFlags GMonthDay
    static ::System::Xml::Schema::XsdDateTimeFlags _get_GMonthDay();
    // Set static field: static public System.Xml.Schema.XsdDateTimeFlags GMonthDay
    static void _set_GMonthDay(::System::Xml::Schema::XsdDateTimeFlags value);
    // static field const value: static public System.Xml.Schema.XsdDateTimeFlags GDay
    static constexpr const int GDay = 64;
    // Get static field: static public System.Xml.Schema.XsdDateTimeFlags GDay
    static ::System::Xml::Schema::XsdDateTimeFlags _get_GDay();
    // Set static field: static public System.Xml.Schema.XsdDateTimeFlags GDay
    static void _set_GDay(::System::Xml::Schema::XsdDateTimeFlags value);
    // static field const value: static public System.Xml.Schema.XsdDateTimeFlags GMonth
    static constexpr const int GMonth = 128;
    // Get static field: static public System.Xml.Schema.XsdDateTimeFlags GMonth
    static ::System::Xml::Schema::XsdDateTimeFlags _get_GMonth();
    // Set static field: static public System.Xml.Schema.XsdDateTimeFlags GMonth
    static void _set_GMonth(::System::Xml::Schema::XsdDateTimeFlags value);
    // static field const value: static public System.Xml.Schema.XsdDateTimeFlags XdrDateTimeNoTz
    static constexpr const int XdrDateTimeNoTz = 256;
    // Get static field: static public System.Xml.Schema.XsdDateTimeFlags XdrDateTimeNoTz
    static ::System::Xml::Schema::XsdDateTimeFlags _get_XdrDateTimeNoTz();
    // Set static field: static public System.Xml.Schema.XsdDateTimeFlags XdrDateTimeNoTz
    static void _set_XdrDateTimeNoTz(::System::Xml::Schema::XsdDateTimeFlags value);
    // static field const value: static public System.Xml.Schema.XsdDateTimeFlags XdrDateTime
    static constexpr const int XdrDateTime = 512;
    // Get static field: static public System.Xml.Schema.XsdDateTimeFlags XdrDateTime
    static ::System::Xml::Schema::XsdDateTimeFlags _get_XdrDateTime();
    // Set static field: static public System.Xml.Schema.XsdDateTimeFlags XdrDateTime
    static void _set_XdrDateTime(::System::Xml::Schema::XsdDateTimeFlags value);
    // static field const value: static public System.Xml.Schema.XsdDateTimeFlags XdrTimeNoTz
    static constexpr const int XdrTimeNoTz = 1024;
    // Get static field: static public System.Xml.Schema.XsdDateTimeFlags XdrTimeNoTz
    static ::System::Xml::Schema::XsdDateTimeFlags _get_XdrTimeNoTz();
    // Set static field: static public System.Xml.Schema.XsdDateTimeFlags XdrTimeNoTz
    static void _set_XdrTimeNoTz(::System::Xml::Schema::XsdDateTimeFlags value);
    // static field const value: static public System.Xml.Schema.XsdDateTimeFlags AllXsd
    static constexpr const int AllXsd = 255;
    // Get static field: static public System.Xml.Schema.XsdDateTimeFlags AllXsd
    static ::System::Xml::Schema::XsdDateTimeFlags _get_AllXsd();
    // Set static field: static public System.Xml.Schema.XsdDateTimeFlags AllXsd
    static void _set_AllXsd(::System::Xml::Schema::XsdDateTimeFlags value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // System.Xml.Schema.XsdDateTimeFlags
  #pragma pack(pop)
  static check_size<sizeof(XsdDateTimeFlags), 0 + sizeof(int)> __System_Xml_Schema_XsdDateTimeFlagsSizeCheck;
  static_assert(sizeof(XsdDateTimeFlags) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
