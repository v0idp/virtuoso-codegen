// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlSchemaValidationFlags
  struct XmlSchemaValidationFlags;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::XmlSchemaValidationFlags, "System.Xml.Schema", "XmlSchemaValidationFlags");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Schema.XmlSchemaValidationFlags
  // [TokenAttribute] Offset: FFFFFFFF
  // [FlagsAttribute] Offset: FFFFFFFF
  struct XmlSchemaValidationFlags/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: XmlSchemaValidationFlags
    constexpr XmlSchemaValidationFlags(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.Xml.Schema.XmlSchemaValidationFlags None
    static constexpr const int None = 0;
    // Get static field: static public System.Xml.Schema.XmlSchemaValidationFlags None
    static ::System::Xml::Schema::XmlSchemaValidationFlags _get_None();
    // Set static field: static public System.Xml.Schema.XmlSchemaValidationFlags None
    static void _set_None(::System::Xml::Schema::XmlSchemaValidationFlags value);
    // static field const value: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessInlineSchema
    static constexpr const int ProcessInlineSchema = 1;
    // Get static field: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessInlineSchema
    static ::System::Xml::Schema::XmlSchemaValidationFlags _get_ProcessInlineSchema();
    // Set static field: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessInlineSchema
    static void _set_ProcessInlineSchema(::System::Xml::Schema::XmlSchemaValidationFlags value);
    // static field const value: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessSchemaLocation
    static constexpr const int ProcessSchemaLocation = 2;
    // Get static field: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessSchemaLocation
    static ::System::Xml::Schema::XmlSchemaValidationFlags _get_ProcessSchemaLocation();
    // Set static field: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessSchemaLocation
    static void _set_ProcessSchemaLocation(::System::Xml::Schema::XmlSchemaValidationFlags value);
    // static field const value: static public System.Xml.Schema.XmlSchemaValidationFlags ReportValidationWarnings
    static constexpr const int ReportValidationWarnings = 4;
    // Get static field: static public System.Xml.Schema.XmlSchemaValidationFlags ReportValidationWarnings
    static ::System::Xml::Schema::XmlSchemaValidationFlags _get_ReportValidationWarnings();
    // Set static field: static public System.Xml.Schema.XmlSchemaValidationFlags ReportValidationWarnings
    static void _set_ReportValidationWarnings(::System::Xml::Schema::XmlSchemaValidationFlags value);
    // static field const value: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessIdentityConstraints
    static constexpr const int ProcessIdentityConstraints = 8;
    // Get static field: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessIdentityConstraints
    static ::System::Xml::Schema::XmlSchemaValidationFlags _get_ProcessIdentityConstraints();
    // Set static field: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessIdentityConstraints
    static void _set_ProcessIdentityConstraints(::System::Xml::Schema::XmlSchemaValidationFlags value);
    // static field const value: static public System.Xml.Schema.XmlSchemaValidationFlags AllowXmlAttributes
    static constexpr const int AllowXmlAttributes = 16;
    // Get static field: static public System.Xml.Schema.XmlSchemaValidationFlags AllowXmlAttributes
    static ::System::Xml::Schema::XmlSchemaValidationFlags _get_AllowXmlAttributes();
    // Set static field: static public System.Xml.Schema.XmlSchemaValidationFlags AllowXmlAttributes
    static void _set_AllowXmlAttributes(::System::Xml::Schema::XmlSchemaValidationFlags value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // System.Xml.Schema.XmlSchemaValidationFlags
  #pragma pack(pop)
  static check_size<sizeof(XmlSchemaValidationFlags), 0 + sizeof(int)> __System_Xml_Schema_XmlSchemaValidationFlagsSizeCheck;
  static_assert(sizeof(XmlSchemaValidationFlags) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
