// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Schema.XmlSchemaIdentityConstraint
#include "System/Xml/Schema/XmlSchemaIdentityConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlQualifiedName
  class XmlQualifiedName;
}
// Completed forward declares
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlSchemaKeyref
  class XmlSchemaKeyref;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Schema::XmlSchemaKeyref);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::XmlSchemaKeyref*, "System.Xml.Schema", "XmlSchemaKeyref");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0x80
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Schema.XmlSchemaKeyref
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlSchemaKeyref : public ::System::Xml::Schema::XmlSchemaIdentityConstraint {
    public:
    public:
    // private System.Xml.XmlQualifiedName refer
    // Size: 0x8
    // Offset: 0x78
    ::System::Xml::XmlQualifiedName* refer;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Xml::XmlQualifiedName*
    constexpr operator ::System::Xml::XmlQualifiedName*() const noexcept {
      return refer;
    }
    // Get instance field reference: private System.Xml.XmlQualifiedName refer
    [[deprecated]] ::System::Xml::XmlQualifiedName*& dyn_refer();
    // public System.Xml.XmlQualifiedName get_Refer()
    // Offset: 0x111924C
    ::System::Xml::XmlQualifiedName* get_Refer();
    // public System.Void set_Refer(System.Xml.XmlQualifiedName value)
    // Offset: 0x1119254
    void set_Refer(::System::Xml::XmlQualifiedName* value);
    // public System.Void .ctor()
    // Offset: 0x1119300
    // Implemented from: System.Xml.Schema.XmlSchemaIdentityConstraint
    // Base method: System.Void XmlSchemaIdentityConstraint::.ctor()
    // Base method: System.Void XmlSchemaAnnotated::.ctor()
    // Base method: System.Void XmlSchemaObject::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlSchemaKeyref* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaKeyref::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlSchemaKeyref*, creationType>()));
    }
  }; // System.Xml.Schema.XmlSchemaKeyref
  #pragma pack(pop)
  static check_size<sizeof(XmlSchemaKeyref), 120 + sizeof(::System::Xml::XmlQualifiedName*)> __System_Xml_Schema_XmlSchemaKeyrefSizeCheck;
  static_assert(sizeof(XmlSchemaKeyref) == 0x80);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaKeyref::get_Refer
// Il2CppName: get_Refer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XmlQualifiedName* (System::Xml::Schema::XmlSchemaKeyref::*)()>(&System::Xml::Schema::XmlSchemaKeyref::get_Refer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaKeyref*), "get_Refer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaKeyref::set_Refer
// Il2CppName: set_Refer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaKeyref::*)(::System::Xml::XmlQualifiedName*)>(&System::Xml::Schema::XmlSchemaKeyref::set_Refer)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlQualifiedName")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaKeyref*), "set_Refer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaKeyref::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
