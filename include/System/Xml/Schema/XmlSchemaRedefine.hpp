// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Schema.XmlSchemaExternal
#include "System/Xml/Schema/XmlSchemaExternal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlSchemaObjectCollection
  class XmlSchemaObjectCollection;
  // Forward declaring type: XmlSchemaObjectTable
  class XmlSchemaObjectTable;
  // Forward declaring type: XmlSchemaAnnotation
  class XmlSchemaAnnotation;
}
// Completed forward declares
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlSchemaRedefine
  class XmlSchemaRedefine;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Schema::XmlSchemaRedefine);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::XmlSchemaRedefine*, "System.Xml.Schema", "XmlSchemaRedefine");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0x88
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Schema.XmlSchemaRedefine
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlSchemaRedefine : public ::System::Xml::Schema::XmlSchemaExternal {
    public:
    // Writing base type padding for base size: 0x64 to desired offset: 0x68
    char ___base_padding[0x4] = {};
    public:
    // private System.Xml.Schema.XmlSchemaObjectCollection items
    // Size: 0x8
    // Offset: 0x68
    ::System::Xml::Schema::XmlSchemaObjectCollection* items;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchemaObjectCollection*) == 0x8);
    // private System.Xml.Schema.XmlSchemaObjectTable attributeGroups
    // Size: 0x8
    // Offset: 0x70
    ::System::Xml::Schema::XmlSchemaObjectTable* attributeGroups;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchemaObjectTable*) == 0x8);
    // private System.Xml.Schema.XmlSchemaObjectTable types
    // Size: 0x8
    // Offset: 0x78
    ::System::Xml::Schema::XmlSchemaObjectTable* types;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchemaObjectTable*) == 0x8);
    // private System.Xml.Schema.XmlSchemaObjectTable groups
    // Size: 0x8
    // Offset: 0x80
    ::System::Xml::Schema::XmlSchemaObjectTable* groups;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchemaObjectTable*) == 0x8);
    public:
    // Get instance field reference: private System.Xml.Schema.XmlSchemaObjectCollection items
    [[deprecated]] ::System::Xml::Schema::XmlSchemaObjectCollection*& dyn_items();
    // Get instance field reference: private System.Xml.Schema.XmlSchemaObjectTable attributeGroups
    [[deprecated]] ::System::Xml::Schema::XmlSchemaObjectTable*& dyn_attributeGroups();
    // Get instance field reference: private System.Xml.Schema.XmlSchemaObjectTable types
    [[deprecated]] ::System::Xml::Schema::XmlSchemaObjectTable*& dyn_types();
    // Get instance field reference: private System.Xml.Schema.XmlSchemaObjectTable groups
    [[deprecated]] ::System::Xml::Schema::XmlSchemaObjectTable*& dyn_groups();
    // public System.Xml.Schema.XmlSchemaObjectCollection get_Items()
    // Offset: 0xF2EC60
    ::System::Xml::Schema::XmlSchemaObjectCollection* get_Items();
    // public System.Xml.Schema.XmlSchemaObjectTable get_AttributeGroups()
    // Offset: 0xF2EC68
    ::System::Xml::Schema::XmlSchemaObjectTable* get_AttributeGroups();
    // public System.Xml.Schema.XmlSchemaObjectTable get_SchemaTypes()
    // Offset: 0xF2EC70
    ::System::Xml::Schema::XmlSchemaObjectTable* get_SchemaTypes();
    // public System.Xml.Schema.XmlSchemaObjectTable get_Groups()
    // Offset: 0xF2EC78
    ::System::Xml::Schema::XmlSchemaObjectTable* get_Groups();
    // public System.Void .ctor()
    // Offset: 0xF2EB8C
    // Implemented from: System.Xml.Schema.XmlSchemaExternal
    // Base method: System.Void XmlSchemaExternal::.ctor()
    // Base method: System.Void XmlSchemaObject::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlSchemaRedefine* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaRedefine::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlSchemaRedefine*, creationType>()));
    }
    // override System.Void AddAnnotation(System.Xml.Schema.XmlSchemaAnnotation annotation)
    // Offset: 0xF2EC80
    // Implemented from: System.Xml.Schema.XmlSchemaObject
    // Base method: System.Void XmlSchemaObject::AddAnnotation(System.Xml.Schema.XmlSchemaAnnotation annotation)
    void AddAnnotation(::System::Xml::Schema::XmlSchemaAnnotation* annotation);
  }; // System.Xml.Schema.XmlSchemaRedefine
  #pragma pack(pop)
  static check_size<sizeof(XmlSchemaRedefine), 128 + sizeof(::System::Xml::Schema::XmlSchemaObjectTable*)> __System_Xml_Schema_XmlSchemaRedefineSizeCheck;
  static_assert(sizeof(XmlSchemaRedefine) == 0x88);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaRedefine::get_Items
// Il2CppName: get_Items
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaObjectCollection* (System::Xml::Schema::XmlSchemaRedefine::*)()>(&System::Xml::Schema::XmlSchemaRedefine::get_Items)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaRedefine*), "get_Items", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaRedefine::get_AttributeGroups
// Il2CppName: get_AttributeGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaObjectTable* (System::Xml::Schema::XmlSchemaRedefine::*)()>(&System::Xml::Schema::XmlSchemaRedefine::get_AttributeGroups)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaRedefine*), "get_AttributeGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaRedefine::get_SchemaTypes
// Il2CppName: get_SchemaTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaObjectTable* (System::Xml::Schema::XmlSchemaRedefine::*)()>(&System::Xml::Schema::XmlSchemaRedefine::get_SchemaTypes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaRedefine*), "get_SchemaTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaRedefine::get_Groups
// Il2CppName: get_Groups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaObjectTable* (System::Xml::Schema::XmlSchemaRedefine::*)()>(&System::Xml::Schema::XmlSchemaRedefine::get_Groups)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaRedefine*), "get_Groups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaRedefine::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaRedefine::AddAnnotation
// Il2CppName: AddAnnotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaRedefine::*)(::System::Xml::Schema::XmlSchemaAnnotation*)>(&System::Xml::Schema::XmlSchemaRedefine::AddAnnotation)> {
  static const MethodInfo* get() {
    static auto* annotation = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSchemaAnnotation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaRedefine*), "AddAnnotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{annotation});
  }
};
