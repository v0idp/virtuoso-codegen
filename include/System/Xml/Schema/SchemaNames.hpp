// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Schema
namespace System::Xml::Schema {
  // Forward declaring type: SchemaType
  struct SchemaType;
}
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlNameTable
  class XmlNameTable;
  // Forward declaring type: XmlQualifiedName
  class XmlQualifiedName;
}
// Completed forward declares
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Forward declaring type: SchemaNames
  class SchemaNames;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Schema::SchemaNames);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::SchemaNames*, "System.Xml.Schema", "SchemaNames");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0x478
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Schema.SchemaNames
  // [TokenAttribute] Offset: FFFFFFFF
  class SchemaNames : public ::Il2CppObject {
    public:
    // Nested type: ::System::Xml::Schema::SchemaNames::Token
    struct Token;
    public:
    // private System.Xml.XmlNameTable nameTable
    // Size: 0x8
    // Offset: 0x10
    ::System::Xml::XmlNameTable* nameTable;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlNameTable*) == 0x8);
    // public System.String NsDataType
    // Size: 0x8
    // Offset: 0x18
    ::StringW NsDataType;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String NsDataTypeAlias
    // Size: 0x8
    // Offset: 0x20
    ::StringW NsDataTypeAlias;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String NsDataTypeOld
    // Size: 0x8
    // Offset: 0x28
    ::StringW NsDataTypeOld;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String NsXml
    // Size: 0x8
    // Offset: 0x30
    ::StringW NsXml;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String NsXmlNs
    // Size: 0x8
    // Offset: 0x38
    ::StringW NsXmlNs;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String NsXdr
    // Size: 0x8
    // Offset: 0x40
    ::StringW NsXdr;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String NsXdrAlias
    // Size: 0x8
    // Offset: 0x48
    ::StringW NsXdrAlias;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String NsXs
    // Size: 0x8
    // Offset: 0x50
    ::StringW NsXs;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String NsXsi
    // Size: 0x8
    // Offset: 0x58
    ::StringW NsXsi;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String XsiType
    // Size: 0x8
    // Offset: 0x60
    ::StringW XsiType;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String XsiNil
    // Size: 0x8
    // Offset: 0x68
    ::StringW XsiNil;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String XsiSchemaLocation
    // Size: 0x8
    // Offset: 0x70
    ::StringW XsiSchemaLocation;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String XsiNoNamespaceSchemaLocation
    // Size: 0x8
    // Offset: 0x78
    ::StringW XsiNoNamespaceSchemaLocation;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String XsdSchema
    // Size: 0x8
    // Offset: 0x80
    ::StringW XsdSchema;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String XdrSchema
    // Size: 0x8
    // Offset: 0x88
    ::StringW XdrSchema;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Xml.XmlQualifiedName QnPCData
    // Size: 0x8
    // Offset: 0x90
    ::System::Xml::XmlQualifiedName* QnPCData;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXml
    // Size: 0x8
    // Offset: 0x98
    ::System::Xml::XmlQualifiedName* QnXml;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXmlNs
    // Size: 0x8
    // Offset: 0xA0
    ::System::Xml::XmlQualifiedName* QnXmlNs;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnDtDt
    // Size: 0x8
    // Offset: 0xA8
    ::System::Xml::XmlQualifiedName* QnDtDt;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXmlLang
    // Size: 0x8
    // Offset: 0xB0
    ::System::Xml::XmlQualifiedName* QnXmlLang;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnName
    // Size: 0x8
    // Offset: 0xB8
    ::System::Xml::XmlQualifiedName* QnName;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnType
    // Size: 0x8
    // Offset: 0xC0
    ::System::Xml::XmlQualifiedName* QnType;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnMaxOccurs
    // Size: 0x8
    // Offset: 0xC8
    ::System::Xml::XmlQualifiedName* QnMaxOccurs;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnMinOccurs
    // Size: 0x8
    // Offset: 0xD0
    ::System::Xml::XmlQualifiedName* QnMinOccurs;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnInfinite
    // Size: 0x8
    // Offset: 0xD8
    ::System::Xml::XmlQualifiedName* QnInfinite;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnModel
    // Size: 0x8
    // Offset: 0xE0
    ::System::Xml::XmlQualifiedName* QnModel;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnOpen
    // Size: 0x8
    // Offset: 0xE8
    ::System::Xml::XmlQualifiedName* QnOpen;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnClosed
    // Size: 0x8
    // Offset: 0xF0
    ::System::Xml::XmlQualifiedName* QnClosed;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnContent
    // Size: 0x8
    // Offset: 0xF8
    ::System::Xml::XmlQualifiedName* QnContent;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnMixed
    // Size: 0x8
    // Offset: 0x100
    ::System::Xml::XmlQualifiedName* QnMixed;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnEmpty
    // Size: 0x8
    // Offset: 0x108
    ::System::Xml::XmlQualifiedName* QnEmpty;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnEltOnly
    // Size: 0x8
    // Offset: 0x110
    ::System::Xml::XmlQualifiedName* QnEltOnly;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnTextOnly
    // Size: 0x8
    // Offset: 0x118
    ::System::Xml::XmlQualifiedName* QnTextOnly;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnOrder
    // Size: 0x8
    // Offset: 0x120
    ::System::Xml::XmlQualifiedName* QnOrder;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnSeq
    // Size: 0x8
    // Offset: 0x128
    ::System::Xml::XmlQualifiedName* QnSeq;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnOne
    // Size: 0x8
    // Offset: 0x130
    ::System::Xml::XmlQualifiedName* QnOne;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnMany
    // Size: 0x8
    // Offset: 0x138
    ::System::Xml::XmlQualifiedName* QnMany;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnRequired
    // Size: 0x8
    // Offset: 0x140
    ::System::Xml::XmlQualifiedName* QnRequired;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnYes
    // Size: 0x8
    // Offset: 0x148
    ::System::Xml::XmlQualifiedName* QnYes;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnNo
    // Size: 0x8
    // Offset: 0x150
    ::System::Xml::XmlQualifiedName* QnNo;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnString
    // Size: 0x8
    // Offset: 0x158
    ::System::Xml::XmlQualifiedName* QnString;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnID
    // Size: 0x8
    // Offset: 0x160
    ::System::Xml::XmlQualifiedName* QnID;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnIDRef
    // Size: 0x8
    // Offset: 0x168
    ::System::Xml::XmlQualifiedName* QnIDRef;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnIDRefs
    // Size: 0x8
    // Offset: 0x170
    ::System::Xml::XmlQualifiedName* QnIDRefs;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnEntity
    // Size: 0x8
    // Offset: 0x178
    ::System::Xml::XmlQualifiedName* QnEntity;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnEntities
    // Size: 0x8
    // Offset: 0x180
    ::System::Xml::XmlQualifiedName* QnEntities;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnNmToken
    // Size: 0x8
    // Offset: 0x188
    ::System::Xml::XmlQualifiedName* QnNmToken;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnNmTokens
    // Size: 0x8
    // Offset: 0x190
    ::System::Xml::XmlQualifiedName* QnNmTokens;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnEnumeration
    // Size: 0x8
    // Offset: 0x198
    ::System::Xml::XmlQualifiedName* QnEnumeration;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnDefault
    // Size: 0x8
    // Offset: 0x1A0
    ::System::Xml::XmlQualifiedName* QnDefault;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXdrSchema
    // Size: 0x8
    // Offset: 0x1A8
    ::System::Xml::XmlQualifiedName* QnXdrSchema;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXdrElementType
    // Size: 0x8
    // Offset: 0x1B0
    ::System::Xml::XmlQualifiedName* QnXdrElementType;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXdrElement
    // Size: 0x8
    // Offset: 0x1B8
    ::System::Xml::XmlQualifiedName* QnXdrElement;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXdrGroup
    // Size: 0x8
    // Offset: 0x1C0
    ::System::Xml::XmlQualifiedName* QnXdrGroup;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXdrAttributeType
    // Size: 0x8
    // Offset: 0x1C8
    ::System::Xml::XmlQualifiedName* QnXdrAttributeType;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXdrAttribute
    // Size: 0x8
    // Offset: 0x1D0
    ::System::Xml::XmlQualifiedName* QnXdrAttribute;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXdrDataType
    // Size: 0x8
    // Offset: 0x1D8
    ::System::Xml::XmlQualifiedName* QnXdrDataType;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXdrDescription
    // Size: 0x8
    // Offset: 0x1E0
    ::System::Xml::XmlQualifiedName* QnXdrDescription;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXdrExtends
    // Size: 0x8
    // Offset: 0x1E8
    ::System::Xml::XmlQualifiedName* QnXdrExtends;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXdrAliasSchema
    // Size: 0x8
    // Offset: 0x1F0
    ::System::Xml::XmlQualifiedName* QnXdrAliasSchema;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnDtType
    // Size: 0x8
    // Offset: 0x1F8
    ::System::Xml::XmlQualifiedName* QnDtType;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnDtValues
    // Size: 0x8
    // Offset: 0x200
    ::System::Xml::XmlQualifiedName* QnDtValues;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnDtMaxLength
    // Size: 0x8
    // Offset: 0x208
    ::System::Xml::XmlQualifiedName* QnDtMaxLength;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnDtMinLength
    // Size: 0x8
    // Offset: 0x210
    ::System::Xml::XmlQualifiedName* QnDtMinLength;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnDtMax
    // Size: 0x8
    // Offset: 0x218
    ::System::Xml::XmlQualifiedName* QnDtMax;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnDtMin
    // Size: 0x8
    // Offset: 0x220
    ::System::Xml::XmlQualifiedName* QnDtMin;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnDtMinExclusive
    // Size: 0x8
    // Offset: 0x228
    ::System::Xml::XmlQualifiedName* QnDtMinExclusive;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnDtMaxExclusive
    // Size: 0x8
    // Offset: 0x230
    ::System::Xml::XmlQualifiedName* QnDtMaxExclusive;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnTargetNamespace
    // Size: 0x8
    // Offset: 0x238
    ::System::Xml::XmlQualifiedName* QnTargetNamespace;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnVersion
    // Size: 0x8
    // Offset: 0x240
    ::System::Xml::XmlQualifiedName* QnVersion;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnFinalDefault
    // Size: 0x8
    // Offset: 0x248
    ::System::Xml::XmlQualifiedName* QnFinalDefault;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnBlockDefault
    // Size: 0x8
    // Offset: 0x250
    ::System::Xml::XmlQualifiedName* QnBlockDefault;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnFixed
    // Size: 0x8
    // Offset: 0x258
    ::System::Xml::XmlQualifiedName* QnFixed;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnAbstract
    // Size: 0x8
    // Offset: 0x260
    ::System::Xml::XmlQualifiedName* QnAbstract;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnBlock
    // Size: 0x8
    // Offset: 0x268
    ::System::Xml::XmlQualifiedName* QnBlock;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnSubstitutionGroup
    // Size: 0x8
    // Offset: 0x270
    ::System::Xml::XmlQualifiedName* QnSubstitutionGroup;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnFinal
    // Size: 0x8
    // Offset: 0x278
    ::System::Xml::XmlQualifiedName* QnFinal;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnNillable
    // Size: 0x8
    // Offset: 0x280
    ::System::Xml::XmlQualifiedName* QnNillable;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnRef
    // Size: 0x8
    // Offset: 0x288
    ::System::Xml::XmlQualifiedName* QnRef;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnBase
    // Size: 0x8
    // Offset: 0x290
    ::System::Xml::XmlQualifiedName* QnBase;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnDerivedBy
    // Size: 0x8
    // Offset: 0x298
    ::System::Xml::XmlQualifiedName* QnDerivedBy;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnNamespace
    // Size: 0x8
    // Offset: 0x2A0
    ::System::Xml::XmlQualifiedName* QnNamespace;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnProcessContents
    // Size: 0x8
    // Offset: 0x2A8
    ::System::Xml::XmlQualifiedName* QnProcessContents;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnRefer
    // Size: 0x8
    // Offset: 0x2B0
    ::System::Xml::XmlQualifiedName* QnRefer;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnPublic
    // Size: 0x8
    // Offset: 0x2B8
    ::System::Xml::XmlQualifiedName* QnPublic;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnSystem
    // Size: 0x8
    // Offset: 0x2C0
    ::System::Xml::XmlQualifiedName* QnSystem;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnSchemaLocation
    // Size: 0x8
    // Offset: 0x2C8
    ::System::Xml::XmlQualifiedName* QnSchemaLocation;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnValue
    // Size: 0x8
    // Offset: 0x2D0
    ::System::Xml::XmlQualifiedName* QnValue;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnUse
    // Size: 0x8
    // Offset: 0x2D8
    ::System::Xml::XmlQualifiedName* QnUse;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnForm
    // Size: 0x8
    // Offset: 0x2E0
    ::System::Xml::XmlQualifiedName* QnForm;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnElementFormDefault
    // Size: 0x8
    // Offset: 0x2E8
    ::System::Xml::XmlQualifiedName* QnElementFormDefault;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnAttributeFormDefault
    // Size: 0x8
    // Offset: 0x2F0
    ::System::Xml::XmlQualifiedName* QnAttributeFormDefault;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnItemType
    // Size: 0x8
    // Offset: 0x2F8
    ::System::Xml::XmlQualifiedName* QnItemType;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnMemberTypes
    // Size: 0x8
    // Offset: 0x300
    ::System::Xml::XmlQualifiedName* QnMemberTypes;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXPath
    // Size: 0x8
    // Offset: 0x308
    ::System::Xml::XmlQualifiedName* QnXPath;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdSchema
    // Size: 0x8
    // Offset: 0x310
    ::System::Xml::XmlQualifiedName* QnXsdSchema;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdAnnotation
    // Size: 0x8
    // Offset: 0x318
    ::System::Xml::XmlQualifiedName* QnXsdAnnotation;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdInclude
    // Size: 0x8
    // Offset: 0x320
    ::System::Xml::XmlQualifiedName* QnXsdInclude;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdImport
    // Size: 0x8
    // Offset: 0x328
    ::System::Xml::XmlQualifiedName* QnXsdImport;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdElement
    // Size: 0x8
    // Offset: 0x330
    ::System::Xml::XmlQualifiedName* QnXsdElement;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdAttribute
    // Size: 0x8
    // Offset: 0x338
    ::System::Xml::XmlQualifiedName* QnXsdAttribute;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdAttributeGroup
    // Size: 0x8
    // Offset: 0x340
    ::System::Xml::XmlQualifiedName* QnXsdAttributeGroup;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdAnyAttribute
    // Size: 0x8
    // Offset: 0x348
    ::System::Xml::XmlQualifiedName* QnXsdAnyAttribute;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdGroup
    // Size: 0x8
    // Offset: 0x350
    ::System::Xml::XmlQualifiedName* QnXsdGroup;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdAll
    // Size: 0x8
    // Offset: 0x358
    ::System::Xml::XmlQualifiedName* QnXsdAll;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdChoice
    // Size: 0x8
    // Offset: 0x360
    ::System::Xml::XmlQualifiedName* QnXsdChoice;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdSequence
    // Size: 0x8
    // Offset: 0x368
    ::System::Xml::XmlQualifiedName* QnXsdSequence;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdAny
    // Size: 0x8
    // Offset: 0x370
    ::System::Xml::XmlQualifiedName* QnXsdAny;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdNotation
    // Size: 0x8
    // Offset: 0x378
    ::System::Xml::XmlQualifiedName* QnXsdNotation;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdSimpleType
    // Size: 0x8
    // Offset: 0x380
    ::System::Xml::XmlQualifiedName* QnXsdSimpleType;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdComplexType
    // Size: 0x8
    // Offset: 0x388
    ::System::Xml::XmlQualifiedName* QnXsdComplexType;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdUnique
    // Size: 0x8
    // Offset: 0x390
    ::System::Xml::XmlQualifiedName* QnXsdUnique;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdKey
    // Size: 0x8
    // Offset: 0x398
    ::System::Xml::XmlQualifiedName* QnXsdKey;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdKeyRef
    // Size: 0x8
    // Offset: 0x3A0
    ::System::Xml::XmlQualifiedName* QnXsdKeyRef;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdSelector
    // Size: 0x8
    // Offset: 0x3A8
    ::System::Xml::XmlQualifiedName* QnXsdSelector;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdField
    // Size: 0x8
    // Offset: 0x3B0
    ::System::Xml::XmlQualifiedName* QnXsdField;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdMinExclusive
    // Size: 0x8
    // Offset: 0x3B8
    ::System::Xml::XmlQualifiedName* QnXsdMinExclusive;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdMinInclusive
    // Size: 0x8
    // Offset: 0x3C0
    ::System::Xml::XmlQualifiedName* QnXsdMinInclusive;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdMaxInclusive
    // Size: 0x8
    // Offset: 0x3C8
    ::System::Xml::XmlQualifiedName* QnXsdMaxInclusive;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdMaxExclusive
    // Size: 0x8
    // Offset: 0x3D0
    ::System::Xml::XmlQualifiedName* QnXsdMaxExclusive;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdTotalDigits
    // Size: 0x8
    // Offset: 0x3D8
    ::System::Xml::XmlQualifiedName* QnXsdTotalDigits;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdFractionDigits
    // Size: 0x8
    // Offset: 0x3E0
    ::System::Xml::XmlQualifiedName* QnXsdFractionDigits;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdLength
    // Size: 0x8
    // Offset: 0x3E8
    ::System::Xml::XmlQualifiedName* QnXsdLength;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdMinLength
    // Size: 0x8
    // Offset: 0x3F0
    ::System::Xml::XmlQualifiedName* QnXsdMinLength;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdMaxLength
    // Size: 0x8
    // Offset: 0x3F8
    ::System::Xml::XmlQualifiedName* QnXsdMaxLength;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdEnumeration
    // Size: 0x8
    // Offset: 0x400
    ::System::Xml::XmlQualifiedName* QnXsdEnumeration;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdPattern
    // Size: 0x8
    // Offset: 0x408
    ::System::Xml::XmlQualifiedName* QnXsdPattern;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdDocumentation
    // Size: 0x8
    // Offset: 0x410
    ::System::Xml::XmlQualifiedName* QnXsdDocumentation;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdAppinfo
    // Size: 0x8
    // Offset: 0x418
    ::System::Xml::XmlQualifiedName* QnXsdAppinfo;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnSource
    // Size: 0x8
    // Offset: 0x420
    ::System::Xml::XmlQualifiedName* QnSource;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdComplexContent
    // Size: 0x8
    // Offset: 0x428
    ::System::Xml::XmlQualifiedName* QnXsdComplexContent;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdSimpleContent
    // Size: 0x8
    // Offset: 0x430
    ::System::Xml::XmlQualifiedName* QnXsdSimpleContent;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdRestriction
    // Size: 0x8
    // Offset: 0x438
    ::System::Xml::XmlQualifiedName* QnXsdRestriction;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdExtension
    // Size: 0x8
    // Offset: 0x440
    ::System::Xml::XmlQualifiedName* QnXsdExtension;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdUnion
    // Size: 0x8
    // Offset: 0x448
    ::System::Xml::XmlQualifiedName* QnXsdUnion;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdList
    // Size: 0x8
    // Offset: 0x450
    ::System::Xml::XmlQualifiedName* QnXsdList;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdWhiteSpace
    // Size: 0x8
    // Offset: 0x458
    ::System::Xml::XmlQualifiedName* QnXsdWhiteSpace;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdRedefine
    // Size: 0x8
    // Offset: 0x460
    ::System::Xml::XmlQualifiedName* QnXsdRedefine;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // public System.Xml.XmlQualifiedName QnXsdAnyType
    // Size: 0x8
    // Offset: 0x468
    ::System::Xml::XmlQualifiedName* QnXsdAnyType;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // System.Xml.XmlQualifiedName[] TokenToQName
    // Size: 0x8
    // Offset: 0x470
    ::ArrayW<::System::Xml::XmlQualifiedName*> TokenToQName;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::Xml::XmlQualifiedName*>) == 0x8);
    public:
    // Get instance field reference: private System.Xml.XmlNameTable nameTable
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& dyn_nameTable();
    // Get instance field reference: public System.String NsDataType
    [[deprecated("Use field access instead!")]] ::StringW& dyn_NsDataType();
    // Get instance field reference: public System.String NsDataTypeAlias
    [[deprecated("Use field access instead!")]] ::StringW& dyn_NsDataTypeAlias();
    // Get instance field reference: public System.String NsDataTypeOld
    [[deprecated("Use field access instead!")]] ::StringW& dyn_NsDataTypeOld();
    // Get instance field reference: public System.String NsXml
    [[deprecated("Use field access instead!")]] ::StringW& dyn_NsXml();
    // Get instance field reference: public System.String NsXmlNs
    [[deprecated("Use field access instead!")]] ::StringW& dyn_NsXmlNs();
    // Get instance field reference: public System.String NsXdr
    [[deprecated("Use field access instead!")]] ::StringW& dyn_NsXdr();
    // Get instance field reference: public System.String NsXdrAlias
    [[deprecated("Use field access instead!")]] ::StringW& dyn_NsXdrAlias();
    // Get instance field reference: public System.String NsXs
    [[deprecated("Use field access instead!")]] ::StringW& dyn_NsXs();
    // Get instance field reference: public System.String NsXsi
    [[deprecated("Use field access instead!")]] ::StringW& dyn_NsXsi();
    // Get instance field reference: public System.String XsiType
    [[deprecated("Use field access instead!")]] ::StringW& dyn_XsiType();
    // Get instance field reference: public System.String XsiNil
    [[deprecated("Use field access instead!")]] ::StringW& dyn_XsiNil();
    // Get instance field reference: public System.String XsiSchemaLocation
    [[deprecated("Use field access instead!")]] ::StringW& dyn_XsiSchemaLocation();
    // Get instance field reference: public System.String XsiNoNamespaceSchemaLocation
    [[deprecated("Use field access instead!")]] ::StringW& dyn_XsiNoNamespaceSchemaLocation();
    // Get instance field reference: public System.String XsdSchema
    [[deprecated("Use field access instead!")]] ::StringW& dyn_XsdSchema();
    // Get instance field reference: public System.String XdrSchema
    [[deprecated("Use field access instead!")]] ::StringW& dyn_XdrSchema();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnPCData
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnPCData();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXml
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXml();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXmlNs
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXmlNs();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnDtDt
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnDtDt();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXmlLang
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXmlLang();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnName
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnName();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnType
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnType();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnMaxOccurs
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnMaxOccurs();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnMinOccurs
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnMinOccurs();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnInfinite
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnInfinite();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnModel
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnModel();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnOpen
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnOpen();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnClosed
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnClosed();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnContent
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnContent();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnMixed
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnMixed();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnEmpty
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnEmpty();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnEltOnly
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnEltOnly();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnTextOnly
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnTextOnly();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnOrder
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnOrder();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnSeq
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnSeq();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnOne
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnOne();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnMany
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnMany();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnRequired
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnRequired();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnYes
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnYes();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnNo
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnNo();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnString
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnString();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnID
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnID();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnIDRef
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnIDRef();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnIDRefs
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnIDRefs();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnEntity
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnEntity();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnEntities
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnEntities();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnNmToken
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnNmToken();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnNmTokens
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnNmTokens();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnEnumeration
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnEnumeration();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnDefault
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnDefault();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXdrSchema
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXdrSchema();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXdrElementType
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXdrElementType();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXdrElement
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXdrElement();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXdrGroup
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXdrGroup();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXdrAttributeType
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXdrAttributeType();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXdrAttribute
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXdrAttribute();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXdrDataType
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXdrDataType();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXdrDescription
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXdrDescription();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXdrExtends
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXdrExtends();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXdrAliasSchema
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXdrAliasSchema();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnDtType
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnDtType();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnDtValues
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnDtValues();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnDtMaxLength
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnDtMaxLength();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnDtMinLength
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnDtMinLength();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnDtMax
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnDtMax();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnDtMin
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnDtMin();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnDtMinExclusive
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnDtMinExclusive();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnDtMaxExclusive
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnDtMaxExclusive();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnTargetNamespace
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnTargetNamespace();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnVersion
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnVersion();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnFinalDefault
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnFinalDefault();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnBlockDefault
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnBlockDefault();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnFixed
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnFixed();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnAbstract
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnAbstract();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnBlock
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnBlock();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnSubstitutionGroup
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnSubstitutionGroup();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnFinal
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnFinal();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnNillable
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnNillable();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnRef
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnRef();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnBase
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnBase();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnDerivedBy
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnDerivedBy();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnNamespace
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnNamespace();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnProcessContents
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnProcessContents();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnRefer
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnRefer();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnPublic
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnPublic();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnSystem
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnSystem();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnSchemaLocation
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnSchemaLocation();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnValue
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnValue();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnUse
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnUse();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnForm
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnForm();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnElementFormDefault
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnElementFormDefault();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnAttributeFormDefault
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnAttributeFormDefault();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnItemType
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnItemType();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnMemberTypes
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnMemberTypes();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXPath
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXPath();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdSchema
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdSchema();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdAnnotation
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdAnnotation();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdInclude
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdInclude();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdImport
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdImport();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdElement
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdElement();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdAttribute
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdAttribute();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdAttributeGroup
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdAttributeGroup();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdAnyAttribute
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdAnyAttribute();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdGroup
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdGroup();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdAll
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdAll();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdChoice
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdChoice();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdSequence
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdSequence();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdAny
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdAny();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdNotation
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdNotation();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdSimpleType
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdSimpleType();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdComplexType
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdComplexType();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdUnique
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdUnique();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdKey
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdKey();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdKeyRef
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdKeyRef();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdSelector
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdSelector();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdField
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdField();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdMinExclusive
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdMinExclusive();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdMinInclusive
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdMinInclusive();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdMaxInclusive
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdMaxInclusive();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdMaxExclusive
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdMaxExclusive();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdTotalDigits
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdTotalDigits();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdFractionDigits
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdFractionDigits();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdLength
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdLength();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdMinLength
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdMinLength();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdMaxLength
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdMaxLength();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdEnumeration
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdEnumeration();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdPattern
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdPattern();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdDocumentation
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdDocumentation();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdAppinfo
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdAppinfo();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnSource
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnSource();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdComplexContent
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdComplexContent();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdSimpleContent
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdSimpleContent();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdRestriction
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdRestriction();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdExtension
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdExtension();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdUnion
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdUnion();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdList
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdList();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdWhiteSpace
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdWhiteSpace();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdRedefine
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdRedefine();
    // Get instance field reference: public System.Xml.XmlQualifiedName QnXsdAnyType
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_QnXsdAnyType();
    // Get instance field reference: System.Xml.XmlQualifiedName[] TokenToQName
    [[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlQualifiedName*>& dyn_TokenToQName();
    // public System.Void .ctor(System.Xml.XmlNameTable nameTable)
    // Offset: 0xF682A0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SchemaNames* New_ctor(::System::Xml::XmlNameTable* nameTable) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SchemaNames*, creationType>(nameTable)));
    }
    // public System.Void CreateTokenToQNameTable()
    // Offset: 0xF6AB8C
    void CreateTokenToQNameTable();
    // public System.Xml.Schema.SchemaType SchemaTypeFromRoot(System.String localName, System.String ns)
    // Offset: 0xF6C544
    ::System::Xml::Schema::SchemaType SchemaTypeFromRoot(::StringW localName, ::StringW ns);
    // public System.Boolean IsXSDRoot(System.String localName, System.String ns)
    // Offset: 0xF6C5B0
    bool IsXSDRoot(::StringW localName, ::StringW ns);
    // public System.Boolean IsXDRRoot(System.String localName, System.String ns)
    // Offset: 0xF6C604
    bool IsXDRRoot(::StringW localName, ::StringW ns);
  }; // System.Xml.Schema.SchemaNames
  #pragma pack(pop)
  static check_size<sizeof(SchemaNames), 1136 + sizeof(::ArrayW<::System::Xml::XmlQualifiedName*>)> __System_Xml_Schema_SchemaNamesSizeCheck;
  static_assert(sizeof(SchemaNames) == 0x478);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Schema::SchemaNames::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Schema::SchemaNames::CreateTokenToQNameTable
// Il2CppName: CreateTokenToQNameTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::SchemaNames::*)()>(&System::Xml::Schema::SchemaNames::CreateTokenToQNameTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::SchemaNames*), "CreateTokenToQNameTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::SchemaNames::SchemaTypeFromRoot
// Il2CppName: SchemaTypeFromRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::SchemaType (System::Xml::Schema::SchemaNames::*)(::StringW, ::StringW)>(&System::Xml::Schema::SchemaNames::SchemaTypeFromRoot)> {
  static const MethodInfo* get() {
    static auto* localName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ns = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::SchemaNames*), "SchemaTypeFromRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{localName, ns});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::SchemaNames::IsXSDRoot
// Il2CppName: IsXSDRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Schema::SchemaNames::*)(::StringW, ::StringW)>(&System::Xml::Schema::SchemaNames::IsXSDRoot)> {
  static const MethodInfo* get() {
    static auto* localName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ns = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::SchemaNames*), "IsXSDRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{localName, ns});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::SchemaNames::IsXDRRoot
// Il2CppName: IsXDRRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Schema::SchemaNames::*)(::StringW, ::StringW)>(&System::Xml::Schema::SchemaNames::IsXDRRoot)> {
  static const MethodInfo* get() {
    static auto* localName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ns = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::SchemaNames*), "IsXDRRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{localName, ns});
  }
};
