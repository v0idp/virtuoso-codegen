// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Forward declaring type: RestrictionFacets
  class RestrictionFacets;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Schema::RestrictionFacets);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::RestrictionFacets*, "System.Xml.Schema", "RestrictionFacets");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0x68
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Schema.RestrictionFacets
  // [TokenAttribute] Offset: FFFFFFFF
  class RestrictionFacets : public ::Il2CppObject {
    public:
    public:
    // System.Int32 Length
    // Size: 0x4
    // Offset: 0x10
    int Length;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 MinLength
    // Size: 0x4
    // Offset: 0x14
    int MinLength;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 MaxLength
    // Size: 0x4
    // Offset: 0x18
    int MaxLength;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: MaxLength and: Patterns
    char __padding2[0x4] = {};
    // System.Collections.ArrayList Patterns
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::ArrayList* Patterns;
    // Field size check
    static_assert(sizeof(::System::Collections::ArrayList*) == 0x8);
    // System.Collections.ArrayList Enumeration
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::ArrayList* Enumeration;
    // Field size check
    static_assert(sizeof(::System::Collections::ArrayList*) == 0x8);
    // System.Xml.Schema.XmlSchemaWhiteSpace WhiteSpace
    // Size: 0x4
    // Offset: 0x30
    ::System::Xml::Schema::XmlSchemaWhiteSpace WhiteSpace;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchemaWhiteSpace) == 0x4);
    // Padding between fields: WhiteSpace and: MaxInclusive
    char __padding5[0x4] = {};
    // System.Object MaxInclusive
    // Size: 0x8
    // Offset: 0x38
    ::Il2CppObject* MaxInclusive;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // System.Object MaxExclusive
    // Size: 0x8
    // Offset: 0x40
    ::Il2CppObject* MaxExclusive;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // System.Object MinInclusive
    // Size: 0x8
    // Offset: 0x48
    ::Il2CppObject* MinInclusive;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // System.Object MinExclusive
    // Size: 0x8
    // Offset: 0x50
    ::Il2CppObject* MinExclusive;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // System.Int32 TotalDigits
    // Size: 0x4
    // Offset: 0x58
    int TotalDigits;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 FractionDigits
    // Size: 0x4
    // Offset: 0x5C
    int FractionDigits;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Xml.Schema.RestrictionFlags Flags
    // Size: 0x4
    // Offset: 0x60
    ::System::Xml::Schema::RestrictionFlags Flags;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::RestrictionFlags) == 0x4);
    // System.Xml.Schema.RestrictionFlags FixedFlags
    // Size: 0x4
    // Offset: 0x64
    ::System::Xml::Schema::RestrictionFlags FixedFlags;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::RestrictionFlags) == 0x4);
    public:
    // Get instance field reference: System.Int32 Length
    [[deprecated]] int& dyn_Length();
    // Get instance field reference: System.Int32 MinLength
    [[deprecated]] int& dyn_MinLength();
    // Get instance field reference: System.Int32 MaxLength
    [[deprecated]] int& dyn_MaxLength();
    // Get instance field reference: System.Collections.ArrayList Patterns
    [[deprecated]] ::System::Collections::ArrayList*& dyn_Patterns();
    // Get instance field reference: System.Collections.ArrayList Enumeration
    [[deprecated]] ::System::Collections::ArrayList*& dyn_Enumeration();
    // Get instance field reference: System.Xml.Schema.XmlSchemaWhiteSpace WhiteSpace
    [[deprecated]] ::System::Xml::Schema::XmlSchemaWhiteSpace& dyn_WhiteSpace();
    // Get instance field reference: System.Object MaxInclusive
    [[deprecated]] ::Il2CppObject*& dyn_MaxInclusive();
    // Get instance field reference: System.Object MaxExclusive
    [[deprecated]] ::Il2CppObject*& dyn_MaxExclusive();
    // Get instance field reference: System.Object MinInclusive
    [[deprecated]] ::Il2CppObject*& dyn_MinInclusive();
    // Get instance field reference: System.Object MinExclusive
    [[deprecated]] ::Il2CppObject*& dyn_MinExclusive();
    // Get instance field reference: System.Int32 TotalDigits
    [[deprecated]] int& dyn_TotalDigits();
    // Get instance field reference: System.Int32 FractionDigits
    [[deprecated]] int& dyn_FractionDigits();
    // Get instance field reference: System.Xml.Schema.RestrictionFlags Flags
    [[deprecated]] ::System::Xml::Schema::RestrictionFlags& dyn_Flags();
    // Get instance field reference: System.Xml.Schema.RestrictionFlags FixedFlags
    [[deprecated]] ::System::Xml::Schema::RestrictionFlags& dyn_FixedFlags();
    // public System.Void .ctor()
    // Offset: 0xDE89BC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RestrictionFacets* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFacets::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RestrictionFacets*, creationType>()));
    }
  }; // System.Xml.Schema.RestrictionFacets
  #pragma pack(pop)
  static check_size<sizeof(RestrictionFacets), 100 + sizeof(::System::Xml::Schema::RestrictionFlags)> __System_Xml_Schema_RestrictionFacetsSizeCheck;
  static_assert(sizeof(RestrictionFacets) == 0x68);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Schema::RestrictionFacets::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
