// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Forward declaring type: StateUnion
  struct StateUnion;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::StateUnion, "System.Xml.Schema", "StateUnion");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // WARNING Size may be invalid!
  // WARNING Layout: Explicit may not be correctly taken into account!
  // Autogenerated type: System.Xml.Schema.StateUnion
  // [TokenAttribute] Offset: FFFFFFFF
  struct StateUnion/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Int32 State
    // Size: 0x4
    // Offset: 0x0
    int State;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 AllElementsRequired
    // Size: 0x4
    // Offset: 0x0
    int AllElementsRequired;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 CurPosIndex
    // Size: 0x4
    // Offset: 0x0
    int CurPosIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 NumberOfRunningPos
    // Size: 0x4
    // Offset: 0x0
    int NumberOfRunningPos;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: StateUnion
    constexpr StateUnion(int State_ = {}, int AllElementsRequired_ = {}, int CurPosIndex_ = {}, int NumberOfRunningPos_ = {}) noexcept : State{State_}, AllElementsRequired{AllElementsRequired_}, CurPosIndex{CurPosIndex_}, NumberOfRunningPos{NumberOfRunningPos_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Int32 State
    [[deprecated("Use field access instead!")]] int& dyn_State();
    // Get instance field reference: public System.Int32 AllElementsRequired
    [[deprecated("Use field access instead!")]] int& dyn_AllElementsRequired();
    // Get instance field reference: public System.Int32 CurPosIndex
    [[deprecated("Use field access instead!")]] int& dyn_CurPosIndex();
    // Get instance field reference: public System.Int32 NumberOfRunningPos
    [[deprecated("Use field access instead!")]] int& dyn_NumberOfRunningPos();
  }; // System.Xml.Schema.StateUnion
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
