// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnnotated
#include "System/Xml/Schema/XmlSchemaAnnotated.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlSchemaObjectCollection
  class XmlSchemaObjectCollection;
  // Forward declaring type: XmlSchemaAnyAttribute
  class XmlSchemaAnyAttribute;
  // Forward declaring type: XmlSchemaObjectTable
  class XmlSchemaObjectTable;
}
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlQualifiedName
  class XmlQualifiedName;
}
// Completed forward declares
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlSchemaAttributeGroup
  class XmlSchemaAttributeGroup;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Schema::XmlSchemaAttributeGroup);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::XmlSchemaAttributeGroup*, "System.Xml.Schema", "XmlSchemaAttributeGroup");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0x8C
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Schema.XmlSchemaAttributeGroup
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlSchemaAttributeGroup : public ::System::Xml::Schema::XmlSchemaAnnotated {
    public:
    public:
    // private System.String name
    // Size: 0x8
    // Offset: 0x50
    ::StringW name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Xml.Schema.XmlSchemaObjectCollection attributes
    // Size: 0x8
    // Offset: 0x58
    ::System::Xml::Schema::XmlSchemaObjectCollection* attributes;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchemaObjectCollection*) == 0x8);
    // private System.Xml.Schema.XmlSchemaAnyAttribute anyAttribute
    // Size: 0x8
    // Offset: 0x60
    ::System::Xml::Schema::XmlSchemaAnyAttribute* anyAttribute;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchemaAnyAttribute*) == 0x8);
    // private System.Xml.XmlQualifiedName qname
    // Size: 0x8
    // Offset: 0x68
    ::System::Xml::XmlQualifiedName* qname;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // private System.Xml.Schema.XmlSchemaAttributeGroup redefined
    // Size: 0x8
    // Offset: 0x70
    ::System::Xml::Schema::XmlSchemaAttributeGroup* redefined;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchemaAttributeGroup*) == 0x8);
    // private System.Xml.Schema.XmlSchemaObjectTable attributeUses
    // Size: 0x8
    // Offset: 0x78
    ::System::Xml::Schema::XmlSchemaObjectTable* attributeUses;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchemaObjectTable*) == 0x8);
    // private System.Xml.Schema.XmlSchemaAnyAttribute attributeWildcard
    // Size: 0x8
    // Offset: 0x80
    ::System::Xml::Schema::XmlSchemaAnyAttribute* attributeWildcard;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchemaAnyAttribute*) == 0x8);
    // private System.Int32 selfReferenceCount
    // Size: 0x4
    // Offset: 0x88
    int selfReferenceCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: private System.String name
    [[deprecated]] ::StringW& dyn_name();
    // Get instance field reference: private System.Xml.Schema.XmlSchemaObjectCollection attributes
    [[deprecated]] ::System::Xml::Schema::XmlSchemaObjectCollection*& dyn_attributes();
    // Get instance field reference: private System.Xml.Schema.XmlSchemaAnyAttribute anyAttribute
    [[deprecated]] ::System::Xml::Schema::XmlSchemaAnyAttribute*& dyn_anyAttribute();
    // Get instance field reference: private System.Xml.XmlQualifiedName qname
    [[deprecated]] ::System::Xml::XmlQualifiedName*& dyn_qname();
    // Get instance field reference: private System.Xml.Schema.XmlSchemaAttributeGroup redefined
    [[deprecated]] ::System::Xml::Schema::XmlSchemaAttributeGroup*& dyn_redefined();
    // Get instance field reference: private System.Xml.Schema.XmlSchemaObjectTable attributeUses
    [[deprecated]] ::System::Xml::Schema::XmlSchemaObjectTable*& dyn_attributeUses();
    // Get instance field reference: private System.Xml.Schema.XmlSchemaAnyAttribute attributeWildcard
    [[deprecated]] ::System::Xml::Schema::XmlSchemaAnyAttribute*& dyn_attributeWildcard();
    // Get instance field reference: private System.Int32 selfReferenceCount
    [[deprecated]] int& dyn_selfReferenceCount();
    // public System.String get_Name()
    // Offset: 0x1109A14
    ::StringW get_Name();
    // public System.Void set_Name(System.String value)
    // Offset: 0x1109A1C
    void set_Name(::StringW value);
    // public System.Xml.Schema.XmlSchemaObjectCollection get_Attributes()
    // Offset: 0x1109A24
    ::System::Xml::Schema::XmlSchemaObjectCollection* get_Attributes();
    // public System.Xml.Schema.XmlSchemaAnyAttribute get_AnyAttribute()
    // Offset: 0x1109A2C
    ::System::Xml::Schema::XmlSchemaAnyAttribute* get_AnyAttribute();
    // public System.Void set_AnyAttribute(System.Xml.Schema.XmlSchemaAnyAttribute value)
    // Offset: 0x1109A34
    void set_AnyAttribute(::System::Xml::Schema::XmlSchemaAnyAttribute* value);
    // public System.Xml.XmlQualifiedName get_QualifiedName()
    // Offset: 0x1109A3C
    ::System::Xml::XmlQualifiedName* get_QualifiedName();
    // System.Xml.Schema.XmlSchemaObjectTable get_AttributeUses()
    // Offset: 0x1109A44
    ::System::Xml::Schema::XmlSchemaObjectTable* get_AttributeUses();
    // System.Xml.Schema.XmlSchemaAnyAttribute get_AttributeWildcard()
    // Offset: 0x1109AA8
    ::System::Xml::Schema::XmlSchemaAnyAttribute* get_AttributeWildcard();
    // System.Void set_AttributeWildcard(System.Xml.Schema.XmlSchemaAnyAttribute value)
    // Offset: 0x1109AB0
    void set_AttributeWildcard(::System::Xml::Schema::XmlSchemaAnyAttribute* value);
    // public System.Xml.Schema.XmlSchemaAttributeGroup get_RedefinedAttributeGroup()
    // Offset: 0x1109AB8
    ::System::Xml::Schema::XmlSchemaAttributeGroup* get_RedefinedAttributeGroup();
    // System.Xml.Schema.XmlSchemaAttributeGroup get_Redefined()
    // Offset: 0x1109AC0
    ::System::Xml::Schema::XmlSchemaAttributeGroup* get_Redefined();
    // System.Void set_Redefined(System.Xml.Schema.XmlSchemaAttributeGroup value)
    // Offset: 0x1109AC8
    void set_Redefined(::System::Xml::Schema::XmlSchemaAttributeGroup* value);
    // System.Int32 get_SelfReferenceCount()
    // Offset: 0x1109AD0
    int get_SelfReferenceCount();
    // System.Void set_SelfReferenceCount(System.Int32 value)
    // Offset: 0x1109AD8
    void set_SelfReferenceCount(int value);
    // System.Void SetQualifiedName(System.Xml.XmlQualifiedName value)
    // Offset: 0x1109AF0
    void SetQualifiedName(::System::Xml::XmlQualifiedName* value);
    // override System.String get_NameAttribute()
    // Offset: 0x1109AE0
    // Implemented from: System.Xml.Schema.XmlSchemaObject
    // Base method: System.String XmlSchemaObject::get_NameAttribute()
    ::StringW get_NameAttribute();
    // override System.Void set_NameAttribute(System.String value)
    // Offset: 0x1109AE8
    // Implemented from: System.Xml.Schema.XmlSchemaObject
    // Base method: System.Void XmlSchemaObject::set_NameAttribute(System.String value)
    void set_NameAttribute(::StringW value);
    // public System.Void .ctor()
    // Offset: 0x1109FAC
    // Implemented from: System.Xml.Schema.XmlSchemaAnnotated
    // Base method: System.Void XmlSchemaAnnotated::.ctor()
    // Base method: System.Void XmlSchemaObject::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlSchemaAttributeGroup* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaAttributeGroup::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlSchemaAttributeGroup*, creationType>()));
    }
    // override System.Xml.Schema.XmlSchemaObject Clone()
    // Offset: 0x1109AF8
    // Implemented from: System.Xml.Schema.XmlSchemaObject
    // Base method: System.Xml.Schema.XmlSchemaObject XmlSchemaObject::Clone()
    ::System::Xml::Schema::XmlSchemaObject* Clone();
  }; // System.Xml.Schema.XmlSchemaAttributeGroup
  #pragma pack(pop)
  static check_size<sizeof(XmlSchemaAttributeGroup), 136 + sizeof(int)> __System_Xml_Schema_XmlSchemaAttributeGroupSizeCheck;
  static_assert(sizeof(XmlSchemaAttributeGroup) == 0x8C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroup::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Schema::XmlSchemaAttributeGroup::*)()>(&System::Xml::Schema::XmlSchemaAttributeGroup::get_Name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroup*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroup::set_Name
// Il2CppName: set_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaAttributeGroup::*)(::StringW)>(&System::Xml::Schema::XmlSchemaAttributeGroup::set_Name)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroup*), "set_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroup::get_Attributes
// Il2CppName: get_Attributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaObjectCollection* (System::Xml::Schema::XmlSchemaAttributeGroup::*)()>(&System::Xml::Schema::XmlSchemaAttributeGroup::get_Attributes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroup*), "get_Attributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroup::get_AnyAttribute
// Il2CppName: get_AnyAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaAnyAttribute* (System::Xml::Schema::XmlSchemaAttributeGroup::*)()>(&System::Xml::Schema::XmlSchemaAttributeGroup::get_AnyAttribute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroup*), "get_AnyAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroup::set_AnyAttribute
// Il2CppName: set_AnyAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaAttributeGroup::*)(::System::Xml::Schema::XmlSchemaAnyAttribute*)>(&System::Xml::Schema::XmlSchemaAttributeGroup::set_AnyAttribute)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSchemaAnyAttribute")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroup*), "set_AnyAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroup::get_QualifiedName
// Il2CppName: get_QualifiedName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XmlQualifiedName* (System::Xml::Schema::XmlSchemaAttributeGroup::*)()>(&System::Xml::Schema::XmlSchemaAttributeGroup::get_QualifiedName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroup*), "get_QualifiedName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroup::get_AttributeUses
// Il2CppName: get_AttributeUses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaObjectTable* (System::Xml::Schema::XmlSchemaAttributeGroup::*)()>(&System::Xml::Schema::XmlSchemaAttributeGroup::get_AttributeUses)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroup*), "get_AttributeUses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroup::get_AttributeWildcard
// Il2CppName: get_AttributeWildcard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaAnyAttribute* (System::Xml::Schema::XmlSchemaAttributeGroup::*)()>(&System::Xml::Schema::XmlSchemaAttributeGroup::get_AttributeWildcard)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroup*), "get_AttributeWildcard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroup::set_AttributeWildcard
// Il2CppName: set_AttributeWildcard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaAttributeGroup::*)(::System::Xml::Schema::XmlSchemaAnyAttribute*)>(&System::Xml::Schema::XmlSchemaAttributeGroup::set_AttributeWildcard)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSchemaAnyAttribute")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroup*), "set_AttributeWildcard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroup::get_RedefinedAttributeGroup
// Il2CppName: get_RedefinedAttributeGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaAttributeGroup* (System::Xml::Schema::XmlSchemaAttributeGroup::*)()>(&System::Xml::Schema::XmlSchemaAttributeGroup::get_RedefinedAttributeGroup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroup*), "get_RedefinedAttributeGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroup::get_Redefined
// Il2CppName: get_Redefined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaAttributeGroup* (System::Xml::Schema::XmlSchemaAttributeGroup::*)()>(&System::Xml::Schema::XmlSchemaAttributeGroup::get_Redefined)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroup*), "get_Redefined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroup::set_Redefined
// Il2CppName: set_Redefined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaAttributeGroup::*)(::System::Xml::Schema::XmlSchemaAttributeGroup*)>(&System::Xml::Schema::XmlSchemaAttributeGroup::set_Redefined)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSchemaAttributeGroup")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroup*), "set_Redefined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroup::get_SelfReferenceCount
// Il2CppName: get_SelfReferenceCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::Schema::XmlSchemaAttributeGroup::*)()>(&System::Xml::Schema::XmlSchemaAttributeGroup::get_SelfReferenceCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroup*), "get_SelfReferenceCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroup::set_SelfReferenceCount
// Il2CppName: set_SelfReferenceCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaAttributeGroup::*)(int)>(&System::Xml::Schema::XmlSchemaAttributeGroup::set_SelfReferenceCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroup*), "set_SelfReferenceCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroup::SetQualifiedName
// Il2CppName: SetQualifiedName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaAttributeGroup::*)(::System::Xml::XmlQualifiedName*)>(&System::Xml::Schema::XmlSchemaAttributeGroup::SetQualifiedName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlQualifiedName")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroup*), "SetQualifiedName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroup::get_NameAttribute
// Il2CppName: get_NameAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Schema::XmlSchemaAttributeGroup::*)()>(&System::Xml::Schema::XmlSchemaAttributeGroup::get_NameAttribute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroup*), "get_NameAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroup::set_NameAttribute
// Il2CppName: set_NameAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaAttributeGroup::*)(::StringW)>(&System::Xml::Schema::XmlSchemaAttributeGroup::set_NameAttribute)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroup*), "set_NameAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroup::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAttributeGroup::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaObject* (System::Xml::Schema::XmlSchemaAttributeGroup::*)()>(&System::Xml::Schema::XmlSchemaAttributeGroup::Clone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAttributeGroup*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
