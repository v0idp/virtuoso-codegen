// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectTable
#include "System/Xml/Schema/XmlSchemaObjectTable.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XSOEnumerator
#include "System/Xml/Schema/XmlSchemaObjectTable_XSOEnumerator.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: DictionaryEntry
  struct DictionaryEntry;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator*, "System.Xml.Schema", "XmlSchemaObjectTable/XSODictionaryEnumerator");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XSODictionaryEnumerator
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlSchemaObjectTable::XSODictionaryEnumerator : public ::System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator/*, public ::System::Collections::IDictionaryEnumerator*/ {
    public:
    // Creating interface conversion operator: operator ::System::Collections::IDictionaryEnumerator
    operator ::System::Collections::IDictionaryEnumerator() noexcept {
      return *reinterpret_cast<::System::Collections::IDictionaryEnumerator*>(this);
    }
    // public System.Collections.DictionaryEntry get_Entry()
    // Offset: 0xC2198C
    ::System::Collections::DictionaryEntry get_Entry();
    // public System.Object get_Key()
    // Offset: 0xC21ADC
    ::Il2CppObject* get_Key();
    // public System.Object get_Value()
    // Offset: 0xC21C10
    ::Il2CppObject* get_Value();
    // System.Void .ctor(System.Collections.Generic.List`1<System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XmlSchemaObjectEntry> entries, System.Int32 size, System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.EnumeratorType enumType)
    // Offset: 0xC21944
    // Implemented from: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XSOEnumerator
    // Base method: System.Void XSOEnumerator::.ctor(System.Collections.Generic.List`1<System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XmlSchemaObjectEntry> entries, System.Int32 size, System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.EnumeratorType enumType)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlSchemaObjectTable::XSODictionaryEnumerator* New_ctor(::System::Collections::Generic::List_1<::System::Xml::Schema::XmlSchemaObjectTable::XmlSchemaObjectEntry>* entries, int size, ::System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType enumType) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlSchemaObjectTable::XSODictionaryEnumerator*, creationType>(entries, size, enumType)));
    }
  }; // System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XSODictionaryEnumerator
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator::get_Entry
// Il2CppName: get_Entry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::DictionaryEntry (System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator::*)()>(&System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator::get_Entry)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator*), "get_Entry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator::get_Key
// Il2CppName: get_Key
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator::*)()>(&System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator::get_Key)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator*), "get_Key", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator::*)()>(&System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator::get_Value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
