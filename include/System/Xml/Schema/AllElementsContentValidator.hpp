// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Schema.ContentValidator
#include "System/Xml/Schema/ContentValidator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: Hashtable
  class Hashtable;
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Forward declaring namespace: System::Xml::Schema
namespace System::Xml::Schema {
  // Forward declaring type: BitSet
  class BitSet;
  // Forward declaring type: ValidationState
  class ValidationState;
  // Forward declaring type: XmlSchemaSet
  class XmlSchemaSet;
}
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlQualifiedName
  class XmlQualifiedName;
}
// Completed forward declares
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Forward declaring type: AllElementsContentValidator
  class AllElementsContentValidator;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Schema::AllElementsContentValidator);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::AllElementsContentValidator*, "System.Xml.Schema", "AllElementsContentValidator");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0x34
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Schema.AllElementsContentValidator
  // [TokenAttribute] Offset: FFFFFFFF
  class AllElementsContentValidator : public ::System::Xml::Schema::ContentValidator {
    public:
    // Writing base type padding for base size: 0x16 to desired offset: 0x18
    char ___base_padding[0x2] = {};
    public:
    // private System.Collections.Hashtable elements
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Hashtable* elements;
    // Field size check
    static_assert(sizeof(::System::Collections::Hashtable*) == 0x8);
    // private System.Object[] particles
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::Il2CppObject*> particles;
    // Field size check
    static_assert(sizeof(::ArrayW<::Il2CppObject*>) == 0x8);
    // private System.Xml.Schema.BitSet isRequired
    // Size: 0x8
    // Offset: 0x28
    ::System::Xml::Schema::BitSet* isRequired;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::BitSet*) == 0x8);
    // private System.Int32 countRequired
    // Size: 0x4
    // Offset: 0x30
    int countRequired;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: private System.Collections.Hashtable elements
    [[deprecated]] ::System::Collections::Hashtable*& dyn_elements();
    // Get instance field reference: private System.Object[] particles
    [[deprecated]] ::ArrayW<::Il2CppObject*>& dyn_particles();
    // Get instance field reference: private System.Xml.Schema.BitSet isRequired
    [[deprecated]] ::System::Xml::Schema::BitSet*& dyn_isRequired();
    // Get instance field reference: private System.Int32 countRequired
    [[deprecated]] int& dyn_countRequired();
    // public System.Void .ctor(System.Xml.Schema.XmlSchemaContentType contentType, System.Int32 size, System.Boolean isEmptiable)
    // Offset: 0xB5A2C0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AllElementsContentValidator* New_ctor(::System::Xml::Schema::XmlSchemaContentType contentType, int size, bool isEmptiable) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AllElementsContentValidator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AllElementsContentValidator*, creationType>(contentType, size, isEmptiable)));
    }
    // public System.Boolean AddElement(System.Xml.XmlQualifiedName name, System.Object particle, System.Boolean isEmptiable)
    // Offset: 0xB5A444
    bool AddElement(::System::Xml::XmlQualifiedName* name, ::Il2CppObject* particle, bool isEmptiable);
    // public override System.Boolean get_IsEmptiable()
    // Offset: 0xB5A60C
    // Implemented from: System.Xml.Schema.ContentValidator
    // Base method: System.Boolean ContentValidator::get_IsEmptiable()
    bool get_IsEmptiable();
    // public override System.Void InitValidation(System.Xml.Schema.ValidationState context)
    // Offset: 0xB5A62C
    // Implemented from: System.Xml.Schema.ContentValidator
    // Base method: System.Void ContentValidator::InitValidation(System.Xml.Schema.ValidationState context)
    void InitValidation(::System::Xml::Schema::ValidationState* context);
    // public override System.Object ValidateElement(System.Xml.XmlQualifiedName name, System.Xml.Schema.ValidationState context, out System.Int32 errorCode)
    // Offset: 0xB5A6C4
    // Implemented from: System.Xml.Schema.ContentValidator
    // Base method: System.Object ContentValidator::ValidateElement(System.Xml.XmlQualifiedName name, System.Xml.Schema.ValidationState context, out System.Int32 errorCode)
    ::Il2CppObject* ValidateElement(::System::Xml::XmlQualifiedName* name, ::System::Xml::Schema::ValidationState* context, ByRef<int> errorCode);
    // public override System.Boolean CompleteValidation(System.Xml.Schema.ValidationState context)
    // Offset: 0xB5A818
    // Implemented from: System.Xml.Schema.ContentValidator
    // Base method: System.Boolean ContentValidator::CompleteValidation(System.Xml.Schema.ValidationState context)
    bool CompleteValidation(::System::Xml::Schema::ValidationState* context);
    // public override System.Collections.ArrayList ExpectedElements(System.Xml.Schema.ValidationState context, System.Boolean isRequiredOnly)
    // Offset: 0xB5A874
    // Implemented from: System.Xml.Schema.ContentValidator
    // Base method: System.Collections.ArrayList ContentValidator::ExpectedElements(System.Xml.Schema.ValidationState context, System.Boolean isRequiredOnly)
    ::System::Collections::ArrayList* ExpectedElements(::System::Xml::Schema::ValidationState* context, bool isRequiredOnly);
    // public override System.Collections.ArrayList ExpectedParticles(System.Xml.Schema.ValidationState context, System.Boolean isRequiredOnly, System.Xml.Schema.XmlSchemaSet schemaSet)
    // Offset: 0xB5AC50
    // Implemented from: System.Xml.Schema.ContentValidator
    // Base method: System.Collections.ArrayList ContentValidator::ExpectedParticles(System.Xml.Schema.ValidationState context, System.Boolean isRequiredOnly, System.Xml.Schema.XmlSchemaSet schemaSet)
    ::System::Collections::ArrayList* ExpectedParticles(::System::Xml::Schema::ValidationState* context, bool isRequiredOnly, ::System::Xml::Schema::XmlSchemaSet* schemaSet);
  }; // System.Xml.Schema.AllElementsContentValidator
  #pragma pack(pop)
  static check_size<sizeof(AllElementsContentValidator), 48 + sizeof(int)> __System_Xml_Schema_AllElementsContentValidatorSizeCheck;
  static_assert(sizeof(AllElementsContentValidator) == 0x34);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Schema::AllElementsContentValidator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Schema::AllElementsContentValidator::AddElement
// Il2CppName: AddElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Schema::AllElementsContentValidator::*)(::System::Xml::XmlQualifiedName*, ::Il2CppObject*, bool)>(&System::Xml::Schema::AllElementsContentValidator::AddElement)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlQualifiedName")->byval_arg;
    static auto* particle = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* isEmptiable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::AllElementsContentValidator*), "AddElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, particle, isEmptiable});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::AllElementsContentValidator::get_IsEmptiable
// Il2CppName: get_IsEmptiable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Schema::AllElementsContentValidator::*)()>(&System::Xml::Schema::AllElementsContentValidator::get_IsEmptiable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::AllElementsContentValidator*), "get_IsEmptiable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::AllElementsContentValidator::InitValidation
// Il2CppName: InitValidation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::AllElementsContentValidator::*)(::System::Xml::Schema::ValidationState*)>(&System::Xml::Schema::AllElementsContentValidator::InitValidation)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "ValidationState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::AllElementsContentValidator*), "InitValidation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::AllElementsContentValidator::ValidateElement
// Il2CppName: ValidateElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Schema::AllElementsContentValidator::*)(::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::ValidationState*, ByRef<int>)>(&System::Xml::Schema::AllElementsContentValidator::ValidateElement)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlQualifiedName")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "ValidationState")->byval_arg;
    static auto* errorCode = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::AllElementsContentValidator*), "ValidateElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, context, errorCode});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::AllElementsContentValidator::CompleteValidation
// Il2CppName: CompleteValidation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Schema::AllElementsContentValidator::*)(::System::Xml::Schema::ValidationState*)>(&System::Xml::Schema::AllElementsContentValidator::CompleteValidation)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "ValidationState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::AllElementsContentValidator*), "CompleteValidation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::AllElementsContentValidator::ExpectedElements
// Il2CppName: ExpectedElements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::ArrayList* (System::Xml::Schema::AllElementsContentValidator::*)(::System::Xml::Schema::ValidationState*, bool)>(&System::Xml::Schema::AllElementsContentValidator::ExpectedElements)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "ValidationState")->byval_arg;
    static auto* isRequiredOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::AllElementsContentValidator*), "ExpectedElements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, isRequiredOnly});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::AllElementsContentValidator::ExpectedParticles
// Il2CppName: ExpectedParticles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::ArrayList* (System::Xml::Schema::AllElementsContentValidator::*)(::System::Xml::Schema::ValidationState*, bool, ::System::Xml::Schema::XmlSchemaSet*)>(&System::Xml::Schema::AllElementsContentValidator::ExpectedParticles)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "ValidationState")->byval_arg;
    static auto* isRequiredOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* schemaSet = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSchemaSet")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::AllElementsContentValidator*), "ExpectedParticles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, isRequiredOnly, schemaSet});
  }
};
