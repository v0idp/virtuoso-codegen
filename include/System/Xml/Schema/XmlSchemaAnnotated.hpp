// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlSchemaAnnotation
  class XmlSchemaAnnotation;
}
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlAttribute
  class XmlAttribute;
}
// Completed forward declares
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlSchemaAnnotated
  class XmlSchemaAnnotated;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Schema::XmlSchemaAnnotated);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::XmlSchemaAnnotated*, "System.Xml.Schema", "XmlSchemaAnnotated");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Schema.XmlSchemaAnnotated
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlSchemaAnnotated : public ::System::Xml::Schema::XmlSchemaObject {
    public:
    // Writing base type padding for base size: 0x31 to desired offset: 0x38
    char ___base_padding[0x7] = {};
    public:
    // private System.String id
    // Size: 0x8
    // Offset: 0x38
    ::StringW id;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Xml.Schema.XmlSchemaAnnotation annotation
    // Size: 0x8
    // Offset: 0x40
    ::System::Xml::Schema::XmlSchemaAnnotation* annotation;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchemaAnnotation*) == 0x8);
    // private System.Xml.XmlAttribute[] moreAttributes
    // Size: 0x8
    // Offset: 0x48
    ::ArrayW<::System::Xml::XmlAttribute*> moreAttributes;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::Xml::XmlAttribute*>) == 0x8);
    public:
    // Get instance field reference: private System.String id
    [[deprecated]] ::StringW& dyn_id();
    // Get instance field reference: private System.Xml.Schema.XmlSchemaAnnotation annotation
    [[deprecated]] ::System::Xml::Schema::XmlSchemaAnnotation*& dyn_annotation();
    // Get instance field reference: private System.Xml.XmlAttribute[] moreAttributes
    [[deprecated]] ::ArrayW<::System::Xml::XmlAttribute*>& dyn_moreAttributes();
    // public System.String get_Id()
    // Offset: 0x1108AE8
    ::StringW get_Id();
    // public System.Void set_Id(System.String value)
    // Offset: 0x1108AF0
    void set_Id(::StringW value);
    // public System.Xml.Schema.XmlSchemaAnnotation get_Annotation()
    // Offset: 0x1108AF8
    ::System::Xml::Schema::XmlSchemaAnnotation* get_Annotation();
    // public System.Void set_Annotation(System.Xml.Schema.XmlSchemaAnnotation value)
    // Offset: 0x1108B00
    void set_Annotation(::System::Xml::Schema::XmlSchemaAnnotation* value);
    // public System.Xml.XmlAttribute[] get_UnhandledAttributes()
    // Offset: 0x1108B08
    ::ArrayW<::System::Xml::XmlAttribute*> get_UnhandledAttributes();
    // public System.Void set_UnhandledAttributes(System.Xml.XmlAttribute[] value)
    // Offset: 0x1108B10
    void set_UnhandledAttributes(::ArrayW<::System::Xml::XmlAttribute*> value);
    // override System.String get_IdAttribute()
    // Offset: 0x1108B18
    // Implemented from: System.Xml.Schema.XmlSchemaObject
    // Base method: System.String XmlSchemaObject::get_IdAttribute()
    ::StringW get_IdAttribute();
    // override System.Void set_IdAttribute(System.String value)
    // Offset: 0x1108B20
    // Implemented from: System.Xml.Schema.XmlSchemaObject
    // Base method: System.Void XmlSchemaObject::set_IdAttribute(System.String value)
    void set_IdAttribute(::StringW value);
    // public System.Void .ctor()
    // Offset: 0x1108B38
    // Implemented from: System.Xml.Schema.XmlSchemaObject
    // Base method: System.Void XmlSchemaObject::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlSchemaAnnotated* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaAnnotated::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlSchemaAnnotated*, creationType>()));
    }
    // override System.Void SetUnhandledAttributes(System.Xml.XmlAttribute[] moreAttributes)
    // Offset: 0x1108B28
    // Implemented from: System.Xml.Schema.XmlSchemaObject
    // Base method: System.Void XmlSchemaObject::SetUnhandledAttributes(System.Xml.XmlAttribute[] moreAttributes)
    void SetUnhandledAttributes(::ArrayW<::System::Xml::XmlAttribute*> moreAttributes);
    // override System.Void AddAnnotation(System.Xml.Schema.XmlSchemaAnnotation annotation)
    // Offset: 0x1108B30
    // Implemented from: System.Xml.Schema.XmlSchemaObject
    // Base method: System.Void XmlSchemaObject::AddAnnotation(System.Xml.Schema.XmlSchemaAnnotation annotation)
    void AddAnnotation(::System::Xml::Schema::XmlSchemaAnnotation* annotation);
  }; // System.Xml.Schema.XmlSchemaAnnotated
  #pragma pack(pop)
  static check_size<sizeof(XmlSchemaAnnotated), 72 + sizeof(::ArrayW<::System::Xml::XmlAttribute*>)> __System_Xml_Schema_XmlSchemaAnnotatedSizeCheck;
  static_assert(sizeof(XmlSchemaAnnotated) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAnnotated::get_Id
// Il2CppName: get_Id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Schema::XmlSchemaAnnotated::*)()>(&System::Xml::Schema::XmlSchemaAnnotated::get_Id)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAnnotated*), "get_Id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAnnotated::set_Id
// Il2CppName: set_Id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaAnnotated::*)(::StringW)>(&System::Xml::Schema::XmlSchemaAnnotated::set_Id)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAnnotated*), "set_Id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAnnotated::get_Annotation
// Il2CppName: get_Annotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaAnnotation* (System::Xml::Schema::XmlSchemaAnnotated::*)()>(&System::Xml::Schema::XmlSchemaAnnotated::get_Annotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAnnotated*), "get_Annotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAnnotated::set_Annotation
// Il2CppName: set_Annotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaAnnotated::*)(::System::Xml::Schema::XmlSchemaAnnotation*)>(&System::Xml::Schema::XmlSchemaAnnotated::set_Annotation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSchemaAnnotation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAnnotated*), "set_Annotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAnnotated::get_UnhandledAttributes
// Il2CppName: get_UnhandledAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Xml::XmlAttribute*> (System::Xml::Schema::XmlSchemaAnnotated::*)()>(&System::Xml::Schema::XmlSchemaAnnotated::get_UnhandledAttributes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAnnotated*), "get_UnhandledAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAnnotated::set_UnhandledAttributes
// Il2CppName: set_UnhandledAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaAnnotated::*)(::ArrayW<::System::Xml::XmlAttribute*>)>(&System::Xml::Schema::XmlSchemaAnnotated::set_UnhandledAttributes)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Xml", "XmlAttribute"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAnnotated*), "set_UnhandledAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAnnotated::get_IdAttribute
// Il2CppName: get_IdAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Schema::XmlSchemaAnnotated::*)()>(&System::Xml::Schema::XmlSchemaAnnotated::get_IdAttribute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAnnotated*), "get_IdAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAnnotated::set_IdAttribute
// Il2CppName: set_IdAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaAnnotated::*)(::StringW)>(&System::Xml::Schema::XmlSchemaAnnotated::set_IdAttribute)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAnnotated*), "set_IdAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAnnotated::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAnnotated::SetUnhandledAttributes
// Il2CppName: SetUnhandledAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaAnnotated::*)(::ArrayW<::System::Xml::XmlAttribute*>)>(&System::Xml::Schema::XmlSchemaAnnotated::SetUnhandledAttributes)> {
  static const MethodInfo* get() {
    static auto* moreAttributes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Xml", "XmlAttribute"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAnnotated*), "SetUnhandledAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{moreAttributes});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaAnnotated::AddAnnotation
// Il2CppName: AddAnnotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaAnnotated::*)(::System::Xml::Schema::XmlSchemaAnnotation*)>(&System::Xml::Schema::XmlSchemaAnnotated::AddAnnotation)> {
  static const MethodInfo* get() {
    static auto* annotation = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSchemaAnnotation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaAnnotated*), "AddAnnotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{annotation});
  }
};
