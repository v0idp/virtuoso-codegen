// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Schema.XdrBuilder
#include "System/Xml/Schema/XdrBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Schema::XdrBuilder::GroupContent);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::XdrBuilder::GroupContent*, "System.Xml.Schema", "XdrBuilder/GroupContent");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.GroupContent
  // [TokenAttribute] Offset: FFFFFFFF
  class XdrBuilder::GroupContent : public ::Il2CppObject {
    public:
    public:
    // System.UInt32 _MinVal
    // Size: 0x4
    // Offset: 0x10
    uint MinVal;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // System.UInt32 _MaxVal
    // Size: 0x4
    // Offset: 0x14
    uint MaxVal;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // System.Boolean _HasMaxAttr
    // Size: 0x1
    // Offset: 0x18
    bool HasMaxAttr;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Boolean _HasMinAttr
    // Size: 0x1
    // Offset: 0x19
    bool HasMinAttr;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: HasMinAttr and: Order
    char __padding3[0x2] = {};
    // System.Int32 _Order
    // Size: 0x4
    // Offset: 0x1C
    int Order;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: System.UInt32 _MinVal
    [[deprecated("Use field access instead!")]] uint& dyn__MinVal();
    // Get instance field reference: System.UInt32 _MaxVal
    [[deprecated("Use field access instead!")]] uint& dyn__MaxVal();
    // Get instance field reference: System.Boolean _HasMaxAttr
    [[deprecated("Use field access instead!")]] bool& dyn__HasMaxAttr();
    // Get instance field reference: System.Boolean _HasMinAttr
    [[deprecated("Use field access instead!")]] bool& dyn__HasMinAttr();
    // Get instance field reference: System.Int32 _Order
    [[deprecated("Use field access instead!")]] int& dyn__Order();
    // public System.Void .ctor()
    // Offset: 0xC1EF70
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XdrBuilder::GroupContent* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::GroupContent::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XdrBuilder::GroupContent*, creationType>()));
    }
    // static System.Void Copy(System.Xml.Schema.XdrBuilder/System.Xml.Schema.GroupContent from, System.Xml.Schema.XdrBuilder/System.Xml.Schema.GroupContent to)
    // Offset: 0xC1EED4
    static void Copy(::System::Xml::Schema::XdrBuilder::GroupContent* from, ::System::Xml::Schema::XdrBuilder::GroupContent* to);
    // static System.Xml.Schema.XdrBuilder/System.Xml.Schema.GroupContent Copy(System.Xml.Schema.XdrBuilder/System.Xml.Schema.GroupContent other)
    // Offset: 0xC1EF08
    static ::System::Xml::Schema::XdrBuilder::GroupContent* Copy(::System::Xml::Schema::XdrBuilder::GroupContent* other);
  }; // System.Xml.Schema.XdrBuilder/System.Xml.Schema.GroupContent
  #pragma pack(pop)
  static check_size<sizeof(XdrBuilder::GroupContent), 28 + sizeof(int)> __System_Xml_Schema_XdrBuilder_GroupContentSizeCheck;
  static_assert(sizeof(XdrBuilder::GroupContent) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::GroupContent::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::GroupContent::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::Schema::XdrBuilder::GroupContent*, ::System::Xml::Schema::XdrBuilder::GroupContent*)>(&System::Xml::Schema::XdrBuilder::GroupContent::Copy)> {
  static const MethodInfo* get() {
    static auto* from = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder/GroupContent")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder/GroupContent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder::GroupContent*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XdrBuilder::GroupContent::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XdrBuilder::GroupContent* (*)(::System::Xml::Schema::XdrBuilder::GroupContent*)>(&System::Xml::Schema::XdrBuilder::GroupContent::Copy)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XdrBuilder/GroupContent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XdrBuilder::GroupContent*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
