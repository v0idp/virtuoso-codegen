// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnnotated
#include "System/Xml/Schema/XmlSchemaAnnotated.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlSchemaGroupBase
  class XmlSchemaGroupBase;
  // Forward declaring type: XmlSchemaParticle
  class XmlSchemaParticle;
  // Forward declaring type: XmlSchema
  class XmlSchema;
}
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlQualifiedName
  class XmlQualifiedName;
}
// Completed forward declares
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlSchemaGroup
  class XmlSchemaGroup;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Schema::XmlSchemaGroup);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::XmlSchemaGroup*, "System.Xml.Schema", "XmlSchemaGroup");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0x7C
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Schema.XmlSchemaGroup
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlSchemaGroup : public ::System::Xml::Schema::XmlSchemaAnnotated {
    public:
    public:
    // private System.String name
    // Size: 0x8
    // Offset: 0x50
    ::StringW name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Xml.Schema.XmlSchemaGroupBase particle
    // Size: 0x8
    // Offset: 0x58
    ::System::Xml::Schema::XmlSchemaGroupBase* particle;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchemaGroupBase*) == 0x8);
    // private System.Xml.Schema.XmlSchemaParticle canonicalParticle
    // Size: 0x8
    // Offset: 0x60
    ::System::Xml::Schema::XmlSchemaParticle* canonicalParticle;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchemaParticle*) == 0x8);
    // private System.Xml.XmlQualifiedName qname
    // Size: 0x8
    // Offset: 0x68
    ::System::Xml::XmlQualifiedName* qname;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlQualifiedName*) == 0x8);
    // private System.Xml.Schema.XmlSchemaGroup redefined
    // Size: 0x8
    // Offset: 0x70
    ::System::Xml::Schema::XmlSchemaGroup* redefined;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::XmlSchemaGroup*) == 0x8);
    // private System.Int32 selfReferenceCount
    // Size: 0x4
    // Offset: 0x78
    int selfReferenceCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: private System.String name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_name();
    // Get instance field reference: private System.Xml.Schema.XmlSchemaGroupBase particle
    [[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaGroupBase*& dyn_particle();
    // Get instance field reference: private System.Xml.Schema.XmlSchemaParticle canonicalParticle
    [[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaParticle*& dyn_canonicalParticle();
    // Get instance field reference: private System.Xml.XmlQualifiedName qname
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& dyn_qname();
    // Get instance field reference: private System.Xml.Schema.XmlSchemaGroup redefined
    [[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaGroup*& dyn_redefined();
    // Get instance field reference: private System.Int32 selfReferenceCount
    [[deprecated("Use field access instead!")]] int& dyn_selfReferenceCount();
    // public System.String get_Name()
    // Offset: 0x110EF9C
    ::StringW get_Name();
    // public System.Void set_Name(System.String value)
    // Offset: 0x110EFA4
    void set_Name(::StringW value);
    // public System.Xml.Schema.XmlSchemaGroupBase get_Particle()
    // Offset: 0x110EFAC
    ::System::Xml::Schema::XmlSchemaGroupBase* get_Particle();
    // public System.Void set_Particle(System.Xml.Schema.XmlSchemaGroupBase value)
    // Offset: 0x110EFB4
    void set_Particle(::System::Xml::Schema::XmlSchemaGroupBase* value);
    // public System.Xml.XmlQualifiedName get_QualifiedName()
    // Offset: 0x110EFBC
    ::System::Xml::XmlQualifiedName* get_QualifiedName();
    // System.Xml.Schema.XmlSchemaParticle get_CanonicalParticle()
    // Offset: 0x110EFC4
    ::System::Xml::Schema::XmlSchemaParticle* get_CanonicalParticle();
    // System.Void set_CanonicalParticle(System.Xml.Schema.XmlSchemaParticle value)
    // Offset: 0x110EFCC
    void set_CanonicalParticle(::System::Xml::Schema::XmlSchemaParticle* value);
    // System.Xml.Schema.XmlSchemaGroup get_Redefined()
    // Offset: 0x110EFD4
    ::System::Xml::Schema::XmlSchemaGroup* get_Redefined();
    // System.Void set_Redefined(System.Xml.Schema.XmlSchemaGroup value)
    // Offset: 0x110EFDC
    void set_Redefined(::System::Xml::Schema::XmlSchemaGroup* value);
    // System.Int32 get_SelfReferenceCount()
    // Offset: 0x110EFE4
    int get_SelfReferenceCount();
    // System.Void set_SelfReferenceCount(System.Int32 value)
    // Offset: 0x110EFEC
    void set_SelfReferenceCount(int value);
    // System.Void SetQualifiedName(System.Xml.XmlQualifiedName value)
    // Offset: 0x110F004
    void SetQualifiedName(::System::Xml::XmlQualifiedName* value);
    // System.Xml.Schema.XmlSchemaObject Clone(System.Xml.Schema.XmlSchema parentSchema)
    // Offset: 0x11083A8
    ::System::Xml::Schema::XmlSchemaObject* Clone(::System::Xml::Schema::XmlSchema* parentSchema);
    // override System.String get_NameAttribute()
    // Offset: 0x110EFF4
    // Implemented from: System.Xml.Schema.XmlSchemaObject
    // Base method: System.String XmlSchemaObject::get_NameAttribute()
    ::StringW get_NameAttribute();
    // override System.Void set_NameAttribute(System.String value)
    // Offset: 0x110EFFC
    // Implemented from: System.Xml.Schema.XmlSchemaObject
    // Base method: System.Void XmlSchemaObject::set_NameAttribute(System.String value)
    void set_NameAttribute(::StringW value);
    // public System.Void .ctor()
    // Offset: 0x110F014
    // Implemented from: System.Xml.Schema.XmlSchemaAnnotated
    // Base method: System.Void XmlSchemaAnnotated::.ctor()
    // Base method: System.Void XmlSchemaObject::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlSchemaGroup* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlSchemaGroup*, creationType>()));
    }
    // override System.Xml.Schema.XmlSchemaObject Clone()
    // Offset: 0x110F00C
    // Implemented from: System.Xml.Schema.XmlSchemaObject
    // Base method: System.Xml.Schema.XmlSchemaObject XmlSchemaObject::Clone()
    ::System::Xml::Schema::XmlSchemaObject* Clone();
  }; // System.Xml.Schema.XmlSchemaGroup
  #pragma pack(pop)
  static check_size<sizeof(XmlSchemaGroup), 120 + sizeof(int)> __System_Xml_Schema_XmlSchemaGroupSizeCheck;
  static_assert(sizeof(XmlSchemaGroup) == 0x7C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaGroup::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Schema::XmlSchemaGroup::*)()>(&System::Xml::Schema::XmlSchemaGroup::get_Name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaGroup*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaGroup::set_Name
// Il2CppName: set_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaGroup::*)(::StringW)>(&System::Xml::Schema::XmlSchemaGroup::set_Name)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaGroup*), "set_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaGroup::get_Particle
// Il2CppName: get_Particle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaGroupBase* (System::Xml::Schema::XmlSchemaGroup::*)()>(&System::Xml::Schema::XmlSchemaGroup::get_Particle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaGroup*), "get_Particle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaGroup::set_Particle
// Il2CppName: set_Particle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaGroup::*)(::System::Xml::Schema::XmlSchemaGroupBase*)>(&System::Xml::Schema::XmlSchemaGroup::set_Particle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSchemaGroupBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaGroup*), "set_Particle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaGroup::get_QualifiedName
// Il2CppName: get_QualifiedName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XmlQualifiedName* (System::Xml::Schema::XmlSchemaGroup::*)()>(&System::Xml::Schema::XmlSchemaGroup::get_QualifiedName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaGroup*), "get_QualifiedName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaGroup::get_CanonicalParticle
// Il2CppName: get_CanonicalParticle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaParticle* (System::Xml::Schema::XmlSchemaGroup::*)()>(&System::Xml::Schema::XmlSchemaGroup::get_CanonicalParticle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaGroup*), "get_CanonicalParticle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaGroup::set_CanonicalParticle
// Il2CppName: set_CanonicalParticle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaGroup::*)(::System::Xml::Schema::XmlSchemaParticle*)>(&System::Xml::Schema::XmlSchemaGroup::set_CanonicalParticle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSchemaParticle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaGroup*), "set_CanonicalParticle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaGroup::get_Redefined
// Il2CppName: get_Redefined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaGroup* (System::Xml::Schema::XmlSchemaGroup::*)()>(&System::Xml::Schema::XmlSchemaGroup::get_Redefined)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaGroup*), "get_Redefined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaGroup::set_Redefined
// Il2CppName: set_Redefined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaGroup::*)(::System::Xml::Schema::XmlSchemaGroup*)>(&System::Xml::Schema::XmlSchemaGroup::set_Redefined)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSchemaGroup")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaGroup*), "set_Redefined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaGroup::get_SelfReferenceCount
// Il2CppName: get_SelfReferenceCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::Schema::XmlSchemaGroup::*)()>(&System::Xml::Schema::XmlSchemaGroup::get_SelfReferenceCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaGroup*), "get_SelfReferenceCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaGroup::set_SelfReferenceCount
// Il2CppName: set_SelfReferenceCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaGroup::*)(int)>(&System::Xml::Schema::XmlSchemaGroup::set_SelfReferenceCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaGroup*), "set_SelfReferenceCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaGroup::SetQualifiedName
// Il2CppName: SetQualifiedName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaGroup::*)(::System::Xml::XmlQualifiedName*)>(&System::Xml::Schema::XmlSchemaGroup::SetQualifiedName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlQualifiedName")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaGroup*), "SetQualifiedName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaGroup::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaObject* (System::Xml::Schema::XmlSchemaGroup::*)(::System::Xml::Schema::XmlSchema*)>(&System::Xml::Schema::XmlSchemaGroup::Clone)> {
  static const MethodInfo* get() {
    static auto* parentSchema = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSchema")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaGroup*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parentSchema});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaGroup::get_NameAttribute
// Il2CppName: get_NameAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Schema::XmlSchemaGroup::*)()>(&System::Xml::Schema::XmlSchemaGroup::get_NameAttribute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaGroup*), "get_NameAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaGroup::set_NameAttribute
// Il2CppName: set_NameAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaGroup::*)(::StringW)>(&System::Xml::Schema::XmlSchemaGroup::set_NameAttribute)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaGroup*), "set_NameAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaGroup::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaGroup::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaObject* (System::Xml::Schema::XmlSchemaGroup::*)()>(&System::Xml::Schema::XmlSchemaGroup::Clone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaGroup*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
