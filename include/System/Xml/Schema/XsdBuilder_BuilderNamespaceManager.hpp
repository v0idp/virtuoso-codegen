// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Schema.XsdBuilder
#include "System/Xml/Schema/XsdBuilder.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlReader
  class XmlReader;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Schema::XsdBuilder::BuilderNamespaceManager);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::XsdBuilder::BuilderNamespaceManager*, "System.Xml.Schema", "XsdBuilder/BuilderNamespaceManager");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Schema.XsdBuilder/System.Xml.Schema.BuilderNamespaceManager
  // [TokenAttribute] Offset: FFFFFFFF
  class XsdBuilder::BuilderNamespaceManager : public ::System::Xml::XmlNamespaceManager {
    public:
    public:
    // private System.Xml.XmlNamespaceManager nsMgr
    // Size: 0x8
    // Offset: 0x50
    ::System::Xml::XmlNamespaceManager* nsMgr;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlNamespaceManager*) == 0x8);
    // private System.Xml.XmlReader reader
    // Size: 0x8
    // Offset: 0x58
    ::System::Xml::XmlReader* reader;
    // Field size check
    static_assert(sizeof(::System::Xml::XmlReader*) == 0x8);
    public:
    // Get instance field reference: private System.Xml.XmlNamespaceManager nsMgr
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlNamespaceManager*& dyn_nsMgr();
    // Get instance field reference: private System.Xml.XmlReader reader
    [[deprecated("Use field access instead!")]] ::System::Xml::XmlReader*& dyn_reader();
    // public System.Void .ctor(System.Xml.XmlNamespaceManager nsMgr, System.Xml.XmlReader reader)
    // Offset: 0xC25AA0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XsdBuilder::BuilderNamespaceManager* New_ctor(::System::Xml::XmlNamespaceManager* nsMgr, ::System::Xml::XmlReader* reader) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuilderNamespaceManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XsdBuilder::BuilderNamespaceManager*, creationType>(nsMgr, reader)));
    }
    // public override System.String LookupNamespace(System.String prefix)
    // Offset: 0xC25AD8
    // Implemented from: System.Xml.XmlNamespaceManager
    // Base method: System.String XmlNamespaceManager::LookupNamespace(System.String prefix)
    ::StringW LookupNamespace(::StringW prefix);
  }; // System.Xml.Schema.XsdBuilder/System.Xml.Schema.BuilderNamespaceManager
  #pragma pack(pop)
  static check_size<sizeof(XsdBuilder::BuilderNamespaceManager), 88 + sizeof(::System::Xml::XmlReader*)> __System_Xml_Schema_XsdBuilder_BuilderNamespaceManagerSizeCheck;
  static_assert(sizeof(XsdBuilder::BuilderNamespaceManager) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Schema::XsdBuilder::BuilderNamespaceManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Schema::XsdBuilder::BuilderNamespaceManager::LookupNamespace
// Il2CppName: LookupNamespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Schema::XsdBuilder::BuilderNamespaceManager::*)(::StringW)>(&System::Xml::Schema::XsdBuilder::BuilderNamespaceManager::LookupNamespace)> {
  static const MethodInfo* get() {
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XsdBuilder::BuilderNamespaceManager*), "LookupNamespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefix});
  }
};
