// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.XmlTextReaderImpl
#include "System/Xml/XmlTextReaderImpl.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::XmlTextReaderImpl::EntityType, "System.Xml", "XmlTextReaderImpl/EntityType");
// Type namespace: System.Xml
namespace System::Xml {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.XmlTextReaderImpl/System.Xml.EntityType
  // [TokenAttribute] Offset: FFFFFFFF
  struct XmlTextReaderImpl::EntityType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: EntityType
    constexpr EntityType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType CharacterDec
    static constexpr const int CharacterDec = 0;
    // Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType CharacterDec
    static ::System::Xml::XmlTextReaderImpl::EntityType _get_CharacterDec();
    // Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType CharacterDec
    static void _set_CharacterDec(::System::Xml::XmlTextReaderImpl::EntityType value);
    // static field const value: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType CharacterHex
    static constexpr const int CharacterHex = 1;
    // Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType CharacterHex
    static ::System::Xml::XmlTextReaderImpl::EntityType _get_CharacterHex();
    // Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType CharacterHex
    static void _set_CharacterHex(::System::Xml::XmlTextReaderImpl::EntityType value);
    // static field const value: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType CharacterNamed
    static constexpr const int CharacterNamed = 2;
    // Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType CharacterNamed
    static ::System::Xml::XmlTextReaderImpl::EntityType _get_CharacterNamed();
    // Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType CharacterNamed
    static void _set_CharacterNamed(::System::Xml::XmlTextReaderImpl::EntityType value);
    // static field const value: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType Expanded
    static constexpr const int Expanded = 3;
    // Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType Expanded
    static ::System::Xml::XmlTextReaderImpl::EntityType _get_Expanded();
    // Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType Expanded
    static void _set_Expanded(::System::Xml::XmlTextReaderImpl::EntityType value);
    // static field const value: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType Skipped
    static constexpr const int Skipped = 4;
    // Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType Skipped
    static ::System::Xml::XmlTextReaderImpl::EntityType _get_Skipped();
    // Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType Skipped
    static void _set_Skipped(::System::Xml::XmlTextReaderImpl::EntityType value);
    // static field const value: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType FakeExpanded
    static constexpr const int FakeExpanded = 5;
    // Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType FakeExpanded
    static ::System::Xml::XmlTextReaderImpl::EntityType _get_FakeExpanded();
    // Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType FakeExpanded
    static void _set_FakeExpanded(::System::Xml::XmlTextReaderImpl::EntityType value);
    // static field const value: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType Unexpanded
    static constexpr const int Unexpanded = 6;
    // Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType Unexpanded
    static ::System::Xml::XmlTextReaderImpl::EntityType _get_Unexpanded();
    // Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType Unexpanded
    static void _set_Unexpanded(::System::Xml::XmlTextReaderImpl::EntityType value);
    // static field const value: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType ExpandedInAttribute
    static constexpr const int ExpandedInAttribute = 7;
    // Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType ExpandedInAttribute
    static ::System::Xml::XmlTextReaderImpl::EntityType _get_ExpandedInAttribute();
    // Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.EntityType ExpandedInAttribute
    static void _set_ExpandedInAttribute(::System::Xml::XmlTextReaderImpl::EntityType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // System.Xml.XmlTextReaderImpl/System.Xml.EntityType
  #pragma pack(pop)
  static check_size<sizeof(XmlTextReaderImpl::EntityType), 0 + sizeof(int)> __System_Xml_XmlTextReaderImpl_EntityTypeSizeCheck;
  static_assert(sizeof(XmlTextReaderImpl::EntityType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
