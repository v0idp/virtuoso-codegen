// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.PositionInfo
#include "System/Xml/PositionInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Skipping declaration: IXmlLineInfo because it is already included!
}
// Completed forward declares
// Type namespace: System.Xml
namespace System::Xml {
  // Forward declaring type: ReaderPositionInfo
  class ReaderPositionInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::ReaderPositionInfo);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::ReaderPositionInfo*, "System.Xml", "ReaderPositionInfo");
// Type namespace: System.Xml
namespace System::Xml {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.ReaderPositionInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class ReaderPositionInfo : public ::System::Xml::PositionInfo {
    public:
    public:
    // private System.Xml.IXmlLineInfo lineInfo
    // Size: 0x8
    // Offset: 0x10
    ::System::Xml::IXmlLineInfo* lineInfo;
    // Field size check
    static_assert(sizeof(::System::Xml::IXmlLineInfo*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Xml::IXmlLineInfo*
    constexpr operator ::System::Xml::IXmlLineInfo*() const noexcept {
      return lineInfo;
    }
    // Get instance field reference: private System.Xml.IXmlLineInfo lineInfo
    [[deprecated]] ::System::Xml::IXmlLineInfo*& dyn_lineInfo();
    // public System.Void .ctor(System.Xml.IXmlLineInfo lineInfo)
    // Offset: 0xDE7E30
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ReaderPositionInfo* New_ctor(::System::Xml::IXmlLineInfo* lineInfo) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReaderPositionInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ReaderPositionInfo*, creationType>(lineInfo)));
    }
    // public override System.Int32 get_LineNumber()
    // Offset: 0xDE7F08
    // Implemented from: System.Xml.PositionInfo
    // Base method: System.Int32 PositionInfo::get_LineNumber()
    int get_LineNumber();
    // public override System.Int32 get_LinePosition()
    // Offset: 0xDE7FB8
    // Implemented from: System.Xml.PositionInfo
    // Base method: System.Int32 PositionInfo::get_LinePosition()
    int get_LinePosition();
    // public override System.Boolean HasLineInfo()
    // Offset: 0xDE7E5C
    // Implemented from: System.Xml.PositionInfo
    // Base method: System.Boolean PositionInfo::HasLineInfo()
    bool HasLineInfo();
  }; // System.Xml.ReaderPositionInfo
  #pragma pack(pop)
  static check_size<sizeof(ReaderPositionInfo), 16 + sizeof(::System::Xml::IXmlLineInfo*)> __System_Xml_ReaderPositionInfoSizeCheck;
  static_assert(sizeof(ReaderPositionInfo) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::ReaderPositionInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::ReaderPositionInfo::get_LineNumber
// Il2CppName: get_LineNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::ReaderPositionInfo::*)()>(&System::Xml::ReaderPositionInfo::get_LineNumber)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ReaderPositionInfo*), "get_LineNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::ReaderPositionInfo::get_LinePosition
// Il2CppName: get_LinePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::ReaderPositionInfo::*)()>(&System::Xml::ReaderPositionInfo::get_LinePosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ReaderPositionInfo*), "get_LinePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::ReaderPositionInfo::HasLineInfo
// Il2CppName: HasLineInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::ReaderPositionInfo::*)()>(&System::Xml::ReaderPositionInfo::HasLineInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::ReaderPositionInfo*), "HasLineInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
