// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlQualifiedName
  class XmlQualifiedName;
  // Forward declaring type: IDtdAttributeListInfo
  class IDtdAttributeListInfo;
  // Forward declaring type: IDtdEntityInfo
  class IDtdEntityInfo;
}
// Completed forward declares
// Type namespace: System.Xml
namespace System::Xml {
  // Forward declaring type: IDtdInfo
  class IDtdInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::IDtdInfo);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::IDtdInfo*, "System.Xml", "IDtdInfo");
// Type namespace: System.Xml
namespace System::Xml {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.IDtdInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class IDtdInfo {
    public:
    // public System.Xml.XmlQualifiedName get_Name()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Xml::XmlQualifiedName* get_Name();
    // public System.String get_InternalDtdSubset()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_InternalDtdSubset();
    // public System.Boolean get_HasDefaultAttributes()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_HasDefaultAttributes();
    // public System.Boolean get_HasNonCDataAttributes()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_HasNonCDataAttributes();
    // public System.Xml.IDtdAttributeListInfo LookupAttributeList(System.String prefix, System.String localName)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Xml::IDtdAttributeListInfo* LookupAttributeList(::StringW prefix, ::StringW localName);
    // public System.Xml.IDtdEntityInfo LookupEntity(System.String name)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Xml::IDtdEntityInfo* LookupEntity(::StringW name);
  }; // System.Xml.IDtdInfo
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::IDtdInfo::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XmlQualifiedName* (System::Xml::IDtdInfo::*)()>(&System::Xml::IDtdInfo::get_Name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::IDtdInfo*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::IDtdInfo::get_InternalDtdSubset
// Il2CppName: get_InternalDtdSubset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::IDtdInfo::*)()>(&System::Xml::IDtdInfo::get_InternalDtdSubset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::IDtdInfo*), "get_InternalDtdSubset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::IDtdInfo::get_HasDefaultAttributes
// Il2CppName: get_HasDefaultAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::IDtdInfo::*)()>(&System::Xml::IDtdInfo::get_HasDefaultAttributes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::IDtdInfo*), "get_HasDefaultAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::IDtdInfo::get_HasNonCDataAttributes
// Il2CppName: get_HasNonCDataAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::IDtdInfo::*)()>(&System::Xml::IDtdInfo::get_HasNonCDataAttributes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::IDtdInfo*), "get_HasNonCDataAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::IDtdInfo::LookupAttributeList
// Il2CppName: LookupAttributeList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::IDtdAttributeListInfo* (System::Xml::IDtdInfo::*)(::StringW, ::StringW)>(&System::Xml::IDtdInfo::LookupAttributeList)> {
  static const MethodInfo* get() {
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* localName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::IDtdInfo*), "LookupAttributeList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefix, localName});
  }
};
// Writing MetadataGetter for method: System::Xml::IDtdInfo::LookupEntity
// Il2CppName: LookupEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::IDtdEntityInfo* (System::Xml::IDtdInfo::*)(::StringW)>(&System::Xml::IDtdInfo::LookupEntity)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::IDtdInfo*), "LookupEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
