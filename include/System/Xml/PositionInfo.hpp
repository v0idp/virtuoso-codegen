// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.IXmlLineInfo
#include "System/Xml/IXmlLineInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Xml
namespace System::Xml {
  // Forward declaring type: PositionInfo
  class PositionInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::PositionInfo);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::PositionInfo*, "System.Xml", "PositionInfo");
// Type namespace: System.Xml
namespace System::Xml {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.PositionInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class PositionInfo : public ::Il2CppObject/*, public ::System::Xml::IXmlLineInfo*/ {
    public:
    // Creating interface conversion operator: operator ::System::Xml::IXmlLineInfo
    operator ::System::Xml::IXmlLineInfo() noexcept {
      return *reinterpret_cast<::System::Xml::IXmlLineInfo*>(this);
    }
    // public System.Int32 get_LineNumber()
    // Offset: 0xAFC8E0
    int get_LineNumber();
    // public System.Int32 get_LinePosition()
    // Offset: 0xAFC8E8
    int get_LinePosition();
    // public System.Void .ctor()
    // Offset: 0xAFC8F0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PositionInfo* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::PositionInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PositionInfo*, creationType>()));
    }
    // public System.Boolean HasLineInfo()
    // Offset: 0xAFC8D8
    bool HasLineInfo();
    // static public System.Xml.PositionInfo GetPositionInfo(System.Object o)
    // Offset: 0xAF9B44
    static ::System::Xml::PositionInfo* GetPositionInfo(::Il2CppObject* o);
  }; // System.Xml.PositionInfo
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::PositionInfo::get_LineNumber
// Il2CppName: get_LineNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::PositionInfo::*)()>(&System::Xml::PositionInfo::get_LineNumber)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::PositionInfo*), "get_LineNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::PositionInfo::get_LinePosition
// Il2CppName: get_LinePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::PositionInfo::*)()>(&System::Xml::PositionInfo::get_LinePosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::PositionInfo*), "get_LinePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::PositionInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::PositionInfo::HasLineInfo
// Il2CppName: HasLineInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::PositionInfo::*)()>(&System::Xml::PositionInfo::HasLineInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::PositionInfo*), "HasLineInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::PositionInfo::GetPositionInfo
// Il2CppName: GetPositionInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::PositionInfo* (*)(::Il2CppObject*)>(&System::Xml::PositionInfo::GetPositionInfo)> {
  static const MethodInfo* get() {
    static auto* o = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::PositionInfo*), "GetPositionInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{o});
  }
};
