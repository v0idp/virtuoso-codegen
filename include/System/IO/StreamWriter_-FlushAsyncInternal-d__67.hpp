// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IO.StreamWriter
#include "System/IO/StreamWriter.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Runtime.CompilerServices.IAsyncStateMachine
#include "System/Runtime/CompilerServices/IAsyncStateMachine.hpp"
// Including type: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
#include "System/Runtime/CompilerServices/AsyncTaskMethodBuilder.hpp"
// Including type: System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter
#include "System/Runtime/CompilerServices/ConfiguredTaskAwaitable.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
  // Forward declaring type: Encoder
  class Encoder;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::IO::StreamWriter::$FlushAsyncInternal$d__67, "System.IO", "StreamWriter/<FlushAsyncInternal>d__67");
// Type namespace: System.IO
namespace System::IO {
  // WARNING Size may be invalid!
  // Autogenerated type: System.IO.StreamWriter/System.IO.<FlushAsyncInternal>d__67
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: 683580
  struct StreamWriter::$FlushAsyncInternal$d__67/*, public ::System::ValueType, public ::System::Runtime::CompilerServices::IAsyncStateMachine*/ {
    public:
    public:
    // public System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x0
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
    // Size: 0xFFFFFFFF
    // Offset: 0x8
    ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder $$t__builder;
    // public System.Boolean haveWrittenPreamble
    // Size: 0x1
    // Offset: 0x20
    bool haveWrittenPreamble;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.IO.StreamWriter _this
    // Size: 0x8
    // Offset: 0x28
    ::System::IO::StreamWriter* _this;
    // Field size check
    static_assert(sizeof(::System::IO::StreamWriter*) == 0x8);
    // public System.Text.Encoding encoding
    // Size: 0x8
    // Offset: 0x30
    ::System::Text::Encoding* encoding;
    // Field size check
    static_assert(sizeof(::System::Text::Encoding*) == 0x8);
    // public System.IO.Stream stream
    // Size: 0x8
    // Offset: 0x38
    ::System::IO::Stream* stream;
    // Field size check
    static_assert(sizeof(::System::IO::Stream*) == 0x8);
    // public System.Text.Encoder encoder
    // Size: 0x8
    // Offset: 0x40
    ::System::Text::Encoder* encoder;
    // Field size check
    static_assert(sizeof(::System::Text::Encoder*) == 0x8);
    // public System.Char[] charBuffer
    // Size: 0x8
    // Offset: 0x48
    ::ArrayW<::Il2CppChar> charBuffer;
    // Field size check
    static_assert(sizeof(::ArrayW<::Il2CppChar>) == 0x8);
    // public System.Int32 charPos
    // Size: 0x4
    // Offset: 0x50
    int charPos;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Byte[] byteBuffer
    // Size: 0x8
    // Offset: 0x58
    ::ArrayW<uint8_t> byteBuffer;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // public System.Boolean flushEncoder
    // Size: 0x1
    // Offset: 0x60
    bool flushEncoder;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean flushStream
    // Size: 0x1
    // Offset: 0x61
    bool flushStream;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
    // Size: 0x9
    // Offset: 0x68
    ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter $$u__1;
    // Field size check
    static_assert(sizeof(::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter) == 0x9);
    public:
    // Creating value type constructor for type: $FlushAsyncInternal$d__67
    constexpr $FlushAsyncInternal$d__67(int $$1__state_ = {}, ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder $$t__builder_ = {}, bool haveWrittenPreamble_ = {}, ::System::IO::StreamWriter* _this_ = {}, ::System::Text::Encoding* encoding_ = {}, ::System::IO::Stream* stream_ = {}, ::System::Text::Encoder* encoder_ = {}, ::ArrayW<::Il2CppChar> charBuffer_ = ::ArrayW<::Il2CppChar>(static_cast<void*>(nullptr)), int charPos_ = {}, ::ArrayW<uint8_t> byteBuffer_ = ::ArrayW<uint8_t>(static_cast<void*>(nullptr)), bool flushEncoder_ = {}, bool flushStream_ = {}, ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter $$u__1_ = {}) noexcept : $$1__state{$$1__state_}, $$t__builder{$$t__builder_}, haveWrittenPreamble{haveWrittenPreamble_}, _this{_this_}, encoding{encoding_}, stream{stream_}, encoder{encoder_}, charBuffer{charBuffer_}, charPos{charPos_}, byteBuffer{byteBuffer_}, flushEncoder{flushEncoder_}, flushStream{flushStream_}, $$u__1{$$u__1_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::Runtime::CompilerServices::IAsyncStateMachine
    operator ::System::Runtime::CompilerServices::IAsyncStateMachine() noexcept {
      return *reinterpret_cast<::System::Runtime::CompilerServices::IAsyncStateMachine*>(this);
    }
    // Get instance field reference: public System.Int32 <>1__state
    [[deprecated]] int& dyn_$$1__state();
    // Get instance field reference: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
    [[deprecated]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& dyn_$$t__builder();
    // Get instance field reference: public System.Boolean haveWrittenPreamble
    [[deprecated]] bool& dyn_haveWrittenPreamble();
    // Get instance field reference: public System.IO.StreamWriter _this
    [[deprecated]] ::System::IO::StreamWriter*& dyn__this();
    // Get instance field reference: public System.Text.Encoding encoding
    [[deprecated]] ::System::Text::Encoding*& dyn_encoding();
    // Get instance field reference: public System.IO.Stream stream
    [[deprecated]] ::System::IO::Stream*& dyn_stream();
    // Get instance field reference: public System.Text.Encoder encoder
    [[deprecated]] ::System::Text::Encoder*& dyn_encoder();
    // Get instance field reference: public System.Char[] charBuffer
    [[deprecated]] ::ArrayW<::Il2CppChar>& dyn_charBuffer();
    // Get instance field reference: public System.Int32 charPos
    [[deprecated]] int& dyn_charPos();
    // Get instance field reference: public System.Byte[] byteBuffer
    [[deprecated]] ::ArrayW<uint8_t>& dyn_byteBuffer();
    // Get instance field reference: public System.Boolean flushEncoder
    [[deprecated]] bool& dyn_flushEncoder();
    // Get instance field reference: public System.Boolean flushStream
    [[deprecated]] bool& dyn_flushStream();
    // Get instance field reference: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
    [[deprecated]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& dyn_$$u__1();
    // private System.Void MoveNext()
    // Offset: 0xE5DC38
    void MoveNext();
    // private System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)
    // Offset: 0xE5DFD4
    void SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine);
  }; // System.IO.StreamWriter/System.IO.<FlushAsyncInternal>d__67
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::IO::StreamWriter::$FlushAsyncInternal$d__67::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::IO::StreamWriter::$FlushAsyncInternal$d__67::*)()>(&System::IO::StreamWriter::$FlushAsyncInternal$d__67::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::StreamWriter::$FlushAsyncInternal$d__67), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::StreamWriter::$FlushAsyncInternal$d__67::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::IO::StreamWriter::$FlushAsyncInternal$d__67::*)(::System::Runtime::CompilerServices::IAsyncStateMachine*)>(&System::IO::StreamWriter::$FlushAsyncInternal$d__67::SetStateMachine)> {
  static const MethodInfo* get() {
    static auto* stateMachine = &::il2cpp_utils::GetClassFromName("System.Runtime.CompilerServices", "IAsyncStateMachine")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::StreamWriter::$FlushAsyncInternal$d__67), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateMachine});
  }
};
