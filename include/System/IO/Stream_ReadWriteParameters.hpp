// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::IO::Stream::ReadWriteParameters, "System.IO", "Stream/ReadWriteParameters");
// Type namespace: System.IO
namespace System::IO {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.IO.Stream/System.IO.ReadWriteParameters
  // [TokenAttribute] Offset: FFFFFFFF
  struct Stream::ReadWriteParameters/*, public ::System::ValueType*/ {
    public:
    public:
    // System.Byte[] Buffer
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<uint8_t> Buffer;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // System.Int32 Offset
    // Size: 0x4
    // Offset: 0x8
    int Offset;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 Count
    // Size: 0x4
    // Offset: 0xC
    int Count;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ReadWriteParameters
    constexpr ReadWriteParameters(::ArrayW<uint8_t> Buffer_ = ::ArrayW<uint8_t>(static_cast<void*>(nullptr)), int Offset_ = {}, int Count_ = {}) noexcept : Buffer{Buffer_}, Offset{Offset_}, Count{Count_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: System.Byte[] Buffer
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_Buffer();
    // Get instance field reference: System.Int32 Offset
    [[deprecated("Use field access instead!")]] int& dyn_Offset();
    // Get instance field reference: System.Int32 Count
    [[deprecated("Use field access instead!")]] int& dyn_Count();
  }; // System.IO.Stream/System.IO.ReadWriteParameters
  #pragma pack(pop)
  static check_size<sizeof(Stream::ReadWriteParameters), 12 + sizeof(int)> __System_IO_Stream_ReadWriteParametersSizeCheck;
  static_assert(sizeof(Stream::ReadWriteParameters) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
