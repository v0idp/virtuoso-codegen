// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IO.Compression.CompressionLevel
#include "System/IO/Compression/CompressionLevel.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO::Compression
namespace System::IO::Compression {
  // Forward declaring type: ZipArchive
  class ZipArchive;
  // Forward declaring type: ZipArchiveEntry
  class ZipArchiveEntry;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
}
// Completed forward declares
// Type namespace: System.IO.Compression
namespace System::IO::Compression {
  // Forward declaring type: ZipFileExtensions
  class ZipFileExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::IO::Compression::ZipFileExtensions);
DEFINE_IL2CPP_ARG_TYPE(::System::IO::Compression::ZipFileExtensions*, "System.IO.Compression", "ZipFileExtensions");
// Type namespace: System.IO.Compression
namespace System::IO::Compression {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.IO.Compression.ZipFileExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  // [EditorBrowsableAttribute] Offset: 701730
  class ZipFileExtensions : public ::Il2CppObject {
    public:
    // static public System.Void ExtractToDirectory(System.IO.Compression.ZipArchive source, System.String destinationDirectoryName, System.Boolean overwrite)
    // Offset: 0x18F5E50
    static void ExtractToDirectory(::System::IO::Compression::ZipArchive* source, ::StringW destinationDirectoryName, bool overwrite);
    // static System.IO.Compression.ZipArchiveEntry DoCreateEntryFromFile(System.IO.Compression.ZipArchive destination, System.String sourceFileName, System.String entryName, System.Nullable`1<System.IO.Compression.CompressionLevel> compressionLevel)
    // Offset: 0x18F6604
    static ::System::IO::Compression::ZipArchiveEntry* DoCreateEntryFromFile(::System::IO::Compression::ZipArchive* destination, ::StringW sourceFileName, ::StringW entryName, ::System::Nullable_1<::System::IO::Compression::CompressionLevel> compressionLevel);
    // static public System.Void ExtractToFile(System.IO.Compression.ZipArchiveEntry source, System.String destinationFileName, System.Boolean overwrite)
    // Offset: 0x18F6E78
    static void ExtractToFile(::System::IO::Compression::ZipArchiveEntry* source, ::StringW destinationFileName, bool overwrite);
  }; // System.IO.Compression.ZipFileExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::IO::Compression::ZipFileExtensions::ExtractToDirectory
// Il2CppName: ExtractToDirectory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IO::Compression::ZipArchive*, ::StringW, bool)>(&System::IO::Compression::ZipFileExtensions::ExtractToDirectory)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System.IO.Compression", "ZipArchive")->byval_arg;
    static auto* destinationDirectoryName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* overwrite = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::ZipFileExtensions*), "ExtractToDirectory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, destinationDirectoryName, overwrite});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::ZipFileExtensions::DoCreateEntryFromFile
// Il2CppName: DoCreateEntryFromFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::Compression::ZipArchiveEntry* (*)(::System::IO::Compression::ZipArchive*, ::StringW, ::StringW, ::System::Nullable_1<::System::IO::Compression::CompressionLevel>)>(&System::IO::Compression::ZipFileExtensions::DoCreateEntryFromFile)> {
  static const MethodInfo* get() {
    static auto* destination = &::il2cpp_utils::GetClassFromName("System.IO.Compression", "ZipArchive")->byval_arg;
    static auto* sourceFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* entryName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* compressionLevel = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System.IO.Compression", "CompressionLevel")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::ZipFileExtensions*), "DoCreateEntryFromFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destination, sourceFileName, entryName, compressionLevel});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::ZipFileExtensions::ExtractToFile
// Il2CppName: ExtractToFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IO::Compression::ZipArchiveEntry*, ::StringW, bool)>(&System::IO::Compression::ZipFileExtensions::ExtractToFile)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System.IO.Compression", "ZipArchiveEntry")->byval_arg;
    static auto* destinationFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* overwrite = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::ZipFileExtensions*), "ExtractToFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, destinationFileName, overwrite});
  }
};
