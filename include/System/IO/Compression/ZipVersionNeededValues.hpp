// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System.IO.Compression
namespace System::IO::Compression {
  // Forward declaring type: ZipVersionNeededValues
  struct ZipVersionNeededValues;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::IO::Compression::ZipVersionNeededValues, "System.IO.Compression", "ZipVersionNeededValues");
// Type namespace: System.IO.Compression
namespace System::IO::Compression {
  // Size: 0x2
  #pragma pack(push, 1)
  // Autogenerated type: System.IO.Compression.ZipVersionNeededValues
  // [TokenAttribute] Offset: FFFFFFFF
  struct ZipVersionNeededValues/*, public ::System::Enum*/ {
    public:
    public:
    // public System.UInt16 value__
    // Size: 0x2
    // Offset: 0x0
    uint16_t value;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    public:
    // Creating value type constructor for type: ZipVersionNeededValues
    constexpr ZipVersionNeededValues(uint16_t value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator uint16_t
    constexpr operator uint16_t() const noexcept {
      return value;
    }
    // static field const value: static public System.IO.Compression.ZipVersionNeededValues Default
    static constexpr const uint16_t Default = 10u;
    // Get static field: static public System.IO.Compression.ZipVersionNeededValues Default
    static ::System::IO::Compression::ZipVersionNeededValues _get_Default();
    // Set static field: static public System.IO.Compression.ZipVersionNeededValues Default
    static void _set_Default(::System::IO::Compression::ZipVersionNeededValues value);
    // static field const value: static public System.IO.Compression.ZipVersionNeededValues ExplicitDirectory
    static constexpr const uint16_t ExplicitDirectory = 20u;
    // Get static field: static public System.IO.Compression.ZipVersionNeededValues ExplicitDirectory
    static ::System::IO::Compression::ZipVersionNeededValues _get_ExplicitDirectory();
    // Set static field: static public System.IO.Compression.ZipVersionNeededValues ExplicitDirectory
    static void _set_ExplicitDirectory(::System::IO::Compression::ZipVersionNeededValues value);
    // static field const value: static public System.IO.Compression.ZipVersionNeededValues Deflate
    static constexpr const uint16_t Deflate = 20u;
    // Get static field: static public System.IO.Compression.ZipVersionNeededValues Deflate
    static ::System::IO::Compression::ZipVersionNeededValues _get_Deflate();
    // Set static field: static public System.IO.Compression.ZipVersionNeededValues Deflate
    static void _set_Deflate(::System::IO::Compression::ZipVersionNeededValues value);
    // static field const value: static public System.IO.Compression.ZipVersionNeededValues Deflate64
    static constexpr const uint16_t Deflate64 = 21u;
    // Get static field: static public System.IO.Compression.ZipVersionNeededValues Deflate64
    static ::System::IO::Compression::ZipVersionNeededValues _get_Deflate64();
    // Set static field: static public System.IO.Compression.ZipVersionNeededValues Deflate64
    static void _set_Deflate64(::System::IO::Compression::ZipVersionNeededValues value);
    // static field const value: static public System.IO.Compression.ZipVersionNeededValues Zip64
    static constexpr const uint16_t Zip64 = 45u;
    // Get static field: static public System.IO.Compression.ZipVersionNeededValues Zip64
    static ::System::IO::Compression::ZipVersionNeededValues _get_Zip64();
    // Set static field: static public System.IO.Compression.ZipVersionNeededValues Zip64
    static void _set_Zip64(::System::IO::Compression::ZipVersionNeededValues value);
    // Get instance field reference: public System.UInt16 value__
    uint16_t& dyn_value__();
  }; // System.IO.Compression.ZipVersionNeededValues
  #pragma pack(pop)
  static check_size<sizeof(ZipVersionNeededValues), 0 + sizeof(uint16_t)> __System_IO_Compression_ZipVersionNeededValuesSizeCheck;
  static_assert(sizeof(ZipVersionNeededValues) == 0x2);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
