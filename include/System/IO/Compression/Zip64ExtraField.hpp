// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.IO.Compression.ZipGenericExtraField
#include "System/IO/Compression/ZipGenericExtraField.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: System.IO.Compression
namespace System::IO::Compression {
  // Forward declaring type: Zip64ExtraField
  struct Zip64ExtraField;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::IO::Compression::Zip64ExtraField, "System.IO.Compression", "Zip64ExtraField");
// Type namespace: System.IO.Compression
namespace System::IO::Compression {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.IO.Compression.Zip64ExtraField
  // [TokenAttribute] Offset: FFFFFFFF
  struct Zip64ExtraField/*, public ::System::ValueType*/ {
    public:
    public:
    // private System.UInt16 _size
    // Size: 0x2
    // Offset: 0x0
    uint16_t size;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // private System.Nullable`1<System.Int64> _uncompressedSize
    // Size: 0xFFFFFFFF
    // Offset: 0x8
    ::System::Nullable_1<int64_t> uncompressedSize;
    // private System.Nullable`1<System.Int64> _compressedSize
    // Size: 0xFFFFFFFF
    // Offset: 0x18
    ::System::Nullable_1<int64_t> compressedSize;
    // private System.Nullable`1<System.Int64> _localHeaderOffset
    // Size: 0xFFFFFFFF
    // Offset: 0x28
    ::System::Nullable_1<int64_t> localHeaderOffset;
    // private System.Nullable`1<System.Int32> _startDiskNumber
    // Size: 0xFFFFFFFF
    // Offset: 0x38
    ::System::Nullable_1<int> startDiskNumber;
    public:
    // Creating value type constructor for type: Zip64ExtraField
    constexpr Zip64ExtraField(uint16_t size_ = {}, ::System::Nullable_1<int64_t> uncompressedSize_ = {}, ::System::Nullable_1<int64_t> compressedSize_ = {}, ::System::Nullable_1<int64_t> localHeaderOffset_ = {}, ::System::Nullable_1<int> startDiskNumber_ = {}) noexcept : size{size_}, uncompressedSize{uncompressedSize_}, compressedSize{compressedSize_}, localHeaderOffset{localHeaderOffset_}, startDiskNumber{startDiskNumber_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: private System.UInt16 _size
    [[deprecated("Use field access instead!")]] uint16_t& dyn__size();
    // Get instance field reference: private System.Nullable`1<System.Int64> _uncompressedSize
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& dyn__uncompressedSize();
    // Get instance field reference: private System.Nullable`1<System.Int64> _compressedSize
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& dyn__compressedSize();
    // Get instance field reference: private System.Nullable`1<System.Int64> _localHeaderOffset
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& dyn__localHeaderOffset();
    // Get instance field reference: private System.Nullable`1<System.Int32> _startDiskNumber
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& dyn__startDiskNumber();
    // public System.UInt16 get_TotalSize()
    // Offset: 0x1699EE4
    uint16_t get_TotalSize();
    // public System.Nullable`1<System.Int64> get_UncompressedSize()
    // Offset: 0x1699EF0
    ::System::Nullable_1<int64_t> get_UncompressedSize();
    // public System.Void set_UncompressedSize(System.Nullable`1<System.Int64> value)
    // Offset: 0x1699EFC
    void set_UncompressedSize(::System::Nullable_1<int64_t> value);
    // public System.Nullable`1<System.Int64> get_CompressedSize()
    // Offset: 0x1699F90
    ::System::Nullable_1<int64_t> get_CompressedSize();
    // public System.Void set_CompressedSize(System.Nullable`1<System.Int64> value)
    // Offset: 0x1699F9C
    void set_CompressedSize(::System::Nullable_1<int64_t> value);
    // public System.Nullable`1<System.Int64> get_LocalHeaderOffset()
    // Offset: 0x1699FA4
    ::System::Nullable_1<int64_t> get_LocalHeaderOffset();
    // public System.Void set_LocalHeaderOffset(System.Nullable`1<System.Int64> value)
    // Offset: 0x1699FB0
    void set_LocalHeaderOffset(::System::Nullable_1<int64_t> value);
    // public System.Nullable`1<System.Int32> get_StartDiskNumber()
    // Offset: 0x1699FB8
    ::System::Nullable_1<int> get_StartDiskNumber();
    // private System.Void UpdateSize()
    // Offset: 0x1699F04
    void UpdateSize();
    // static public System.IO.Compression.Zip64ExtraField GetJustZip64Block(System.IO.Stream extraFieldStream, System.Boolean readUncompressedSize, System.Boolean readCompressedSize, System.Boolean readLocalHeaderOffset, System.Boolean readStartDiskNumber)
    // Offset: 0x1699FC0
    static ::System::IO::Compression::Zip64ExtraField GetJustZip64Block(::System::IO::Stream* extraFieldStream, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber);
    // static private System.Boolean TryGetZip64BlockFromGenericExtraField(System.IO.Compression.ZipGenericExtraField extraField, System.Boolean readUncompressedSize, System.Boolean readCompressedSize, System.Boolean readLocalHeaderOffset, System.Boolean readStartDiskNumber, out System.IO.Compression.Zip64ExtraField zip64Block)
    // Offset: 0x169A208
    static bool TryGetZip64BlockFromGenericExtraField(::System::IO::Compression::ZipGenericExtraField extraField, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber, ByRef<::System::IO::Compression::Zip64ExtraField> zip64Block);
    // static public System.IO.Compression.Zip64ExtraField GetAndRemoveZip64Block(System.Collections.Generic.List`1<System.IO.Compression.ZipGenericExtraField> extraFields, System.Boolean readUncompressedSize, System.Boolean readCompressedSize, System.Boolean readLocalHeaderOffset, System.Boolean readStartDiskNumber)
    // Offset: 0x169A874
    static ::System::IO::Compression::Zip64ExtraField GetAndRemoveZip64Block(::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* extraFields, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber);
    // static public System.Void RemoveZip64Blocks(System.Collections.Generic.List`1<System.IO.Compression.ZipGenericExtraField> extraFields)
    // Offset: 0x169ABA8
    static void RemoveZip64Blocks(::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* extraFields);
    // public System.Void WriteBlock(System.IO.Stream stream)
    // Offset: 0x169AE28
    void WriteBlock(::System::IO::Stream* stream);
  }; // System.IO.Compression.Zip64ExtraField
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::IO::Compression::Zip64ExtraField::get_TotalSize
// Il2CppName: get_TotalSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint16_t (System::IO::Compression::Zip64ExtraField::*)()>(&System::IO::Compression::Zip64ExtraField::get_TotalSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::Zip64ExtraField), "get_TotalSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::Zip64ExtraField::get_UncompressedSize
// Il2CppName: get_UncompressedSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<int64_t> (System::IO::Compression::Zip64ExtraField::*)()>(&System::IO::Compression::Zip64ExtraField::get_UncompressedSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::Zip64ExtraField), "get_UncompressedSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::Zip64ExtraField::set_UncompressedSize
// Il2CppName: set_UncompressedSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::IO::Compression::Zip64ExtraField::*)(::System::Nullable_1<int64_t>)>(&System::IO::Compression::Zip64ExtraField::set_UncompressedSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int64")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::Zip64ExtraField), "set_UncompressedSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::Zip64ExtraField::get_CompressedSize
// Il2CppName: get_CompressedSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<int64_t> (System::IO::Compression::Zip64ExtraField::*)()>(&System::IO::Compression::Zip64ExtraField::get_CompressedSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::Zip64ExtraField), "get_CompressedSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::Zip64ExtraField::set_CompressedSize
// Il2CppName: set_CompressedSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::IO::Compression::Zip64ExtraField::*)(::System::Nullable_1<int64_t>)>(&System::IO::Compression::Zip64ExtraField::set_CompressedSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int64")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::Zip64ExtraField), "set_CompressedSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::Zip64ExtraField::get_LocalHeaderOffset
// Il2CppName: get_LocalHeaderOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<int64_t> (System::IO::Compression::Zip64ExtraField::*)()>(&System::IO::Compression::Zip64ExtraField::get_LocalHeaderOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::Zip64ExtraField), "get_LocalHeaderOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::Zip64ExtraField::set_LocalHeaderOffset
// Il2CppName: set_LocalHeaderOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::IO::Compression::Zip64ExtraField::*)(::System::Nullable_1<int64_t>)>(&System::IO::Compression::Zip64ExtraField::set_LocalHeaderOffset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int64")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::Zip64ExtraField), "set_LocalHeaderOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::Zip64ExtraField::get_StartDiskNumber
// Il2CppName: get_StartDiskNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<int> (System::IO::Compression::Zip64ExtraField::*)()>(&System::IO::Compression::Zip64ExtraField::get_StartDiskNumber)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::Zip64ExtraField), "get_StartDiskNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::Zip64ExtraField::UpdateSize
// Il2CppName: UpdateSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::IO::Compression::Zip64ExtraField::*)()>(&System::IO::Compression::Zip64ExtraField::UpdateSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::Zip64ExtraField), "UpdateSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::Zip64ExtraField::GetJustZip64Block
// Il2CppName: GetJustZip64Block
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::Compression::Zip64ExtraField (*)(::System::IO::Stream*, bool, bool, bool, bool)>(&System::IO::Compression::Zip64ExtraField::GetJustZip64Block)> {
  static const MethodInfo* get() {
    static auto* extraFieldStream = &::il2cpp_utils::GetClassFromName("System.IO", "Stream")->byval_arg;
    static auto* readUncompressedSize = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* readCompressedSize = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* readLocalHeaderOffset = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* readStartDiskNumber = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::Zip64ExtraField), "GetJustZip64Block", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{extraFieldStream, readUncompressedSize, readCompressedSize, readLocalHeaderOffset, readStartDiskNumber});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::Zip64ExtraField::TryGetZip64BlockFromGenericExtraField
// Il2CppName: TryGetZip64BlockFromGenericExtraField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IO::Compression::ZipGenericExtraField, bool, bool, bool, bool, ByRef<::System::IO::Compression::Zip64ExtraField>)>(&System::IO::Compression::Zip64ExtraField::TryGetZip64BlockFromGenericExtraField)> {
  static const MethodInfo* get() {
    static auto* extraField = &::il2cpp_utils::GetClassFromName("System.IO.Compression", "ZipGenericExtraField")->byval_arg;
    static auto* readUncompressedSize = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* readCompressedSize = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* readLocalHeaderOffset = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* readStartDiskNumber = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* zip64Block = &::il2cpp_utils::GetClassFromName("System.IO.Compression", "Zip64ExtraField")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::Zip64ExtraField), "TryGetZip64BlockFromGenericExtraField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{extraField, readUncompressedSize, readCompressedSize, readLocalHeaderOffset, readStartDiskNumber, zip64Block});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::Zip64ExtraField::GetAndRemoveZip64Block
// Il2CppName: GetAndRemoveZip64Block
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::Compression::Zip64ExtraField (*)(::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>*, bool, bool, bool, bool)>(&System::IO::Compression::Zip64ExtraField::GetAndRemoveZip64Block)> {
  static const MethodInfo* get() {
    static auto* extraFields = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System.IO.Compression", "ZipGenericExtraField")})->byval_arg;
    static auto* readUncompressedSize = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* readCompressedSize = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* readLocalHeaderOffset = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* readStartDiskNumber = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::Zip64ExtraField), "GetAndRemoveZip64Block", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{extraFields, readUncompressedSize, readCompressedSize, readLocalHeaderOffset, readStartDiskNumber});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::Zip64ExtraField::RemoveZip64Blocks
// Il2CppName: RemoveZip64Blocks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>*)>(&System::IO::Compression::Zip64ExtraField::RemoveZip64Blocks)> {
  static const MethodInfo* get() {
    static auto* extraFields = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System.IO.Compression", "ZipGenericExtraField")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::Zip64ExtraField), "RemoveZip64Blocks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{extraFields});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::Zip64ExtraField::WriteBlock
// Il2CppName: WriteBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::IO::Compression::Zip64ExtraField::*)(::System::IO::Stream*)>(&System::IO::Compression::Zip64ExtraField::WriteBlock)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("System.IO", "Stream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::Zip64ExtraField), "WriteBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
