// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: System.IO.Compression
namespace System::IO::Compression {
  // Forward declaring type: FastEncoderStatics
  class FastEncoderStatics;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::IO::Compression::FastEncoderStatics);
DEFINE_IL2CPP_ARG_TYPE(::System::IO::Compression::FastEncoderStatics*, "System.IO.Compression", "FastEncoderStatics");
// Type namespace: System.IO.Compression
namespace System::IO::Compression {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.IO.Compression.FastEncoderStatics
  // [TokenAttribute] Offset: FFFFFFFF
  class FastEncoderStatics : public ::Il2CppObject {
    public:
    // Get static field: static readonly System.Byte[] FastEncoderTreeStructureData
    static ::ArrayW<uint8_t> _get_FastEncoderTreeStructureData();
    // Set static field: static readonly System.Byte[] FastEncoderTreeStructureData
    static void _set_FastEncoderTreeStructureData(::ArrayW<uint8_t> value);
    // Get static field: static readonly System.Byte[] BFinalFastEncoderTreeStructureData
    static ::ArrayW<uint8_t> _get_BFinalFastEncoderTreeStructureData();
    // Set static field: static readonly System.Byte[] BFinalFastEncoderTreeStructureData
    static void _set_BFinalFastEncoderTreeStructureData(::ArrayW<uint8_t> value);
    // Get static field: static readonly System.UInt32[] FastEncoderLiteralCodeInfo
    static ::ArrayW<uint> _get_FastEncoderLiteralCodeInfo();
    // Set static field: static readonly System.UInt32[] FastEncoderLiteralCodeInfo
    static void _set_FastEncoderLiteralCodeInfo(::ArrayW<uint> value);
    // Get static field: static readonly System.UInt32[] FastEncoderDistanceCodeInfo
    static ::ArrayW<uint> _get_FastEncoderDistanceCodeInfo();
    // Set static field: static readonly System.UInt32[] FastEncoderDistanceCodeInfo
    static void _set_FastEncoderDistanceCodeInfo(::ArrayW<uint> value);
    // Get static field: static readonly System.UInt32[] BitMask
    static ::ArrayW<uint> _get_BitMask();
    // Set static field: static readonly System.UInt32[] BitMask
    static void _set_BitMask(::ArrayW<uint> value);
    // Get static field: static readonly System.Byte[] ExtraLengthBits
    static ::ArrayW<uint8_t> _get_ExtraLengthBits();
    // Set static field: static readonly System.Byte[] ExtraLengthBits
    static void _set_ExtraLengthBits(::ArrayW<uint8_t> value);
    // Get static field: static readonly System.Byte[] ExtraDistanceBits
    static ::ArrayW<uint8_t> _get_ExtraDistanceBits();
    // Set static field: static readonly System.Byte[] ExtraDistanceBits
    static void _set_ExtraDistanceBits(::ArrayW<uint8_t> value);
    // Get static field: static private readonly System.Byte[] s_distLookup
    static ::ArrayW<uint8_t> _get_s_distLookup();
    // Set static field: static private readonly System.Byte[] s_distLookup
    static void _set_s_distLookup(::ArrayW<uint8_t> value);
    // static private System.Void .cctor()
    // Offset: 0x1695EE0
    static void _cctor();
    // static private System.Byte[] CreateDistanceLookup()
    // Offset: 0x1695D04
    static ::ArrayW<uint8_t> CreateDistanceLookup();
    // static System.Int32 GetSlot(System.Int32 pos)
    // Offset: 0x1695C64
    static int GetSlot(int pos);
    // static public System.UInt32 BitReverse(System.UInt32 code, System.Int32 length)
    // Offset: 0x1695EB8
    static uint BitReverse(uint code, int length);
  }; // System.IO.Compression.FastEncoderStatics
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::IO::Compression::FastEncoderStatics::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::IO::Compression::FastEncoderStatics::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::FastEncoderStatics*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::FastEncoderStatics::CreateDistanceLookup
// Il2CppName: CreateDistanceLookup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)()>(&System::IO::Compression::FastEncoderStatics::CreateDistanceLookup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::FastEncoderStatics*), "CreateDistanceLookup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::FastEncoderStatics::GetSlot
// Il2CppName: GetSlot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&System::IO::Compression::FastEncoderStatics::GetSlot)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::FastEncoderStatics*), "GetSlot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::FastEncoderStatics::BitReverse
// Il2CppName: BitReverse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, int)>(&System::IO::Compression::FastEncoderStatics::BitReverse)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::FastEncoderStatics*), "BitReverse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code, length});
  }
};
