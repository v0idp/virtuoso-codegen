// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: System.IO.Compression
namespace System::IO::Compression {
  // Forward declaring type: Crc32Helper
  class Crc32Helper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::IO::Compression::Crc32Helper);
DEFINE_IL2CPP_ARG_TYPE(::System::IO::Compression::Crc32Helper*, "System.IO.Compression", "Crc32Helper");
// Type namespace: System.IO.Compression
namespace System::IO::Compression {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.IO.Compression.Crc32Helper
  // [TokenAttribute] Offset: FFFFFFFF
  class Crc32Helper : public ::Il2CppObject {
    public:
    // Get static field: static private readonly System.UInt32[] s_crcTable_0
    static ::ArrayW<uint> _get_s_crcTable_0();
    // Set static field: static private readonly System.UInt32[] s_crcTable_0
    static void _set_s_crcTable_0(::ArrayW<uint> value);
    // Get static field: static private readonly System.UInt32[] s_crcTable_1
    static ::ArrayW<uint> _get_s_crcTable_1();
    // Set static field: static private readonly System.UInt32[] s_crcTable_1
    static void _set_s_crcTable_1(::ArrayW<uint> value);
    // Get static field: static private readonly System.UInt32[] s_crcTable_2
    static ::ArrayW<uint> _get_s_crcTable_2();
    // Set static field: static private readonly System.UInt32[] s_crcTable_2
    static void _set_s_crcTable_2(::ArrayW<uint> value);
    // Get static field: static private readonly System.UInt32[] s_crcTable_3
    static ::ArrayW<uint> _get_s_crcTable_3();
    // Set static field: static private readonly System.UInt32[] s_crcTable_3
    static void _set_s_crcTable_3(::ArrayW<uint> value);
    // Get static field: static private readonly System.UInt32[] s_crcTable_4
    static ::ArrayW<uint> _get_s_crcTable_4();
    // Set static field: static private readonly System.UInt32[] s_crcTable_4
    static void _set_s_crcTable_4(::ArrayW<uint> value);
    // Get static field: static private readonly System.UInt32[] s_crcTable_5
    static ::ArrayW<uint> _get_s_crcTable_5();
    // Set static field: static private readonly System.UInt32[] s_crcTable_5
    static void _set_s_crcTable_5(::ArrayW<uint> value);
    // Get static field: static private readonly System.UInt32[] s_crcTable_6
    static ::ArrayW<uint> _get_s_crcTable_6();
    // Set static field: static private readonly System.UInt32[] s_crcTable_6
    static void _set_s_crcTable_6(::ArrayW<uint> value);
    // Get static field: static private readonly System.UInt32[] s_crcTable_7
    static ::ArrayW<uint> _get_s_crcTable_7();
    // Set static field: static private readonly System.UInt32[] s_crcTable_7
    static void _set_s_crcTable_7(::ArrayW<uint> value);
    // static private System.Void .cctor()
    // Offset: 0x1692E94
    static void _cctor();
    // static public System.UInt32 UpdateCrc32(System.UInt32 crc32, System.Byte[] buffer, System.Int32 offset, System.Int32 length)
    // Offset: 0x1692588
    static uint UpdateCrc32(uint crc32, ::ArrayW<uint8_t> buffer, int offset, int length);
    // static private System.UInt32 ManagedCrc32(System.UInt32 crc32, System.Byte[] buffer, System.Int32 offset, System.Int32 length)
    // Offset: 0x1692B30
    static uint ManagedCrc32(uint crc32, ::ArrayW<uint8_t> buffer, int offset, int length);
  }; // System.IO.Compression.Crc32Helper
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::IO::Compression::Crc32Helper::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::IO::Compression::Crc32Helper::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::Crc32Helper*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::Crc32Helper::UpdateCrc32
// Il2CppName: UpdateCrc32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, ::ArrayW<uint8_t>, int, int)>(&System::IO::Compression::Crc32Helper::UpdateCrc32)> {
  static const MethodInfo* get() {
    static auto* crc32 = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::Crc32Helper*), "UpdateCrc32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{crc32, buffer, offset, length});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::Crc32Helper::ManagedCrc32
// Il2CppName: ManagedCrc32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, ::ArrayW<uint8_t>, int, int)>(&System::IO::Compression::Crc32Helper::ManagedCrc32)> {
  static const MethodInfo* get() {
    static auto* crc32 = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::Crc32Helper*), "ManagedCrc32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{crc32, buffer, offset, length});
  }
};
