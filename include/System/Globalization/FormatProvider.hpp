// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: NumberFormatInfo
  class NumberFormatInfo;
  // Forward declaring type: NumberStyles
  struct NumberStyles;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ReadOnlySpan`1<T>
  template<typename T>
  struct ReadOnlySpan_1;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: System.Globalization
namespace System::Globalization {
  // Forward declaring type: FormatProvider
  class FormatProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Globalization::FormatProvider);
DEFINE_IL2CPP_ARG_TYPE(::System::Globalization::FormatProvider*, "System.Globalization", "FormatProvider");
// Type namespace: System.Globalization
namespace System::Globalization {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Globalization.FormatProvider
  // [TokenAttribute] Offset: FFFFFFFF
  class FormatProvider : public ::Il2CppObject {
    public:
    // Nested type: ::System::Globalization::FormatProvider::Number
    class Number;
    // static System.String FormatBigInteger(System.Int32 precision, System.Int32 scale, System.Boolean sign, System.String format, System.Globalization.NumberFormatInfo numberFormatInfo, System.Char[] digits, System.Int32 startIndex)
    // Offset: 0x1893BF8
    static ::StringW FormatBigInteger(int precision, int scale, bool sign, ::StringW format, ::System::Globalization::NumberFormatInfo* numberFormatInfo, ::ArrayW<::Il2CppChar> digits, int startIndex);
    // static System.Boolean TryStringToBigInteger(System.ReadOnlySpan`1<System.Char> s, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo numberFormatInfo, System.Text.StringBuilder receiver, out System.Int32 precision, out System.Int32 scale, out System.Boolean sign)
    // Offset: 0x18930A0
    static bool TryStringToBigInteger(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* numberFormatInfo, ::System::Text::StringBuilder* receiver, ByRef<int> precision, ByRef<int> scale, ByRef<bool> sign);
  }; // System.Globalization.FormatProvider
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Globalization::FormatProvider::FormatBigInteger
// Il2CppName: FormatBigInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int, int, bool, ::StringW, ::System::Globalization::NumberFormatInfo*, ::ArrayW<::Il2CppChar>, int)>(&System::Globalization::FormatProvider::FormatBigInteger)> {
  static const MethodInfo* get() {
    static auto* precision = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* sign = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* numberFormatInfo = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    static auto* digits = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::FormatProvider*), "FormatBigInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{precision, scale, sign, format, numberFormatInfo, digits, startIndex});
  }
};
// Writing MetadataGetter for method: System::Globalization::FormatProvider::TryStringToBigInteger
// Il2CppName: TryStringToBigInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::ReadOnlySpan_1<::Il2CppChar>, ::System::Globalization::NumberStyles, ::System::Globalization::NumberFormatInfo*, ::System::Text::StringBuilder*, ByRef<int>, ByRef<int>, ByRef<bool>)>(&System::Globalization::FormatProvider::TryStringToBigInteger)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* styles = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberStyles")->byval_arg;
    static auto* numberFormatInfo = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    static auto* receiver = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* precision = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* sign = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::FormatProvider*), "TryStringToBigInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, styles, numberFormatInfo, receiver, precision, scale, sign});
  }
};
