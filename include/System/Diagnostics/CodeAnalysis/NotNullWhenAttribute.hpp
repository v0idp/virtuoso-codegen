// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Diagnostics.CodeAnalysis
namespace System::Diagnostics::CodeAnalysis {
  // Forward declaring type: NotNullWhenAttribute
  class NotNullWhenAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Diagnostics::CodeAnalysis::NotNullWhenAttribute);
DEFINE_IL2CPP_ARG_TYPE(::System::Diagnostics::CodeAnalysis::NotNullWhenAttribute*, "System.Diagnostics.CodeAnalysis", "NotNullWhenAttribute");
// Type namespace: System.Diagnostics.CodeAnalysis
namespace System::Diagnostics::CodeAnalysis {
  // Size: 0x11
  #pragma pack(push, 1)
  // Autogenerated type: System.Diagnostics.CodeAnalysis.NotNullWhenAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: 671FB8
  class NotNullWhenAttribute : public ::System::Attribute {
    public:
    public:
    // private readonly System.Boolean <ReturnValue>k__BackingField
    // Size: 0x1
    // Offset: 0x10
    bool ReturnValue;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating conversion operator: operator bool
    constexpr operator bool() const noexcept {
      return ReturnValue;
    }
    // Get instance field reference: private readonly System.Boolean <ReturnValue>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$ReturnValue$k__BackingField();
    // public System.Void .ctor(System.Boolean returnValue)
    // Offset: 0x13489C0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NotNullWhenAttribute* New_ctor(bool returnValue) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::CodeAnalysis::NotNullWhenAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NotNullWhenAttribute*, creationType>(returnValue)));
    }
  }; // System.Diagnostics.CodeAnalysis.NotNullWhenAttribute
  #pragma pack(pop)
  static check_size<sizeof(NotNullWhenAttribute), 16 + sizeof(bool)> __System_Diagnostics_CodeAnalysis_NotNullWhenAttributeSizeCheck;
  static_assert(sizeof(NotNullWhenAttribute) == 0x11);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Diagnostics::CodeAnalysis::NotNullWhenAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
