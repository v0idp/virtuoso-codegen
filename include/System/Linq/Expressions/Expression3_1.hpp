// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Linq.Expressions.Expression`1
#include "System/Linq/Expressions/Expression_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Linq::Expressions
namespace System::Linq::Expressions {
  // Forward declaring type: ParameterExpression
  class ParameterExpression;
  // Skipping declaration: Expression because it is already included!
}
// Completed forward declares
// Type namespace: System.Linq.Expressions
namespace System::Linq::Expressions {
  // Forward declaring type: Expression3`1<TDelegate>
  template<typename TDelegate>
  class Expression3_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::System::Linq::Expressions::Expression3_1, "System.Linq.Expressions", "Expression3`1");
// Type namespace: System.Linq.Expressions
namespace System::Linq::Expressions {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Linq.Expressions.Expression3`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TDelegate>
  class Expression3_1 : public ::System::Linq::Expressions::Expression_1<TDelegate> {
    public:
    public:
    // private System.Object _par0
    // Size: 0x8
    // Offset: 0x0
    ::Il2CppObject* par0;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private readonly System.Linq.Expressions.ParameterExpression _par1
    // Size: 0x8
    // Offset: 0x0
    ::System::Linq::Expressions::ParameterExpression* par1;
    // Field size check
    static_assert(sizeof(::System::Linq::Expressions::ParameterExpression*) == 0x8);
    // private readonly System.Linq.Expressions.ParameterExpression _par2
    // Size: 0x8
    // Offset: 0x0
    ::System::Linq::Expressions::ParameterExpression* par2;
    // Field size check
    static_assert(sizeof(::System::Linq::Expressions::ParameterExpression*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::Linq::Expressions::Expression*
    constexpr operator ::System::Linq::Expressions::Expression*() const noexcept = delete;
    // Autogenerated instance field getter
    // Get instance field: private System.Object _par0
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn__par0() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression3_1::dyn__par0");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_par0"))->offset;
      return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private readonly System.Linq.Expressions.ParameterExpression _par1
    [[deprecated("Use field access instead!")]] ::System::Linq::Expressions::ParameterExpression*& dyn__par1() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression3_1::dyn__par1");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_par1"))->offset;
      return *reinterpret_cast<::System::Linq::Expressions::ParameterExpression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private readonly System.Linq.Expressions.ParameterExpression _par2
    [[deprecated("Use field access instead!")]] ::System::Linq::Expressions::ParameterExpression*& dyn__par2() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression3_1::dyn__par2");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_par2"))->offset;
      return *reinterpret_cast<::System::Linq::Expressions::ParameterExpression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void .ctor(System.Linq.Expressions.Expression body, System.Linq.Expressions.ParameterExpression par0, System.Linq.Expressions.ParameterExpression par1, System.Linq.Expressions.ParameterExpression par2)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Expression3_1<TDelegate>* New_ctor(::System::Linq::Expressions::Expression* body, ::System::Linq::Expressions::ParameterExpression* par0, ::System::Linq::Expressions::ParameterExpression* par1, ::System::Linq::Expressions::ParameterExpression* par2) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression3_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Expression3_1<TDelegate>*, creationType>(body, par0, par1, par2)));
    }
    // override System.Int32 get_ParameterCount()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Linq.Expressions.LambdaExpression
    // Base method: System.Int32 LambdaExpression::get_ParameterCount()
    int get_ParameterCount() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression3_1::get_ParameterCount");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::LambdaExpression*), -1));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // override System.Linq.Expressions.ParameterExpression GetParameter(System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Linq.Expressions.LambdaExpression
    // Base method: System.Linq.Expressions.ParameterExpression LambdaExpression::GetParameter(System.Int32 index)
    ::System::Linq::Expressions::ParameterExpression* GetParameter(int index) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression3_1::GetParameter");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::LambdaExpression*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::ParameterExpression*, false>(this, ___internal__method, index);
    }
    // override System.Linq.Expressions.Expression`1<TDelegate> Rewrite(System.Linq.Expressions.Expression body, System.Linq.Expressions.ParameterExpression[] parameters)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Linq.Expressions.Expression`1
    // Base method: System.Linq.Expressions.Expression`1<TDelegate> Expression_1::Rewrite(System.Linq.Expressions.Expression body, System.Linq.Expressions.ParameterExpression[] parameters)
    ::System::Linq::Expressions::Expression_1<TDelegate>* Rewrite(::System::Linq::Expressions::Expression* body, ::ArrayW<::System::Linq::Expressions::ParameterExpression*> parameters) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression3_1::Rewrite");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression_1<TDelegate>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::Expression_1<TDelegate>*, false>(this, ___internal__method, body, parameters);
    }
  }; // System.Linq.Expressions.Expression3`1
  // Could not write size check! Type: System.Linq.Expressions.Expression3`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
