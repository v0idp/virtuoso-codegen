// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Linq.Expressions.MemberBinding
#include "System/Linq/Expressions/MemberBinding.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Linq::Expressions
namespace System::Linq::Expressions {
  // Forward declaring type: Expression
  class Expression;
}
// Completed forward declares
// Type namespace: System.Linq.Expressions
namespace System::Linq::Expressions {
  // Forward declaring type: MemberAssignment
  class MemberAssignment;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Linq::Expressions::MemberAssignment);
DEFINE_IL2CPP_ARG_TYPE(::System::Linq::Expressions::MemberAssignment*, "System.Linq.Expressions", "MemberAssignment");
// Type namespace: System.Linq.Expressions
namespace System::Linq::Expressions {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: System.Linq.Expressions.MemberAssignment
  // [TokenAttribute] Offset: FFFFFFFF
  class MemberAssignment : public ::System::Linq::Expressions::MemberBinding {
    public:
    public:
    // private readonly System.Linq.Expressions.Expression _expression
    // Size: 0x8
    // Offset: 0x20
    ::System::Linq::Expressions::Expression* expression;
    // Field size check
    static_assert(sizeof(::System::Linq::Expressions::Expression*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Linq::Expressions::Expression*
    constexpr operator ::System::Linq::Expressions::Expression*() const noexcept {
      return expression;
    }
    // Get instance field reference: private readonly System.Linq.Expressions.Expression _expression
    [[deprecated]] ::System::Linq::Expressions::Expression*& dyn__expression();
    // public System.Linq.Expressions.Expression get_Expression()
    // Offset: 0xE90EF4
    ::System::Linq::Expressions::Expression* get_Expression();
  }; // System.Linq.Expressions.MemberAssignment
  #pragma pack(pop)
  static check_size<sizeof(MemberAssignment), 32 + sizeof(::System::Linq::Expressions::Expression*)> __System_Linq_Expressions_MemberAssignmentSizeCheck;
  static_assert(sizeof(MemberAssignment) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Linq::Expressions::MemberAssignment::get_Expression
// Il2CppName: get_Expression
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Linq::Expressions::Expression* (System::Linq::Expressions::MemberAssignment::*)()>(&System::Linq::Expressions::MemberAssignment::get_Expression)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::MemberAssignment*), "get_Expression", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
