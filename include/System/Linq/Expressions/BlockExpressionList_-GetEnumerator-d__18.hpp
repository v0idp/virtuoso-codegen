// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Linq.Expressions.BlockExpressionList
#include "System/Linq/Expressions/BlockExpressionList.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Linq::Expressions
namespace System::Linq::Expressions {
  // Forward declaring type: Expression
  class Expression;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18);
DEFINE_IL2CPP_ARG_TYPE(::System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18*, "System.Linq.Expressions", "BlockExpressionList/<GetEnumerator>d__18");
// Type namespace: System.Linq.Expressions
namespace System::Linq::Expressions {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: System.Linq.Expressions.BlockExpressionList/System.Linq.Expressions.<GetEnumerator>d__18
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class BlockExpressionList::$GetEnumerator$d__18 : public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerator_1<::System::Linq::Expressions::Expression*>*/ {
    public:
    public:
    // private System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x10
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: $$1__state and: $$2__current
    char __padding0[0x4] = {};
    // private System.Linq.Expressions.Expression <>2__current
    // Size: 0x8
    // Offset: 0x18
    ::System::Linq::Expressions::Expression* $$2__current;
    // Field size check
    static_assert(sizeof(::System::Linq::Expressions::Expression*) == 0x8);
    // public System.Linq.Expressions.BlockExpressionList <>4__this
    // Size: 0x8
    // Offset: 0x20
    ::System::Linq::Expressions::BlockExpressionList* $$4__this;
    // Field size check
    static_assert(sizeof(::System::Linq::Expressions::BlockExpressionList*) == 0x8);
    // private System.Int32 <i>5__1
    // Size: 0x4
    // Offset: 0x28
    int $i$5__1;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<::System::Linq::Expressions::Expression*>
    operator ::System::Collections::Generic::IEnumerator_1<::System::Linq::Expressions::Expression*>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::System::Linq::Expressions::Expression*>*>(this);
    }
    // Get instance field reference: private System.Int32 <>1__state
    [[deprecated]] int& dyn_$$1__state();
    // Get instance field reference: private System.Linq.Expressions.Expression <>2__current
    [[deprecated]] ::System::Linq::Expressions::Expression*& dyn_$$2__current();
    // Get instance field reference: public System.Linq.Expressions.BlockExpressionList <>4__this
    [[deprecated]] ::System::Linq::Expressions::BlockExpressionList*& dyn_$$4__this();
    // Get instance field reference: private System.Int32 <i>5__1
    [[deprecated]] int& dyn_$i$5__1();
    // private System.Linq.Expressions.Expression System.Collections.Generic.IEnumerator<System.Linq.Expressions.Expression>.get_Current()
    // Offset: 0xEA6794
    ::System::Linq::Expressions::Expression* System_Collections_Generic_IEnumerator$System_Linq_Expressions_Expression$_get_Current();
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0xEA67DC
    ::Il2CppObject* System_Collections_IEnumerator_get_Current();
    // public System.Void .ctor(System.Int32 <>1__state)
    // Offset: 0xEA668C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BlockExpressionList::$GetEnumerator$d__18* New_ctor(int $$1__state) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BlockExpressionList::$GetEnumerator$d__18*, creationType>($$1__state)));
    }
    // private System.Void System.IDisposable.Dispose()
    // Offset: 0xEA66B8
    void System_IDisposable_Dispose();
    // private System.Boolean MoveNext()
    // Offset: 0xEA66BC
    bool MoveNext();
    // private System.Void System.Collections.IEnumerator.Reset()
    // Offset: 0xEA679C
    void System_Collections_IEnumerator_Reset();
  }; // System.Linq.Expressions.BlockExpressionList/System.Linq.Expressions.<GetEnumerator>d__18
  #pragma pack(pop)
  static check_size<sizeof(BlockExpressionList::$GetEnumerator$d__18), 40 + sizeof(int)> __System_Linq_Expressions_BlockExpressionList_$GetEnumerator$d__18SizeCheck;
  static_assert(sizeof(BlockExpressionList::$GetEnumerator$d__18) == 0x2C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::System_Collections_Generic_IEnumerator$System_Linq_Expressions_Expression$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Linq.Expressions.Expression>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Linq::Expressions::Expression* (System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::*)()>(&System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::System_Collections_Generic_IEnumerator$System_Linq_Expressions_Expression$_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18*), "System.Collections.Generic.IEnumerator<System.Linq.Expressions.Expression>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::*)()>(&System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::System_Collections_IEnumerator_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::*)()>(&System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::System_IDisposable_Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::*)()>(&System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::*)()>(&System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::System_Collections_IEnumerator_Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
