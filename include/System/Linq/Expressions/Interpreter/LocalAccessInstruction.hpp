// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Linq.Expressions.Interpreter.Instruction
#include "System/Linq/Expressions/Interpreter/Instruction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Linq.Expressions.Interpreter
namespace System::Linq::Expressions::Interpreter {
  // Forward declaring type: LocalAccessInstruction
  class LocalAccessInstruction;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Linq::Expressions::Interpreter::LocalAccessInstruction);
DEFINE_IL2CPP_ARG_TYPE(::System::Linq::Expressions::Interpreter::LocalAccessInstruction*, "System.Linq.Expressions.Interpreter", "LocalAccessInstruction");
// Type namespace: System.Linq.Expressions.Interpreter
namespace System::Linq::Expressions::Interpreter {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: System.Linq.Expressions.Interpreter.LocalAccessInstruction
  // [TokenAttribute] Offset: FFFFFFFF
  class LocalAccessInstruction : public ::System::Linq::Expressions::Interpreter::Instruction {
    public:
    public:
    // readonly System.Int32 _index
    // Size: 0x4
    // Offset: 0x10
    int index;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return index;
    }
    // Get instance field reference: readonly System.Int32 _index
    [[deprecated("Use field access instead!")]] int& dyn__index();
    // protected System.Void .ctor(System.Int32 index)
    // Offset: 0xE8F9F8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LocalAccessInstruction* New_ctor(int index) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Interpreter::LocalAccessInstruction::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LocalAccessInstruction*, creationType>(index)));
    }
  }; // System.Linq.Expressions.Interpreter.LocalAccessInstruction
  #pragma pack(pop)
  static check_size<sizeof(LocalAccessInstruction), 16 + sizeof(int)> __System_Linq_Expressions_Interpreter_LocalAccessInstructionSizeCheck;
  static_assert(sizeof(LocalAccessInstruction) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::LocalAccessInstruction::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
