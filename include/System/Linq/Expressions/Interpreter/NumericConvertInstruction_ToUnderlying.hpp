// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Linq.Expressions.Interpreter.NumericConvertInstruction
#include "System/Linq/Expressions/Interpreter/NumericConvertInstruction.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Linq::Expressions::Interpreter::NumericConvertInstruction::ToUnderlying);
DEFINE_IL2CPP_ARG_TYPE(::System::Linq::Expressions::Interpreter::NumericConvertInstruction::ToUnderlying*, "System.Linq.Expressions.Interpreter", "NumericConvertInstruction/ToUnderlying");
// Type namespace: System.Linq.Expressions.Interpreter
namespace System::Linq::Expressions::Interpreter {
  // Size: 0x19
  #pragma pack(push, 1)
  // Autogenerated type: System.Linq.Expressions.Interpreter.NumericConvertInstruction/System.Linq.Expressions.Interpreter.ToUnderlying
  // [TokenAttribute] Offset: FFFFFFFF
  class NumericConvertInstruction::ToUnderlying : public ::System::Linq::Expressions::Interpreter::NumericConvertInstruction {
    public:
    // public System.Void .ctor(System.TypeCode to, System.Boolean isLiftedToNull)
    // Offset: 0x16AFD44
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NumericConvertInstruction::ToUnderlying* New_ctor(::System::TypeCode to, bool isLiftedToNull) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Interpreter::NumericConvertInstruction::ToUnderlying::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NumericConvertInstruction::ToUnderlying*, creationType>(to, isLiftedToNull)));
    }
    // public override System.String get_InstructionName()
    // Offset: 0x16AFD00
    // Implemented from: System.Linq.Expressions.Interpreter.NumericConvertInstruction
    // Base method: System.String NumericConvertInstruction::get_InstructionName()
    ::StringW get_InstructionName();
    // protected override System.Object Convert(System.Object obj)
    // Offset: 0x16AFD54
    // Implemented from: System.Linq.Expressions.Interpreter.NumericConvertInstruction
    // Base method: System.Object NumericConvertInstruction::Convert(System.Object obj)
    ::Il2CppObject* Convert(::Il2CppObject* obj);
  }; // System.Linq.Expressions.Interpreter.NumericConvertInstruction/System.Linq.Expressions.Interpreter.ToUnderlying
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::NumericConvertInstruction::ToUnderlying::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::NumericConvertInstruction::ToUnderlying::get_InstructionName
// Il2CppName: get_InstructionName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Linq::Expressions::Interpreter::NumericConvertInstruction::ToUnderlying::*)()>(&System::Linq::Expressions::Interpreter::NumericConvertInstruction::ToUnderlying::get_InstructionName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::NumericConvertInstruction::ToUnderlying*), "get_InstructionName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::NumericConvertInstruction::ToUnderlying::Convert
// Il2CppName: Convert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Linq::Expressions::Interpreter::NumericConvertInstruction::ToUnderlying::*)(::Il2CppObject*)>(&System::Linq::Expressions::Interpreter::NumericConvertInstruction::ToUnderlying::Convert)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::NumericConvertInstruction::ToUnderlying*), "Convert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
