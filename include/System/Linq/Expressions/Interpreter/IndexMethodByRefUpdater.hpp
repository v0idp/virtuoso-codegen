// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Linq.Expressions.Interpreter.ByRefUpdater
#include "System/Linq/Expressions/Interpreter/ByRefUpdater.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Linq.Expressions.Interpreter.LocalDefinition
#include "System/Linq/Expressions/Interpreter/LocalDefinition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MethodInfo
  class MethodInfo;
}
// Forward declaring namespace: System::Linq::Expressions::Interpreter
namespace System::Linq::Expressions::Interpreter {
  // Forward declaring type: InterpretedFrame
  class InterpretedFrame;
  // Forward declaring type: InstructionList
  class InstructionList;
  // Forward declaring type: LocalVariables
  class LocalVariables;
}
// Completed forward declares
// Type namespace: System.Linq.Expressions.Interpreter
namespace System::Linq::Expressions::Interpreter {
  // Forward declaring type: IndexMethodByRefUpdater
  class IndexMethodByRefUpdater;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Linq::Expressions::Interpreter::IndexMethodByRefUpdater);
DEFINE_IL2CPP_ARG_TYPE(::System::Linq::Expressions::Interpreter::IndexMethodByRefUpdater*, "System.Linq.Expressions.Interpreter", "IndexMethodByRefUpdater");
// Type namespace: System.Linq.Expressions.Interpreter
namespace System::Linq::Expressions::Interpreter {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Linq.Expressions.Interpreter.IndexMethodByRefUpdater
  // [TokenAttribute] Offset: FFFFFFFF
  class IndexMethodByRefUpdater : public ::System::Linq::Expressions::Interpreter::ByRefUpdater {
    public:
    // Writing base type padding for base size: 0x14 to desired offset: 0x18
    char ___base_padding[0x4] = {};
    public:
    // private readonly System.Reflection.MethodInfo _indexer
    // Size: 0x8
    // Offset: 0x18
    ::System::Reflection::MethodInfo* indexer;
    // Field size check
    static_assert(sizeof(::System::Reflection::MethodInfo*) == 0x8);
    // private readonly System.Nullable`1<System.Linq.Expressions.Interpreter.LocalDefinition> _obj
    // Size: 0xFFFFFFFF
    // Offset: 0x20
    ::System::Nullable_1<::System::Linq::Expressions::Interpreter::LocalDefinition> obj;
    // private readonly System.Linq.Expressions.Interpreter.LocalDefinition[] _args
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<::System::Linq::Expressions::Interpreter::LocalDefinition> args;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::Linq::Expressions::Interpreter::LocalDefinition>) == 0x8);
    public:
    // Deleting conversion operator: operator int
    constexpr operator int() const noexcept = delete;
    // Get instance field reference: private readonly System.Reflection.MethodInfo _indexer
    [[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& dyn__indexer();
    // Get instance field reference: private readonly System.Nullable`1<System.Linq.Expressions.Interpreter.LocalDefinition> _obj
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::Linq::Expressions::Interpreter::LocalDefinition>& dyn__obj();
    // Get instance field reference: private readonly System.Linq.Expressions.Interpreter.LocalDefinition[] _args
    [[deprecated("Use field access instead!")]] ::ArrayW<::System::Linq::Expressions::Interpreter::LocalDefinition>& dyn__args();
    // public System.Void .ctor(System.Nullable`1<System.Linq.Expressions.Interpreter.LocalDefinition> obj, System.Linq.Expressions.Interpreter.LocalDefinition[] args, System.Reflection.MethodInfo indexer, System.Int32 argumentIndex)
    // Offset: 0xF16F78
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static IndexMethodByRefUpdater* New_ctor(::System::Nullable_1<::System::Linq::Expressions::Interpreter::LocalDefinition> obj, ::ArrayW<::System::Linq::Expressions::Interpreter::LocalDefinition> args, ::System::Reflection::MethodInfo* indexer, int argumentIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Interpreter::IndexMethodByRefUpdater::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<IndexMethodByRefUpdater*, creationType>(obj, args, indexer, argumentIndex)));
    }
    // public override System.Void Update(System.Linq.Expressions.Interpreter.InterpretedFrame frame, System.Object value)
    // Offset: 0xF16FC8
    // Implemented from: System.Linq.Expressions.Interpreter.ByRefUpdater
    // Base method: System.Void ByRefUpdater::Update(System.Linq.Expressions.Interpreter.InterpretedFrame frame, System.Object value)
    void Update(::System::Linq::Expressions::Interpreter::InterpretedFrame* frame, ::Il2CppObject* value);
    // public override System.Void UndefineTemps(System.Linq.Expressions.Interpreter.InstructionList instructions, System.Linq.Expressions.Interpreter.LocalVariables locals)
    // Offset: 0xF17238
    // Implemented from: System.Linq.Expressions.Interpreter.ByRefUpdater
    // Base method: System.Void ByRefUpdater::UndefineTemps(System.Linq.Expressions.Interpreter.InstructionList instructions, System.Linq.Expressions.Interpreter.LocalVariables locals)
    void UndefineTemps(::System::Linq::Expressions::Interpreter::InstructionList* instructions, ::System::Linq::Expressions::Interpreter::LocalVariables* locals);
  }; // System.Linq.Expressions.Interpreter.IndexMethodByRefUpdater
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::IndexMethodByRefUpdater::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::IndexMethodByRefUpdater::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Linq::Expressions::Interpreter::IndexMethodByRefUpdater::*)(::System::Linq::Expressions::Interpreter::InterpretedFrame*, ::Il2CppObject*)>(&System::Linq::Expressions::Interpreter::IndexMethodByRefUpdater::Update)> {
  static const MethodInfo* get() {
    static auto* frame = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions.Interpreter", "InterpretedFrame")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::IndexMethodByRefUpdater*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{frame, value});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::IndexMethodByRefUpdater::UndefineTemps
// Il2CppName: UndefineTemps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Linq::Expressions::Interpreter::IndexMethodByRefUpdater::*)(::System::Linq::Expressions::Interpreter::InstructionList*, ::System::Linq::Expressions::Interpreter::LocalVariables*)>(&System::Linq::Expressions::Interpreter::IndexMethodByRefUpdater::UndefineTemps)> {
  static const MethodInfo* get() {
    static auto* instructions = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions.Interpreter", "InstructionList")->byval_arg;
    static auto* locals = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions.Interpreter", "LocalVariables")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::IndexMethodByRefUpdater*), "UndefineTemps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instructions, locals});
  }
};
