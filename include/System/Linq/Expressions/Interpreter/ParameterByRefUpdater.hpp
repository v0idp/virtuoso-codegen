// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Linq.Expressions.Interpreter.ByRefUpdater
#include "System/Linq/Expressions/Interpreter/ByRefUpdater.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Linq::Expressions::Interpreter
namespace System::Linq::Expressions::Interpreter {
  // Forward declaring type: LocalVariable
  class LocalVariable;
  // Forward declaring type: InterpretedFrame
  class InterpretedFrame;
}
// Completed forward declares
// Type namespace: System.Linq.Expressions.Interpreter
namespace System::Linq::Expressions::Interpreter {
  // Forward declaring type: ParameterByRefUpdater
  class ParameterByRefUpdater;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Linq::Expressions::Interpreter::ParameterByRefUpdater);
DEFINE_IL2CPP_ARG_TYPE(::System::Linq::Expressions::Interpreter::ParameterByRefUpdater*, "System.Linq.Expressions.Interpreter", "ParameterByRefUpdater");
// Type namespace: System.Linq.Expressions.Interpreter
namespace System::Linq::Expressions::Interpreter {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Linq.Expressions.Interpreter.ParameterByRefUpdater
  // [TokenAttribute] Offset: FFFFFFFF
  class ParameterByRefUpdater : public ::System::Linq::Expressions::Interpreter::ByRefUpdater {
    public:
    // Writing base type padding for base size: 0x14 to desired offset: 0x18
    char ___base_padding[0x4] = {};
    public:
    // private readonly System.Linq.Expressions.Interpreter.LocalVariable _parameter
    // Size: 0x8
    // Offset: 0x18
    ::System::Linq::Expressions::Interpreter::LocalVariable* parameter;
    // Field size check
    static_assert(sizeof(::System::Linq::Expressions::Interpreter::LocalVariable*) == 0x8);
    public:
    // Deleting conversion operator: operator int
    constexpr operator int() const noexcept = delete;
    // Get instance field reference: private readonly System.Linq.Expressions.Interpreter.LocalVariable _parameter
    [[deprecated]] ::System::Linq::Expressions::Interpreter::LocalVariable*& dyn__parameter();
    // public System.Void .ctor(System.Linq.Expressions.Interpreter.LocalVariable parameter, System.Int32 argumentIndex)
    // Offset: 0xE964E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ParameterByRefUpdater* New_ctor(::System::Linq::Expressions::Interpreter::LocalVariable* parameter, int argumentIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Interpreter::ParameterByRefUpdater::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ParameterByRefUpdater*, creationType>(parameter, argumentIndex)));
    }
    // public override System.Void Update(System.Linq.Expressions.Interpreter.InterpretedFrame frame, System.Object value)
    // Offset: 0xE96514
    // Implemented from: System.Linq.Expressions.Interpreter.ByRefUpdater
    // Base method: System.Void ByRefUpdater::Update(System.Linq.Expressions.Interpreter.InterpretedFrame frame, System.Object value)
    void Update(::System::Linq::Expressions::Interpreter::InterpretedFrame* frame, ::Il2CppObject* value);
  }; // System.Linq.Expressions.Interpreter.ParameterByRefUpdater
  #pragma pack(pop)
  static check_size<sizeof(ParameterByRefUpdater), 24 + sizeof(::System::Linq::Expressions::Interpreter::LocalVariable*)> __System_Linq_Expressions_Interpreter_ParameterByRefUpdaterSizeCheck;
  static_assert(sizeof(ParameterByRefUpdater) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::ParameterByRefUpdater::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::ParameterByRefUpdater::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Linq::Expressions::Interpreter::ParameterByRefUpdater::*)(::System::Linq::Expressions::Interpreter::InterpretedFrame*, ::Il2CppObject*)>(&System::Linq::Expressions::Interpreter::ParameterByRefUpdater::Update)> {
  static const MethodInfo* get() {
    static auto* frame = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions.Interpreter", "InterpretedFrame")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::ParameterByRefUpdater*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{frame, value});
  }
};
