// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Linq.Expressions.Interpreter.Instruction
#include "System/Linq/Expressions/Interpreter/Instruction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: ConstructorInfo
  class ConstructorInfo;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Forward declaring namespace: System::Runtime::CompilerServices
namespace System::Runtime::CompilerServices {
  // Forward declaring type: RuntimeWrappedException
  class RuntimeWrappedException;
}
// Forward declaring namespace: System::Linq::Expressions::Interpreter
namespace System::Linq::Expressions::Interpreter {
  // Forward declaring type: InterpretedFrame
  class InterpretedFrame;
}
// Completed forward declares
// Type namespace: System.Linq.Expressions.Interpreter
namespace System::Linq::Expressions::Interpreter {
  // Forward declaring type: ThrowInstruction
  class ThrowInstruction;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Linq::Expressions::Interpreter::ThrowInstruction);
DEFINE_IL2CPP_ARG_TYPE(::System::Linq::Expressions::Interpreter::ThrowInstruction*, "System.Linq.Expressions.Interpreter", "ThrowInstruction");
// Type namespace: System.Linq.Expressions.Interpreter
namespace System::Linq::Expressions::Interpreter {
  // Size: 0x12
  #pragma pack(push, 1)
  // Autogenerated type: System.Linq.Expressions.Interpreter.ThrowInstruction
  // [TokenAttribute] Offset: FFFFFFFF
  class ThrowInstruction : public ::System::Linq::Expressions::Interpreter::Instruction {
    public:
    public:
    // private readonly System.Boolean _hasResult
    // Size: 0x1
    // Offset: 0x10
    bool hasResult;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private readonly System.Boolean _rethrow
    // Size: 0x1
    // Offset: 0x11
    bool rethrow;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get static field: static readonly System.Linq.Expressions.Interpreter.ThrowInstruction Throw
    static ::System::Linq::Expressions::Interpreter::ThrowInstruction* _get_Throw();
    // Set static field: static readonly System.Linq.Expressions.Interpreter.ThrowInstruction Throw
    static void _set_Throw(::System::Linq::Expressions::Interpreter::ThrowInstruction* value);
    // Get static field: static readonly System.Linq.Expressions.Interpreter.ThrowInstruction VoidThrow
    static ::System::Linq::Expressions::Interpreter::ThrowInstruction* _get_VoidThrow();
    // Set static field: static readonly System.Linq.Expressions.Interpreter.ThrowInstruction VoidThrow
    static void _set_VoidThrow(::System::Linq::Expressions::Interpreter::ThrowInstruction* value);
    // Get static field: static readonly System.Linq.Expressions.Interpreter.ThrowInstruction Rethrow
    static ::System::Linq::Expressions::Interpreter::ThrowInstruction* _get_Rethrow();
    // Set static field: static readonly System.Linq.Expressions.Interpreter.ThrowInstruction Rethrow
    static void _set_Rethrow(::System::Linq::Expressions::Interpreter::ThrowInstruction* value);
    // Get static field: static readonly System.Linq.Expressions.Interpreter.ThrowInstruction VoidRethrow
    static ::System::Linq::Expressions::Interpreter::ThrowInstruction* _get_VoidRethrow();
    // Set static field: static readonly System.Linq.Expressions.Interpreter.ThrowInstruction VoidRethrow
    static void _set_VoidRethrow(::System::Linq::Expressions::Interpreter::ThrowInstruction* value);
    // Get static field: static private System.Reflection.ConstructorInfo _runtimeWrappedExceptionCtor
    static ::System::Reflection::ConstructorInfo* _get__runtimeWrappedExceptionCtor();
    // Set static field: static private System.Reflection.ConstructorInfo _runtimeWrappedExceptionCtor
    static void _set__runtimeWrappedExceptionCtor(::System::Reflection::ConstructorInfo* value);
    // Get instance field reference: private readonly System.Boolean _hasResult
    [[deprecated]] bool& dyn__hasResult();
    // Get instance field reference: private readonly System.Boolean _rethrow
    [[deprecated]] bool& dyn__rethrow();
    // private System.Void .ctor(System.Boolean hasResult, System.Boolean isRethrow)
    // Offset: 0xE9DECC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ThrowInstruction* New_ctor(bool hasResult, bool isRethrow) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Interpreter::ThrowInstruction::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ThrowInstruction*, creationType>(hasResult, isRethrow)));
    }
    // static private System.Void .cctor()
    // Offset: 0xE9E2FC
    static void _cctor();
    // static private System.Exception WrapThrownObject(System.Object thrown)
    // Offset: 0xE9E00C
    static ::System::Exception* WrapThrownObject(::Il2CppObject* thrown);
    // static private System.Runtime.CompilerServices.RuntimeWrappedException RuntimeWrap(System.Object thrown)
    // Offset: 0xE9E0BC
    static ::System::Runtime::CompilerServices::RuntimeWrappedException* RuntimeWrap(::Il2CppObject* thrown);
    // public override System.String get_InstructionName()
    // Offset: 0xE9DF10
    // Implemented from: System.Linq.Expressions.Interpreter.Instruction
    // Base method: System.String Instruction::get_InstructionName()
    ::StringW get_InstructionName();
    // public override System.Int32 get_ProducedStack()
    // Offset: 0xE9DF54
    // Implemented from: System.Linq.Expressions.Interpreter.Instruction
    // Base method: System.Int32 Instruction::get_ProducedStack()
    int get_ProducedStack();
    // public override System.Int32 get_ConsumedStack()
    // Offset: 0xE9DF5C
    // Implemented from: System.Linq.Expressions.Interpreter.Instruction
    // Base method: System.Int32 Instruction::get_ConsumedStack()
    int get_ConsumedStack();
    // public override System.Int32 Run(System.Linq.Expressions.Interpreter.InterpretedFrame frame)
    // Offset: 0xE9DF64
    // Implemented from: System.Linq.Expressions.Interpreter.Instruction
    // Base method: System.Int32 Instruction::Run(System.Linq.Expressions.Interpreter.InterpretedFrame frame)
    int Run(::System::Linq::Expressions::Interpreter::InterpretedFrame* frame);
  }; // System.Linq.Expressions.Interpreter.ThrowInstruction
  #pragma pack(pop)
  static check_size<sizeof(ThrowInstruction), 17 + sizeof(bool)> __System_Linq_Expressions_Interpreter_ThrowInstructionSizeCheck;
  static_assert(sizeof(ThrowInstruction) == 0x12);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::ThrowInstruction::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::ThrowInstruction::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Linq::Expressions::Interpreter::ThrowInstruction::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::ThrowInstruction*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::ThrowInstruction::WrapThrownObject
// Il2CppName: WrapThrownObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)(::Il2CppObject*)>(&System::Linq::Expressions::Interpreter::ThrowInstruction::WrapThrownObject)> {
  static const MethodInfo* get() {
    static auto* thrown = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::ThrowInstruction*), "WrapThrownObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thrown});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::ThrowInstruction::RuntimeWrap
// Il2CppName: RuntimeWrap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::CompilerServices::RuntimeWrappedException* (*)(::Il2CppObject*)>(&System::Linq::Expressions::Interpreter::ThrowInstruction::RuntimeWrap)> {
  static const MethodInfo* get() {
    static auto* thrown = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::ThrowInstruction*), "RuntimeWrap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thrown});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::ThrowInstruction::get_InstructionName
// Il2CppName: get_InstructionName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Linq::Expressions::Interpreter::ThrowInstruction::*)()>(&System::Linq::Expressions::Interpreter::ThrowInstruction::get_InstructionName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::ThrowInstruction*), "get_InstructionName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::ThrowInstruction::get_ProducedStack
// Il2CppName: get_ProducedStack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Linq::Expressions::Interpreter::ThrowInstruction::*)()>(&System::Linq::Expressions::Interpreter::ThrowInstruction::get_ProducedStack)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::ThrowInstruction*), "get_ProducedStack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::ThrowInstruction::get_ConsumedStack
// Il2CppName: get_ConsumedStack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Linq::Expressions::Interpreter::ThrowInstruction::*)()>(&System::Linq::Expressions::Interpreter::ThrowInstruction::get_ConsumedStack)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::ThrowInstruction*), "get_ConsumedStack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::ThrowInstruction::Run
// Il2CppName: Run
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Linq::Expressions::Interpreter::ThrowInstruction::*)(::System::Linq::Expressions::Interpreter::InterpretedFrame*)>(&System::Linq::Expressions::Interpreter::ThrowInstruction::Run)> {
  static const MethodInfo* get() {
    static auto* frame = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions.Interpreter", "InterpretedFrame")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::ThrowInstruction*), "Run", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{frame});
  }
};
