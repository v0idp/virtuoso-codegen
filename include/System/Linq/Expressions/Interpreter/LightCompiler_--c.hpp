// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Linq.Expressions.Interpreter.LightCompiler
#include "System/Linq/Expressions/Interpreter/LightCompiler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Forward declaring namespace: System::Linq::Expressions
namespace System::Linq::Expressions {
  // Forward declaring type: Expression
  class Expression;
  // Forward declaring type: SwitchCase
  class SwitchCase;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Linq::Expressions::Interpreter::LightCompiler::$$c);
DEFINE_IL2CPP_ARG_TYPE(::System::Linq::Expressions::Interpreter::LightCompiler::$$c*, "System.Linq.Expressions.Interpreter", "LightCompiler/<>c");
// Type namespace: System.Linq.Expressions.Interpreter
namespace System::Linq::Expressions::Interpreter {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Linq.Expressions.Interpreter.LightCompiler/System.Linq.Expressions.Interpreter.<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class LightCompiler::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Linq.Expressions.Interpreter.LightCompiler/System.Linq.Expressions.Interpreter.<>c <>9
    static ::System::Linq::Expressions::Interpreter::LightCompiler::$$c* _get_$$9();
    // Set static field: static public readonly System.Linq.Expressions.Interpreter.LightCompiler/System.Linq.Expressions.Interpreter.<>c <>9
    static void _set_$$9(::System::Linq::Expressions::Interpreter::LightCompiler::$$c* value);
    // Get static field: static public System.Func`2<System.Linq.Expressions.Expression,System.Boolean> <>9__56_1
    static ::System::Func_2<::System::Linq::Expressions::Expression*, bool>* _get_$$9__56_1();
    // Set static field: static public System.Func`2<System.Linq.Expressions.Expression,System.Boolean> <>9__56_1
    static void _set_$$9__56_1(::System::Func_2<::System::Linq::Expressions::Expression*, bool>* value);
    // Get static field: static public System.Func`2<System.Linq.Expressions.SwitchCase,System.Boolean> <>9__56_0
    static ::System::Func_2<::System::Linq::Expressions::SwitchCase*, bool>* _get_$$9__56_0();
    // Set static field: static public System.Func`2<System.Linq.Expressions.SwitchCase,System.Boolean> <>9__56_0
    static void _set_$$9__56_0(::System::Func_2<::System::Linq::Expressions::SwitchCase*, bool>* value);
    // Get static field: static public System.Action`2<System.Linq.Expressions.Interpreter.LightCompiler,System.Linq.Expressions.Expression> <>9__101_0
    static ::System::Action_2<::System::Linq::Expressions::Interpreter::LightCompiler*, ::System::Linq::Expressions::Expression*>* _get_$$9__101_0();
    // Set static field: static public System.Action`2<System.Linq.Expressions.Interpreter.LightCompiler,System.Linq.Expressions.Expression> <>9__101_0
    static void _set_$$9__101_0(::System::Action_2<::System::Linq::Expressions::Interpreter::LightCompiler*, ::System::Linq::Expressions::Expression*>* value);
    // static private System.Void .cctor()
    // Offset: 0x16A9624
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x16A9684
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LightCompiler::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Interpreter::LightCompiler::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LightCompiler::$$c*, creationType>()));
    }
    // System.Boolean <CompileSwitchExpression>b__56_0(System.Linq.Expressions.SwitchCase c)
    // Offset: 0x16A968C
    bool $CompileSwitchExpression$b__56_0(::System::Linq::Expressions::SwitchCase* c);
    // System.Boolean <CompileSwitchExpression>b__56_1(System.Linq.Expressions.Expression t)
    // Offset: 0x16A97B0
    bool $CompileSwitchExpression$b__56_1(::System::Linq::Expressions::Expression* t);
    // System.Void <CompileNoLabelPush>b__101_0(System.Linq.Expressions.Interpreter.LightCompiler this, System.Linq.Expressions.Expression e)
    // Offset: 0x16A982C
    void $CompileNoLabelPush$b__101_0(::System::Linq::Expressions::Interpreter::LightCompiler* _this, ::System::Linq::Expressions::Expression* e);
  }; // System.Linq.Expressions.Interpreter.LightCompiler/System.Linq.Expressions.Interpreter.<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::LightCompiler::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Linq::Expressions::Interpreter::LightCompiler::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::LightCompiler::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::LightCompiler::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::LightCompiler::$$c::$CompileSwitchExpression$b__56_0
// Il2CppName: <CompileSwitchExpression>b__56_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Linq::Expressions::Interpreter::LightCompiler::$$c::*)(::System::Linq::Expressions::SwitchCase*)>(&System::Linq::Expressions::Interpreter::LightCompiler::$$c::$CompileSwitchExpression$b__56_0)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions", "SwitchCase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::LightCompiler::$$c*), "<CompileSwitchExpression>b__56_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::LightCompiler::$$c::$CompileSwitchExpression$b__56_1
// Il2CppName: <CompileSwitchExpression>b__56_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Linq::Expressions::Interpreter::LightCompiler::$$c::*)(::System::Linq::Expressions::Expression*)>(&System::Linq::Expressions::Interpreter::LightCompiler::$$c::$CompileSwitchExpression$b__56_1)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions", "Expression")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::LightCompiler::$$c*), "<CompileSwitchExpression>b__56_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::LightCompiler::$$c::$CompileNoLabelPush$b__101_0
// Il2CppName: <CompileNoLabelPush>b__101_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Linq::Expressions::Interpreter::LightCompiler::$$c::*)(::System::Linq::Expressions::Interpreter::LightCompiler*, ::System::Linq::Expressions::Expression*)>(&System::Linq::Expressions::Interpreter::LightCompiler::$$c::$CompileNoLabelPush$b__101_0)> {
  static const MethodInfo* get() {
    static auto* _this = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions.Interpreter", "LightCompiler")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions", "Expression")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::LightCompiler::$$c*), "<CompileNoLabelPush>b__101_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_this, e});
  }
};
