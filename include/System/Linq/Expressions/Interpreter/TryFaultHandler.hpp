// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Linq.Expressions.Interpreter
namespace System::Linq::Expressions::Interpreter {
  // Forward declaring type: TryFaultHandler
  class TryFaultHandler;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Linq::Expressions::Interpreter::TryFaultHandler);
DEFINE_IL2CPP_ARG_TYPE(::System::Linq::Expressions::Interpreter::TryFaultHandler*, "System.Linq.Expressions.Interpreter", "TryFaultHandler");
// Type namespace: System.Linq.Expressions.Interpreter
namespace System::Linq::Expressions::Interpreter {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Linq.Expressions.Interpreter.TryFaultHandler
  // [TokenAttribute] Offset: FFFFFFFF
  class TryFaultHandler : public ::Il2CppObject {
    public:
    public:
    // readonly System.Int32 TryStartIndex
    // Size: 0x4
    // Offset: 0x10
    int TryStartIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // readonly System.Int32 TryEndIndex
    // Size: 0x4
    // Offset: 0x14
    int TryEndIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // readonly System.Int32 FinallyStartIndex
    // Size: 0x4
    // Offset: 0x18
    int FinallyStartIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // readonly System.Int32 FinallyEndIndex
    // Size: 0x4
    // Offset: 0x1C
    int FinallyEndIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: readonly System.Int32 TryStartIndex
    [[deprecated("Use field access instead!")]] int& dyn_TryStartIndex();
    // Get instance field reference: readonly System.Int32 TryEndIndex
    [[deprecated("Use field access instead!")]] int& dyn_TryEndIndex();
    // Get instance field reference: readonly System.Int32 FinallyStartIndex
    [[deprecated("Use field access instead!")]] int& dyn_FinallyStartIndex();
    // Get instance field reference: readonly System.Int32 FinallyEndIndex
    [[deprecated("Use field access instead!")]] int& dyn_FinallyEndIndex();
    // System.Void .ctor(System.Int32 tryStart, System.Int32 tryEnd, System.Int32 finallyStart, System.Int32 finallyEnd)
    // Offset: 0xE9EA24
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TryFaultHandler* New_ctor(int tryStart, int tryEnd, int finallyStart, int finallyEnd) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Interpreter::TryFaultHandler::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TryFaultHandler*, creationType>(tryStart, tryEnd, finallyStart, finallyEnd)));
    }
  }; // System.Linq.Expressions.Interpreter.TryFaultHandler
  #pragma pack(pop)
  static check_size<sizeof(TryFaultHandler), 28 + sizeof(int)> __System_Linq_Expressions_Interpreter_TryFaultHandlerSizeCheck;
  static_assert(sizeof(TryFaultHandler) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::TryFaultHandler::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
