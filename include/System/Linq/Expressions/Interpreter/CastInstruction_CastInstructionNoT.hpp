// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Linq.Expressions.Interpreter.CastInstruction
#include "System/Linq/Expressions/Interpreter/CastInstruction.hpp"
// Including type: System.Linq.Expressions.Interpreter.Instruction
#include "System/Linq/Expressions/Interpreter/Instruction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Linq::Expressions::Interpreter
namespace System::Linq::Expressions::Interpreter {
  // Forward declaring type: InterpretedFrame
  class InterpretedFrame;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Linq::Expressions::Interpreter::CastInstruction::CastInstructionNoT);
DEFINE_IL2CPP_ARG_TYPE(::System::Linq::Expressions::Interpreter::CastInstruction::CastInstructionNoT*, "System.Linq.Expressions.Interpreter", "CastInstruction/CastInstructionNoT");
// Type namespace: System.Linq.Expressions.Interpreter
namespace System::Linq::Expressions::Interpreter {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Linq.Expressions.Interpreter.CastInstruction/System.Linq.Expressions.Interpreter.CastInstructionNoT
  // [TokenAttribute] Offset: FFFFFFFF
  class CastInstruction::CastInstructionNoT : public ::System::Linq::Expressions::Interpreter::CastInstruction {
    public:
    // Nested type: ::System::Linq::Expressions::Interpreter::CastInstruction::CastInstructionNoT::Ref
    class Ref;
    // Nested type: ::System::Linq::Expressions::Interpreter::CastInstruction::CastInstructionNoT::Value
    class Value;
    public:
    // private readonly System.Type _t
    // Size: 0x8
    // Offset: 0x10
    ::System::Type* t;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Type*
    constexpr operator ::System::Type*() const noexcept {
      return t;
    }
    // Get instance field reference: private readonly System.Type _t
    [[deprecated]] ::System::Type*& dyn__t();
    // protected System.Void .ctor(System.Type t)
    // Offset: 0xEA67E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CastInstruction::CastInstructionNoT* New_ctor(::System::Type* t) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Interpreter::CastInstruction::CastInstructionNoT::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CastInstruction::CastInstructionNoT*, creationType>(t)));
    }
    // static public System.Linq.Expressions.Interpreter.CastInstruction Create(System.Type t)
    // Offset: 0xEA6810
    static ::System::Linq::Expressions::Interpreter::CastInstruction* Create(::System::Type* t);
    // protected System.Void ConvertNull(System.Linq.Expressions.Interpreter.InterpretedFrame frame)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ConvertNull(::System::Linq::Expressions::Interpreter::InterpretedFrame* frame);
    // public override System.Int32 Run(System.Linq.Expressions.Interpreter.InterpretedFrame frame)
    // Offset: 0xEA68C4
    // Implemented from: System.Linq.Expressions.Interpreter.Instruction
    // Base method: System.Int32 Instruction::Run(System.Linq.Expressions.Interpreter.InterpretedFrame frame)
    int Run(::System::Linq::Expressions::Interpreter::InterpretedFrame* frame);
  }; // System.Linq.Expressions.Interpreter.CastInstruction/System.Linq.Expressions.Interpreter.CastInstructionNoT
  #pragma pack(pop)
  static check_size<sizeof(CastInstruction::CastInstructionNoT), 16 + sizeof(::System::Type*)> __System_Linq_Expressions_Interpreter_CastInstruction_CastInstructionNoTSizeCheck;
  static_assert(sizeof(CastInstruction::CastInstructionNoT) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::CastInstruction::CastInstructionNoT::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::CastInstruction::CastInstructionNoT::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Linq::Expressions::Interpreter::CastInstruction* (*)(::System::Type*)>(&System::Linq::Expressions::Interpreter::CastInstruction::CastInstructionNoT::Create)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::CastInstruction::CastInstructionNoT*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::CastInstruction::CastInstructionNoT::ConvertNull
// Il2CppName: ConvertNull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Linq::Expressions::Interpreter::CastInstruction::CastInstructionNoT::*)(::System::Linq::Expressions::Interpreter::InterpretedFrame*)>(&System::Linq::Expressions::Interpreter::CastInstruction::CastInstructionNoT::ConvertNull)> {
  static const MethodInfo* get() {
    static auto* frame = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions.Interpreter", "InterpretedFrame")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::CastInstruction::CastInstructionNoT*), "ConvertNull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{frame});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::CastInstruction::CastInstructionNoT::Run
// Il2CppName: Run
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Linq::Expressions::Interpreter::CastInstruction::CastInstructionNoT::*)(::System::Linq::Expressions::Interpreter::InterpretedFrame*)>(&System::Linq::Expressions::Interpreter::CastInstruction::CastInstructionNoT::Run)> {
  static const MethodInfo* get() {
    static auto* frame = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions.Interpreter", "InterpretedFrame")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::CastInstruction::CastInstructionNoT*), "Run", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{frame});
  }
};
