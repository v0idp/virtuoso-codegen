// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Linq.Expressions.Expression
#include "System/Linq/Expressions/Expression.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Linq::Expressions::Expression::ExtensionInfo);
DEFINE_IL2CPP_ARG_TYPE(::System::Linq::Expressions::Expression::ExtensionInfo*, "System.Linq.Expressions", "Expression/ExtensionInfo");
// Type namespace: System.Linq.Expressions
namespace System::Linq::Expressions {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Linq.Expressions.Expression/System.Linq.Expressions.ExtensionInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class Expression::ExtensionInfo : public ::Il2CppObject {
    public:
    public:
    // readonly System.Linq.Expressions.ExpressionType NodeType
    // Size: 0x4
    // Offset: 0x10
    ::System::Linq::Expressions::ExpressionType NodeType;
    // Field size check
    static_assert(sizeof(::System::Linq::Expressions::ExpressionType) == 0x4);
    // Padding between fields: NodeType and: Type
    char __padding0[0x4] = {};
    // readonly System.Type Type
    // Size: 0x8
    // Offset: 0x18
    ::System::Type* Type;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    public:
    // Get instance field reference: readonly System.Linq.Expressions.ExpressionType NodeType
    [[deprecated]] ::System::Linq::Expressions::ExpressionType& dyn_NodeType();
    // Get instance field reference: readonly System.Type Type
    [[deprecated]] ::System::Type*& dyn_Type();
  }; // System.Linq.Expressions.Expression/System.Linq.Expressions.ExtensionInfo
  #pragma pack(pop)
  static check_size<sizeof(Expression::ExtensionInfo), 24 + sizeof(::System::Type*)> __System_Linq_Expressions_Expression_ExtensionInfoSizeCheck;
  static_assert(sizeof(Expression::ExtensionInfo) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
