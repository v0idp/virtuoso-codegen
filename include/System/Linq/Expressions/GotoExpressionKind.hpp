// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System.Linq.Expressions
namespace System::Linq::Expressions {
  // Forward declaring type: GotoExpressionKind
  struct GotoExpressionKind;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Linq::Expressions::GotoExpressionKind, "System.Linq.Expressions", "GotoExpressionKind");
// Type namespace: System.Linq.Expressions
namespace System::Linq::Expressions {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: System.Linq.Expressions.GotoExpressionKind
  // [TokenAttribute] Offset: FFFFFFFF
  struct GotoExpressionKind/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: GotoExpressionKind
    constexpr GotoExpressionKind(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.Linq.Expressions.GotoExpressionKind Goto
    static constexpr const int Goto = 0;
    // Get static field: static public System.Linq.Expressions.GotoExpressionKind Goto
    static ::System::Linq::Expressions::GotoExpressionKind _get_Goto();
    // Set static field: static public System.Linq.Expressions.GotoExpressionKind Goto
    static void _set_Goto(::System::Linq::Expressions::GotoExpressionKind value);
    // static field const value: static public System.Linq.Expressions.GotoExpressionKind Return
    static constexpr const int Return = 1;
    // Get static field: static public System.Linq.Expressions.GotoExpressionKind Return
    static ::System::Linq::Expressions::GotoExpressionKind _get_Return();
    // Set static field: static public System.Linq.Expressions.GotoExpressionKind Return
    static void _set_Return(::System::Linq::Expressions::GotoExpressionKind value);
    // static field const value: static public System.Linq.Expressions.GotoExpressionKind Break
    static constexpr const int Break = 2;
    // Get static field: static public System.Linq.Expressions.GotoExpressionKind Break
    static ::System::Linq::Expressions::GotoExpressionKind _get_Break();
    // Set static field: static public System.Linq.Expressions.GotoExpressionKind Break
    static void _set_Break(::System::Linq::Expressions::GotoExpressionKind value);
    // static field const value: static public System.Linq.Expressions.GotoExpressionKind Continue
    static constexpr const int Continue = 3;
    // Get static field: static public System.Linq.Expressions.GotoExpressionKind Continue
    static ::System::Linq::Expressions::GotoExpressionKind _get_Continue();
    // Set static field: static public System.Linq.Expressions.GotoExpressionKind Continue
    static void _set_Continue(::System::Linq::Expressions::GotoExpressionKind value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated]] int& dyn_value__();
  }; // System.Linq.Expressions.GotoExpressionKind
  #pragma pack(pop)
  static check_size<sizeof(GotoExpressionKind), 0 + sizeof(int)> __System_Linq_Expressions_GotoExpressionKindSizeCheck;
  static_assert(sizeof(GotoExpressionKind) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
