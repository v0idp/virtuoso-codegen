// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OggVorbisEncoder.Setup.ResidueType
#include "OggVorbisEncoder/Setup/ResidueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: OggVorbisEncoder.Setup
namespace OggVorbisEncoder::Setup {
  // Forward declaring type: Residue
  class Residue;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::OggVorbisEncoder::Setup::Residue);
DEFINE_IL2CPP_ARG_TYPE(::OggVorbisEncoder::Setup::Residue*, "OggVorbisEncoder.Setup", "Residue");
// Type namespace: OggVorbisEncoder.Setup
namespace OggVorbisEncoder::Setup {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: OggVorbisEncoder.Setup.Residue
  // [TokenAttribute] Offset: FFFFFFFF
  class Residue : public ::Il2CppObject {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private readonly System.Int32 <Begin>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    int Begin;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <End>k__BackingField
    // Size: 0x4
    // Offset: 0x14
    int End;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private readonly System.Int32 <Partitions>k__BackingField
    // Size: 0x4
    // Offset: 0x18
    int Partitions;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private readonly System.Int32 <PartitionValues>k__BackingField
    // Size: 0x4
    // Offset: 0x1C
    int PartitionValues;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <GroupBook>k__BackingField
    // Size: 0x4
    // Offset: 0x20
    int GroupBook;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: GroupBook and: SecondStages
    char __padding4[0x4] = {};
    // private readonly System.Int32[] <SecondStages>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<int> SecondStages;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private readonly System.Int32[] <BookList>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<int> BookList;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private readonly System.Int32[] <ClassMetric1>k__BackingField
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<int> ClassMetric1;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private readonly System.Int32[] <ClassMetric2>k__BackingField
    // Size: 0x8
    // Offset: 0x40
    ::ArrayW<int> ClassMetric2;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private readonly OggVorbisEncoder.Setup.ResidueType <ResidueType>k__BackingField
    // Size: 0x4
    // Offset: 0x48
    ::OggVorbisEncoder::Setup::ResidueType ResidueType;
    // Field size check
    static_assert(sizeof(::OggVorbisEncoder::Setup::ResidueType) == 0x4);
    // private readonly System.Int32 <Grouping>k__BackingField
    // Size: 0x4
    // Offset: 0x4C
    int Grouping;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: private readonly System.Int32 <Begin>k__BackingField
    int& dyn_$Begin$k__BackingField();
    // Get instance field reference: private System.Int32 <End>k__BackingField
    int& dyn_$End$k__BackingField();
    // Get instance field reference: private readonly System.Int32 <Partitions>k__BackingField
    int& dyn_$Partitions$k__BackingField();
    // Get instance field reference: private readonly System.Int32 <PartitionValues>k__BackingField
    int& dyn_$PartitionValues$k__BackingField();
    // Get instance field reference: private System.Int32 <GroupBook>k__BackingField
    int& dyn_$GroupBook$k__BackingField();
    // Get instance field reference: private readonly System.Int32[] <SecondStages>k__BackingField
    ::ArrayW<int>& dyn_$SecondStages$k__BackingField();
    // Get instance field reference: private readonly System.Int32[] <BookList>k__BackingField
    ::ArrayW<int>& dyn_$BookList$k__BackingField();
    // Get instance field reference: private readonly System.Int32[] <ClassMetric1>k__BackingField
    ::ArrayW<int>& dyn_$ClassMetric1$k__BackingField();
    // Get instance field reference: private readonly System.Int32[] <ClassMetric2>k__BackingField
    ::ArrayW<int>& dyn_$ClassMetric2$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.ResidueType <ResidueType>k__BackingField
    ::OggVorbisEncoder::Setup::ResidueType& dyn_$ResidueType$k__BackingField();
    // Get instance field reference: private readonly System.Int32 <Grouping>k__BackingField
    int& dyn_$Grouping$k__BackingField();
    // public System.Int32 get_Begin()
    // Offset: 0x7A59A0
    int get_Begin();
    // public System.Int32 get_End()
    // Offset: 0x7A59A8
    int get_End();
    // public System.Void set_End(System.Int32 value)
    // Offset: 0x7A59B0
    void set_End(int value);
    // public System.Int32 get_Partitions()
    // Offset: 0x7A59B8
    int get_Partitions();
    // public System.Int32 get_PartitionValues()
    // Offset: 0x7A59C0
    int get_PartitionValues();
    // public System.Int32 get_GroupBook()
    // Offset: 0x7A59C8
    int get_GroupBook();
    // public System.Void set_GroupBook(System.Int32 value)
    // Offset: 0x7A59D0
    void set_GroupBook(int value);
    // public System.Int32[] get_SecondStages()
    // Offset: 0x7A59D8
    ::ArrayW<int> get_SecondStages();
    // public System.Int32[] get_BookList()
    // Offset: 0x7A59E0
    ::ArrayW<int> get_BookList();
    // public System.Int32[] get_ClassMetric1()
    // Offset: 0x7A59E8
    ::ArrayW<int> get_ClassMetric1();
    // public System.Int32[] get_ClassMetric2()
    // Offset: 0x7A59F0
    ::ArrayW<int> get_ClassMetric2();
    // public OggVorbisEncoder.Setup.ResidueType get_ResidueType()
    // Offset: 0x7A59F8
    ::OggVorbisEncoder::Setup::ResidueType get_ResidueType();
    // public System.Int32 get_Grouping()
    // Offset: 0x7A5A00
    int get_Grouping();
    // public System.Void .ctor(System.Int32 begin, System.Int32 end, System.Int32 grouping, System.Int32 partitions, System.Int32 partitionValues, System.Int32 groupBook, System.Int32[] secondStages, System.Int32[] bookList, System.Int32[] classMetric1, System.Int32[] classMetric2, OggVorbisEncoder.Setup.ResidueType residueType)
    // Offset: 0x7A5888
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Residue* New_ctor(int begin, int end, int grouping, int partitions, int partitionValues, int groupBook, ::ArrayW<int> secondStages, ::ArrayW<int> bookList, ::ArrayW<int> classMetric1, ::ArrayW<int> classMetric2, ::OggVorbisEncoder::Setup::ResidueType residueType) {
      static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbisEncoder::Setup::Residue::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Residue*, creationType>(begin, end, grouping, partitions, partitionValues, groupBook, secondStages, bookList, classMetric1, classMetric2, residueType)));
    }
    // public OggVorbisEncoder.Setup.Residue Clone(OggVorbisEncoder.Setup.ResidueType residueTypeOverride, System.Int32 groupingOverride)
    // Offset: 0x7A5A08
    ::OggVorbisEncoder::Setup::Residue* Clone(::OggVorbisEncoder::Setup::ResidueType residueTypeOverride, int groupingOverride);
  }; // OggVorbisEncoder.Setup.Residue
  #pragma pack(pop)
  static check_size<sizeof(Residue), 76 + sizeof(int)> __OggVorbisEncoder_Setup_ResidueSizeCheck;
  static_assert(sizeof(Residue) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Residue::get_Begin
// Il2CppName: get_Begin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (OggVorbisEncoder::Setup::Residue::*)()>(&OggVorbisEncoder::Setup::Residue::get_Begin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Residue*), "get_Begin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Residue::get_End
// Il2CppName: get_End
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (OggVorbisEncoder::Setup::Residue::*)()>(&OggVorbisEncoder::Setup::Residue::get_End)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Residue*), "get_End", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Residue::set_End
// Il2CppName: set_End
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OggVorbisEncoder::Setup::Residue::*)(int)>(&OggVorbisEncoder::Setup::Residue::set_End)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Residue*), "set_End", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Residue::get_Partitions
// Il2CppName: get_Partitions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (OggVorbisEncoder::Setup::Residue::*)()>(&OggVorbisEncoder::Setup::Residue::get_Partitions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Residue*), "get_Partitions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Residue::get_PartitionValues
// Il2CppName: get_PartitionValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (OggVorbisEncoder::Setup::Residue::*)()>(&OggVorbisEncoder::Setup::Residue::get_PartitionValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Residue*), "get_PartitionValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Residue::get_GroupBook
// Il2CppName: get_GroupBook
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (OggVorbisEncoder::Setup::Residue::*)()>(&OggVorbisEncoder::Setup::Residue::get_GroupBook)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Residue*), "get_GroupBook", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Residue::set_GroupBook
// Il2CppName: set_GroupBook
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OggVorbisEncoder::Setup::Residue::*)(int)>(&OggVorbisEncoder::Setup::Residue::set_GroupBook)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Residue*), "set_GroupBook", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Residue::get_SecondStages
// Il2CppName: get_SecondStages
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (OggVorbisEncoder::Setup::Residue::*)()>(&OggVorbisEncoder::Setup::Residue::get_SecondStages)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Residue*), "get_SecondStages", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Residue::get_BookList
// Il2CppName: get_BookList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (OggVorbisEncoder::Setup::Residue::*)()>(&OggVorbisEncoder::Setup::Residue::get_BookList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Residue*), "get_BookList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Residue::get_ClassMetric1
// Il2CppName: get_ClassMetric1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (OggVorbisEncoder::Setup::Residue::*)()>(&OggVorbisEncoder::Setup::Residue::get_ClassMetric1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Residue*), "get_ClassMetric1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Residue::get_ClassMetric2
// Il2CppName: get_ClassMetric2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (OggVorbisEncoder::Setup::Residue::*)()>(&OggVorbisEncoder::Setup::Residue::get_ClassMetric2)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Residue*), "get_ClassMetric2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Residue::get_ResidueType
// Il2CppName: get_ResidueType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::OggVorbisEncoder::Setup::ResidueType (OggVorbisEncoder::Setup::Residue::*)()>(&OggVorbisEncoder::Setup::Residue::get_ResidueType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Residue*), "get_ResidueType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Residue::get_Grouping
// Il2CppName: get_Grouping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (OggVorbisEncoder::Setup::Residue::*)()>(&OggVorbisEncoder::Setup::Residue::get_Grouping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Residue*), "get_Grouping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Residue::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Residue::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::OggVorbisEncoder::Setup::Residue* (OggVorbisEncoder::Setup::Residue::*)(::OggVorbisEncoder::Setup::ResidueType, int)>(&OggVorbisEncoder::Setup::Residue::Clone)> {
  static const MethodInfo* get() {
    static auto* residueTypeOverride = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder.Setup", "ResidueType")->byval_arg;
    static auto* groupingOverride = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Residue*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{residueTypeOverride, groupingOverride});
  }
};
