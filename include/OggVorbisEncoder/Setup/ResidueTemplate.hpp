// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OggVorbisEncoder.Setup.IResidueTemplate
#include "OggVorbisEncoder/Setup/IResidueTemplate.hpp"
// Including type: OggVorbisEncoder.Setup.ResidueType
#include "OggVorbisEncoder/Setup/ResidueType.hpp"
// Including type: OggVorbisEncoder.Setup.ResidueLimitType
#include "OggVorbisEncoder/Setup/ResidueLimitType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: OggVorbisEncoder::Setup
namespace OggVorbisEncoder::Setup {
  // Forward declaring type: Residue
  class Residue;
  // Forward declaring type: IStaticCodeBook
  class IStaticCodeBook;
  // Forward declaring type: IStaticBookBlock
  class IStaticBookBlock;
}
// Completed forward declares
// Type namespace: OggVorbisEncoder.Setup
namespace OggVorbisEncoder::Setup {
  // Forward declaring type: ResidueTemplate
  class ResidueTemplate;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::OggVorbisEncoder::Setup::ResidueTemplate);
DEFINE_IL2CPP_ARG_TYPE(::OggVorbisEncoder::Setup::ResidueTemplate*, "OggVorbisEncoder.Setup", "ResidueTemplate");
// Type namespace: OggVorbisEncoder.Setup
namespace OggVorbisEncoder::Setup {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: OggVorbisEncoder.Setup.ResidueTemplate
  // [TokenAttribute] Offset: FFFFFFFF
  class ResidueTemplate : public ::Il2CppObject/*, public ::OggVorbisEncoder::Setup::IResidueTemplate*/ {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private readonly OggVorbisEncoder.Setup.ResidueType <ResidueType>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    ::OggVorbisEncoder::Setup::ResidueType ResidueType;
    // Field size check
    static_assert(sizeof(::OggVorbisEncoder::Setup::ResidueType) == 0x4);
    // private readonly OggVorbisEncoder.Setup.ResidueLimitType <LimitType>k__BackingField
    // Size: 0x4
    // Offset: 0x14
    ::OggVorbisEncoder::Setup::ResidueLimitType LimitType;
    // Field size check
    static_assert(sizeof(::OggVorbisEncoder::Setup::ResidueLimitType) == 0x4);
    // private readonly System.Int32 <Grouping>k__BackingField
    // Size: 0x4
    // Offset: 0x18
    int Grouping;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: Grouping and: Residue
    char __padding2[0x4] = {};
    // private readonly OggVorbisEncoder.Setup.Residue <Residue>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::OggVorbisEncoder::Setup::Residue* Residue;
    // Field size check
    static_assert(sizeof(::OggVorbisEncoder::Setup::Residue*) == 0x8);
    // private readonly OggVorbisEncoder.Setup.IStaticCodeBook <BookAux>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::OggVorbisEncoder::Setup::IStaticCodeBook* BookAux;
    // Field size check
    static_assert(sizeof(::OggVorbisEncoder::Setup::IStaticCodeBook*) == 0x8);
    // private readonly OggVorbisEncoder.Setup.IStaticCodeBook <BookAuxManaged>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    ::OggVorbisEncoder::Setup::IStaticCodeBook* BookAuxManaged;
    // Field size check
    static_assert(sizeof(::OggVorbisEncoder::Setup::IStaticCodeBook*) == 0x8);
    // private readonly OggVorbisEncoder.Setup.IStaticBookBlock <BooksBase>k__BackingField
    // Size: 0x8
    // Offset: 0x38
    ::OggVorbisEncoder::Setup::IStaticBookBlock* BooksBase;
    // Field size check
    static_assert(sizeof(::OggVorbisEncoder::Setup::IStaticBookBlock*) == 0x8);
    // private readonly OggVorbisEncoder.Setup.IStaticBookBlock <BooksBaseManaged>k__BackingField
    // Size: 0x8
    // Offset: 0x40
    ::OggVorbisEncoder::Setup::IStaticBookBlock* BooksBaseManaged;
    // Field size check
    static_assert(sizeof(::OggVorbisEncoder::Setup::IStaticBookBlock*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::OggVorbisEncoder::Setup::IResidueTemplate
    operator ::OggVorbisEncoder::Setup::IResidueTemplate() noexcept {
      return *reinterpret_cast<::OggVorbisEncoder::Setup::IResidueTemplate*>(this);
    }
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.ResidueType <ResidueType>k__BackingField
    ::OggVorbisEncoder::Setup::ResidueType& dyn_$ResidueType$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.ResidueLimitType <LimitType>k__BackingField
    ::OggVorbisEncoder::Setup::ResidueLimitType& dyn_$LimitType$k__BackingField();
    // Get instance field reference: private readonly System.Int32 <Grouping>k__BackingField
    int& dyn_$Grouping$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.Residue <Residue>k__BackingField
    ::OggVorbisEncoder::Setup::Residue*& dyn_$Residue$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.IStaticCodeBook <BookAux>k__BackingField
    ::OggVorbisEncoder::Setup::IStaticCodeBook*& dyn_$BookAux$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.IStaticCodeBook <BookAuxManaged>k__BackingField
    ::OggVorbisEncoder::Setup::IStaticCodeBook*& dyn_$BookAuxManaged$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.IStaticBookBlock <BooksBase>k__BackingField
    ::OggVorbisEncoder::Setup::IStaticBookBlock*& dyn_$BooksBase$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.IStaticBookBlock <BooksBaseManaged>k__BackingField
    ::OggVorbisEncoder::Setup::IStaticBookBlock*& dyn_$BooksBaseManaged$k__BackingField();
    // public OggVorbisEncoder.Setup.ResidueType get_ResidueType()
    // Offset: 0x7A8834
    ::OggVorbisEncoder::Setup::ResidueType get_ResidueType();
    // public OggVorbisEncoder.Setup.ResidueLimitType get_LimitType()
    // Offset: 0x7A883C
    ::OggVorbisEncoder::Setup::ResidueLimitType get_LimitType();
    // public System.Int32 get_Grouping()
    // Offset: 0x7A8844
    int get_Grouping();
    // public OggVorbisEncoder.Setup.Residue get_Residue()
    // Offset: 0x7A884C
    ::OggVorbisEncoder::Setup::Residue* get_Residue();
    // public OggVorbisEncoder.Setup.IStaticCodeBook get_BookAux()
    // Offset: 0x7A8854
    ::OggVorbisEncoder::Setup::IStaticCodeBook* get_BookAux();
    // public OggVorbisEncoder.Setup.IStaticCodeBook get_BookAuxManaged()
    // Offset: 0x7A885C
    ::OggVorbisEncoder::Setup::IStaticCodeBook* get_BookAuxManaged();
    // public OggVorbisEncoder.Setup.IStaticBookBlock get_BooksBase()
    // Offset: 0x7A8864
    ::OggVorbisEncoder::Setup::IStaticBookBlock* get_BooksBase();
    // public OggVorbisEncoder.Setup.IStaticBookBlock get_BooksBaseManaged()
    // Offset: 0x7A886C
    ::OggVorbisEncoder::Setup::IStaticBookBlock* get_BooksBaseManaged();
    // public System.Void .ctor(OggVorbisEncoder.Setup.ResidueType residueType, OggVorbisEncoder.Setup.ResidueLimitType limitType, System.Int32 grouping, OggVorbisEncoder.Setup.Residue residue, OggVorbisEncoder.Setup.IStaticCodeBook bookAux, OggVorbisEncoder.Setup.IStaticCodeBook booxAuxManaged, OggVorbisEncoder.Setup.IStaticBookBlock booksBase, OggVorbisEncoder.Setup.IStaticBookBlock booksBaseManaged)
    // Offset: 0x7A76C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ResidueTemplate* New_ctor(::OggVorbisEncoder::Setup::ResidueType residueType, ::OggVorbisEncoder::Setup::ResidueLimitType limitType, int grouping, ::OggVorbisEncoder::Setup::Residue* residue, ::OggVorbisEncoder::Setup::IStaticCodeBook* bookAux, ::OggVorbisEncoder::Setup::IStaticCodeBook* booxAuxManaged, ::OggVorbisEncoder::Setup::IStaticBookBlock* booksBase, ::OggVorbisEncoder::Setup::IStaticBookBlock* booksBaseManaged) {
      static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbisEncoder::Setup::ResidueTemplate::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ResidueTemplate*, creationType>(residueType, limitType, grouping, residue, bookAux, booxAuxManaged, booksBase, booksBaseManaged)));
    }
  }; // OggVorbisEncoder.Setup.ResidueTemplate
  #pragma pack(pop)
  static check_size<sizeof(ResidueTemplate), 64 + sizeof(::OggVorbisEncoder::Setup::IStaticBookBlock*)> __OggVorbisEncoder_Setup_ResidueTemplateSizeCheck;
  static_assert(sizeof(ResidueTemplate) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::ResidueTemplate::get_ResidueType
// Il2CppName: get_ResidueType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::OggVorbisEncoder::Setup::ResidueType (OggVorbisEncoder::Setup::ResidueTemplate::*)()>(&OggVorbisEncoder::Setup::ResidueTemplate::get_ResidueType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::ResidueTemplate*), "get_ResidueType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::ResidueTemplate::get_LimitType
// Il2CppName: get_LimitType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::OggVorbisEncoder::Setup::ResidueLimitType (OggVorbisEncoder::Setup::ResidueTemplate::*)()>(&OggVorbisEncoder::Setup::ResidueTemplate::get_LimitType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::ResidueTemplate*), "get_LimitType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::ResidueTemplate::get_Grouping
// Il2CppName: get_Grouping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (OggVorbisEncoder::Setup::ResidueTemplate::*)()>(&OggVorbisEncoder::Setup::ResidueTemplate::get_Grouping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::ResidueTemplate*), "get_Grouping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::ResidueTemplate::get_Residue
// Il2CppName: get_Residue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::OggVorbisEncoder::Setup::Residue* (OggVorbisEncoder::Setup::ResidueTemplate::*)()>(&OggVorbisEncoder::Setup::ResidueTemplate::get_Residue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::ResidueTemplate*), "get_Residue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::ResidueTemplate::get_BookAux
// Il2CppName: get_BookAux
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::OggVorbisEncoder::Setup::IStaticCodeBook* (OggVorbisEncoder::Setup::ResidueTemplate::*)()>(&OggVorbisEncoder::Setup::ResidueTemplate::get_BookAux)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::ResidueTemplate*), "get_BookAux", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::ResidueTemplate::get_BookAuxManaged
// Il2CppName: get_BookAuxManaged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::OggVorbisEncoder::Setup::IStaticCodeBook* (OggVorbisEncoder::Setup::ResidueTemplate::*)()>(&OggVorbisEncoder::Setup::ResidueTemplate::get_BookAuxManaged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::ResidueTemplate*), "get_BookAuxManaged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::ResidueTemplate::get_BooksBase
// Il2CppName: get_BooksBase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::OggVorbisEncoder::Setup::IStaticBookBlock* (OggVorbisEncoder::Setup::ResidueTemplate::*)()>(&OggVorbisEncoder::Setup::ResidueTemplate::get_BooksBase)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::ResidueTemplate*), "get_BooksBase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::ResidueTemplate::get_BooksBaseManaged
// Il2CppName: get_BooksBaseManaged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::OggVorbisEncoder::Setup::IStaticBookBlock* (OggVorbisEncoder::Setup::ResidueTemplate::*)()>(&OggVorbisEncoder::Setup::ResidueTemplate::get_BooksBaseManaged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::ResidueTemplate*), "get_BooksBaseManaged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::ResidueTemplate::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
