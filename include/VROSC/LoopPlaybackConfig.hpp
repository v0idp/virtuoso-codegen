// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Boolean
#include "System/Boolean.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: LoopPlaybackConfigData
  class LoopPlaybackConfigData;
  // Forward declaring type: Loop
  class Loop;
  // Skipping declaration: TriggerSync because it is already included!
  // Skipping declaration: FadeDuration because it is already included!
  // Forward declaring type: LoopPlayerPlaybackSettings
  class LoopPlayerPlaybackSettings;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: LoopPlaybackConfig
  class LoopPlaybackConfig;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::LoopPlaybackConfig);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::LoopPlaybackConfig*, "VROSC", "LoopPlaybackConfig");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.LoopPlaybackConfig
  // [TokenAttribute] Offset: FFFFFFFF
  class LoopPlaybackConfig : public ::Il2CppObject {
    public:
    // Nested type: ::VROSC::LoopPlaybackConfig::TriggerSync
    struct TriggerSync;
    // Nested type: ::VROSC::LoopPlaybackConfig::FadeDuration
    struct FadeDuration;
    // Nested type: ::VROSC::LoopPlaybackConfig::Sync
    struct Sync;
    // Nested type: ::VROSC::LoopPlaybackConfig::LoopMode
    struct LoopMode;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: VROSC.LoopPlaybackConfig/VROSC.TriggerSync
    // [TokenAttribute] Offset: FFFFFFFF
    struct TriggerSync/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: TriggerSync
      constexpr TriggerSync(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Instant
      static constexpr const int Instant = 0;
      // Get static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Instant
      static ::VROSC::LoopPlaybackConfig::TriggerSync _get_Instant();
      // Set static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Instant
      static void _set_Instant(::VROSC::LoopPlaybackConfig::TriggerSync value);
      // static field const value: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync LoopPoint
      static constexpr const int LoopPoint = 1;
      // Get static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync LoopPoint
      static ::VROSC::LoopPlaybackConfig::TriggerSync _get_LoopPoint();
      // Set static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync LoopPoint
      static void _set_LoopPoint(::VROSC::LoopPlaybackConfig::TriggerSync value);
      // static field const value: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Bar
      static constexpr const int Bar = 2;
      // Get static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Bar
      static ::VROSC::LoopPlaybackConfig::TriggerSync _get_Bar();
      // Set static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Bar
      static void _set_Bar(::VROSC::LoopPlaybackConfig::TriggerSync value);
      // static field const value: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Half
      static constexpr const int Half = 3;
      // Get static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Half
      static ::VROSC::LoopPlaybackConfig::TriggerSync _get_Half();
      // Set static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Half
      static void _set_Half(::VROSC::LoopPlaybackConfig::TriggerSync value);
      // static field const value: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Quarter
      static constexpr const int Quarter = 4;
      // Get static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Quarter
      static ::VROSC::LoopPlaybackConfig::TriggerSync _get_Quarter();
      // Set static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Quarter
      static void _set_Quarter(::VROSC::LoopPlaybackConfig::TriggerSync value);
      // static field const value: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Eigth
      static constexpr const int Eigth = 5;
      // Get static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Eigth
      static ::VROSC::LoopPlaybackConfig::TriggerSync _get_Eigth();
      // Set static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Eigth
      static void _set_Eigth(::VROSC::LoopPlaybackConfig::TriggerSync value);
      // static field const value: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Sixteenth
      static constexpr const int Sixteenth = 6;
      // Get static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Sixteenth
      static ::VROSC::LoopPlaybackConfig::TriggerSync _get_Sixteenth();
      // Set static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Sixteenth
      static void _set_Sixteenth(::VROSC::LoopPlaybackConfig::TriggerSync value);
      // static field const value: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Twelfth
      static constexpr const int Twelfth = 7;
      // Get static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Twelfth
      static ::VROSC::LoopPlaybackConfig::TriggerSync _get_Twelfth();
      // Set static field: static public VROSC.LoopPlaybackConfig/VROSC.TriggerSync Twelfth
      static void _set_Twelfth(::VROSC::LoopPlaybackConfig::TriggerSync value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated]] int& dyn_value__();
    }; // VROSC.LoopPlaybackConfig/VROSC.TriggerSync
    #pragma pack(pop)
    static check_size<sizeof(LoopPlaybackConfig::TriggerSync), 0 + sizeof(int)> __VROSC_LoopPlaybackConfig_TriggerSyncSizeCheck;
    static_assert(sizeof(LoopPlaybackConfig::TriggerSync) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: VROSC.LoopPlaybackConfig/VROSC.FadeDuration
    // [TokenAttribute] Offset: FFFFFFFF
    struct FadeDuration/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: FadeDuration
      constexpr FadeDuration(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration None
      static constexpr const int None = 0;
      // Get static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration None
      static ::VROSC::LoopPlaybackConfig::FadeDuration _get_None();
      // Set static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration None
      static void _set_None(::VROSC::LoopPlaybackConfig::FadeDuration value);
      // static field const value: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Sixteenth
      static constexpr const int Sixteenth = 1;
      // Get static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Sixteenth
      static ::VROSC::LoopPlaybackConfig::FadeDuration _get_Sixteenth();
      // Set static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Sixteenth
      static void _set_Sixteenth(::VROSC::LoopPlaybackConfig::FadeDuration value);
      // static field const value: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Eighth
      static constexpr const int Eighth = 2;
      // Get static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Eighth
      static ::VROSC::LoopPlaybackConfig::FadeDuration _get_Eighth();
      // Set static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Eighth
      static void _set_Eighth(::VROSC::LoopPlaybackConfig::FadeDuration value);
      // static field const value: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Quarter
      static constexpr const int Quarter = 3;
      // Get static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Quarter
      static ::VROSC::LoopPlaybackConfig::FadeDuration _get_Quarter();
      // Set static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Quarter
      static void _set_Quarter(::VROSC::LoopPlaybackConfig::FadeDuration value);
      // static field const value: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Half
      static constexpr const int Half = 4;
      // Get static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Half
      static ::VROSC::LoopPlaybackConfig::FadeDuration _get_Half();
      // Set static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Half
      static void _set_Half(::VROSC::LoopPlaybackConfig::FadeDuration value);
      // static field const value: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Bar
      static constexpr const int Bar = 5;
      // Get static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Bar
      static ::VROSC::LoopPlaybackConfig::FadeDuration _get_Bar();
      // Set static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Bar
      static void _set_Bar(::VROSC::LoopPlaybackConfig::FadeDuration value);
      // static field const value: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration TwoBars
      static constexpr const int TwoBars = 6;
      // Get static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration TwoBars
      static ::VROSC::LoopPlaybackConfig::FadeDuration _get_TwoBars();
      // Set static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration TwoBars
      static void _set_TwoBars(::VROSC::LoopPlaybackConfig::FadeDuration value);
      // static field const value: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration FourBars
      static constexpr const int FourBars = 7;
      // Get static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration FourBars
      static ::VROSC::LoopPlaybackConfig::FadeDuration _get_FourBars();
      // Set static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration FourBars
      static void _set_FourBars(::VROSC::LoopPlaybackConfig::FadeDuration value);
      // static field const value: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Auto
      static constexpr const int Auto = 8;
      // Get static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Auto
      static ::VROSC::LoopPlaybackConfig::FadeDuration _get_Auto();
      // Set static field: static public VROSC.LoopPlaybackConfig/VROSC.FadeDuration Auto
      static void _set_Auto(::VROSC::LoopPlaybackConfig::FadeDuration value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated]] int& dyn_value__();
    }; // VROSC.LoopPlaybackConfig/VROSC.FadeDuration
    #pragma pack(pop)
    static check_size<sizeof(LoopPlaybackConfig::FadeDuration), 0 + sizeof(int)> __VROSC_LoopPlaybackConfig_FadeDurationSizeCheck;
    static_assert(sizeof(LoopPlaybackConfig::FadeDuration) == 0x4);
    public:
    // private VROSC.LoopPlaybackConfigData <Data>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::VROSC::LoopPlaybackConfigData* Data;
    // Field size check
    static_assert(sizeof(::VROSC::LoopPlaybackConfigData*) == 0x8);
    // private VROSC.Loop <ReferenceLoopForStart>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::Loop* ReferenceLoopForStart;
    // Field size check
    static_assert(sizeof(::VROSC::Loop*) == 0x8);
    // private VROSC.Loop <ReferenceLoopForLength>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::Loop* ReferenceLoopForLength;
    // Field size check
    static_assert(sizeof(::VROSC::Loop*) == 0x8);
    // public System.Action`1<VROSC.LoopPlaybackConfig/VROSC.TriggerSync> OnStartSet
    // Size: 0x8
    // Offset: 0x28
    ::System::Action_1<::VROSC::LoopPlaybackConfig::TriggerSync>* OnStartSet;
    // Field size check
    static_assert(sizeof(::System::Action_1<::VROSC::LoopPlaybackConfig::TriggerSync>*) == 0x8);
    // public System.Action`1<VROSC.LoopPlaybackConfig/VROSC.TriggerSync> OnStopSet
    // Size: 0x8
    // Offset: 0x30
    ::System::Action_1<::VROSC::LoopPlaybackConfig::TriggerSync>* OnStopSet;
    // Field size check
    static_assert(sizeof(::System::Action_1<::VROSC::LoopPlaybackConfig::TriggerSync>*) == 0x8);
    // public System.Action`1<System.Boolean> OnOneShotSet
    // Size: 0x8
    // Offset: 0x38
    ::System::Action_1<bool>* OnOneShotSet;
    // Field size check
    static_assert(sizeof(::System::Action_1<bool>*) == 0x8);
    // public System.Action`1<System.Boolean> OnRetriggerSet
    // Size: 0x8
    // Offset: 0x40
    ::System::Action_1<bool>* OnRetriggerSet;
    // Field size check
    static_assert(sizeof(::System::Action_1<bool>*) == 0x8);
    // public System.Action`1<VROSC.LoopPlaybackConfig/VROSC.FadeDuration> OnFadeOutSet
    // Size: 0x8
    // Offset: 0x48
    ::System::Action_1<::VROSC::LoopPlaybackConfig::FadeDuration>* OnFadeOutSet;
    // Field size check
    static_assert(sizeof(::System::Action_1<::VROSC::LoopPlaybackConfig::FadeDuration>*) == 0x8);
    // public System.Action`1<VROSC.LoopPlaybackConfig/VROSC.FadeDuration> OnFadeInSet
    // Size: 0x8
    // Offset: 0x50
    ::System::Action_1<::VROSC::LoopPlaybackConfig::FadeDuration>* OnFadeInSet;
    // Field size check
    static_assert(sizeof(::System::Action_1<::VROSC::LoopPlaybackConfig::FadeDuration>*) == 0x8);
    // public System.Action OnConfigChanged
    // Size: 0x8
    // Offset: 0x58
    ::System::Action* OnConfigChanged;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    public:
    // Get static field: static public System.String[] TriggerSyncNames
    static ::ArrayW<::StringW> _get_TriggerSyncNames();
    // Set static field: static public System.String[] TriggerSyncNames
    static void _set_TriggerSyncNames(::ArrayW<::StringW> value);
    // Get static field: static public System.String[] FadeDurationNames
    static ::ArrayW<::StringW> _get_FadeDurationNames();
    // Set static field: static public System.String[] FadeDurationNames
    static void _set_FadeDurationNames(::ArrayW<::StringW> value);
    // static field const value: static public System.Boolean FadeAfterStopInsteadOfBefore
    static constexpr const bool FadeAfterStopInsteadOfBefore = true;
    // Get static field: static public System.Boolean FadeAfterStopInsteadOfBefore
    static bool _get_FadeAfterStopInsteadOfBefore();
    // Set static field: static public System.Boolean FadeAfterStopInsteadOfBefore
    static void _set_FadeAfterStopInsteadOfBefore(bool value);
    // Get instance field reference: private VROSC.LoopPlaybackConfigData <Data>k__BackingField
    [[deprecated]] ::VROSC::LoopPlaybackConfigData*& dyn_$Data$k__BackingField();
    // Get instance field reference: private VROSC.Loop <ReferenceLoopForStart>k__BackingField
    [[deprecated]] ::VROSC::Loop*& dyn_$ReferenceLoopForStart$k__BackingField();
    // Get instance field reference: private VROSC.Loop <ReferenceLoopForLength>k__BackingField
    [[deprecated]] ::VROSC::Loop*& dyn_$ReferenceLoopForLength$k__BackingField();
    // Get instance field reference: public System.Action`1<VROSC.LoopPlaybackConfig/VROSC.TriggerSync> OnStartSet
    [[deprecated]] ::System::Action_1<::VROSC::LoopPlaybackConfig::TriggerSync>*& dyn_OnStartSet();
    // Get instance field reference: public System.Action`1<VROSC.LoopPlaybackConfig/VROSC.TriggerSync> OnStopSet
    [[deprecated]] ::System::Action_1<::VROSC::LoopPlaybackConfig::TriggerSync>*& dyn_OnStopSet();
    // Get instance field reference: public System.Action`1<System.Boolean> OnOneShotSet
    [[deprecated]] ::System::Action_1<bool>*& dyn_OnOneShotSet();
    // Get instance field reference: public System.Action`1<System.Boolean> OnRetriggerSet
    [[deprecated]] ::System::Action_1<bool>*& dyn_OnRetriggerSet();
    // Get instance field reference: public System.Action`1<VROSC.LoopPlaybackConfig/VROSC.FadeDuration> OnFadeOutSet
    [[deprecated]] ::System::Action_1<::VROSC::LoopPlaybackConfig::FadeDuration>*& dyn_OnFadeOutSet();
    // Get instance field reference: public System.Action`1<VROSC.LoopPlaybackConfig/VROSC.FadeDuration> OnFadeInSet
    [[deprecated]] ::System::Action_1<::VROSC::LoopPlaybackConfig::FadeDuration>*& dyn_OnFadeInSet();
    // Get instance field reference: public System.Action OnConfigChanged
    [[deprecated]] ::System::Action*& dyn_OnConfigChanged();
    // public VROSC.LoopPlaybackConfigData get_Data()
    // Offset: 0x19B5CAC
    ::VROSC::LoopPlaybackConfigData* get_Data();
    // protected System.Void set_Data(VROSC.LoopPlaybackConfigData value)
    // Offset: 0x19B5CA4
    void set_Data(::VROSC::LoopPlaybackConfigData* value);
    // public VROSC.Loop get_ReferenceLoopForStart()
    // Offset: 0x19B5CBC
    ::VROSC::Loop* get_ReferenceLoopForStart();
    // public System.Void set_ReferenceLoopForStart(VROSC.Loop value)
    // Offset: 0x19B5CB4
    void set_ReferenceLoopForStart(::VROSC::Loop* value);
    // public VROSC.Loop get_ReferenceLoopForLength()
    // Offset: 0x19B5CCC
    ::VROSC::Loop* get_ReferenceLoopForLength();
    // public System.Void set_ReferenceLoopForLength(VROSC.Loop value)
    // Offset: 0x19B5CC4
    void set_ReferenceLoopForLength(::VROSC::Loop* value);
    // public System.Void .ctor(VROSC.LoopPlaybackConfigData configData)
    // Offset: 0x19B5E14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoopPlaybackConfig* New_ctor(::VROSC::LoopPlaybackConfigData* configData) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoopPlaybackConfig*, creationType>(configData)));
    }
    // public System.Void .ctor(VROSC.LoopPlaybackConfig other, System.Boolean updateFrom)
    // Offset: 0x19B5F18
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoopPlaybackConfig* New_ctor(::VROSC::LoopPlaybackConfig* other, bool updateFrom) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoopPlaybackConfig*, creationType>(other, updateFrom)));
    }
    // public System.Void .ctor(VROSC.LoopPlaybackConfig/VROSC.TriggerSync startMode, System.Boolean isStartModeLocked, VROSC.LoopPlaybackConfig/VROSC.TriggerSync stopMode, VROSC.LoopPlaybackConfig/VROSC.FadeDuration fadeIn, VROSC.LoopPlaybackConfig/VROSC.FadeDuration fadeOut, System.Boolean oneShot, System.Boolean retrigger)
    // Offset: 0x19B6274
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoopPlaybackConfig* New_ctor(::VROSC::LoopPlaybackConfig::TriggerSync startMode, bool isStartModeLocked, ::VROSC::LoopPlaybackConfig::TriggerSync stopMode, ::VROSC::LoopPlaybackConfig::FadeDuration fadeIn, ::VROSC::LoopPlaybackConfig::FadeDuration fadeOut, bool oneShot, bool retrigger) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoopPlaybackConfig*, creationType>(startMode, isStartModeLocked, stopMode, fadeIn, fadeOut, oneShot, retrigger)));
    }
    // static private System.Void .cctor()
    // Offset: 0x19B6B08
    static void _cctor();
    // public System.Void SharedConstructor(VROSC.LoopPlaybackConfig/VROSC.TriggerSync startMode, System.Boolean isStartModeLocked, VROSC.LoopPlaybackConfig/VROSC.TriggerSync stopMode, VROSC.LoopPlaybackConfig/VROSC.FadeDuration fadeIn, VROSC.LoopPlaybackConfig/VROSC.FadeDuration fadeOut, System.Boolean oneShot, System.Boolean retrigger)
    // Offset: 0x19B5DA0
    void SharedConstructor(::VROSC::LoopPlaybackConfig::TriggerSync startMode, bool isStartModeLocked, ::VROSC::LoopPlaybackConfig::TriggerSync stopMode, ::VROSC::LoopPlaybackConfig::FadeDuration fadeIn, ::VROSC::LoopPlaybackConfig::FadeDuration fadeOut, bool oneShot, bool retrigger);
    // public System.Void ApplyTo(VROSC.LoopPlaybackConfig other)
    // Offset: 0x19B6350
    void ApplyTo(::VROSC::LoopPlaybackConfig* other);
    // public System.Void SetStartMode(VROSC.LoopPlaybackConfig/VROSC.TriggerSync startMode)
    // Offset: 0x19B6418
    void SetStartMode(::VROSC::LoopPlaybackConfig::TriggerSync startMode);
    // public System.Void SetStopMode(VROSC.LoopPlaybackConfig/VROSC.TriggerSync stopMode)
    // Offset: 0x19B64A8
    void SetStopMode(::VROSC::LoopPlaybackConfig::TriggerSync stopMode);
    // public System.Void SetFadeIn(VROSC.LoopPlaybackConfig/VROSC.FadeDuration fade)
    // Offset: 0x19B6538
    void SetFadeIn(::VROSC::LoopPlaybackConfig::FadeDuration fade);
    // public System.Void SetFadeOut(VROSC.LoopPlaybackConfig/VROSC.FadeDuration fade)
    // Offset: 0x19B65C8
    void SetFadeOut(::VROSC::LoopPlaybackConfig::FadeDuration fade);
    // public System.Void SetOneShot(System.Boolean oneShot)
    // Offset: 0x19B6658
    void SetOneShot(bool oneShot);
    // public System.Void SetRetrigger(System.Boolean retrigger)
    // Offset: 0x19B66E8
    void SetRetrigger(bool retrigger);
    // static public System.Int32 GetNextTriggerSyncPoint(VROSC.LoopPlayerPlaybackSettings settings, System.Int32 sample, VROSC.LoopPlaybackConfig/VROSC.TriggerSync triggerSync)
    // Offset: 0x19B6778
    static int GetNextTriggerSyncPoint(::VROSC::LoopPlayerPlaybackSettings* settings, int sample, ::VROSC::LoopPlaybackConfig::TriggerSync triggerSync);
    // static public System.Int32 GetSyncLengthInSamples(VROSC.LoopPlayerPlaybackSettings settings, VROSC.LoopPlaybackConfig/VROSC.TriggerSync sync)
    // Offset: 0x19B68F4
    static int GetSyncLengthInSamples(::VROSC::LoopPlayerPlaybackSettings* settings, ::VROSC::LoopPlaybackConfig::TriggerSync sync);
    // static public VROSC.LoopPlaybackConfig GetFirstPlayConfig(VROSC.LoopPlaybackConfig recording)
    // Offset: 0x19B6A88
    static ::VROSC::LoopPlaybackConfig* GetFirstPlayConfig(::VROSC::LoopPlaybackConfig* recording);
    // public System.Void .ctor()
    // Offset: 0x19B5CD4
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoopPlaybackConfig* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfig::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoopPlaybackConfig*, creationType>()));
    }
  }; // VROSC.LoopPlaybackConfig
  #pragma pack(pop)
  static check_size<sizeof(LoopPlaybackConfig), 88 + sizeof(::System::Action*)> __VROSC_LoopPlaybackConfigSizeCheck;
  static_assert(sizeof(LoopPlaybackConfig) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::VROSC::LoopPlaybackConfig::FadeDuration, "VROSC", "LoopPlaybackConfig/FadeDuration");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::VROSC::LoopPlaybackConfig::TriggerSync, "VROSC", "LoopPlaybackConfig/TriggerSync");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::get_Data
// Il2CppName: get_Data
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::LoopPlaybackConfigData* (VROSC::LoopPlaybackConfig::*)()>(&VROSC::LoopPlaybackConfig::get_Data)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfig*), "get_Data", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::set_Data
// Il2CppName: set_Data
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackConfig::*)(::VROSC::LoopPlaybackConfigData*)>(&VROSC::LoopPlaybackConfig::set_Data)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlaybackConfigData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfig*), "set_Data", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::get_ReferenceLoopForStart
// Il2CppName: get_ReferenceLoopForStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::Loop* (VROSC::LoopPlaybackConfig::*)()>(&VROSC::LoopPlaybackConfig::get_ReferenceLoopForStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfig*), "get_ReferenceLoopForStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::set_ReferenceLoopForStart
// Il2CppName: set_ReferenceLoopForStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackConfig::*)(::VROSC::Loop*)>(&VROSC::LoopPlaybackConfig::set_ReferenceLoopForStart)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("VROSC", "Loop")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfig*), "set_ReferenceLoopForStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::get_ReferenceLoopForLength
// Il2CppName: get_ReferenceLoopForLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::Loop* (VROSC::LoopPlaybackConfig::*)()>(&VROSC::LoopPlaybackConfig::get_ReferenceLoopForLength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfig*), "get_ReferenceLoopForLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::set_ReferenceLoopForLength
// Il2CppName: set_ReferenceLoopForLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackConfig::*)(::VROSC::Loop*)>(&VROSC::LoopPlaybackConfig::set_ReferenceLoopForLength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("VROSC", "Loop")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfig*), "set_ReferenceLoopForLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&VROSC::LoopPlaybackConfig::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfig*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::SharedConstructor
// Il2CppName: SharedConstructor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackConfig::*)(::VROSC::LoopPlaybackConfig::TriggerSync, bool, ::VROSC::LoopPlaybackConfig::TriggerSync, ::VROSC::LoopPlaybackConfig::FadeDuration, ::VROSC::LoopPlaybackConfig::FadeDuration, bool, bool)>(&VROSC::LoopPlaybackConfig::SharedConstructor)> {
  static const MethodInfo* get() {
    static auto* startMode = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlaybackConfig/TriggerSync")->byval_arg;
    static auto* isStartModeLocked = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* stopMode = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlaybackConfig/TriggerSync")->byval_arg;
    static auto* fadeIn = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlaybackConfig/FadeDuration")->byval_arg;
    static auto* fadeOut = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlaybackConfig/FadeDuration")->byval_arg;
    static auto* oneShot = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* retrigger = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfig*), "SharedConstructor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startMode, isStartModeLocked, stopMode, fadeIn, fadeOut, oneShot, retrigger});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::ApplyTo
// Il2CppName: ApplyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackConfig::*)(::VROSC::LoopPlaybackConfig*)>(&VROSC::LoopPlaybackConfig::ApplyTo)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlaybackConfig")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfig*), "ApplyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::SetStartMode
// Il2CppName: SetStartMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackConfig::*)(::VROSC::LoopPlaybackConfig::TriggerSync)>(&VROSC::LoopPlaybackConfig::SetStartMode)> {
  static const MethodInfo* get() {
    static auto* startMode = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlaybackConfig/TriggerSync")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfig*), "SetStartMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startMode});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::SetStopMode
// Il2CppName: SetStopMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackConfig::*)(::VROSC::LoopPlaybackConfig::TriggerSync)>(&VROSC::LoopPlaybackConfig::SetStopMode)> {
  static const MethodInfo* get() {
    static auto* stopMode = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlaybackConfig/TriggerSync")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfig*), "SetStopMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stopMode});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::SetFadeIn
// Il2CppName: SetFadeIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackConfig::*)(::VROSC::LoopPlaybackConfig::FadeDuration)>(&VROSC::LoopPlaybackConfig::SetFadeIn)> {
  static const MethodInfo* get() {
    static auto* fade = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlaybackConfig/FadeDuration")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfig*), "SetFadeIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fade});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::SetFadeOut
// Il2CppName: SetFadeOut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackConfig::*)(::VROSC::LoopPlaybackConfig::FadeDuration)>(&VROSC::LoopPlaybackConfig::SetFadeOut)> {
  static const MethodInfo* get() {
    static auto* fade = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlaybackConfig/FadeDuration")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfig*), "SetFadeOut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fade});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::SetOneShot
// Il2CppName: SetOneShot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackConfig::*)(bool)>(&VROSC::LoopPlaybackConfig::SetOneShot)> {
  static const MethodInfo* get() {
    static auto* oneShot = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfig*), "SetOneShot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oneShot});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::SetRetrigger
// Il2CppName: SetRetrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackConfig::*)(bool)>(&VROSC::LoopPlaybackConfig::SetRetrigger)> {
  static const MethodInfo* get() {
    static auto* retrigger = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfig*), "SetRetrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{retrigger});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::GetNextTriggerSyncPoint
// Il2CppName: GetNextTriggerSyncPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::VROSC::LoopPlayerPlaybackSettings*, int, ::VROSC::LoopPlaybackConfig::TriggerSync)>(&VROSC::LoopPlaybackConfig::GetNextTriggerSyncPoint)> {
  static const MethodInfo* get() {
    static auto* settings = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlayerPlaybackSettings")->byval_arg;
    static auto* sample = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* triggerSync = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlaybackConfig/TriggerSync")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfig*), "GetNextTriggerSyncPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{settings, sample, triggerSync});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::GetSyncLengthInSamples
// Il2CppName: GetSyncLengthInSamples
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::VROSC::LoopPlayerPlaybackSettings*, ::VROSC::LoopPlaybackConfig::TriggerSync)>(&VROSC::LoopPlaybackConfig::GetSyncLengthInSamples)> {
  static const MethodInfo* get() {
    static auto* settings = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlayerPlaybackSettings")->byval_arg;
    static auto* sync = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlaybackConfig/TriggerSync")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfig*), "GetSyncLengthInSamples", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{settings, sync});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::GetFirstPlayConfig
// Il2CppName: GetFirstPlayConfig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::LoopPlaybackConfig* (*)(::VROSC::LoopPlaybackConfig*)>(&VROSC::LoopPlaybackConfig::GetFirstPlayConfig)> {
  static const MethodInfo* get() {
    static auto* recording = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlaybackConfig")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfig*), "GetFirstPlayConfig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recording});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfig::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
