// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.LoopPlaybackConfig/VROSC.TriggerSync
#include "VROSC/LoopPlaybackConfig.hpp"
// Including type: VROSC.LoopPlaybackConfig/VROSC.FadeDuration
// Already included the same include: VROSC/LoopPlaybackConfig.hpp
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: LoopPlaybackConfigData
  class LoopPlaybackConfigData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::LoopPlaybackConfigData);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::LoopPlaybackConfigData*, "VROSC", "LoopPlaybackConfigData");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x26
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.LoopPlaybackConfigData
  // [TokenAttribute] Offset: FFFFFFFF
  class LoopPlaybackConfigData : public ::Il2CppObject {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // public VROSC.LoopPlaybackConfig/VROSC.TriggerSync StartMode
    // Size: 0x4
    // Offset: 0x10
    ::VROSC::LoopPlaybackConfig::TriggerSync StartMode;
    // Field size check
    static_assert(sizeof(::VROSC::LoopPlaybackConfig::TriggerSync) == 0x4);
    // public System.Boolean IsStartModeLocked
    // Size: 0x1
    // Offset: 0x14
    bool IsStartModeLocked;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IsStartModeLocked and: StopMode
    char __padding1[0x3] = {};
    // public VROSC.LoopPlaybackConfig/VROSC.TriggerSync StopMode
    // Size: 0x4
    // Offset: 0x18
    ::VROSC::LoopPlaybackConfig::TriggerSync StopMode;
    // Field size check
    static_assert(sizeof(::VROSC::LoopPlaybackConfig::TriggerSync) == 0x4);
    // public VROSC.LoopPlaybackConfig/VROSC.FadeDuration FadeIn
    // Size: 0x4
    // Offset: 0x1C
    ::VROSC::LoopPlaybackConfig::FadeDuration FadeIn;
    // Field size check
    static_assert(sizeof(::VROSC::LoopPlaybackConfig::FadeDuration) == 0x4);
    // public VROSC.LoopPlaybackConfig/VROSC.FadeDuration FadeOut
    // Size: 0x4
    // Offset: 0x20
    ::VROSC::LoopPlaybackConfig::FadeDuration FadeOut;
    // Field size check
    static_assert(sizeof(::VROSC::LoopPlaybackConfig::FadeDuration) == 0x4);
    // public System.Boolean OneShot
    // Size: 0x1
    // Offset: 0x24
    bool OneShot;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean Retrigger
    // Size: 0x1
    // Offset: 0x25
    bool Retrigger;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public VROSC.LoopPlaybackConfig/VROSC.TriggerSync StartMode
    ::VROSC::LoopPlaybackConfig::TriggerSync& dyn_StartMode();
    // Get instance field reference: public System.Boolean IsStartModeLocked
    bool& dyn_IsStartModeLocked();
    // Get instance field reference: public VROSC.LoopPlaybackConfig/VROSC.TriggerSync StopMode
    ::VROSC::LoopPlaybackConfig::TriggerSync& dyn_StopMode();
    // Get instance field reference: public VROSC.LoopPlaybackConfig/VROSC.FadeDuration FadeIn
    ::VROSC::LoopPlaybackConfig::FadeDuration& dyn_FadeIn();
    // Get instance field reference: public VROSC.LoopPlaybackConfig/VROSC.FadeDuration FadeOut
    ::VROSC::LoopPlaybackConfig::FadeDuration& dyn_FadeOut();
    // Get instance field reference: public System.Boolean OneShot
    bool& dyn_OneShot();
    // Get instance field reference: public System.Boolean Retrigger
    bool& dyn_Retrigger();
    // public VROSC.LoopPlaybackConfig/VROSC.Sync get_SyncMode()
    // Offset: 0x1396CD4
    ::VROSC::LoopPlaybackConfig::Sync get_SyncMode();
    // public VROSC.LoopPlaybackConfig/VROSC.LoopMode get_Looping()
    // Offset: 0x1396CF4
    ::VROSC::LoopPlaybackConfig::LoopMode get_Looping();
    // public System.Boolean get_RetriggeringOneshot()
    // Offset: 0x1396CFC
    bool get_RetriggeringOneshot();
    // public System.Void .ctor()
    // Offset: 0x1395AB0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoopPlaybackConfigData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackConfigData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoopPlaybackConfigData*, creationType>()));
    }
  }; // VROSC.LoopPlaybackConfigData
  #pragma pack(pop)
  static check_size<sizeof(LoopPlaybackConfigData), 37 + sizeof(bool)> __VROSC_LoopPlaybackConfigDataSizeCheck;
  static_assert(sizeof(LoopPlaybackConfigData) == 0x26);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfigData::get_SyncMode
// Il2CppName: get_SyncMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::LoopPlaybackConfig::Sync (VROSC::LoopPlaybackConfigData::*)()>(&VROSC::LoopPlaybackConfigData::get_SyncMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfigData*), "get_SyncMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfigData::get_Looping
// Il2CppName: get_Looping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::LoopPlaybackConfig::LoopMode (VROSC::LoopPlaybackConfigData::*)()>(&VROSC::LoopPlaybackConfigData::get_Looping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfigData*), "get_Looping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfigData::get_RetriggeringOneshot
// Il2CppName: get_RetriggeringOneshot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::LoopPlaybackConfigData::*)()>(&VROSC::LoopPlaybackConfigData::get_RetriggeringOneshot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackConfigData*), "get_RetriggeringOneshot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackConfigData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
