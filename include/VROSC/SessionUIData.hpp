// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Skipping declaration: Type because it is already included!
  // Forward declaring type: Session
  class Session;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: SessionUIData
  class SessionUIData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::SessionUIData);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::SessionUIData*, "VROSC", "SessionUIData");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x59
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.SessionUIData
  // [TokenAttribute] Offset: FFFFFFFF
  class SessionUIData : public ::Il2CppObject {
    public:
    // Nested type: ::VROSC::SessionUIData::Type
    struct Type;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: VROSC.SessionUIData/VROSC.Type
    // [TokenAttribute] Offset: FFFFFFFF
    struct Type/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: Type
      constexpr Type(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public VROSC.SessionUIData/VROSC.Type Local
      static constexpr const int Local = 0;
      // Get static field: static public VROSC.SessionUIData/VROSC.Type Local
      static ::VROSC::SessionUIData::Type _get_Local();
      // Set static field: static public VROSC.SessionUIData/VROSC.Type Local
      static void _set_Local(::VROSC::SessionUIData::Type value);
      // static field const value: static public VROSC.SessionUIData/VROSC.Type Cloud
      static constexpr const int Cloud = 1;
      // Get static field: static public VROSC.SessionUIData/VROSC.Type Cloud
      static ::VROSC::SessionUIData::Type _get_Cloud();
      // Set static field: static public VROSC.SessionUIData/VROSC.Type Cloud
      static void _set_Cloud(::VROSC::SessionUIData::Type value);
      // static field const value: static public VROSC.SessionUIData/VROSC.Type MyShare
      static constexpr const int MyShare = 2;
      // Get static field: static public VROSC.SessionUIData/VROSC.Type MyShare
      static ::VROSC::SessionUIData::Type _get_MyShare();
      // Set static field: static public VROSC.SessionUIData/VROSC.Type MyShare
      static void _set_MyShare(::VROSC::SessionUIData::Type value);
      // static field const value: static public VROSC.SessionUIData/VROSC.Type Community
      static constexpr const int Community = 3;
      // Get static field: static public VROSC.SessionUIData/VROSC.Type Community
      static ::VROSC::SessionUIData::Type _get_Community();
      // Set static field: static public VROSC.SessionUIData/VROSC.Type Community
      static void _set_Community(::VROSC::SessionUIData::Type value);
      // Get instance field reference: public System.Int32 value__
      int& dyn_value__();
    }; // VROSC.SessionUIData/VROSC.Type
    #pragma pack(pop)
    static check_size<sizeof(SessionUIData::Type), 0 + sizeof(int)> __VROSC_SessionUIData_TypeSizeCheck;
    static_assert(sizeof(SessionUIData::Type) == 0x4);
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private System.String <SessionId>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::StringW SessionId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.DateTime <Date>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::System::DateTime Date;
    // Field size check
    static_assert(sizeof(::System::DateTime) == 0x8);
    // private System.String <DisplayName>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::StringW DisplayName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String <Description>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::StringW Description;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String <AuthorName>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    ::StringW AuthorName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Collections.Generic.List`1<System.String> <ContributorsNames>k__BackingField
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::List_1<::StringW>* ContributorsNames;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // private System.Collections.Generic.List`1<System.String> <Tags>k__BackingField
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::List_1<::StringW>* Tags;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // private System.Int32 <UpVotesCount>k__BackingField
    // Size: 0x4
    // Offset: 0x48
    int UpVotesCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <FavoritesCount>k__BackingField
    // Size: 0x4
    // Offset: 0x4C
    int FavoritesCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <DownloadsCount>k__BackingField
    // Size: 0x4
    // Offset: 0x50
    int DownloadsCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private VROSC.SessionUIData/VROSC.Type <SessionType>k__BackingField
    // Size: 0x4
    // Offset: 0x54
    ::VROSC::SessionUIData::Type SessionType;
    // Field size check
    static_assert(sizeof(::VROSC::SessionUIData::Type) == 0x4);
    // private System.Boolean <HasPreview>k__BackingField
    // Size: 0x1
    // Offset: 0x58
    bool HasPreview;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private System.String <SessionId>k__BackingField
    ::StringW& dyn_$SessionId$k__BackingField();
    // Get instance field reference: private System.DateTime <Date>k__BackingField
    ::System::DateTime& dyn_$Date$k__BackingField();
    // Get instance field reference: private System.String <DisplayName>k__BackingField
    ::StringW& dyn_$DisplayName$k__BackingField();
    // Get instance field reference: private System.String <Description>k__BackingField
    ::StringW& dyn_$Description$k__BackingField();
    // Get instance field reference: private System.String <AuthorName>k__BackingField
    ::StringW& dyn_$AuthorName$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.List`1<System.String> <ContributorsNames>k__BackingField
    ::System::Collections::Generic::List_1<::StringW>*& dyn_$ContributorsNames$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.List`1<System.String> <Tags>k__BackingField
    ::System::Collections::Generic::List_1<::StringW>*& dyn_$Tags$k__BackingField();
    // Get instance field reference: private System.Int32 <UpVotesCount>k__BackingField
    int& dyn_$UpVotesCount$k__BackingField();
    // Get instance field reference: private System.Int32 <FavoritesCount>k__BackingField
    int& dyn_$FavoritesCount$k__BackingField();
    // Get instance field reference: private System.Int32 <DownloadsCount>k__BackingField
    int& dyn_$DownloadsCount$k__BackingField();
    // Get instance field reference: private VROSC.SessionUIData/VROSC.Type <SessionType>k__BackingField
    ::VROSC::SessionUIData::Type& dyn_$SessionType$k__BackingField();
    // Get instance field reference: private System.Boolean <HasPreview>k__BackingField
    bool& dyn_$HasPreview$k__BackingField();
    // public System.String get_SessionId()
    // Offset: 0x13E8DBC
    ::StringW get_SessionId();
    // private System.Void set_SessionId(System.String value)
    // Offset: 0x13E8DC4
    void set_SessionId(::StringW value);
    // public System.DateTime get_Date()
    // Offset: 0x13E8DCC
    ::System::DateTime get_Date();
    // private System.Void set_Date(System.DateTime value)
    // Offset: 0x13E8DD4
    void set_Date(::System::DateTime value);
    // public System.String get_DisplayName()
    // Offset: 0x13E8DDC
    ::StringW get_DisplayName();
    // private System.Void set_DisplayName(System.String value)
    // Offset: 0x13E8DE4
    void set_DisplayName(::StringW value);
    // public System.String get_Description()
    // Offset: 0x13E8DEC
    ::StringW get_Description();
    // private System.Void set_Description(System.String value)
    // Offset: 0x13E8DF4
    void set_Description(::StringW value);
    // public System.String get_AuthorName()
    // Offset: 0x13E8DFC
    ::StringW get_AuthorName();
    // private System.Void set_AuthorName(System.String value)
    // Offset: 0x13E8E04
    void set_AuthorName(::StringW value);
    // public System.Collections.Generic.List`1<System.String> get_ContributorsNames()
    // Offset: 0x13E8E0C
    ::System::Collections::Generic::List_1<::StringW>* get_ContributorsNames();
    // private System.Void set_ContributorsNames(System.Collections.Generic.List`1<System.String> value)
    // Offset: 0x13E8E14
    void set_ContributorsNames(::System::Collections::Generic::List_1<::StringW>* value);
    // public System.Collections.Generic.List`1<System.String> get_Tags()
    // Offset: 0x13E8E1C
    ::System::Collections::Generic::List_1<::StringW>* get_Tags();
    // private System.Void set_Tags(System.Collections.Generic.List`1<System.String> value)
    // Offset: 0x13E8E24
    void set_Tags(::System::Collections::Generic::List_1<::StringW>* value);
    // public System.Int32 get_UpVotesCount()
    // Offset: 0x13E8E2C
    int get_UpVotesCount();
    // private System.Void set_UpVotesCount(System.Int32 value)
    // Offset: 0x13E8E34
    void set_UpVotesCount(int value);
    // public System.Int32 get_FavoritesCount()
    // Offset: 0x13E8E3C
    int get_FavoritesCount();
    // private System.Void set_FavoritesCount(System.Int32 value)
    // Offset: 0x13E8E44
    void set_FavoritesCount(int value);
    // public System.Int32 get_DownloadsCount()
    // Offset: 0x13E8E4C
    int get_DownloadsCount();
    // private System.Void set_DownloadsCount(System.Int32 value)
    // Offset: 0x13E8E54
    void set_DownloadsCount(int value);
    // public VROSC.SessionUIData/VROSC.Type get_SessionType()
    // Offset: 0x13E8E5C
    ::VROSC::SessionUIData::Type get_SessionType();
    // private System.Void set_SessionType(VROSC.SessionUIData/VROSC.Type value)
    // Offset: 0x13E8E64
    void set_SessionType(::VROSC::SessionUIData::Type value);
    // public System.Boolean get_HasPreview()
    // Offset: 0x13E8E6C
    bool get_HasPreview();
    // private System.Void set_HasPreview(System.Boolean value)
    // Offset: 0x13E8E74
    void set_HasPreview(bool value);
    // public System.Int32 get_Popularity()
    // Offset: 0x13E8E80
    int get_Popularity();
    // public System.Void .ctor(VROSC.Session session, System.Boolean isCloudSave, System.Boolean isMySharedSave, System.Boolean isCommunitySave)
    // Offset: 0x13E8E9C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SessionUIData* New_ctor(::VROSC::Session* session, bool isCloudSave, bool isMySharedSave, bool isCommunitySave) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SessionUIData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SessionUIData*, creationType>(session, isCloudSave, isMySharedSave, isCommunitySave)));
    }
  }; // VROSC.SessionUIData
  #pragma pack(pop)
  static check_size<sizeof(SessionUIData), 88 + sizeof(bool)> __VROSC_SessionUIDataSizeCheck;
  static_assert(sizeof(SessionUIData) == 0x59);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::VROSC::SessionUIData::Type, "VROSC", "SessionUIData/Type");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::SessionUIData::get_SessionId
// Il2CppName: get_SessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::SessionUIData::*)()>(&VROSC::SessionUIData::get_SessionId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "get_SessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::set_SessionId
// Il2CppName: set_SessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionUIData::*)(::StringW)>(&VROSC::SessionUIData::set_SessionId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "set_SessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::get_Date
// Il2CppName: get_Date
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (VROSC::SessionUIData::*)()>(&VROSC::SessionUIData::get_Date)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "get_Date", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::set_Date
// Il2CppName: set_Date
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionUIData::*)(::System::DateTime)>(&VROSC::SessionUIData::set_Date)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "set_Date", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::get_DisplayName
// Il2CppName: get_DisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::SessionUIData::*)()>(&VROSC::SessionUIData::get_DisplayName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "get_DisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::set_DisplayName
// Il2CppName: set_DisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionUIData::*)(::StringW)>(&VROSC::SessionUIData::set_DisplayName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "set_DisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::get_Description
// Il2CppName: get_Description
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::SessionUIData::*)()>(&VROSC::SessionUIData::get_Description)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "get_Description", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::set_Description
// Il2CppName: set_Description
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionUIData::*)(::StringW)>(&VROSC::SessionUIData::set_Description)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "set_Description", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::get_AuthorName
// Il2CppName: get_AuthorName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::SessionUIData::*)()>(&VROSC::SessionUIData::get_AuthorName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "get_AuthorName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::set_AuthorName
// Il2CppName: set_AuthorName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionUIData::*)(::StringW)>(&VROSC::SessionUIData::set_AuthorName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "set_AuthorName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::get_ContributorsNames
// Il2CppName: get_ContributorsNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::StringW>* (VROSC::SessionUIData::*)()>(&VROSC::SessionUIData::get_ContributorsNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "get_ContributorsNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::set_ContributorsNames
// Il2CppName: set_ContributorsNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionUIData::*)(::System::Collections::Generic::List_1<::StringW>*)>(&VROSC::SessionUIData::set_ContributorsNames)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "set_ContributorsNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::get_Tags
// Il2CppName: get_Tags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::StringW>* (VROSC::SessionUIData::*)()>(&VROSC::SessionUIData::get_Tags)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "get_Tags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::set_Tags
// Il2CppName: set_Tags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionUIData::*)(::System::Collections::Generic::List_1<::StringW>*)>(&VROSC::SessionUIData::set_Tags)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "set_Tags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::get_UpVotesCount
// Il2CppName: get_UpVotesCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::SessionUIData::*)()>(&VROSC::SessionUIData::get_UpVotesCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "get_UpVotesCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::set_UpVotesCount
// Il2CppName: set_UpVotesCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionUIData::*)(int)>(&VROSC::SessionUIData::set_UpVotesCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "set_UpVotesCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::get_FavoritesCount
// Il2CppName: get_FavoritesCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::SessionUIData::*)()>(&VROSC::SessionUIData::get_FavoritesCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "get_FavoritesCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::set_FavoritesCount
// Il2CppName: set_FavoritesCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionUIData::*)(int)>(&VROSC::SessionUIData::set_FavoritesCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "set_FavoritesCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::get_DownloadsCount
// Il2CppName: get_DownloadsCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::SessionUIData::*)()>(&VROSC::SessionUIData::get_DownloadsCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "get_DownloadsCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::set_DownloadsCount
// Il2CppName: set_DownloadsCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionUIData::*)(int)>(&VROSC::SessionUIData::set_DownloadsCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "set_DownloadsCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::get_SessionType
// Il2CppName: get_SessionType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::SessionUIData::Type (VROSC::SessionUIData::*)()>(&VROSC::SessionUIData::get_SessionType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "get_SessionType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::set_SessionType
// Il2CppName: set_SessionType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionUIData::*)(::VROSC::SessionUIData::Type)>(&VROSC::SessionUIData::set_SessionType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("VROSC", "SessionUIData/Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "set_SessionType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::get_HasPreview
// Il2CppName: get_HasPreview
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::SessionUIData::*)()>(&VROSC::SessionUIData::get_HasPreview)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "get_HasPreview", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::set_HasPreview
// Il2CppName: set_HasPreview
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionUIData::*)(bool)>(&VROSC::SessionUIData::set_HasPreview)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "set_HasPreview", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::get_Popularity
// Il2CppName: get_Popularity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::SessionUIData::*)()>(&VROSC::SessionUIData::get_Popularity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionUIData*), "get_Popularity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionUIData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
