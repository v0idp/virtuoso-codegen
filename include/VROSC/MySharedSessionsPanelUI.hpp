// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.SessionsPanelUI
#include "VROSC/SessionsPanelUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: SessionUIData
  class SessionUIData;
  // Forward declaring type: Error
  struct Error;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: MySharedSessionsPanelUI
  class MySharedSessionsPanelUI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::MySharedSessionsPanelUI);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::MySharedSessionsPanelUI*, "VROSC", "MySharedSessionsPanelUI");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x61
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.MySharedSessionsPanelUI
  // [TokenAttribute] Offset: FFFFFFFF
  class MySharedSessionsPanelUI : public ::VROSC::SessionsPanelUI {
    public:
    // private System.Void UserLoggedIn()
    // Offset: 0xACEB60
    void UserLoggedIn();
    // private System.Void CommunitySessionsDataLoadSucceeded(System.Collections.Generic.List`1<VROSC.SessionUIData> sessionUIDatas)
    // Offset: 0xACE854
    void CommunitySessionsDataLoadSucceeded(::System::Collections::Generic::List_1<::VROSC::SessionUIData*>* sessionUIDatas);
    // private System.Void CommunitySessionsDataLoadFailed(VROSC.Error error)
    // Offset: 0xACED00
    void CommunitySessionsDataLoadFailed(::VROSC::Error error);
    // private System.Void <Refresh>b__1_0()
    // Offset: 0xACEDB0
    void $Refresh$b__1_0();
    // private System.Void <UserLoggedIn>b__3_0()
    // Offset: 0xACEE24
    void $UserLoggedIn$b__3_0();
    // public System.Void .ctor()
    // Offset: 0xACEDA8
    // Implemented from: VROSC.SessionsPanelUI
    // Base method: System.Void SessionsPanelUI::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MySharedSessionsPanelUI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MySharedSessionsPanelUI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MySharedSessionsPanelUI*, creationType>()));
    }
    // protected System.Void Awake()
    // Offset: 0xACE554
    // Implemented from: VROSC.SessionsPanelUI
    // Base method: System.Void SessionsPanelUI::Awake()
    void Awake();
    // public override System.Void Refresh()
    // Offset: 0xACE594
    // Implemented from: VROSC.SessionsPanelUI
    // Base method: System.Void SessionsPanelUI::Refresh()
    void Refresh();
    // protected System.Void OnDisable()
    // Offset: 0xACEA7C
    // Implemented from: VROSC.SessionsPanelUI
    // Base method: System.Void SessionsPanelUI::OnDisable()
    void OnDisable();
  }; // VROSC.MySharedSessionsPanelUI
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::MySharedSessionsPanelUI::UserLoggedIn
// Il2CppName: UserLoggedIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::MySharedSessionsPanelUI::*)()>(&VROSC::MySharedSessionsPanelUI::UserLoggedIn)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::MySharedSessionsPanelUI*), "UserLoggedIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::MySharedSessionsPanelUI::CommunitySessionsDataLoadSucceeded
// Il2CppName: CommunitySessionsDataLoadSucceeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::MySharedSessionsPanelUI::*)(::System::Collections::Generic::List_1<::VROSC::SessionUIData*>*)>(&VROSC::MySharedSessionsPanelUI::CommunitySessionsDataLoadSucceeded)> {
  static const MethodInfo* get() {
    static auto* sessionUIDatas = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "SessionUIData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::MySharedSessionsPanelUI*), "CommunitySessionsDataLoadSucceeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionUIDatas});
  }
};
// Writing MetadataGetter for method: VROSC::MySharedSessionsPanelUI::CommunitySessionsDataLoadFailed
// Il2CppName: CommunitySessionsDataLoadFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::MySharedSessionsPanelUI::*)(::VROSC::Error)>(&VROSC::MySharedSessionsPanelUI::CommunitySessionsDataLoadFailed)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::MySharedSessionsPanelUI*), "CommunitySessionsDataLoadFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: VROSC::MySharedSessionsPanelUI::$Refresh$b__1_0
// Il2CppName: <Refresh>b__1_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::MySharedSessionsPanelUI::*)()>(&VROSC::MySharedSessionsPanelUI::$Refresh$b__1_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::MySharedSessionsPanelUI*), "<Refresh>b__1_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::MySharedSessionsPanelUI::$UserLoggedIn$b__3_0
// Il2CppName: <UserLoggedIn>b__3_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::MySharedSessionsPanelUI::*)()>(&VROSC::MySharedSessionsPanelUI::$UserLoggedIn$b__3_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::MySharedSessionsPanelUI*), "<UserLoggedIn>b__3_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::MySharedSessionsPanelUI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::MySharedSessionsPanelUI::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::MySharedSessionsPanelUI::*)()>(&VROSC::MySharedSessionsPanelUI::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::MySharedSessionsPanelUI*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::MySharedSessionsPanelUI::Refresh
// Il2CppName: Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::MySharedSessionsPanelUI::*)()>(&VROSC::MySharedSessionsPanelUI::Refresh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::MySharedSessionsPanelUI*), "Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::MySharedSessionsPanelUI::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::MySharedSessionsPanelUI::*)()>(&VROSC::MySharedSessionsPanelUI::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::MySharedSessionsPanelUI*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
