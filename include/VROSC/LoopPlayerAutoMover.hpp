// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: LoopPlayer
  class LoopPlayer;
  // Forward declaring type: LoopStationGroup
  class LoopStationGroup;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AnimationCurve
  class AnimationCurve;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: LoopPlayerAutoMover
  class LoopPlayerAutoMover;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::LoopPlayerAutoMover);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::LoopPlayerAutoMover*, "VROSC", "LoopPlayerAutoMover");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.LoopPlayerAutoMover
  // [TokenAttribute] Offset: FFFFFFFF
  class LoopPlayerAutoMover : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::VROSC::LoopPlayerAutoMover::$MovePlayerFlow$d__7
    class $MovePlayerFlow$d__7;
    public:
    // private System.Single _moveDuration
    // Size: 0x4
    // Offset: 0x18
    float moveDuration;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: moveDuration and: moveCurve
    char __padding0[0x4] = {};
    // private UnityEngine.AnimationCurve _moveCurve
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::AnimationCurve* moveCurve;
    // Field size check
    static_assert(sizeof(::UnityEngine::AnimationCurve*) == 0x8);
    // private System.Single _moveOutDistance
    // Size: 0x4
    // Offset: 0x28
    float moveOutDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: moveOutDistance and: zCurve
    char __padding2[0x4] = {};
    // private UnityEngine.AnimationCurve _zCurve
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::AnimationCurve* zCurve;
    // Field size check
    static_assert(sizeof(::UnityEngine::AnimationCurve*) == 0x8);
    // private VROSC.LoopPlayer _loopPlayer
    // Size: 0x8
    // Offset: 0x38
    ::VROSC::LoopPlayer* loopPlayer;
    // Field size check
    static_assert(sizeof(::VROSC::LoopPlayer*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.Single _moveDuration
    [[deprecated]] float& dyn__moveDuration();
    // Get instance field reference: private UnityEngine.AnimationCurve _moveCurve
    [[deprecated]] ::UnityEngine::AnimationCurve*& dyn__moveCurve();
    // Get instance field reference: private System.Single _moveOutDistance
    [[deprecated]] float& dyn__moveOutDistance();
    // Get instance field reference: private UnityEngine.AnimationCurve _zCurve
    [[deprecated]] ::UnityEngine::AnimationCurve*& dyn__zCurve();
    // Get instance field reference: private VROSC.LoopPlayer _loopPlayer
    [[deprecated]] ::VROSC::LoopPlayer*& dyn__loopPlayer();
    // public System.Void Setup(VROSC.LoopPlayer loopPlayer)
    // Offset: 0x19BACB0
    void Setup(::VROSC::LoopPlayer* loopPlayer);
    // public System.Void MoveLoopPlayer(VROSC.LoopStationGroup from, VROSC.LoopStationGroup to, System.Single zmultiplier)
    // Offset: 0x19BACB8
    void MoveLoopPlayer(::VROSC::LoopStationGroup* from, ::VROSC::LoopStationGroup* to, float zmultiplier);
    // private System.Collections.IEnumerator MovePlayerFlow(VROSC.LoopStationGroup from, VROSC.LoopStationGroup to, System.Single zmultiplier)
    // Offset: 0x19BAEC8
    ::System::Collections::IEnumerator* MovePlayerFlow(::VROSC::LoopStationGroup* from, ::VROSC::LoopStationGroup* to, float zmultiplier);
    // private System.Void SetObjectsInteractable(VROSC.LoopStationGroup from, VROSC.LoopStationGroup to, System.Boolean interactable)
    // Offset: 0x19BAE04
    void SetObjectsInteractable(::VROSC::LoopStationGroup* from, ::VROSC::LoopStationGroup* to, bool interactable);
    // public System.Void .ctor()
    // Offset: 0x19BAF58
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoopPlayerAutoMover* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerAutoMover::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoopPlayerAutoMover*, creationType>()));
    }
  }; // VROSC.LoopPlayerAutoMover
  #pragma pack(pop)
  static check_size<sizeof(LoopPlayerAutoMover), 56 + sizeof(::VROSC::LoopPlayer*)> __VROSC_LoopPlayerAutoMoverSizeCheck;
  static_assert(sizeof(LoopPlayerAutoMover) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::LoopPlayerAutoMover::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlayerAutoMover::*)(::VROSC::LoopPlayer*)>(&VROSC::LoopPlayerAutoMover::Setup)> {
  static const MethodInfo* get() {
    static auto* loopPlayer = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlayerAutoMover*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{loopPlayer});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlayerAutoMover::MoveLoopPlayer
// Il2CppName: MoveLoopPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlayerAutoMover::*)(::VROSC::LoopStationGroup*, ::VROSC::LoopStationGroup*, float)>(&VROSC::LoopPlayerAutoMover::MoveLoopPlayer)> {
  static const MethodInfo* get() {
    static auto* from = &::il2cpp_utils::GetClassFromName("VROSC", "LoopStationGroup")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("VROSC", "LoopStationGroup")->byval_arg;
    static auto* zmultiplier = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlayerAutoMover*), "MoveLoopPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to, zmultiplier});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlayerAutoMover::MovePlayerFlow
// Il2CppName: MovePlayerFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (VROSC::LoopPlayerAutoMover::*)(::VROSC::LoopStationGroup*, ::VROSC::LoopStationGroup*, float)>(&VROSC::LoopPlayerAutoMover::MovePlayerFlow)> {
  static const MethodInfo* get() {
    static auto* from = &::il2cpp_utils::GetClassFromName("VROSC", "LoopStationGroup")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("VROSC", "LoopStationGroup")->byval_arg;
    static auto* zmultiplier = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlayerAutoMover*), "MovePlayerFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to, zmultiplier});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlayerAutoMover::SetObjectsInteractable
// Il2CppName: SetObjectsInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlayerAutoMover::*)(::VROSC::LoopStationGroup*, ::VROSC::LoopStationGroup*, bool)>(&VROSC::LoopPlayerAutoMover::SetObjectsInteractable)> {
  static const MethodInfo* get() {
    static auto* from = &::il2cpp_utils::GetClassFromName("VROSC", "LoopStationGroup")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("VROSC", "LoopStationGroup")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlayerAutoMover*), "SetObjectsInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to, interactable});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlayerAutoMover::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
