// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: VROSC.WidgetSettings/VROSC.Identifier
#include "VROSC/WidgetSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: WidgetController
  class WidgetController;
  // Forward declaring type: InputDevice
  class InputDevice;
  // Skipping declaration: WidgetSettings because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector3 because it is already included!
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: WidgetHub
  class WidgetHub;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::WidgetHub);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::WidgetHub*, "VROSC", "WidgetHub");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.WidgetHub
  // [TokenAttribute] Offset: FFFFFFFF
  class WidgetHub : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // protected System.Collections.Generic.List`1<VROSC.WidgetController> _widgetsPrefabs
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::VROSC::WidgetController*>* widgetsPrefabs;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::VROSC::WidgetController*>*) == 0x8);
    // protected System.Collections.Generic.Dictionary`2<VROSC.WidgetSettings/VROSC.Identifier,VROSC.WidgetController> _widgets
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::Dictionary_2<::VROSC::WidgetSettings::Identifier, ::VROSC::WidgetController*>* widgets;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::VROSC::WidgetSettings::Identifier, ::VROSC::WidgetController*>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: protected System.Collections.Generic.List`1<VROSC.WidgetController> _widgetsPrefabs
    [[deprecated]] ::System::Collections::Generic::List_1<::VROSC::WidgetController*>*& dyn__widgetsPrefabs();
    // Get instance field reference: protected System.Collections.Generic.Dictionary`2<VROSC.WidgetSettings/VROSC.Identifier,VROSC.WidgetController> _widgets
    [[deprecated]] ::System::Collections::Generic::Dictionary_2<::VROSC::WidgetSettings::Identifier, ::VROSC::WidgetController*>*& dyn__widgets();
    // public System.Void ToggleById(VROSC.WidgetSettings/VROSC.Identifier identifier, UnityEngine.Vector3 position, VROSC.InputDevice device, System.Boolean gripping)
    // Offset: 0x95250C
    void ToggleById(::VROSC::WidgetSettings::Identifier identifier, ::UnityEngine::Vector3 position, ::VROSC::InputDevice* device, bool gripping);
    // public VROSC.WidgetController GetTogglabeObjectByIdentifier(VROSC.WidgetSettings/VROSC.Identifier identifier)
    // Offset: 0x952668
    ::VROSC::WidgetController* GetTogglabeObjectByIdentifier(::VROSC::WidgetSettings::Identifier identifier);
    // public System.Boolean GetIsActive(VROSC.WidgetSettings/VROSC.Identifier identifier)
    // Offset: 0x952704
    bool GetIsActive(::VROSC::WidgetSettings::Identifier identifier);
    // public System.Collections.Generic.List`1<VROSC.WidgetSettings> GetWidgetsDefaultSettings()
    // Offset: 0x9527B0
    ::System::Collections::Generic::List_1<::VROSC::WidgetSettings*>* GetWidgetsDefaultSettings();
    // public VROSC.WidgetController GetWidget(VROSC.WidgetSettings/VROSC.Identifier identifier)
    // Offset: 0x952938
    ::VROSC::WidgetController* GetWidget(::VROSC::WidgetSettings::Identifier identifier);
    // protected System.Void PlaceWidget(VROSC.WidgetController target, VROSC.InputDevice device, UnityEngine.Vector3 pressPos, System.Boolean gripping, System.Boolean userHasOpenedBefore)
    // Offset: 0x9529D4
    void PlaceWidget(::VROSC::WidgetController* target, ::VROSC::InputDevice* device, ::UnityEngine::Vector3 pressPos, bool gripping, bool userHasOpenedBefore);
    // public System.Void .ctor()
    // Offset: 0x9529D8
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WidgetHub* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::WidgetHub::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WidgetHub*, creationType>()));
    }
  }; // VROSC.WidgetHub
  #pragma pack(pop)
  static check_size<sizeof(WidgetHub), 32 + sizeof(::System::Collections::Generic::Dictionary_2<::VROSC::WidgetSettings::Identifier, ::VROSC::WidgetController*>*)> __VROSC_WidgetHubSizeCheck;
  static_assert(sizeof(WidgetHub) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::WidgetHub::ToggleById
// Il2CppName: ToggleById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetHub::*)(::VROSC::WidgetSettings::Identifier, ::UnityEngine::Vector3, ::VROSC::InputDevice*, bool)>(&VROSC::WidgetHub::ToggleById)> {
  static const MethodInfo* get() {
    static auto* identifier = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* device = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* gripping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetHub*), "ToggleById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{identifier, position, device, gripping});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetHub::GetTogglabeObjectByIdentifier
// Il2CppName: GetTogglabeObjectByIdentifier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::WidgetController* (VROSC::WidgetHub::*)(::VROSC::WidgetSettings::Identifier)>(&VROSC::WidgetHub::GetTogglabeObjectByIdentifier)> {
  static const MethodInfo* get() {
    static auto* identifier = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetHub*), "GetTogglabeObjectByIdentifier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{identifier});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetHub::GetIsActive
// Il2CppName: GetIsActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::WidgetHub::*)(::VROSC::WidgetSettings::Identifier)>(&VROSC::WidgetHub::GetIsActive)> {
  static const MethodInfo* get() {
    static auto* identifier = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetHub*), "GetIsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{identifier});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetHub::GetWidgetsDefaultSettings
// Il2CppName: GetWidgetsDefaultSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::VROSC::WidgetSettings*>* (VROSC::WidgetHub::*)()>(&VROSC::WidgetHub::GetWidgetsDefaultSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetHub*), "GetWidgetsDefaultSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetHub::GetWidget
// Il2CppName: GetWidget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::WidgetController* (VROSC::WidgetHub::*)(::VROSC::WidgetSettings::Identifier)>(&VROSC::WidgetHub::GetWidget)> {
  static const MethodInfo* get() {
    static auto* identifier = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetHub*), "GetWidget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{identifier});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetHub::PlaceWidget
// Il2CppName: PlaceWidget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetHub::*)(::VROSC::WidgetController*, ::VROSC::InputDevice*, ::UnityEngine::Vector3, bool, bool)>(&VROSC::WidgetHub::PlaceWidget)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetController")->byval_arg;
    static auto* device = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* pressPos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* gripping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* userHasOpenedBefore = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetHub*), "PlaceWidget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, device, pressPos, gripping, userHasOpenedBefore});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetHub::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
