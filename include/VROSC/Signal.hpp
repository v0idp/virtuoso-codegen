// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: SignalControllerInfo
  class SignalControllerInfo;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: Signal
  class Signal;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::Signal);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::Signal*, "VROSC", "Signal");
// Type namespace: VROSC
namespace VROSC {
  // WARNING Size may be invalid!
  // Autogenerated type: VROSC.Signal
  // [TokenAttribute] Offset: FFFFFFFF
  class Signal : public ::Il2CppObject {
    public:
    public:
    // public System.Single Value
    // Size: 0x4
    // Offset: 0x10
    float Value;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public VROSC.SignalControllerInfo ControllerInfo
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::SignalControllerInfo* ControllerInfo;
    // Field size check
    static_assert(sizeof(::VROSC::SignalControllerInfo*) == 0x8);
    // public System.Nullable`1<System.Boolean> FirstFrameOfSignal
    // Size: 0xFFFFFFFF
    // Offset: 0x20
    ::System::Nullable_1<bool> FirstFrameOfSignal;
    // public System.Double PredictedDSPTime
    // Size: 0x8
    // Offset: 0x28
    double PredictedDSPTime;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    public:
    // Get instance field reference: public System.Single Value
    [[deprecated]] float& dyn_Value();
    // Get instance field reference: public VROSC.SignalControllerInfo ControllerInfo
    [[deprecated]] ::VROSC::SignalControllerInfo*& dyn_ControllerInfo();
    // Get instance field reference: public System.Nullable`1<System.Boolean> FirstFrameOfSignal
    [[deprecated]] ::System::Nullable_1<bool>& dyn_FirstFrameOfSignal();
    // Get instance field reference: public System.Double PredictedDSPTime
    [[deprecated]] double& dyn_PredictedDSPTime();
    // public System.Void .ctor(System.Single value, VROSC.SignalControllerInfo controllerInfo, System.Nullable`1<System.Boolean> firstFrameOfSignal, System.Double predictedDspTime)
    // Offset: 0x1927B8C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Signal* New_ctor(float value, ::VROSC::SignalControllerInfo* controllerInfo, ::System::Nullable_1<bool> firstFrameOfSignal, double predictedDspTime) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Signal::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Signal*, creationType>(value, controllerInfo, firstFrameOfSignal, predictedDspTime)));
    }
  }; // VROSC.Signal
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::Signal::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
