// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.BaseDataModel
#include "VROSC/BaseDataModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: TransformDataModel
  class TransformDataModel;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: ToolDataModel
  class ToolDataModel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::ToolDataModel);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::ToolDataModel*, "VROSC", "ToolDataModel");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.ToolDataModel
  // [TokenAttribute] Offset: FFFFFFFF
  class ToolDataModel : public ::VROSC::BaseDataModel {
    public:
    public:
    // public VROSC.TransformDataModel TransformData
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::TransformDataModel* TransformData;
    // Field size check
    static_assert(sizeof(::VROSC::TransformDataModel*) == 0x8);
    // public System.Boolean HasBeenOpened
    // Size: 0x1
    // Offset: 0x20
    bool HasBeenOpened;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public VROSC.TransformDataModel TransformData
    [[deprecated("Use field access instead!")]] ::VROSC::TransformDataModel*& dyn_TransformData();
    // Get instance field reference: public System.Boolean HasBeenOpened
    [[deprecated("Use field access instead!")]] bool& dyn_HasBeenOpened();
    // public System.Void .ctor()
    // Offset: 0xA22CAC
    // Implemented from: VROSC.BaseDataModel
    // Base method: System.Void BaseDataModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ToolDataModel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ToolDataModel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ToolDataModel*, creationType>()));
    }
  }; // VROSC.ToolDataModel
  #pragma pack(pop)
  static check_size<sizeof(ToolDataModel), 32 + sizeof(bool)> __VROSC_ToolDataModelSizeCheck;
  static_assert(sizeof(ToolDataModel) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::ToolDataModel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
