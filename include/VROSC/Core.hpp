// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: AppController
  class AppController;
  // Forward declaring type: InputManager
  class InputManager;
  // Forward declaring type: PlatformSelector
  class PlatformSelector;
  // Forward declaring type: MidiManager
  class MidiManager;
  // Forward declaring type: AudioMixManager
  class AudioMixManager;
  // Forward declaring type: MalletManager
  class MalletManager;
  // Forward declaring type: InstrumentHub
  class InstrumentHub;
  // Forward declaring type: HapticManager
  class HapticManager;
  // Forward declaring type: VideoManager
  class VideoManager;
  // Forward declaring type: SpectatorCameraController
  class SpectatorCameraController;
  // Forward declaring type: BeatCounter
  class BeatCounter;
  // Forward declaring type: UserDataControllers
  class UserDataControllers;
  // Forward declaring type: EnvironmentController
  class EnvironmentController;
  // Forward declaring type: SaveLoadManager
  class SaveLoadManager;
  // Forward declaring type: AuthenticationManager
  class AuthenticationManager;
  // Forward declaring type: AudioRecorder
  class AudioRecorder;
  // Forward declaring type: AppValidityChecker
  class AppValidityChecker;
  // Forward declaring type: GarbageManager
  class GarbageManager;
  // Forward declaring type: TutorialManager
  class TutorialManager;
  // Forward declaring type: StaticData
  class StaticData;
  // Forward declaring type: RemoteConfigManager
  class RemoteConfigManager;
  // Forward declaring type: Dashboard
  class Dashboard;
  // Forward declaring type: VRPlayer
  class VRPlayer;
}
// Forward declaring namespace: LIV::SDK::Unity
namespace LIV::SDK::Unity {
  // Forward declaring type: LIV
  class LIV;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PunchKeyboard
  class PunchKeyboard;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: Core
  class Core;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::Core);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::Core*, "VROSC", "Core");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.Core
  // [TokenAttribute] Offset: FFFFFFFF
  class Core : public ::Il2CppObject {
    public:
    // Get static field: static public VROSC.AppController AppController
    static ::VROSC::AppController* _get_AppController();
    // Set static field: static public VROSC.AppController AppController
    static void _set_AppController(::VROSC::AppController* value);
    // Get static field: static public VROSC.InputManager InputManager
    static ::VROSC::InputManager* _get_InputManager();
    // Set static field: static public VROSC.InputManager InputManager
    static void _set_InputManager(::VROSC::InputManager* value);
    // Get static field: static public VROSC.PlatformSelector PlatformSelector
    static ::VROSC::PlatformSelector* _get_PlatformSelector();
    // Set static field: static public VROSC.PlatformSelector PlatformSelector
    static void _set_PlatformSelector(::VROSC::PlatformSelector* value);
    // Get static field: static public VROSC.MidiManager MidiManager
    static ::VROSC::MidiManager* _get_MidiManager();
    // Set static field: static public VROSC.MidiManager MidiManager
    static void _set_MidiManager(::VROSC::MidiManager* value);
    // Get static field: static public VROSC.AudioMixManager AudioMixManager
    static ::VROSC::AudioMixManager* _get_AudioMixManager();
    // Set static field: static public VROSC.AudioMixManager AudioMixManager
    static void _set_AudioMixManager(::VROSC::AudioMixManager* value);
    // Get static field: static public VROSC.MalletManager MalletManager
    static ::VROSC::MalletManager* _get_MalletManager();
    // Set static field: static public VROSC.MalletManager MalletManager
    static void _set_MalletManager(::VROSC::MalletManager* value);
    // Get static field: static public VROSC.InstrumentHub InstrumentHub
    static ::VROSC::InstrumentHub* _get_InstrumentHub();
    // Set static field: static public VROSC.InstrumentHub InstrumentHub
    static void _set_InstrumentHub(::VROSC::InstrumentHub* value);
    // Get static field: static public VROSC.HapticManager HapticManager
    static ::VROSC::HapticManager* _get_HapticManager();
    // Set static field: static public VROSC.HapticManager HapticManager
    static void _set_HapticManager(::VROSC::HapticManager* value);
    // Get static field: static public VROSC.VideoManager VideoManager
    static ::VROSC::VideoManager* _get_VideoManager();
    // Set static field: static public VROSC.VideoManager VideoManager
    static void _set_VideoManager(::VROSC::VideoManager* value);
    // Get static field: static public VROSC.SpectatorCameraController SpectatorCameraController
    static ::VROSC::SpectatorCameraController* _get_SpectatorCameraController();
    // Set static field: static public VROSC.SpectatorCameraController SpectatorCameraController
    static void _set_SpectatorCameraController(::VROSC::SpectatorCameraController* value);
    // Get static field: static public VROSC.BeatCounter BeatCounter
    static ::VROSC::BeatCounter* _get_BeatCounter();
    // Set static field: static public VROSC.BeatCounter BeatCounter
    static void _set_BeatCounter(::VROSC::BeatCounter* value);
    // Get static field: static public VROSC.UserDataControllers UserDataControllers
    static ::VROSC::UserDataControllers* _get_UserDataControllers();
    // Set static field: static public VROSC.UserDataControllers UserDataControllers
    static void _set_UserDataControllers(::VROSC::UserDataControllers* value);
    // Get static field: static public VROSC.EnvironmentController EnvironmentController
    static ::VROSC::EnvironmentController* _get_EnvironmentController();
    // Set static field: static public VROSC.EnvironmentController EnvironmentController
    static void _set_EnvironmentController(::VROSC::EnvironmentController* value);
    // Get static field: static public VROSC.SaveLoadManager SaveLoadManager
    static ::VROSC::SaveLoadManager* _get_SaveLoadManager();
    // Set static field: static public VROSC.SaveLoadManager SaveLoadManager
    static void _set_SaveLoadManager(::VROSC::SaveLoadManager* value);
    // Get static field: static public VROSC.AuthenticationManager AuthenticationManager
    static ::VROSC::AuthenticationManager* _get_AuthenticationManager();
    // Set static field: static public VROSC.AuthenticationManager AuthenticationManager
    static void _set_AuthenticationManager(::VROSC::AuthenticationManager* value);
    // Get static field: static public VROSC.AudioRecorder AudioRecorder
    static ::VROSC::AudioRecorder* _get_AudioRecorder();
    // Set static field: static public VROSC.AudioRecorder AudioRecorder
    static void _set_AudioRecorder(::VROSC::AudioRecorder* value);
    // Get static field: static public VROSC.AppValidityChecker AppValidityChecker
    static ::VROSC::AppValidityChecker* _get_AppValidityChecker();
    // Set static field: static public VROSC.AppValidityChecker AppValidityChecker
    static void _set_AppValidityChecker(::VROSC::AppValidityChecker* value);
    // Get static field: static public LIV.SDK.Unity.LIV LIV
    static ::LIV::SDK::Unity::LIV* _get_LIV();
    // Set static field: static public LIV.SDK.Unity.LIV LIV
    static void _set_LIV(::LIV::SDK::Unity::LIV* value);
    // Get static field: static public VROSC.GarbageManager GarbageManager
    static ::VROSC::GarbageManager* _get_GarbageManager();
    // Set static field: static public VROSC.GarbageManager GarbageManager
    static void _set_GarbageManager(::VROSC::GarbageManager* value);
    // Get static field: static public VROSC.TutorialManager TutorialManager
    static ::VROSC::TutorialManager* _get_TutorialManager();
    // Set static field: static public VROSC.TutorialManager TutorialManager
    static void _set_TutorialManager(::VROSC::TutorialManager* value);
    // Get static field: static public VROSC.StaticData StaticData
    static ::VROSC::StaticData* _get_StaticData();
    // Set static field: static public VROSC.StaticData StaticData
    static void _set_StaticData(::VROSC::StaticData* value);
    // Get static field: static public VROSC.RemoteConfigManager RemoteConfigManager
    static ::VROSC::RemoteConfigManager* _get_RemoteConfigManager();
    // Set static field: static public VROSC.RemoteConfigManager RemoteConfigManager
    static void _set_RemoteConfigManager(::VROSC::RemoteConfigManager* value);
    // static field const value: static public System.String HostingURL
    static constexpr const char* HostingURL = "https://virtuoso-c845b.web.app/";
    // Get static field: static public System.String HostingURL
    static ::StringW _get_HostingURL();
    // Set static field: static public System.String HostingURL
    static void _set_HostingURL(::StringW value);
    // Get static field: static public VROSC.Dashboard Dashboard
    static ::VROSC::Dashboard* _get_Dashboard();
    // Set static field: static public VROSC.Dashboard Dashboard
    static void _set_Dashboard(::VROSC::Dashboard* value);
    // Get static field: static public PunchKeyboard Keyboard
    static ::GlobalNamespace::PunchKeyboard* _get_Keyboard();
    // Set static field: static public PunchKeyboard Keyboard
    static void _set_Keyboard(::GlobalNamespace::PunchKeyboard* value);
    // static public VROSC.VRPlayer get_VRPlayer()
    // Offset: 0x8DEE1C
    static ::VROSC::VRPlayer* get_VRPlayer();
    // static public System.Void FetchReferences()
    // Offset: 0x8DEE7C
    static void FetchReferences();
  }; // VROSC.Core
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::Core::get_VRPlayer
// Il2CppName: get_VRPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::VRPlayer* (*)()>(&VROSC::Core::get_VRPlayer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::Core*), "get_VRPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::Core::FetchReferences
// Il2CppName: FetchReferences
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&VROSC::Core::FetchReferences)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::Core*), "FetchReferences", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
