// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.MixerGroupRecorder
#include "VROSC/MixerGroupRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: MasterRecorder
  class MasterRecorder;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::MasterRecorder);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::MasterRecorder*, "VROSC", "MasterRecorder");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x54
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.MasterRecorder
  // [TokenAttribute] Offset: FFFFFFFF
  class MasterRecorder : public ::VROSC::MixerGroupRecorder {
    public:
    // private System.Int32 GetMicrophoneLatency()
    // Offset: 0xAC0910
    int GetMicrophoneLatency();
    // public System.Void .ctor()
    // Offset: 0xAC0CC4
    // Implemented from: VROSC.MixerGroupRecorder
    // Base method: System.Void MixerGroupRecorder::.ctor()
    // Base method: System.Void SourceRecorder::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MasterRecorder* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MasterRecorder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MasterRecorder*, creationType>()));
    }
    // protected override System.Void OnAudioFilterRead(System.Single[] data, System.Int32 channels)
    // Offset: 0xAC0A60
    // Implemented from: VROSC.MixerGroupRecorder
    // Base method: System.Void MixerGroupRecorder::OnAudioFilterRead(System.Single[] data, System.Int32 channels)
    void OnAudioFilterRead(::ArrayW<float> data, int channels);
  }; // VROSC.MasterRecorder
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::MasterRecorder::GetMicrophoneLatency
// Il2CppName: GetMicrophoneLatency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::MasterRecorder::*)()>(&VROSC::MasterRecorder::GetMicrophoneLatency)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::MasterRecorder*), "GetMicrophoneLatency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::MasterRecorder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::MasterRecorder::OnAudioFilterRead
// Il2CppName: OnAudioFilterRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::MasterRecorder::*)(::ArrayW<float>, int)>(&VROSC::MasterRecorder::OnAudioFilterRead)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* channels = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::MasterRecorder*), "OnAudioFilterRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, channels});
  }
};
