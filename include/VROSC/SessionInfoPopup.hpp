// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshPro
  class TextMeshPro;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: UIDataButton
  class UIDataButton;
  // Forward declaring type: UIToggle
  class UIToggle;
  // Forward declaring type: SessionsLibraryUI
  class SessionsLibraryUI;
  // Forward declaring type: SessionUIData
  class SessionUIData;
  // Forward declaring type: InputDevice
  class InputDevice;
  // Forward declaring type: Error
  struct Error;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: SessionInfoPopup
  class SessionInfoPopup;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::SessionInfoPopup);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::SessionInfoPopup*, "VROSC", "SessionInfoPopup");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x98
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.SessionInfoPopup
  // [TokenAttribute] Offset: FFFFFFFF
  class SessionInfoPopup : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private TMPro.TextMeshPro _songNameText
    // Size: 0x8
    // Offset: 0x18
    ::TMPro::TextMeshPro* songNameText;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshPro*) == 0x8);
    // private TMPro.TextMeshPro _songDescriptionText
    // Size: 0x8
    // Offset: 0x20
    ::TMPro::TextMeshPro* songDescriptionText;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshPro*) == 0x8);
    // private UnityEngine.Transform _contributorsList
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Transform* contributorsList;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private VROSC.UIDataButton _contributorButtonPrefab
    // Size: 0x8
    // Offset: 0x30
    ::VROSC::UIDataButton* contributorButtonPrefab;
    // Field size check
    static_assert(sizeof(::VROSC::UIDataButton*) == 0x8);
    // private UnityEngine.Transform _tagsList
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Transform* tagsList;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private VROSC.UIDataButton _tagButtonPrefab
    // Size: 0x8
    // Offset: 0x40
    ::VROSC::UIDataButton* tagButtonPrefab;
    // Field size check
    static_assert(sizeof(::VROSC::UIDataButton*) == 0x8);
    // private UnityEngine.GameObject _songRatingSection
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::GameObject* songRatingSection;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private TMPro.TextMeshPro _songUpVotesText
    // Size: 0x8
    // Offset: 0x50
    ::TMPro::TextMeshPro* songUpVotesText;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshPro*) == 0x8);
    // private TMPro.TextMeshPro _songDownloadsText
    // Size: 0x8
    // Offset: 0x58
    ::TMPro::TextMeshPro* songDownloadsText;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshPro*) == 0x8);
    // private VROSC.UIToggle _upVoteButton
    // Size: 0x8
    // Offset: 0x60
    ::VROSC::UIToggle* upVoteButton;
    // Field size check
    static_assert(sizeof(::VROSC::UIToggle*) == 0x8);
    // private VROSC.UIToggle _favoriteButton
    // Size: 0x8
    // Offset: 0x68
    ::VROSC::UIToggle* favoriteButton;
    // Field size check
    static_assert(sizeof(::VROSC::UIToggle*) == 0x8);
    // private System.Int32 _maxContributors
    // Size: 0x4
    // Offset: 0x70
    int maxContributors;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 _maxTags
    // Size: 0x4
    // Offset: 0x74
    int maxTags;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private VROSC.SessionsLibraryUI _sessionsLibraryUI
    // Size: 0x8
    // Offset: 0x78
    ::VROSC::SessionsLibraryUI* sessionsLibraryUI;
    // Field size check
    static_assert(sizeof(::VROSC::SessionsLibraryUI*) == 0x8);
    // private VROSC.SessionUIData _sessionUIData
    // Size: 0x8
    // Offset: 0x80
    ::VROSC::SessionUIData* sessionUIData;
    // Field size check
    static_assert(sizeof(::VROSC::SessionUIData*) == 0x8);
    // private System.Collections.Generic.List`1<VROSC.UIDataButton> _contributorButtons
    // Size: 0x8
    // Offset: 0x88
    ::System::Collections::Generic::List_1<::VROSC::UIDataButton*>* contributorButtons;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::VROSC::UIDataButton*>*) == 0x8);
    // private System.Collections.Generic.List`1<VROSC.UIDataButton> _tagsButtons
    // Size: 0x8
    // Offset: 0x90
    ::System::Collections::Generic::List_1<::VROSC::UIDataButton*>* tagsButtons;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::VROSC::UIDataButton*>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private TMPro.TextMeshPro _songNameText
    [[deprecated]] ::TMPro::TextMeshPro*& dyn__songNameText();
    // Get instance field reference: private TMPro.TextMeshPro _songDescriptionText
    [[deprecated]] ::TMPro::TextMeshPro*& dyn__songDescriptionText();
    // Get instance field reference: private UnityEngine.Transform _contributorsList
    [[deprecated]] ::UnityEngine::Transform*& dyn__contributorsList();
    // Get instance field reference: private VROSC.UIDataButton _contributorButtonPrefab
    [[deprecated]] ::VROSC::UIDataButton*& dyn__contributorButtonPrefab();
    // Get instance field reference: private UnityEngine.Transform _tagsList
    [[deprecated]] ::UnityEngine::Transform*& dyn__tagsList();
    // Get instance field reference: private VROSC.UIDataButton _tagButtonPrefab
    [[deprecated]] ::VROSC::UIDataButton*& dyn__tagButtonPrefab();
    // Get instance field reference: private UnityEngine.GameObject _songRatingSection
    [[deprecated]] ::UnityEngine::GameObject*& dyn__songRatingSection();
    // Get instance field reference: private TMPro.TextMeshPro _songUpVotesText
    [[deprecated]] ::TMPro::TextMeshPro*& dyn__songUpVotesText();
    // Get instance field reference: private TMPro.TextMeshPro _songDownloadsText
    [[deprecated]] ::TMPro::TextMeshPro*& dyn__songDownloadsText();
    // Get instance field reference: private VROSC.UIToggle _upVoteButton
    [[deprecated]] ::VROSC::UIToggle*& dyn__upVoteButton();
    // Get instance field reference: private VROSC.UIToggle _favoriteButton
    [[deprecated]] ::VROSC::UIToggle*& dyn__favoriteButton();
    // Get instance field reference: private System.Int32 _maxContributors
    [[deprecated]] int& dyn__maxContributors();
    // Get instance field reference: private System.Int32 _maxTags
    [[deprecated]] int& dyn__maxTags();
    // Get instance field reference: private VROSC.SessionsLibraryUI _sessionsLibraryUI
    [[deprecated]] ::VROSC::SessionsLibraryUI*& dyn__sessionsLibraryUI();
    // Get instance field reference: private VROSC.SessionUIData _sessionUIData
    [[deprecated]] ::VROSC::SessionUIData*& dyn__sessionUIData();
    // Get instance field reference: private System.Collections.Generic.List`1<VROSC.UIDataButton> _contributorButtons
    [[deprecated]] ::System::Collections::Generic::List_1<::VROSC::UIDataButton*>*& dyn__contributorButtons();
    // Get instance field reference: private System.Collections.Generic.List`1<VROSC.UIDataButton> _tagsButtons
    [[deprecated]] ::System::Collections::Generic::List_1<::VROSC::UIDataButton*>*& dyn__tagsButtons();
    // private System.Void Awake()
    // Offset: 0x1985570
    void Awake();
    // private System.Void OnDestroy()
    // Offset: 0x19856A8
    void OnDestroy();
    // public System.Void Setup(VROSC.SessionsLibraryUI sessionsLibraryUI)
    // Offset: 0x19857E0
    void Setup(::VROSC::SessionsLibraryUI* sessionsLibraryUI);
    // public System.Void UpdateInfo(VROSC.SessionUIData sessionUIData)
    // Offset: 0x19857E8
    void UpdateInfo(::VROSC::SessionUIData* sessionUIData);
    // private System.Void SetupContributorButtons(System.Collections.Generic.List`1<System.String> contributorNames)
    // Offset: 0x1985B10
    void SetupContributorButtons(::System::Collections::Generic::List_1<::StringW>* contributorNames);
    // private System.Void SetupTagsButtons(System.Collections.Generic.List`1<System.String> tags)
    // Offset: 0x1985FA8
    void SetupTagsButtons(::System::Collections::Generic::List_1<::StringW>* tags);
    // private System.Void ContributorButtonPressed(System.Object data)
    // Offset: 0x19863B8
    void ContributorButtonPressed(::Il2CppObject* data);
    // private System.Void TagButtonPressed(System.Object data)
    // Offset: 0x198645C
    void TagButtonPressed(::Il2CppObject* data);
    // private System.Void UpVoteButtonToggled(VROSC.InputDevice device, System.Boolean isOn)
    // Offset: 0x19864D8
    void UpVoteButtonToggled(::VROSC::InputDevice* device, bool isOn);
    // private System.Void FavoriteButtonToggled(VROSC.InputDevice device, System.Boolean isOn)
    // Offset: 0x1986950
    void FavoriteButtonToggled(::VROSC::InputDevice* device, bool isOn);
    // private System.Void <UpVoteButtonToggled>b__25_0()
    // Offset: 0x1986E68
    void $UpVoteButtonToggled$b__25_0();
    // private System.Void <UpVoteButtonToggled>b__25_1(VROSC.Error error)
    // Offset: 0x1986E88
    void $UpVoteButtonToggled$b__25_1(::VROSC::Error error);
    // private System.Void <UpVoteButtonToggled>b__25_2()
    // Offset: 0x1986EC0
    void $UpVoteButtonToggled$b__25_2();
    // private System.Void <UpVoteButtonToggled>b__25_3(VROSC.Error error)
    // Offset: 0x1986EE0
    void $UpVoteButtonToggled$b__25_3(::VROSC::Error error);
    // private System.Void <FavoriteButtonToggled>b__26_0()
    // Offset: 0x1986F18
    void $FavoriteButtonToggled$b__26_0();
    // private System.Void <FavoriteButtonToggled>b__26_1(VROSC.Error error)
    // Offset: 0x1986F38
    void $FavoriteButtonToggled$b__26_1(::VROSC::Error error);
    // private System.Void <FavoriteButtonToggled>b__26_2()
    // Offset: 0x1986F70
    void $FavoriteButtonToggled$b__26_2();
    // private System.Void <FavoriteButtonToggled>b__26_3(VROSC.Error error)
    // Offset: 0x1986F90
    void $FavoriteButtonToggled$b__26_3(::VROSC::Error error);
    // public System.Void .ctor()
    // Offset: 0x1986DC8
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SessionInfoPopup* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SessionInfoPopup::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SessionInfoPopup*, creationType>()));
    }
  }; // VROSC.SessionInfoPopup
  #pragma pack(pop)
  static check_size<sizeof(SessionInfoPopup), 144 + sizeof(::System::Collections::Generic::List_1<::VROSC::UIDataButton*>*)> __VROSC_SessionInfoPopupSizeCheck;
  static_assert(sizeof(SessionInfoPopup) == 0x98);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::SessionInfoPopup::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionInfoPopup::*)()>(&VROSC::SessionInfoPopup::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionInfoPopup*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionInfoPopup::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionInfoPopup::*)()>(&VROSC::SessionInfoPopup::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionInfoPopup*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionInfoPopup::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionInfoPopup::*)(::VROSC::SessionsLibraryUI*)>(&VROSC::SessionInfoPopup::Setup)> {
  static const MethodInfo* get() {
    static auto* sessionsLibraryUI = &::il2cpp_utils::GetClassFromName("VROSC", "SessionsLibraryUI")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionInfoPopup*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionsLibraryUI});
  }
};
// Writing MetadataGetter for method: VROSC::SessionInfoPopup::UpdateInfo
// Il2CppName: UpdateInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionInfoPopup::*)(::VROSC::SessionUIData*)>(&VROSC::SessionInfoPopup::UpdateInfo)> {
  static const MethodInfo* get() {
    static auto* sessionUIData = &::il2cpp_utils::GetClassFromName("VROSC", "SessionUIData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionInfoPopup*), "UpdateInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionUIData});
  }
};
// Writing MetadataGetter for method: VROSC::SessionInfoPopup::SetupContributorButtons
// Il2CppName: SetupContributorButtons
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionInfoPopup::*)(::System::Collections::Generic::List_1<::StringW>*)>(&VROSC::SessionInfoPopup::SetupContributorButtons)> {
  static const MethodInfo* get() {
    static auto* contributorNames = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionInfoPopup*), "SetupContributorButtons", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{contributorNames});
  }
};
// Writing MetadataGetter for method: VROSC::SessionInfoPopup::SetupTagsButtons
// Il2CppName: SetupTagsButtons
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionInfoPopup::*)(::System::Collections::Generic::List_1<::StringW>*)>(&VROSC::SessionInfoPopup::SetupTagsButtons)> {
  static const MethodInfo* get() {
    static auto* tags = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionInfoPopup*), "SetupTagsButtons", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tags});
  }
};
// Writing MetadataGetter for method: VROSC::SessionInfoPopup::ContributorButtonPressed
// Il2CppName: ContributorButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionInfoPopup::*)(::Il2CppObject*)>(&VROSC::SessionInfoPopup::ContributorButtonPressed)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionInfoPopup*), "ContributorButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: VROSC::SessionInfoPopup::TagButtonPressed
// Il2CppName: TagButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionInfoPopup::*)(::Il2CppObject*)>(&VROSC::SessionInfoPopup::TagButtonPressed)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionInfoPopup*), "TagButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: VROSC::SessionInfoPopup::UpVoteButtonToggled
// Il2CppName: UpVoteButtonToggled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionInfoPopup::*)(::VROSC::InputDevice*, bool)>(&VROSC::SessionInfoPopup::UpVoteButtonToggled)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* isOn = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionInfoPopup*), "UpVoteButtonToggled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, isOn});
  }
};
// Writing MetadataGetter for method: VROSC::SessionInfoPopup::FavoriteButtonToggled
// Il2CppName: FavoriteButtonToggled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionInfoPopup::*)(::VROSC::InputDevice*, bool)>(&VROSC::SessionInfoPopup::FavoriteButtonToggled)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* isOn = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionInfoPopup*), "FavoriteButtonToggled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, isOn});
  }
};
// Writing MetadataGetter for method: VROSC::SessionInfoPopup::$UpVoteButtonToggled$b__25_0
// Il2CppName: <UpVoteButtonToggled>b__25_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionInfoPopup::*)()>(&VROSC::SessionInfoPopup::$UpVoteButtonToggled$b__25_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionInfoPopup*), "<UpVoteButtonToggled>b__25_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionInfoPopup::$UpVoteButtonToggled$b__25_1
// Il2CppName: <UpVoteButtonToggled>b__25_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionInfoPopup::*)(::VROSC::Error)>(&VROSC::SessionInfoPopup::$UpVoteButtonToggled$b__25_1)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionInfoPopup*), "<UpVoteButtonToggled>b__25_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: VROSC::SessionInfoPopup::$UpVoteButtonToggled$b__25_2
// Il2CppName: <UpVoteButtonToggled>b__25_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionInfoPopup::*)()>(&VROSC::SessionInfoPopup::$UpVoteButtonToggled$b__25_2)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionInfoPopup*), "<UpVoteButtonToggled>b__25_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionInfoPopup::$UpVoteButtonToggled$b__25_3
// Il2CppName: <UpVoteButtonToggled>b__25_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionInfoPopup::*)(::VROSC::Error)>(&VROSC::SessionInfoPopup::$UpVoteButtonToggled$b__25_3)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionInfoPopup*), "<UpVoteButtonToggled>b__25_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: VROSC::SessionInfoPopup::$FavoriteButtonToggled$b__26_0
// Il2CppName: <FavoriteButtonToggled>b__26_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionInfoPopup::*)()>(&VROSC::SessionInfoPopup::$FavoriteButtonToggled$b__26_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionInfoPopup*), "<FavoriteButtonToggled>b__26_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionInfoPopup::$FavoriteButtonToggled$b__26_1
// Il2CppName: <FavoriteButtonToggled>b__26_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionInfoPopup::*)(::VROSC::Error)>(&VROSC::SessionInfoPopup::$FavoriteButtonToggled$b__26_1)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionInfoPopup*), "<FavoriteButtonToggled>b__26_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: VROSC::SessionInfoPopup::$FavoriteButtonToggled$b__26_2
// Il2CppName: <FavoriteButtonToggled>b__26_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionInfoPopup::*)()>(&VROSC::SessionInfoPopup::$FavoriteButtonToggled$b__26_2)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionInfoPopup*), "<FavoriteButtonToggled>b__26_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionInfoPopup::$FavoriteButtonToggled$b__26_3
// Il2CppName: <FavoriteButtonToggled>b__26_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionInfoPopup::*)(::VROSC::Error)>(&VROSC::SessionInfoPopup::$FavoriteButtonToggled$b__26_3)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionInfoPopup*), "<FavoriteButtonToggled>b__26_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: VROSC::SessionInfoPopup::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
