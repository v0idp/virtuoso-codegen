// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.AnimatedAppearData
#include "VROSC/AnimatedAppearData.hpp"
// Including type: VROSC.AnimatedAppearData/VROSC.AppearingObject
#include "VROSC/AnimatedAppearData_AppearingObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: SimpleAppearObject
  class SimpleAppearObject;
  // Forward declaring type: MinMaxVector2
  class MinMaxVector2;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::AnimatedAppearData::SimpleAppear);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::AnimatedAppearData::SimpleAppear*, "VROSC", "AnimatedAppearData/SimpleAppear");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.AnimatedAppearData/VROSC.SimpleAppear
  // [TokenAttribute] Offset: FFFFFFFF
  class AnimatedAppearData::SimpleAppear : public ::VROSC::AnimatedAppearData::AppearingObject {
    public:
    public:
    // private VROSC.SimpleAppearObject _target
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::SimpleAppearObject* target;
    // Field size check
    static_assert(sizeof(::VROSC::SimpleAppearObject*) == 0x8);
    public:
    // Creating conversion operator: operator ::VROSC::SimpleAppearObject*
    constexpr operator ::VROSC::SimpleAppearObject*() const noexcept {
      return target;
    }
    // Get instance field reference: private VROSC.SimpleAppearObject _target
    [[deprecated]] ::VROSC::SimpleAppearObject*& dyn__target();
    // public System.Void .ctor(VROSC.SimpleAppearObject target, VROSC.MinMaxVector2 minMax)
    // Offset: 0x956508
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AnimatedAppearData::SimpleAppear* New_ctor(::VROSC::SimpleAppearObject* target, ::VROSC::MinMaxVector2* minMax) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AnimatedAppearData::SimpleAppear::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AnimatedAppearData::SimpleAppear*, creationType>(target, minMax)));
    }
    // protected override System.Void UpdateObject(VROSC.AnimatedAppear/VROSC.Mode mode, System.Boolean useFlash)
    // Offset: 0x956550
    // Implemented from: VROSC.AnimatedAppearData/VROSC.AppearingObject
    // Base method: System.Void AppearingObject::UpdateObject(VROSC.AnimatedAppear/VROSC.Mode mode, System.Boolean useFlash)
    void UpdateObject(::VROSC::AnimatedAppear::Mode mode, bool useFlash);
  }; // VROSC.AnimatedAppearData/VROSC.SimpleAppear
  #pragma pack(pop)
  static check_size<sizeof(AnimatedAppearData::SimpleAppear), 32 + sizeof(::VROSC::SimpleAppearObject*)> __VROSC_AnimatedAppearData_SimpleAppearSizeCheck;
  static_assert(sizeof(AnimatedAppearData::SimpleAppear) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::AnimatedAppearData::SimpleAppear::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::AnimatedAppearData::SimpleAppear::UpdateObject
// Il2CppName: UpdateObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AnimatedAppearData::SimpleAppear::*)(::VROSC::AnimatedAppear::Mode, bool)>(&VROSC::AnimatedAppearData::SimpleAppear::UpdateObject)> {
  static const MethodInfo* get() {
    static auto* mode = &::il2cpp_utils::GetClassFromName("VROSC", "AnimatedAppear/Mode")->byval_arg;
    static auto* useFlash = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AnimatedAppearData::SimpleAppear*), "UpdateObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mode, useFlash});
  }
};
