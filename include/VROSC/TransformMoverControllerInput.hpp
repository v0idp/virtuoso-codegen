// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: VROSC.TriggerButton
#include "VROSC/TriggerButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: TransformMover
  class TransformMover;
  // Forward declaring type: InputDevice
  class InputDevice;
  // Forward declaring type: GrabbingDevice
  class GrabbingDevice;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AnimationCurve
  class AnimationCurve;
  // Forward declaring type: Vector2
  struct Vector2;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: TransformMoverControllerInput
  class TransformMoverControllerInput;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::TransformMoverControllerInput);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::TransformMoverControllerInput*, "VROSC", "TransformMoverControllerInput");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x31
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.TransformMoverControllerInput
  // [TokenAttribute] Offset: FFFFFFFF
  class TransformMoverControllerInput : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::VROSC::TransformMoverControllerInput::$MoveInObject$d__14
    class $MoveInObject$d__14;
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private VROSC.TransformMover _mover
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::TransformMover* mover;
    // Field size check
    static_assert(sizeof(::VROSC::TransformMover*) == 0x8);
    // private VROSC.TriggerButton _moveIn
    // Size: 0x4
    // Offset: 0x20
    ::VROSC::TriggerButton moveIn;
    // Field size check
    static_assert(sizeof(::VROSC::TriggerButton) == 0x4);
    // private System.Single _moveinDuration
    // Size: 0x4
    // Offset: 0x24
    float moveinDuration;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.AnimationCurve _moveinCurve
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::AnimationCurve* moveinCurve;
    // Field size check
    static_assert(sizeof(::UnityEngine::AnimationCurve*) == 0x8);
    // private System.Boolean <LockingUpright>k__BackingField
    // Size: 0x1
    // Offset: 0x30
    bool LockingUpright;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.TransformMover _mover
    ::VROSC::TransformMover*& dyn__mover();
    // Get instance field reference: private VROSC.TriggerButton _moveIn
    ::VROSC::TriggerButton& dyn__moveIn();
    // Get instance field reference: private System.Single _moveinDuration
    float& dyn__moveinDuration();
    // Get instance field reference: private UnityEngine.AnimationCurve _moveinCurve
    ::UnityEngine::AnimationCurve*& dyn__moveinCurve();
    // Get instance field reference: private System.Boolean <LockingUpright>k__BackingField
    bool& dyn_$LockingUpright$k__BackingField();
    // public System.Boolean get_LockingUpright()
    // Offset: 0x1403FDC
    bool get_LockingUpright();
    // private System.Void set_LockingUpright(System.Boolean value)
    // Offset: 0x1403FD0
    void set_LockingUpright(bool value);
    // private System.Void Awake()
    // Offset: 0x1403FE4
    void Awake();
    // private System.Void OnDestroy()
    // Offset: 0x140411C
    void OnDestroy();
    // private System.Void GrabBegin(VROSC.TransformMover mover)
    // Offset: 0x1404254
    void GrabBegin(::VROSC::TransformMover* mover);
    // private System.Void GrabEnd(VROSC.TransformMover mover)
    // Offset: 0x14043D4
    void GrabEnd(::VROSC::TransformMover* mover);
    // private System.Void EvaluateThumbstickInput(VROSC.InputDevice device, UnityEngine.Vector2 vector)
    // Offset: 0x140465C
    void EvaluateThumbstickInput(::VROSC::InputDevice* device, ::UnityEngine::Vector2 vector);
    // private System.Void ButtonBegin(VROSC.InputDevice device, VROSC.TriggerButton button)
    // Offset: 0x1404800
    void ButtonBegin(::VROSC::InputDevice* device, ::VROSC::TriggerButton button);
    // private System.Collections.IEnumerator MoveInObject(VROSC.GrabbingDevice device)
    // Offset: 0x14048C0
    ::System::Collections::IEnumerator* MoveInObject(::VROSC::GrabbingDevice* device);
    // private VROSC.GrabbingDevice GetGrabberByDevice(VROSC.InputDevice device)
    // Offset: 0x1404660
    ::VROSC::GrabbingDevice* GetGrabberByDevice(::VROSC::InputDevice* device);
    // public System.Void .ctor()
    // Offset: 0x1404938
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TransformMoverControllerInput* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformMoverControllerInput::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TransformMoverControllerInput*, creationType>()));
    }
  }; // VROSC.TransformMoverControllerInput
  #pragma pack(pop)
  static check_size<sizeof(TransformMoverControllerInput), 48 + sizeof(bool)> __VROSC_TransformMoverControllerInputSizeCheck;
  static_assert(sizeof(TransformMoverControllerInput) == 0x31);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::TransformMoverControllerInput::get_LockingUpright
// Il2CppName: get_LockingUpright
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::TransformMoverControllerInput::*)()>(&VROSC::TransformMoverControllerInput::get_LockingUpright)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::TransformMoverControllerInput*), "get_LockingUpright", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::TransformMoverControllerInput::set_LockingUpright
// Il2CppName: set_LockingUpright
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::TransformMoverControllerInput::*)(bool)>(&VROSC::TransformMoverControllerInput::set_LockingUpright)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::TransformMoverControllerInput*), "set_LockingUpright", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::TransformMoverControllerInput::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::TransformMoverControllerInput::*)()>(&VROSC::TransformMoverControllerInput::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::TransformMoverControllerInput*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::TransformMoverControllerInput::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::TransformMoverControllerInput::*)()>(&VROSC::TransformMoverControllerInput::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::TransformMoverControllerInput*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::TransformMoverControllerInput::GrabBegin
// Il2CppName: GrabBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::TransformMoverControllerInput::*)(::VROSC::TransformMover*)>(&VROSC::TransformMoverControllerInput::GrabBegin)> {
  static const MethodInfo* get() {
    static auto* mover = &::il2cpp_utils::GetClassFromName("VROSC", "TransformMover")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::TransformMoverControllerInput*), "GrabBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mover});
  }
};
// Writing MetadataGetter for method: VROSC::TransformMoverControllerInput::GrabEnd
// Il2CppName: GrabEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::TransformMoverControllerInput::*)(::VROSC::TransformMover*)>(&VROSC::TransformMoverControllerInput::GrabEnd)> {
  static const MethodInfo* get() {
    static auto* mover = &::il2cpp_utils::GetClassFromName("VROSC", "TransformMover")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::TransformMoverControllerInput*), "GrabEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mover});
  }
};
// Writing MetadataGetter for method: VROSC::TransformMoverControllerInput::EvaluateThumbstickInput
// Il2CppName: EvaluateThumbstickInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::TransformMoverControllerInput::*)(::VROSC::InputDevice*, ::UnityEngine::Vector2)>(&VROSC::TransformMoverControllerInput::EvaluateThumbstickInput)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* vector = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::TransformMoverControllerInput*), "EvaluateThumbstickInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, vector});
  }
};
// Writing MetadataGetter for method: VROSC::TransformMoverControllerInput::ButtonBegin
// Il2CppName: ButtonBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::TransformMoverControllerInput::*)(::VROSC::InputDevice*, ::VROSC::TriggerButton)>(&VROSC::TransformMoverControllerInput::ButtonBegin)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* button = &::il2cpp_utils::GetClassFromName("VROSC", "TriggerButton")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::TransformMoverControllerInput*), "ButtonBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, button});
  }
};
// Writing MetadataGetter for method: VROSC::TransformMoverControllerInput::MoveInObject
// Il2CppName: MoveInObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (VROSC::TransformMoverControllerInput::*)(::VROSC::GrabbingDevice*)>(&VROSC::TransformMoverControllerInput::MoveInObject)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("VROSC", "GrabbingDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::TransformMoverControllerInput*), "MoveInObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: VROSC::TransformMoverControllerInput::GetGrabberByDevice
// Il2CppName: GetGrabberByDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::GrabbingDevice* (VROSC::TransformMoverControllerInput::*)(::VROSC::InputDevice*)>(&VROSC::TransformMoverControllerInput::GetGrabberByDevice)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::TransformMoverControllerInput*), "GetGrabberByDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: VROSC::TransformMoverControllerInput::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
