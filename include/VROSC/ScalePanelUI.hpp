// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: ScaleRowUI
  class ScaleRowUI;
  // Forward declaring type: AnimatedPanel
  class AnimatedPanel;
  // Forward declaring type: SynthController
  class SynthController;
  // Forward declaring type: Scale
  struct Scale;
  // Forward declaring type: ScalePreset
  class ScalePreset;
  // Forward declaring type: Note
  struct Note;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: ScalePanelUI
  class ScalePanelUI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::ScalePanelUI);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::ScalePanelUI*, "VROSC", "ScalePanelUI");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.ScalePanelUI
  // [TokenAttribute] Offset: FFFFFFFF
  class ScalePanelUI : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private VROSC.ScaleRowUI[] _scaleRows
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::VROSC::ScaleRowUI*> scaleRows;
    // Field size check
    static_assert(sizeof(::ArrayW<::VROSC::ScaleRowUI*>) == 0x8);
    // private VROSC.AnimatedPanel _animation
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::AnimatedPanel* animation;
    // Field size check
    static_assert(sizeof(::VROSC::AnimatedPanel*) == 0x8);
    // private VROSC.SynthController _instrumentController
    // Size: 0x8
    // Offset: 0x28
    ::VROSC::SynthController* instrumentController;
    // Field size check
    static_assert(sizeof(::VROSC::SynthController*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.ScaleRowUI[] _scaleRows
    [[deprecated]] ::ArrayW<::VROSC::ScaleRowUI*>& dyn__scaleRows();
    // Get instance field reference: private VROSC.AnimatedPanel _animation
    [[deprecated]] ::VROSC::AnimatedPanel*& dyn__animation();
    // Get instance field reference: private VROSC.SynthController _instrumentController
    [[deprecated]] ::VROSC::SynthController*& dyn__instrumentController();
    // private System.Void Awake()
    // Offset: 0xDE337C
    void Awake();
    // public System.Void Setup(VROSC.SynthController instrumentController)
    // Offset: 0xDE3494
    void Setup(::VROSC::SynthController* instrumentController);
    // public System.Void SetActive(System.Boolean shouldBeOpen, System.Boolean animate)
    // Offset: 0xDE3B38
    void SetActive(bool shouldBeOpen, bool animate);
    // protected System.Void OnDestroy()
    // Offset: 0xDE3B8C
    void OnDestroy();
    // private System.Void RowNotesUpdated(System.Int32 axis, VROSC.Scale scale)
    // Offset: 0xDE3CA4
    void RowNotesUpdated(int axis, ::VROSC::Scale scale);
    // public System.Void GlobalScaleChanged(VROSC.ScalePreset scalePreset, VROSC.Note key)
    // Offset: 0xDE3CE8
    void GlobalScaleChanged(::VROSC::ScalePreset* scalePreset, ::VROSC::Note key);
    // public System.Void .ctor()
    // Offset: 0xDE4038
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ScalePanelUI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScalePanelUI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ScalePanelUI*, creationType>()));
    }
  }; // VROSC.ScalePanelUI
  #pragma pack(pop)
  static check_size<sizeof(ScalePanelUI), 40 + sizeof(::VROSC::SynthController*)> __VROSC_ScalePanelUISizeCheck;
  static_assert(sizeof(ScalePanelUI) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::ScalePanelUI::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ScalePanelUI::*)()>(&VROSC::ScalePanelUI::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScalePanelUI*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::ScalePanelUI::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ScalePanelUI::*)(::VROSC::SynthController*)>(&VROSC::ScalePanelUI::Setup)> {
  static const MethodInfo* get() {
    static auto* instrumentController = &::il2cpp_utils::GetClassFromName("VROSC", "SynthController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScalePanelUI*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instrumentController});
  }
};
// Writing MetadataGetter for method: VROSC::ScalePanelUI::SetActive
// Il2CppName: SetActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ScalePanelUI::*)(bool, bool)>(&VROSC::ScalePanelUI::SetActive)> {
  static const MethodInfo* get() {
    static auto* shouldBeOpen = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* animate = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScalePanelUI*), "SetActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shouldBeOpen, animate});
  }
};
// Writing MetadataGetter for method: VROSC::ScalePanelUI::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ScalePanelUI::*)()>(&VROSC::ScalePanelUI::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScalePanelUI*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::ScalePanelUI::RowNotesUpdated
// Il2CppName: RowNotesUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ScalePanelUI::*)(int, ::VROSC::Scale)>(&VROSC::ScalePanelUI::RowNotesUpdated)> {
  static const MethodInfo* get() {
    static auto* axis = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("VROSC", "Scale")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScalePanelUI*), "RowNotesUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{axis, scale});
  }
};
// Writing MetadataGetter for method: VROSC::ScalePanelUI::GlobalScaleChanged
// Il2CppName: GlobalScaleChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ScalePanelUI::*)(::VROSC::ScalePreset*, ::VROSC::Note)>(&VROSC::ScalePanelUI::GlobalScaleChanged)> {
  static const MethodInfo* get() {
    static auto* scalePreset = &::il2cpp_utils::GetClassFromName("VROSC", "ScalePreset")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("VROSC", "Note")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScalePanelUI*), "GlobalScaleChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scalePreset, key});
  }
};
// Writing MetadataGetter for method: VROSC::ScalePanelUI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
