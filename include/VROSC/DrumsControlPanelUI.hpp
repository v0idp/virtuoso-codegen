// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.InstrumentControlPanelUI
#include "VROSC/InstrumentControlPanelUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: UIHoldButton
  class UIHoldButton;
  // Forward declaring type: UISlideToggle
  class UISlideToggle;
  // Forward declaring type: UISlider
  class UISlider;
  // Forward declaring type: UIToggle
  class UIToggle;
  // Forward declaring type: DrumEffectsUI
  class DrumEffectsUI;
  // Forward declaring type: InputDevice
  class InputDevice;
  // Forward declaring type: UserPreferencesDataController
  class UserPreferencesDataController;
  // Forward declaring type: WidgetController
  class WidgetController;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MalletSettingsPanel
  class MalletSettingsPanel;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: DrumsControlPanelUI
  class DrumsControlPanelUI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::DrumsControlPanelUI);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::DrumsControlPanelUI*, "VROSC", "DrumsControlPanelUI");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x90
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.DrumsControlPanelUI
  // [TokenAttribute] Offset: FFFFFFFF
  class DrumsControlPanelUI : public ::VROSC::InstrumentControlPanelUI {
    public:
    public:
    // private VROSC.UIHoldButton _deleteAllButton
    // Size: 0x8
    // Offset: 0x58
    ::VROSC::UIHoldButton* deleteAllButton;
    // Field size check
    static_assert(sizeof(::VROSC::UIHoldButton*) == 0x8);
    // private VROSC.UISlideToggle _previewSampleSoundsToggle
    // Size: 0x8
    // Offset: 0x60
    ::VROSC::UISlideToggle* previewSampleSoundsToggle;
    // Field size check
    static_assert(sizeof(::VROSC::UISlideToggle*) == 0x8);
    // private VROSC.UISlider _previewVolumeSlider
    // Size: 0x8
    // Offset: 0x68
    ::VROSC::UISlider* previewVolumeSlider;
    // Field size check
    static_assert(sizeof(::VROSC::UISlider*) == 0x8);
    // private VROSC.UIToggle _effectsPanelButton
    // Size: 0x8
    // Offset: 0x70
    ::VROSC::UIToggle* effectsPanelButton;
    // Field size check
    static_assert(sizeof(::VROSC::UIToggle*) == 0x8);
    // private VROSC.DrumEffectsUI _drumEffectsUI
    // Size: 0x8
    // Offset: 0x78
    ::VROSC::DrumEffectsUI* drumEffectsUI;
    // Field size check
    static_assert(sizeof(::VROSC::DrumEffectsUI*) == 0x8);
    // private MalletSettingsPanel _malletSettingsPanel
    // Size: 0x8
    // Offset: 0x80
    ::GlobalNamespace::MalletSettingsPanel* malletSettingsPanel;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::MalletSettingsPanel*) == 0x8);
    // public System.Action OnDeleteAll
    // Size: 0x8
    // Offset: 0x88
    ::System::Action* OnDeleteAll;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    public:
    // Get instance field reference: private VROSC.UIHoldButton _deleteAllButton
    [[deprecated("Use field access instead!")]] ::VROSC::UIHoldButton*& dyn__deleteAllButton();
    // Get instance field reference: private VROSC.UISlideToggle _previewSampleSoundsToggle
    [[deprecated("Use field access instead!")]] ::VROSC::UISlideToggle*& dyn__previewSampleSoundsToggle();
    // Get instance field reference: private VROSC.UISlider _previewVolumeSlider
    [[deprecated("Use field access instead!")]] ::VROSC::UISlider*& dyn__previewVolumeSlider();
    // Get instance field reference: private VROSC.UIToggle _effectsPanelButton
    [[deprecated("Use field access instead!")]] ::VROSC::UIToggle*& dyn__effectsPanelButton();
    // Get instance field reference: private VROSC.DrumEffectsUI _drumEffectsUI
    [[deprecated("Use field access instead!")]] ::VROSC::DrumEffectsUI*& dyn__drumEffectsUI();
    // Get instance field reference: private MalletSettingsPanel _malletSettingsPanel
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::MalletSettingsPanel*& dyn__malletSettingsPanel();
    // Get instance field reference: public System.Action OnDeleteAll
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_OnDeleteAll();
    // private System.Void SetPreviewVolume(System.Single volume)
    // Offset: 0x8EA880
    void SetPreviewVolume(float volume);
    // private System.Void SetPreviewSoundsToggled(VROSC.InputDevice device, System.Boolean active)
    // Offset: 0x8EA8F0
    void SetPreviewSoundsToggled(::VROSC::InputDevice* device, bool active);
    // System.Void SetMalletsValues(VROSC.UserPreferencesDataController data)
    // Offset: 0x8EA99C
    void SetMalletsValues(::VROSC::UserPreferencesDataController* data);
    // System.Void SetPreviewValues(VROSC.UserPreferencesDataController data)
    // Offset: 0x8EA9B8
    void SetPreviewValues(::VROSC::UserPreferencesDataController* data);
    // private System.Void EffectsPanelButtonToggled(VROSC.InputDevice device, System.Boolean isOn)
    // Offset: 0x8EAD08
    void EffectsPanelButtonToggled(::VROSC::InputDevice* device, bool isOn);
    // private System.Void DeleteAllPressed()
    // Offset: 0x8EAD34
    void DeleteAllPressed();
    // public System.Void .ctor()
    // Offset: 0x8EAD48
    // Implemented from: VROSC.InstrumentControlPanelUI
    // Base method: System.Void InstrumentControlPanelUI::.ctor()
    // Base method: System.Void ControlPanelUI::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DrumsControlPanelUI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DrumsControlPanelUI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DrumsControlPanelUI*, creationType>()));
    }
    // public override System.Void Setup(VROSC.WidgetController widgetController)
    // Offset: 0x8EA3E8
    // Implemented from: VROSC.InstrumentControlPanelUI
    // Base method: System.Void InstrumentControlPanelUI::Setup(VROSC.WidgetController widgetController)
    void Setup(::VROSC::WidgetController* widgetController);
    // protected override System.Void Awake()
    // Offset: 0x8EA5F0
    // Implemented from: VROSC.ControlPanelUI
    // Base method: System.Void ControlPanelUI::Awake()
    void Awake();
    // protected override System.Void OnDestroy()
    // Offset: 0x8EAA78
    // Implemented from: VROSC.ControlPanelUI
    // Base method: System.Void ControlPanelUI::OnDestroy()
    void OnDestroy();
  }; // VROSC.DrumsControlPanelUI
  #pragma pack(pop)
  static check_size<sizeof(DrumsControlPanelUI), 136 + sizeof(::System::Action*)> __VROSC_DrumsControlPanelUISizeCheck;
  static_assert(sizeof(DrumsControlPanelUI) == 0x90);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::DrumsControlPanelUI::SetPreviewVolume
// Il2CppName: SetPreviewVolume
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DrumsControlPanelUI::*)(float)>(&VROSC::DrumsControlPanelUI::SetPreviewVolume)> {
  static const MethodInfo* get() {
    static auto* volume = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::DrumsControlPanelUI*), "SetPreviewVolume", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{volume});
  }
};
// Writing MetadataGetter for method: VROSC::DrumsControlPanelUI::SetPreviewSoundsToggled
// Il2CppName: SetPreviewSoundsToggled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DrumsControlPanelUI::*)(::VROSC::InputDevice*, bool)>(&VROSC::DrumsControlPanelUI::SetPreviewSoundsToggled)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* active = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::DrumsControlPanelUI*), "SetPreviewSoundsToggled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, active});
  }
};
// Writing MetadataGetter for method: VROSC::DrumsControlPanelUI::SetMalletsValues
// Il2CppName: SetMalletsValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DrumsControlPanelUI::*)(::VROSC::UserPreferencesDataController*)>(&VROSC::DrumsControlPanelUI::SetMalletsValues)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("VROSC", "UserPreferencesDataController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::DrumsControlPanelUI*), "SetMalletsValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: VROSC::DrumsControlPanelUI::SetPreviewValues
// Il2CppName: SetPreviewValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DrumsControlPanelUI::*)(::VROSC::UserPreferencesDataController*)>(&VROSC::DrumsControlPanelUI::SetPreviewValues)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("VROSC", "UserPreferencesDataController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::DrumsControlPanelUI*), "SetPreviewValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: VROSC::DrumsControlPanelUI::EffectsPanelButtonToggled
// Il2CppName: EffectsPanelButtonToggled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DrumsControlPanelUI::*)(::VROSC::InputDevice*, bool)>(&VROSC::DrumsControlPanelUI::EffectsPanelButtonToggled)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* isOn = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::DrumsControlPanelUI*), "EffectsPanelButtonToggled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, isOn});
  }
};
// Writing MetadataGetter for method: VROSC::DrumsControlPanelUI::DeleteAllPressed
// Il2CppName: DeleteAllPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DrumsControlPanelUI::*)()>(&VROSC::DrumsControlPanelUI::DeleteAllPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::DrumsControlPanelUI*), "DeleteAllPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::DrumsControlPanelUI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::DrumsControlPanelUI::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DrumsControlPanelUI::*)(::VROSC::WidgetController*)>(&VROSC::DrumsControlPanelUI::Setup)> {
  static const MethodInfo* get() {
    static auto* widgetController = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::DrumsControlPanelUI*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{widgetController});
  }
};
// Writing MetadataGetter for method: VROSC::DrumsControlPanelUI::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DrumsControlPanelUI::*)()>(&VROSC::DrumsControlPanelUI::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::DrumsControlPanelUI*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::DrumsControlPanelUI::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DrumsControlPanelUI::*)()>(&VROSC::DrumsControlPanelUI::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::DrumsControlPanelUI*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
