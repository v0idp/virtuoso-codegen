// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.UISliderBase
#include "VROSC/UISliderBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: UISliderData
  class UISliderData;
  // Forward declaring type: InputDevice
  class InputDevice;
  // Forward declaring type: ClickData
  class ClickData;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RectTransform
  class RectTransform;
  // Skipping declaration: Vector3 because it is already included!
  // Forward declaring type: Vector2
  struct Vector2;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: UISlider
  class UISlider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::UISlider);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::UISlider*, "VROSC", "UISlider");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0xF0
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.UISlider
  // [TokenAttribute] Offset: FFFFFFFF
  class UISlider : public ::VROSC::UISliderBase {
    public:
    // Writing base type padding for base size: 0xBC to desired offset: 0xC0
    char ___base_padding[0x4] = {};
    // Nested type: ::VROSC::UISlider::$GrabSliderRemotely$d__17
    class $GrabSliderRemotely$d__17;
    // Nested type: ::VROSC::UISlider::$GrabSlider$d__19
    class $GrabSlider$d__19;
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private VROSC.UISliderData _data
    // Size: 0x8
    // Offset: 0xC0
    ::VROSC::UISliderData* data;
    // Field size check
    static_assert(sizeof(::VROSC::UISliderData*) == 0x8);
    // private UnityEngine.RectTransform _sliderKnob
    // Size: 0x8
    // Offset: 0xC8
    ::UnityEngine::RectTransform* sliderKnob;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    // private System.Boolean _onlyShowKnobOnHover
    // Size: 0x1
    // Offset: 0xD0
    bool onlyShowKnobOnHover;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _showVisualPopout
    // Size: 0x1
    // Offset: 0xD1
    bool showVisualPopout;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: showVisualPopout and: grabbingDevice
    char __padding3[0x6] = {};
    // private VROSC.InputDevice _grabbingDevice
    // Size: 0x8
    // Offset: 0xD8
    ::VROSC::InputDevice* grabbingDevice;
    // Field size check
    static_assert(sizeof(::VROSC::InputDevice*) == 0x8);
    // private VROSC.TriggerButton _grabbingButton
    // Size: 0x4
    // Offset: 0xE0
    ::VROSC::TriggerButton grabbingButton;
    // Field size check
    static_assert(sizeof(::VROSC::TriggerButton) == 0x4);
    // private System.Boolean _remoteSliderActive
    // Size: 0x1
    // Offset: 0xE4
    bool remoteSliderActive;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: remoteSliderActive and: rectTransform
    char __padding6[0x3] = {};
    // private UnityEngine.RectTransform _rectTransform
    // Size: 0x8
    // Offset: 0xE8
    ::UnityEngine::RectTransform* rectTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    public:
    // Get instance field reference: private VROSC.UISliderData _data
    ::VROSC::UISliderData*& dyn__data();
    // Get instance field reference: private UnityEngine.RectTransform _sliderKnob
    ::UnityEngine::RectTransform*& dyn__sliderKnob();
    // Get instance field reference: private System.Boolean _onlyShowKnobOnHover
    bool& dyn__onlyShowKnobOnHover();
    // Get instance field reference: private System.Boolean _showVisualPopout
    bool& dyn__showVisualPopout();
    // Get instance field reference: private VROSC.InputDevice _grabbingDevice
    ::VROSC::InputDevice*& dyn__grabbingDevice();
    // Get instance field reference: private VROSC.TriggerButton _grabbingButton
    ::VROSC::TriggerButton& dyn__grabbingButton();
    // Get instance field reference: private System.Boolean _remoteSliderActive
    bool& dyn__remoteSliderActive();
    // Get instance field reference: private UnityEngine.RectTransform _rectTransform
    ::UnityEngine::RectTransform*& dyn__rectTransform();
    // public VROSC.UISliderData get_Data()
    // Offset: 0x13A260C
    ::VROSC::UISliderData* get_Data();
    // private System.Void HoverChanged(System.Boolean hovering)
    // Offset: 0x13A28A4
    void HoverChanged(bool hovering);
    // private System.Void StopGrabSlider(VROSC.InputDevice device, VROSC.TriggerButton button)
    // Offset: 0x13A2B50
    void StopGrabSlider(::VROSC::InputDevice* device, ::VROSC::TriggerButton button);
    // private System.Void ButtonWasPressed(VROSC.ClickData clickData)
    // Offset: 0x13A2E94
    void ButtonWasPressed(::VROSC::ClickData* clickData);
    // private System.Collections.IEnumerator GrabSliderRemotely(VROSC.InputDevice device, VROSC.TriggerButton grabbingButton)
    // Offset: 0x13A2FD0
    ::System::Collections::IEnumerator* GrabSliderRemotely(::VROSC::InputDevice* device, ::VROSC::TriggerButton grabbingButton);
    // private System.Void StopGrabRemotely(VROSC.InputDevice device)
    // Offset: 0x13A2DFC
    void StopGrabRemotely(::VROSC::InputDevice* device);
    // private System.Collections.IEnumerator GrabSlider(VROSC.InputDevice device, VROSC.TriggerButton grabbingButton, System.Boolean pointing)
    // Offset: 0x13A3050
    ::System::Collections::IEnumerator* GrabSlider(::VROSC::InputDevice* device, ::VROSC::TriggerButton grabbingButton, bool pointing);
    // private System.Single GetValueByPosition(UnityEngine.Vector3 worldPosition)
    // Offset: 0x13A30EC
    float GetValueByPosition(::UnityEngine::Vector3 worldPosition);
    // private System.Void GetRectTransform()
    // Offset: 0x13A3298
    void GetRectTransform();
    // public System.Single GetValueInRange(System.Single normalizedValue)
    // Offset: 0x13A365C
    float GetValueInRange(float normalizedValue);
    // public System.Single GetNormalizedValue(System.Single valueInRange)
    // Offset: 0x13A368C
    float GetNormalizedValue(float valueInRange);
    // public System.Void .ctor()
    // Offset: 0x13A36BC
    // Implemented from: VROSC.UISliderBase
    // Base method: System.Void UISliderBase::.ctor()
    // Base method: System.Void UIInteractable::.ctor()
    // Base method: System.Void Clickable::.ctor()
    // Base method: System.Void Interactable::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UISlider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::UISlider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UISlider*, creationType>()));
    }
    // protected override System.Void Awake()
    // Offset: 0x13A2614
    // Implemented from: VROSC.UISliderBase
    // Base method: System.Void UISliderBase::Awake()
    void Awake();
    // protected override System.Void OnDestroy()
    // Offset: 0x13A275C
    // Implemented from: VROSC.UISliderBase
    // Base method: System.Void UISliderBase::OnDestroy()
    void OnDestroy();
    // protected override System.Void OnEnable()
    // Offset: 0x13A28F4
    // Implemented from: VROSC.UISliderBase
    // Base method: System.Void UISliderBase::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0x13A2C1C
    // Implemented from: VROSC.UISliderBase
    // Base method: System.Void UISliderBase::OnDisable()
    void OnDisable();
    // protected override UnityEngine.Vector2 GetSize()
    // Offset: 0x13A31A4
    // Implemented from: VROSC.UISliderBase
    // Base method: UnityEngine.Vector2 UISliderBase::GetSize()
    ::UnityEngine::Vector2 GetSize();
    // public override System.Void SetValue(System.Single value, System.Boolean force, System.Boolean useCallback)
    // Offset: 0x13A3338
    // Implemented from: VROSC.UISliderBase
    // Base method: System.Void UISliderBase::SetValue(System.Single value, System.Boolean force, System.Boolean useCallback)
    void SetValue(float value, bool force, bool useCallback);
  }; // VROSC.UISlider
  #pragma pack(pop)
  static check_size<sizeof(UISlider), 232 + sizeof(::UnityEngine::RectTransform*)> __VROSC_UISliderSizeCheck;
  static_assert(sizeof(UISlider) == 0xF0);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::UISlider::get_Data
// Il2CppName: get_Data
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::UISliderData* (VROSC::UISlider::*)()>(&VROSC::UISlider::get_Data)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISlider*), "get_Data", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UISlider::HoverChanged
// Il2CppName: HoverChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UISlider::*)(bool)>(&VROSC::UISlider::HoverChanged)> {
  static const MethodInfo* get() {
    static auto* hovering = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISlider*), "HoverChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hovering});
  }
};
// Writing MetadataGetter for method: VROSC::UISlider::StopGrabSlider
// Il2CppName: StopGrabSlider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UISlider::*)(::VROSC::InputDevice*, ::VROSC::TriggerButton)>(&VROSC::UISlider::StopGrabSlider)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* button = &::il2cpp_utils::GetClassFromName("VROSC", "TriggerButton")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISlider*), "StopGrabSlider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, button});
  }
};
// Writing MetadataGetter for method: VROSC::UISlider::ButtonWasPressed
// Il2CppName: ButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UISlider::*)(::VROSC::ClickData*)>(&VROSC::UISlider::ButtonWasPressed)> {
  static const MethodInfo* get() {
    static auto* clickData = &::il2cpp_utils::GetClassFromName("VROSC", "ClickData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISlider*), "ButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clickData});
  }
};
// Writing MetadataGetter for method: VROSC::UISlider::GrabSliderRemotely
// Il2CppName: GrabSliderRemotely
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (VROSC::UISlider::*)(::VROSC::InputDevice*, ::VROSC::TriggerButton)>(&VROSC::UISlider::GrabSliderRemotely)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* grabbingButton = &::il2cpp_utils::GetClassFromName("VROSC", "TriggerButton")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISlider*), "GrabSliderRemotely", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, grabbingButton});
  }
};
// Writing MetadataGetter for method: VROSC::UISlider::StopGrabRemotely
// Il2CppName: StopGrabRemotely
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UISlider::*)(::VROSC::InputDevice*)>(&VROSC::UISlider::StopGrabRemotely)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISlider*), "StopGrabRemotely", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: VROSC::UISlider::GrabSlider
// Il2CppName: GrabSlider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (VROSC::UISlider::*)(::VROSC::InputDevice*, ::VROSC::TriggerButton, bool)>(&VROSC::UISlider::GrabSlider)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* grabbingButton = &::il2cpp_utils::GetClassFromName("VROSC", "TriggerButton")->byval_arg;
    static auto* pointing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISlider*), "GrabSlider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, grabbingButton, pointing});
  }
};
// Writing MetadataGetter for method: VROSC::UISlider::GetValueByPosition
// Il2CppName: GetValueByPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (VROSC::UISlider::*)(::UnityEngine::Vector3)>(&VROSC::UISlider::GetValueByPosition)> {
  static const MethodInfo* get() {
    static auto* worldPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISlider*), "GetValueByPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{worldPosition});
  }
};
// Writing MetadataGetter for method: VROSC::UISlider::GetRectTransform
// Il2CppName: GetRectTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UISlider::*)()>(&VROSC::UISlider::GetRectTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISlider*), "GetRectTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UISlider::GetValueInRange
// Il2CppName: GetValueInRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (VROSC::UISlider::*)(float)>(&VROSC::UISlider::GetValueInRange)> {
  static const MethodInfo* get() {
    static auto* normalizedValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISlider*), "GetValueInRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{normalizedValue});
  }
};
// Writing MetadataGetter for method: VROSC::UISlider::GetNormalizedValue
// Il2CppName: GetNormalizedValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (VROSC::UISlider::*)(float)>(&VROSC::UISlider::GetNormalizedValue)> {
  static const MethodInfo* get() {
    static auto* valueInRange = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISlider*), "GetNormalizedValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{valueInRange});
  }
};
// Writing MetadataGetter for method: VROSC::UISlider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::UISlider::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UISlider::*)()>(&VROSC::UISlider::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISlider*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UISlider::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UISlider::*)()>(&VROSC::UISlider::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISlider*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UISlider::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UISlider::*)()>(&VROSC::UISlider::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISlider*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UISlider::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UISlider::*)()>(&VROSC::UISlider::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISlider*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UISlider::GetSize
// Il2CppName: GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (VROSC::UISlider::*)()>(&VROSC::UISlider::GetSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISlider*), "GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UISlider::SetValue
// Il2CppName: SetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UISlider::*)(float, bool, bool)>(&VROSC::UISlider::SetValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* force = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* useCallback = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISlider*), "SetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, force, useCallback});
  }
};
