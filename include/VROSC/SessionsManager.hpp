// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.Error
#include "VROSC/Error.hpp"
// Including type: VROSC.Session
#include "VROSC/Session.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: UserDataControllers
  class UserDataControllers;
  // Forward declaring type: SaveLoadManager
  class SaveLoadManager;
  // Forward declaring type: OldSavesHandler
  class OldSavesHandler;
  // Forward declaring type: LocalSessionsDataController
  class LocalSessionsDataController;
  // Forward declaring type: CloudSessionsDataController
  class CloudSessionsDataController;
  // Forward declaring type: CommunitySessionsDataController
  class CommunitySessionsDataController;
  // Forward declaring type: SessionUIData
  class SessionUIData;
  // Forward declaring type: SessionsDataController
  class SessionsDataController;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Action`3<T1, T2, T3>
  template<typename T1, typename T2, typename T3>
  class Action_3;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AudioClip
  class AudioClip;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: SessionsManager
  class SessionsManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::SessionsManager);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::SessionsManager*, "VROSC", "SessionsManager");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.SessionsManager
  // [TokenAttribute] Offset: FFFFFFFF
  class SessionsManager : public ::Il2CppObject {
    public:
    // Nested type: ::VROSC::SessionsManager::$$c__DisplayClass52_0
    class $$c__DisplayClass52_0;
    // Nested type: ::VROSC::SessionsManager::$$c__DisplayClass53_0
    class $$c__DisplayClass53_0;
    // Nested type: ::VROSC::SessionsManager::$$c__DisplayClass54_0
    class $$c__DisplayClass54_0;
    // Nested type: ::VROSC::SessionsManager::$$c__DisplayClass57_0
    class $$c__DisplayClass57_0;
    // Nested type: ::VROSC::SessionsManager::$$c__DisplayClass58_0
    class $$c__DisplayClass58_0;
    // Nested type: ::VROSC::SessionsManager::$$c__DisplayClass59_0
    class $$c__DisplayClass59_0;
    // Nested type: ::VROSC::SessionsManager::$$c__DisplayClass59_1
    class $$c__DisplayClass59_1;
    // Nested type: ::VROSC::SessionsManager::$$c__DisplayClass65_0
    class $$c__DisplayClass65_0;
    // Nested type: ::VROSC::SessionsManager::$$c__DisplayClass65_1
    class $$c__DisplayClass65_1;
    // Nested type: ::VROSC::SessionsManager::$$c__DisplayClass66_0
    class $$c__DisplayClass66_0;
    // Nested type: ::VROSC::SessionsManager::$$c__DisplayClass66_1
    class $$c__DisplayClass66_1;
    // Nested type: ::VROSC::SessionsManager::$$c__DisplayClass67_0
    class $$c__DisplayClass67_0;
    // Nested type: ::VROSC::SessionsManager::$$c__DisplayClass67_1
    class $$c__DisplayClass67_1;
    // Nested type: ::VROSC::SessionsManager::$$c__DisplayClass68_0
    class $$c__DisplayClass68_0;
    // Nested type: ::VROSC::SessionsManager::$$c__DisplayClass68_1
    class $$c__DisplayClass68_1;
    // Nested type: ::VROSC::SessionsManager::$$c__DisplayClass69_0
    class $$c__DisplayClass69_0;
    // Nested type: ::VROSC::SessionsManager::$$c__DisplayClass70_0
    class $$c__DisplayClass70_0;
    // Nested type: ::VROSC::SessionsManager::$$c__DisplayClass73_0
    class $$c__DisplayClass73_0;
    // Nested type: ::VROSC::SessionsManager::$$c__DisplayClass78_0
    class $$c__DisplayClass78_0;
    public:
    // private VROSC.UserDataControllers _userDataControllers
    // Size: 0x8
    // Offset: 0x10
    ::VROSC::UserDataControllers* userDataControllers;
    // Field size check
    static_assert(sizeof(::VROSC::UserDataControllers*) == 0x8);
    // private VROSC.SaveLoadManager _saveLoadManager
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::SaveLoadManager* saveLoadManager;
    // Field size check
    static_assert(sizeof(::VROSC::SaveLoadManager*) == 0x8);
    // private VROSC.OldSavesHandler _oldSavesHandler
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::OldSavesHandler* oldSavesHandler;
    // Field size check
    static_assert(sizeof(::VROSC::OldSavesHandler*) == 0x8);
    // private VROSC.LocalSessionsDataController _localSessionsDataController
    // Size: 0x8
    // Offset: 0x28
    ::VROSC::LocalSessionsDataController* localSessionsDataController;
    // Field size check
    static_assert(sizeof(::VROSC::LocalSessionsDataController*) == 0x8);
    // private VROSC.CloudSessionsDataController _cloudSessionsDataController
    // Size: 0x8
    // Offset: 0x30
    ::VROSC::CloudSessionsDataController* cloudSessionsDataController;
    // Field size check
    static_assert(sizeof(::VROSC::CloudSessionsDataController*) == 0x8);
    // private VROSC.CommunitySessionsDataController _communitySessionsDataController
    // Size: 0x8
    // Offset: 0x38
    ::VROSC::CommunitySessionsDataController* communitySessionsDataController;
    // Field size check
    static_assert(sizeof(::VROSC::CommunitySessionsDataController*) == 0x8);
    // private System.String _loadedSessionId
    // Size: 0x8
    // Offset: 0x40
    ::StringW loadedSessionId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean <IsSessionDataValidated>k__BackingField
    // Size: 0x1
    // Offset: 0x48
    bool IsSessionDataValidated;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IsSessionDataValidated and: CurrentSessionDisplayName
    char __padding7[0x7] = {};
    // private System.String <CurrentSessionDisplayName>k__BackingField
    // Size: 0x8
    // Offset: 0x50
    ::StringW CurrentSessionDisplayName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get static field: static public System.Action OnSessionsValidated
    static ::System::Action* _get_OnSessionsValidated();
    // Set static field: static public System.Action OnSessionsValidated
    static void _set_OnSessionsValidated(::System::Action* value);
    // Get static field: static public System.Action`1<System.Collections.Generic.List`1<VROSC.SessionUIData>> OnLocalSessionsDataLoadSuccess
    static ::System::Action_1<::System::Collections::Generic::List_1<::VROSC::SessionUIData*>*>* _get_OnLocalSessionsDataLoadSuccess();
    // Set static field: static public System.Action`1<System.Collections.Generic.List`1<VROSC.SessionUIData>> OnLocalSessionsDataLoadSuccess
    static void _set_OnLocalSessionsDataLoadSuccess(::System::Action_1<::System::Collections::Generic::List_1<::VROSC::SessionUIData*>*>* value);
    // Get static field: static public System.Action`1<System.Collections.Generic.List`1<VROSC.SessionUIData>> OnCloudSessionsDataLoadSuccess
    static ::System::Action_1<::System::Collections::Generic::List_1<::VROSC::SessionUIData*>*>* _get_OnCloudSessionsDataLoadSuccess();
    // Set static field: static public System.Action`1<System.Collections.Generic.List`1<VROSC.SessionUIData>> OnCloudSessionsDataLoadSuccess
    static void _set_OnCloudSessionsDataLoadSuccess(::System::Action_1<::System::Collections::Generic::List_1<::VROSC::SessionUIData*>*>* value);
    // Get static field: static public System.Action`1<System.Collections.Generic.List`1<VROSC.SessionUIData>> OnCommunitySessionsDataLoadSuccess
    static ::System::Action_1<::System::Collections::Generic::List_1<::VROSC::SessionUIData*>*>* _get_OnCommunitySessionsDataLoadSuccess();
    // Set static field: static public System.Action`1<System.Collections.Generic.List`1<VROSC.SessionUIData>> OnCommunitySessionsDataLoadSuccess
    static void _set_OnCommunitySessionsDataLoadSuccess(::System::Action_1<::System::Collections::Generic::List_1<::VROSC::SessionUIData*>*>* value);
    // Get static field: static public System.Action`1<VROSC.Error> OnLocalSessionsDataLoadFailure
    static ::System::Action_1<::VROSC::Error>* _get_OnLocalSessionsDataLoadFailure();
    // Set static field: static public System.Action`1<VROSC.Error> OnLocalSessionsDataLoadFailure
    static void _set_OnLocalSessionsDataLoadFailure(::System::Action_1<::VROSC::Error>* value);
    // Get static field: static public System.Action`1<VROSC.Error> OnCloudSessionsDataLoadFailure
    static ::System::Action_1<::VROSC::Error>* _get_OnCloudSessionsDataLoadFailure();
    // Set static field: static public System.Action`1<VROSC.Error> OnCloudSessionsDataLoadFailure
    static void _set_OnCloudSessionsDataLoadFailure(::System::Action_1<::VROSC::Error>* value);
    // Get static field: static public System.Action`1<VROSC.Error> OnCommunitySessionsDataLoadFailure
    static ::System::Action_1<::VROSC::Error>* _get_OnCommunitySessionsDataLoadFailure();
    // Set static field: static public System.Action`1<VROSC.Error> OnCommunitySessionsDataLoadFailure
    static void _set_OnCommunitySessionsDataLoadFailure(::System::Action_1<::VROSC::Error>* value);
    // Get static field: static public System.Action`2<System.String,System.Boolean> OnLoadSessionSuccess
    static ::System::Action_2<::StringW, bool>* _get_OnLoadSessionSuccess();
    // Set static field: static public System.Action`2<System.String,System.Boolean> OnLoadSessionSuccess
    static void _set_OnLoadSessionSuccess(::System::Action_2<::StringW, bool>* value);
    // Get static field: static public System.Action`3<System.String,System.Boolean,VROSC.Error> OnLoadSessionFailure
    static ::System::Action_3<::StringW, bool, ::VROSC::Error>* _get_OnLoadSessionFailure();
    // Set static field: static public System.Action`3<System.String,System.Boolean,VROSC.Error> OnLoadSessionFailure
    static void _set_OnLoadSessionFailure(::System::Action_3<::StringW, bool, ::VROSC::Error>* value);
    // Get static field: static public System.Action`1<System.String> OnSaveSessionSuccess
    static ::System::Action_1<::StringW>* _get_OnSaveSessionSuccess();
    // Set static field: static public System.Action`1<System.String> OnSaveSessionSuccess
    static void _set_OnSaveSessionSuccess(::System::Action_1<::StringW>* value);
    // Get static field: static public System.Action`2<System.String,VROSC.Error> OnSaveSessionFailure
    static ::System::Action_2<::StringW, ::VROSC::Error>* _get_OnSaveSessionFailure();
    // Set static field: static public System.Action`2<System.String,VROSC.Error> OnSaveSessionFailure
    static void _set_OnSaveSessionFailure(::System::Action_2<::StringW, ::VROSC::Error>* value);
    // Get static field: static public System.Action`1<System.String> OnDeleteSessionSuccess
    static ::System::Action_1<::StringW>* _get_OnDeleteSessionSuccess();
    // Set static field: static public System.Action`1<System.String> OnDeleteSessionSuccess
    static void _set_OnDeleteSessionSuccess(::System::Action_1<::StringW>* value);
    // Get static field: static public System.Action`2<System.String,VROSC.Error> OnDeleteSessionFailure
    static ::System::Action_2<::StringW, ::VROSC::Error>* _get_OnDeleteSessionFailure();
    // Set static field: static public System.Action`2<System.String,VROSC.Error> OnDeleteSessionFailure
    static void _set_OnDeleteSessionFailure(::System::Action_2<::StringW, ::VROSC::Error>* value);
    // Get static field: static public System.Action`1<System.String> OnUpdateSessionDataSuccess
    static ::System::Action_1<::StringW>* _get_OnUpdateSessionDataSuccess();
    // Set static field: static public System.Action`1<System.String> OnUpdateSessionDataSuccess
    static void _set_OnUpdateSessionDataSuccess(::System::Action_1<::StringW>* value);
    // Get static field: static public System.Action`2<System.String,VROSC.Error> OnUpdateSessionDataFailure
    static ::System::Action_2<::StringW, ::VROSC::Error>* _get_OnUpdateSessionDataFailure();
    // Set static field: static public System.Action`2<System.String,VROSC.Error> OnUpdateSessionDataFailure
    static void _set_OnUpdateSessionDataFailure(::System::Action_2<::StringW, ::VROSC::Error>* value);
    // Get static field: static public System.Action`3<System.String,UnityEngine.AudioClip,System.Single> OnLoadPreviewSuccess
    static ::System::Action_3<::StringW, ::UnityEngine::AudioClip*, float>* _get_OnLoadPreviewSuccess();
    // Set static field: static public System.Action`3<System.String,UnityEngine.AudioClip,System.Single> OnLoadPreviewSuccess
    static void _set_OnLoadPreviewSuccess(::System::Action_3<::StringW, ::UnityEngine::AudioClip*, float>* value);
    // Get static field: static public System.Action`2<System.String,VROSC.Error> OnLoadPreviewFailure
    static ::System::Action_2<::StringW, ::VROSC::Error>* _get_OnLoadPreviewFailure();
    // Set static field: static public System.Action`2<System.String,VROSC.Error> OnLoadPreviewFailure
    static void _set_OnLoadPreviewFailure(::System::Action_2<::StringW, ::VROSC::Error>* value);
    // Get static field: static public System.Action`2<System.String,System.Single> OnSaveLoadSessionDataTransferProgress
    static ::System::Action_2<::StringW, float>* _get_OnSaveLoadSessionDataTransferProgress();
    // Set static field: static public System.Action`2<System.String,System.Single> OnSaveLoadSessionDataTransferProgress
    static void _set_OnSaveLoadSessionDataTransferProgress(::System::Action_2<::StringW, float>* value);
    // Get static field: static public System.Action`2<System.String,System.Single> OnSavePreviewProgress
    static ::System::Action_2<::StringW, float>* _get_OnSavePreviewProgress();
    // Set static field: static public System.Action`2<System.String,System.Single> OnSavePreviewProgress
    static void _set_OnSavePreviewProgress(::System::Action_2<::StringW, float>* value);
    // Get static field: static public System.Action`2<System.String,System.Single> OnLoadPreviewProgress
    static ::System::Action_2<::StringW, float>* _get_OnLoadPreviewProgress();
    // Set static field: static public System.Action`2<System.String,System.Single> OnLoadPreviewProgress
    static void _set_OnLoadPreviewProgress(::System::Action_2<::StringW, float>* value);
    // Get static field: static public System.Action OnFavoritesChanged
    static ::System::Action* _get_OnFavoritesChanged();
    // Set static field: static public System.Action OnFavoritesChanged
    static void _set_OnFavoritesChanged(::System::Action* value);
    // Get instance field reference: private VROSC.UserDataControllers _userDataControllers
    [[deprecated]] ::VROSC::UserDataControllers*& dyn__userDataControllers();
    // Get instance field reference: private VROSC.SaveLoadManager _saveLoadManager
    [[deprecated]] ::VROSC::SaveLoadManager*& dyn__saveLoadManager();
    // Get instance field reference: private VROSC.OldSavesHandler _oldSavesHandler
    [[deprecated]] ::VROSC::OldSavesHandler*& dyn__oldSavesHandler();
    // Get instance field reference: private VROSC.LocalSessionsDataController _localSessionsDataController
    [[deprecated]] ::VROSC::LocalSessionsDataController*& dyn__localSessionsDataController();
    // Get instance field reference: private VROSC.CloudSessionsDataController _cloudSessionsDataController
    [[deprecated]] ::VROSC::CloudSessionsDataController*& dyn__cloudSessionsDataController();
    // Get instance field reference: private VROSC.CommunitySessionsDataController _communitySessionsDataController
    [[deprecated]] ::VROSC::CommunitySessionsDataController*& dyn__communitySessionsDataController();
    // Get instance field reference: private System.String _loadedSessionId
    [[deprecated]] ::StringW& dyn__loadedSessionId();
    // Get instance field reference: private System.Boolean <IsSessionDataValidated>k__BackingField
    [[deprecated]] bool& dyn_$IsSessionDataValidated$k__BackingField();
    // Get instance field reference: private System.String <CurrentSessionDisplayName>k__BackingField
    [[deprecated]] ::StringW& dyn_$CurrentSessionDisplayName$k__BackingField();
    // public System.Boolean get_IsSessionDataValidated()
    // Offset: 0x1993594
    bool get_IsSessionDataValidated();
    // private System.Void set_IsSessionDataValidated(System.Boolean value)
    // Offset: 0x199359C
    void set_IsSessionDataValidated(bool value);
    // public System.Boolean get_HasLoadedSession()
    // Offset: 0x198F8EC
    bool get_HasLoadedSession();
    // public System.Boolean get_IsLoadedSessionMine()
    // Offset: 0x198F910
    bool get_IsLoadedSessionMine();
    // public System.String get_CurrentSessionDisplayName()
    // Offset: 0x19935A8
    ::StringW get_CurrentSessionDisplayName();
    // private System.Void set_CurrentSessionDisplayName(System.String value)
    // Offset: 0x19935B0
    void set_CurrentSessionDisplayName(::StringW value);
    // public System.Boolean get_AreCloudSessionsLoaded()
    // Offset: 0x19935B8
    bool get_AreCloudSessionsLoaded();
    // public System.Boolean get_AreCommunitySessionsLoaded()
    // Offset: 0x19935D4
    bool get_AreCommunitySessionsLoaded();
    // public System.Void .ctor(VROSC.UserDataControllers userDataControllers, VROSC.SaveLoadManager saveLoadManager)
    // Offset: 0x19935F0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SessionsManager* New_ctor(::VROSC::UserDataControllers* userDataControllers, ::VROSC::SaveLoadManager* saveLoadManager) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SessionsManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SessionsManager*, creationType>(userDataControllers, saveLoadManager)));
    }
    // public System.Void ValidateSessionsFiles()
    // Offset: 0x1993B94
    void ValidateSessionsFiles();
    // public VROSC.SessionUIData GetSessionUIData(System.String sessionId)
    // Offset: 0x1990C50
    ::VROSC::SessionUIData* GetSessionUIData(::StringW sessionId);
    // public VROSC.SessionUIData GetLoadedSessionUIData()
    // Offset: 0x19932D8
    ::VROSC::SessionUIData* GetLoadedSessionUIData();
    // public System.Collections.Generic.List`1<VROSC.SessionUIData> GetLocalSessionsUIData()
    // Offset: 0x1993F30
    ::System::Collections::Generic::List_1<::VROSC::SessionUIData*>* GetLocalSessionsUIData();
    // public System.Collections.Generic.List`1<VROSC.SessionUIData> GetCloudSessionsUIData()
    // Offset: 0x1993F54
    ::System::Collections::Generic::List_1<::VROSC::SessionUIData*>* GetCloudSessionsUIData();
    // public System.Collections.Generic.List`1<VROSC.SessionUIData> GetCommunitySessionsUIData(System.Boolean onlyMine)
    // Offset: 0x1993F78
    ::System::Collections::Generic::List_1<::VROSC::SessionUIData*>* GetCommunitySessionsUIData(bool onlyMine);
    // public System.Void LoadLocalSessions(System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x19941BC
    void LoadLocalSessions(::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public System.Void LoadCloudSessions(System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x19942EC
    void LoadCloudSessions(::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public System.Void LoadCommunitySessions(System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x199441C
    void LoadCommunitySessions(::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public System.Void LoadDefaultSession()
    // Offset: 0x1992620
    void LoadDefaultSession();
    // public System.Void LoadSession(System.String sessionId)
    // Offset: 0x1992B64
    void LoadSession(::StringW sessionId);
    // public System.Void SaveSession(System.String sessionId, System.String displayName, System.String description, System.String[] tags)
    // Offset: 0x19901EC
    void SaveSession(::StringW sessionId, ::StringW displayName, ::StringW description, ::ArrayW<::StringW> tags);
    // public System.Void SaveSessionAs(System.String displayName, System.String description, System.String[] tags, System.Boolean isInCloud, System.Boolean isCommunity)
    // Offset: 0x1990534
    void SaveSessionAs(::StringW displayName, ::StringW description, ::ArrayW<::StringW> tags, bool isInCloud, bool isCommunity);
    // public System.Void DeleteSession(System.String sessionId)
    // Offset: 0x1993334
    void DeleteSession(::StringW sessionId);
    // public System.Void UpdateSavedSessionsVersion()
    // Offset: 0x1994614
    void UpdateSavedSessionsVersion();
    // public System.Void GetSessionPreview(System.String sessionId)
    // Offset: 0x198C2C4
    void GetSessionPreview(::StringW sessionId);
    // public System.Void SetPreview(System.String sessionId, System.Boolean hasPreview, System.Single previewMultiplier, VROSC.Session/VROSC.PreviewSource previewSource)
    // Offset: 0x1994660
    void SetPreview(::StringW sessionId, bool hasPreview, float previewMultiplier, ::VROSC::Session::PreviewSource previewSource);
    // public System.Boolean IsSessionMine(System.String sessionId)
    // Offset: 0x19862D8
    bool IsSessionMine(::StringW sessionId);
    // public System.Boolean HasSessionWithDisplayName(System.String displayName, System.Boolean isCommunity)
    // Offset: 0x199454C
    bool HasSessionWithDisplayName(::StringW displayName, bool isCommunity);
    // public System.Void AddSessionUpVote(System.String sessionId, System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x19866A8
    void AddSessionUpVote(::StringW sessionId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public System.Void RemoveSessionUpVote(System.String sessionId, System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x19867FC
    void RemoveSessionUpVote(::StringW sessionId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public System.Void AddSessionFavorite(System.String sessionId, System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x1986B20
    void AddSessionFavorite(::StringW sessionId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public System.Void RemoveSessionFavorite(System.String sessionId, System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x1986C74
    void RemoveSessionFavorite(::StringW sessionId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public System.Void AddSessionDownload(System.String sessionId, System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x19946C4
    void AddSessionDownload(::StringW sessionId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public System.Void AddSessionPreviewPlay(System.String sessionId, System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x198C5D0
    void AddSessionPreviewPlay(::StringW sessionId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public System.Void AddFavoriteSessionToCommunityList(VROSC.Session session)
    // Offset: 0x1994818
    void AddFavoriteSessionToCommunityList(::VROSC::Session* session);
    // public System.Void RemoveFavoriteSessionFromCommunityList(System.String sessionId)
    // Offset: 0x1994834
    void RemoveFavoriteSessionFromCommunityList(::StringW sessionId);
    // private System.Void LoadSessionDataSuccess(System.String sessionId, System.Boolean isDefaultSession)
    // Offset: 0x1994850
    void LoadSessionDataSuccess(::StringW sessionId, bool isDefaultSession);
    // private System.Void LoadSessionDataFailure(System.String sessionId, System.Boolean isDefaultSession, VROSC.Error error)
    // Offset: 0x1994B78
    void LoadSessionDataFailure(::StringW sessionId, bool isDefaultSession, ::VROSC::Error error);
    // private System.Void SessionDownloadSuccess(System.String sessionId)
    // Offset: 0x1994DC4
    void SessionDownloadSuccess(::StringW sessionId);
    // private System.Void SessionDownloadFailure(System.String sessionId, VROSC.Error error)
    // Offset: 0x1994FD4
    void SessionDownloadFailure(::StringW sessionId, ::VROSC::Error error);
    // private System.Void SessionDownloadProgress(System.String sessionId, System.Single progress)
    // Offset: 0x19951E4
    void SessionDownloadProgress(::StringW sessionId, float progress);
    // private System.Void SaveSessionSuccess(System.String sessionId)
    // Offset: 0x1995274
    void SaveSessionSuccess(::StringW sessionId);
    // private System.Void SaveSessionFailure(System.String sessionId, VROSC.Error error)
    // Offset: 0x19957F8
    void SaveSessionFailure(::StringW sessionId, ::VROSC::Error error);
    // private System.Void SessionUploadSuccess(System.String sessionId)
    // Offset: 0x1995A58
    void SessionUploadSuccess(::StringW sessionId);
    // private System.Void SessionUploadFailure(System.String sessionId, VROSC.Error error)
    // Offset: 0x1995CCC
    void SessionUploadFailure(::StringW sessionId, ::VROSC::Error error);
    // private System.Void SessionUploadProgress(System.String sessionId, System.Single progress)
    // Offset: 0x1995F40
    void SessionUploadProgress(::StringW sessionId, float progress);
    // private System.Void SessionPreviewUploadProgress(System.String sessionId, System.Single progress)
    // Offset: 0x1995FD0
    void SessionPreviewUploadProgress(::StringW sessionId, float progress);
    // private System.Void DeleteSessionSuccess(System.String sessionId)
    // Offset: 0x1996060
    void DeleteSessionSuccess(::StringW sessionId);
    // private System.Void DeleteSessionFailure(System.String sessionId, VROSC.Error error)
    // Offset: 0x199626C
    void DeleteSessionFailure(::StringW sessionId, ::VROSC::Error error);
    // private System.Void PreviewLoadSuccess(System.String sessionId, UnityEngine.AudioClip audioClip)
    // Offset: 0x1996454
    void PreviewLoadSuccess(::StringW sessionId, ::UnityEngine::AudioClip* audioClip);
    // private System.Void PreviewLoadFailure(System.String sessionId, VROSC.Error error)
    // Offset: 0x1996554
    void PreviewLoadFailure(::StringW sessionId, ::VROSC::Error error);
    // private System.Void PreviewDownloadProgress(System.String sessionId, System.Single progress)
    // Offset: 0x19966A4
    void PreviewDownloadProgress(::StringW sessionId, float progress);
    // private VROSC.SessionsDataController GetSessionDataController(System.String sessionId)
    // Offset: 0x1993C84
    ::VROSC::SessionsDataController* GetSessionDataController(::StringW sessionId);
    // private System.Void <ValidateSessionsFiles>b__46_0()
    // Offset: 0x1996734
    void $ValidateSessionsFiles$b__46_0();
    // private System.Void <ValidateSessionsFiles>b__46_2()
    // Offset: 0x1996828
    void $ValidateSessionsFiles$b__46_2();
    // private System.Void <ValidateSessionsFiles>b__46_3(VROSC.Error error)
    // Offset: 0x1996894
    void $ValidateSessionsFiles$b__46_3(::VROSC::Error error);
    // private System.Void <ValidateSessionsFiles>b__46_1(VROSC.Error error)
    // Offset: 0x1996984
    void $ValidateSessionsFiles$b__46_1(::VROSC::Error error);
    // protected override System.Void Finalize()
    // Offset: 0x1993904
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // VROSC.SessionsManager
  #pragma pack(pop)
  static check_size<sizeof(SessionsManager), 80 + sizeof(::StringW)> __VROSC_SessionsManagerSizeCheck;
  static_assert(sizeof(SessionsManager) == 0x58);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::SessionsManager::get_IsSessionDataValidated
// Il2CppName: get_IsSessionDataValidated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::SessionsManager::*)()>(&VROSC::SessionsManager::get_IsSessionDataValidated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "get_IsSessionDataValidated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::set_IsSessionDataValidated
// Il2CppName: set_IsSessionDataValidated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(bool)>(&VROSC::SessionsManager::set_IsSessionDataValidated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "set_IsSessionDataValidated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::get_HasLoadedSession
// Il2CppName: get_HasLoadedSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::SessionsManager::*)()>(&VROSC::SessionsManager::get_HasLoadedSession)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "get_HasLoadedSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::get_IsLoadedSessionMine
// Il2CppName: get_IsLoadedSessionMine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::SessionsManager::*)()>(&VROSC::SessionsManager::get_IsLoadedSessionMine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "get_IsLoadedSessionMine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::get_CurrentSessionDisplayName
// Il2CppName: get_CurrentSessionDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::SessionsManager::*)()>(&VROSC::SessionsManager::get_CurrentSessionDisplayName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "get_CurrentSessionDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::set_CurrentSessionDisplayName
// Il2CppName: set_CurrentSessionDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW)>(&VROSC::SessionsManager::set_CurrentSessionDisplayName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "set_CurrentSessionDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::get_AreCloudSessionsLoaded
// Il2CppName: get_AreCloudSessionsLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::SessionsManager::*)()>(&VROSC::SessionsManager::get_AreCloudSessionsLoaded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "get_AreCloudSessionsLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::get_AreCommunitySessionsLoaded
// Il2CppName: get_AreCommunitySessionsLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::SessionsManager::*)()>(&VROSC::SessionsManager::get_AreCommunitySessionsLoaded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "get_AreCommunitySessionsLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::SessionsManager::ValidateSessionsFiles
// Il2CppName: ValidateSessionsFiles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)()>(&VROSC::SessionsManager::ValidateSessionsFiles)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "ValidateSessionsFiles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::GetSessionUIData
// Il2CppName: GetSessionUIData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::SessionUIData* (VROSC::SessionsManager::*)(::StringW)>(&VROSC::SessionsManager::GetSessionUIData)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "GetSessionUIData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::GetLoadedSessionUIData
// Il2CppName: GetLoadedSessionUIData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::SessionUIData* (VROSC::SessionsManager::*)()>(&VROSC::SessionsManager::GetLoadedSessionUIData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "GetLoadedSessionUIData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::GetLocalSessionsUIData
// Il2CppName: GetLocalSessionsUIData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::VROSC::SessionUIData*>* (VROSC::SessionsManager::*)()>(&VROSC::SessionsManager::GetLocalSessionsUIData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "GetLocalSessionsUIData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::GetCloudSessionsUIData
// Il2CppName: GetCloudSessionsUIData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::VROSC::SessionUIData*>* (VROSC::SessionsManager::*)()>(&VROSC::SessionsManager::GetCloudSessionsUIData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "GetCloudSessionsUIData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::GetCommunitySessionsUIData
// Il2CppName: GetCommunitySessionsUIData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::VROSC::SessionUIData*>* (VROSC::SessionsManager::*)(bool)>(&VROSC::SessionsManager::GetCommunitySessionsUIData)> {
  static const MethodInfo* get() {
    static auto* onlyMine = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "GetCommunitySessionsUIData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{onlyMine});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::LoadLocalSessions
// Il2CppName: LoadLocalSessions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::SessionsManager::LoadLocalSessions)> {
  static const MethodInfo* get() {
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "LoadLocalSessions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::LoadCloudSessions
// Il2CppName: LoadCloudSessions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::SessionsManager::LoadCloudSessions)> {
  static const MethodInfo* get() {
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "LoadCloudSessions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::LoadCommunitySessions
// Il2CppName: LoadCommunitySessions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::SessionsManager::LoadCommunitySessions)> {
  static const MethodInfo* get() {
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "LoadCommunitySessions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::LoadDefaultSession
// Il2CppName: LoadDefaultSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)()>(&VROSC::SessionsManager::LoadDefaultSession)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "LoadDefaultSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::LoadSession
// Il2CppName: LoadSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW)>(&VROSC::SessionsManager::LoadSession)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "LoadSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::SaveSession
// Il2CppName: SaveSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, ::StringW, ::StringW, ::ArrayW<::StringW>)>(&VROSC::SessionsManager::SaveSession)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* displayName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* description = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* tags = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "SaveSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, displayName, description, tags});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::SaveSessionAs
// Il2CppName: SaveSessionAs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, ::StringW, ::ArrayW<::StringW>, bool, bool)>(&VROSC::SessionsManager::SaveSessionAs)> {
  static const MethodInfo* get() {
    static auto* displayName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* description = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* tags = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* isInCloud = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* isCommunity = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "SaveSessionAs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{displayName, description, tags, isInCloud, isCommunity});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::DeleteSession
// Il2CppName: DeleteSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW)>(&VROSC::SessionsManager::DeleteSession)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "DeleteSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::UpdateSavedSessionsVersion
// Il2CppName: UpdateSavedSessionsVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)()>(&VROSC::SessionsManager::UpdateSavedSessionsVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "UpdateSavedSessionsVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::GetSessionPreview
// Il2CppName: GetSessionPreview
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW)>(&VROSC::SessionsManager::GetSessionPreview)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "GetSessionPreview", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::SetPreview
// Il2CppName: SetPreview
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, bool, float, ::VROSC::Session::PreviewSource)>(&VROSC::SessionsManager::SetPreview)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* hasPreview = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* previewMultiplier = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* previewSource = &::il2cpp_utils::GetClassFromName("VROSC", "Session/PreviewSource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "SetPreview", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, hasPreview, previewMultiplier, previewSource});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::IsSessionMine
// Il2CppName: IsSessionMine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::SessionsManager::*)(::StringW)>(&VROSC::SessionsManager::IsSessionMine)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "IsSessionMine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::HasSessionWithDisplayName
// Il2CppName: HasSessionWithDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::SessionsManager::*)(::StringW, bool)>(&VROSC::SessionsManager::HasSessionWithDisplayName)> {
  static const MethodInfo* get() {
    static auto* displayName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isCommunity = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "HasSessionWithDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{displayName, isCommunity});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::AddSessionUpVote
// Il2CppName: AddSessionUpVote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, ::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::SessionsManager::AddSessionUpVote)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "AddSessionUpVote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::RemoveSessionUpVote
// Il2CppName: RemoveSessionUpVote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, ::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::SessionsManager::RemoveSessionUpVote)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "RemoveSessionUpVote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::AddSessionFavorite
// Il2CppName: AddSessionFavorite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, ::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::SessionsManager::AddSessionFavorite)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "AddSessionFavorite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::RemoveSessionFavorite
// Il2CppName: RemoveSessionFavorite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, ::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::SessionsManager::RemoveSessionFavorite)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "RemoveSessionFavorite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::AddSessionDownload
// Il2CppName: AddSessionDownload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, ::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::SessionsManager::AddSessionDownload)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "AddSessionDownload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::AddSessionPreviewPlay
// Il2CppName: AddSessionPreviewPlay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, ::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::SessionsManager::AddSessionPreviewPlay)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "AddSessionPreviewPlay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::AddFavoriteSessionToCommunityList
// Il2CppName: AddFavoriteSessionToCommunityList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::VROSC::Session*)>(&VROSC::SessionsManager::AddFavoriteSessionToCommunityList)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("VROSC", "Session")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "AddFavoriteSessionToCommunityList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::RemoveFavoriteSessionFromCommunityList
// Il2CppName: RemoveFavoriteSessionFromCommunityList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW)>(&VROSC::SessionsManager::RemoveFavoriteSessionFromCommunityList)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "RemoveFavoriteSessionFromCommunityList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::LoadSessionDataSuccess
// Il2CppName: LoadSessionDataSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, bool)>(&VROSC::SessionsManager::LoadSessionDataSuccess)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isDefaultSession = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "LoadSessionDataSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, isDefaultSession});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::LoadSessionDataFailure
// Il2CppName: LoadSessionDataFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, bool, ::VROSC::Error)>(&VROSC::SessionsManager::LoadSessionDataFailure)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isDefaultSession = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "LoadSessionDataFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, isDefaultSession, error});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::SessionDownloadSuccess
// Il2CppName: SessionDownloadSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW)>(&VROSC::SessionsManager::SessionDownloadSuccess)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "SessionDownloadSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::SessionDownloadFailure
// Il2CppName: SessionDownloadFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, ::VROSC::Error)>(&VROSC::SessionsManager::SessionDownloadFailure)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "SessionDownloadFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, error});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::SessionDownloadProgress
// Il2CppName: SessionDownloadProgress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, float)>(&VROSC::SessionsManager::SessionDownloadProgress)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* progress = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "SessionDownloadProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, progress});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::SaveSessionSuccess
// Il2CppName: SaveSessionSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW)>(&VROSC::SessionsManager::SaveSessionSuccess)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "SaveSessionSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::SaveSessionFailure
// Il2CppName: SaveSessionFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, ::VROSC::Error)>(&VROSC::SessionsManager::SaveSessionFailure)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "SaveSessionFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, error});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::SessionUploadSuccess
// Il2CppName: SessionUploadSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW)>(&VROSC::SessionsManager::SessionUploadSuccess)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "SessionUploadSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::SessionUploadFailure
// Il2CppName: SessionUploadFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, ::VROSC::Error)>(&VROSC::SessionsManager::SessionUploadFailure)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "SessionUploadFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, error});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::SessionUploadProgress
// Il2CppName: SessionUploadProgress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, float)>(&VROSC::SessionsManager::SessionUploadProgress)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* progress = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "SessionUploadProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, progress});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::SessionPreviewUploadProgress
// Il2CppName: SessionPreviewUploadProgress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, float)>(&VROSC::SessionsManager::SessionPreviewUploadProgress)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* progress = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "SessionPreviewUploadProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, progress});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::DeleteSessionSuccess
// Il2CppName: DeleteSessionSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW)>(&VROSC::SessionsManager::DeleteSessionSuccess)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "DeleteSessionSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::DeleteSessionFailure
// Il2CppName: DeleteSessionFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, ::VROSC::Error)>(&VROSC::SessionsManager::DeleteSessionFailure)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "DeleteSessionFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, error});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::PreviewLoadSuccess
// Il2CppName: PreviewLoadSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, ::UnityEngine::AudioClip*)>(&VROSC::SessionsManager::PreviewLoadSuccess)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* audioClip = &::il2cpp_utils::GetClassFromName("UnityEngine", "AudioClip")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "PreviewLoadSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, audioClip});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::PreviewLoadFailure
// Il2CppName: PreviewLoadFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, ::VROSC::Error)>(&VROSC::SessionsManager::PreviewLoadFailure)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "PreviewLoadFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, error});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::PreviewDownloadProgress
// Il2CppName: PreviewDownloadProgress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::StringW, float)>(&VROSC::SessionsManager::PreviewDownloadProgress)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* progress = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "PreviewDownloadProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, progress});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::GetSessionDataController
// Il2CppName: GetSessionDataController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::SessionsDataController* (VROSC::SessionsManager::*)(::StringW)>(&VROSC::SessionsManager::GetSessionDataController)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "GetSessionDataController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::$ValidateSessionsFiles$b__46_0
// Il2CppName: <ValidateSessionsFiles>b__46_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)()>(&VROSC::SessionsManager::$ValidateSessionsFiles$b__46_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "<ValidateSessionsFiles>b__46_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::$ValidateSessionsFiles$b__46_2
// Il2CppName: <ValidateSessionsFiles>b__46_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)()>(&VROSC::SessionsManager::$ValidateSessionsFiles$b__46_2)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "<ValidateSessionsFiles>b__46_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::$ValidateSessionsFiles$b__46_3
// Il2CppName: <ValidateSessionsFiles>b__46_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::VROSC::Error)>(&VROSC::SessionsManager::$ValidateSessionsFiles$b__46_3)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "<ValidateSessionsFiles>b__46_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::$ValidateSessionsFiles$b__46_1
// Il2CppName: <ValidateSessionsFiles>b__46_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)(::VROSC::Error)>(&VROSC::SessionsManager::$ValidateSessionsFiles$b__46_1)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "<ValidateSessionsFiles>b__46_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsManager::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsManager::*)()>(&VROSC::SessionsManager::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsManager*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
