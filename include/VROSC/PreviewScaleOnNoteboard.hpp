// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: VROSC.NoteBoard/VROSC.PlayAxis
#include "VROSC/NoteBoard_PlayAxis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: NoteBoardNoteController
  class NoteBoardNoteController;
  // Forward declaring type: ScaleRowUI
  class ScaleRowUI;
  // Forward declaring type: ScaleNoteButtonUI
  class ScaleNoteButtonUI;
  // Forward declaring type: Note
  struct Note;
  // Forward declaring type: Scale
  struct Scale;
  // Forward declaring type: NoteFieldNoteData
  class NoteFieldNoteData;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector3 because it is already included!
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: PreviewScaleOnNoteboard
  class PreviewScaleOnNoteboard;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::PreviewScaleOnNoteboard);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::PreviewScaleOnNoteboard*, "VROSC", "PreviewScaleOnNoteboard");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.PreviewScaleOnNoteboard
  // [TokenAttribute] Offset: FFFFFFFF
  class PreviewScaleOnNoteboard : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private VROSC.NoteBoardNoteController _noteboard
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::NoteBoardNoteController* noteboard;
    // Field size check
    static_assert(sizeof(::VROSC::NoteBoardNoteController*) == 0x8);
    // private VROSC.ScaleRowUI _scaleRow
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::ScaleRowUI* scaleRow;
    // Field size check
    static_assert(sizeof(::VROSC::ScaleRowUI*) == 0x8);
    // private VROSC.NoteBoard/VROSC.PlayAxis _axis
    // Size: 0x4
    // Offset: 0x28
    ::VROSC::NoteBoard::PlayAxis axis;
    // Field size check
    static_assert(sizeof(::VROSC::NoteBoard::PlayAxis) == 0x4);
    // private System.Single _highLightPower
    // Size: 0x4
    // Offset: 0x2C
    float highLightPower;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private VROSC.ScaleNoteButtonUI[] _noteButtons
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<::VROSC::ScaleNoteButtonUI*> noteButtons;
    // Field size check
    static_assert(sizeof(::ArrayW<::VROSC::ScaleNoteButtonUI*>) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.NoteBoardNoteController _noteboard
    [[deprecated]] ::VROSC::NoteBoardNoteController*& dyn__noteboard();
    // Get instance field reference: private VROSC.ScaleRowUI _scaleRow
    [[deprecated]] ::VROSC::ScaleRowUI*& dyn__scaleRow();
    // Get instance field reference: private VROSC.NoteBoard/VROSC.PlayAxis _axis
    [[deprecated]] ::VROSC::NoteBoard::PlayAxis& dyn__axis();
    // Get instance field reference: private System.Single _highLightPower
    [[deprecated]] float& dyn__highLightPower();
    // Get instance field reference: private VROSC.ScaleNoteButtonUI[] _noteButtons
    [[deprecated]] ::ArrayW<::VROSC::ScaleNoteButtonUI*>& dyn__noteButtons();
    // private System.Boolean get_Valid()
    // Offset: 0xAE5E0C
    bool get_Valid();
    // private System.Void Awake()
    // Offset: 0xAE5EA0
    void Awake();
    // private System.Void OnDestroy()
    // Offset: 0xAE6078
    void OnDestroy();
    // private System.Void LateUpdate()
    // Offset: 0xAE6228
    void LateUpdate();
    // private System.Void Hover(VROSC.Note note, System.Boolean hovering)
    // Offset: 0xAE622C
    void Hover(::VROSC::Note note, bool hovering);
    // private System.Void NotesChanged(System.Int32 axis, VROSC.Scale scale)
    // Offset: 0xAE6424
    void NotesChanged(int axis, ::VROSC::Scale scale);
    // private System.Void ShowNote(VROSC.Note note, System.Boolean hovering)
    // Offset: 0xAE627C
    void ShowNote(::VROSC::Note note, bool hovering);
    // private System.Void UpdateNoteTexts()
    // Offset: 0xAE6458
    void UpdateNoteTexts();
    // private System.Void HideAll()
    // Offset: 0xAE66C8
    void HideAll();
    // private System.Boolean ShouldHighlight(VROSC.NoteFieldNoteData data, VROSC.Note note)
    // Offset: 0xAE6590
    bool ShouldHighlight(::VROSC::NoteFieldNoteData* data, ::VROSC::Note note);
    // private UnityEngine.Vector3 HighlightColor()
    // Offset: 0xAE6680
    ::UnityEngine::Vector3 HighlightColor();
    // private System.Void OnEnable()
    // Offset: 0xAE685C
    void OnEnable();
    // private System.Void OnDisable()
    // Offset: 0xAE6860
    void OnDisable();
    // public System.Void .ctor()
    // Offset: 0xAE6864
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PreviewScaleOnNoteboard* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PreviewScaleOnNoteboard::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PreviewScaleOnNoteboard*, creationType>()));
    }
  }; // VROSC.PreviewScaleOnNoteboard
  #pragma pack(pop)
  static check_size<sizeof(PreviewScaleOnNoteboard), 48 + sizeof(::ArrayW<::VROSC::ScaleNoteButtonUI*>)> __VROSC_PreviewScaleOnNoteboardSizeCheck;
  static_assert(sizeof(PreviewScaleOnNoteboard) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::PreviewScaleOnNoteboard::get_Valid
// Il2CppName: get_Valid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::PreviewScaleOnNoteboard::*)()>(&VROSC::PreviewScaleOnNoteboard::get_Valid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::PreviewScaleOnNoteboard*), "get_Valid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::PreviewScaleOnNoteboard::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PreviewScaleOnNoteboard::*)()>(&VROSC::PreviewScaleOnNoteboard::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::PreviewScaleOnNoteboard*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::PreviewScaleOnNoteboard::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PreviewScaleOnNoteboard::*)()>(&VROSC::PreviewScaleOnNoteboard::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::PreviewScaleOnNoteboard*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::PreviewScaleOnNoteboard::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PreviewScaleOnNoteboard::*)()>(&VROSC::PreviewScaleOnNoteboard::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::PreviewScaleOnNoteboard*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::PreviewScaleOnNoteboard::Hover
// Il2CppName: Hover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PreviewScaleOnNoteboard::*)(::VROSC::Note, bool)>(&VROSC::PreviewScaleOnNoteboard::Hover)> {
  static const MethodInfo* get() {
    static auto* note = &::il2cpp_utils::GetClassFromName("VROSC", "Note")->byval_arg;
    static auto* hovering = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::PreviewScaleOnNoteboard*), "Hover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{note, hovering});
  }
};
// Writing MetadataGetter for method: VROSC::PreviewScaleOnNoteboard::NotesChanged
// Il2CppName: NotesChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PreviewScaleOnNoteboard::*)(int, ::VROSC::Scale)>(&VROSC::PreviewScaleOnNoteboard::NotesChanged)> {
  static const MethodInfo* get() {
    static auto* axis = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("VROSC", "Scale")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::PreviewScaleOnNoteboard*), "NotesChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{axis, scale});
  }
};
// Writing MetadataGetter for method: VROSC::PreviewScaleOnNoteboard::ShowNote
// Il2CppName: ShowNote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PreviewScaleOnNoteboard::*)(::VROSC::Note, bool)>(&VROSC::PreviewScaleOnNoteboard::ShowNote)> {
  static const MethodInfo* get() {
    static auto* note = &::il2cpp_utils::GetClassFromName("VROSC", "Note")->byval_arg;
    static auto* hovering = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::PreviewScaleOnNoteboard*), "ShowNote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{note, hovering});
  }
};
// Writing MetadataGetter for method: VROSC::PreviewScaleOnNoteboard::UpdateNoteTexts
// Il2CppName: UpdateNoteTexts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PreviewScaleOnNoteboard::*)()>(&VROSC::PreviewScaleOnNoteboard::UpdateNoteTexts)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::PreviewScaleOnNoteboard*), "UpdateNoteTexts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::PreviewScaleOnNoteboard::HideAll
// Il2CppName: HideAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PreviewScaleOnNoteboard::*)()>(&VROSC::PreviewScaleOnNoteboard::HideAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::PreviewScaleOnNoteboard*), "HideAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::PreviewScaleOnNoteboard::ShouldHighlight
// Il2CppName: ShouldHighlight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::PreviewScaleOnNoteboard::*)(::VROSC::NoteFieldNoteData*, ::VROSC::Note)>(&VROSC::PreviewScaleOnNoteboard::ShouldHighlight)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("VROSC", "NoteFieldNoteData")->byval_arg;
    static auto* note = &::il2cpp_utils::GetClassFromName("VROSC", "Note")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::PreviewScaleOnNoteboard*), "ShouldHighlight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, note});
  }
};
// Writing MetadataGetter for method: VROSC::PreviewScaleOnNoteboard::HighlightColor
// Il2CppName: HighlightColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (VROSC::PreviewScaleOnNoteboard::*)()>(&VROSC::PreviewScaleOnNoteboard::HighlightColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::PreviewScaleOnNoteboard*), "HighlightColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::PreviewScaleOnNoteboard::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PreviewScaleOnNoteboard::*)()>(&VROSC::PreviewScaleOnNoteboard::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::PreviewScaleOnNoteboard*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::PreviewScaleOnNoteboard::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PreviewScaleOnNoteboard::*)()>(&VROSC::PreviewScaleOnNoteboard::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::PreviewScaleOnNoteboard*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::PreviewScaleOnNoteboard::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
