// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: LoopStation
  class LoopStation;
  // Forward declaring type: LoopStationLoopHandler
  class LoopStationLoopHandler;
  // Forward declaring type: LoopStationGroupCore
  class LoopStationGroupCore;
  // Forward declaring type: LoopPlayer
  class LoopPlayer;
  // Forward declaring type: LoopStationGroup
  class LoopStationGroup;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: LoopStationSoloHandler
  class LoopStationSoloHandler;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::LoopStationSoloHandler);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::LoopStationSoloHandler*, "VROSC", "LoopStationSoloHandler");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.LoopStationSoloHandler
  // [TokenAttribute] Offset: FFFFFFFF
  class LoopStationSoloHandler : public ::Il2CppObject {
    public:
    public:
    // private VROSC.LoopStation _loopStation
    // Size: 0x8
    // Offset: 0x10
    ::VROSC::LoopStation* loopStation;
    // Field size check
    static_assert(sizeof(::VROSC::LoopStation*) == 0x8);
    // private VROSC.LoopStationLoopHandler _loopHandler
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::LoopStationLoopHandler* loopHandler;
    // Field size check
    static_assert(sizeof(::VROSC::LoopStationLoopHandler*) == 0x8);
    // private VROSC.LoopStationGroupCore _loopGroupCore
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::LoopStationGroupCore* loopGroupCore;
    // Field size check
    static_assert(sizeof(::VROSC::LoopStationGroupCore*) == 0x8);
    // private System.Collections.Generic.List`1<VROSC.LoopPlayer> _soloTracks
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::List_1<::VROSC::LoopPlayer*>* soloTracks;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::VROSC::LoopPlayer*>*) == 0x8);
    // private System.Collections.Generic.List`1<VROSC.LoopPlayer> _loops
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::List_1<::VROSC::LoopPlayer*>* loops;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::VROSC::LoopPlayer*>*) == 0x8);
    // private System.Collections.Generic.List`1<VROSC.LoopStationGroup> _groups
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>* groups;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>*) == 0x8);
    // private System.Collections.Generic.List`1<VROSC.LoopStationGroup> _soloGroups
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>* soloGroups;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>*) == 0x8);
    public:
    // Get instance field reference: private VROSC.LoopStation _loopStation
    [[deprecated]] ::VROSC::LoopStation*& dyn__loopStation();
    // Get instance field reference: private VROSC.LoopStationLoopHandler _loopHandler
    [[deprecated]] ::VROSC::LoopStationLoopHandler*& dyn__loopHandler();
    // Get instance field reference: private VROSC.LoopStationGroupCore _loopGroupCore
    [[deprecated]] ::VROSC::LoopStationGroupCore*& dyn__loopGroupCore();
    // Get instance field reference: private System.Collections.Generic.List`1<VROSC.LoopPlayer> _soloTracks
    [[deprecated]] ::System::Collections::Generic::List_1<::VROSC::LoopPlayer*>*& dyn__soloTracks();
    // Get instance field reference: private System.Collections.Generic.List`1<VROSC.LoopPlayer> _loops
    [[deprecated]] ::System::Collections::Generic::List_1<::VROSC::LoopPlayer*>*& dyn__loops();
    // Get instance field reference: private System.Collections.Generic.List`1<VROSC.LoopStationGroup> _groups
    [[deprecated]] ::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>*& dyn__groups();
    // Get instance field reference: private System.Collections.Generic.List`1<VROSC.LoopStationGroup> _soloGroups
    [[deprecated]] ::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>*& dyn__soloGroups();
    // public System.Void .ctor(VROSC.LoopStation loopStation)
    // Offset: 0x197833C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoopStationSoloHandler* New_ctor(::VROSC::LoopStation* loopStation) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationSoloHandler::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoopStationSoloHandler*, creationType>(loopStation)));
    }
    // private System.Void LoopRecorded(VROSC.LoopPlayer newLoop)
    // Offset: 0x1978940
    void LoopRecorded(::VROSC::LoopPlayer* newLoop);
    // private System.Void LoopDestroyed(VROSC.LoopPlayer loopToDestroy, System.Boolean fromReset)
    // Offset: 0x1978A38
    void LoopDestroyed(::VROSC::LoopPlayer* loopToDestroy, bool fromReset);
    // private System.Void UpdateAllTracks()
    // Offset: 0x1978BBC
    void UpdateAllTracks();
    // private System.Void LoopSoloChanged(VROSC.LoopPlayer loopPlayer, System.Boolean soloEnabled)
    // Offset: 0x1978F08
    void LoopSoloChanged(::VROSC::LoopPlayer* loopPlayer, bool soloEnabled);
    // private System.Void GroupSoloChanged(VROSC.LoopStationGroup group, System.Boolean soloEnabled)
    // Offset: 0x1978FA0
    void GroupSoloChanged(::VROSC::LoopStationGroup* group, bool soloEnabled);
    // private System.Void GroupCreated(VROSC.LoopStationGroup group)
    // Offset: 0x1979038
    void GroupCreated(::VROSC::LoopStationGroup* group);
    // private System.Void GroupRemoved(VROSC.LoopStationGroup group)
    // Offset: 0x1979130
    void GroupRemoved(::VROSC::LoopStationGroup* group);
    // private System.Boolean LoopIsInASoloGroup(VROSC.LoopPlayer loop)
    // Offset: 0x1978D94
    bool LoopIsInASoloGroup(::VROSC::LoopPlayer* loop);
    // protected override System.Void Finalize()
    // Offset: 0x197865C
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // VROSC.LoopStationSoloHandler
  #pragma pack(pop)
  static check_size<sizeof(LoopStationSoloHandler), 64 + sizeof(::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>*)> __VROSC_LoopStationSoloHandlerSizeCheck;
  static_assert(sizeof(LoopStationSoloHandler) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::LoopStationSoloHandler::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::LoopStationSoloHandler::LoopRecorded
// Il2CppName: LoopRecorded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationSoloHandler::*)(::VROSC::LoopPlayer*)>(&VROSC::LoopStationSoloHandler::LoopRecorded)> {
  static const MethodInfo* get() {
    static auto* newLoop = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationSoloHandler*), "LoopRecorded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newLoop});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationSoloHandler::LoopDestroyed
// Il2CppName: LoopDestroyed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationSoloHandler::*)(::VROSC::LoopPlayer*, bool)>(&VROSC::LoopStationSoloHandler::LoopDestroyed)> {
  static const MethodInfo* get() {
    static auto* loopToDestroy = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlayer")->byval_arg;
    static auto* fromReset = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationSoloHandler*), "LoopDestroyed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{loopToDestroy, fromReset});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationSoloHandler::UpdateAllTracks
// Il2CppName: UpdateAllTracks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationSoloHandler::*)()>(&VROSC::LoopStationSoloHandler::UpdateAllTracks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationSoloHandler*), "UpdateAllTracks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationSoloHandler::LoopSoloChanged
// Il2CppName: LoopSoloChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationSoloHandler::*)(::VROSC::LoopPlayer*, bool)>(&VROSC::LoopStationSoloHandler::LoopSoloChanged)> {
  static const MethodInfo* get() {
    static auto* loopPlayer = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlayer")->byval_arg;
    static auto* soloEnabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationSoloHandler*), "LoopSoloChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{loopPlayer, soloEnabled});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationSoloHandler::GroupSoloChanged
// Il2CppName: GroupSoloChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationSoloHandler::*)(::VROSC::LoopStationGroup*, bool)>(&VROSC::LoopStationSoloHandler::GroupSoloChanged)> {
  static const MethodInfo* get() {
    static auto* group = &::il2cpp_utils::GetClassFromName("VROSC", "LoopStationGroup")->byval_arg;
    static auto* soloEnabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationSoloHandler*), "GroupSoloChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{group, soloEnabled});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationSoloHandler::GroupCreated
// Il2CppName: GroupCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationSoloHandler::*)(::VROSC::LoopStationGroup*)>(&VROSC::LoopStationSoloHandler::GroupCreated)> {
  static const MethodInfo* get() {
    static auto* group = &::il2cpp_utils::GetClassFromName("VROSC", "LoopStationGroup")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationSoloHandler*), "GroupCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{group});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationSoloHandler::GroupRemoved
// Il2CppName: GroupRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationSoloHandler::*)(::VROSC::LoopStationGroup*)>(&VROSC::LoopStationSoloHandler::GroupRemoved)> {
  static const MethodInfo* get() {
    static auto* group = &::il2cpp_utils::GetClassFromName("VROSC", "LoopStationGroup")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationSoloHandler*), "GroupRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{group});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationSoloHandler::LoopIsInASoloGroup
// Il2CppName: LoopIsInASoloGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::LoopStationSoloHandler::*)(::VROSC::LoopPlayer*)>(&VROSC::LoopStationSoloHandler::LoopIsInASoloGroup)> {
  static const MethodInfo* get() {
    static auto* loop = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationSoloHandler*), "LoopIsInASoloGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{loop});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationSoloHandler::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationSoloHandler::*)()>(&VROSC::LoopStationSoloHandler::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationSoloHandler*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
