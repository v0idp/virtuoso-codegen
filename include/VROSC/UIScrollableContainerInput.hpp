// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.UIInteractable
#include "VROSC/UIInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: UIScrollableContainer
  class UIScrollableContainer;
  // Forward declaring type: ClickData
  class ClickData;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector3 because it is already included!
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: UIScrollableContainerInput
  class UIScrollableContainerInput;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::UIScrollableContainerInput);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::UIScrollableContainerInput*, "VROSC", "UIScrollableContainerInput");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0xA0
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.UIScrollableContainerInput
  // [TokenAttribute] Offset: FFFFFFFF
  class UIScrollableContainerInput : public ::VROSC::UIInteractable {
    public:
    public:
    // private VROSC.UIScrollableContainer _scrollableContainer
    // Size: 0x8
    // Offset: 0x88
    ::VROSC::UIScrollableContainer* scrollableContainer;
    // Field size check
    static_assert(sizeof(::VROSC::UIScrollableContainer*) == 0x8);
    // public System.Action`1<System.Int32> OnItemClicked
    // Size: 0x8
    // Offset: 0x90
    ::System::Action_1<int>* OnItemClicked;
    // Field size check
    static_assert(sizeof(::System::Action_1<int>*) == 0x8);
    // public System.Action`1<System.Int32> OnItemHoverChanged
    // Size: 0x8
    // Offset: 0x98
    ::System::Action_1<int>* OnItemHoverChanged;
    // Field size check
    static_assert(sizeof(::System::Action_1<int>*) == 0x8);
    public:
    // Get instance field reference: private VROSC.UIScrollableContainer _scrollableContainer
    [[deprecated("Use field access instead!")]] ::VROSC::UIScrollableContainer*& dyn__scrollableContainer();
    // Get instance field reference: public System.Action`1<System.Int32> OnItemClicked
    [[deprecated("Use field access instead!")]] ::System::Action_1<int>*& dyn_OnItemClicked();
    // Get instance field reference: public System.Action`1<System.Int32> OnItemHoverChanged
    [[deprecated("Use field access instead!")]] ::System::Action_1<int>*& dyn_OnItemHoverChanged();
    // private System.Void OnEnable()
    // Offset: 0x1914F4C
    void OnEnable();
    // private System.Void HoverStayChanged()
    // Offset: 0x19151B4
    void HoverStayChanged();
    // private System.Void ItemWasPressed(VROSC.ClickData clickData)
    // Offset: 0x19153AC
    void ItemWasPressed(::VROSC::ClickData* clickData);
    // private System.Int32 GetItemByPosition(UnityEngine.Vector3 worldPosition)
    // Offset: 0x1915228
    int GetItemByPosition(::UnityEngine::Vector3 worldPosition);
    // public override System.Boolean get_InteractionStopsLaser()
    // Offset: 0x1914F44
    // Implemented from: VROSC.UIInteractable
    // Base method: System.Boolean UIInteractable::get_InteractionStopsLaser()
    bool get_InteractionStopsLaser();
    // public System.Void .ctor()
    // Offset: 0x1915438
    // Implemented from: VROSC.UIInteractable
    // Base method: System.Void UIInteractable::.ctor()
    // Base method: System.Void Clickable::.ctor()
    // Base method: System.Void Interactable::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UIScrollableContainerInput* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::UIScrollableContainerInput::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UIScrollableContainerInput*, creationType>()));
    }
    // protected override System.Void OnDisable()
    // Offset: 0x191507C
    // Implemented from: VROSC.Interactable
    // Base method: System.Void Interactable::OnDisable()
    void OnDisable();
  }; // VROSC.UIScrollableContainerInput
  #pragma pack(pop)
  static check_size<sizeof(UIScrollableContainerInput), 152 + sizeof(::System::Action_1<int>*)> __VROSC_UIScrollableContainerInputSizeCheck;
  static_assert(sizeof(UIScrollableContainerInput) == 0xA0);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::UIScrollableContainerInput::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UIScrollableContainerInput::*)()>(&VROSC::UIScrollableContainerInput::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UIScrollableContainerInput*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UIScrollableContainerInput::HoverStayChanged
// Il2CppName: HoverStayChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UIScrollableContainerInput::*)()>(&VROSC::UIScrollableContainerInput::HoverStayChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UIScrollableContainerInput*), "HoverStayChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UIScrollableContainerInput::ItemWasPressed
// Il2CppName: ItemWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UIScrollableContainerInput::*)(::VROSC::ClickData*)>(&VROSC::UIScrollableContainerInput::ItemWasPressed)> {
  static const MethodInfo* get() {
    static auto* clickData = &::il2cpp_utils::GetClassFromName("VROSC", "ClickData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UIScrollableContainerInput*), "ItemWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clickData});
  }
};
// Writing MetadataGetter for method: VROSC::UIScrollableContainerInput::GetItemByPosition
// Il2CppName: GetItemByPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::UIScrollableContainerInput::*)(::UnityEngine::Vector3)>(&VROSC::UIScrollableContainerInput::GetItemByPosition)> {
  static const MethodInfo* get() {
    static auto* worldPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UIScrollableContainerInput*), "GetItemByPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{worldPosition});
  }
};
// Writing MetadataGetter for method: VROSC::UIScrollableContainerInput::get_InteractionStopsLaser
// Il2CppName: get_InteractionStopsLaser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::UIScrollableContainerInput::*)()>(&VROSC::UIScrollableContainerInput::get_InteractionStopsLaser)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UIScrollableContainerInput*), "get_InteractionStopsLaser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UIScrollableContainerInput::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::UIScrollableContainerInput::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UIScrollableContainerInput::*)()>(&VROSC::UIScrollableContainerInput::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UIScrollableContainerInput*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
